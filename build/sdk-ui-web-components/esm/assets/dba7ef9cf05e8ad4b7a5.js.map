{"version":3,"file":"assets/dba7ef9cf05e8ad4b7a5.js","mappings":"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","sources":["webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/ldmFactories/builder.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-spi/esm/workspace/attributes/elements/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-spi/esm/workspace/dashboards/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/accessControl/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/drill.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/filterContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/layout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/widget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/ldm/catalog/dateDataset/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/ldm/metadata/attribute/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/ldm/metadata/types.js"],"sourcesContent":["// (C) 2019-2021 GoodData Corporation\n/**\n * We are using Builder pattern to create sdk-model objects https://en.wikipedia.org/wiki/Builder_pattern\n * Each sdk-model should have its own builder, and you should use it.\n *\n * This class serves to:\n * - unify all builders & builder factories across our codebase\n * - hold all common methods and properties of builders (e.g. item & build)\n *\n * @beta\n */\nexport class Builder {\n    constructor(item, validator) {\n        this.item = item;\n        this.validator = validator;\n    }\n    build() {\n        return this.item;\n    }\n    modify(modifications) {\n        this.item = modifications(this).build();\n        return this;\n    }\n    validate() {\n        if (typeof this.validator !== \"function\") {\n            throw new Error(\"Validator was not provided!\");\n        }\n        this.validator(this.item);\n        return this;\n    }\n}\n/**\n * Calls an update callback when it's a function, otherwise returns the value itself.\n * This is just an utility function to DRY the builder implementation a bit.\n *\n * @alpha\n * @param valueOrUpdateCallback - value to set, or update callback\n * @param valueToUpdate - original value to update\n */\nexport const resolveValueOrUpdateCallback = (valueOrUpdateCallback, valueToUpdate) => \n// typeof === \"function\" does not work here\n// Related issue: https://github.com/microsoft/TypeScript/issues/37663\nvalueOrUpdateCallback instanceof Function ? valueOrUpdateCallback(valueToUpdate) : valueOrUpdateCallback;\n/**\n * Generic builder factory to create sdk-model objects using builder pattern\n *\n * @beta\n */\nexport function builderFactory(Builder, defaultItem, modifications) {\n    const builder = new Builder(defaultItem);\n    return modifications(builder).build();\n}\n//# sourceMappingURL=builder.js.map","/**\n * Type guard checking whether the object is an instance of {@link IElementsQueryOptionsElementsByValue}.\n *\n * @public\n */\nexport function isElementsQueryOptionsElementsByValue(obj) {\n    return !!obj && !!obj.values;\n}\n/**\n * Type guard checking whether the object is an instance of {@link IElementsQueryOptionsElementsByPrimaryDisplayFormValue}.\n *\n * @public\n */\nexport function isElementsQueryOptionsElementsByPrimaryDisplayFormValue(obj) {\n    return !!obj && !!obj.primaryValues;\n}\n/**\n * Type guard checking whether the object is an instance of {@link IElementsQueryOptionsElementsByValue} or {@link IElementsQueryOptionsElementsByPrimaryDisplayFormValue}.\n *\n * @public\n */\nexport function isValueBasedElementsQueryOptionsElements(obj) {\n    return (isElementsQueryOptionsElementsByValue(obj) ||\n        isElementsQueryOptionsElementsByPrimaryDisplayFormValue(obj));\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isWidget, isWidgetDefinition, isDashboardLayout, } from \"@gooddata/sdk-model\";\nimport noop from \"lodash/noop.js\";\n/**\n * Has dashboard layout only empty sections and widgets?\n * @alpha\n */\nexport const isDashboardLayoutEmpty = (layout) => {\n    return layout.sections.every((section) => section.items.length === 0);\n};\n/**\n * Walk dashboard layout\n * This is useful to collect widgets from the layout or perform transforms on the layout\n *\n * @alpha\n * @param layout - dashboard layout\n * @param callbacks - walk callbacks\n * @returns void\n */\nexport function walkLayout(layout, { sectionCallback = noop, itemCallback = noop, widgetCallback = noop, }, path = [\"sections\"]) {\n    layout.sections.forEach((section, sectionIndex) => {\n        const sectionPath = [...path, sectionIndex];\n        sectionCallback(section, sectionPath);\n        section.items.forEach((item, widgetIndex) => {\n            const itemPath = [...sectionPath, \"items\", widgetIndex];\n            itemCallback(item, itemPath);\n            if (isWidget(item.widget) || isWidgetDefinition(item.widget)) {\n                const widgetPath = [...itemPath, \"widget\"];\n                widgetCallback(item.widget, widgetPath);\n            }\n            else if (isDashboardLayout(item.widget)) {\n                // is another layout\n                walkLayout(item.widget, {\n                    sectionCallback,\n                    itemCallback,\n                    widgetCallback,\n                }, [...itemPath, \"widget\", \"sections\"]);\n            }\n        });\n    });\n}\n/**\n * Get all dashboard widgets\n * (layout does not only specify rendering, but also all used widgets)\n *\n * @alpha\n * @param layout - dashboard layout\n * @param collectedWidgets - bag for collecting widgets recursively from the layout\n * @returns - widgets with layout paths\n */\nexport function layoutWidgetsWithPaths(layout) {\n    const collectedWidgets = [];\n    walkLayout(layout, {\n        widgetCallback: (widget, path) => collectedWidgets.push({\n            widget,\n            path,\n        }),\n    });\n    return collectedWidgets;\n}\n/**\n * Get all dashboard widgets\n * (layout does not only specify rendering, but also all used widgets)\n *\n * @alpha\n * @param layout - dashboard layout\n * @returns - widgets\n */\nexport function layoutWidgets(layout) {\n    const collectedWidgets = [];\n    walkLayout(layout, {\n        widgetCallback: (widget) => collectedWidgets.push(widget),\n    });\n    return collectedWidgets;\n}\n//# sourceMappingURL=utils.js.map","// (C) 2021-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Tests whether the provided object is an instance of {@link IUserAccess}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isUserAccess = (obj) => {\n    return !isEmpty(obj) && obj.type === \"user\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IUserGroupAccess}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isUserGroupAccess = (obj) => {\n    return !isEmpty(obj) && obj.type === \"group\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IGranularUserAccess}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isGranularUserAccess = (obj) => {\n    return !isEmpty(obj) && obj.type === \"granularUser\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IGranularUserAccess}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isGranularUserGroupAccess = (obj) => {\n    return !isEmpty(obj) && obj.type === \"granularGroup\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IGranularUserAccess} or {@link IGranularUserGroupAccess}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isGranularAccess = (obj) => {\n    return isGranularUserAccess(obj) || isGranularUserGroupAccess(obj);\n};\n/**\n * Tests whether the provided object is an instance of {@link IUserAccessGrantee}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isUserAccessGrantee = (obj) => {\n    return !isEmpty(obj) && obj.type === \"user\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IUserGroupAccessGrantee}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isUserGroupAccessGrantee = (obj) => {\n    return !isEmpty(obj) && obj.type === \"group\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IGranularUserAccessGrantee}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isGranularUserAccessGrantee = (obj) => {\n    return !isEmpty(obj) && obj.type === \"granularUser\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IGranularUserGroupAccessGrantee}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isGranularUserGroupAccessGrantee = (obj) => {\n    return !isEmpty(obj) && obj.type === \"granularGroup\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IGranularAccessGrantee}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isGranularAccessGrantee = (obj) => {\n    return isGranularUserAccessGrantee(obj) || isGranularUserGroupAccessGrantee(obj);\n};\n/**\n * Tests whether the provided object is an instance of {@link IAvailableUserAccessGrantee}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isAvailableUserAccessGrantee = (obj) => {\n    return !isEmpty(obj) && obj.type === \"user\";\n};\n/**\n * Tests whether the provided object is an instance of {@link IAvailableUserGroupAccessGrantee}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isAvailableUserGroupAccessGrantee = (obj) => {\n    return !isEmpty(obj) && obj.type === \"group\";\n};\n//# sourceMappingURL=index.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillFromMeasure}.\n * @alpha\n */\nexport function isDrillFromMeasure(obj) {\n    return !isEmpty(obj) && obj.type === \"drillFromMeasure\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillFromAttribute}.\n * @alpha\n */\nexport function isDrillFromAttribute(obj) {\n    return !isEmpty(obj) && obj.type === \"drillFromAttribute\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillToLegacyDashboard}.\n * @alpha\n */\nexport function isDrillToLegacyDashboard(obj) {\n    return !isEmpty(obj) && obj.type === \"drillToLegacyDashboard\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillToDashboard}.\n * @alpha\n */\nexport function isDrillToDashboard(obj) {\n    return !isEmpty(obj) && obj.type === \"drillToDashboard\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillToInsight}.\n * @alpha\n */\nexport function isDrillToInsight(obj) {\n    return !isEmpty(obj) && obj.type === \"drillToInsight\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillToCustomUrl}.\n * @alpha\n */\nexport function isDrillToCustomUrl(obj) {\n    return !isEmpty(obj) && obj.type === \"drillToCustomUrl\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillToAttributeUrl}.\n * @alpha\n */\nexport function isDrillToAttributeUrl(obj) {\n    return !isEmpty(obj) && obj.type === \"drillToAttributeUrl\";\n}\n//# sourceMappingURL=drill.js.map","// (C) 2019-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isNil from \"lodash/isNil.js\";\nimport { isAttributeElementsByRef } from \"../execution/filter/index.js\";\nimport { isObjRef } from \"../objRef/index.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardAttributeFilter}.\n * @alpha\n */\nexport function isDashboardAttributeFilter(obj) {\n    return !isEmpty(obj) && !!obj.attributeFilter;\n}\n/**\n * Returns true when given filter has selection mode set to single\n * @alpha\n */\nexport function isSingleSelectionFilter(filter) {\n    return filter.attributeFilter.selectionMode === \"single\";\n}\n/**\n * Returns true when given filter has negative selection\n * @alpha\n */\nexport function isNegativeAttributeFilter(filter) {\n    return !!filter.attributeFilter.negativeSelection;\n}\n/**\n * Returns count of selected elements\n * @alpha\n */\nexport function getSelectedElementsCount(filter) {\n    return isAttributeElementsByRef(filter.attributeFilter.attributeElements)\n        ? filter.attributeFilter.attributeElements.uris.length\n        : filter.attributeFilter.attributeElements.values.length;\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardDateFilter}.\n * @alpha\n */\nexport function isDashboardDateFilter(obj) {\n    return !isEmpty(obj) && !!obj.dateFilter;\n}\n/**\n * Returns true when given date filter has type set to relative.\n * @alpha\n */\nexport function isRelativeDashboardDateFilter(dateFilter) {\n    return dateFilter.dateFilter.type === \"relative\";\n}\n/**\n * Returns true when given date filter has type set to absolute.\n * @alpha\n */\nexport function isAbsoluteDashboardDateFilter(dateFilter) {\n    return dateFilter.dateFilter.type === \"absolute\";\n}\n/**\n * Creates a new relative dashboard date filter.\n *\n * @param granularity - granularity of the filters (month, year, etc.)\n * @param from - start of the interval – negative numbers mean the past, zero means today, positive numbers mean the future\n * @param to - end of the interval – negative numbers mean the past, zero means today, positive numbers mean the future\n * @alpha\n */\nexport function newRelativeDashboardDateFilter(granularity, from, to) {\n    return {\n        dateFilter: {\n            type: \"relative\",\n            granularity,\n            from,\n            to,\n        },\n    };\n}\n/**\n * Creates a new absolute dashboard date filter.\n *\n * @param from - start of the interval in ISO-8601 calendar date format\n * @param to - end of the interval in ISO-8601 calendar date format\n * @alpha\n */\nexport function newAbsoluteDashboardDateFilter(from, to) {\n    return {\n        dateFilter: {\n            type: \"absolute\",\n            granularity: \"GDC.time.date\",\n            from,\n            to,\n        },\n    };\n}\n/**\n * Creates a new all time date filter. This filter is used to indicate that there should be no filtering on the dates.\n *\n * @alpha\n */\nexport function newAllTimeDashboardDateFilter() {\n    return {\n        dateFilter: {\n            type: \"relative\",\n            granularity: \"GDC.time.date\",\n        },\n    };\n}\n/**\n * Type-guard testing whether the provided object is an All time dashboard date filter.\n * @alpha\n */\nexport function isAllTimeDashboardDateFilter(obj) {\n    return isDashboardDateFilter(obj) && isNil(obj.dateFilter.from) && isNil(obj.dateFilter.to);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IFilterContextDefinition}.\n * @alpha\n */\nexport function isFilterContextDefinition(obj) {\n    // Currently, we have no better way to distinguish between IFilterContext and ITempFilterContext\n    return hasFilterContextBaseProps(obj) && !isObjRef(obj.ref);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IFilterContext}.\n * @alpha\n */\nexport function isFilterContext(obj) {\n    // Currently, we have no better way to distinguish between IFilterContext and ITempFilterContext\n    return hasFilterContextBaseProps(obj) && isObjRef(obj.ref);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link ITempFilterContext}.\n * @alpha\n */\nexport function isTempFilterContext(obj) {\n    // Currently, we have no better way to distinguish between IFilterContext and ITempFilterContext\n    return (hasFilterContextBaseProps(obj) &&\n        isObjRef(obj.ref) &&\n        !obj.identifier &&\n        !obj.title);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardDateFilterReference}.\n * @alpha\n */\nexport function isDashboardDateFilterReference(obj) {\n    return !isEmpty(obj) && obj.type === \"dateFilterReference\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardAttributeFilterReference}.\n * @alpha\n */\nexport function isDashboardAttributeFilterReference(obj) {\n    return !isEmpty(obj) && obj.type === \"attributeFilterReference\";\n}\n/**\n * Gets reference to object being used for filtering. For attribute filters, this will be reference to the display\n * form. For date filters this will be reference to the data set.\n *\n * @alpha\n */\nexport function dashboardFilterReferenceObjRef(ref) {\n    return isDashboardAttributeFilterReference(ref) ? ref.displayForm : ref.dataSet;\n}\n/**\n * @internal\n */\nfunction hasFilterContextBaseProps(obj) {\n    return !isEmpty(obj) && !!obj.filters;\n}\n//# sourceMappingURL=filterContext.js.map","// (C) 2019-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isArray from \"lodash/isArray.js\";\nimport { isWidget, isWidgetDefinition } from \"./widget.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardWidget}.\n * @alpha\n */\nexport const isDashboardWidget = (obj) => [isDashboardLayout, isWidget, isWidgetDefinition].some((guard) => guard(obj));\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardLayoutItem}.\n * @alpha\n */\nexport function isDashboardLayoutItem(obj) {\n    var _a, _b;\n    return !isEmpty(obj) && typeof ((_b = (_a = obj.size) === null || _a === void 0 ? void 0 : _a.xl) === null || _b === void 0 ? void 0 : _b.gridWidth) === \"number\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardLayout}.\n * @alpha\n */\nexport function isDashboardLayout(obj) {\n    return !isEmpty(obj) && obj.type === \"IDashboardLayout\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardLayoutSection}.\n * @alpha\n */\nexport function isDashboardLayoutSection(obj) {\n    return !isEmpty(obj) && isArray(obj.items);\n}\n//# sourceMappingURL=layout.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { invariant } from \"ts-invariant\";\nimport { isObjRef } from \"../objRef/index.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IWidgetDefinition}.\n * @alpha\n */\nexport function isWidgetDefinition(obj) {\n    return hasWidgetProps(obj) && !isObjRef(obj.ref);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IWidget}.\n * @alpha\n */\nexport function isWidget(obj) {\n    return hasWidgetProps(obj) && isObjRef(obj.ref);\n}\n/**\n * @internal\n */\nfunction hasWidgetProps(obj) {\n    return (!isEmpty(obj) &&\n        (obj.type === \"kpi\" || obj.type === \"insight\"));\n}\n/**\n * Gets the widget identifier\n *\n * @param widget - widget to get identifier of\n * @returns the widget identifier\n * @alpha\n */\nexport function widgetId(widget) {\n    invariant(widget, \"widget to get identifier of must be specified\");\n    return widget.identifier;\n}\n/**\n * Gets the widget uri\n *\n * @param widget - widget to get uri of\n * @returns the widget uri\n * @alpha\n */\nexport function widgetUri(widget) {\n    invariant(widget, \"widget to get uri of must be specified\");\n    return widget.uri;\n}\n/**\n * Gets the widget ref\n *\n * @param widget - widget to get ref of\n * @returns the widget ref\n * @alpha\n */\nexport function widgetRef(widget) {\n    invariant(widget, \"widget to get ref of must be specified\");\n    return widget.ref;\n}\n/**\n * Gets the widget type\n *\n * @param widget - widget to get type of\n * @returns the widget type\n * @alpha\n */\nexport function widgetType(widget) {\n    invariant(widget, \"widget to get type of must be specified\");\n    return widget.type;\n}\n/**\n * Gets the widget title\n *\n * @param widget - widget to get title of\n * @returns the widget title\n * @alpha\n */\nexport function widgetTitle(widget) {\n    invariant(widget, \"widget to get title of must be specified\");\n    return widget.title;\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IInsightWidget}.\n * @alpha\n */\nexport function isInsightWidget(obj) {\n    return isWidget(obj) && obj.type === \"insight\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IInsightWidgetDefinition}.\n * @alpha\n */\nexport function isInsightWidgetDefinition(obj) {\n    return isWidgetDefinition(obj) && obj.type === \"insight\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpiWidget}.\n * @alpha\n */\nexport function isKpiWidget(obj) {\n    return isWidget(obj) && obj.type === \"kpi\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpiWidget}.\n * @alpha\n */\nexport function isKpiWidgetDefinition(obj) {\n    return isWidgetDefinition(obj) && obj.type === \"kpi\";\n}\n//# sourceMappingURL=widget.js.map","// (C) 2019-2020 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type guard checking whether object is an instance of ICatalogDateDataset.\n *\n * @public\n */\nexport function isCatalogDateDataset(obj) {\n    return !isEmpty(obj) && obj.type === \"dateDataset\";\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isMetadataObject } from \"../types.js\";\n/**\n * Tests whether the provided object is of type {@link IAttributeMetadataObject}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isAttributeMetadataObject(obj) {\n    return isMetadataObject(obj) && obj.type === \"attribute\";\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2020 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type guard checking whether input is an instance of {@link IMetadataObject}.\n *\n * @public\n */\nexport function isMetadataObject(obj) {\n    const c = obj;\n    return !isEmpty(c) && c.type !== undefined && c.ref !== undefined;\n}\n//# sourceMappingURL=types.js.map"],"names":["Builder","constructor","item","validator","this","build","modify","modifications","validate","Error","resolveValueOrUpdateCallback","valueOrUpdateCallback","valueToUpdate","Function","builderFactory","defaultItem","isElementsQueryOptionsElementsByValue","obj","values","isElementsQueryOptionsElementsByPrimaryDisplayFormValue","primaryValues","isValueBasedElementsQueryOptionsElements","isDashboardLayoutEmpty","layout","sections","every","section","items","length","walkLayout","sectionCallback","itemCallback","widgetCallback","path","forEach","sectionIndex","sectionPath","widgetIndex","itemPath","widget","widgetPath","layoutWidgetsWithPaths","collectedWidgets","push","layoutWidgets","isUserAccess","type","isUserGroupAccess","isGranularUserAccess","isGranularUserGroupAccess","isGranularUserAccessGrantee","isGranularAccessGrantee","isGranularUserGroupAccessGrantee","isAvailableUserAccessGrantee","isAvailableUserGroupAccessGrantee","isDrillFromMeasure","isDrillFromAttribute","isDrillToLegacyDashboard","isDrillToDashboard","isDrillToInsight","isDrillToCustomUrl","isDrillToAttributeUrl","isDashboardAttributeFilter","attributeFilter","isSingleSelectionFilter","filter","selectionMode","isNegativeAttributeFilter","negativeSelection","getSelectedElementsCount","attributeElements","uris","isDashboardDateFilter","dateFilter","newRelativeDashboardDateFilter","granularity","from","to","newAbsoluteDashboardDateFilter","newAllTimeDashboardDateFilter","isAllTimeDashboardDateFilter","isFilterContextDefinition","hasFilterContextBaseProps","ref","isFilterContext","isTempFilterContext","identifier","title","isDashboardDateFilterReference","isDashboardAttributeFilterReference","dashboardFilterReferenceObjRef","displayForm","dataSet","filters","isDashboardWidget","isDashboardLayout","some","guard","isDashboardLayoutItem","_a","_b","size","xl","gridWidth","isDashboardLayoutSection","isWidgetDefinition","hasWidgetProps","isWidget","widgetId","widgetUri","uri","widgetRef","widgetType","widgetTitle","isInsightWidget","isInsightWidgetDefinition","isKpiWidget","isKpiWidgetDefinition","isCatalogDateDataset","isAttributeMetadataObject","isMetadataObject","c","undefined"],"sourceRoot":""}