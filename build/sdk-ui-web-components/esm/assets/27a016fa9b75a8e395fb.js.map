{"version":3,"file":"assets/27a016fa9b75a8e395fb.js","mappings":"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","sources":["webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/visualizationObject/GdcVisualizationObject.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/visualizationObject/utils.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/utils/queryString.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/xhr.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/__version.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/utils/promise.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/utils/export.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/constants/errors.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/util.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/project.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/user.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/meta/GdcMetadata.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/metadata.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/metadataExt.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/utils/definitions.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/utils/attributesMapLoader.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/execution/experimental-executions.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/utils/rules.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/execution/execute-afm.convert.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/execution/execute-afm.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/execution.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/report/report.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/filterContext/GdcFilterContext.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/filterContext/utils.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/dashboard/dashboard.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/config.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/catalogue.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/ldm.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/organization.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/gooddata.js","webpack://@gooddata/sdk-ui-web-components/../api-client-bear/esm/gooddata-browser.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/utils/errorHandling.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/ObjRefConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/afm/FilterConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/afm/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/afm/MeasureConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/afm/ExecutionConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/ExecutionResultConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/dateFormatting/dateValueParser.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/dateFormatting/defaultDateFormatter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/dateFormatting/dateFormatter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/dateFormatting/dateValueFormatter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/execution/executionResult.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/executeAfm/GdcExecution.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/convertors/fromBackend/afm/result.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/afm/result.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/execution/preparedExecution.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/UsersConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/utils/api.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/execution/preparedExecutionByRef.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/execution/executionFactory.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/meta/GdcMetadataObject.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/ldmFactories/metadata/variableFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/MetaConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/MetricConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/MetricConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/measures/measureExpressionTokens.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/ReferenceConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/PropertiesConverter.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/base/GdcTypes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/ObjRefConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/VisualizationConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/measures/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/styling/styling.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/CatalogConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/FilterConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/MeasureConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/InsightConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/catalog/catalogWithAvailableItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/catalog/availableItemsFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/catalog/catalog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/catalog/factory.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/catalog/GdcCatalog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/uiSettings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/settings/settings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/WorkspaceConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/permissions/permissions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/VisualizationClassConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/insights/insightReferences.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/insights/filterMerging.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/utils/metadata.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/insights/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DataSetConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/datasets/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/toBackend/DashboardConverter.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/kpi/GdcKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/filterContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/layout.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/dashboard/GdcDashboardLayout.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/extendedDateFilters/GdcExtendedDateFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/drills.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/visualizationWidget/GdcVisualizationWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/widget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/dashboards.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/scheduledMails.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/scheduledMail/GdcScheduledMail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/alerts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DashboardConverter/plugin.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/dashboards/widgetReferences.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/dashboards/widgetFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/dashboards/filterContexts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/dashboards/index.js","webpack://@gooddata/sdk-ui-web-components/../api-model-bear/esm/dashboardPlugin/GdcDashboardPlugin.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/users/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/DateFilterConfigConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/dateFilterConfigs/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/attributes/elements/limitingAfmFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/attributes/elements/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/attributes/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/facts/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/UserGroupsConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/userGroups/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/convertors/fromBackend/AccessControlConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/accessControl/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspace/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/workspaces/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/user/settings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/user/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/drillingPostMessageData/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/organization/securitySettings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/organization/styling.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/organization/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/entitlements/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/backend/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/__version.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/auth.js","webpack://@gooddata/sdk-ui-web-components/./src/bearBackend.ts","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-bear/esm/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/kpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/scheduledMail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/execution/filter/factory.js"],"sourcesContent":["// (C) 2007-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isVisualization(obj) {\n    return !isEmpty(obj) && obj.visualizationObject !== undefined;\n}\n/**\n * @public\n */\nexport function isVisualizationObjectMeasure(bucketItem) {\n    return !isEmpty(bucketItem) && bucketItem.measure !== undefined;\n}\n/**\n * @public\n */\nexport function isVisualizationObjectAttribute(bucketItem) {\n    return (!isEmpty(bucketItem) &&\n        bucketItem.visualizationAttribute !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectMeasureDefinition(definition) {\n    return (!isEmpty(definition) &&\n        definition.measureDefinition !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectArithmeticMeasureDefinition(definition) {\n    return (!isEmpty(definition) &&\n        definition.arithmeticMeasure !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectPoPMeasureDefinition(definition) {\n    return (!isEmpty(definition) &&\n        definition.popMeasureDefinition !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectPreviousPeriodMeasureDefinition(definition) {\n    return (!isEmpty(definition) &&\n        definition.previousPeriodMeasure !==\n            undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectAttributeFilter(filter) {\n    return (!isEmpty(filter) &&\n        (filter.positiveAttributeFilter !== undefined ||\n            filter.negativeAttributeFilter !== undefined));\n}\n/**\n * @public\n */\nexport function isVisualizationObjectDateFilter(filter) {\n    return (!isEmpty(filter) &&\n        (filter.absoluteDateFilter !== undefined ||\n            filter.relativeDateFilter !== undefined));\n}\n/**\n * @public\n */\nexport function isVisualizationObjectPositiveAttributeFilter(filter) {\n    return (!isEmpty(filter) &&\n        filter.positiveAttributeFilter !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectNegativeAttributeFilter(filter) {\n    return (!isEmpty(filter) &&\n        filter.negativeAttributeFilter !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectMeasureValueFilter(filter) {\n    return (!isEmpty(filter) &&\n        filter.measureValueFilter !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectRankingFilter(filter) {\n    return !isEmpty(filter) && filter.rankingFilter !== undefined;\n}\n/**\n * @public\n */\nexport function isVisualizationObjectAbsoluteDateFilter(filter) {\n    return (!isEmpty(filter) &&\n        filter.absoluteDateFilter !== undefined);\n}\n/**\n * @public\n */\nexport function isVisualizationObjectRelativeDateFilter(filter) {\n    return (!isEmpty(filter) &&\n        filter.relativeDateFilter !== undefined);\n}\n//# sourceMappingURL=GdcVisualizationObject.js.map","// (C) 2007-2022 GoodData Corporation\nimport { isVisualizationObjectMeasureDefinition, isVisualizationObjectAttribute, isVisualizationObjectMeasure, isVisualizationObjectAttributeFilter, isVisualizationObjectPositiveAttributeFilter, } from \"./GdcVisualizationObject.js\";\nfunction getAttributesInBucket(bucket) {\n    return bucket.items.reduce((list, bucketItem) => {\n        if (isVisualizationObjectAttribute(bucketItem)) {\n            list.push(bucketItem.visualizationAttribute);\n        }\n        return list;\n    }, []);\n}\nfunction getAttributes(mdObject) {\n    const buckets = mdObject.buckets;\n    return buckets.reduce((categoriesList, bucket) => {\n        categoriesList.push(...getAttributesInBucket(bucket));\n        return categoriesList;\n    }, []);\n}\nfunction getMeasuresInBucket(bucket) {\n    return bucket.items.reduce((list, bucketItem) => {\n        if (isVisualizationObjectMeasure(bucketItem)) {\n            list.push(bucketItem.measure);\n        }\n        return list;\n    }, []);\n}\nfunction getDefinition(measure) {\n    return isVisualizationObjectMeasureDefinition(measure.definition)\n        ? measure.definition.measureDefinition\n        : undefined;\n}\nfunction getMeasures(mdObject) {\n    const buckets = mdObject.buckets;\n    return buckets.reduce((measuresList, bucket) => {\n        measuresList.push(...getMeasuresInBucket(bucket));\n        return measuresList;\n    }, []);\n}\nfunction getMeasureFilters(measure) {\n    var _a, _b;\n    return (_b = (_a = getDefinition(measure)) === null || _a === void 0 ? void 0 : _a.filters) !== null && _b !== void 0 ? _b : [];\n}\nfunction getMeasureAttributeFilters(measure) {\n    return getMeasureFilters(measure).filter(isVisualizationObjectAttributeFilter);\n}\nfunction getAttributeFilters(mdObject) {\n    return getMeasures(mdObject).reduce((filters, measure) => {\n        filters.push(...getMeasureAttributeFilters(measure));\n        return filters;\n    }, []);\n}\nfunction getAttributeFilterDisplayForm(measureFilter) {\n    return isVisualizationObjectPositiveAttributeFilter(measureFilter)\n        ? measureFilter.positiveAttributeFilter.displayForm.uri\n        : measureFilter.negativeAttributeFilter.displayForm.uri;\n}\n/**\n * @public\n */\nexport function getAttributesDisplayForms(mdObject) {\n    const attributesDfs = getAttributes(mdObject).map((attribute) => attribute.displayForm.uri);\n    const attrMeasureFilters = getAttributeFilters(mdObject);\n    const attrMeasureFiltersDfs = attrMeasureFilters.map(getAttributeFilterDisplayForm);\n    return [...attrMeasureFiltersDfs, ...attributesDfs];\n}\n//# sourceMappingURL=utils.js.map","// (C) 2020 GoodData Corporation\nimport qs from \"qs\";\n/**\n * Stringifies an object to query string. Makes sure arrays are serialized as comma separated, otherwise bear backend does not understand it.\n * @param obj - object to stringify\n * @param options - additional qs.stringify options\n */\nexport const stringify = (obj, options) => qs.stringify(obj, Object.assign(Object.assign({}, options), { arrayFormat: \"comma\" }));\n//# sourceMappingURL=queryString.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2023 GoodData Corporation\nimport isPlainObject from \"lodash/isPlainObject.js\";\nimport isFunction from \"lodash/isFunction.js\";\nimport set from \"lodash/set.js\";\nimport defaults from \"lodash/defaults.js\";\nimport merge from \"lodash/merge.js\";\nimport result from \"lodash/result.js\";\nimport { stringify } from \"./utils/queryString.js\";\nimport { LIB_VERSION, LIB_NAME } from \"./__version.js\";\n/**\n * Ajax wrapper around GDC authentication mechanisms, SST and TT token handling and polling.\n * Interface is the same as original jQuery.ajax.\n *\n * If token is expired, current request is \"paused\", token is refreshed and request is retried and result\n * is transparently returned to the original call.\n *\n * Additionally polling is handled. Only final result of polling returned.\n */\nconst DEFAULT_POLL_DELAY = 1000;\nconst REST_API_VERSION_HEADER = \"X-GDC-VERSION\";\nconst REST_API_DEPRECATED_VERSION_HEADER = \"X-GDC-DEPRECATED\";\n// The version used in X-GDC-VERSION header (see https://confluence.intgdc.com/display/Development/REST+API+versioning)\nconst LATEST_REST_API_VERSION = 5;\n/**\n * Gooddata-js package signature\n * @internal\n */\nexport const thisPackage = { name: LIB_NAME, version: LIB_VERSION };\nfunction simulateBeforeSend(url, settings) {\n    const xhrMockInBeforeSend = {\n        setRequestHeader(key, value) {\n            set(settings, [\"headers\", key], value);\n        },\n    };\n    if (isFunction(settings.beforeSend)) {\n        settings.beforeSend(xhrMockInBeforeSend, url);\n    }\n}\nfunction enrichSettingWithCustomDomain(originalUrl, originalSettings, domain) {\n    let url = originalUrl;\n    const settings = originalSettings;\n    if (domain) {\n        // protect url to be prepended with domain on retry\n        if (originalUrl.indexOf(domain) === -1) {\n            url = domain + originalUrl;\n        }\n        settings.mode = \"cors\";\n        settings.credentials = \"include\";\n    }\n    return { url, settings };\n}\nexport function handlePolling(url, \n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nsettings, sendRequest) {\n    const pollingDelay = result(settings, \"pollDelay\");\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            sendRequest(url, settings).then(resolve, reject);\n        }, pollingDelay);\n    });\n}\nexport function originPackageHeaders({ name, version }) {\n    return {\n        \"X-GDC-JS-PKG\": name,\n        \"X-GDC-JS-PKG-VERSION\": version,\n    };\n}\nexport class ApiError extends Error {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    constructor(message, cause) {\n        super(message);\n        this.cause = cause;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexport class ApiResponseError extends ApiError {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    constructor(message, response, responseBody) {\n        super(message, null);\n        this.response = response;\n        this.responseBody = responseBody;\n    }\n}\nexport class ApiNetworkError extends ApiError {\n}\nexport class ApiResponse {\n    constructor(response, responseBody) {\n        this.response = response;\n        this.responseBody = responseBody;\n    }\n    get data() {\n        return this.getDataInner();\n    }\n    getData() {\n        return this.getDataInner();\n    }\n    getRawData() {\n        return this.responseBody;\n    }\n    getHeaders() {\n        return this.response;\n    }\n    getDataInner() {\n        if (typeof this.responseBody === \"string\") {\n            try {\n                return JSON.parse(this.responseBody);\n            }\n            catch (error) {\n                throw new Error(\"Cannot parse responseBody.\");\n            }\n        }\n        throw new Error(\"ArrayBuffer ResponseBody cannot be parsed to requested type.\");\n    }\n}\n// the variable must be outside of the scope of the XhrModule to not log the message multiple times in SDK and KD\nlet shouldLogDeprecatedRestApiCall = true;\nexport class XhrModule {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    constructor(fetch, configStorage) {\n        this.fetch = fetch;\n        this.configStorage = configStorage;\n        defaults(configStorage, { xhrSettings: {} });\n    }\n    /**\n     * Clears the indicator that is making the XHR module to perform token requests before making\n     * the actual call. The module may get into this state typically during the application initialization\n     * when the session is not yet authenticated.\n     *\n     * Calling this method will clear that indicator, ensuring that the next call will be called without\n     * the leading call to token (which will typically fail).\n     */\n    ensureNoLeadingTokenRequest() {\n        this.tokenRequest = null;\n    }\n    /**\n     * Back compatible method for setting common XHR settings\n     *\n     * Usually in our apps we used beforeSend ajax callback to set the X-GDC-REQUEST header with unique ID.\n     *\n     * @param settings - object XHR settings as\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    ajaxSetup(settings) {\n        Object.assign(this.configStorage.xhrSettings, settings);\n    }\n    async ajax(originalUrl, customSettings = {}) {\n        var _a, _b;\n        // TODO refactor to: getRequestParams(originalUrl, customSettings);\n        const firstSettings = this.createRequestSettings(customSettings);\n        const { url, settings } = enrichSettingWithCustomDomain(originalUrl, firstSettings, this.configStorage.domain);\n        simulateBeforeSend(url, settings); // mutates `settings` param\n        if (this.tokenRequest) {\n            return this.continueAfterTokenRequest(url, settings);\n        }\n        let response;\n        try {\n            // TODO: We should clean up the settings at this point to be pure `RequestInit` object\n            response = await this.fetch(url, settings);\n        }\n        catch (e) {\n            throw new ApiNetworkError(e.message, e); // TODO is it really necessary? couldn't we throw just Error?\n        }\n        // Fetch URL and resolve body promise (if left unresolved, the body isn't even shown in chrome-dev-tools)\n        const responseBody = settings.arrayBufferResponseBody\n            ? await response.arrayBuffer()\n            : await response.text();\n        if (response.status === 401) {\n            // if 401 is in login-request, it means wrong user/password (we wont continue)\n            const isLoginRequest = url.indexOf(\"/gdc/account/login\") !== -1;\n            // if 401 is in token request already, it makes no sense to try handling unauthorized again by calling the same token endpoint again\n            const isTokenRequest = url.indexOf(\"/gdc/account/token\") !== -1;\n            const shouldSkipUnauthorizedHandling = isLoginRequest || isTokenRequest;\n            if (shouldSkipUnauthorizedHandling) {\n                throw new ApiResponseError(\"Unauthorized\", response, responseBody);\n            }\n            return this.handleUnauthorized(url, settings);\n        }\n        // Note: Fetch does redirects automagically for 301 (and maybe more .. TODO when?)\n        // see https://fetch.spec.whatwg.org/#ref-for-concept-request%E2%91%A3%E2%91%A2\n        if (response.status === 202 && !settings.dontPollOnResult) {\n            // poll on new provided url, fallback to the original one\n            // (for example validElements returns 303 first with new url which may then return 202 to poll on)\n            let responseJson;\n            try {\n                // If body was parsed as ArrayBuffer, decode it to text. We need to check\n                // if body does not contain JSON response with \"uri\" used for polling. Before polled task\n                // resolves, request to the task returns JSON body with \"uri\". When the task resolves,\n                // a binary body is returned.\n                responseJson = JSON.parse(this.responseBodyAsString(responseBody));\n            }\n            catch (err) {\n                responseJson = {};\n            }\n            /**\n             * It seems like 'fetch-mock' with Node 18 returns empty string in response.url,\n             * and this issue doesn't happen with real BE.\n             * For better backward compatibility, empty string will be treated as undefined.\n             */\n            const responseUrl = response.url !== \"\" ? response.url : undefined;\n            let finalUrl = (_b = (_a = responseJson.uri) !== null && _a !== void 0 ? _a : responseUrl) !== null && _b !== void 0 ? _b : url;\n            const finalSettings = settings;\n            // if the response is 202 and Location header is not empty, let's poll on the new Location\n            if (response.headers.has(\"Location\")) {\n                finalUrl = response.headers.get(\"Location\");\n            }\n            finalSettings.method = \"GET\";\n            delete finalSettings.data;\n            delete finalSettings.body;\n            return handlePolling(finalUrl, finalSettings, this.ajax.bind(this));\n        }\n        this.verifyRestApiDeprecationStatus(response.headers);\n        if (response.status >= 200 && response.status <= 399) {\n            return new ApiResponse(response, responseBody);\n        }\n        // throws on 400, 500, etc.\n        throw new ApiResponseError(response.statusText, response, this.responseBodyAsString(responseBody));\n    }\n    /**\n     * Wrapper for xhr.ajax method GET\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    get(url, settings) {\n        return this.ajax(url, merge({ method: \"GET\" }, settings));\n    }\n    /**\n     * Wrapper for xhr.ajax method GET, returns parsed JSON response body\n     */\n    getParsed(url, settings = {}) {\n        const { data } = settings, restSettings = __rest(settings, [\"data\"]);\n        let urlWithParams = url;\n        if (data) {\n            urlWithParams = `${url}?${stringify(data)}`;\n        }\n        return this.ajax(urlWithParams, merge({ method: \"GET\" }, restSettings)).then((response) => response.getData());\n    }\n    /**\n     * Wrapper for xhr.ajax method HEAD\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    head(url, settings) {\n        return this.ajax(url, merge({ method: \"HEAD\" }, settings));\n    }\n    /**\n     * Wrapper for xhr.ajax method POST\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    post(url, settings) {\n        return this.ajax(url, merge({ method: \"POST\" }, settings));\n    }\n    /**\n     * Wrapper for xhr.ajax method POST, returns parsed JSON response body\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    postParsed(url, settings) {\n        return this.ajax(url, merge({ method: \"POST\" }, settings)).then((response) => response.getData());\n    }\n    /**\n     * Wrapper for xhr.ajax method PUT\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    put(url, settings) {\n        return this.ajax(url, merge({ method: \"PUT\" }, settings));\n    }\n    /**\n     * Wrapper for xhr.ajax method DELETE\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    del(url, settings) {\n        return this.ajax(url, merge({ method: \"DELETE\" }, settings));\n    }\n    createRequestSettings(customSettings) {\n        const settings = merge({\n            headers: Object.assign({ Accept: \"application/json; charset=utf-8\", \"Content-Type\": \"application/json\", [REST_API_VERSION_HEADER]: LATEST_REST_API_VERSION }, originPackageHeaders(this.configStorage.originPackage || thisPackage)),\n        }, this.configStorage.xhrSettings, customSettings);\n        settings.pollDelay = settings.pollDelay !== undefined ? settings.pollDelay : DEFAULT_POLL_DELAY;\n        // TODO jquery compat - add to warnings\n        settings.body = settings.data ? settings.data : settings.body;\n        settings.mode = \"same-origin\";\n        settings.credentials = \"same-origin\";\n        if (isPlainObject(settings.body)) {\n            settings.body = JSON.stringify(settings.body);\n        }\n        return settings;\n    }\n    continueAfterTokenRequest(url, settings) {\n        return this.tokenRequest.then(async (response) => {\n            if (!response.ok) {\n                throw new ApiResponseError(\"Unauthorized\", response, null);\n            }\n            this.tokenRequest = null;\n            return this.ajax(url, settings);\n        }, (reason) => {\n            this.tokenRequest = null;\n            return reason;\n        });\n    }\n    async handleUnauthorized(originalUrl, originalSettings) {\n        // Create only single token request for any number of waiting request.\n        // If token request exist, just listen for it's end.\n        if (this.tokenRequest) {\n            return this.continueAfterTokenRequest(originalUrl, originalSettings);\n        }\n        const { url, settings } = enrichSettingWithCustomDomain(\"/gdc/account/token\", this.createRequestSettings({}), this.configStorage.domain);\n        simulateBeforeSend(url, settings); // mutates `settings` param\n        this.tokenRequest = this.fetch(url, settings);\n        const response = await this.tokenRequest;\n        const responseBody = await response.text();\n        this.tokenRequest = null;\n        // TODO jquery compat - allow to attach unauthorized callback and call it if attached\n        // if ((xhrObj.status === 401) && (isFunction(req.unauthorized))) {\n        //     req.unauthorized(xhrObj, textStatus, err, deferred);\n        //     return;\n        // }\n        // unauthorized handler is not defined or not http 401\n        // unauthorized when retrieving token -> not logged\n        if (response.status === 401) {\n            throw new ApiResponseError(\"Unauthorized\", response, responseBody);\n        }\n        if (!response.ok) {\n            // other non-2xx errors\n            throw new ApiResponseError(response.statusText, response, responseBody);\n        }\n        return this.ajax(originalUrl, originalSettings);\n    }\n    logDeprecatedRestApiCall(deprecatedVersionDetails) {\n        console.warn(`The REST API version ${LATEST_REST_API_VERSION} is deprecated (${deprecatedVersionDetails}). ` +\n            \"Please migrate your application to use GoodData.UI SDK or @gooddata/api-client-bear package that \" +\n            \"supports newer version of the API.\");\n    }\n    isRestApiDeprecated(responseHeaders) {\n        return responseHeaders.has(REST_API_DEPRECATED_VERSION_HEADER);\n    }\n    verifyRestApiDeprecationStatus(responseHeaders) {\n        if (shouldLogDeprecatedRestApiCall && this.isRestApiDeprecated(responseHeaders)) {\n            const deprecatedVersionDetails = responseHeaders.get(REST_API_DEPRECATED_VERSION_HEADER);\n            this.logDeprecatedRestApiCall(deprecatedVersionDetails);\n            shouldLogDeprecatedRestApiCall = false;\n        }\n    }\n    responseBodyAsString(responseBody) {\n        const decoder = new TextDecoder(\"utf-8\");\n        return responseBody instanceof ArrayBuffer ? decoder.decode(responseBody) : responseBody;\n    }\n}\n//# sourceMappingURL=xhr.js.map","// (C) 2021 GoodData Corporation\n// DO NOT CHANGE THIS FILE, IT IS RE-GENERATED ON EVERY BUILD\nexport const LIB_VERSION = \"0.0.0-dev.0\";\nexport const LIB_NAME = \"@gooddata/api-client-bear\";\n//# sourceMappingURL=__version.js.map","// (C) 2007-2020 GoodData Corporation\n/**\n * Return promise that will resolve after `ms` miliseconds\n *\n * @param ms - time in miliseconds\n * @returns\n */\nexport function delay(ms) {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(), ms);\n    });\n}\n//# sourceMappingURL=promise.js.map","// (C) 2007-2023 GoodData Corporation\nimport { SUCCESS_REQUEST_STATUS, BAD_REQUEST_STATUS } from \"../constants/errors.js\";\nexport function isExportFinished(response) {\n    const taskState = response.status;\n    return taskState === SUCCESS_REQUEST_STATUS || taskState >= BAD_REQUEST_STATUS; // OK || ERROR\n}\nexport const parseFileNameFromContentDisposition = (response) => {\n    const contentDispositionHeader = response.headers.get(\"Content-Disposition\") || \"\";\n    // eslint-disable-next-line regexp/no-unused-capturing-group\n    const matches = /filename\\*?=([^']*'')?([^;]*)/.exec(contentDispositionHeader);\n    const urlEncodedFileName = matches ? matches[2] : undefined;\n    return urlEncodedFileName ? decodeURIComponent(urlEncodedFileName) : undefined;\n};\nexport const getFormatContentType = (format) => {\n    switch (format) {\n        case \"csv\":\n            return \"text/csv\";\n        case \"xlsx\":\n            return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n        case \"raw\":\n        default:\n            return \"application/octet-stream\";\n    }\n};\n//# sourceMappingURL=export.js.map","// (C) 2019 GoodData Corporation\nexport const SUCCESS_REQUEST_STATUS = 200;\nexport const ACCEPTED_REQUEST_STATUS = 202;\nexport const BAD_REQUEST_STATUS = 400;\nexport const BAD_REQUEST_MESSAGE = \"Bad Request\";\nexport const ERROR_RESTRICTED_CODE = \"Export to required format is not allowed for data flagged as restricted.\";\nexport const ERROR_RESTRICTED_MESSAGE = \"You cannot export this insight because it contains restricted data.\";\n//# sourceMappingURL=errors.js.map","// (C) 2007-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isNil from \"lodash/isNil.js\";\nimport isObject from \"lodash/isObject.js\";\nimport omitBy from \"lodash/fp/omitBy.js\";\nimport { delay } from \"./utils/promise.js\";\nimport { ApiResponseError } from \"./xhr.js\";\nimport { parseFileNameFromContentDisposition } from \"./utils/export.js\";\n/**\n * Omit nil or empty object/array values of the object. Keep booleans & numbers.\n * Checks only first level object properties, does not check it recursively.\n */\nexport const omitEmpty = omitBy((val) => {\n    if (isNil(val)) {\n        return true;\n    }\n    else if (isObject(val)) {\n        return isEmpty(val);\n    }\n    return false;\n});\n/**\n * Utility methods. Mostly private\n *\n *\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getQueryEntries = (obj) => {\n    var _a;\n    return (_a = obj === null || obj === void 0 ? void 0 : obj.query) === null || _a === void 0 ? void 0 : _a.entries;\n};\n/**\n * Helper for polling\n *\n * @param xhrRequest - xhr module\n * @param uri - URI to poll\n * @param isPollingDone - function determining whether the polling is finished\n * @param options - for polling (maxAttempts, pollStep)\n * @internal\n */\nexport const handlePolling = (\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nxhrRequest, uri, isPollingDone, options = {}) => {\n    const { attempts = 0, maxAttempts = 50, pollStep = 5000 } = options;\n    return xhrRequest(uri)\n        .then((r) => r.getData())\n        .then((response) => {\n        if (attempts > maxAttempts) {\n            return Promise.reject(new Error(response));\n        }\n        return isPollingDone(response)\n            ? Promise.resolve(response)\n            : delay(pollStep).then(() => {\n                return handlePolling(xhrRequest, uri, isPollingDone, Object.assign(Object.assign({}, options), { attempts: attempts + 1 }));\n            });\n    });\n};\n/**\n * Helper for polling with header status\n *\n * @param xhrRequest - xhr module\n * @param uri - URI to poll\n * @param isPollingDone - function determining whether the polling is finished\n * @param options - for polling (maxAttempts, pollStep)\n * @internal\n */\nexport const handleHeadPolling = (\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nxhrRequest, uri, isPollingDone, options = {}) => {\n    const { attempts = 0, maxAttempts = 50, pollStep = 5000, blobContentType } = options;\n    return xhrRequest(uri, {\n        arrayBufferResponseBody: blobContentType !== undefined,\n    }).then((response) => {\n        if (attempts > maxAttempts) {\n            return Promise.reject(new Error(\"Export timeout!!!\"));\n        }\n        const fetchResponse = response.getHeaders();\n        if (isPollingDone(fetchResponse, response)) {\n            if (fetchResponse.status === 200) {\n                if (options.blobContentType) {\n                    const blob = new Blob([response.getRawData()], { type: options.blobContentType });\n                    return Promise.resolve({\n                        uri,\n                        objectUrl: URL.createObjectURL(blob),\n                        fileName: parseFileNameFromContentDisposition(fetchResponse),\n                    });\n                }\n                return Promise.resolve({\n                    uri,\n                });\n            }\n            return Promise.reject(new ApiResponseError(response.statusText, response, response.getData()));\n        }\n        else {\n            return delay(pollStep).then(() => handleHeadPolling(xhrRequest, uri, isPollingDone, Object.assign(Object.assign({}, options), { attempts: attempts + 1 })));\n        }\n    });\n};\nconst REG_URI_OBJ = /\\/gdc\\/md\\/\\S+\\/obj\\/\\d+/;\n/**\n * Tests whether the provided string looks like a URI of a metadata object on GoodData platform\n *\n * @param value - string to test\n * @public\n */\nexport const isUri = (value) => REG_URI_OBJ.test(value);\n/**\n * Builds query string from plain object\n * (Refactored from admin/routes.js)\n *\n * @param query - parameters possibly including arrays inside\n * @returns querystring\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function queryString(query) {\n    function getSingleParam(key, value) {\n        return Array.isArray(value)\n            ? value.map((item) => `${encodeURIComponent(key)}=${encodeURIComponent(item)}`).join(\"&\")\n            : `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n    }\n    return query\n        ? `?${Object.keys(query)\n            .map((k) => getSingleParam(k, query[k]))\n            .join(\"&\")}`\n        : \"\";\n}\n/**\n * Get all results from paged api by traversing all resulting pages\n * This is usable for apis which support offset and limit (i.e. not those with next paging links)\n *\n * @param xhrGet - xhr module\n * @param uri - uri to be fetched, will append offset and limit for next pages\n * @param itemKey - key under which to look for results (differs for different apis)\n * @param optional - offset starting offset, default 0\n * @param pagesData - optional data to be pre-filled\n */\nexport function getAllPagesByOffsetLimit(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nxhr, uri, itemKey, offset = 0, pagesData = []) {\n    const PAGE_LIMIT = 100;\n    return new Promise((resolve, reject) => {\n        xhr.get(`${uri}?offset=${offset}&limit=${PAGE_LIMIT}`)\n            .then((r) => r.getData())\n            .then((dataObjects) => {\n            var _a, _b;\n            const projects = dataObjects === null || dataObjects === void 0 ? void 0 : dataObjects[itemKey];\n            const data = pagesData.concat(projects.items);\n            const totalCount = (_b = (_a = projects === null || projects === void 0 ? void 0 : projects.paging) === null || _a === void 0 ? void 0 : _a.totalCount) !== null && _b !== void 0 ? _b : 0;\n            const nextPage = offset + PAGE_LIMIT;\n            if (nextPage > totalCount) {\n                resolve(data);\n            }\n            else {\n                resolve(getAllPagesByOffsetLimit(xhr, uri, itemKey, nextPage, data));\n            }\n        }, reject);\n    });\n}\n// Parses string values to boolean, number and string\nexport const parseSettingItemValue = (value) => {\n    if (value === \"true\") {\n        return true;\n    }\n    if (value === \"false\") {\n        return false;\n    }\n    const nr = Number(value);\n    if (nr.toString() === value) {\n        return nr;\n    }\n    return value;\n};\n//# sourceMappingURL=util.js.map","// (C) 2007-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { getAllPagesByOffsetLimit, getQueryEntries, handlePolling, parseSettingItemValue } from \"./util.js\";\nimport { ApiError } from \"./xhr.js\";\nimport { stringify } from \"./utils/queryString.js\";\nexport const DEFAULT_PALETTE = [\n    { r: 0x2b, g: 0x6b, b: 0xae },\n    { r: 0x69, g: 0xaa, b: 0x51 },\n    { r: 0xee, g: 0xb1, b: 0x4c },\n    { r: 0xd5, g: 0x3c, b: 0x38 },\n    { r: 0x89, g: 0x4d, b: 0x94 },\n    { r: 0x73, g: 0x73, b: 0x73 },\n    { r: 0x44, g: 0xa9, b: 0xbe },\n    { r: 0x96, g: 0xbd, b: 0x5f },\n    { r: 0xfd, g: 0x93, b: 0x69 },\n    { r: 0xe1, g: 0x5d, b: 0x86 },\n    { r: 0x7c, g: 0x6f, b: 0xad },\n    { r: 0xa5, g: 0xa5, b: 0xa5 },\n    { r: 0x7a, g: 0xa6, b: 0xd5 },\n    { r: 0x82, g: 0xd0, b: 0x8d },\n    { r: 0xff, g: 0xd2, b: 0x89 },\n    { r: 0xf1, g: 0x84, b: 0x80 },\n    { r: 0xbf, g: 0x90, b: 0xc6 },\n    { r: 0xbf, g: 0xbf, b: 0xbf },\n];\nconst isProjectCreated = (project) => {\n    // TODO\n    const projectState = project.content.state;\n    return projectState === \"ENABLED\" || projectState === \"DELETED\";\n};\n/**\n * Functions for working with projects\n *\n */\nexport class ProjectModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    /**\n     * Get current project id\n     *\n     * @returns current project identifier\n     */\n    getCurrentProjectId() {\n        return this.xhr\n            .getParsed(\"/gdc/app/account/bootstrap/projectId\")\n            .then((response) => response.projectId);\n    }\n    /**\n     * Fetches project by its identifier.\n     *\n     * @param projectId - Project identifier\n     * @returns Project\n     */\n    getProject(projectId) {\n        return this.xhr.getParsed(`/gdc/projects/${projectId}`);\n    }\n    /**\n     * Fetches projects available for the user represented by the given profileId\n     *\n     * @param profileId - User profile identifier\n     * @returns An Array of projects\n     */\n    getProjects(profileId) {\n        return getAllPagesByOffsetLimit(this.xhr, `/gdc/account/profile/${profileId}/projects`, \"projects\").then((result) => result.map((p) => p.project));\n    }\n    /**\n     * Fetches projects available for the user represented by the given profileId page by page.\n     * @param userId - id of the user to get the projects for\n     * @param offset - number of items to skip\n     * @param limit - maximum items on page\n     * @param search - search string that is matched to project title as a substring\n     */\n    getProjectsWithPaging(userId, offset, limit, search) {\n        // inspired by ProjectDataSource in goodstrap. Maybe the /gdc/account/profile/${profileId}/projects would be suitable as well.\n        const mergedOptions = {\n            limit,\n            offset,\n            userId,\n            projectStates: \"ENABLED\",\n            userState: \"ENABLED\",\n        };\n        if (search) {\n            mergedOptions.titleSubstring = search;\n        }\n        const uri = `/gdc/internal/projects/?${stringify(mergedOptions)}`;\n        return this.xhr.get(uri).then((res) => res.getData());\n    }\n    /**\n     * Fetches all datasets for the given project\n     *\n     * @param projectId - GD project identifier\n     * @returns An array of objects containing datasets metadata\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    getDatasets(projectId) {\n        return this.xhr\n            .get(`/gdc/md/${projectId}/query/datasets`)\n            .then((r) => r.getData())\n            .then(getQueryEntries);\n    }\n    /**\n     * Fetches a chart color palette for a project represented by the given\n     * projectId parameter.\n     *\n     * @param projectId - A project identifier\n     * @returns An array of objects with r, g, b fields representing a project's\n     * color palette\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    getColorPalette(projectId) {\n        return this.xhr\n            .get(`/gdc/projects/${projectId}/styleSettings`)\n            .then((apiResponse) => {\n            return apiResponse.getData();\n        })\n            .then((result) => {\n            if (!result) {\n                return DEFAULT_PALETTE;\n            }\n            return result.styleSettings.chartPalette.map((c) => {\n                return {\n                    r: c.fill.r,\n                    g: c.fill.g,\n                    b: c.fill.b,\n                };\n            });\n        })\n            .catch((e) => {\n            if (!(e instanceof ApiError)) {\n                return DEFAULT_PALETTE;\n            }\n            throw e;\n        });\n    }\n    /**\n     * Fetches a chart color palette for a project represented by the given\n     * projectId parameter.\n     *\n     * @param projectId - A project identifier\n     * @returns An array of objects representing a project's\n     * color palette with color guid or undefined\n     */\n    getColorPaletteWithGuids(projectId) {\n        return this.xhr\n            .get(`/gdc/projects/${projectId}/styleSettings`)\n            .then((apiResponse) => {\n            return apiResponse.getData();\n        })\n            .then((result) => {\n            if (result === null || result === void 0 ? void 0 : result.styleSettings) {\n                return result.styleSettings.chartPalette;\n            }\n            else {\n                return undefined;\n            }\n        })\n            .catch((e) => {\n            if (!(e instanceof ApiError)) {\n                return undefined;\n            }\n            throw e;\n        });\n    }\n    /**\n     * Sets given colors as a color palette for a given project.\n     *\n     * @param projectId - GD project identifier\n     * @param colors - An array of colors that we want to use within the project.\n     * Each color should be an object with r, g, b fields. // TODO really object?\n     */\n    setColorPalette(projectId, colors) {\n        return this.xhr.put(`/gdc/projects/${projectId}/styleSettings`, {\n            body: {\n                styleSettings: {\n                    chartPalette: colors.map((fill, idx) => {\n                        return { fill, guid: `guid${idx}` };\n                    }),\n                },\n            },\n        });\n    }\n    /**\n     * Gets current timezone and its offset.\n     * @example\n     *\n     * Example output:\n     *\n     * ```\n     * {\n     *     id: 'Europe/Prague',\n     *     displayName: 'Central European Time',\n     *     currentOffsetMs: 3600000\n     * }\n     * ```\n     *\n     * @param projectId - GD project identifier\n     */\n    getTimezone(projectId) {\n        const uri = `/gdc/app/projects/${projectId}/timezone`;\n        return this.xhr.getParsed(uri).then((result) => result.timezone);\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    setTimezone(projectId, timezone) {\n        const timezoneServiceUrl = `/gdc/md/${projectId}/service/timezone`;\n        const data = {\n            service: { timezone },\n        };\n        return this.xhr\n            .post(timezoneServiceUrl, {\n            body: data,\n        })\n            .then((r) => r.getData());\n    }\n    /**\n     * Create project\n     * Note: returns a promise which is resolved when the project creation is finished\n     *\n     * @experimental\n     * @param title - title of the new project\n     * @param authorizationToken - authorization token to use\n     * @param options - for project creation (summary, projectTemplate, ...)\n     * @returns created project object\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    createProject(title, authorizationToken, options = {}) {\n        const { summary, projectTemplate, driver = \"Pg\", environment = \"TESTING\", guidedNavigation = 1, } = options;\n        return this.xhr\n            .post(\"/gdc/projects\", {\n            body: JSON.stringify({\n                project: {\n                    content: {\n                        guidedNavigation,\n                        driver,\n                        authorizationToken,\n                        environment,\n                    },\n                    meta: {\n                        title,\n                        summary,\n                        projectTemplate,\n                    },\n                },\n            }),\n        })\n            .then((r) => r.getData())\n            .then((project) => handlePolling(this.xhr.get.bind(this.xhr), project.uri, (response) => {\n            // TODO project response\n            return isProjectCreated(response.project);\n        }, options));\n    }\n    /**\n     * Delete project\n     *\n     * @param projectId - projectId to delete\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    deleteProject(projectId) {\n        return this.xhr.del(`/gdc/projects/${projectId}`);\n    }\n    /**\n     * Gets aggregated feature flags for given project and current user\n     *\n     * @param projectId - A project identifier\n     * @returns Hash table of feature flags and theirs values where feature flag is as key\n     */\n    getFeatureFlags(projectId) {\n        return this.xhr\n            .get(`/gdc/app/projects/${projectId}/featureFlags`)\n            .then((apiResponse) => {\n            return apiResponse.getData();\n        })\n            .then((result) => {\n            if (result === null || result === void 0 ? void 0 : result.featureFlags) {\n                return result.featureFlags;\n            }\n            return {};\n        });\n    }\n    /**\n     * Gets project config including project specific feature flags\n     *\n     * @param projectId - A project identifier\n     * @returns An array of project config setting items\n     */\n    getConfig(projectId) {\n        return this.xhr\n            .get(`/gdc/app/projects/${projectId}/config`)\n            .then((apiResponse) => {\n            return apiResponse.getData();\n        })\n            .then((result) => {\n            var _a;\n            if ((_a = result === null || result === void 0 ? void 0 : result.settings) === null || _a === void 0 ? void 0 : _a.items) {\n                return result.settings.items;\n            }\n            return [];\n        });\n    }\n    /**\n     * Gets project config including project specific feature flags\n     *\n     * @param projectId - A project identifier\n     * @param key - config item key\n     * @returns single setting item or undefined if item with such key does not exist\n     */\n    getConfigItem(projectId, key) {\n        return this.xhr\n            .get(`/gdc/app/projects/${projectId}/config/${key}`)\n            .then((apiResponse) => {\n            return apiResponse.getData();\n        })\n            .catch((error) => {\n            var _a;\n            if (((_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.status) === 404) {\n                return undefined;\n            }\n            throw error;\n        });\n    }\n    /**\n     * Gets project specific feature flags\n     *\n     * @param projectId - A project identifier\n     * @param source - optional filter settingItems with specific source\n     * @returns Hash table of feature flags and theirs values where feature flag is as key\n     */\n    getProjectFeatureFlags(projectId, source) {\n        return this.getConfig(projectId).then((settingItems) => {\n            const filteredSettingItems = source\n                ? settingItems.filter((settingItem) => settingItem.settingItem.source === source)\n                : settingItems;\n            const featureFlags = {};\n            filteredSettingItems.forEach((settingItem) => {\n                featureFlags[settingItem.settingItem.key] = parseSettingItemValue(settingItem.settingItem.value);\n            });\n            return featureFlags;\n        });\n    }\n    /**\n     * Get paged user list\n     *\n     * @param projectId - project identifier\n     * @param options - filtering options for the user list\n     * @returns List of users with paging\n     */\n    getUserListWithPaging(projectId, options) {\n        return this.xhr.getParsed(`/gdc/projects/${projectId}/userlist`, {\n            data: options,\n        });\n    }\n    /**\n     * Get full user list\n     *\n     * @param projectId - project identifier\n     * @param options - filtering options for the user list\n     * @returns List of users\n     */\n    getUserList(projectId, options) {\n        const loadPage = async (offset = 0, limit = 1000, items = []) => {\n            return this.getUserListWithPaging(projectId, Object.assign(Object.assign({}, options), { limit, offset })).then(({ userList: { items: userItems, paging: { count }, }, }) => {\n                const updatedItems = [...items, ...userItems];\n                return count < limit ? updatedItems : loadPage(offset + limit, limit, updatedItems);\n            });\n        };\n        return loadPage();\n    }\n    /**\n     * Get paged user groups\n     *\n     * @param projectId - project identifier\n     * @param options - paging params\n     * @returns List of user groups with paging\n     */\n    getUserGroups(projectId, options) {\n        const { offset = \"0\", limit = 100 } = options;\n        return this.xhr.getParsed(`/gdc/userGroups?project=${projectId}&offset=${offset}&limit=${limit}`);\n    }\n    /**\n     * Get info about all grantees able to access given object\n     *\n     * @param objectUri - object's uri\n     * @param options - grantee limitations params\n     * @returns List of all grantees\n     */\n    getGranteesInfo(objectUri, options) {\n        const { permission = \"read\" } = options;\n        const apiUri = objectUri.replace(\"/md/\", \"/projects/\");\n        return this.xhr.getParsed(`${apiUri}/grantees?permission=${permission}`);\n    }\n    convertGrantees(granteeUris = []) {\n        return granteeUris.map((granteeUri) => ({\n            aclEntryURI: {\n                permission: \"read\",\n                grantee: granteeUri,\n            },\n        }));\n    }\n    handleGranteesChangeError(error) {\n        var _a;\n        if (((_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.status) !== 200) {\n            throw error;\n        }\n    }\n    /**\n     * Add grantees to access given object\n     * @param objectUri - object's uri\n     * @param granteeUris - grantees uri array\n     */\n    addGrantees(objectUri, granteeUris) {\n        const addGranteesRequest = {\n            granteeURIs: {\n                items: this.convertGrantees(granteeUris),\n            },\n        };\n        return this.xhr\n            .post(`${objectUri}/grantees/add`, { body: Object.assign({}, addGranteesRequest) })\n            .catch(this.handleGranteesChangeError);\n    }\n    /**\n     * Remove grantees access given object\n     * @param objectUri - object's uri\n     * @param granteeUris - grantees uri array\n     */\n    removeGrantees(objectUri, granteeUris = []) {\n        const removeGranteesRequest = {\n            granteeURIs: {\n                items: this.convertGrantees(granteeUris),\n            },\n        };\n        return this.xhr\n            .post(`${objectUri}/grantees/remove`, { body: Object.assign({}, removeGranteesRequest) })\n            .catch(this.handleGranteesChangeError);\n    }\n    /**\n     * Get permissions for the workspace and user\n     * @param workspaceId - ID of the workspace\n     * @param userId - ID of the user\n     */\n    getPermissions(workspaceId, userId) {\n        return this.xhr.getParsed(`/gdc/projects/${workspaceId}/users/${userId}/permissions`);\n    }\n    /**\n     * Resolves LCM workspace identifiers. This function will use the data product and client information\n     * and consult the backend in order to obtain identifier of workspace contains analytics for that\n     * data product & client combination.\n     *\n     * Domain parameter is required. Then either project ID or product ID and client ID pair must be provided.\n     *\n     * @param domainId - ID of the domain, must be provided\n     * @param projectId - ID of the project. LCM identifiers will be fetched via project ID if the\n     *  ID is provided.\n     * @param productId - ID of the product. LCM identifiers will be provided by product ID and client ID\n     *  pair, if project ID is not provided.\n     * @param clientId - ID of the client. LCM identifiers will be provided by product ID and client ID pair,\n     *  if project ID is not provided.\n     *\n     * @returns Resolves with project LCM identifiers.\n     */\n    getProjectLcmIdentifiers(domainId, projectId, productId, clientId) {\n        invariant(domainId, \"domain ID must be specified\");\n        if (projectId) {\n            return this.xhr\n                .getParsed(`/gdc/projects/${projectId}/lcmEntity`)\n                .then(({ projectUri, clientId, dataProductId, segmentId }) => ({\n                projectLcm: {\n                    projectId: this.extractIdFromUri(projectUri),\n                    clientId,\n                    dataProductId,\n                    segmentId,\n                },\n            }));\n        }\n        invariant(productId, \"product ID must be specified when project ID is not provided\");\n        invariant(clientId, \"client ID must be specified when project ID is not provided\");\n        return this.xhr\n            .getParsed(`/gdc/domains/${domainId}/dataproducts/${productId}/clients/${clientId}`)\n            .then(({ client: { id, project, segment, links } }) => ({\n            projectLcm: {\n                projectId: this.extractIdFromUri(project),\n                clientId: id,\n                dataProductId: this.extractIdFromUri(links === null || links === void 0 ? void 0 : links.dataProduct),\n                segmentId: this.extractIdFromUri(segment),\n            },\n        }));\n    }\n    extractIdFromUri(uri) {\n        return uri === null || uri === void 0 ? void 0 : uri.split(\"/\").pop();\n    }\n}\n//# sourceMappingURL=project.js.map","// (C) 2007-2022 GoodData Corporation\nimport qs from \"qs\";\nimport { ProjectModule } from \"./project.js\";\nimport { parseSettingItemValue } from \"./util.js\";\nexport class UserModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    /**\n     * Find out whether a user is logged in\n     *\n     * @returns resolves with true if user logged in, false otherwise\n     */\n    async isLoggedIn() {\n        var _a;\n        try {\n            const result = await this.xhr.get(\"/gdc/account/token\");\n            return !!result.response.ok;\n        }\n        catch (err) {\n            if (((_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.status) === 401) {\n                return false;\n            }\n            throw err;\n        }\n    }\n    /**\n     * Find out whether a specified project is available to a currently logged user\n     *\n     * @param projectId - A project identifier\n     * @returns Resolves with true if user logged in and project available,\n     *                   resolves with false if user logged in and project not available,\n     *                   rejects if user not logged in\n     */\n    async isLoggedInProject(projectId) {\n        const profile = await this.getCurrentProfile();\n        const projectModule = new ProjectModule(this.xhr);\n        const projects = await projectModule.getProjects(profile.links.self.split(\"/\")[4]);\n        return projects.some((p) => { var _a; return ((_a = p.links) === null || _a === void 0 ? void 0 : _a.self) === `/gdc/projects/${projectId}`; });\n    }\n    /**\n     * This function provides an authentication entry point to the GD API. It is needed to authenticate\n     * by calling this function prior any other API calls. After providing valid credentials\n     * every subsequent API call in a current session will be authenticated.\n     */\n    login(username, password) {\n        return this.xhr.postParsed(\"/gdc/account/login\", {\n            body: JSON.stringify({\n                postUserLogin: {\n                    login: username,\n                    password,\n                    remember: 1,\n                    captcha: \"\",\n                    verifyCaptcha: \"\",\n                },\n            }),\n        });\n    }\n    /**\n     * This function provides an authentication entry point to the GD API via SSO\n     * https://help.gooddata.com/display/developer/GoodData+PGP+Single+Sign-On\n     *\n     * @param encryptedClaims - PGP message\n     * @param ssoProvider - name of the SSO provider\n     * @param targetUrl - where to redirect after the SSO flow, set this to `/gdc/account/token`\n     */\n    loginSso(encryptedClaims, ssoProvider, targetUrl) {\n        return this.xhr.post(\"/gdc/account/customerlogin\", {\n            data: {\n                pgpLoginRequest: {\n                    targetUrl,\n                    ssoProvider,\n                    encryptedClaims,\n                },\n            },\n        });\n    }\n    /**\n     * Logs out current user\n     */\n    async logout() {\n        const isLoggedIn = await this.isLoggedIn();\n        if (isLoggedIn) {\n            const { logoutUri } = await this.getAccountInfo();\n            return this.xhr.del(logoutUri);\n        }\n    }\n    /**\n     * Gets current user's profile\n     * @returns Resolves with account setting object\n     */\n    getCurrentProfile() {\n        return this.xhr\n            .getParsed(\"/gdc/account/profile/current\")\n            .then((r) => r.accountSetting);\n    }\n    /**\n     * Gets user's regional number formatting configuration\n     * @param userId - loginMD5\n     * @returns Resolves with separators setting object\n     */\n    getUserRegionalNumberFormatting(userId) {\n        return this.xhr\n            .getParsed(`/gdc/account/profile/${userId}/settings/separators`)\n            .then((res) => ({\n            decimal: res.separators.decimal,\n            thousand: res.separators.thousand,\n        }));\n    }\n    /**\n     * Updates user's profile settings\n     * @param profileId - User profile identifier\n     * @param profileSetting - the profile setting update payload\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    updateProfileSettings(profileId, profileSetting) {\n        return this.xhr.put(`/gdc/account/profile/${profileId}/settings`, {\n            body: profileSetting,\n        });\n    }\n    /**\n     * Returns info about currently logged in user from bootstrap resource\n     */\n    async getAccountInfo() {\n        const { accountInfo } = await this.xhr.getParsed(\"/gdc/app/account/bootstrap/account\");\n        return accountInfo;\n    }\n    /**\n     * Gets user configs including user specific feature flags\n     *\n     * @param userId - A user identifier\n     * @returns An array of user configs setting item\n     */\n    async getUserConfigs(userId) {\n        const userConfig = await this.xhr.getParsed(`/gdc/account/profile/${userId}/config`);\n        return userConfig.settings.items || [];\n    }\n    /**\n     * Gets user specific feature flags\n     *\n     * @param userId - A user identifier\n     * @param sourceFilter - Optional list of setting item sources to include. Defaults to including everything\n     * @returns Hash table of feature flags and their values where feature flag is the key\n     */\n    getUserFeatureFlags(userId, sourceFilter) {\n        return this.getUserConfigs(userId).then((settingItems) => {\n            const filteredSettingItems = sourceFilter\n                ? settingItems.filter((item) => sourceFilter.includes(item.settingItem.source))\n                : settingItems;\n            const featureFlags = {};\n            filteredSettingItems.forEach((settingItem) => {\n                featureFlags[settingItem.settingItem.key] = parseSettingItemValue(settingItem.settingItem.value);\n            });\n            return featureFlags;\n        });\n    }\n    /**\n     * Returns the feature flags valid for the currently logged in user.\n     */\n    async getFeatureFlags() {\n        const { featureFlags } = await this.xhr.getParsed(\"/gdc/app/account/bootstrap/featureFlags\");\n        return featureFlags;\n    }\n    async getCurrentOrganization() {\n        return this.xhr.getParsed(\"/gdc/app/organization/current\");\n    }\n    /**\n     * Returns bootstrap resource for the currently logged in user.\n     */\n    getBootstrapResource(options = {}) {\n        const { projectId, productId, clientId, loadAnalyticalDashboards = true } = options;\n        let uri = `/gdc/app/account/bootstrap?loadAnalyticalDashboards=${loadAnalyticalDashboards}`;\n        if (projectId) {\n            uri = `${uri}&projectUri=/gdc/projects/${projectId}`;\n        }\n        else if (productId && clientId) {\n            // projectId can be replaced by combination of productId + clientId\n            uri = `${uri}&projectUri=/gdc/projects/client:${productId}:${clientId}`;\n        }\n        return this.xhr.getParsed(uri);\n    }\n    /**\n     * Initiates SPI SAML SSO.\n     *\n     * @param relayState - URL of the page where the user is redirected after a successful login\n     */\n    initiateSamlSso(relayState) {\n        /*\n         * make sure code does not try to get new token before initiating the SAML; the token request would\n         * fail and prevent the samlrequest call; there is no point in getting token anyway because it is just\n         * now that the client is initializing the session security context.\n         */\n        this.xhr.ensureNoLeadingTokenRequest();\n        return this.xhr\n            .get(`/gdc/account/samlrequest?${qs.stringify({ relayState })}`)\n            .then((data) => data.getData())\n            .then((response) => {\n            const loginUrl = response.samlRequests.items[0].samlRequest.loginUrl;\n            window.location.assign(loginUrl);\n        });\n    }\n}\n//# sourceMappingURL=user.js.map","// (C) 2007-2022 GoodData Corporation\nimport isEmpty from \"lodash/fp/isEmpty.js\";\nimport has from \"lodash/has.js\";\n/**\n * @public\n */\nexport function isMetadataObjectAttribute(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"attribute\";\n}\n/**\n * @public\n */\nexport function isWrappedAttribute(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"attribute\");\n}\n/**\n * @public\n */\nexport function isWrappedAttributeDisplayForm(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"attributeDisplayForm\");\n}\n/**\n * @public\n */\nexport function isAttributeDisplayForm(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"attributeDisplayForm\";\n}\n/**\n * @public\n */\nexport function isWrappedMetric(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"metric\");\n}\n/**\n * @public\n */\nexport function isMetric(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"metric\";\n}\n/**\n * @public\n */\nexport function isWrappedFact(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"fact\");\n}\n/**\n * @public\n */\nexport function isFact(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"fact\";\n}\n/**\n * @public\n */\nexport function isKpiAlert(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"kpiAlert\";\n}\n/**\n * @public\n */\nexport function isWrappedKpiAlert(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"kpiAlert\");\n}\n/**\n * @public\n */\nexport function isMetadataObjectDataSet(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"dataSet\";\n}\n/**\n * @public\n */\nexport function isMetadataObjectWrappedDataSet(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"dataSet\");\n}\n/**\n * @public\n */\nexport function isPrompt(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"prompt\";\n}\n/**\n * @public\n */\nexport function isWrappedPrompt(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"prompt\");\n}\n/**\n * @public\n */\nexport function isTheme(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"theme\";\n}\n/**\n * @public\n */\nexport function isWrappedTheme(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"theme\");\n}\n//# sourceMappingURL=GdcMetadata.js.map","// (C) 2007-2022 GoodData Corporation\nimport isPlainObject from \"lodash/isPlainObject.js\";\nimport chunk from \"lodash/chunk.js\";\nimport flatten from \"lodash/flatten.js\";\nimport pick from \"lodash/pick.js\";\nimport pickBy from \"lodash/pickBy.js\";\nimport { isWrappedAttribute, } from \"@gooddata/api-model-bear\";\nimport { getQueryEntries, handlePolling, queryString } from \"./util.js\";\nimport { ApiResponseError } from \"./xhr.js\";\nimport { stringify } from \"./utils/queryString.js\";\nfunction getResponseData(r) {\n    if (!r.response.ok) {\n        throw new ApiResponseError(r.response.statusText, r.response, r.getData());\n    }\n    return r.getData();\n}\n/**\n * Functions for working with metadata objects\n *\n */\nexport class MetadataModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    /**\n     * Get default display form value of provided attribute element uri\n     * @param attributeElementUri - string\n     */\n    async getAttributeElementDefaultDisplayFormValue(attributeElementUri) {\n        const uriChunks = attributeElementUri.match(/(.+)\\/elements\\?id=(.*)/);\n        if (!uriChunks) {\n            throw new Error(\"Provide valid attribute element uri\");\n        }\n        const attributeUri = uriChunks[1];\n        const elementId = uriChunks[2];\n        const defaultDisplayForm = await this.getAttributeDefaultDisplayForm(attributeUri);\n        if (!defaultDisplayForm) {\n            throw new Error(\"Attribute of the provided element has no default display form!\");\n        }\n        const defaultDisplayFormUri = defaultDisplayForm.meta.uri;\n        const defaultDisplayFormElementValue = await this.xhr.getParsed(`${defaultDisplayFormUri}/elements?id=${elementId}`);\n        return defaultDisplayFormElementValue.attributeElements.elements[0];\n    }\n    /**\n     * Get default display form of provided attribute uri\n     * @param attributeUri - string\n     */\n    async getAttributeDefaultDisplayForm(attributeUri) {\n        const object = await this.xhr.getParsed(attributeUri);\n        if (!isWrappedAttribute(object)) {\n            throw new Error(\"Provided uri is not attribute uri!\");\n        }\n        return (object.attribute.content.displayForms.find((displayForm) => displayForm.content.default === 1) ||\n            object.attribute.content.displayForms[0]);\n    }\n    /**\n     * Get metadata object by provided identifier\n     * @param projectId - string\n     * @param identifier - string\n     */\n    async getObjectByIdentifier(projectId, identifier) {\n        const uri = await this.getObjectUri(projectId, identifier);\n        return this.xhr.getParsed(uri);\n    }\n    /**\n     * Get metadata objects by provided identifiers\n     * @param projectId - string\n     * @param identifiers - string[]\n     */\n    async getObjectsByIdentifiers(projectId, identifiers) {\n        const uriIdentifierPairs = await this.getUrisFromIdentifiers(projectId, identifiers);\n        const uris = uriIdentifierPairs.map((pair) => pair.uri);\n        return this.getObjects(projectId, uris);\n    }\n    /**\n     * Load all objects with given uris\n     * (use bulk loading instead of getting objects one by one)\n     *\n     * @param projectId - id of the project\n     * @param objectUris - array of uris for objects to be loaded\n     * @returns array of loaded elements\n     */\n    getObjects(projectId, objectUris) {\n        const LIMIT = 50;\n        const uri = `/gdc/md/${projectId}/objects/get`;\n        const objectsUrisChunks = chunk(objectUris, LIMIT);\n        const promises = objectsUrisChunks.map((objectUrisChunk) => {\n            const body = {\n                get: {\n                    items: objectUrisChunk,\n                },\n            };\n            return this.xhr\n                .post(uri, { body })\n                .then((r) => {\n                if (!r.response.ok) {\n                    throw new ApiResponseError(r.response.statusText, r.response, r.responseBody);\n                }\n                return r.getData();\n            })\n                .then((result) => result.objects.items.map((item) => {\n                if (item.visualizationObject) {\n                    return {\n                        visualizationObject: item.visualizationObject,\n                    };\n                }\n                return item;\n            }));\n        });\n        return Promise.all(promises).then(flatten);\n    }\n    /**\n     * Loads all objects by query (fetches all pages, one by one)\n     *\n     * @param projectId - id of the project\n     * @param options - (see https://developer.gooddata.com/api endpoint: `/gdc/md/{project_id}/objects/query`)\n     *        - category - for example 'dataSets' or 'projectDashboard'\n     *        - mode - 'enriched' or 'raw'\n     *        - author - the URI of the author of the metadata objects\n     *        - limit - default is 50 (also maximum)\n     *        - deprecated - show also deprecated objects\n     * @returns array of returned objects\n     */\n    getObjectsByQuery(projectId, options) {\n        const getOnePage = (uri, items = []) => {\n            return this.xhr\n                .get(uri)\n                .then((r) => r.getData())\n                .then(({ objects }) => {\n                items.push(...objects.items);\n                const nextUri = objects.paging.next;\n                return nextUri ? getOnePage(nextUri, items) : items;\n            });\n        };\n        const deprecated = options.deprecated ? { deprecated: 1 } : {};\n        const uri = `/gdc/md/${projectId}/objects/query`;\n        const query = pick(Object.assign(Object.assign({ limit: 50 }, options), deprecated), [\n            \"category\",\n            \"mode\",\n            \"author\",\n            \"limit\",\n            \"deprecated\",\n        ]);\n        return getOnePage(uri + queryString(query));\n    }\n    /**\n     * Loads all objects by query with paging\n     *\n     * @param projectId - id of the project\n     * @param options - (see https://developer.gooddata.com/api endpoint: `/gdc/md/{project_id}/objects/query`)\n     *        - category - for example 'dataSets' or 'projectDashboard'\n     *        - mode - 'enriched' or 'raw'\n     *        - author - the URI of the author of the metadata objects\n     *        - limit - default is 50 (also maximum)\n     *        - deprecated - show also deprecated objects\n     *        - orderBy - order the results by id, title or the last updated (newest first)\n     *        - getTotalCount - include total count of items in the paging object\n     * @returns array of returned objects\n     */\n    getObjectsByQueryWithPaging(projectId, options) {\n        const getTotalCount = (options === null || options === void 0 ? void 0 : options.getTotalCount) ? 1 : 0;\n        const uri = `/gdc/md/${projectId}/objects/query?${stringify(Object.assign(Object.assign({}, options), { getTotalCount }))}`;\n        return this.xhr\n            .get(uri)\n            .then((r) => r.getData())\n            .then(({ objects }) => objects);\n    }\n    /**\n     * Get MD objects from using2 resource. Include only objects of given types\n     * and take care about fetching only nearest objects if requested.\n     *\n     * @param projectId - id of the project\n     * @param uri - uri of the object for which dependencies are to be found\n     * @param options - objects with options:\n     *        - types - array of strings with object types to be included\n     *        - nearest - whether to include only nearest dependencies\n     * @returns promise promise once resolved returns an array of\n     *         entries returned by using2 resource\n     */\n    getObjectUsing(projectId, uri, options = {}) {\n        const { types = [], nearest = false } = options;\n        const resourceUri = `/gdc/md/${projectId}/using2`;\n        const body = {\n            inUse: {\n                uri,\n                types,\n                nearest: nearest ? 1 : 0,\n            },\n        };\n        return this.xhr\n            .post(resourceUri, { body })\n            .then(getResponseData)\n            .then((result) => result.entries);\n    }\n    /**\n     * Get MD objects from using2 resource. Include only objects of given types\n     * and take care about fetching only nearest objects if requested.\n     *\n     * @param projectId - id of the project\n     * @param uris - uris of objects for which dependencies are to be found\n     * @param options - objects with options:\n     *        - types - array of strings with object types to be included\n     *        - nearest - whether to include only nearest dependencies\n     * @returns promise promise once resolved returns an array of\n     *         entries returned by using2 resource\n     */\n    getObjectUsingMany(projectId, uris, options = {}) {\n        const { types = [], nearest = false } = options;\n        const resourceUri = `/gdc/md/${projectId}/using2`;\n        const body = {\n            inUseMany: {\n                uris,\n                types,\n                nearest: nearest ? 1 : 0,\n            },\n        };\n        return this.xhr\n            .post(resourceUri, { body })\n            .then(getResponseData)\n            .then((result) => result.useMany);\n    }\n    /**\n     * Get MD objects from usedby2 resource. Include only objects of given types\n     * and take care about fetching only nearest objects if requested.\n     *\n     * @param projectId - id of the project\n     * @param uri - uri of the object for which dependencies are to be found\n     * @param options - objects with options:\n     *        - types - array of strings with object types to be included\n     *        - nearest - whether to include only nearest dependencies (default is false)\n     * @returns promise promise once resolved returns an array of\n     *         entries returned by usedby2 resource\n     */\n    getObjectUsedBy(projectId, uri, options) {\n        const { nearest = false, types = [] } = options;\n        const body = {\n            inUse: {\n                nearest: nearest ? 1 : 0,\n                uri,\n                types,\n            },\n        };\n        return this.xhr\n            .postParsed(`/gdc/md/${projectId}/usedby2`, { body })\n            .then((result) => result.entries);\n    }\n    /**\n     * Get MD objects from usedby2 resource. Include only objects of given types\n     * and take care about fetching only nearest objects if requested.\n     *\n     * @param projectId - id of the project\n     * @param uris - uris of objects for which dependencies are to be found\n     * @param options - objects with options:\n     *        - types - array of strings with object types to be included\n     *        - nearest - whether to include only nearest dependencies (default is false)\n     * @returns promise promise once resolved returns an array of\n     *         entries returned by usedby2 resource\n     */\n    getObjectsUsedByMany(projectId, uris, options) {\n        const uri = `/gdc/md/${projectId}/usedby2`;\n        const { nearest = false, types = [] } = options;\n        const body = {\n            inUseMany: {\n                nearest: nearest ? 1 : 0,\n                uris,\n                types,\n            },\n        };\n        return this.xhr\n            .postParsed(uri, { body })\n            .then((result) => result.useMany);\n    }\n    /**\n     * Returns all visualizationObjects metadata in a project specified by projectId param\n     *\n     * @param projectId - Project identifier\n     * @returns An array of visualization objects metadata\n     */\n    getVisualizations(projectId) {\n        return this.xhr\n            .get(`/gdc/md/${projectId}/query/visualizationobjects`)\n            .then((apiResponse) => apiResponse.response.ok ? apiResponse.getData() : apiResponse.response)\n            .then(getQueryEntries);\n    }\n    /**\n     * Returns all attributes in a project specified by projectId param\n     *\n     * @param projectId - Project identifier\n     * @returns An array of attribute objects\n     */\n    getAttributes(projectId) {\n        return this.xhr\n            .get(`/gdc/md/${projectId}/query/attributes`)\n            .then((apiResponse) => apiResponse.response.ok ? apiResponse.getData() : apiResponse.response)\n            .then(getQueryEntries);\n    }\n    /**\n     * Returns all dimensions in a project specified by projectId param\n     *\n     * @param projectId - Project identifier\n     * @returns An array of dimension objects\n     * @see getFolders\n     */\n    getDimensions(projectId) {\n        return this.xhr\n            .get(`/gdc/md/${projectId}/query/dimensions`)\n            .then((apiResponse) => apiResponse.response.ok ? apiResponse.getData() : apiResponse.response)\n            .then(getQueryEntries);\n    }\n    /**\n     * Returns project folders. Folders can be of specific types and you can specify\n     * the type you need by passing and optional `type` parameter\n     *\n     * @param projectId - Project identifier\n     * @param type - Optional, possible values are `metric`, `fact`, `attribute`\n     * @returns An array of dimension objects\n     */\n    getFolders(projectId, type) {\n        // TODO enum?\n        const getFolderEntries = (pId, t) => {\n            const typeURL = t ? `?type=${t}` : \"\";\n            return this.xhr\n                .get(`/gdc/md/${pId}/query/folders${typeURL}`)\n                .then((r) => r.getData())\n                .then(getQueryEntries);\n        };\n        switch (type) {\n            case \"fact\":\n            case \"metric\":\n                return getFolderEntries(projectId, type);\n            case \"attribute\":\n                return this.getDimensions(projectId);\n            default:\n                return Promise.all([\n                    getFolderEntries(projectId, \"fact\"),\n                    getFolderEntries(projectId, \"metric\"),\n                    this.getDimensions(projectId),\n                ]).then(([fact, metric, attribute]) => {\n                    return { fact, metric, attribute };\n                });\n        }\n    }\n    /**\n     * Returns all facts in a project specified by the given projectId\n     *\n     * @param projectId - Project identifier\n     * @returns An array of fact objects\n     */\n    getFacts(projectId) {\n        return this.xhr\n            .get(`/gdc/md/${projectId}/query/facts`)\n            .then((apiResponse) => apiResponse.response.ok ? apiResponse.getData() : apiResponse.response)\n            .then(getQueryEntries);\n    }\n    /**\n     * Returns all metrics in a project specified by the given projectId\n     *\n     * @param projectId - Project identifier\n     * @returns An array of metric objects\n     */\n    getMetrics(projectId) {\n        return this.xhr\n            .get(`/gdc/md/${projectId}/query/metrics`)\n            .then((apiResponse) => apiResponse.response.ok ? apiResponse.getData() : apiResponse.response)\n            .then(getQueryEntries);\n    }\n    /**\n     * Returns all project dashboards (pixel perfect dashboards) in a project specified by the given projectId\n     *\n     * @param projectId - Project identifier\n     * @returns An array of project dashboard objects\n     */\n    getProjectDashboards(projectId) {\n        return this.xhr\n            .getParsed(`/gdc/md/${projectId}/query/projectdashboards`)\n            .then((dashboardsQuery) => {\n            const dashboardLinks = dashboardsQuery.query.entries.map((dashboard) => dashboard.link);\n            return this.getObjects(projectId, dashboardLinks);\n        });\n    }\n    /**\n     * Returns all analytical dashboards (kpi dashboards) in a project specified by the given projectId\n     *\n     * @param projectId - Project identifier\n     * @param fetchAllListedDashboards - Specify if also all the listed\n     *  dashboards should be loaded. Note that these include not just shared dashboards and dashboards\n     *  that were not shared with the user but are accessible via link, but also dashboards that cannot\n     *  be accessed because there were not shared are under strict control access (only its listed record\n     *  is accessible, not the whole metadata object).\n     *\n     * @returns An array of links to analytical dashboard objects\n     */\n    getAnalyticalDashboards(projectId, fetchAllListedDashboards) {\n        return this.xhr\n            .getParsed(`/gdc/md/${projectId}/query/analyticaldashboard?showAll=${fetchAllListedDashboards ? 1 : 0}`)\n            .then((dashboardsQuery) => {\n            return dashboardsQuery.query.entries;\n        });\n    }\n    /**\n     * Returns all dashboard plugins in a project specified by the given projectId\n     *\n     * @param projectId - Project identifier\n     * @returns An array of links to dashboard plugin objects\n     */\n    getDashboardPlugins(projectId) {\n        return this.xhr\n            .getParsed(`/gdc/md/${projectId}/query/dashboardplugins`)\n            .then((dashboardsQuery) => {\n            return dashboardsQuery.query.entries;\n        });\n    }\n    /**\n     * Returns all metrics that are reachable (with respect to ldm of the project\n     * specified by the given projectId) for given attributes\n     *\n     * @param projectId - Project identifier\n     * @param attrs - An array of attribute uris for which we want to get\n     * available metrics\n     * @returns An array of reachable metrics for the given attrs\n     * @see getAvailableAttributes\n     * @see getAvailableFacts\n     */\n    getAvailableMetrics(projectId, attrs = []) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/availablemetrics`, { body: attrs })\n            .then((apiResponse) => apiResponse.response.ok ? apiResponse.getData() : apiResponse.response)\n            .then((data) => data.entries);\n    }\n    /**\n     * Returns all attributes that are reachable (with respect to ldm of the project\n     * specified by the given projectId) for given metrics (also called as drillCrossPath)\n     *\n     * @param projectId - Project identifier\n     * @param metrics - An array of metric uris for which we want to get\n     * available attributes\n     * @returns An array of reachable attributes for the given metrics\n     * @see getAvailableMetrics\n     * @see getAvailableFacts\n     */\n    getAvailableAttributes(projectId, metrics = []) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/drillcrosspaths`, { body: metrics })\n            .then((apiResponse) => (apiResponse.response.ok ? apiResponse.getData() : apiResponse.response))\n            .then((r) => r.drillcrosspath.links);\n    }\n    /**\n     * Returns all attributes that are reachable (with respect to ldm of the project\n     * specified by the given projectId) for given metrics (also called as drillCrossPath)\n     *\n     * @param projectId - Project identifier\n     * @param items - An array of metric or attribute uris for which we want to get\n     * available facts\n     * @returns An array of reachable facts for the given items\n     * @see getAvailableAttributes\n     * @see getAvailableMetrics\n     */\n    getAvailableFacts(projectId, items = []) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/availablefacts`, { body: items })\n            .then((r) => (r.response.ok ? r.getData() : r.response))\n            .then((r) => r.entries);\n    }\n    /**\n     * Get details of a metadata object specified by its uri\n     *\n     * @param uri - uri of the metadata object for which details are to be retrieved\n     * @returns object details\n     */\n    getObjectDetails(uri) {\n        return this.xhr.get(uri).then((r) => r.getData());\n    }\n    /**\n     * Get folders with items.\n     * Returns array of folders, each having a title and items property which is an array of\n     * corresponding items. Each item is either a metric or attribute, keeping its original\n     * verbose structure.\n     *\n     * @param type - type of folders to return\n     * @returns Array of folder object, each containing title and\n     * corresponding items.\n     */\n    getFoldersWithItems(projectId, type) {\n        // fetch all folders of given type and process them\n        return this.getFolders(projectId, type).then((folders) => {\n            // Helper public to get details for each metric in the given\n            // array of links to the metadata objects representing the metrics.\n            // @returns the array of promises\n            const getMetricItemsDetails = (array) => {\n                return Promise.all(array.map(this.getObjectDetails)).then((metricArgs) => {\n                    return metricArgs.map((item) => item.metric);\n                });\n            };\n            // helper mapBy function\n            function mapBy(array, key) {\n                return array.map((item) => {\n                    return item[key];\n                });\n            }\n            // helper for sorting folder tree structure\n            // sadly @returns void (sorting == mutating array in js)\n            const sortFolderTree = (structure) => {\n                structure.forEach((folder) => {\n                    folder.items.sort((a, b) => {\n                        if (a.meta.title < b.meta.title) {\n                            return -1;\n                        }\n                        else if (a.meta.title > b.meta.title) {\n                            return 1;\n                        }\n                        return 0;\n                    });\n                });\n                structure.sort((a, b) => {\n                    if (a.title < b.title) {\n                        return -1;\n                    }\n                    else if (a.title > b.title) {\n                        return 1;\n                    }\n                    return 0;\n                });\n            };\n            const foldersLinks = mapBy(folders, \"link\");\n            const foldersTitles = mapBy(folders, \"title\");\n            // fetch details for each folder\n            return Promise.all(foldersLinks.map(this.getObjectDetails)).then((folderDetails) => {\n                // if attribute, just parse everything from what we've received\n                // and resolve. For metrics, lookup again each metric to get its\n                // identifier. If passing unsupported type, reject immediately.\n                if (type === \"attribute\") {\n                    // get all attributes, subtract what we have and add rest in unsorted folder\n                    return this.getAttributes(projectId).then((attributes) => {\n                        // get uris of attributes which are in some dimension folders\n                        const attributesInFolders = [];\n                        folderDetails.forEach((fd) => {\n                            fd.dimension.content.attributes.forEach((attr) => {\n                                attributesInFolders.push(attr.meta.uri);\n                            });\n                        });\n                        // unsortedUris now contains uris of all attributes which aren't in a folder\n                        const unsortedUris = attributes\n                            .filter((item) => attributesInFolders.indexOf(item.link) === -1)\n                            .map((item) => item.link);\n                        // now get details of attributes in no folders\n                        return Promise.all(unsortedUris.map(this.getObjectDetails)).then((unsortedAttributeArgs) => {\n                            // TODO add map to r.json\n                            // get unsorted attribute objects\n                            const unsortedAttributes = unsortedAttributeArgs.map((attr) => attr.attribute);\n                            // create structure of folders with attributes\n                            const structure = folderDetails.map((folderDetail) => {\n                                return {\n                                    title: folderDetail.dimension.meta.title,\n                                    items: folderDetail.dimension.content.attributes,\n                                };\n                            });\n                            // and append \"Unsorted\" folder with attributes to the structure\n                            structure.push({\n                                title: \"Unsorted\",\n                                items: unsortedAttributes,\n                            });\n                            sortFolderTree(structure);\n                            return structure;\n                        });\n                    });\n                }\n                else if (type === \"metric\") {\n                    const entriesLinks = folderDetails.map((entry) => mapBy(entry.folder.content.entries, \"link\"));\n                    // get all metrics, subtract what we have and add rest in unsorted folder\n                    return this.getMetrics(projectId).then((metrics) => {\n                        // get uris of metrics which are in some dimension folders\n                        const metricsInFolders = [];\n                        folderDetails.forEach((fd) => {\n                            fd.folder.content.entries.forEach((metric) => {\n                                metricsInFolders.push(metric.link);\n                            });\n                        });\n                        // unsortedUris now contains uris of all metrics which aren't in a folder\n                        const unsortedUris = metrics\n                            .filter((item) => metricsInFolders.indexOf(item.link) === -1)\n                            .map((item) => item.link);\n                        // sadly order of parameters of concat matters! (we want unsorted last)\n                        entriesLinks.push(unsortedUris);\n                        // now get details of all metrics\n                        return Promise.all(entriesLinks.map((linkArray) => getMetricItemsDetails(linkArray))).then((tree) => {\n                            // TODO add map to r.json\n                            // all promises resolved, i.e. details for each metric are available\n                            const structure = tree.map((treeItems, idx) => {\n                                // if idx is not in folders list than metric is in \"Unsorted\" folder\n                                return {\n                                    title: foldersTitles[idx] || \"Unsorted\",\n                                    items: treeItems,\n                                };\n                            });\n                            sortFolderTree(structure);\n                            return structure;\n                        });\n                    });\n                }\n                return Promise.reject(null);\n            });\n        });\n    }\n    /**\n     * Get identifier of a metadata object identified by its uri\n     *\n     * @param uri - uri of the metadata object for which the identifier is to be retrieved\n     * @returns object identifier\n     */\n    getObjectIdentifier(uri) {\n        function idFinder(obj) {\n            // TODO\n            if (obj.attribute) {\n                return obj.attribute.content.displayForms[0].meta.identifier;\n            }\n            else if (obj.dimension) {\n                return obj.dimension.content.attributes.content.displayForms[0].meta.identifier;\n            }\n            else if (obj.metric) {\n                return obj.metric.meta.identifier;\n            }\n            else if (obj.dataSet) {\n                return obj.dataSet.meta.identifier;\n            }\n            throw Error(\"Unknown object!\");\n        }\n        if (!isPlainObject(uri)) {\n            return this.getObjectDetails(uri).then((data) => idFinder(data));\n        }\n        return Promise.resolve(idFinder(uri));\n    }\n    /**\n     * Get uri of an metadata object, specified by its identifier and project id it belongs to\n     *\n     * @param projectId - id of the project\n     * @param identifier - identifier of the metadata object\n     * @returns uri of the metadata object\n     */\n    getObjectUri(projectId, identifier) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/identifiers`, {\n            body: {\n                identifierToUri: [identifier],\n            },\n        })\n            .then((r) => {\n            const data = r.getData();\n            const found = data.identifiers.find((pair) => pair.identifier === identifier);\n            if (found) {\n                return found.uri;\n            }\n            // WARNING: code in sdk-backend-bear is searching for 'not found' within the message\n            //  in order to determine the NotFound status. Cannot use the response status because\n            //  the POST request returns 200\n            throw new ApiResponseError(`Object with identifier ${identifier} not found in project ${projectId}`, r.response, r.responseBody);\n        });\n    }\n    /**\n     * Get uris specified by identifiers\n     *\n     * @param projectId - id of the project\n     * @param identifiers - identifiers of the metadata objects\n     * @returns array of identifier + uri pairs\n     */\n    getUrisFromIdentifiers(projectId, identifiers) {\n        if (!identifiers.length) {\n            return Promise.resolve([]);\n        }\n        return this.xhr\n            .post(`/gdc/md/${projectId}/identifiers`, {\n            body: {\n                identifierToUri: identifiers,\n            },\n        })\n            .then((r) => r.getData())\n            .then((data) => {\n            return data.identifiers;\n        });\n    }\n    /**\n     * Get identifiers specified by uris\n     *\n     * @param projectId - id of the project\n     * @param uris - of the metadata objects\n     * @returns array of identifier + uri pairs\n     */\n    getIdentifiersFromUris(projectId, uris) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/identifiers`, {\n            body: {\n                uriToIdentifier: uris,\n            },\n        })\n            .then((r) => r.getData())\n            .then((data) => {\n            return data.identifiers;\n        });\n    }\n    /**\n     * Get attribute elements with their labels and uris.\n     *\n     * @param projectId - id of the project\n     * @param labelUri - uri of the label (display form)\n     * @param patterns - elements labels/titles (for EXACT mode), or patterns (for WILD mode)\n     * @param mode - match mode, currently only EXACT supported\n     * @returns array of elementLabelUri objects\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    translateElementLabelsToUris(projectId, labelUri, patterns, mode = \"EXACT\") {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/labels`, {\n            body: {\n                elementLabelToUri: [\n                    {\n                        labelUri,\n                        mode,\n                        patterns,\n                    },\n                ],\n            },\n        })\n            .then((r) => { var _a; return (r.response.ok ? (_a = r.getData()) === null || _a === void 0 ? void 0 : _a.elementLabelUri : r.response); });\n    }\n    /**\n     * Get valid elements of an attribute, specified by its identifier and project id it belongs to\n     *\n     * @param projectId - id of the project\n     * @param id - display form id of the metadata object\n     * @param options - objects with options\n     * @returns ValidElements response\n     */\n    getValidElements(projectId, id, options = {}) {\n        const query = pickBy(pick(options, [\"limit\", \"offset\", \"order\", \"filter\", \"prompt\"]), (val) => val !== undefined);\n        const queryParams = queryString(query);\n        const pickedOptions = pick(options, [\n            \"uris\",\n            \"complement\",\n            \"includeTotalCountWithoutFilters\",\n            \"restrictiveDefinition\",\n        ]);\n        const { afm } = options;\n        const getRequestBodyWithReportDefinition = () => this.xhr\n            .post(`/gdc/app/projects/${projectId}/executeAfm/debug`, {\n            body: {\n                execution: {\n                    afm,\n                },\n            },\n        })\n            .then((response) => response.getData())\n            .then((reportDefinitionResult) => (Object.assign(Object.assign({}, pickedOptions), { restrictiveDefinitionContent: reportDefinitionResult.reportDefinitionWithInlinedMetrics.content })));\n        const getOptions = afm ? getRequestBodyWithReportDefinition : () => Promise.resolve(pickedOptions);\n        return getOptions().then((requestBody) => this.xhr.postParsed(`/gdc/md/${projectId}/obj/${id}/validElements${queryParams}`.replace(/\\?$/, \"\"), {\n            body: {\n                validElementsRequest: requestBody,\n            },\n        }));\n    }\n    /**\n     * Get visualization by Uri and process data\n     *\n     * @param uri - visualization URI\n     */\n    getVisualization(uri) {\n        return this.getObjectDetails(uri).then((visualizationObject) => {\n            const mdObject = visualizationObject.visualizationObject;\n            return {\n                visualizationObject: mdObject,\n            };\n        });\n    }\n    /**\n     * Save visualization\n     *\n     * @param projectId - id of the project to save the visualization to\n     * @param visualization - the visualization to save\n     */\n    saveVisualization(projectId, visualization) {\n        return this.createObject(projectId, { visualizationObject: visualization.visualizationObject });\n    }\n    /**\n     * Update visualization\n     *\n     * @param projectId - id of the project to update the visualization in\n     * @param visualization - the visualization to update\n     */\n    updateVisualization(projectId, visualizationUri, visualization) {\n        const objectId = visualizationUri.split(\"/\").slice(-1)[0];\n        return this.updateObject(projectId, objectId, {\n            visualizationObject: visualization.visualizationObject,\n        });\n    }\n    /**\n     * Delete visualization\n     *\n     * @param visualizationUri - URI of the visualization to delete\n     */\n    deleteVisualization(visualizationUri) {\n        return this.deleteObject(visualizationUri);\n    }\n    /**\n     * Delete object\n     *\n     * @experimental\n     * @param uri - of the object to be deleted\n     */\n    deleteObject(uri) {\n        return this.xhr.del(uri);\n    }\n    /**\n     * Bulk delete objects\n     */\n    async bulkDeleteObjects(projectId, uris, mode = \"cascade\") {\n        const uri = `/gdc/md/${projectId}/objects/delete`;\n        const data = {\n            delete: {\n                items: uris,\n                mode,\n            },\n        };\n        await this.xhr.post(uri, { data });\n    }\n    /**\n     * Create object\n     *\n     * @experimental\n     * @param projectId - id of the project to create the object in\n     * @param obj - object definition\n     */\n    createObject(projectId, obj) {\n        return this.xhr.postParsed(`/gdc/md/${projectId}/obj?createAndGet=true`, {\n            body: obj,\n        });\n    }\n    /**\n     * Update object\n     *\n     * @experimental\n     * @param projectId - id of the project to update the object in\n     * @param objectId - objectId of the object to update\n     * @param obj - object definition\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    updateObject(projectId, objectId, obj) {\n        return this.xhr\n            .put(`/gdc/md/${projectId}/obj/${objectId}`, {\n            body: obj,\n        })\n            .then((r) => r.getData());\n    }\n    /**\n     * Converts the visualization object to legacy report.\n     * @param projectId - id of the project to perform the conversion in\n     * @param mdObject - visualization object to convert\n     * @returns uri to the converted report\n     */\n    openVisualizationAsReport(projectId, mdObject) {\n        return this.xhr\n            .post(`/gdc/internal/projects/${projectId}/convertVisualizationObject`, {\n            body: mdObject,\n        })\n            .then((res) => res.getData())\n            .then(({ uri }) => uri);\n    }\n    /**\n     * LDM manage\n     *\n     * @experimental\n     * @param projectId - id of the project to use\n     * @param maql - MAQL to manage\n     * @param options - for polling (maxAttempts, pollStep)\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    ldmManage(projectId, maql, options = {}) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/ldm/manage2`, { body: { manage: { maql } } })\n            .then((r) => r.getData())\n            .then((response) => {\n            const manageStatusUri = response.entries[0].link;\n            return handlePolling(this.xhr.get.bind(this.xhr), manageStatusUri, this.isTaskFinished, options);\n        })\n            .then(this.checkStatusForError);\n    }\n    /**\n     * ETL pull\n     *\n     * @experimental\n     * @param projectId - id of the project to use\n     * @param uploadsDir - the directory to use\n     * @param options - for polling (maxAttempts, pollStep)\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    etlPull(projectId, uploadsDir, options = {}) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/etl/pull2`, { body: { pullIntegration: uploadsDir } })\n            .then((r) => r.getData())\n            .then((response) => {\n            const etlPullStatusUri = response.pull2Task.links.poll;\n            return handlePolling(this.xhr.get.bind(this.xhr), etlPullStatusUri, this.isTaskFinished, options);\n        })\n            .then(this.checkStatusForError);\n    }\n    isTaskFinished(task) {\n        const taskState = task.wTaskStatus.status;\n        return taskState === \"OK\" || taskState === \"ERROR\";\n    }\n    checkStatusForError(response) {\n        if (response.wTaskStatus.status === \"ERROR\") {\n            return Promise.reject(response);\n        }\n        return response;\n    }\n}\n//# sourceMappingURL=metadata.js.map","// (C) 2020-2022 GoodData Corporation\nimport { MetadataModule } from \"./metadata.js\";\nimport { UserModule } from \"./user.js\";\nimport cloneDeepWith from \"lodash/cloneDeepWith.js\";\nimport compact from \"lodash/compact.js\";\nimport omit from \"lodash/omit.js\";\nexport function createTranslator(kpiMap, visWidgetMap) {\n    return (oldUri) => {\n        const kpiMatch = kpiMap.get(oldUri);\n        const visWidgetMatch = visWidgetMap.get(oldUri);\n        if (kpiMatch) {\n            return kpiMatch;\n        }\n        else if (visWidgetMatch) {\n            return visWidgetMatch;\n        }\n        else {\n            return oldUri;\n        }\n    };\n}\n/**\n * Remove fields that we do not want to send (either because the server will generate them anyway, or because of options)\n * @param originalMeta - the meta to start with\n * @param options - the options relevant to this particular run\n */\nfunction getSanitizedMeta(originalMeta, options) {\n    return omit(originalMeta, compact([\n        \"identifier\",\n        \"uri\",\n        \"author\",\n        \"created\",\n        \"updated\",\n        \"contributor\",\n        (options === null || options === void 0 ? void 0 : options.clearLockedFlag) && \"locked\",\n    ]));\n}\n/**\n * Updates content of the dashboard\n *\n * @param dashboardUri - uri of dashboard\n * @param uriTranslator - gets updated widgets and kpis uri\n * @param filterContext - updated filter context uri\n * @experimental\n */\nexport function updateContent(analyticalDashboard, uriTranslator, filterContext) {\n    return cloneDeepWith(Object.assign(Object.assign({}, analyticalDashboard.content), { filterContext, widgets: analyticalDashboard.content.widgets.map((uri) => {\n            return uriTranslator(uri);\n        }) }), (value) => {\n        const uri = value.uri;\n        if (!uri) {\n            return;\n        }\n        return Object.assign(Object.assign({}, value), { uri: uriTranslator(uri) });\n    });\n}\nexport class MetadataModuleExt {\n    constructor(xhr) {\n        this.xhr = xhr;\n        this.metadataModule = new MetadataModule(xhr);\n        this.userModule = new UserModule(xhr);\n    }\n    /**\n     * @param projectId - id of the project\n     * @param dashboardUri - uri of the dashboard\n     * @param options - object with options:\n     *          - default - dashboard is cloned with new kpi reference and visualization widget is cloned with new\n     *              visualization object reference\n     *          - copyKpi - choose whether dashboard is cloned with new Kpi reference\n     *          - copyVisObj - choose whether visualization widget is cloned with new visualization object reference\n     *          - name - optional - choose name, default value is \"Copy of (old title of the dashboard)\"\n     *          - summary - choose summary, default is the summary of the original dashboard\n     *          - tags - choose tags, default is the tags of the original dashboard\n     *          - clearLockedFlag - if true, the isLocked flag will be cleared for the newly created dashboard, defaults to false\n     * @returns uri of cloned dashboard\n     * @experimental\n     */\n    async saveDashboardAs(projectId, dashboardUri, options) {\n        var _a, _b, _c, _d;\n        const objectsFromDashboard = await this.getObjectsFromDashboard(projectId, dashboardUri);\n        const dashboardDetails = await this.metadataModule.getObjectDetails(dashboardUri);\n        const { analyticalDashboard } = dashboardDetails;\n        const allCreatedObjUris = [];\n        const visWidgetUris = [];\n        try {\n            const filterContext = await this.duplicateFilterContext(projectId, objectsFromDashboard, options);\n            allCreatedObjUris.push(filterContext);\n            const kpiMap = await this.duplicateOrKeepKpis(projectId, objectsFromDashboard, options);\n            if (this.shouldCopyKpi(options)) {\n                allCreatedObjUris.push(...Array.from(kpiMap.values()));\n            }\n            const visWidgetMap = await this.duplicateWidgets(projectId, objectsFromDashboard, options);\n            visWidgetUris.push(...Array.from(visWidgetMap.values()));\n            const translator = createTranslator(kpiMap, visWidgetMap);\n            const updatedContent = updateContent(analyticalDashboard, translator, filterContext);\n            const duplicateDashboard = {\n                analyticalDashboard: Object.assign(Object.assign({}, dashboardDetails.analyticalDashboard), { content: {\n                        filterContext,\n                        layout: Object.assign({}, updatedContent.layout),\n                        widgets: [...updatedContent.widgets],\n                    }, meta: Object.assign(Object.assign({}, getSanitizedMeta(dashboardDetails.analyticalDashboard.meta, options)), { title: (_a = options.name) !== null && _a !== void 0 ? _a : `Copy of ${analyticalDashboard.meta.title}`, summary: (_c = (_b = options.summary) !== null && _b !== void 0 ? _b : analyticalDashboard.meta.summary) !== null && _c !== void 0 ? _c : \"\", tags: (_d = options.tags) !== null && _d !== void 0 ? _d : analyticalDashboard.meta.tags }) }),\n            };\n            return (await this.metadataModule.createObject(projectId, duplicateDashboard)).analyticalDashboard\n                .meta.uri;\n        }\n        catch (err) {\n            if (this.shouldCopyVisObj(options)) {\n                await Promise.all(visWidgetUris.map((uri) => this.cascadingDelete(projectId, uri)));\n            }\n            else {\n                await Promise.all(visWidgetUris.map((uri) => this.metadataModule.deleteObject(uri)));\n            }\n            await Promise.all(allCreatedObjUris.map((uri) => this.cascadingDelete(projectId, uri)));\n            return dashboardUri;\n        }\n    }\n    /**\n     * Deletes dashboard and its objects\n     * (only the author of the dashboard can delete the dashboard and its objects)\n     *\n     * @param projectId - Project identifier\n     * @param dashboardUri - Uri of a dashboard to be deleted\n     * @experimental\n     */\n    async cascadingDelete(projectID, dashboardUri) {\n        const objects = await this.metadataModule.getObjectUsing(projectID, dashboardUri);\n        const currentUser = (await this.userModule.getAccountInfo()).profileUri;\n        const objectsToBeDeleted = objects\n            .filter((object) => object.author === currentUser)\n            .map((object) => {\n            return object.link;\n        });\n        return this.xhr.post(`/gdc/md/${projectID}/objects/delete`, {\n            body: {\n                delete: {\n                    items: [dashboardUri].concat(objectsToBeDeleted),\n                    mode: \"cascade\",\n                },\n            },\n        });\n    }\n    async duplicateOrKeepKpis(projectId, objsFromDashboard, options) {\n        const uriMap = new Map();\n        if (this.shouldCopyKpi(options)) {\n            await Promise.all(objsFromDashboard\n                .filter((obj) => this.unwrapObj(obj).meta.category === \"kpi\")\n                .map(async (kpiWidget) => {\n                const { kpi } = kpiWidget;\n                const toSave = {\n                    kpi: {\n                        meta: getSanitizedMeta(kpi.meta, options),\n                        content: Object.assign({}, kpi.content),\n                    },\n                };\n                const newUriKpiObj = (await this.metadataModule.createObject(projectId, toSave)).kpi.meta.uri;\n                uriMap.set(kpi.meta.uri, newUriKpiObj);\n            }));\n        }\n        return uriMap;\n    }\n    async duplicateWidgets(projectId, objsFromDashboard, options) {\n        const uriMap = new Map();\n        await Promise.all(objsFromDashboard\n            .filter((obj) => this.unwrapObj(obj).meta.category === \"visualizationWidget\")\n            .map(async (visWidget) => {\n            return this.createAndUpdateWidgets(projectId, visWidget, options, uriMap);\n        }));\n        return uriMap;\n    }\n    async createAndUpdateWidgets(projectId, visWidget, options, uriMap) {\n        const { visualizationWidget } = visWidget;\n        if (this.shouldCopyVisObj(options)) {\n            const visObj = await this.metadataModule.getObjectDetails(visualizationWidget.content.visualization);\n            const toSave = {\n                visualizationObject: {\n                    meta: getSanitizedMeta(visObj.visualizationObject.meta, options),\n                    content: Object.assign({}, visObj.visualizationObject.content),\n                },\n            };\n            const newUriVisObj = (await this.metadataModule.createObject(projectId, toSave))\n                .visualizationObject.meta.uri;\n            const updatedVisWidget = {\n                visualizationWidget: {\n                    meta: getSanitizedMeta(visWidget.visualizationWidget.meta, options),\n                    content: Object.assign(Object.assign({}, visWidget.visualizationWidget.content), { visualization: newUriVisObj }),\n                },\n            };\n            const visUri = (await this.metadataModule.createObject(projectId, updatedVisWidget))\n                .visualizationWidget.meta.uri;\n            uriMap.set(visualizationWidget.meta.uri, visUri);\n        }\n        else {\n            const updatedVisWidget = {\n                visualizationWidget: {\n                    meta: getSanitizedMeta(visWidget.visualizationWidget.meta, options),\n                    content: Object.assign({}, visWidget.visualizationWidget.content),\n                },\n            };\n            const { visualizationWidget } = await this.metadataModule.createObject(projectId, updatedVisWidget);\n            uriMap.set(visWidget.visualizationWidget.meta.uri, visualizationWidget.meta.uri);\n        }\n    }\n    async duplicateFilterContext(projectId, objsFromDashboard, options) {\n        const originalFilterContext = objsFromDashboard.filter((obj) => this.unwrapObj(obj).meta.category === \"filterContext\")[0];\n        const toSave = {\n            filterContext: {\n                meta: getSanitizedMeta(originalFilterContext.filterContext.meta, options),\n                content: Object.assign({}, originalFilterContext.filterContext.content),\n            },\n        };\n        const { filterContext } = await this.metadataModule.createObject(projectId, toSave);\n        return filterContext.meta.uri;\n    }\n    async getObjectsFromDashboard(projectId, dashboardUri) {\n        const uris = await this.getObjectsUrisInDashboard(projectId, dashboardUri);\n        return this.metadataModule.getObjects(projectId, uris); // TODO improve types\n    }\n    async getObjectsUrisInDashboard(projectId, dashboardUri) {\n        return (await this.metadataModule.getObjectUsing(projectId, dashboardUri, {\n            types: [\"kpi\", \"visualizationWidget\", \"filterContext\"],\n        })).map((obj) => {\n            return obj.link;\n        });\n    }\n    unwrapObj(obj) {\n        return obj[Object.keys(obj)[0]];\n    }\n    shouldCopyVisObj(options) {\n        return !!(options.copyVisObj || typeof options.copyVisObj === \"undefined\");\n    }\n    shouldCopyKpi(options) {\n        return !!(options.copyKpi || typeof options.copyKpi === \"undefined\");\n    }\n}\n//# sourceMappingURL=metadataExt.js.map","// (C) 2007-2022 GoodData Corporation\nimport difference from \"lodash/difference.js\";\nimport map from \"lodash/map.js\";\nconst IDENTIFIER_REGEX = /\\{\\S+\\}/g;\nfunction getDependencies({ metricDefinition }) {\n    return (metricDefinition.expression.match(IDENTIFIER_REGEX) || []).map((s) => s.substring(1, s.length - 1));\n}\nfunction getIdentifier({ metricDefinition }) {\n    return metricDefinition.identifier;\n}\nfunction resolvedDependencies(resolved, { dependencies }) {\n    const identifiers = map(resolved, \"identifier\");\n    return difference(dependencies, identifiers).length === 0;\n}\nfunction scan(resolved, unresolved) {\n    for (let i = 0; i < unresolved.length; i += 1) {\n        const tested = unresolved[i];\n        if (resolvedDependencies(resolved, tested)) {\n            resolved.push(tested);\n            unresolved.splice(i, 1);\n            i -= 1;\n        }\n    }\n}\nfunction sort(unresolved) {\n    const resolved = [];\n    let lastLength;\n    while (unresolved.length > 0) {\n        lastLength = unresolved.length;\n        scan(resolved, unresolved);\n        if (unresolved.length === lastLength) {\n            throw new Error(\"Metric defintions cannot be sorted due to missing dependencies.\");\n        }\n    }\n    return resolved;\n}\nexport function sortDefinitions(definitions) {\n    const indexed = definitions.map((definition) => ({\n        definition,\n        identifier: getIdentifier(definition),\n        dependencies: getDependencies(definition),\n    }));\n    return map(sort(indexed), \"definition\");\n}\n//# sourceMappingURL=definitions.js.map","function getAttributeUris(displayForms) {\n    return displayForms.map((displayForm) => displayForm.attributeDisplayForm.content.formOf);\n}\nfunction createAttributesMap(displayForms, attributes) {\n    return displayForms.reduce((attributesMap, displayForm) => {\n        const dfUri = displayForm.attributeDisplayForm.meta.uri;\n        const attribute = attributes.find((attr) => attr.attribute.meta.uri === displayForm.attributeDisplayForm.content.formOf);\n        attributesMap[dfUri] = attribute;\n        return attributesMap;\n    }, {});\n}\nexport function getMissingUrisInAttributesMap(displayFormsUris, attributesMap) {\n    const uris = displayFormsUris || [];\n    return uris.filter((uri) => !attributesMap[uri]);\n}\nexport class AttributesMapLoaderModule {\n    constructor(md) {\n        this.md = md;\n    }\n    loadAttributesMap(projectId, attributeDisplayFormUris) {\n        if (attributeDisplayFormUris.length === 0) {\n            return Promise.resolve({});\n        }\n        return this.md\n            .getObjects(projectId, attributeDisplayFormUris)\n            .then((displayForms) => {\n            const attributeUris = getAttributeUris(displayForms);\n            return this.md.getObjects(projectId, attributeUris).then((attributes) => {\n                return createAttributesMap(displayForms, attributes);\n            });\n        });\n    }\n}\n//# sourceMappingURL=attributesMapLoader.js.map","// (C) 2007-2022 GoodData Corporation\nimport SparkMD5 from \"spark-md5\";\nimport { invariant } from \"ts-invariant\";\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport compact from \"lodash/compact.js\";\nimport filter from \"lodash/filter.js\";\nimport first from \"lodash/first.js\";\nimport find from \"lodash/find.js\";\nimport map from \"lodash/map.js\";\nimport merge from \"lodash/merge.js\";\nimport every from \"lodash/every.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport negate from \"lodash/negate.js\";\nimport partial from \"lodash/partial.js\";\nimport flatten from \"lodash/flatten.js\";\nimport set from \"lodash/set.js\";\nimport { getAttributesDisplayForms, isVisualizationObjectAttribute, isVisualizationObjectAttributeFilter, isVisualizationObjectMeasure, } from \"@gooddata/api-model-bear\";\nimport { Rules } from \"../utils/rules.js\";\nimport { sortDefinitions } from \"../utils/definitions.js\";\nimport { getMissingUrisInAttributesMap } from \"../utils/attributesMapLoader.js\";\nconst notEmpty = negate(isEmpty);\nfunction findHeaderForMappingFn(mapping, header) {\n    return ((mapping.element === header.id || mapping.element === header.uri) && header.measureIndex === undefined);\n}\nfunction wrapMeasureIndexesFromMappings(metricMappings, headers) {\n    if (metricMappings) {\n        metricMappings.forEach((mapping) => {\n            const header = find(headers, partial(findHeaderForMappingFn, mapping));\n            if (header) {\n                header.measureIndex = mapping.measureIndex;\n                header.isPoP = mapping.isPoP;\n            }\n        });\n    }\n    return headers;\n}\nconst emptyResult = {\n    extendedTabularDataResult: {\n        values: [],\n        warnings: [],\n    },\n};\nconst MAX_TITLE_LENGTH = 1000;\nfunction getMetricTitle(suffix, title) {\n    const maxLength = MAX_TITLE_LENGTH - suffix.length;\n    if (title && title.length > maxLength) {\n        if (title[title.length - 1] === \")\") {\n            return `${title.substring(0, maxLength - 2)}…)${suffix}`;\n        }\n        return `${title.substring(0, maxLength - 1)}…${suffix}`;\n    }\n    return `${title}${suffix}`;\n}\nconst getBaseMetricTitle = partial(getMetricTitle, \"\");\nconst CONTRIBUTION_METRIC_FORMAT = \"#,##0.00%\";\nfunction getPoPDefinition(measure) {\n    var _a, _b;\n    return (_b = (_a = measure === null || measure === void 0 ? void 0 : measure.definition) === null || _a === void 0 ? void 0 : _a.popMeasureDefinition) !== null && _b !== void 0 ? _b : {};\n}\nfunction getAggregation(measure) {\n    var _a, _b;\n    return ((_b = (_a = getDefinition(measure)) === null || _a === void 0 ? void 0 : _a.aggregation) !== null && _b !== void 0 ? _b : \"\").toLowerCase();\n}\nfunction isEmptyFilter(metricFilter) {\n    var _a, _b, _c, _d, _e, _f;\n    if (metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.positiveAttributeFilter) {\n        return isEmpty((_a = metricFilter.positiveAttributeFilter) === null || _a === void 0 ? void 0 : _a.in);\n    }\n    if (metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.negativeAttributeFilter) {\n        return isEmpty((_b = metricFilter.negativeAttributeFilter) === null || _b === void 0 ? void 0 : _b.notIn);\n    }\n    if (metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.absoluteDateFilter) {\n        return (((_c = metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.absoluteDateFilter) === null || _c === void 0 ? void 0 : _c.from) === undefined &&\n            ((_d = metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.absoluteDateFilter) === null || _d === void 0 ? void 0 : _d.to) === undefined);\n    }\n    return (((_e = metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.relativeDateFilter) === null || _e === void 0 ? void 0 : _e.from) === undefined &&\n        ((_f = metricFilter === null || metricFilter === void 0 ? void 0 : metricFilter.relativeDateFilter) === null || _f === void 0 ? void 0 : _f.to) === undefined);\n}\nfunction allFiltersEmpty(item) {\n    return every(map(getMeasureFilters(item), (f) => isEmptyFilter(f)));\n}\nfunction isDerived(measure) {\n    const aggregation = getAggregation(measure);\n    return aggregation !== \"\" || !allFiltersEmpty(measure);\n}\nfunction getAttrTypeFromMap(dfUri, attributesMap) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = attributesMap === null || attributesMap === void 0 ? void 0 : attributesMap[dfUri]) === null || _a === void 0 ? void 0 : _a.attribute) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.type;\n}\nfunction getAttrUriFromMap(dfUri, attributesMap) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = attributesMap === null || attributesMap === void 0 ? void 0 : attributesMap[dfUri]) === null || _a === void 0 ? void 0 : _a.attribute) === null || _b === void 0 ? void 0 : _b.meta) === null || _c === void 0 ? void 0 : _c.uri;\n}\nfunction isAttrFilterNegative(attributeFilter) {\n    return (attributeFilter === null || attributeFilter === void 0 ? void 0 : attributeFilter.negativeAttributeFilter) !== undefined;\n}\nfunction getAttrFilterElements(attributeFilter) {\n    var _a, _b;\n    const isNegative = isAttrFilterNegative(attributeFilter);\n    const elements = isNegative\n        ? (_a = attributeFilter === null || attributeFilter === void 0 ? void 0 : attributeFilter.negativeAttributeFilter) === null || _a === void 0 ? void 0 : _a.notIn\n        : (_b = attributeFilter === null || attributeFilter === void 0 ? void 0 : attributeFilter.positiveAttributeFilter) === null || _b === void 0 ? void 0 : _b.in;\n    return elements !== null && elements !== void 0 ? elements : [];\n}\nfunction getAttrFilterExpression(measureFilter, attributesMap) {\n    var _a, _b;\n    const isNegative = !!(measureFilter === null || measureFilter === void 0 ? void 0 : measureFilter.negativeAttributeFilter);\n    const detailPath = isNegative ? \"negativeAttributeFilter\" : \"positiveAttributeFilter\";\n    const attributeUri = getAttrUriFromMap((_b = (_a = measureFilter === null || measureFilter === void 0 ? void 0 : measureFilter[detailPath]) === null || _a === void 0 ? void 0 : _a.displayForm) === null || _b === void 0 ? void 0 : _b.uri, attributesMap);\n    const elements = getAttrFilterElements(measureFilter);\n    if (isEmpty(elements)) {\n        return null;\n    }\n    const elementsForQuery = map(elements, (e) => `[${e}]`);\n    const negative = isNegative ? \"NOT \" : \"\";\n    return `[${attributeUri}] ${negative}IN (${elementsForQuery.join(\",\")})`;\n}\nfunction getDateFilterExpression() {\n    // measure date filter was never supported\n    return \"\";\n}\nfunction getFilterExpression(attributesMap, measureFilter) {\n    if (isVisualizationObjectAttributeFilter(measureFilter)) {\n        return getAttrFilterExpression(measureFilter, attributesMap);\n    }\n    return getDateFilterExpression();\n}\nfunction getGeneratedMetricExpression(item, attributesMap) {\n    var _a, _b;\n    const aggregation = getAggregation(item).toUpperCase();\n    const objectUri = (_b = (_a = getDefinition(item)) === null || _a === void 0 ? void 0 : _a.item) === null || _b === void 0 ? void 0 : _b.uri;\n    const where = filter(map(getMeasureFilters(item), partial(getFilterExpression, attributesMap)), (e) => !!e);\n    return [\n        \"SELECT\",\n        aggregation ? `${aggregation}([${objectUri}])` : `[${objectUri}]`,\n        notEmpty(...where) && `WHERE ${where.join(\" AND \")}`,\n    ]\n        .filter(Boolean)\n        .join(\" \");\n}\nfunction getPercentMetricExpression(category, attributesMap, measure) {\n    var _a, _b, _c;\n    let metricExpressionWithoutFilters = `SELECT [${(_b = (_a = getDefinition(measure)) === null || _a === void 0 ? void 0 : _a.item) === null || _b === void 0 ? void 0 : _b.uri}]`;\n    if (isDerived(measure)) {\n        metricExpressionWithoutFilters = getGeneratedMetricExpression(set(cloneDeep(measure), [\"definition\", \"measureDefinition\", \"filters\"], []), attributesMap);\n    }\n    const attributeUri = getAttrUriFromMap((_c = category === null || category === void 0 ? void 0 : category.displayForm) === null || _c === void 0 ? void 0 : _c.uri, attributesMap);\n    const whereFilters = filter(map(getMeasureFilters(measure), partial(getFilterExpression, attributesMap)), (e) => !!e);\n    const byAllExpression = attributeUri ? ` BY ALL [${attributeUri}]` : \"\";\n    const whereExpression = notEmpty(...whereFilters) ? ` WHERE ${whereFilters.join(\" AND \")}` : \"\";\n    return `SELECT (${metricExpressionWithoutFilters}${whereExpression}) / (${metricExpressionWithoutFilters}${byAllExpression}${whereExpression})`;\n}\nfunction getPoPExpression(attributeUri, metricExpression) {\n    return `SELECT ${metricExpression} FOR PREVIOUS ([${attributeUri}])`;\n}\nfunction getGeneratedMetricHash(title, format, expression) {\n    return SparkMD5.hash(`${expression}#${title}#${format}`);\n}\nfunction getMeasureType(measure) {\n    const aggregation = getAggregation(measure);\n    if (aggregation === \"\") {\n        return \"metric\";\n    }\n    else if (aggregation === \"count\") {\n        return \"attribute\";\n    }\n    return \"fact\";\n}\nfunction getGeneratedMetricIdentifier(item, aggregation, expressionCreator, hasher, attributesMap) {\n    var _a, _b, _c;\n    const [, , , prjId, , id] = ((_c = (_b = (_a = getDefinition(item)) === null || _a === void 0 ? void 0 : _a.item) === null || _b === void 0 ? void 0 : _b.uri) !== null && _c !== void 0 ? _c : \"\").split(\"/\");\n    const identifier = `${prjId}_${id}`;\n    const hash = hasher(expressionCreator(item, attributesMap));\n    const hasNoFilters = isEmpty(getMeasureFilters(item));\n    const type = getMeasureType(item);\n    const prefix = hasNoFilters || allFiltersEmpty(item) ? \"\" : \"_filtered\";\n    return `${type}_${identifier}.generated.${hash}${prefix}_${aggregation}`;\n}\nfunction isDateAttribute(attribute, attributesMap = {}) {\n    var _a;\n    return getAttrTypeFromMap((_a = attribute === null || attribute === void 0 ? void 0 : attribute.displayForm) === null || _a === void 0 ? void 0 : _a.uri, attributesMap) !== undefined;\n}\nfunction getMeasureSorting(measure, mdObj) {\n    var _a, _b, _c, _d;\n    const sorting = (_b = (_a = mdObj === null || mdObj === void 0 ? void 0 : mdObj.properties) === null || _a === void 0 ? void 0 : _a.sortItems) !== null && _b !== void 0 ? _b : [];\n    const matchedSorting = sorting.find((sortItem) => {\n        var _a, _b, _c;\n        const measureSortItem = sortItem === null || sortItem === void 0 ? void 0 : sortItem.measureSortItem;\n        if (measureSortItem) {\n            // only one item now, we support only 2D data\n            const identifier = (_c = (_b = (_a = measureSortItem.locators) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.measureLocatorItem) === null || _c === void 0 ? void 0 : _c.measureIdentifier;\n            return identifier === (measure === null || measure === void 0 ? void 0 : measure.localIdentifier);\n        }\n        return false;\n    });\n    return (_d = (_c = matchedSorting === null || matchedSorting === void 0 ? void 0 : matchedSorting.measureSortItem) === null || _c === void 0 ? void 0 : _c.direction) !== null && _d !== void 0 ? _d : null;\n}\nfunction getCategorySorting(category, mdObj) {\n    var _a, _b, _c, _d;\n    const sorting = (_b = (_a = mdObj === null || mdObj === void 0 ? void 0 : mdObj.properties) === null || _a === void 0 ? void 0 : _a.sortItems) !== null && _b !== void 0 ? _b : [];\n    const matchedSorting = sorting.find((sortItem) => {\n        const attributeSortItem = sortItem === null || sortItem === void 0 ? void 0 : sortItem.attributeSortItem;\n        if (attributeSortItem) {\n            const identifier = attributeSortItem === null || attributeSortItem === void 0 ? void 0 : attributeSortItem.attributeIdentifier;\n            return identifier === (category === null || category === void 0 ? void 0 : category.localIdentifier);\n        }\n        return false;\n    });\n    return (_d = (_c = matchedSorting === null || matchedSorting === void 0 ? void 0 : matchedSorting.attributeSortItem) === null || _c === void 0 ? void 0 : _c.direction) !== null && _d !== void 0 ? _d : null;\n}\nconst createPureMetric = (measure, mdObj, measureIndex) => {\n    var _a, _b, _c;\n    return ({\n        element: (_c = (_b = (_a = measure === null || measure === void 0 ? void 0 : measure.definition) === null || _a === void 0 ? void 0 : _a.measureDefinition) === null || _b === void 0 ? void 0 : _b.item) === null || _c === void 0 ? void 0 : _c.uri,\n        sort: getMeasureSorting(measure, mdObj),\n        meta: { measureIndex },\n    });\n};\nfunction createDerivedMetric(measure, mdObj, measureIndex, attributesMap) {\n    const { format } = measure;\n    const sort = getMeasureSorting(measure, mdObj);\n    const title = getBaseMetricTitle(measure.title);\n    const hasher = partial(getGeneratedMetricHash, title, format);\n    const aggregation = getAggregation(measure);\n    const element = getGeneratedMetricIdentifier(measure, aggregation.length ? aggregation : \"base\", getGeneratedMetricExpression, hasher, attributesMap);\n    const definition = {\n        metricDefinition: {\n            identifier: element,\n            expression: getGeneratedMetricExpression(measure, attributesMap),\n            title,\n            format,\n        },\n    };\n    return {\n        element,\n        definition,\n        sort,\n        meta: {\n            measureIndex,\n        },\n    };\n}\nfunction createContributionMetric(measure, mdObj, measureIndex, attributesMap) {\n    const attribute = first(getAttributes(mdObj));\n    const getMetricExpression = partial(getPercentMetricExpression, attribute, attributesMap);\n    const title = getBaseMetricTitle(measure === null || measure === void 0 ? void 0 : measure.title);\n    const hasher = partial(getGeneratedMetricHash, title, CONTRIBUTION_METRIC_FORMAT);\n    const identifier = getGeneratedMetricIdentifier(measure, \"percent\", getMetricExpression, hasher, attributesMap);\n    return {\n        element: identifier,\n        definition: {\n            metricDefinition: {\n                identifier,\n                expression: getMetricExpression(measure),\n                title,\n                format: CONTRIBUTION_METRIC_FORMAT,\n            },\n        },\n        sort: getMeasureSorting(measure, mdObj),\n        meta: {\n            measureIndex,\n        },\n    };\n}\nfunction getOriginalMeasureForPoP(popMeasure, mdObj) {\n    return getMeasures(mdObj).find((measure) => { var _a; return (measure === null || measure === void 0 ? void 0 : measure.localIdentifier) === ((_a = getPoPDefinition(popMeasure)) === null || _a === void 0 ? void 0 : _a.measureIdentifier); });\n}\nfunction createPoPMetric(popMeasure, mdObj, measureIndex, attributesMap) {\n    var _a, _b, _c, _d, _e;\n    const title = getBaseMetricTitle(popMeasure === null || popMeasure === void 0 ? void 0 : popMeasure.title);\n    const format = popMeasure === null || popMeasure === void 0 ? void 0 : popMeasure.format;\n    const hasher = partial(getGeneratedMetricHash, title, format);\n    const attributeUri = (_c = (_b = (_a = popMeasure === null || popMeasure === void 0 ? void 0 : popMeasure.definition) === null || _a === void 0 ? void 0 : _a.popMeasureDefinition) === null || _b === void 0 ? void 0 : _b.popAttribute) === null || _c === void 0 ? void 0 : _c.uri;\n    const originalMeasure = getOriginalMeasureForPoP(popMeasure, mdObj);\n    const originalMeasureExpression = `[${(_e = (_d = getDefinition(originalMeasure)) === null || _d === void 0 ? void 0 : _d.item) === null || _e === void 0 ? void 0 : _e.uri}]`;\n    let metricExpression = getPoPExpression(attributeUri, originalMeasureExpression);\n    if (isDerived(originalMeasure)) {\n        const generated = createDerivedMetric(originalMeasure, mdObj, measureIndex, attributesMap);\n        const generatedMeasureExpression = `(${generated.definition.metricDefinition.expression})`;\n        metricExpression = getPoPExpression(attributeUri, generatedMeasureExpression);\n    }\n    const identifier = getGeneratedMetricIdentifier(originalMeasure, \"pop\", () => metricExpression, hasher, attributesMap);\n    return {\n        element: identifier,\n        definition: {\n            metricDefinition: {\n                identifier,\n                expression: metricExpression,\n                title,\n                format,\n            },\n        },\n        sort: getMeasureSorting(popMeasure, mdObj),\n        meta: {\n            measureIndex,\n            isPoP: true,\n        },\n    };\n}\nfunction createContributionPoPMetric(popMeasure, mdObj, measureIndex, attributesMap) {\n    var _a, _b, _c;\n    const attributeUri = (_c = (_b = (_a = popMeasure === null || popMeasure === void 0 ? void 0 : popMeasure.definition) === null || _a === void 0 ? void 0 : _a.popMeasureDefinition) === null || _b === void 0 ? void 0 : _b.popAttribute) === null || _c === void 0 ? void 0 : _c.uri;\n    const originalMeasure = getOriginalMeasureForPoP(popMeasure, mdObj);\n    const generated = createContributionMetric(originalMeasure, mdObj, measureIndex, attributesMap);\n    const title = getBaseMetricTitle(popMeasure === null || popMeasure === void 0 ? void 0 : popMeasure.title);\n    const format = CONTRIBUTION_METRIC_FORMAT;\n    const hasher = partial(getGeneratedMetricHash, title, format);\n    const generatedMeasureExpression = `(${generated.definition.metricDefinition.expression})`;\n    const metricExpression = getPoPExpression(attributeUri, generatedMeasureExpression);\n    const identifier = getGeneratedMetricIdentifier(originalMeasure, \"pop\", () => metricExpression, hasher, attributesMap);\n    return {\n        element: identifier,\n        definition: {\n            metricDefinition: {\n                identifier,\n                expression: metricExpression,\n                title,\n                format,\n            },\n        },\n        sort: getMeasureSorting(),\n        meta: {\n            measureIndex,\n            isPoP: true,\n        },\n    };\n}\nfunction categoryToElement(attributesMap, mdObj, category) {\n    var _a;\n    const element = getAttrUriFromMap((_a = category === null || category === void 0 ? void 0 : category.displayForm) === null || _a === void 0 ? void 0 : _a.uri, attributesMap);\n    return {\n        element,\n        sort: getCategorySorting(category, mdObj),\n    };\n}\nfunction isPoP({ definition }) {\n    return (definition === null || definition === void 0 ? void 0 : definition.popMeasureDefinition) !== undefined;\n}\nfunction isContribution({ definition }) {\n    var _a;\n    return (_a = definition === null || definition === void 0 ? void 0 : definition.measureDefinition) === null || _a === void 0 ? void 0 : _a.computeRatio;\n}\nfunction isPoPContribution(popMeasure, mdObj) {\n    if (isPoP(popMeasure)) {\n        const originalMeasure = getOriginalMeasureForPoP(popMeasure, mdObj);\n        return isContribution(originalMeasure);\n    }\n    return false;\n}\nfunction isCalculatedMeasure({ definition }) {\n    var _a;\n    return ((_a = definition === null || definition === void 0 ? void 0 : definition.measureDefinition) === null || _a === void 0 ? void 0 : _a.aggregation) === undefined;\n}\nconst rules = new Rules();\nrules.addRule([isPoPContribution], createContributionPoPMetric);\nrules.addRule([isPoP], createPoPMetric);\nrules.addRule([isContribution], createContributionMetric);\nrules.addRule([isDerived], createDerivedMetric);\nrules.addRule([isCalculatedMeasure], createPureMetric);\nfunction getMetricFactory(measure, mdObj) {\n    const factory = rules.match(measure, mdObj);\n    invariant(factory, `Unknown metric factory for: ${measure}`);\n    return factory;\n}\nfunction getExecutionDefinitionsAndColumns(mdObj, options, attributesMap) {\n    const measures = getMeasures(mdObj);\n    let attributes = getAttributes(mdObj);\n    const metrics = flatten(map(measures, (measure, index) => getMetricFactory(measure, mdObj)(measure, mdObj, index, attributesMap)));\n    if (options.removeDateItems) {\n        attributes = filter(attributes, (attribute) => !isDateAttribute(attribute, attributesMap));\n    }\n    attributes = map(attributes, partial(categoryToElement, attributesMap, mdObj));\n    const columns = compact(map([...attributes, ...metrics], \"element\"));\n    return {\n        columns,\n        definitions: sortDefinitions(compact(map(metrics, \"definition\"))),\n    };\n}\nfunction getBuckets(mdObj) {\n    var _a;\n    return (_a = mdObj === null || mdObj === void 0 ? void 0 : mdObj.buckets) !== null && _a !== void 0 ? _a : [];\n}\nfunction getAttributesInBucket(bucket) {\n    return bucket.items.reduce((list, bucketItem) => {\n        if (isVisualizationObjectAttribute(bucketItem)) {\n            list.push(bucketItem.visualizationAttribute);\n        }\n        return list;\n    }, []);\n}\nfunction getAttributes(mdObject) {\n    const buckets = getBuckets(mdObject);\n    return buckets.reduce((categoriesList, bucket) => {\n        categoriesList.push(...getAttributesInBucket(bucket));\n        return categoriesList;\n    }, []);\n}\nfunction getDefinition(measure) {\n    var _a, _b;\n    return (_b = (_a = measure === null || measure === void 0 ? void 0 : measure.definition) === null || _a === void 0 ? void 0 : _a.measureDefinition) !== null && _b !== void 0 ? _b : {};\n}\nfunction getMeasuresInBucket(bucket) {\n    return bucket.items.reduce((list, bucketItem) => {\n        if (isVisualizationObjectMeasure(bucketItem)) {\n            list.push(bucketItem.measure);\n        }\n        return list;\n    }, []);\n}\nfunction getMeasures(mdObject) {\n    const buckets = getBuckets(mdObject);\n    return buckets.reduce((categoriesList, bucket) => {\n        categoriesList.push(...getMeasuresInBucket(bucket));\n        return categoriesList;\n    }, []);\n}\nfunction getMeasureFilters(measure) {\n    var _a, _b;\n    return (_b = (_a = getDefinition(measure)) === null || _a === void 0 ? void 0 : _a.filters) !== null && _b !== void 0 ? _b : [];\n}\n/**\n * Module for execution on experimental execution resource\n *\n * @deprecated The module is in maintenance mode only (just the the compilation issues are being fixed when\n *      referenced utilities and interfaces are being changed) and is not being extended when AFM executor\n *      have new functionality added.\n */\nexport class ExperimentalExecutionsModule {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    constructor(xhr, loadAttributesMap) {\n        this.xhr = xhr;\n        this.loadAttributesMap = loadAttributesMap;\n    }\n    /**\n     * For the given projectId it returns table structure with the given\n     * elements in column headers.\n     *\n     * @param projectId - GD project identifier\n     * @param columns - An array of attribute or metric identifiers.\n     * @param executionConfiguration - Execution configuration - can contain for example\n     *                 property \"where\" containing query-like filters\n     *                 property \"orderBy\" contains array of sorted properties to order in form\n     *                      `[{column: 'identifier', direction: 'asc|desc'}]`\n     * @param settings - Supports additional settings accepted by the underlying\n     *                             xhr.ajax() calls\n     *\n     * @returns Structure with `headers` and `rawData` keys filled with values from execution.\n     */\n    getData(projectId, columns, executionConfiguration = {}, settings = {}) {\n        if (process.env.NODE_ENV !== \"test\") {\n            console.warn(\"ExperimentalExecutionsModule is deprecated and is no longer being maintained. \" +\n                \"Please migrate to the ExecuteAfmModule.\");\n        }\n        const executedReport = {\n            isLoaded: false,\n        };\n        // Create request and result structures\n        const request = {\n            execution: { columns },\n        };\n        // enrich configuration with supported properties such as\n        // where clause with query-like filters\n        [\"where\", \"orderBy\", \"definitions\"].forEach((property) => {\n            if (executionConfiguration[property]) {\n                request.execution[property] = executionConfiguration[property];\n            }\n        });\n        // Execute request\n        return this.xhr\n            .post(`/gdc/internal/projects/${projectId}/experimental/executions`, Object.assign(Object.assign({}, settings), { body: JSON.stringify(request) }))\n            .then((r) => r.getData())\n            .then((response) => {\n            var _a, _b;\n            executedReport.headers = wrapMeasureIndexesFromMappings(executionConfiguration === null || executionConfiguration === void 0 ? void 0 : executionConfiguration.metricMappings, (_b = (_a = response === null || response === void 0 ? void 0 : response.executionResult) === null || _a === void 0 ? void 0 : _a.headers) !== null && _b !== void 0 ? _b : []);\n            // Start polling on url returned in the executionResult for tabularData\n            return this.loadExtendedDataResults(response.executionResult.extendedTabularDataResult, settings);\n        })\n            .then((r) => {\n            var _a, _b, _c, _d;\n            const { result, status } = r;\n            return Object.assign(Object.assign({}, executedReport), { rawData: (_b = (_a = result === null || result === void 0 ? void 0 : result.extendedTabularDataResult) === null || _a === void 0 ? void 0 : _a.values) !== null && _b !== void 0 ? _b : [], warnings: (_d = (_c = result === null || result === void 0 ? void 0 : result.extendedTabularDataResult) === null || _c === void 0 ? void 0 : _c.warnings) !== null && _d !== void 0 ? _d : [], isLoaded: true, isEmpty: status === 204 });\n        });\n    }\n    mdToExecutionDefinitionsAndColumns(projectId, mdObj, options = {}) {\n        const allDfUris = getAttributesDisplayForms(mdObj);\n        const attributesMapPromise = this.getAttributesMap(options, allDfUris, projectId);\n        return attributesMapPromise.then((attributesMap) => {\n            return getExecutionDefinitionsAndColumns(mdObj, options, attributesMap);\n        });\n    }\n    getAttributesMap(options = {}, displayFormUris, projectId) {\n        var _a;\n        const attributesMap = (_a = options.attributesMap) !== null && _a !== void 0 ? _a : {};\n        const missingUris = getMissingUrisInAttributesMap(displayFormUris, attributesMap);\n        return this.loadAttributesMap(projectId, missingUris).then((result) => {\n            return Object.assign(Object.assign({}, attributesMap), result);\n        });\n    }\n    loadExtendedDataResults(uri, settings, prevResult = emptyResult) {\n        return new Promise((resolve, reject) => {\n            this.xhr\n                .ajax(uri, settings)\n                .then((r) => {\n                const { response } = r;\n                if (response.status === 204) {\n                    return {\n                        status: response.status,\n                        result: \"\",\n                    };\n                }\n                return {\n                    status: response.status,\n                    result: r.getData(),\n                };\n            })\n                .then(({ status, result }) => {\n                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n                const values = [\n                    ...((_b = (_a = prevResult === null || prevResult === void 0 ? void 0 : prevResult.extendedTabularDataResult) === null || _a === void 0 ? void 0 : _a.values) !== null && _b !== void 0 ? _b : []),\n                    ...((_d = (_c = result === null || result === void 0 ? void 0 : result.extendedTabularDataResult) === null || _c === void 0 ? void 0 : _c.values) !== null && _d !== void 0 ? _d : []),\n                ];\n                const warnings = [\n                    ...((_f = (_e = prevResult === null || prevResult === void 0 ? void 0 : prevResult.extendedTabularDataResult) === null || _e === void 0 ? void 0 : _e.warnings) !== null && _f !== void 0 ? _f : []),\n                    ...((_h = (_g = result === null || result === void 0 ? void 0 : result.extendedTabularDataResult) === null || _g === void 0 ? void 0 : _g.warnings) !== null && _h !== void 0 ? _h : []),\n                ];\n                const updatedResult = merge({}, prevResult, {\n                    extendedTabularDataResult: {\n                        values,\n                        warnings,\n                    },\n                });\n                const nextUri = (_k = (_j = result === null || result === void 0 ? void 0 : result.extendedTabularDataResult) === null || _j === void 0 ? void 0 : _j.paging) === null || _k === void 0 ? void 0 : _k.next;\n                if (nextUri) {\n                    resolve(this.loadExtendedDataResults(nextUri, settings, updatedResult));\n                }\n                else {\n                    resolve({ status, result: updatedResult });\n                }\n            }, reject);\n        });\n    }\n}\n//# sourceMappingURL=experimental-executions.js.map","// (C) 2007-2020 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport find from \"lodash/find.js\";\nimport every from \"lodash/every.js\";\nexport class Rules {\n    constructor() {\n        this.rules = [];\n    }\n    addRule(tests, callback) {\n        this.rules.push([tests, callback]);\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    match(subject, params) {\n        const [, callback] = find(this.rules, ([tests]) => every(tests, (test) => test(subject, params)));\n        invariant(callback, \"No suitable rule to handle the parameters found.\");\n        return callback;\n    }\n}\n//# sourceMappingURL=rules.js.map","// (C) 2007-2019 GoodData Corporation\n/**\n * Converts 'client-land' AFM to JSON payload acceptable by REST API.\n *\n * @param execution - execution to send to API\n */\nexport function convertExecutionToJson(execution) {\n    return JSON.stringify(execution);\n}\n//# sourceMappingURL=execute-afm.convert.js.map","// (C) 2007-2020 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport qs from \"qs\";\nimport range from \"lodash/range.js\";\nimport { ApiResponseError } from \"../xhr.js\";\nimport { convertExecutionToJson } from \"./execute-afm.convert.js\";\nimport { stringify } from \"../utils/queryString.js\";\nexport const DEFAULT_LIMIT = 1000;\n/**\n * This interface represents error caused during second part of api execution (data fetching)\n * and contains information about first execution part if that part was successful.\n *\n * @internal\n * @internal\n */\nexport class ApiExecutionResponseError extends ApiResponseError {\n    constructor(error, executionResponse) {\n        super(error.message, error.response, error.responseBody);\n        this.executionResponse = executionResponse;\n    }\n}\nexport class ExecuteAfmModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    /**\n     * Execute AFM and fetch all data results\n     *\n     * @param projectId - GD project identifier\n     * @param execution - what to execute\n     *\n     * @returns Structure with `executionResponse` and `executionResult`\n     */\n    executeAfm(projectId, execution) {\n        var _a, _b, _c;\n        validateNumOfDimensions((_c = (_b = (_a = execution.execution.resultSpec) === null || _a === void 0 ? void 0 : _a.dimensions) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0);\n        return this.getExecutionResponse(projectId, execution).then((executionResponse) => {\n            return this.getExecutionResult(executionResponse.links.executionResult)\n                .then((executionResult) => {\n                return { executionResponse, executionResult };\n            })\n                .catch((error) => {\n                throw new ApiExecutionResponseError(error, executionResponse);\n            });\n        });\n    }\n    /**\n     * Execute AFM and return execution's response; the response describes dimensionality of the results and\n     * includes link to poll for the results.\n     *\n     * @param projectId - GD project identifier\n     * @param execution - what to get the response for\n     *\n     * @returns Promise with `executionResponse`\n     */\n    getExecutionResponse(projectId, execution) {\n        var _a, _b, _c;\n        validateNumOfDimensions((_c = (_b = (_a = execution.execution.resultSpec) === null || _a === void 0 ? void 0 : _a.dimensions) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0);\n        return this.xhr\n            .post(`/gdc/app/projects/${projectId}/executeAfm`, { body: convertExecutionToJson(execution) })\n            .then((apiResponse) => apiResponse.getData())\n            .then(unwrapExecutionResponse);\n    }\n    /**\n     * Execute saved visualization and get all data.\n     *\n     * NOTE: all functionality related to executeVisualization is experimental and subject to possible breaking changes\n     * in the future; location and shape of this interface WILL change when the functionality is made GA.\n     *\n     * @param projectId - GD project identifier\n     * @param visExecution - execution payload\n     *\n     * @internal\n     * @internal\n     */\n    _executeVisualization(projectId, visExecution) {\n        // We have ONE-3961 as followup to take this out of experimental mode\n        return this._getVisExecutionResponse(projectId, visExecution).then((executionResponse) => {\n            return this.getExecutionResult(executionResponse.links.executionResult).then((executionResult) => {\n                return { executionResponse, executionResult };\n            });\n        });\n    }\n    /**\n     *\n     * Execute visualization and return the response; the response describes dimensionality of the results and\n     * includes link to poll for the results.\n     *\n     * NOTE: all functionality related to executeVisualization is experimental and subject to possible breaking changes\n     * in the future; location and shape of this interface WILL change when the functionality is made GA.\n     *\n     * @param projectId - GD project identifier\n     * @param visExecution - execution payload\n     *\n     * @internal\n     * @internal\n     */\n    _getVisExecutionResponse(projectId, visExecution) {\n        // We have ONE-3961 as followup to take this out of experimental mode\n        const body = createExecuteVisualizationBody(visExecution);\n        return this.xhr\n            .post(`/gdc/app/projects/${projectId}/executeVisualization`, { body })\n            .then((apiResponse) => apiResponse.getData())\n            .then(unwrapExecutionResponse);\n    }\n    //\n    // working with results\n    //\n    /**\n     * Get one page of Result from Execution (with requested limit and offset)\n     *\n     * @param executionResultUri - URI of the execution result to work with\n     * @param limit - limit for each dimension\n     * @param offset - offset for each dimension\n     *\n     * @returns Promise with `executionResult` or `null` (null means empty response - HTTP 204)\n     */\n    getPartialExecutionResult(executionResultUri, limit, offset) {\n        const executionResultUriQueryPart = getExecutionResultUriQueryPart(executionResultUri);\n        const numOfDimensions = Number(qs.parse(executionResultUriQueryPart).dimensions);\n        validateNumOfDimensions(numOfDimensions);\n        return this.getPage(executionResultUri, limit, offset);\n    }\n    /**\n     * Get whole ExecutionResult\n     *\n     * @param executionResultUri - URI of the execution result to work with\n     *\n     * @returns Promise with `executionResult` or `null` (null means empty response - HTTP 204)\n     */\n    getExecutionResult(executionResultUri) {\n        const executionResultUriQueryPart = getExecutionResultUriQueryPart(executionResultUri);\n        const numOfDimensions = Number(qs.parse(executionResultUriQueryPart).dimensions);\n        validateNumOfDimensions(numOfDimensions);\n        const limit = Array(numOfDimensions).fill(DEFAULT_LIMIT);\n        const offset = Array(numOfDimensions).fill(0);\n        return this.getAllPages(executionResultUri, limit, offset);\n    }\n    getPage(executionResultUri, limit, offset) {\n        return this.fetchExecutionResult(executionResultUri, limit, offset).then((executionResultWrapper) => {\n            return executionResultWrapper ? unwrapExecutionResult(executionResultWrapper) : null;\n        });\n    }\n    getAllPages(executionResultUri, limit, offset, prevExecutionResult) {\n        return this.fetchExecutionResult(executionResultUri, limit, offset).then((executionResultWrapper) => {\n            if (!executionResultWrapper) {\n                return null;\n            }\n            const executionResult = unwrapExecutionResult(executionResultWrapper);\n            const newExecutionResult = prevExecutionResult\n                ? mergePage(prevExecutionResult, executionResult)\n                : executionResult;\n            const { offset, total } = executionResult.paging;\n            const nextOffset = getNextOffset(limit, offset, total);\n            const nextLimit = getNextLimit(limit, nextOffset, total);\n            return nextPageExists(nextOffset, total)\n                ? this.getAllPages(executionResultUri, nextLimit, nextOffset, newExecutionResult)\n                : newExecutionResult;\n        });\n    }\n    fetchExecutionResult(executionResultUri, limit, offset) {\n        const uri = replaceLimitAndOffsetInUri(executionResultUri, limit, offset);\n        return this.xhr\n            .get(uri)\n            .then((apiResponse) => (apiResponse.response.status === 204 ? null : apiResponse.getData()));\n    }\n}\nfunction getExecutionResultUriQueryPart(executionResultUri) {\n    return executionResultUri.split(/\\?(.+)/)[1];\n}\nfunction unwrapExecutionResponse(executionResponseWrapper) {\n    return executionResponseWrapper.executionResponse;\n}\nfunction unwrapExecutionResult(executionResultWrapper) {\n    return executionResultWrapper.executionResult;\n}\nfunction validateNumOfDimensions(numOfDimensions) {\n    invariant(numOfDimensions === 1 || numOfDimensions === 2, `${numOfDimensions} dimensions are not allowed. Only 1 or 2 dimensions are supported.`);\n}\nfunction createExecuteVisualizationBody(visExecution) {\n    const { reference, resultSpec, filters } = visExecution.visualizationExecution;\n    const resultSpecProp = resultSpec ? { resultSpec } : undefined;\n    const filtersProp = filters ? { filters } : undefined;\n    return JSON.stringify({\n        visualizationExecution: Object.assign(Object.assign({ reference }, resultSpecProp), filtersProp),\n    });\n}\nexport function replaceLimitAndOffsetInUri(oldUri, limit, offset) {\n    const [uriPart, queryPart] = oldUri.split(/\\?(.+)/);\n    const query = Object.assign(Object.assign({}, qs.parse(queryPart)), { limit: limit.join(\",\"), offset: offset.join(\",\") });\n    return uriPart + stringify(query, { addQueryPrefix: true });\n}\nexport function getNextOffset(limit, offset, total) {\n    const numOfDimensions = total.length;\n    const defaultNextRowsOffset = offset[0] + limit[0];\n    if (numOfDimensions === 1) {\n        return [defaultNextRowsOffset];\n    }\n    const defaultNextColumnsOffset = offset[1] + limit[1];\n    const nextColumnsExist = offset[1] + limit[1] < total[1];\n    const nextRowsOffset = nextColumnsExist\n        ? offset[0] // stay in the same rows\n        : defaultNextRowsOffset; // go to the next rows\n    const nextColumnsOffset = nextColumnsExist\n        ? defaultNextColumnsOffset // next columns for the same rows\n        : 0; // start in the beginning of the next rows\n    return [nextRowsOffset, nextColumnsOffset];\n}\nexport function getNextLimit(limit, nextOffset, total) {\n    const numOfDimensions = total.length;\n    validateNumOfDimensions(numOfDimensions);\n    const getSingleNextLimit = (limit, nextOffset, total) => nextOffset + limit > total ? total - nextOffset : limit;\n    // prevent set up lower limit than possible for 2nd dimension in the beginning of the next rows\n    if (numOfDimensions === 2 &&\n        nextOffset[1] === 0 && // beginning of the next rows\n        limit[0] < total[1] // limit from 1st dimension should be used in 2nd dimension\n    ) {\n        return [getSingleNextLimit(limit[0], nextOffset[0], total[0]), limit[0]];\n    }\n    return range(numOfDimensions).map((i) => getSingleNextLimit(limit[i], nextOffset[i], total[i]));\n}\nexport function nextPageExists(nextOffset, total) {\n    // expression \"return nextLimit[0] > 0\" also returns correct result\n    return nextOffset[0] < total[0];\n}\nfunction mergeHeaderItemsForEachAttribute(dimension, headerItems, result) {\n    if (headerItems && result.headerItems) {\n        for (let attrIdx = 0; attrIdx < headerItems[dimension].length; attrIdx += 1) {\n            result.headerItems[dimension][attrIdx].push(...headerItems[dimension][attrIdx]);\n        }\n    }\n}\n// works only for one or two dimensions\nexport function mergePage(prevExecutionResult, executionResult) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const result = prevExecutionResult;\n    const { headerItems, data, paging } = executionResult;\n    const mergeHeaderItems = (dimension) => {\n        // for 1 dimension we already have the headers from first page\n        const otherDimension = dimension === 0 ? 1 : 0;\n        const isEdge = paging.offset[otherDimension] === 0;\n        if (isEdge) {\n            mergeHeaderItemsForEachAttribute(dimension, headerItems, result);\n        }\n    };\n    // merge data\n    const rowOffset = paging.offset[0];\n    if (result.data[rowOffset]) {\n        // appending columns to existing rows\n        for (let i = 0; i < data.length; i += 1) {\n            const columns = data[i];\n            const resultData = result.data[i + rowOffset];\n            resultData.push(...columns);\n        }\n    }\n    else {\n        // appending new rows\n        const resultData = result.data;\n        const currentPageData = data;\n        resultData.push(...currentPageData);\n    }\n    // merge headerItems\n    if (paging.offset.length > 1) {\n        mergeHeaderItems(0);\n        mergeHeaderItems(1);\n    }\n    else {\n        mergeHeaderItemsForEachAttribute(0, headerItems, result);\n    }\n    // update page count\n    if (paging.offset.length === 1) {\n        result.paging.count = [(_d = (_c = (_b = (_a = result === null || result === void 0 ? void 0 : result.headerItems) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0];\n    }\n    if (paging.offset.length === 2) {\n        result.paging.count = [\n            (_h = (_g = (_f = (_e = result === null || result === void 0 ? void 0 : result.headerItems) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.length) !== null && _h !== void 0 ? _h : 0,\n            (_m = (_l = (_k = (_j = result === null || result === void 0 ? void 0 : result.headerItems) === null || _j === void 0 ? void 0 : _j[1]) === null || _k === void 0 ? void 0 : _k[0]) === null || _l === void 0 ? void 0 : _l.length) !== null && _m !== void 0 ? _m : 0,\n        ];\n    }\n    return result;\n}\n//# sourceMappingURL=execute-afm.js.map","// (C) 2007-2020 GoodData Corporation\nimport { ExperimentalExecutionsModule } from \"./execution/experimental-executions.js\";\nimport { AttributesMapLoaderModule } from \"./utils/attributesMapLoader.js\";\nimport { ExecuteAfmModule } from \"./execution/execute-afm.js\";\n/**\n * Execution endpoints\n *\n *\n */\nexport class ExecutionModule {\n    constructor(xhr, md) {\n        this.executeAfmModule = new ExecuteAfmModule(xhr);\n        this.executeAfm = this.executeAfmModule.executeAfm.bind(this.executeAfmModule);\n        this.getExecutionResponse = this.executeAfmModule.getExecutionResponse.bind(this.executeAfmModule);\n        this._executeVisualization = this.executeAfmModule._executeVisualization.bind(this.executeAfmModule);\n        this._getVisExecutionResponse = this.executeAfmModule._getVisExecutionResponse.bind(this.executeAfmModule);\n        this.getPartialExecutionResult = this.executeAfmModule.getPartialExecutionResult.bind(this.executeAfmModule);\n        this.getExecutionResult = this.executeAfmModule.getExecutionResult.bind(this.executeAfmModule);\n        this.xhr = xhr;\n        this.md = md;\n    }\n    getData(projectId, columns, executionConfiguration = {}, settings = {}) {\n        return this.getExperimentalExecutionsModule().getData(projectId, columns, executionConfiguration, settings);\n    }\n    mdToExecutionDefinitionsAndColumns(projectId, mdObj, options = {}) {\n        return this.getExperimentalExecutionsModule().mdToExecutionDefinitionsAndColumns(projectId, mdObj, options);\n    }\n    getExperimentalExecutionsModule() {\n        const loaderModule = new AttributesMapLoaderModule(this.md);\n        return new ExperimentalExecutionsModule(this.xhr, loaderModule.loadAttributesMap.bind(loaderModule));\n    }\n}\n//# sourceMappingURL=execution.js.map","import compact from \"lodash/compact.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { ERROR_RESTRICTED_CODE, ERROR_RESTRICTED_MESSAGE } from \"../constants/errors.js\";\nimport { ApiResponseError } from \"../xhr.js\";\nimport { handleHeadPolling } from \"../util.js\";\nimport { isExportFinished, getFormatContentType } from \"../utils/export.js\";\n/**\n * Functions for working with reports\n */\nexport class ReportModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n        this.handleExportResultError = (error) => {\n            if (this.isApiResponseError(error) &&\n                error.response.status === 400 &&\n                error.responseBody.indexOf(ERROR_RESTRICTED_CODE) !== -1) {\n                const updatedError = new ApiResponseError(ERROR_RESTRICTED_MESSAGE, error.response, error.responseBody);\n                return Promise.reject(updatedError);\n            }\n            return Promise.reject(error);\n        };\n    }\n    /**\n     * exportResult\n     * request new result export\n     * request new export of existing AFM execution\n     *\n     * Export file is downloaded and attached as Blob data to the current window instance.\n     *\n     * @experimental\n     * @param projectId - GoodData projectId\n     * @param executionResult - report which should be exported\n     * @param exportConfig - requested export options\n     * @param pollingOptions - for polling (maxAttempts, pollStep)\n     * @returns Resolves if export successfully,\n     *                   Reject if export has error (network error, api error)\n     */\n    exportResult(projectId, executionResult, exportConfig = {}, pollingOptions = {}) {\n        const requestPayload = {\n            resultExport: {\n                executionResult,\n                exportConfig: Object.assign(Object.assign({}, exportConfig), this.sanitizeExportConfig(exportConfig)),\n            },\n        };\n        return this.xhr\n            .post(`/gdc/internal/projects/${projectId}/exportResult`, { body: requestPayload })\n            .then((response) => response.getData())\n            .then((data) => handleHeadPolling(this.xhr.get.bind(this.xhr), data.uri, isExportFinished, Object.assign(Object.assign({}, pollingOptions), { blobContentType: getFormatContentType(exportConfig.format) })))\n            .catch(this.handleExportResultError);\n    }\n    sanitizeExportConfig(exportConfig) {\n        const { afm } = exportConfig;\n        if (afm && !isEmpty(afm.filters)) {\n            const sanitizedAfm = Object.assign(Object.assign({}, afm), { filters: this.sanitizeFilters(afm.filters) });\n            return Object.assign(Object.assign({}, exportConfig), { afm: sanitizedAfm });\n        }\n        return exportConfig;\n    }\n    isApiResponseError(error) {\n        return error.response !== undefined;\n    }\n    sanitizeFilters(filters) {\n        return filters ? compact(filters) : [];\n    }\n}\n//# sourceMappingURL=report.js.map","// (C) 2019-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isFilterContextDateFilter(filter) {\n    return !isEmpty(filter) && !!filter.dateFilter;\n}\n/**\n * @public\n */\nexport function isFilterContextAttributeFilter(filter) {\n    return !isEmpty(filter) && !!filter.attributeFilter;\n}\n/**\n * @public\n */\nexport function isFilterContext(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"filterContext\";\n}\n/**\n * @public\n */\nexport function isWrappedFilterContext(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && obj.hasOwnProperty(\"filterContext\");\n}\n/**\n * @public\n */\nexport function isTempFilterContext(obj) {\n    return !!(!isEmpty(obj) &&\n        obj.created &&\n        obj.uri &&\n        obj.filters.every((x) => isFilterContextDateFilter(x) || isFilterContextAttributeFilter(x)));\n}\n/**\n * @public\n */\nexport function isWrappedTempFilterContext(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && obj.hasOwnProperty(\"tempFilterContext\");\n}\n//# sourceMappingURL=GdcFilterContext.js.map","// (C) 2019-2023 GoodData Corporation\nimport omitBy from \"lodash/omitBy.js\";\nimport isUndefined from \"lodash/isUndefined.js\";\nimport { isFilterContextAttributeFilter, isFilterContextDateFilter, } from \"./GdcFilterContext.js\";\nfunction sanitizeDateFilter(filter) {\n    const { dateFilter: { from, to, type, granularity }, dateFilter, } = filter;\n    const sanitizedProperties = omitBy(dateFilter, isUndefined);\n    return {\n        dateFilter: Object.assign(Object.assign(Object.assign({ type,\n            granularity }, sanitizedProperties), (from === undefined ? {} : { from: String(from) })), (to === undefined ? {} : { to: String(to) })),\n    };\n}\nfunction sanitizeAttributeFilter(filter) {\n    const { attributeFilter: { displayForm, negativeSelection, attributeElements }, } = filter;\n    return {\n        attributeFilter: {\n            displayForm,\n            negativeSelection,\n            attributeElements,\n        },\n    };\n}\n/**\n * @public\n */\nexport function sanitizeFiltersForExport(filters) {\n    return filters.map((filter) => {\n        if (isFilterContextDateFilter(filter)) {\n            return sanitizeDateFilter(filter);\n        }\n        if (isFilterContextAttributeFilter(filter)) {\n            return sanitizeAttributeFilter(filter);\n        }\n        return filter;\n    });\n}\n//# sourceMappingURL=utils.js.map","// (C) 2019-2023 GoodData Corporation\nimport { sanitizeFiltersForExport } from \"@gooddata/api-model-bear\";\nimport { handleHeadPolling } from \"../util.js\";\nimport { isExportFinished } from \"../utils/export.js\";\nexport class DashboardModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    async exportToPdf(projectId, dashboardUri, filters = [], pollingOptions = {}) {\n        const sanitizedFilters = sanitizeFiltersForExport(filters);\n        const payload = this.getDashboardExportPayload(dashboardUri, sanitizedFilters);\n        const response = await this.xhr.post(`/gdc/internal/projects/${projectId}/exportDashboard`, { body: payload });\n        return this.pollPdfFile(response, pollingOptions);\n    }\n    async pollPdfFile(response, pollingOptions) {\n        const data = response.getData();\n        return handleHeadPolling(this.xhr.head.bind(this.xhr), data.uri, isExportFinished, Object.assign(Object.assign({}, pollingOptions), { blobContentType: \"application/pdf\" }));\n    }\n    getDashboardExportPayload(dashboardUri, filters) {\n        if (filters.length) {\n            return {\n                dashboardExport: {\n                    dashboardUri,\n                    filters,\n                },\n            };\n        }\n        // minimize payload\n        return {\n            dashboardExport: {\n                dashboardUri,\n            },\n        };\n    }\n}\n//# sourceMappingURL=dashboard.js.map","// (C) 2007-2020 GoodData Corporation\nimport set from \"lodash/set.js\";\n/**\n * Config module holds SDK configuration variables\n *\n * Currently its only custom domain - which enabled using\n * sdk from different domain (using CORS)\n *\n * Never set properties directly - always use setter methods\n *\n */\nconst URL_REGEXP = \"(?:(https)://+|(www\\\\.)?)\\\\w[:;,\\\\.?\\\\[\\\\]\\\\w/~%&=+#-@!]*\";\nexport function sanitizeDomain(domain) {\n    if (domain === null) {\n        return undefined;\n    }\n    const sanitizedDomain = domain || \"\";\n    const link = sanitizedDomain.match(URL_REGEXP);\n    if (!link) {\n        throw new Error(`${domain} is not a valid url`);\n    }\n    // ensure https:// prefix and strip possible trailing /\n    return `https://${link[0].replace(/^https?:\\/\\/|\\/$/g, \"\")}`;\n}\n/**\n * Returns sanitized config\n *\n * @returns config with sanitized domain\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function sanitizeConfig(config) {\n    const sanitized = Object.assign({}, config);\n    if (config.domain) {\n        sanitized.domain = sanitizeDomain(config.domain);\n    }\n    return sanitized;\n}\n/**\n * Config factory\n *\n * @param configStorage - config object\n * @returns SDK config module\n */\nexport class ConfigModule {\n    constructor(configStorage) {\n        this.configStorage = configStorage;\n        if (arguments.length !== 1) {\n            throw new Error(\"Config module has to be called with exactly one argument.\");\n        }\n    }\n    /**\n     * Sets custom domain. Parameter is url which has always to be https://\n     * (if you don't provide it, we will do it for you).\n     *\n     * RegExp inspired taken from\n     * https://github.com/jarib/google-closure-library/blob/master/closure/goog/string/linkify.js\n     * @param domain - valid domain starting with https:// or null for removing\n     */\n    setCustomDomain(domain) {\n        this.configStorage.domain = sanitizeDomain(domain);\n    }\n    /**\n     * Returns current domain\n     *\n     */\n    getCustomDomain() {\n        return this.configStorage.domain;\n    }\n    /**\n     * Sets JS package and version info\n     *\n     * @param name - package name\n     * @param version - package version (semver)\n     * @internal\n     */\n    setJsPackage(name, version) {\n        if (!this.configStorage.originPackage) {\n            // only set the first (topmost) package\n            this.configStorage.originPackage = { name, version };\n        }\n    }\n    /**\n     * Returns JS package and version info\n     *\n     * @returns with 'name' and 'version' properties\n     * @internal\n     */\n    getJsPackage() {\n        return this.configStorage.originPackage;\n    }\n    setRequestHeader(key, value) {\n        set(this.configStorage, [\"xhrSettings\", \"headers\", key], value);\n    }\n    getRequestHeader(key) {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this.configStorage) === null || _a === void 0 ? void 0 : _a.xhrSettings) === null || _b === void 0 ? void 0 : _b.headers) === null || _c === void 0 ? void 0 : _c[key];\n    }\n}\n//# sourceMappingURL=config.js.map","// (C) 2007-2022 GoodData Corporation\nimport find from \"lodash/find.js\";\nimport omit from \"lodash/omit.js\";\nimport omitBy from \"lodash/omitBy.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport { omitEmpty } from \"./util.js\";\nconst REQUEST_DEFAULTS = {\n    types: [\"attribute\", \"metric\", \"fact\"],\n    paging: {\n        offset: 0,\n    },\n};\nconst LOAD_DATE_DATASET_DEFAULTS = {\n    includeUnavailableDateDataSetsCount: true,\n    includeAvailableDateAttributes: true,\n};\n/**\n * Convert specific params in options to \"requiredDataSets\" structure. For more details look into\n * res file https://github.com/gooddata/gdc-bear/blob/develop/resources/specification/internal/catalog.res\n *\n * @param options - Supported keys in options are:\n * <ul>\n * <li>dataSetIdentifier - in value is string identifier of dataSet - this leads to CUSTOM type\n * <li>returnAllDateDataSets - true value means to return ALL values without dataSet differentiation\n * <li>returnAllRelatedDateDataSets - only related date dataSets are loaded across all dataSets\n * <li>by default we get PRODUCTION dataSets\n * </ul>\n * @returns \"requiredDataSets\" object hash.\n */\nconst getRequiredDataSets = (options = {}) => {\n    if (options.returnAllRelatedDateDataSets) {\n        return {};\n    }\n    if (options.returnAllDateDataSets) {\n        return { requiredDataSets: { type: \"ALL\" } };\n    }\n    if (options.dataSetIdentifier) {\n        return {\n            requiredDataSets: {\n                type: \"CUSTOM\",\n                customIdentifiers: [options.dataSetIdentifier],\n            },\n        };\n    }\n    return { requiredDataSets: { type: \"PRODUCTION\" } };\n};\nconst buildItemDescriptionObjects = ({ columns, definitions }) => {\n    if (!columns) {\n        return [];\n    }\n    return columns.map((column) => {\n        var _a;\n        const definition = find(definitions, ({ metricDefinition }) => metricDefinition.identifier === column);\n        const maql = (_a = definition === null || definition === void 0 ? void 0 : definition.metricDefinition) === null || _a === void 0 ? void 0 : _a.expression;\n        if (maql) {\n            return { expression: maql };\n        }\n        return { uri: column };\n    });\n};\nconst isStoredItemDescription = (itemDescription) => {\n    return !!itemDescription.uri;\n};\nconst isAdHocItemDescription = (itemDescription) => {\n    return !!itemDescription.expression;\n};\n/**\n * @internal\n */\nexport const unwrapItemDescriptionObject = (itemDescription) => {\n    if (isStoredItemDescription(itemDescription)) {\n        return itemDescription.uri;\n    }\n    if (isAdHocItemDescription(itemDescription)) {\n        return itemDescription.expression;\n    }\n    throw new Error(\"Item description can only have expression or uri\");\n};\n// When the limit is more than 2000,\n// catalog items endpoint returns status of 500\nconst CATALOG_ITEMS_LIMIT = 1000;\nexport class CatalogueModule {\n    constructor(xhr, execution) {\n        this.xhr = xhr;\n        this.execution = execution;\n    }\n    /**\n     * Load all catalog items\n     * @param projectId - string\n     * @param options - ILoadCatalogItemsParams\n     */\n    async loadAllItems(projectId, options = {}) {\n        const sanitizedOptions = omitEmpty(options);\n        const loadAll = async (requestOptions, items = []) => {\n            const result = await this.xhr.getParsed(`/gdc/internal/projects/${projectId}/catalog/items`, {\n                data: requestOptions,\n            });\n            const resultItems = result.catalogItems.items;\n            const updatedItems = [...items, ...resultItems];\n            if (resultItems.length === requestOptions.limit) {\n                const updatedRequestOptions = Object.assign(Object.assign({}, requestOptions), { offset: result.catalogItems.paging.offset + requestOptions.limit });\n                return loadAll(updatedRequestOptions, updatedItems);\n            }\n            return updatedItems;\n        };\n        return loadAll(Object.assign({ offset: 0, limit: CATALOG_ITEMS_LIMIT }, sanitizedOptions));\n    }\n    /**\n     * Load catalog groups\n     * @param projectId - string\n     * @param options - ILoadCatalogGroupsParams\n     */\n    async loadGroups(projectId, options = {}) {\n        const result = await this.xhr.getParsed(`/gdc/internal/projects/${projectId}/catalog/groups`, {\n            data: omitEmpty(options),\n        });\n        return result.catalogGroups;\n    }\n    /**\n     * Load available item uris by already used uris and expressions\n     * @param projectId - string\n     * @param options - ILoadAvailableCatalogItemsParams\n     */\n    async loadAvailableItemUris(projectId, options) {\n        const sanitizedCatalogQueryRequest = omitBy(options.catalogQueryRequest, isEmpty);\n        const result = await this.xhr.postParsed(`/gdc/internal/projects/${projectId}/catalog/query`, {\n            data: {\n                catalogQueryRequest: sanitizedCatalogQueryRequest,\n            },\n        });\n        return result.catalogAvailableItems.items;\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    loadItems(projectId, options = {}) {\n        var _a;\n        const request = omit(Object.assign(Object.assign(Object.assign({}, REQUEST_DEFAULTS), options), getRequiredDataSets(options)), [\"dataSetIdentifier\", \"returnAllDateDataSets\", \"attributesMap\"]);\n        const mdObj = (_a = cloneDeep(options)) === null || _a === void 0 ? void 0 : _a.bucketItems;\n        const attributesMap = options === null || options === void 0 ? void 0 : options.attributesMap;\n        const hasBuckets = (mdObj === null || mdObj === void 0 ? void 0 : mdObj.buckets) !== undefined;\n        if (hasBuckets) {\n            return this.loadItemDescriptionObjects(projectId, mdObj, attributesMap).then((descriptionObjects) => this.loadCatalog(projectId, Object.assign(Object.assign({}, request), { bucketItems: descriptionObjects.map(unwrapItemDescriptionObject) })));\n        }\n        return this.loadCatalog(projectId, request);\n    }\n    async loadDateDataSets(projectId, options) {\n        const mdObj = cloneDeep(options).bucketItems;\n        const descriptionObjects = mdObj\n            ? await this.loadItemDescriptionObjects(projectId, mdObj, options.attributesMap)\n            : undefined;\n        const bucketItems = descriptionObjects === null || descriptionObjects === void 0 ? void 0 : descriptionObjects.map(unwrapItemDescriptionObject);\n        const omittedOptions = [\n            \"filter\",\n            \"types\",\n            \"paging\",\n            \"dataSetIdentifier\",\n            \"returnAllDateDataSets\",\n            \"returnAllRelatedDateDataSets\",\n            \"attributesMap\",\n        ];\n        // includeObjectsWithTags has higher priority than excludeObjectsWithTags,\n        // so when present omit excludeObjectsWithTags\n        if (options.includeObjectsWithTags) {\n            omittedOptions.push(\"excludeObjectsWithTags\");\n        }\n        const request = omit(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, LOAD_DATE_DATASET_DEFAULTS), REQUEST_DEFAULTS), options), getRequiredDataSets(options)), { bucketItems }), omittedOptions);\n        return this.requestDateDataSets(projectId, request);\n    }\n    /**\n     * Loads item description objects and returns them\n     *\n     * @internal\n     *\n     * @param projectId - id of the project to load from\n     * @param mdObj - metadata object containing buckets, visualization class, properties etc.\n     * @param attributesMap - contains map of attributes where the keys are the attributes display forms URIs\n     * @param removeDateItems - whether to skip date items\n     * @returns ItemDescription which is either `{ uri: string }` or `{ expression: string }`\n     */\n    async loadItemDescriptionObjects(projectId, mdObj, attributesMap = {}, removeDateItems = false) {\n        const definitionsAndColumns = await this.execution.mdToExecutionDefinitionsAndColumns(projectId, mdObj, { attributesMap, removeDateItems });\n        return buildItemDescriptionObjects(definitionsAndColumns);\n    }\n    /**\n     * Loads all available data sets.\n     * @param projectId - id of the project to load from\n     */\n    async loadDataSets(projectId) {\n        const uri = `/gdc/dataload/internal/projects/${projectId}/csv/datasets`;\n        const response = await this.xhr.getParsed(uri);\n        return response.datasets.items;\n    }\n    requestDateDataSets(projectId, dateDataSetsRequest) {\n        const uri = `/gdc/internal/projects/${projectId}/loadDateDataSets`;\n        return this.xhr\n            .postParsed(uri, { data: { dateDataSetsRequest } })\n            .then((data) => data.dateDataSetsResponse);\n    }\n    loadCatalog(projectId, catalogRequest) {\n        const uri = `/gdc/internal/projects/${projectId}/loadCatalog`;\n        return this.xhr\n            .post(uri, { data: { catalogRequest } })\n            .then((r) => r.getData())\n            .then((data) => data.catalogResponse);\n    }\n}\n//# sourceMappingURL=catalogue.js.map","export class LdmModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    /**\n     * Get closest connecting attributes in the LDM by calling the \"attributeupperbound\" endpoint\n     *\n     * @param projectId - A project identifier\n     * @param attributeUris - Input list of attribute URIs\n     * @returns Resolves with result list of attribute URIs\n     */\n    getCommonAttributes(projectId, attributeUris) {\n        return this.xhr\n            .post(`/gdc/md/${projectId}/ldm/attributeupperbound`, {\n            body: {\n                attributeUpperBounds: {\n                    attributes: attributeUris,\n                },\n            },\n        })\n            .then((response) => response.getData())\n            .then((data) => {\n            if (data.attributeUpperBoundsResponse) {\n                return data.attributeUpperBoundsResponse.upperbounds;\n            }\n        });\n    }\n}\n//# sourceMappingURL=ldm.js.map","// (C) 2022 GoodData Corporation\nexport class OrganizationModule {\n    constructor(xhr) {\n        this.xhr = xhr;\n    }\n    /**\n     * Get current user's organization\n     * @returns resolves with current user's organization\n     */\n    getCurrentOrganization() {\n        return this.xhr.getParsed(\"/gdc/app/organization/current\");\n    }\n}\n//# sourceMappingURL=organization.js.map","// (C) 2007-2022 GoodData Corporation\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport { getAttributesDisplayForms } from \"@gooddata/api-model-bear\";\nimport { XhrModule } from \"./xhr.js\";\nimport { UserModule } from \"./user.js\";\nimport { MetadataModule } from \"./metadata.js\";\nimport { MetadataModuleExt } from \"./metadataExt.js\";\nimport { ExecutionModule } from \"./execution.js\";\nimport { ProjectModule } from \"./project.js\";\nimport { ReportModule } from \"./report/report.js\";\nimport { DashboardModule } from \"./dashboard/dashboard.js\";\nimport { sanitizeConfig, ConfigModule } from \"./config.js\";\nimport { CatalogueModule } from \"./catalogue.js\";\nimport { AttributesMapLoaderModule } from \"./utils/attributesMapLoader.js\";\nimport { LdmModule } from \"./ldm.js\";\nimport { OrganizationModule } from \"./organization.js\";\n/**\n * This package provides low-level functions for communication with the GoodData platform.\n *\n * @remarks\n * The package is used by `@gooddata/sdk-backend-bear`, which you should use instead of directly using `@gooddata/api-client-bear` whenever possible.\n *\n * For the similar package for GoodData Cloud and GoodData.CN, see `@gooddata/api-client-tiger`.\n *\n * @packageDocumentation\n */\n/**\n * # JS SDK\n * Here is a set of functions that mostly are a thin wrapper over the [GoodData API](https://developer.gooddata.com/api).\n * Before calling any of those functions, you need to authenticate with a valid GoodData\n * user credentials. After that, every subsequent call in the current session is authenticated.\n * You can find more about the GD authentication mechanism here.\n *\n * ## GD Authentication Mechanism\n * In this JS SDK library we provide you with a simple `login(username, passwd)` function\n * that does the magic for you.\n * To fully understand the authentication mechanism, please read\n * [Authentication via API article](http://developer.gooddata.com/article/authentication-via-api)\n * on [GoodData Developer Portal](http://developer.gooddata.com/)\n *\n */\nexport class SDK {\n    constructor(fetchMethod, config = {}) {\n        this.fetchMethod = fetchMethod;\n        this.configStorage = sanitizeConfig(config); // must be plain object, SDK modules MUST use this storage\n        this.config = new ConfigModule(this.configStorage);\n        this.xhr = new XhrModule(fetchMethod, this.configStorage);\n        this.user = new UserModule(this.xhr);\n        this.md = new MetadataModule(this.xhr);\n        this.mdExt = new MetadataModuleExt(this.xhr);\n        this.execution = new ExecutionModule(this.xhr, this.md);\n        this.project = new ProjectModule(this.xhr);\n        this.report = new ReportModule(this.xhr);\n        this.dashboard = new DashboardModule(this.xhr);\n        this.catalogue = new CatalogueModule(this.xhr, this.execution);\n        this.ldm = new LdmModule(this.xhr);\n        this.organization = new OrganizationModule(this.xhr);\n        const attributesMapLoaderModule = new AttributesMapLoaderModule(this.md);\n        this.utils = {\n            loadAttributesMap: attributesMapLoaderModule.loadAttributesMap.bind(attributesMapLoaderModule),\n            getAttributesDisplayForms,\n        };\n    }\n    clone() {\n        return new SDK(this.fetchMethod, cloneDeep(this.configStorage));\n    }\n}\n/**\n * # Factory for creating SDK instances\n *\n * @param config - object to be passed to SDK constructor\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const factory = (fetchMethod) => (config = {}) => new SDK(fetchMethod, config);\n//# sourceMappingURL=gooddata.js.map","// (C) 2007-2022 GoodData Corporation\nimport \"isomorphic-fetch\";\nimport { factory, SDK } from \"./gooddata.js\";\nconst getFactoryBrowser = (config) => factory(fetch.bind(window))(config);\n// Fetch requests will be sent through the isomorphic-fetch. Our authentication\n// relies on cookies, so it will work in browser environment automatically.\n// For node see `gooddata-node.js` file.\nexport { getFactoryBrowser as getFactory, SDK };\nexport * from \"./api.js\";\nexport default getFactoryBrowser();\n//# sourceMappingURL=gooddata-browser.js.map","import { DataTooLargeError, NoDataError, NotAuthenticated, ProtectedDataError, UnexpectedError, UnexpectedResponseError, isAnalyticalBackendError, } from \"@gooddata/sdk-backend-spi\";\nimport includes from \"lodash/includes.js\";\nimport isString from \"lodash/isString.js\";\nimport { StatusCodes as HttpStatusCodes } from \"http-status-codes\";\nexport function isApiResponseError(error) {\n    return error.response !== undefined;\n}\nfunction getJSONFromText(data) {\n    try {\n        return JSON.parse(data);\n    }\n    catch (e) {\n        return null;\n    }\n}\nfunction isComplainingAboutAuthorization(error) {\n    // execution on protected data will actually return with 400 + with error messaging talking about this\n    var _a, _b, _c;\n    if (error.response.status !== HttpStatusCodes.BAD_REQUEST) {\n        return false;\n    }\n    const message = (_c = (_b = (_a = getJSONFromText(error.responseBody)) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.message) !== null && _c !== void 0 ? _c : \"\";\n    return (includes(message, \"Attempt to execute protected report unsafely\") ||\n        includes(message, \"Export to required format is not allowed for data flagged as restricted\"));\n}\nfunction getTraceId(error) {\n    var _a, _b, _c, _d;\n    return ((_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.get) ? (_d = (_c = error.response) === null || _c === void 0 ? void 0 : _c.headers) === null || _d === void 0 ? void 0 : _d.get(\"x-gdc-request\") : null;\n}\nexport function convertExecutionApiError(error) {\n    if (isApiResponseError(error)) {\n        if (error.response.status === HttpStatusCodes.NO_CONTENT) {\n            return new NoDataError(\"Server returned no data\");\n        }\n        else if (error.response.status === HttpStatusCodes.REQUEST_TOO_LONG) {\n            return new DataTooLargeError(\"Server has reached data size limits when processing this request\", error);\n        }\n        else if (isComplainingAboutAuthorization(error)) {\n            return new ProtectedDataError(\"Request not authorized\", error);\n        }\n    }\n    return convertApiError(error);\n}\nexport function convertApiError(error) {\n    if (isAnalyticalBackendError(error)) {\n        return error;\n    }\n    if (isApiResponseError(error)) {\n        if (error.response.status === HttpStatusCodes.UNAUTHORIZED) {\n            // detect expired passwords using the specific exception code from the backend\n            // use responseBody directly (instead of response.json) in case the stream has already been used\n            // at this point (which would bomb)\n            const reason = isString(error.responseBody) && includes(error.responseBody, \"gdc.login.password.expired\")\n                ? \"credentials_expired\"\n                : \"invalid_credentials\";\n            return new NotAuthenticated(\"Not authenticated against backend\", error, reason);\n        }\n        else if (isComplainingAboutAuthorization(error)) {\n            return new ProtectedDataError(\"Request not authorized\", error);\n        }\n        return new UnexpectedResponseError(error.message, error.response.status, error.responseBody, getTraceId(error), error);\n    }\n    return new UnexpectedError(\"An unexpected error has occurred\", error);\n}\n//# sourceMappingURL=errorHandling.js.map","// (C) 2007-2023 GoodData Corporation\nimport { isLocalIdRef, isUriRef, idRef, uriRef } from \"@gooddata/sdk-model\";\n/**\n * Converts reference into a format acceptable by the bear backend. URI references are left as-is, while\n * the identifier references have the object type (if any) stripped.\n *\n * @param ref - reference\n * @internal\n */\nexport function toBearRef(ref) {\n    if (isUriRef(ref)) {\n        return uriRef(ref.uri);\n    }\n    return idRef(ref.identifier);\n}\n/**\n * Converts scoped reference into a format acceptable by the bear backend. URI references are left as-is, scoped\n * references are left as is, while the identifier references have the object type (if any) stripped.\n *\n * @param ref - reference\n * @internal\n */\nexport function toScopedBearRef(ref) {\n    if (isLocalIdRef(ref)) {\n        return ref;\n    }\n    return toBearRef(ref);\n}\n//# sourceMappingURL=ObjRefConverter.js.map","// (C) 2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isAttributeElementsByRef } from \"@gooddata/sdk-model\";\nexport function assertNoNulls(elements) {\n    const rawData = isAttributeElementsByRef(elements) ? elements.uris : elements.values;\n    invariant(rawData.every((item) => item !== null), \"Nulls are not supported as attribute element values or uris on bear\");\n}\n//# sourceMappingURL=utils.js.map","import { filterIsEmpty, isAbsoluteDateFilter, isAttributeFilter, isComparisonCondition, isMeasureValueFilter, isRankingFilter, isNegativeAttributeFilter, } from \"@gooddata/sdk-model\";\nimport isNil from \"lodash/isNil.js\";\nimport { toBearRef, toScopedBearRef } from \"../ObjRefConverter.js\";\nimport compact from \"lodash/compact.js\";\nimport { assertNoNulls } from \"../utils.js\";\nfunction convertAttributeFilter(filter) {\n    /*\n     * When sending either positive or negative filter and the in/notIn is empty, backend will bomb\n     * with \"Cannot parse MAQL expression(s): %s\". Previously code was only throwing away empty negative\n     * filters.\n     * Skip `All` filters represented by negative filter with empty selection, have no effect on execution now.\n     * Pass by positive empty filters `None` as they are handled later in execution by NO DATA error\n     */\n    if (isNegativeAttributeFilter(filter) && filterIsEmpty(filter)) {\n        return null;\n    }\n    if (isNegativeAttributeFilter(filter)) {\n        assertNoNulls(filter.negativeAttributeFilter.notIn);\n        return {\n            negativeAttributeFilter: {\n                displayForm: toBearRef(filter.negativeAttributeFilter.displayForm),\n                notIn: filter.negativeAttributeFilter.notIn, // checked above so the cast is ok\n            },\n        };\n    }\n    assertNoNulls(filter.positiveAttributeFilter.in);\n    return {\n        positiveAttributeFilter: {\n            displayForm: toBearRef(filter.positiveAttributeFilter.displayForm),\n            in: filter.positiveAttributeFilter.in, // checked above so the cast is ok\n        },\n    };\n}\nexport function convertAbsoluteDateFilter(filter) {\n    const { absoluteDateFilter } = filter;\n    if (absoluteDateFilter.from === undefined || absoluteDateFilter.to === undefined) {\n        return null;\n    }\n    return {\n        absoluteDateFilter: {\n            dataSet: toBearRef(absoluteDateFilter.dataSet),\n            from: String(absoluteDateFilter.from),\n            to: String(absoluteDateFilter.to),\n        },\n    };\n}\nexport function convertRelativeDateFilter(filter) {\n    const { relativeDateFilter } = filter;\n    if (relativeDateFilter.from === undefined || !relativeDateFilter.to === undefined) {\n        return null;\n    }\n    return {\n        relativeDateFilter: {\n            dataSet: toBearRef(relativeDateFilter.dataSet),\n            granularity: relativeDateFilter.granularity,\n            from: Number(relativeDateFilter.from),\n            to: Number(relativeDateFilter.to),\n        },\n    };\n}\n// Bear supports up to 6 decimal places\nconst MAX_DECIMAL_PLACES = 6;\nfunction trimNumberToSupportedPrecision(num) {\n    return parseFloat(num.toFixed(MAX_DECIMAL_PLACES));\n}\nfunction trimConditionToSupportedPrecision(condition) {\n    if (isComparisonCondition(condition)) {\n        const nullValuesProp = !isNil(condition.comparison.treatNullValuesAs)\n            ? { treatNullValuesAs: condition.comparison.treatNullValuesAs }\n            : {};\n        return {\n            comparison: Object.assign({ operator: condition.comparison.operator, value: trimNumberToSupportedPrecision(condition.comparison.value) }, nullValuesProp),\n        };\n    }\n    else {\n        const nullValuesProp = !isNil(condition.range.treatNullValuesAs)\n            ? { treatNullValuesAs: condition.range.treatNullValuesAs }\n            : {};\n        return {\n            range: Object.assign({ operator: condition.range.operator, from: trimNumberToSupportedPrecision(condition.range.from), to: trimNumberToSupportedPrecision(condition.range.to) }, nullValuesProp),\n        };\n    }\n}\nexport function convertMeasureValueFilter(filter) {\n    if (filter.measureValueFilter.condition === undefined) {\n        return null;\n    }\n    return {\n        measureValueFilter: {\n            measure: toScopedBearRef(filter.measureValueFilter.measure),\n            condition: trimConditionToSupportedPrecision(filter.measureValueFilter.condition),\n        },\n    };\n}\nexport function convertRankingFilter(filter) {\n    const { measure, attributes, operator, value } = filter.rankingFilter;\n    return {\n        rankingFilter: {\n            measures: [toScopedBearRef(measure)],\n            attributes: attributes === null || attributes === void 0 ? void 0 : attributes.map(toScopedBearRef),\n            operator,\n            value,\n        },\n    };\n}\nexport function convertFilter(filter) {\n    if (isMeasureValueFilter(filter)) {\n        return convertMeasureValueFilter(filter);\n    }\n    if (isRankingFilter(filter)) {\n        return convertRankingFilter(filter);\n    }\n    return convertMeasureFilter(filter);\n}\nexport function convertMeasureFilter(filter) {\n    if (isAttributeFilter(filter)) {\n        return convertAttributeFilter(filter);\n    }\n    else if (isAbsoluteDateFilter(filter)) {\n        return convertAbsoluteDateFilter(filter);\n    }\n    else {\n        return convertRelativeDateFilter(filter);\n    }\n}\nexport function convertFilters(filters) {\n    return filters ? compact(filters.map(convertFilter)) : [];\n}\n//# sourceMappingURL=FilterConverter.js.map","// (C) 2020 GoodData Corporation\nexport const DEFAULT_DECIMAL_FORMAT = \"#,##0.00\";\nexport const DEFAULT_PERCENTAGE_FORMAT = \"#,##0.00%\";\nexport const DEFAULT_INTEGER_FORMAT = \"#,##0\";\n//# sourceMappingURL=constants.js.map","// (C) 2007-2021 GoodData Corporation\nimport { isArithmeticMeasureDefinition, isMeasureDefinition, isPoPMeasureDefinition, isPreviousPeriodMeasureDefinition, } from \"@gooddata/sdk-model\";\nimport { convertMeasureFilter } from \"./FilterConverter.js\";\nimport { toBearRef } from \"../ObjRefConverter.js\";\nimport compact from \"lodash/compact.js\";\nimport { DEFAULT_INTEGER_FORMAT, DEFAULT_PERCENTAGE_FORMAT } from \"./constants.js\";\nexport function convertMeasure(measure) {\n    const { measure: { definition }, } = measure;\n    const convertedDefinition = convertMeasureDefinition(definition);\n    const format = getFormat(measure);\n    const formatProp = format ? { format } : {};\n    const alias = measure.measure.alias ? measure.measure.alias : measure.measure.title;\n    const aliasProp = alias ? { alias } : {};\n    return Object.assign(Object.assign({ localIdentifier: measure.measure.localIdentifier, definition: convertedDefinition }, aliasProp), formatProp);\n}\nexport function convertAggregation(aggregation) {\n    if (aggregation === \"approximate_count\") {\n        // Bear doesn't support approximate_count so transparently fallback to exact count.\n        return \"count\";\n    }\n    return aggregation;\n}\nfunction convertMeasureDefinition(definition) {\n    if (isMeasureDefinition(definition)) {\n        return convertSimpleMeasureDefinition(definition);\n    }\n    else if (isPoPMeasureDefinition(definition)) {\n        return convertPopMeasureDefinition(definition);\n    }\n    else if (isPreviousPeriodMeasureDefinition(definition)) {\n        return convertPreviousPeriodMeasureDefinition(definition);\n    }\n    else if (isArithmeticMeasureDefinition(definition)) {\n        return convertArithmeticMeasureDefinition(definition);\n    }\n    else {\n        throw Error(\"The measure definition is not supported: \" + JSON.stringify(definition));\n    }\n}\nfunction convertSimpleMeasureDefinition(definition) {\n    const { measureDefinition } = definition;\n    const filters = measureDefinition.filters\n        ? compact(measureDefinition.filters.map(convertMeasureFilter))\n        : [];\n    const filtersProp = filters.length ? { filters } : {};\n    const aggregation = convertAggregation(measureDefinition.aggregation);\n    const aggregationProp = aggregation ? { aggregation } : {};\n    const computeRatio = measureDefinition.computeRatio;\n    const computeRatioProp = computeRatio ? { computeRatio } : {};\n    return {\n        measure: Object.assign(Object.assign(Object.assign({ item: toBearRef(measureDefinition.item) }, filtersProp), aggregationProp), computeRatioProp),\n    };\n}\nfunction convertPopMeasureDefinition(definition) {\n    const { popMeasureDefinition } = definition;\n    return {\n        popMeasure: {\n            measureIdentifier: popMeasureDefinition.measureIdentifier,\n            popAttribute: toBearRef(popMeasureDefinition.popAttribute),\n        },\n    };\n}\nfunction convertPreviousPeriodMeasureDefinition(definition) {\n    const { previousPeriodMeasure } = definition;\n    return {\n        previousPeriodMeasure: {\n            measureIdentifier: previousPeriodMeasure.measureIdentifier,\n            dateDataSets: previousPeriodMeasure.dateDataSets.map((dateDataSet) => ({\n                dataSet: toBearRef(dateDataSet.dataSet),\n                periodsAgo: dateDataSet.periodsAgo,\n            })),\n        },\n    };\n}\nfunction convertArithmeticMeasureDefinition(definition) {\n    const { arithmeticMeasure } = definition;\n    return {\n        arithmeticMeasure: {\n            measureIdentifiers: arithmeticMeasure.measureIdentifiers.slice(),\n            operator: arithmeticMeasure.operator,\n        },\n    };\n}\nfunction getFormat(measure) {\n    const { measure: { definition, format }, } = measure;\n    if (format) {\n        return format;\n    }\n    const isArithmeticMeasureChange = isArithmeticMeasureDefinition(definition) && definition.arithmeticMeasure.operator === \"change\";\n    if (isArithmeticMeasureChange) {\n        return DEFAULT_PERCENTAGE_FORMAT;\n    }\n    if (isMeasureDefinition(definition)) {\n        const { measureDefinition } = definition;\n        if (measureDefinition.computeRatio) {\n            return DEFAULT_PERCENTAGE_FORMAT;\n        }\n        if (measureDefinition.aggregation === \"count\") {\n            return DEFAULT_INTEGER_FORMAT;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=MeasureConverter.js.map","// (C) 2007-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { convertFilters } from \"./FilterConverter.js\";\nimport { convertMeasure } from \"./MeasureConverter.js\";\nimport { dimensionsFindItem, dimensionTotals, isAttributeLocator, isMeasureSort, MeasureGroupIdentifier, totalIsNative, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { toBearRef } from \"../ObjRefConverter.js\";\nfunction convertAttribute(attribute, idx) {\n    const alias = attribute.attribute.alias;\n    const aliasProp = alias ? { alias } : {};\n    return Object.assign({ displayForm: toBearRef(attribute.attribute.displayForm), localIdentifier: attribute.attribute.localIdentifier || `a${idx + 1}` }, aliasProp);\n}\nfunction convertAFM(def) {\n    const attributes = def.attributes.map(convertAttribute);\n    const attrProp = attributes.length ? { attributes } : {};\n    const measures = def.measures.map(convertMeasure);\n    const measuresProp = measures.length ? { measures } : {};\n    const filters = convertFilters(def.filters);\n    const filtersProp = filters.length ? { filters } : {};\n    const nativeTotals = convertNativeTotals(def);\n    const nativeTotalsProp = nativeTotals.length ? { nativeTotals } : {};\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, measuresProp), attrProp), filtersProp), nativeTotalsProp);\n}\nfunction convertNativeTotals(def) {\n    // first find all native totals defined across dimensions\n    const nativeTotals = def.dimensions\n        .map(dimensionTotals)\n        .reduce((acc, totals) => {\n        acc.push(...totals);\n        return acc;\n    }, [])\n        .filter(totalIsNative);\n    return nativeTotals.map((t) => {\n        // then for each native total, look across buckets (if any) for an attribute that is specified in\n        // the total definition\n        const attributeInDims = dimensionsFindItem(def.dimensions, t.attributeIdentifier);\n        if (!attributeInDims.length) {\n            throw new Error(`Native total references attribute that is not in any dimension: ${t.attributeIdentifier}`);\n        }\n        else if (attributeInDims.length > 1) {\n            throw new Error(`Native total references attribute that is in multiple dimensions: ${t.attributeIdentifier}`);\n        }\n        const attributeDim = attributeInDims[0];\n        let rollupAttributes;\n        // now, knowing the dimension and index of the attribute.. roll up all attributes that are before it\n        // and create native total such, that it rolls up all those attributes\n        if (attributeDim.dimIdx === 1) {\n            const mergedItemsId = [...def.dimensions[0].itemIdentifiers, ...attributeDim.dim.itemIdentifiers];\n            const index = mergedItemsId.findIndex((itemId) => itemId === t.attributeIdentifier);\n            rollupAttributes = mergedItemsId.slice(0, index).filter((id) => id !== MeasureGroupIdentifier);\n        }\n        else {\n            rollupAttributes = attributeDim.dim.itemIdentifiers\n                .slice(0, attributeDim.itemIdx)\n                .filter((id) => id !== MeasureGroupIdentifier);\n        }\n        return {\n            measureIdentifier: t.measureIdentifier,\n            attributeIdentifiers: rollupAttributes,\n        };\n    });\n}\nfunction convertTotals(totals = []) {\n    return totals.map((t) => {\n        return {\n            type: t.type,\n            attributeIdentifier: t.attributeIdentifier,\n            measureIdentifier: t.measureIdentifier,\n        };\n    });\n}\nfunction convertDimensions(def) {\n    return def.dimensions.map((dim) => {\n        const totals = convertTotals(dim.totals);\n        const totalsProp = !isEmpty(totals) ? { totals } : {};\n        return Object.assign({ itemIdentifiers: dim.itemIdentifiers }, totalsProp);\n    });\n}\nfunction assertNoNullsInSortBy(sortBy) {\n    sortBy.forEach((item) => {\n        if (isMeasureSort(item)) {\n            item.measureSortItem.locators.forEach((locator) => {\n                if (isAttributeLocator(locator)) {\n                    invariant(locator.attributeLocatorItem.element !== null, \"Nulls are not supported as attribute element values or uris on bear\");\n                }\n            });\n        }\n    });\n}\nexport function convertResultSpec(def) {\n    var _a;\n    assertNoNullsInSortBy((_a = def.sortBy) !== null && _a !== void 0 ? _a : []);\n    const sortsProp = !isEmpty(def.sortBy)\n        ? { sorts: def.sortBy } // checked above, the cast is safe\n        : {};\n    const dims = convertDimensions(def);\n    const dimsProp = !isEmpty(dims) ? { dimensions: dims } : {};\n    return Object.assign(Object.assign({}, sortsProp), dimsProp);\n}\n// This has to be const function, otherwise api-extractor breaks...\n/**\n * Converts execution definition to AFM Execution\n *\n * @param def - execution definition\n * @returns AFM Execution\n *\n * @internal\n */\nexport const toAfmExecution = (def) => {\n    return {\n        execution: {\n            afm: convertAFM(def),\n            resultSpec: convertResultSpec(def),\n        },\n    };\n};\n//# sourceMappingURL=ExecutionConverter.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isAttributeHeader } from \"@gooddata/api-model-bear\";\nimport { isUri } from \"@gooddata/api-client-bear\";\nimport { uriRef, } from \"@gooddata/sdk-model\";\nexport function convertWarning(warning) {\n    var _a;\n    return {\n        warningCode: warning.warningCode,\n        message: warning.message,\n        parameters: (_a = warning.parameters) === null || _a === void 0 ? void 0 : _a.map((param) => (isUri(param) ? uriRef(param) : param)),\n    };\n}\n/**\n * Converts execution result's dimension headers as passed by backend into dimension descriptor. At the moment, this function\n * ensures that the 'ref' properties are correctly filled in.\n *\n * @param dims - result dimensions.\n */\nexport function convertDimensions(dims) {\n    return dims.map((dim) => {\n        return {\n            headers: dim.headers.map((header) => {\n                if (isAttributeHeader(header)) {\n                    return {\n                        attributeHeader: Object.assign(Object.assign({}, header.attributeHeader), { ref: uriRef(header.attributeHeader.uri), formOf: Object.assign(Object.assign({}, header.attributeHeader.formOf), { ref: uriRef(header.attributeHeader.formOf.uri) }) }),\n                    };\n                }\n                else {\n                    return {\n                        measureGroupHeader: {\n                            items: header.measureGroupHeader.items.map((measure) => {\n                                return {\n                                    measureHeaderItem: Object.assign(Object.assign({}, measure.measureHeaderItem), { ref: measure.measureHeaderItem.uri\n                                            ? uriRef(measure.measureHeaderItem.uri)\n                                            : undefined }),\n                                };\n                            }),\n                            totalItems: header.measureGroupHeader.totalItems,\n                        },\n                    };\n                }\n            }),\n        };\n    });\n}\n//# sourceMappingURL=ExecutionResultConverter.js.map","// (C) 2020-2022 GoodData Corporation\nimport parse from \"date-fns/parse/index.js\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nexport const dateFormats = [\n    \"MM/dd/yyyy\",\n    \"dd/MM/yyyy\",\n    \"dd-MM-yyyy\",\n    \"yyyy-MM-dd\",\n    \"M/d/yy\",\n    \"dd.MM.yyyy\",\n];\nexport const DEFAULT_DATE_FORMAT = \"MM/dd/yyyy\";\n/**\n * Parses a string representation of a date of a given date format to a Date object.\n * @param value - value to parse.\n * @param dateFormat - dateFormat to assume when parsing the value.\n * @internal\n */\nexport const parseDateValue = (value, dateFormat = DEFAULT_DATE_FORMAT) => {\n    if (!dateFormats.includes(dateFormat)) {\n        throw new UnexpectedError(`Unsupported date format \"${dateFormat}\". Supported date formats are ${dateFormats}`);\n    }\n    if (value === null) {\n        throw new UnexpectedError(\"Unsupported date value null. Nulls are not supported as date values\");\n    }\n    return parse(value, dateFormat, new Date());\n};\n//# sourceMappingURL=dateValueParser.js.map","// (C) 2020 GoodData Corporation\nimport format from \"date-fns/format/index.js\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nimport { dateFormats, DEFAULT_DATE_FORMAT } from \"./dateValueParser.js\";\n/**\n * Creates a default date formatting function.\n * @public\n */\nexport const createDefaultDateFormatter = (dateFormat = DEFAULT_DATE_FORMAT) => {\n    return (value, targetDateFormat = dateFormat) => {\n        if (!dateFormats.includes(targetDateFormat)) {\n            throw new UnexpectedError(`Unsupported date format \"${targetDateFormat}\". Supported date formats are ${dateFormats}`);\n        }\n        return format(value, targetDateFormat);\n    };\n};\n//# sourceMappingURL=defaultDateFormatter.js.map","// (C) 2020-2023 GoodData Corporation\nimport { isAttributeDescriptor, isResultAttributeHeader, } from \"@gooddata/sdk-model\";\nimport { createDateValueFormatter } from \"./dateValueFormatter.js\";\nimport { DEFAULT_DATE_FORMAT } from \"./dateValueParser.js\";\nimport { createDefaultDateFormatter } from \"./defaultDateFormatter.js\";\n// TODO: rewrite. move search for date attributes into data view facade / meta() section\nexport function findDateAttributeUris(dimensions) {\n    const dateAttrsDescriptor = dimensions\n        .reduce((attrDimensions, dimensionItem) => {\n        attrDimensions.push(...dimensionItem.headers.filter(isAttributeDescriptor));\n        return attrDimensions;\n    }, [])\n        .filter((attrDescriptor) => attrDescriptor.attributeHeader.type === \"GDC.time.day_us\");\n    return dateAttrsDescriptor.map((dateAttrDescriptor) => dateAttrDescriptor.attributeHeader.formOf.uri);\n}\nexport function transformDateFormat(resultHeader, dateAttributeUris, dateFormat) {\n    if (!isResultAttributeHeader(resultHeader) ||\n        !(dateAttributeUris === null || dateAttributeUris === void 0 ? void 0 : dateAttributeUris.length) ||\n        !dateFormat ||\n        dateFormat === DEFAULT_DATE_FORMAT) {\n        return resultHeader;\n    }\n    const resultHeaderUri = resultHeader.attributeHeaderItem.uri;\n    const foundUri = dateAttributeUris.some((dateAttributeUri) => resultHeaderUri === null || resultHeaderUri === void 0 ? void 0 : resultHeaderUri.startsWith(dateAttributeUri));\n    if (!foundUri) {\n        return resultHeader;\n    }\n    try {\n        const dateValueFormatter = createDateValueFormatter(createDefaultDateFormatter(dateFormat));\n        return {\n            attributeHeaderItem: {\n                name: dateValueFormatter(resultHeader.attributeHeaderItem.name),\n                uri: resultHeaderUri,\n            },\n        };\n    }\n    catch (_a) {\n        return resultHeader;\n    }\n}\n//# sourceMappingURL=dateFormatter.js.map","// (C) 2020 GoodData Corporation\nimport { parseDateValue } from \"./dateValueParser.js\";\n/**\n * Creates a function that takes a string date attribute value and a targetDateFormat and returns a formatted date string in the target date format.\n * @param dateFormatter - function to use to format Date values to a string\n * @public\n */\nexport function createDateValueFormatter(dateFormatter) {\n    return (value) => dateFormatter(parseDateValue(value));\n}\n//# sourceMappingURL=dateValueFormatter.js.map","import { transformResultHeaders } from \"@gooddata/sdk-backend-base\";\nimport { NoDataError, UnexpectedError, } from \"@gooddata/sdk-backend-spi\";\nimport { bucketsMeasures, bucketsFind, isAttribute, isResultMeasureHeader, isTotalDescriptor, isMeasureGroupIdentifier, } from \"@gooddata/sdk-model\";\nimport SparkMD5 from \"spark-md5\";\nimport { convertExecutionApiError } from \"../../../utils/errorHandling.js\";\nimport { toAfmExecution } from \"../../../convertors/toBackend/afm/ExecutionConverter.js\";\nimport { convertWarning, convertDimensions, } from \"../../../convertors/fromBackend/ExecutionResultConverter.js\";\nimport { createResultHeaderTransformer } from \"../../../convertors/fromBackend/afm/result.js\";\nimport { findDateAttributeUris } from \"../../../convertors/dateFormatting/dateFormatter.js\";\nconst TOTAL_ORDER = [\"sum\", \"max\", \"min\", \"avg\", \"med\", \"nat\"];\nexport class BearExecutionResult {\n    constructor(authApiCall, definition, execFactory, execResponse) {\n        this.authApiCall = authApiCall;\n        this.definition = definition;\n        this.execFactory = execFactory;\n        this.execResponse = execResponse;\n        this.asDataView = (promisedRes) => {\n            return promisedRes.then((res) => {\n                if (!res) {\n                    // TODO: SDK8: investigate when can this actually happen; perhaps end of data during paging?\n                    //  perhaps legitimate NoDataCase?\n                    throw new UnexpectedError(\"Server returned no data\");\n                }\n                if (isEmptyDataResult(res)) {\n                    throw new NoDataError(\"The execution resulted in no data to display.\", new BearDataView(this, res));\n                }\n                return new BearDataView(this, res);\n            });\n        };\n        this.dimensions = convertDimensions(execResponse.dimensions);\n        this._fingerprint = SparkMD5.hash(execResponse.links.executionResult);\n    }\n    async readAll() {\n        return this.asDataView(this.authApiCall((sdk) => sdk.execution.getExecutionResult(this.execResponse.links.executionResult), convertExecutionApiError));\n    }\n    async readWindow(offset, size) {\n        const saneOffset = sanitizeOffset(offset);\n        const saneSize = sanitizeSize(size);\n        return this.asDataView(this.authApiCall((sdk) => sdk.execution.getPartialExecutionResult(this.execResponse.links.executionResult, saneSize, saneOffset), convertExecutionApiError));\n    }\n    transform() {\n        return this.execFactory.forDefinition(this.definition);\n    }\n    async export(options) {\n        const optionsForBackend = this.buildExportOptions(options);\n        return this.authApiCall((sdk) => sdk.report.exportResult(this.definition.workspace, this.execResponse.links.executionResult, optionsForBackend));\n    }\n    buildExportOptions(options) {\n        const optionsForBackend = {\n            format: options.format,\n            mergeHeaders: options.mergeHeaders,\n            title: options.title,\n            showFilters: options.showFilters,\n        };\n        if (options.showFilters) {\n            optionsForBackend.afm = toAfmExecution(this.definition).execution.afm;\n        }\n        return optionsForBackend;\n    }\n    equals(other) {\n        return this.fingerprint() === other.fingerprint();\n    }\n    fingerprint() {\n        return this._fingerprint;\n    }\n}\nconst BEAR_PAGE_SIZE_LIMIT = 1000;\nfunction sanitizeOffset(offset) {\n    return offset.map((offsetItem = 0) => offsetItem);\n}\nfunction sanitizeSize(size) {\n    return size.map((sizeInDim = BEAR_PAGE_SIZE_LIMIT) => {\n        if (sizeInDim > BEAR_PAGE_SIZE_LIMIT) {\n            console.warn(\"The maximum limit per page is \" + BEAR_PAGE_SIZE_LIMIT);\n            return BEAR_PAGE_SIZE_LIMIT;\n        }\n        return sizeInDim;\n    });\n}\n// for each level (column attribute), prepare a set of totals corresponding for that level\nfunction separateTotalsByLevels(columnTotals, columnIdentifiers) {\n    return columnTotals.reduce((acc, total) => {\n        var _a;\n        const index = columnIdentifiers.indexOf(total.attributeIdentifier);\n        if (index !== -1) {\n            return Object.assign(Object.assign({}, acc), { [index]: [...((_a = acc[index]) !== null && _a !== void 0 ? _a : []), total] });\n        }\n        return acc;\n    }, {});\n}\n// for each of the indexed totals levels, initiate iterator at 0 for measure iteration\nfunction initiateTotalsIterators(indexedTotals) {\n    return Object.keys(indexedTotals).reduce((acc, key) => {\n        return Object.assign(Object.assign({}, acc), { [key]: 0 });\n    }, {});\n}\n// sometimes the order inside dimensions is not guaranteed so we need to sort the totals on each level by measure order\n// (happens during adding measure, removing measure, changing measures order)\nfunction fixTotalOrderByMeasuresOrder(indexedTotals, measuresIdentifiers) {\n    return Object.keys(indexedTotals).reduce((acc, key) => {\n        const current = [...indexedTotals[key]];\n        current.sort((a, b) => {\n            const totComparison = TOTAL_ORDER.indexOf(a.type) - TOTAL_ORDER.indexOf(b.type);\n            if (totComparison !== 0)\n                return totComparison;\n            return (measuresIdentifiers.indexOf(a.measureIdentifier) -\n                measuresIdentifiers.indexOf(b.measureIdentifier));\n        });\n        return Object.assign(Object.assign({}, acc), { [key]: current });\n    }, {});\n}\nconst DIMENSION_BUCKETS = { attribute: 0, columns: 1 };\nfunction preprocessTotalHeaderItemsForDim(headerItems, definition, bucket) {\n    var _a, _b, _c, _d;\n    const dimension = DIMENSION_BUCKETS[bucket];\n    const dimensionTotals = (_a = definition === null || definition === void 0 ? void 0 : definition.dimensions[dimension]) === null || _a === void 0 ? void 0 : _a.totals;\n    const metricGroupPresent = (_c = (_b = definition === null || definition === void 0 ? void 0 : definition.dimensions[dimension]) === null || _b === void 0 ? void 0 : _b.itemIdentifiers) === null || _c === void 0 ? void 0 : _c.find(isMeasureGroupIdentifier);\n    if (!(dimensionTotals === null || dimensionTotals === void 0 ? void 0 : dimensionTotals.length) || !metricGroupPresent) {\n        // noop when no totals associated with that dimension are present\n        // or when metric group is not in this particular dimension\n        return headerItems;\n    }\n    const buckets = definition.buckets;\n    const measures = bucketsMeasures(buckets);\n    const bucketItems = ((_d = bucketsFind(buckets, bucket)) === null || _d === void 0 ? void 0 : _d.items) || [];\n    const bucketItemsIdentifiers = bucketItems\n        .filter(isAttribute)\n        .map((item) => { var _a; return (_a = item.attribute) === null || _a === void 0 ? void 0 : _a.localIdentifier; });\n    const measuresIdentifiers = measures.map((m) => m.measure.localIdentifier);\n    // separate totals for each level and initiate iterators for them\n    const indexedTotalsUnordered = separateTotalsByLevels(dimensionTotals, bucketItemsIdentifiers);\n    const indexedTotals = fixTotalOrderByMeasuresOrder(indexedTotalsUnordered, measuresIdentifiers);\n    const indexedTotalsIterators = initiateTotalsIterators(indexedTotals);\n    return headerItems.map((topHeaderItems) => {\n        // nesting level of the total; used to determine level of totals to use.\n        const nesting = [];\n        return topHeaderItems.map((items) => {\n            // process only header items with measures\n            // now, nesting info should already be up-to-date as measures are processed last\n            if (items.find(isResultMeasureHeader)) {\n                return items.map((item, itemIdx) => {\n                    if (isTotalDescriptor(item)) {\n                        // for each total item, we need to determine on which level the total is defined\n                        // (use nesting info built previously when iterating other levels) and\n                        // use measure lookups for totals defined on correct levels.\n                        const itemLevel = Math.max(0, bucketItemsIdentifiers.length - nesting[itemIdx]);\n                        const currentIteratorValue = indexedTotalsIterators[itemLevel];\n                        const correspondingTotal = indexedTotals[itemLevel][currentIteratorValue];\n                        const totalMeasure = correspondingTotal === null || correspondingTotal === void 0 ? void 0 : correspondingTotal.measureIdentifier;\n                        const totalMeasureIndex = measuresIdentifiers.indexOf(totalMeasure);\n                        const measureIndex = Math.max(totalMeasureIndex, 0);\n                        const result = Object.assign(Object.assign({}, item), { totalHeaderItem: Object.assign(Object.assign({}, item === null || item === void 0 ? void 0 : item.totalHeaderItem), { measureIndex }) });\n                        indexedTotalsIterators[itemLevel] =\n                            (currentIteratorValue + 1) % indexedTotals[itemLevel].length;\n                        return result;\n                    }\n                    return item;\n                });\n            }\n            items.forEach((item, index) => {\n                var _a;\n                nesting[index] = (_a = nesting[index]) !== null && _a !== void 0 ? _a : 0;\n                if (isTotalDescriptor(item)) {\n                    nesting[index] = nesting[index] + 1;\n                }\n            });\n            return items;\n        });\n    });\n}\nfunction preprocessTotalHeaderItems(headerItems, definition) {\n    let result = headerItems;\n    result = preprocessTotalHeaderItemsForDim(result, definition, \"attribute\");\n    result = preprocessTotalHeaderItemsForDim(result, definition, \"columns\");\n    return result;\n}\nclass BearDataView {\n    constructor(result, dataResult) {\n        var _a, _b;\n        this.result = result;\n        this.definition = result.definition;\n        this.data = dataResult.data;\n        this.headerItems = dataResult.headerItems ? dataResult.headerItems : [];\n        this.totals = dataResult.totals;\n        this.totalTotals = dataResult.totalTotals;\n        this.totalCount = dataResult.paging.total;\n        this.count = dataResult.paging.count;\n        this.offset = dataResult.paging.offset;\n        this.warnings = (_b = (_a = dataResult.warnings) === null || _a === void 0 ? void 0 : _a.map(convertWarning)) !== null && _b !== void 0 ? _b : [];\n        this._fingerprint = `${result.fingerprint()}/${this.offset.join(\",\")}-${this.count.join(\",\")}`;\n        this.headerItems = preprocessTotalHeaderItems(this.headerItems, this.definition);\n        this.headerItems = transformResultHeaders(this.headerItems, createResultHeaderTransformer(findDateAttributeUris(result.dimensions)), this.definition.postProcessing);\n    }\n    fingerprint() {\n        return this._fingerprint;\n    }\n    equals(other) {\n        return this.fingerprint() === other.fingerprint();\n    }\n}\n//\n//\n//\nfunction hasEmptyData(result) {\n    return result.data.length === 0;\n}\nfunction hasMissingHeaderItems(result) {\n    return !result.headerItems;\n}\nfunction isEmptyDataResult(result) {\n    return hasEmptyData(result) && hasMissingHeaderItems(result);\n}\n//# sourceMappingURL=executionResult.js.map","// (C) 2007-2020 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isAttributeHeaderItem(header) {\n    return !isEmpty(header) && header.attributeHeaderItem !== undefined;\n}\n/**\n * @public\n */\nexport function isMeasureHeaderItem(header) {\n    return !isEmpty(header) && header.measureHeaderItem !== undefined;\n}\n/**\n * @public\n */\nexport function isTotalHeaderItem(header) {\n    return !isEmpty(header) && header.totalHeaderItem !== undefined;\n}\n/**\n * @public\n */\nexport function isAttributeHeader(header) {\n    return !isEmpty(header) && header.attributeHeader !== undefined;\n}\n/**\n * @public\n */\nexport function isMeasureGroupHeader(header) {\n    return !isEmpty(header) && header.measureGroupHeader !== undefined;\n}\n//# sourceMappingURL=GdcExecution.js.map","/**\n * Transforms the result headers in an AFM execution result.\n *\n * @param resultHeaders - Execution result headers to be transformed.\n * @param resultHeaderTransformer - The transformation function to be called to transform each result header.\n * @param postProcessing - Contains any configuration that should be used during transformation.\n * @returns The transformed result headers if resultHeaderTransformer has a value,\n *  or resultHeaders is returned if resultHeaderTransformer does not have any value.\n *\n * @public\n */\nexport function transformResultHeaders(resultHeaders, resultHeaderTransformer, postProcessing) {\n    if (!resultHeaderTransformer) {\n        return resultHeaders;\n    }\n    return resultHeaders.map((resultHeaders1) => {\n        return resultHeaders1.map((resultHeaders2) => {\n            return resultHeaders2.map((resultHeader) => {\n                return resultHeaderTransformer(resultHeader, postProcessing);\n            });\n        });\n    });\n}\n//# sourceMappingURL=result.js.map","import { transformDateFormat } from \"../../dateFormatting/dateFormatter.js\";\nexport function createResultHeaderTransformer(dateAttributeUris) {\n    return (resultHeader, postProcessing) => {\n        return transformDateFormat(resultHeader, dateAttributeUris, postProcessing === null || postProcessing === void 0 ? void 0 : postProcessing.dateFormat);\n    };\n}\n//# sourceMappingURL=result.js.map","// (C) 2019-2023 GoodData Corporation\nimport { NoDataError, } from \"@gooddata/sdk-backend-spi\";\nimport { defFingerprint, defWithDimensions, defWithSorting, defWithDateFormat, isPositiveAttributeFilter, filterIsEmpty, } from \"@gooddata/sdk-model\";\nimport isEqual from \"lodash/isEqual.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { convertExecutionApiError } from \"../../../utils/errorHandling.js\";\nimport { BearExecutionResult } from \"./executionResult.js\";\nimport { toAfmExecution } from \"../../../convertors/toBackend/afm/ExecutionConverter.js\";\nexport class BearPreparedExecution {\n    constructor(authCall, definition, executionFactory) {\n        this.authCall = authCall;\n        this.definition = definition;\n        this.executionFactory = executionFactory;\n    }\n    checkDefIsExecutable(def) {\n        var _a;\n        if ((_a = def.filters) === null || _a === void 0 ? void 0 : _a.some((filter) => isPositiveAttributeFilter(filter) && filterIsEmpty(filter))) {\n            throw new NoDataError(\"Server returned no data\");\n        }\n    }\n    async execute() {\n        this.checkDefIsExecutable(this.definition);\n        const afmExecution = toAfmExecution(this.definition);\n        return this.authCall((sdk) => sdk.execution\n            .getExecutionResponse(this.definition.workspace, afmExecution)\n            .then((response) => {\n            return new BearExecutionResult(this.authCall, this.definition, this.executionFactory, response);\n        }), convertExecutionApiError);\n    }\n    explain() {\n        console.warn(\"Backend does not support explain mode\");\n        return {\n            data: () => Promise.reject(new Error(`Backend does not support explain mode data call.`)),\n            download: () => Promise.resolve(),\n        };\n    }\n    withDimensions(...dimsOrGen) {\n        return this.executionFactory.forDefinition(defWithDimensions(this.definition, ...dimsOrGen));\n    }\n    withSorting(...items) {\n        return this.executionFactory.forDefinition(defWithSorting(this.definition, items));\n    }\n    withDateFormat(dateFormat) {\n        return this.executionFactory.forDefinition(defWithDateFormat(this.definition, dateFormat));\n    }\n    withExecConfig(config) {\n        if (!isEmpty(config === null || config === void 0 ? void 0 : config.dataSamplingPercentage)) {\n            console.warn(\"Backend does not support data sampling, result will be not affected\");\n        }\n        return this.executionFactory.forDefinition(this.definition);\n    }\n    fingerprint() {\n        if (!this._fingerprint) {\n            this._fingerprint = defFingerprint(this.definition);\n        }\n        return this._fingerprint;\n    }\n    equals(other) {\n        return isEqual(this.definition, other.definition);\n    }\n}\n//# sourceMappingURL=preparedExecution.js.map","import { uriRef } from \"@gooddata/sdk-model\";\nconst getUserFullName = (firstName, lastName) => {\n    if (!firstName && !lastName) {\n        return undefined;\n    }\n    return [firstName, lastName].filter(Boolean).join(\" \");\n};\nexport const convertUser = (user) => {\n    const { email, login, firstName, lastName, links } = user;\n    return {\n        ref: uriRef(links.self),\n        email: email,\n        login: login,\n        firstName,\n        lastName,\n        fullName: getUserFullName(firstName, lastName),\n    };\n};\nexport const convertWorkspaceUser = (user) => {\n    const getStatusFromState = (state) => {\n        switch (state) {\n            case \"ACTIVE\":\n                return \"ENABLED\";\n            case \"INACTIVE\":\n                return \"DISABLED\";\n            default:\n                return;\n        }\n    };\n    const { email, login, uri, firstName, lastName, state } = user;\n    const status = getStatusFromState(state);\n    const statusProp = status ? { status } : {};\n    return Object.assign({ ref: uriRef(uri), email,\n        login,\n        uri, firstName: firstName !== null && firstName !== void 0 ? firstName : undefined, lastName: lastName !== null && lastName !== void 0 ? lastName : undefined, fullName: getUserFullName(firstName, lastName) }, statusProp);\n};\nexport const convertUsersItem = (user) => {\n    const { content: { email, login, firstname, lastname, status }, links, } = user;\n    const statusProp = status ? { status } : {};\n    return Object.assign({ ref: uriRef(links.self), uri: links.self, email: email, login: login, firstName: firstname, lastName: lastname, fullName: getUserFullName(firstname, lastname) }, statusProp);\n};\n//# sourceMappingURL=UsersConverter.js.map","import { UnexpectedError, UnexpectedResponseError } from \"@gooddata/sdk-backend-spi\";\nimport { isIdentifierRef, isUriRef } from \"@gooddata/sdk-model\";\nimport last from \"lodash/last.js\";\nimport uniq from \"lodash/uniq.js\";\nimport { invariant } from \"ts-invariant\";\nimport { convertUser } from \"../convertors/fromBackend/UsersConverter.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { isApiResponseError } from \"./errorHandling.js\";\n/**\n * Returns a user uri. This is used in some bear client calls.\n * If there is no user available, returns null instead.\n * @param getPrincipal - function to obtain currently authenticated principal to get the data from\n *\n * @internal\n */\nexport const userUriFromAuthenticatedPrincipalWithAnonymous = async (getPrincipal) => {\n    var _a, _b;\n    const principal = await getPrincipal();\n    const selfLink = (_b = (_a = principal.userMeta) === null || _a === void 0 ? void 0 : _a.links) === null || _b === void 0 ? void 0 : _b.self;\n    return selfLink !== null && selfLink !== void 0 ? selfLink : null;\n};\n/**\n * Returns a user uri. This is used in some bear client calls\n * If there is no user available, throws an error.\n * @param getPrincipal - function to obtain currently authenticated principal to get the data from\n *\n * @internal\n */\nexport const userUriFromAuthenticatedPrincipal = async (getPrincipal) => {\n    const selfLink = await userUriFromAuthenticatedPrincipalWithAnonymous(getPrincipal);\n    if (!selfLink) {\n        throw new UnexpectedError(\"Cannot obtain the current user uri\");\n    }\n    return selfLink;\n};\n/**\n * Returns a user login md5. This is used in some bear client calls as a userId.\n * If there is no user available, returns null instead.\n * @param getPrincipal - function to obtain currently authenticated principal to get the data from\n *\n * @internal\n */\nexport const userLoginMd5FromAuthenticatedPrincipalWithAnonymous = async (getPrincipal) => {\n    var _a, _b, _c;\n    const principal = await getPrincipal();\n    const selfLink = (_c = (_b = (_a = principal.userMeta) === null || _a === void 0 ? void 0 : _a.links) === null || _b === void 0 ? void 0 : _b.self) !== null && _c !== void 0 ? _c : \"\";\n    const userLoginMd5 = last(selfLink.split(\"/\"));\n    return userLoginMd5 !== null && userLoginMd5 !== void 0 ? userLoginMd5 : null;\n};\n/**\n * Returns a user login md5. This is used in some bear client calls as a userId.\n * If there is no user available, throws an error.\n * @param getPrincipal - function to obtain currently authenticated principal to get the data from\n *\n * @internal\n */\nexport const userLoginMd5FromAuthenticatedPrincipal = async (getPrincipal) => {\n    const userLoginMd5 = await userLoginMd5FromAuthenticatedPrincipalWithAnonymous(getPrincipal);\n    if (!userLoginMd5) {\n        throw new UnexpectedError(\"Cannot obtain the current user login md5\");\n    }\n    return userLoginMd5;\n};\n/**\n * Returns the objectId from the given URI.\n * @param uri - URI to get objectId from\n */\nexport const getObjectIdFromUri = (uri) => {\n    const match = /\\/obj\\/([^$/?]*)/.exec(uri);\n    return match ? match[1] : \"\";\n};\n/**\n * Converts ObjRef instance to URI. For UriRef returns the uri as is, for IdentifierRef calls the backend and gets the URI.\n * @param ref - ref to convert\n * @param workspace - workspace id to use\n * @param authCall - call guard to perform API calls through\n *\n * @internal\n */\nexport const objRefToUri = async (ref, workspace, authCall) => {\n    return isUriRef(ref)\n        ? ref.uri\n        : authCall((sdk) => {\n            return sdk.md.getObjectUri(workspace, ref.identifier).catch((e) => {\n                var _a;\n                // Nasty but necessary :( Resolution of id -> uri happens using POST request which succeeds and\n                // tells that the object does not exist && the api-client-bear does not have proper exception\n                // to communicate this with. It sends ApiResponseError and includes the response of the POST\n                // which has all green statuses.\n                //\n                // Backend must reconcile here and do explicit categorization otherwise the upstream handlers\n                // will throw this into UnexpectedError category (reserved for really unexpected stuff happening which\n                // kind of makes sense if you get ApiResponseError with status code 200 :))\n                if (isApiResponseError(e) && ((_a = e.message) === null || _a === void 0 ? void 0 : _a.search(\"not found\")) > -1) {\n                    throw new UnexpectedResponseError(`Object with ${ref.identifier} does not exist.`, 404, e.responseBody);\n                }\n                throw e;\n            });\n        });\n};\n/**\n * Converts ObjRef instances to URIs. For UriRefs, it returns the URIs as they are,\n * for IdentifierRefs calls the backend and gets the URIs.\n * @param refs - refs to convert\n * @param workspace - workspace id to use\n * @param authCall - call guard to perform API calls through\n * @param throwOnUnresolved - whether to throw an error if id to uri cannot be resolved for some ref; default is true\n * @returns resolved URIs; when throwOnUnresolved is true, then order of appearance of the resolved URIs\n *  is guaranteed to match the order on the input; otherwise if throwOnUnresolved is false and some identifiers\n *  could not be resolved, the returned array will be smaller with no indication as to which identifiers could\n *  not be resolved\n * @internal\n */\nexport const objRefsToUris = async (refs, workspace, authCall, throwOnUnresolved = true) => {\n    if (isEmpty(refs)) {\n        return [];\n    }\n    const identifiers = refs.filter(isIdentifierRef).map((filter) => filter.identifier);\n    const identifiersToUrisPairs = await authCall((sdk) => sdk.md.getUrisFromIdentifiers(workspace, identifiers));\n    const translatedUris = [];\n    refs.forEach((ref) => {\n        if (isUriRef(ref)) {\n            translatedUris.push(ref.uri);\n        }\n        else {\n            const foundPair = identifiersToUrisPairs.find((pair) => pair.identifier === ref.identifier);\n            if (!foundPair) {\n                if (throwOnUnresolved) {\n                    throw new UnexpectedError(\"REFERENCED_OBJECT_NOT_FOUND\", new Error(`Referenced object for ${ref.identifier} not found`));\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console.debug(`Unable to translate identifier ${ref.identifier} to object URI. The ref will be skipped.`);\n                    return;\n                }\n            }\n            translatedUris.push(foundPair.uri);\n        }\n    });\n    return translatedUris;\n};\n/**\n * Converts ObjRef instance to identifier. For IdentifierRef returns the identifier as is,\n * for UriRef calls the backend and gets the identifier.\n * @param ref - ref to convert\n * @param workspace - workspace id to use\n * @param authCall - call guard to perform API calls through\n *\n * @internal\n */\nexport const objRefToIdentifier = async (ref, authCall) => {\n    return isIdentifierRef(ref) ? ref.identifier : authCall((sdk) => sdk.md.getObjectIdentifier(ref.uri));\n};\n/**\n * Converts ObjRef instances to identifiers. For IdentifierRefs returns the identifiers as is,\n * for UriRefs calls the backend and gets the identifiers.\n * @param refs - refs to convert\n * @param workspace - workspace id to use\n * @param authCall - call guard to perform API calls through\n *\n * @internal\n */\nexport const objRefsToIdentifiers = async (refs, authCall) => {\n    return Promise.all(refs.map((ref) => objRefToIdentifier(ref, authCall)));\n};\n/**\n * Gets an updated userMap loading information for any missing users. The map is keyed by the user URI.\n */\nexport const updateUserMap = async (userMap, requestedUserUris, authCall) => {\n    const usersToLoad = requestedUserUris.filter((uri) => !userMap.has(uri));\n    const uniqueUsersToLoad = uniq(usersToLoad);\n    const results = await Promise.all(uniqueUsersToLoad.map((uri) => {\n        return authCall(async (sdk) => {\n            try {\n                const result = await sdk.xhr.getParsed(uri);\n                return convertUser(result.accountSetting);\n            }\n            catch (ex) {\n                // for inactive users, non-admins will get Forbidden from the server\n                // so on error we assume that the user that was requested is no longer there (is inactive)\n                return undefined;\n            }\n        });\n    }));\n    results.forEach((result) => {\n        if (result) {\n            const uri = isUriRef(result.ref) ? result.ref.uri : undefined;\n            invariant(uri, \"User must have uri in bear backend instances.\");\n            userMap.set(uri, result);\n        }\n    });\n    return userMap;\n};\n//# sourceMappingURL=api.js.map","// (C) 2019-2022 GoodData Corporation\nimport { defFingerprint, defWithDimensions, defWithSorting, insightRef, defWithDateFormat, } from \"@gooddata/sdk-model\";\nimport isEqual from \"lodash/isEqual.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { convertExecutionApiError } from \"../../../utils/errorHandling.js\";\nimport { BearExecutionResult } from \"./executionResult.js\";\nimport { convertResultSpec } from \"../../../convertors/toBackend/afm/ExecutionConverter.js\";\nimport { objRefToUri } from \"../../../utils/api.js\";\nimport { convertFilters } from \"../../../convertors/toBackend/afm/FilterConverter.js\";\nexport class BearPreparedExecutionByRef {\n    constructor(authCall, definition, insight, filters = [], executionFactory) {\n        this.authCall = authCall;\n        this.definition = definition;\n        this.insight = insight;\n        this.filters = filters;\n        this.executionFactory = executionFactory;\n    }\n    async execute() {\n        const execution = await this.createVisualizationExecution();\n        return this.authCall((sdk) => sdk.execution\n            ._getVisExecutionResponse(this.definition.workspace, execution)\n            .then((response) => {\n            return new BearExecutionResult(this.authCall, this.definition, this.executionFactory, response);\n        }), convertExecutionApiError);\n    }\n    explain() {\n        console.warn(\"Backend does not support explain mode\");\n        return {\n            data: () => Promise.reject(new Error(`Backend does not support explain mode data call.`)),\n            download: () => Promise.resolve(),\n        };\n    }\n    async createVisualizationExecution() {\n        const uri = await objRefToUri(insightRef(this.insight), this.definition.workspace, this.authCall);\n        const resultSpec = convertResultSpec(this.definition);\n        const filters = convertFilters(this.filters);\n        return {\n            visualizationExecution: {\n                reference: uri,\n                resultSpec,\n                filters,\n            },\n        };\n    }\n    withDimensions(...dimsOrGen) {\n        return this.executionFactory.forDefinition(defWithDimensions(this.definition, ...dimsOrGen));\n    }\n    withSorting(...items) {\n        return this.executionFactory.forDefinition(defWithSorting(this.definition, items));\n    }\n    withDateFormat(dateFormat) {\n        return this.executionFactory.forDefinition(defWithDateFormat(this.definition, dateFormat));\n    }\n    withExecConfig(config) {\n        if (!isEmpty(config === null || config === void 0 ? void 0 : config.dataSamplingPercentage)) {\n            console.warn(\"Backend does not support data sampling, result will be not affected\");\n        }\n        return this.executionFactory.forDefinition(this.definition);\n    }\n    fingerprint() {\n        if (!this._fingerprint) {\n            this._fingerprint = defFingerprint(this.definition);\n        }\n        return this._fingerprint;\n    }\n    equals(other) {\n        return isEqual(this.definition, other.definition);\n    }\n}\n//# sourceMappingURL=preparedExecutionByRef.js.map","// (C) 2019-2020 GoodData Corporation\nimport { defaultDimensionsGenerator, defWithDimensions, newDefForInsight, } from \"@gooddata/sdk-model\";\nimport { BearPreparedExecution } from \"./preparedExecution.js\";\nimport { AbstractExecutionFactory } from \"@gooddata/sdk-backend-base\";\nimport { BearPreparedExecutionByRef } from \"./preparedExecutionByRef.js\";\nimport compact from \"lodash/compact.js\";\nexport class BearExecution extends AbstractExecutionFactory {\n    constructor(authCall, workspace) {\n        super(workspace);\n        this.authCall = authCall;\n    }\n    forDefinition(def) {\n        return new BearPreparedExecution(this.authCall, def, this);\n    }\n    forInsightByRef(insight, filters) {\n        const def = defWithDimensions(newDefForInsight(this.workspace, insight, filters), defaultDimensionsGenerator);\n        const nonNullFilters = compact(filters);\n        /*\n         * Need different factory to retain `insight` and `filters` during as the prepared execution is\n         * cumulatively constructed\n         */\n        const byRefFactory = new BearExecutionByRef(this.authCall, this.workspace, insight, nonNullFilters);\n        return new BearPreparedExecutionByRef(this.authCall, def, insight, nonNullFilters, byRefFactory);\n    }\n}\n/**\n * Execution by reference is a different execution type, represented by different class using with different endpoint. Yet\n * it still has to stick to the cumulative and fluent API specified by IPreparedExecution. On top of that, the executions\n * need to be done in a way that they support 'decorability' - so that they can be transparenty wrapped by for instance\n * caching decorator.\n *\n * The transparent decorability in combination with the requirements for cumulative, immutable construction require\n * that each implementation of prepared execution receives an execution factory to create the new instance of\n * the prepared execution with updated definition.\n *\n * In order for this to work with the execution by reference (implemented by different class, requiring always\n * the entire insight which contains the necessary 'ref'), it is essential to use this other execution factory which\n * retains this essential detail during the cumulative operations.\n */\nclass BearExecutionByRef extends AbstractExecutionFactory {\n    constructor(authCall, workspace, insight, filters = []) {\n        super(workspace);\n        this.authCall = authCall;\n        this.insight = insight;\n        this.filters = filters;\n    }\n    forDefinition(def) {\n        return new BearPreparedExecutionByRef(this.authCall, def, this.insight, this.filters, this);\n    }\n    forInsightByRef(insight, filters) {\n        const def = defWithDimensions(newDefForInsight(this.workspace, insight, filters), defaultDimensionsGenerator);\n        return new BearPreparedExecutionByRef(this.authCall, def, insight, filters, this);\n    }\n}\n//# sourceMappingURL=executionFactory.js.map","// (C) 2007-2021 GoodData Corporation\nimport values from \"lodash/fp/values.js\";\nimport first from \"lodash/first.js\";\nimport flow from \"lodash/flow.js\";\n/**\n * @public\n */\nexport function unwrapMetadataObject(object) {\n    return flow(values, first)(object);\n}\n//# sourceMappingURL=GdcMetadataObject.js.map","// (C) 2019-2022 GoodData Corporation\nimport identity from \"lodash/identity.js\";\nimport { MetadataObjectBuilder } from \"./factory.js\";\nimport { builderFactory } from \"../builder.js\";\n/**\n * Variable metadata object builder\n * See {@link Builder}\n *\n * @beta\n */\nexport class VariableMetadataObjectBuilder extends MetadataObjectBuilder {\n}\n/**\n * Variable metadata object factory\n *\n * @param ref - variable reference\n * @param modifications - variable builder modifications to perform\n * @returns created variable metadata object\n * @beta\n */\nexport const newVariableMetadataObject = (ref, modifications = identity) => builderFactory(VariableMetadataObjectBuilder, { type: \"variable\", ref }, modifications);\n//# sourceMappingURL=variableFactory.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isAttributeDisplayForm, isFact, isMetadataObjectAttribute, isMetadataObjectDataSet, isMetric, isPrompt, isTheme, } from \"@gooddata/api-model-bear\";\nimport { uriRef } from \"@gooddata/sdk-model\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nimport { newAttributeDisplayFormMetadataObject, newAttributeMetadataObject, newDataSetMetadataObject, newFactMetadataObject, newMeasureMetadataObject, newVariableMetadataObject, } from \"@gooddata/sdk-backend-base\";\nconst supportedMetadataObjectsTypeGuards = [\n    isMetadataObjectAttribute,\n    isAttributeDisplayForm,\n    isMetric,\n    isFact,\n    isMetadataObjectDataSet,\n    isPrompt,\n    isTheme,\n];\nconst isSupportedMetadataObject = (obj) => supportedMetadataObjectsTypeGuards.some((isType) => isType(obj));\nexport const convertMetadataObject = (obj) => {\n    if (!isSupportedMetadataObject(obj)) {\n        throw new UnexpectedError(`Cannot convert metadata object, convertor not found! (${JSON.stringify(obj, null, 4)})`);\n    }\n    const ref = uriRef(obj.meta.uri);\n    const commonModifications = (builder) => builder\n        .title(obj.meta.title)\n        .description(obj.meta.summary)\n        .id(obj.meta.identifier)\n        .production(obj.meta.isProduction === 1)\n        .uri(obj.meta.uri);\n    if (isMetadataObjectAttribute(obj)) {\n        const attributeDisplayForms = obj.content.displayForms.map((displayForm) => newAttributeDisplayFormMetadataObject(uriRef(displayForm.meta.uri), (df) => df\n            .attribute(ref)\n            .title(displayForm.meta.title)\n            .description(displayForm.meta.summary)\n            .id(displayForm.meta.identifier)\n            .uri(displayForm.meta.uri)\n            .displayFormType(displayForm.content.type)));\n        return newAttributeMetadataObject(ref, (a) => a.modify(commonModifications).displayForms(attributeDisplayForms));\n    }\n    else if (isAttributeDisplayForm(obj)) {\n        return newAttributeDisplayFormMetadataObject(ref, (a) => a\n            .modify(commonModifications)\n            .attribute(uriRef(obj.content.formOf))\n            .displayFormType(obj.content.type));\n    }\n    else if (isMetric(obj)) {\n        return newMeasureMetadataObject(ref, (m) => m\n            .modify(commonModifications)\n            .expression(obj.content.expression)\n            .format(obj.content.format || \"##,#\"));\n    }\n    else if (isFact(obj)) {\n        return newFactMetadataObject(ref, (f) => f.modify(commonModifications));\n    }\n    else if (isMetadataObjectDataSet(obj)) {\n        return newDataSetMetadataObject(ref, (ds) => ds.modify(commonModifications));\n    }\n    else {\n        // is prompt\n        return newVariableMetadataObject(ref, (v) => v.modify(commonModifications));\n    }\n};\n/**\n * Converts xref entry (result of using/usedBy) into IMetadataObject. There's one gotcha: the production indicator\n * is not available in xref entry. Instead of calling out to the backend, this function will hammer in 'true' - which\n * will be right guess in vast majority of cases (hunt me down when this starts causing bugs :)).\n *\n * @param type - specify object type of the xref entry (code ignores the xref category)\n * @param entry - xref entry\n */\nexport const convertMetadataObjectXrefEntry = (type, entry) => {\n    const ref = uriRef(entry.link);\n    return {\n        type,\n        uri: entry.link,\n        id: entry.identifier,\n        ref,\n        title: entry.title,\n        description: entry.summary,\n        production: true,\n        unlisted: entry.unlisted === 1,\n        deprecated: entry.deprecated === \"1\",\n    };\n};\n//# sourceMappingURL=MetaConverter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { newMeasureMetadataObject } from \"@gooddata/sdk-backend-base\";\nimport { uriRef } from \"@gooddata/sdk-model\";\nexport function convertMetricFromBackend(metric) {\n    const ref = uriRef(metric.meta.uri);\n    const { meta, content } = metric;\n    return newMeasureMetadataObject(ref, (m) => m\n        .id(meta.identifier)\n        .uri(meta.uri)\n        .title(meta.title)\n        .description(meta.summary || \"\")\n        .expression(content.expression)\n        .format(content.format || \"#,#.##\")\n        .deprecated(meta.deprecated === \"1\")\n        .isLocked(Boolean(meta.locked))\n        .production(Boolean(meta.isProduction))\n        .unlisted(Boolean(meta.unlisted)));\n}\nexport function convertListedMetric(metricLink) {\n    const ref = uriRef(metricLink.link);\n    return newMeasureMetadataObject(ref, (m) => m\n        .id(metricLink.identifier)\n        .uri(metricLink.link)\n        .title(metricLink.title || \"\")\n        .description(metricLink.summary || \"\"));\n}\n//# sourceMappingURL=MetricConverter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isMeasureMetadataObject, } from \"@gooddata/sdk-model\";\nexport function convertMetricToBackend(measure) {\n    return {\n        meta: Object.assign(Object.assign({}, (isMeasureMetadataObject(measure) && {\n            identifier: measure.id,\n            uri: measure.uri,\n        })), { title: measure.title || \"\", summary: measure.description, locked: measure.isLocked }),\n        content: {\n            expression: measure.expression,\n            format: measure.format,\n        },\n    };\n}\n//# sourceMappingURL=MetricConverter.js.map","// (C) 2019-2023 GoodData Corporation\nimport flow from \"lodash/flow.js\";\nimport filter from \"lodash/fp/filter.js\";\nimport map from \"lodash/fp/map.js\";\nimport uniq from \"lodash/fp/uniq.js\";\nconst REMOVE_BRACKETS_REGEXP = /[[\\]{}]/g;\nconst TOKEN_TYPE_REGEXP_PAIRS = [\n    [\"text\", /^[^#{}[\\]\"()0-9.]+/],\n    [\"quoted_text\", /^\"(?:[^\"\\\\]|\\\\\"|\\\\'|\\\\\\\\.)*\"/],\n    [\"number\", /^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))/],\n    [\"bracket\", /^[()]+/],\n    [\"identifier\", /^\\{[^}]+\\}/],\n    [\"element_uri\", /^\\[[a-zA-Z0-9\\\\/]+elements\\?id=\\d+\\]/],\n    [\"uri\", /^\\[[a-zA-Z0-9\\\\/]+\\]/],\n    [\"comment\", /#[^\\n]*/],\n];\nexport const getTokenValuesOfType = (tokenType, tokens) => flow(filter((token) => token.type === tokenType), map((token) => token.value), uniq)(tokens);\nexport const tokenizeExpression = (expression) => {\n    const tokens = [];\n    let _expression = expression;\n    while (_expression.length) {\n        let match;\n        for (const [type, regExp] of TOKEN_TYPE_REGEXP_PAIRS) {\n            match = _expression.match(regExp);\n            if (match) {\n                const [value] = match;\n                tokens.push({ type, value });\n                _expression = _expression.substr(value.length);\n                break;\n            }\n        }\n        if (!match) {\n            throw new Error(`Unable to match token, rest of output is: \"${_expression}\"`);\n        }\n    }\n    return tokens.map((token) => (Object.assign(Object.assign({}, token), { value: token.type === \"comment\" ? token.value : token.value.replace(REMOVE_BRACKETS_REGEXP, \"\") })));\n};\n//# sourceMappingURL=measureExpressionTokens.js.map","import { isUri } from \"@gooddata/api-client-bear\";\nimport isArray from \"lodash/isArray.js\";\nimport isObject from \"lodash/isObject.js\";\nimport isString from \"lodash/isString.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n/*\n * Helpers\n */\nconst getReferenceValue = (id, references) => references[id];\nconst getReferenceId = (value, references) => Object.keys(references).find((id) => references[id] === value);\nconst defaultIdGenerator = () => uuidv4().replace(/-/g, \"\");\n/**\n * Recursively traverses the object and tries to apply a conversion to every string value\n */\nconst traverse = (obj, convert) => {\n    if (isArray(obj)) {\n        return obj.map((a) => traverse(a, convert));\n    }\n    else if (isObject(obj)) {\n        return Object.keys(obj).reduce((result, key) => {\n            result[key] = traverse(obj[key], convert);\n            return result;\n        }, {});\n    }\n    else if (isString(obj)) {\n        return convert(obj);\n    }\n    else {\n        return obj;\n    }\n};\nconst createConverter = (conversionFunction) => (conversionData, idGenerator = defaultIdGenerator) => {\n    return conversionFunction(conversionData, idGenerator);\n};\n/*\n * Conversion from References to URIs\n */\nconst convertReferenceToUri = (references) => (value) => getReferenceValue(value, references) || value;\n/**\n * Converts URIs to reference based values\n *\n * @param conversionData - Data to convert\n * @param idGenerator - Function that returns unique ids, defaults to uuid\n *\n * @internal\n */\nexport const convertReferencesToUris = createConverter(({ references, properties }) => {\n    return {\n        properties: traverse(properties, convertReferenceToUri(references)),\n        references,\n    };\n});\n/*\n * Conversion from URIs to References\n */\nconst createUriToReferenceConverter = (originalReferences, idGenerator) => {\n    const convertedReferences = {};\n    return {\n        convertedReferences,\n        conversion: (value) => {\n            if (!isUri(value)) {\n                return value;\n            }\n            const id = getReferenceId(value, originalReferences) || // try to reuse original references\n                getReferenceId(value, convertedReferences) || // or use already converted new references\n                idGenerator(); // or get a completely new id\n            convertedReferences[id] = value;\n            return id;\n        },\n    };\n};\n/**\n * Converts URIs to reference based values\n *\n * @param conversionData - Data to convert\n * @param idGenerator - Function that returns unique ids, defaults to uuid\n * @internal\n */\nexport const convertUrisToReferences = createConverter(({ properties, references }, idGenerator) => {\n    const converter = createUriToReferenceConverter(references, idGenerator);\n    return {\n        properties: traverse(properties, converter.conversion),\n        references: converter.convertedReferences,\n    };\n});\n//# sourceMappingURL=ReferenceConverter.js.map","// (C) 2019-2022 GoodData Corporation\nimport stringify from \"json-stable-stringify\";\n/**\n * @internal\n */\nexport const serializeProperties = (properties) => stringify(properties);\n/**\n * @internal\n */\nexport const deserializeProperties = (properties) => {\n    try {\n        return properties ? JSON.parse(properties) : {};\n    }\n    catch (_a) {\n        console.error(`Error parsing properties: \"${properties}\"`);\n        return {};\n    }\n};\n//# sourceMappingURL=PropertiesConverter.js.map","// (C) 2007-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isObjectUriQualifier(qualifier) {\n    return !isEmpty(qualifier) && qualifier.uri !== undefined;\n}\n/**\n * @public\n */\nexport function isObjIdentifierQualifier(qualifier) {\n    return !isEmpty(qualifier) && qualifier.identifier !== undefined;\n}\n/**\n * @public\n */\nexport function isLocalIdentifierQualifier(qualifier) {\n    return !isEmpty(qualifier) && qualifier.localIdentifier !== undefined;\n}\n/**\n * @public\n */\nexport function isComparisonCondition(condition) {\n    return !isEmpty(condition) && condition.comparison !== undefined;\n}\n/**\n * @public\n */\nexport function isRangeCondition(condition) {\n    return !isEmpty(condition) && condition.range !== undefined;\n}\n//# sourceMappingURL=GdcTypes.js.map","// (C) 2007-2023 GoodData Corporation\nimport { isLocalIdentifierQualifier, isObjectUriQualifier, } from \"@gooddata/api-model-bear\";\nimport { idRef, uriRef, localIdRef } from \"@gooddata/sdk-model\";\n/**\n * Converts reference into a format acceptable by the SPI. URI references are left as-is, while\n * the identifier references have the object type added.\n *\n * @param ref - reference\n * @param defaultType - type to use it the ref has none specified\n * @internal\n */\nexport function fromBearRef(ref, defaultType) {\n    if (isObjectUriQualifier(ref)) {\n        return uriRef(ref.uri);\n    }\n    return idRef(ref.identifier, defaultType);\n}\n/**\n * Converts scoped reference into a format acceptable by the bear SPI. URI references are left as-is, scoped\n * references are left as is, while the identifier references have the object type added.\n *\n * @param ref - reference\n * @param defaultType - type to use it the ref has none specified\n * @internal\n */\nexport function fromScopedBearRef(ref, defaultType) {\n    if (isLocalIdentifierQualifier(ref)) {\n        return localIdRef(ref.localIdentifier);\n    }\n    return fromBearRef(ref, defaultType);\n}\n//# sourceMappingURL=ObjRefConverter.js.map","// (C) 2019-2022 GoodData Corporation\nimport { uriRef, } from \"@gooddata/sdk-model\";\nimport compact from \"lodash/compact.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isNil from \"lodash/isNil.js\";\nimport omit from \"lodash/omit.js\";\nimport { isVisualizationObjectAbsoluteDateFilter, isVisualizationObjectArithmeticMeasureDefinition, isVisualizationObjectAttributeFilter, isVisualizationObjectMeasure, isVisualizationObjectMeasureValueFilter, isVisualizationObjectPoPMeasureDefinition, isVisualizationObjectPositiveAttributeFilter, isVisualizationObjectPreviousPeriodMeasureDefinition, isVisualizationObjectRankingFilter, } from \"@gooddata/api-model-bear\";\nimport { convertReferencesToUris } from \"./ReferenceConverter.js\";\nimport { deserializeProperties, serializeProperties } from \"./PropertiesConverter.js\";\nimport { fromBearRef, fromScopedBearRef } from \"./ObjRefConverter.js\";\n// we use more lenient uri \"detection\" here because the one in bear-client makes some legacy data fail\n// as the objId is not always just a number\nconst isUriLike = (value) => /\\/gdc\\/md\\/\\S+\\/obj\\/\\S+/.test(value);\nconst convertAttributeElements = (items) => {\n    if (!items.length) {\n        // in case of empty filter assume that it is meant to be an URI-based one as these are much more common on bear\n        return { uris: [] };\n    }\n    // we assume that all the items either use uris, or values, not both, since there is no way of representing the mixed variant\n    const first = items[0];\n    return isUriLike(first) ? { uris: items } : { values: items };\n};\nconst convertMeasureValueFilter = (filter) => {\n    return {\n        measureValueFilter: {\n            condition: filter.measureValueFilter.condition,\n            measure: fromScopedBearRef(filter.measureValueFilter.measure, \"measure\"),\n        },\n    };\n};\nconst convertRankingFilter = (filter) => {\n    const { measures, operator, value, attributes } = filter.rankingFilter;\n    return {\n        rankingFilter: {\n            measure: fromScopedBearRef(measures[0], \"measure\"),\n            operator,\n            value,\n            attributes,\n        },\n    };\n};\nconst convertFilter = (filter) => {\n    if (isVisualizationObjectMeasureValueFilter(filter)) {\n        return convertMeasureValueFilter(filter);\n    }\n    else if (isVisualizationObjectRankingFilter(filter)) {\n        return convertRankingFilter(filter);\n    }\n    else {\n        return convertMeasureFilter(filter);\n    }\n};\nconst convertMeasureFilter = (filter) => {\n    if (isVisualizationObjectAttributeFilter(filter)) {\n        if (isVisualizationObjectPositiveAttributeFilter(filter)) {\n            return {\n                positiveAttributeFilter: {\n                    displayForm: fromBearRef(filter.positiveAttributeFilter.displayForm, \"displayForm\"),\n                    in: convertAttributeElements(filter.positiveAttributeFilter.in),\n                },\n            };\n        }\n        return {\n            negativeAttributeFilter: {\n                displayForm: fromBearRef(filter.negativeAttributeFilter.displayForm, \"displayForm\"),\n                notIn: convertAttributeElements(filter.negativeAttributeFilter.notIn),\n            },\n        };\n    }\n    else {\n        if (isVisualizationObjectAbsoluteDateFilter(filter)) {\n            return {\n                absoluteDateFilter: {\n                    dataSet: fromBearRef(filter.absoluteDateFilter.dataSet, \"dataSet\"),\n                    from: filter.absoluteDateFilter.from || \"\",\n                    to: filter.absoluteDateFilter.to || \"\",\n                },\n            };\n        }\n        // check for all-time filters with missing bounds (even one missing bound suggests an all time filter)\n        // we cannot remove them, as they do make sense in some rare legacy contexts\n        if (isNil(filter.relativeDateFilter.from) || isNil(filter.relativeDateFilter.to)) {\n            console.warn(\"RelativeDateFilter without 'from' or 'to' field encountered.\" +\n                \"This can make sense in some legacy contexts (e.g. PoP measures with All time global filter), but generally, this indicates an error.\" +\n                \"Please check the visualization object data to make sure the relativeDateFilter data is what you expected.\");\n        }\n        return {\n            relativeDateFilter: Object.assign(Object.assign({}, filter.relativeDateFilter), { granularity: filter.relativeDateFilter.granularity, from: filter.relativeDateFilter.from, to: filter.relativeDateFilter.to }),\n        };\n    }\n};\nconst convertMeasureDefinition = (definition) => {\n    if (isVisualizationObjectArithmeticMeasureDefinition(definition)) {\n        return definition;\n    }\n    if (isVisualizationObjectPoPMeasureDefinition(definition)) {\n        return definition;\n    }\n    if (isVisualizationObjectPreviousPeriodMeasureDefinition(definition)) {\n        return definition;\n    }\n    const { filters } = definition.measureDefinition;\n    return {\n        measureDefinition: Object.assign(Object.assign({}, definition.measureDefinition), { filters: filters ? compact(filters.map(convertMeasureFilter)) : [] }),\n    };\n};\nconst convertMeasure = (measure) => {\n    const { definition } = measure.measure;\n    return {\n        measure: Object.assign(Object.assign({}, measure.measure), { definition: convertMeasureDefinition(definition) }),\n    };\n};\nconst convertAttribute = (attribute) => {\n    return {\n        attribute: Object.assign(Object.assign({}, attribute.visualizationAttribute), { displayForm: fromBearRef(attribute.visualizationAttribute.displayForm, \"displayForm\") }),\n    };\n};\nconst convertBucketItem = (bucketItem) => {\n    return isVisualizationObjectMeasure(bucketItem)\n        ? convertMeasure(bucketItem)\n        : convertAttribute(bucketItem);\n};\n/**\n * @internal\n */\nexport const convertBucket = (bucket) => {\n    return {\n        items: bucket.items.map(convertBucketItem),\n        localIdentifier: bucket.localIdentifier,\n        totals: bucket.totals,\n    };\n};\nconst resolveReferences = (mdObject) => {\n    const { content } = mdObject;\n    if (!content) {\n        return mdObject;\n    }\n    const { properties } = content;\n    if (!properties) {\n        return mdObject;\n    }\n    const { properties: convertedProperties, references: convertedReferences } = convertReferencesToUris({\n        properties: deserializeProperties(properties),\n        references: content.references || {},\n    });\n    // set the new properties and references\n    const referencesProp = isEmpty(convertedReferences) ? undefined : { references: convertedReferences };\n    return Object.assign(Object.assign({}, mdObject), { content: Object.assign(Object.assign(Object.assign({}, omit(mdObject.content, \"references\")), { properties: serializeProperties(convertedProperties) }), referencesProp) });\n};\n/**\n *\n * @internal\n */\nexport const convertVisualization = (visualization, visualizationClassUri, userMap) => {\n    var _a, _b, _c;\n    const withResolvedReferences = resolveReferences(visualization.visualizationObject);\n    const { content, meta } = withResolvedReferences;\n    const parsedProperties = deserializeProperties(content.properties);\n    return {\n        insight: {\n            buckets: content.buckets.map(convertBucket),\n            filters: content.filters ? compact(content.filters.map(convertFilter)) : [],\n            ref: uriRef(meta.uri),\n            // we assume that identifier is always defined for visualizations\n            identifier: meta.identifier,\n            properties: parsedProperties,\n            sorts: parsedProperties.sortItems || [],\n            title: meta.title,\n            uri: meta.uri,\n            visualizationUrl: visualizationClassUri,\n            created: meta.created,\n            createdBy: meta.author ? userMap === null || userMap === void 0 ? void 0 : userMap.get(meta.author) : undefined,\n            updated: meta.updated,\n            updatedBy: meta.contributor ? userMap === null || userMap === void 0 ? void 0 : userMap.get(meta.contributor) : undefined,\n            isLocked: meta.locked,\n            tags: (_b = (_a = meta.tags) === null || _a === void 0 ? void 0 : _a.split(\" \").filter(Boolean)) !== null && _b !== void 0 ? _b : [],\n            summary: (_c = meta.summary) !== null && _c !== void 0 ? _c : \"\",\n        },\n    };\n};\nexport const convertListedVisualization = (visualizationLink) => {\n    const ref = uriRef(visualizationLink.link);\n    return {\n        insight: {\n            identifier: visualizationLink.identifier || \"\",\n            title: visualizationLink.title || \"\",\n            uri: visualizationLink.link,\n            ref: ref,\n            properties: [],\n            sorts: [],\n            visualizationUrl: \"\",\n            buckets: [],\n            filters: [],\n            tags: [],\n            created: visualizationLink.created,\n            updated: visualizationLink.updated,\n            summary: visualizationLink.summary,\n        },\n    };\n};\n//# sourceMappingURL=VisualizationConverter.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isWrappedMetric, unwrapMetadataObject, } from \"@gooddata/api-model-bear\";\nimport flow from \"lodash/flow.js\";\nimport map from \"lodash/fp/map.js\";\nimport replace from \"lodash/fp/replace.js\";\nimport uniq from \"lodash/fp/uniq.js\";\nimport { convertMetadataObject, } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport { convertListedMetric, convertMetricFromBackend, } from \"../../../convertors/fromBackend/MetricConverter.js\";\nimport { convertMetricToBackend } from \"../../../convertors/toBackend/MetricConverter.js\";\nimport { objRefToUri } from \"../../../utils/api.js\";\nimport { getTokenValuesOfType, tokenizeExpression } from \"./measureExpressionTokens.js\";\nimport { convertListedVisualization } from \"../../../convertors/fromBackend/VisualizationConverter.js\";\nexport class BearWorkspaceMeasures {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    async getMeasureExpressionTokens(ref) {\n        const uri = await objRefToUri(ref, this.workspace, this.authCall);\n        const metricMetadata = await this.authCall((sdk) => sdk.xhr.getParsed(uri));\n        if (!isWrappedMetric(metricMetadata)) {\n            throw new Error(\"To get measure expression tokens, provide the correct measure identifier. Did you provide a measure identifier?\");\n        }\n        const expressionTokens = tokenizeExpression(metricMetadata.metric.content.expression);\n        const expressionIdentifiers = getTokenValuesOfType(\"identifier\", expressionTokens);\n        const expressionUris = getTokenValuesOfType(\"uri\", expressionTokens);\n        const expressionElementUris = getTokenValuesOfType(\"element_uri\", expressionTokens);\n        const expressionIdentifierUrisPairs = await this.authCall((sdk) => sdk.md.getUrisFromIdentifiers(this.workspace, expressionIdentifiers));\n        const expressionIdentifierUris = expressionIdentifierUrisPairs.map((pair) => pair.uri);\n        const allExpressionElementAttributeUris = flow(map(replace(/\\/elements\\?id=.*/, \"\")), uniq)(expressionElementUris);\n        const allExpressionUris = uniq([\n            ...expressionUris,\n            ...expressionIdentifierUris,\n            ...allExpressionElementAttributeUris,\n        ]);\n        const allExpressionWrappedObjects = await this.authCall((sdk) => sdk.md.getObjects(this.workspace, allExpressionUris));\n        const allExpressionObjects = allExpressionWrappedObjects.map(unwrapMetadataObject);\n        const allExpressionAttributeElements = await Promise.all(expressionElementUris.map((elementUri) => this.authCall((sdk) => sdk.md.getAttributeElementDefaultDisplayFormValue(elementUri))));\n        const objectsByUri = allExpressionObjects.reduce((acc, el) => {\n            acc[el.meta.uri] = el;\n            return acc;\n        }, {});\n        const objectsByIdentifier = allExpressionObjects.reduce((acc, el) => {\n            acc[el.meta.identifier] = el;\n            return acc;\n        }, {});\n        const attributeElementsByUri = allExpressionAttributeElements.reduce((acc, el) => {\n            if (el) {\n                acc[el.uri] = el;\n            }\n            return acc;\n        }, {});\n        return expressionTokens.map((token) => {\n            if (token.type === \"element_uri\") {\n                return createAttribute(attributeElementsByUri, token);\n            }\n            if (token.type === \"uri\" || token.type === \"identifier\") {\n                return createIdentifier(token, objectsByUri, objectsByIdentifier);\n            }\n            if (token.type === \"comment\" ||\n                token.type === \"number\" ||\n                token.type === \"quoted_text\" ||\n                token.type === \"text\" ||\n                token.type === \"bracket\") {\n                return createToken(token.type, token.value);\n            }\n            return createToken(\"text\", token.value);\n        });\n    }\n    async createMeasure(measure) {\n        const mdObject = await this.authCall((sdk) => sdk.md.createObject(this.workspace, { metric: convertMetricToBackend(measure) }));\n        return convertMetricFromBackend(mdObject.metric);\n    }\n    async deleteMeasure(ref) {\n        const uri = await objRefToUri(ref, this.workspace, this.authCall);\n        await this.authCall((sdk) => sdk.md.deleteObject(uri));\n    }\n    async updateMeasure(measure) {\n        const objectId = measure.uri.split(\"/\").slice(-1)[0];\n        await this.authCall((sdk) => {\n            return sdk.md.updateObject(this.workspace, objectId, { metric: convertMetricToBackend(measure) });\n        });\n        return measure;\n    }\n    async getMeasureReferencingObjects(ref) {\n        const uri = await objRefToUri(ref, this.workspace, this.authCall);\n        const data = await this.authCall((sdk) => sdk.md.getObjectUsedBy(this.workspace, uri, {\n            types: [\"metric\", \"visualizationObject\"],\n            nearest: true,\n        }));\n        return Promise.resolve({\n            measures: data.filter((item) => item.category === \"metric\").map(convertListedMetric),\n            insights: data\n                .filter((item) => item.category === \"visualizationObject\")\n                .map(convertListedVisualization),\n        });\n    }\n}\nfunction createAttribute(attributeElementsByUri, token) {\n    const element = attributeElementsByUri[token.value];\n    return Object.assign({ type: \"attributeElement\" }, (element\n        ? {\n            value: element.title,\n        }\n        : {\n            value: \"\",\n            deleted: true,\n        }));\n}\nfunction createIdentifier(token, objectsByUri, objectsByIdentifier) {\n    const meta = token.type === \"uri\"\n        ? convertMetadataObject(objectsByUri[token.value])\n        : convertMetadataObject(objectsByIdentifier[token.value]);\n    return {\n        type: meta.type,\n        value: meta.title,\n        id: meta.id,\n        ref: meta.ref,\n    };\n}\nfunction createToken(type, value) {\n    return {\n        type,\n        value,\n    };\n}\n//# sourceMappingURL=index.js.map","import { isTheme, unwrapMetadataObject } from \"@gooddata/api-model-bear\";\nimport { isApiResponseError } from \"../../../utils/errorHandling.js\";\nexport class BearWorkspaceStyling {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.getColorPalette = async () => {\n            const palette = await this.authCall((sdk) => sdk.project.getColorPaletteWithGuids(this.workspace));\n            return palette || [];\n        };\n        this.getTheme = async () => {\n            const config = await this.authCall((sdk) => sdk.project.getProjectFeatureFlags(this.workspace));\n            const identifier = config.selectedUiTheme;\n            return identifier\n                ? this.authCall((sdk) => sdk.md\n                    .getObjectByIdentifier(this.workspace, identifier)\n                    .then((object) => {\n                    const unwrappedObject = unwrapMetadataObject(object);\n                    return (isTheme(unwrappedObject) && unwrappedObject.content) || {};\n                })\n                    .catch((err) => {\n                    if (isApiResponseError(err)) {\n                        return {};\n                    }\n                    throw err;\n                }))\n                : {};\n        };\n    }\n}\n//# sourceMappingURL=styling.js.map","// (C) 2019-2023 GoodData Corporation\nimport { uriRef, idRef, } from \"@gooddata/sdk-model\";\nimport { newAttributeDisplayFormMetadataObject, newCatalogAttribute, newCatalogDateAttribute, newCatalogDateDataset, newCatalogFact, newCatalogGroup, newCatalogMeasure, } from \"@gooddata/sdk-backend-base\";\nexport const isCompatibleCatalogItemType = (type) => type !== \"dateDataset\" && type !== \"attributeHierarchy\";\nconst bearItemTypeByCatalogItemType = {\n    attribute: \"attribute\",\n    fact: \"fact\",\n    measure: \"metric\",\n};\nexport const convertItemType = (type) => bearItemTypeByCatalogItemType[type];\nconst bearObjectMetaToBearRef = (obj) => uriRef(obj.uri);\nconst bearCatalogItemToBearRef = (obj) => uriRef(obj.links.self);\nconst bearGroupableCatalogItemToTagRefs = (item) => {\n    const { groups = [] } = item;\n    return groups.map((tagId) => idRef(tagId));\n};\nconst commonMetadataModifications = (item) => (builder) => {\n    var _a;\n    return builder\n        .id(item.identifier)\n        .uri(item.uri)\n        .title(item.title)\n        .description((_a = item.summary) !== null && _a !== void 0 ? _a : \"\")\n        .production(item.isProduction === 1)\n        .unlisted(item.unlisted === 1)\n        .deprecated(item.deprecated === \"1\");\n};\nconst commonCatalogItemModifications = (item) => (builder) => builder\n    .id(item.identifier)\n    .uri(item.links.self)\n    .title(item.title)\n    .description(item.summary)\n    .production(item.production)\n    .unlisted(false)\n    .deprecated(false);\nconst convertDisplayForm = (df, attrRef) => {\n    const ref = bearObjectMetaToBearRef(df.meta);\n    return newAttributeDisplayFormMetadataObject(ref, (m) => {\n        return m\n            .modify(commonMetadataModifications(df.meta))\n            .attribute(attrRef)\n            .displayFormType(df.content.type);\n    });\n};\nexport const convertAttribute = (attribute, displayForms, attributes) => {\n    var _a;\n    const attrRef = bearCatalogItemToBearRef(attribute);\n    const defaultDisplayForm = displayForms[attribute.links.defaultDisplayForm];\n    const attributeData = attributes[attribute.identifier];\n    const geoPinDisplayForms = ((_a = attribute.links.geoPinDisplayForms) !== null && _a !== void 0 ? _a : []).map((uri) => displayForms[uri]);\n    const attributeDisplayForms = attributeData.attribute.content.displayForms.map((displayForm) => convertDisplayForm(displayForm, attrRef));\n    const groups = bearGroupableCatalogItemToTagRefs(attribute);\n    const drillDownStep = attributeData.attribute.content.drillDownStepAttributeDF\n        ? uriRef(attributeData.attribute.content.drillDownStepAttributeDF)\n        : undefined;\n    const drillDownLink = attributeData.attribute.content.linkAttributeDF\n        ? uriRef(attributeData.attribute.content.linkAttributeDF)\n        : undefined;\n    return newCatalogAttribute((catalogA) => catalogA\n        .attribute(attrRef, (a) => {\n        return a\n            .modify(commonCatalogItemModifications(attribute))\n            .drillDownStep(drillDownStep)\n            .drillToAttributeLink(drillDownLink)\n            .displayForms(attributeDisplayForms);\n    })\n        .defaultDisplayForm(convertDisplayForm(defaultDisplayForm, attrRef))\n        .displayForms(attributeDisplayForms)\n        .geoPinDisplayForms(geoPinDisplayForms.map((df) => convertDisplayForm(df, attrRef)))\n        .groups(groups));\n};\nexport const convertMeasure = (metric) => {\n    const measureRef = bearCatalogItemToBearRef(metric);\n    const groups = bearGroupableCatalogItemToTagRefs(metric);\n    return newCatalogMeasure((catalogM) => catalogM\n        .measure(measureRef, (m) => m\n        .modify(commonCatalogItemModifications(metric))\n        .expression(metric.expression)\n        .format(metric.format))\n        .groups(groups));\n};\nexport const convertFact = (fact) => {\n    const factRef = bearCatalogItemToBearRef(fact);\n    const groups = bearGroupableCatalogItemToTagRefs(fact);\n    return newCatalogFact((catalogF) => catalogF.fact(factRef, (f) => f.modify(commonCatalogItemModifications(fact))).groups(groups));\n};\nconst convertDateDataSetAttribute = (dateDatasetAttribute, attributeById) => {\n    const { attributeMeta, defaultDisplayFormMeta } = dateDatasetAttribute;\n    const attributeRef = bearObjectMetaToBearRef(attributeMeta);\n    const displayFormRef = bearObjectMetaToBearRef(defaultDisplayFormMeta);\n    const attributeData = attributeById[attributeMeta.identifier];\n    const attributeDisplayForms = attributeData.attribute.content.displayForms.map((displayForm) => convertDisplayForm(displayForm, attributeRef));\n    const drillDownStep = attributeData.attribute.content.drillDownStepAttributeDF\n        ? uriRef(attributeData.attribute.content.drillDownStepAttributeDF)\n        : undefined;\n    return newCatalogDateAttribute((catalogDa) => catalogDa\n        .attribute(attributeRef, (a) => a\n        .modify(commonMetadataModifications(attributeMeta))\n        .drillDownStep(drillDownStep)\n        .displayForms(attributeDisplayForms))\n        .defaultDisplayForm(displayFormRef, (df) => df.modify(commonMetadataModifications(defaultDisplayFormMeta)))\n        .granularity(dateDatasetAttribute.type));\n};\nexport const convertDateDataset = (dateDataset, attributeById) => {\n    const { availableDateAttributes = [] } = dateDataset;\n    const dateDatasetRef = bearObjectMetaToBearRef(dateDataset.meta);\n    const dateAttributes = availableDateAttributes.map((attribute) => convertDateDataSetAttribute(attribute, attributeById));\n    return newCatalogDateDataset((catalogDs) => catalogDs\n        .dataSet(dateDatasetRef, (ds) => ds.modify(commonMetadataModifications(dateDataset.meta)))\n        .dateAttributes(dateAttributes)\n        .relevance(dateDataset.relevance));\n};\nexport const convertWrappedFact = (fact) => {\n    const { meta } = fact.fact;\n    const factRef = uriRef(meta.uri);\n    return newCatalogFact((catalogFact) => catalogFact.fact(factRef, (f) => f.modify(commonMetadataModifications(meta))));\n};\nexport const convertWrappedAttribute = (attribute) => {\n    var _a, _b;\n    const { content, meta } = attribute.attribute;\n    const attrRef = uriRef(meta.uri);\n    const displayForms = (_a = content.displayForms) !== null && _a !== void 0 ? _a : [];\n    const defaultDisplayForm = (_b = displayForms.find((df) => df.content.default === 1)) !== null && _b !== void 0 ? _b : displayForms[0];\n    const geoPinDisplayForms = displayForms.filter((df) => df.content.type === \"GDC.geo.pin\");\n    return newCatalogAttribute((catalogAttr) => {\n        let result = catalogAttr\n            .attribute(attrRef, (a) => a.modify(commonMetadataModifications(meta)))\n            .displayForms(displayForms.map((displayForm) => newAttributeDisplayFormMetadataObject(uriRef(displayForm.meta.uri), (df) => df\n            .modify(commonMetadataModifications(displayForm.meta))\n            .attribute(attrRef)\n            .displayFormType(displayForm.content.type))))\n            .geoPinDisplayForms(geoPinDisplayForms.map((geoDisplayForm) => {\n            return newAttributeDisplayFormMetadataObject(uriRef(geoDisplayForm.meta.uri), (df) => df\n                .modify(commonMetadataModifications(geoDisplayForm.meta))\n                .attribute(attrRef)\n                .displayFormType(geoDisplayForm.content.type));\n        }));\n        if (defaultDisplayForm) {\n            result = result.defaultDisplayForm(uriRef(defaultDisplayForm.meta.uri), (df) => df\n                .modify(commonMetadataModifications(defaultDisplayForm.meta))\n                .attribute(attrRef)\n                .displayFormType(defaultDisplayForm.content.type));\n        }\n        return result;\n    });\n};\nexport const convertMetric = (metric) => {\n    const { content, meta } = metric.metric;\n    const measureRef = uriRef(meta.uri);\n    return newCatalogMeasure((catalogMeasure) => catalogMeasure.measure(measureRef, (m) => {\n        var _a;\n        return m\n            .modify(commonMetadataModifications(meta))\n            .expression(content.expression)\n            .format((_a = content.format) !== null && _a !== void 0 ? _a : \"#,#.##\");\n    }));\n};\nexport const convertGroup = (group) => {\n    return newCatalogGroup((catalogG) => catalogG.title(group.title).tag(idRef(group.identifier)));\n};\n//# sourceMappingURL=CatalogConverter.js.map","import { isPositiveAttributeFilter, filterAttributeElements, isAttributeElementsByRef, filterObjRef, isNegativeAttributeFilter, isAbsoluteDateFilter, isMeasureValueFilter, measureValueFilterMeasure, measureValueFilterCondition, isIdentifierRef, relativeDateFilterValues, absoluteDateFilterValues, isRankingFilter, } from \"@gooddata/sdk-model\";\nimport { toBearRef } from \"./ObjRefConverter.js\";\nimport { assertNoNulls } from \"./utils.js\";\nconst convertObjRefInScopeToRefWithoutIdentifier = (ref) => {\n    if (isIdentifierRef(ref)) {\n        throw new Error(\"Cannot convert ref specified by identifier\");\n    }\n    return ref;\n};\nconst convertMeasureValueFilter = (filter) => {\n    const measureObjQualifier = measureValueFilterMeasure(filter);\n    if (isIdentifierRef(measureObjQualifier)) {\n        throw new Error(\"Cannot convert measure value filter for measure specified by identifier\");\n    }\n    return {\n        measureValueFilter: {\n            measure: measureObjQualifier,\n            condition: measureValueFilterCondition(filter),\n        },\n    };\n};\nconst convertRankingFilter = (filter) => {\n    const { measure, attributes, operator, value } = filter.rankingFilter;\n    return {\n        rankingFilter: {\n            measures: [convertObjRefInScopeToRefWithoutIdentifier(measure)],\n            attributes: attributes === null || attributes === void 0 ? void 0 : attributes.map(convertObjRefInScopeToRefWithoutIdentifier),\n            operator,\n            value,\n        },\n    };\n};\nconst convertRelativeDateFilter = (filter) => {\n    return {\n        relativeDateFilter: Object.assign({ dataSet: toBearRef(filterObjRef(filter)) }, relativeDateFilterValues(filter)),\n    };\n};\nconst convertAbsoluteDateFilter = (filter) => {\n    return {\n        absoluteDateFilter: Object.assign({ dataSet: toBearRef(filterObjRef(filter)) }, absoluteDateFilterValues(filter)),\n    };\n};\nconst convertNegativeAttributeFilter = (filter) => {\n    const elements = filterAttributeElements(filter);\n    assertNoNulls(elements);\n    return {\n        negativeAttributeFilter: {\n            displayForm: toBearRef(filterObjRef(filter)),\n            notIn: (isAttributeElementsByRef(elements) ? elements.uris : elements.values), // checked above so the cast is ok\n        },\n    };\n};\nconst convertPositiveAttributeFilter = (filter) => {\n    const elements = filterAttributeElements(filter);\n    assertNoNulls(elements);\n    return {\n        positiveAttributeFilter: {\n            displayForm: toBearRef(filterObjRef(filter)),\n            in: (isAttributeElementsByRef(elements) ? elements.uris : elements.values), // checked above so the cast is ok\n        },\n    };\n};\nexport const convertExtendedFilter = (filter) => {\n    if (isMeasureValueFilter(filter)) {\n        return convertMeasureValueFilter(filter);\n    }\n    else if (isRankingFilter(filter)) {\n        return convertRankingFilter(filter);\n    }\n    else {\n        return convertFilter(filter);\n    }\n};\nexport const convertFilter = (filter) => {\n    if (isPositiveAttributeFilter(filter)) {\n        return convertPositiveAttributeFilter(filter);\n    }\n    else if (isNegativeAttributeFilter(filter)) {\n        return convertNegativeAttributeFilter(filter);\n    }\n    else if (isAbsoluteDateFilter(filter)) {\n        return convertAbsoluteDateFilter(filter);\n    }\n    else {\n        return convertRelativeDateFilter(filter);\n    }\n};\n//# sourceMappingURL=FilterConverter.js.map","import { isSimpleMeasure, measureAlias, measureFormat, measureLocalId, measureTitle, measureAggregation, measureDoesComputeRatio, measureIdentifier, measureUri, isArithmeticMeasure, measureArithmeticOperands, measureArithmeticOperator, isPoPMeasure, measureMasterIdentifier, measurePopAttribute, isPreviousPeriodMeasure, measurePreviousPeriodDateDataSets, measureFilters, } from \"@gooddata/sdk-model\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { toBearRef } from \"./ObjRefConverter.js\";\nimport { convertFilter } from \"./FilterConverter.js\";\nimport { convertAggregation } from \"./afm/MeasureConverter.js\";\nconst convertPreviousPeriodDataSet = (dataSet) => {\n    return {\n        dataSet: toBearRef(dataSet.dataSet),\n        periodsAgo: dataSet.periodsAgo,\n    };\n};\nconst convertPreviousPeriodMeasureDefinition = (measure) => {\n    return {\n        previousPeriodMeasure: {\n            measureIdentifier: measureMasterIdentifier(measure),\n            dateDataSets: measurePreviousPeriodDateDataSets(measure).map(convertPreviousPeriodDataSet),\n        },\n    };\n};\nconst convertPoPMeasureDefinition = (measure) => {\n    return {\n        popMeasureDefinition: {\n            measureIdentifier: measureMasterIdentifier(measure),\n            popAttribute: toBearRef(measurePopAttribute(measure)),\n        },\n    };\n};\nconst convertArithmeticMeasureDefinition = (measure) => {\n    return {\n        arithmeticMeasure: {\n            measureIdentifiers: measureArithmeticOperands(measure),\n            operator: measureArithmeticOperator(measure),\n        },\n    };\n};\nconst convertSimpleMeasureDefinition = (measure) => {\n    const identifier = measureIdentifier(measure);\n    const uri = measureUri(measure);\n    if (!identifier && !uri) {\n        throw new Error(\"Measure has neither uri nor identifier.\");\n    }\n    const aggregation = convertAggregation(measureAggregation(measure));\n    const computeRatio = measureDoesComputeRatio(measure);\n    const filters = (measureFilters(measure) || []).map(convertFilter);\n    return {\n        measureDefinition: Object.assign(Object.assign(Object.assign({ item: identifier ? { identifier } : { uri: uri } }, (aggregation && { aggregation })), (computeRatio && { computeRatio })), (!isEmpty(filters) && { filters })),\n    };\n};\nconst convertMeasureDefinition = (measure) => {\n    if (isSimpleMeasure(measure)) {\n        return convertSimpleMeasureDefinition(measure);\n    }\n    else if (isArithmeticMeasure(measure)) {\n        return convertArithmeticMeasureDefinition(measure);\n    }\n    else if (isPoPMeasure(measure)) {\n        return convertPoPMeasureDefinition(measure);\n    }\n    else if (isPreviousPeriodMeasure(measure)) {\n        return convertPreviousPeriodMeasureDefinition(measure);\n    }\n    throw new Error(\"Unknown measure type\");\n};\nexport const convertMeasure = (measure) => {\n    const alias = measureAlias(measure);\n    const format = measureFormat(measure);\n    const title = measureTitle(measure);\n    return {\n        measure: Object.assign(Object.assign(Object.assign({ definition: convertMeasureDefinition(measure), localIdentifier: measureLocalId(measure) }, (alias && { alias })), (format && { format })), (title && { title })),\n    };\n};\n//# sourceMappingURL=MeasureConverter.js.map","import { insightBuckets, insightVisualizationUrl, isMeasure, attributeLocalId, attributeAlias, attributeDisplayFormRef, insightTitle, insightFilters, insightProperties, insightId, insightUri, insightIsLocked, insightCreated, insightUpdated, insightTags, insightSummary, } from \"@gooddata/sdk-model\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport omitBy from \"lodash/omitBy.js\";\nimport { convertUrisToReferences } from \"../fromBackend/ReferenceConverter.js\";\nimport { serializeProperties } from \"../fromBackend/PropertiesConverter.js\";\nimport { convertExtendedFilter } from \"./FilterConverter.js\";\nimport { convertMeasure } from \"./MeasureConverter.js\";\nconst convertAttribute = (attribute) => {\n    const alias = attributeAlias(attribute);\n    return {\n        visualizationAttribute: Object.assign({ localIdentifier: attributeLocalId(attribute), displayForm: attributeDisplayFormRef(attribute) }, (alias && { alias })),\n    };\n};\nconst convertBucketItem = (bucketItem) => {\n    return isMeasure(bucketItem) ? convertMeasure(bucketItem) : convertAttribute(bucketItem);\n};\nconst convertBucket = (bucket) => {\n    const { totals } = bucket;\n    return Object.assign({ items: bucket.items.map(convertBucketItem), localIdentifier: bucket.localIdentifier }, (!isEmpty(totals) && { totals }));\n};\n/**\n * @internal\n */\nexport const convertInsightContent = (insight) => {\n    const { properties, references } = convertUrisToReferences({\n        properties: insightProperties(insight),\n        references: {},\n    });\n    const nonEmptyProperties = omitBy(properties, (value, key) => key !== \"controls\" && isEmpty(value));\n    const filters = insightFilters(insight).map(convertExtendedFilter);\n    return Object.assign(Object.assign(Object.assign({ buckets: insightBuckets(insight).map(convertBucket), visualizationClass: { uri: insightVisualizationUrl(insight) } }, (!isEmpty(nonEmptyProperties) && {\n        properties: serializeProperties(nonEmptyProperties),\n    })), (!isEmpty(filters) && { filters })), (!isEmpty(references) && { references }));\n};\n/**\n * @internal\n */\nexport const convertInsightDefinition = (insight) => {\n    return {\n        content: convertInsightContent(insight),\n        meta: {\n            title: insightTitle(insight),\n            category: \"visualizationObject\",\n            summary: insightSummary(insight),\n        },\n    };\n};\n/**\n * @internal\n */\nexport const convertInsight = (insight) => {\n    const convertedDefinition = convertInsightDefinition(insight);\n    const locked = insightIsLocked(insight);\n    return {\n        content: convertedDefinition.content,\n        meta: Object.assign(Object.assign(Object.assign(Object.assign({}, convertedDefinition.meta), { identifier: insightId(insight), uri: insightUri(insight), created: insightCreated(insight), updated: insightUpdated(insight) }), (locked && { locked })), { tags: insightTags(insight).join(\" \") }),\n    };\n};\n//# sourceMappingURL=InsightConverter.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isCatalogAttribute, isCatalogFact, isCatalogMeasure, isCatalogDateDataset, isCatalogAttributeHierarchy, } from \"@gooddata/sdk-model\";\nexport class BearWorkspaceCatalogWithAvailableItems {\n    constructor(catalogGroups, items, availableItems, options) {\n        this.catalogGroups = catalogGroups;\n        this.items = items;\n        this.availableItems = availableItems;\n        this.options = options;\n    }\n    groups() {\n        invariant(this.options.loadGroups, \"Catalog groups are not loaded.\");\n        return this.catalogGroups;\n    }\n    allItems() {\n        return this.items;\n    }\n    attributes() {\n        return this.items.filter(isCatalogAttribute);\n    }\n    measures() {\n        return this.items.filter(isCatalogMeasure);\n    }\n    facts() {\n        return this.items.filter(isCatalogFact);\n    }\n    dateDatasets() {\n        return this.items.filter(isCatalogDateDataset);\n    }\n    attributeHierarchies() {\n        return this.items.filter(isCatalogAttributeHierarchy);\n    }\n    allAvailableItems() {\n        return this.availableItems;\n    }\n    availableAttributes() {\n        return this.availableItems.filter(isCatalogAttribute);\n    }\n    availableMeasures() {\n        return this.availableItems.filter(isCatalogMeasure);\n    }\n    availableFacts() {\n        return this.availableItems.filter(isCatalogFact);\n    }\n    availableDateDatasets() {\n        return this.availableItems.filter(isCatalogDateDataset);\n    }\n    availableAttributeHierarchies() {\n        return this.availableItems.filter(isCatalogAttributeHierarchy);\n    }\n}\n//# sourceMappingURL=catalogWithAvailableItems.js.map","import { isCatalogAttribute, isCatalogFact, isCatalogMeasure, insightItems, isAttribute, isArithmeticMeasure, isSimpleMeasure, attributeDisplayFormRef, isIdentifierRef, modifyAttribute, uriRef, modifySimpleMeasure, measureItem, attributeLocalId, measureLocalId, measureMasterIdentifier, isPoPMeasure, isPreviousPeriodMeasure, isMeasure, measurePopAttribute, modifyPopMeasure, isCatalogAttributeHierarchy, } from \"@gooddata/sdk-model\";\nimport { convertItemType, convertDateDataset, isCompatibleCatalogItemType, } from \"../../../convertors/fromBackend/CatalogConverter.js\";\nimport { convertInsightDefinition } from \"../../../convertors/toBackend/InsightConverter.js\";\nimport { BearWorkspaceCatalogWithAvailableItems } from \"./catalogWithAvailableItems.js\";\nimport { objRefToIdentifier, objRefsToIdentifiers } from \"../../../utils/api.js\";\nimport { InvariantError } from \"ts-invariant\";\nconst catalogItemUri = (catalogItem) => {\n    if (isCatalogAttribute(catalogItem)) {\n        return catalogItem.attribute.uri;\n    }\n    else if (isCatalogMeasure(catalogItem)) {\n        return catalogItem.measure.uri;\n    }\n    else if (isCatalogFact(catalogItem)) {\n        return catalogItem.fact.uri;\n    }\n    else if (isCatalogAttributeHierarchy(catalogItem)) {\n        return catalogItem.attributeHierarchy.uri;\n    }\n    return catalogItem.dataSet.uri;\n};\nexport class BearWorkspaceCatalogAvailableItemsFactory {\n    constructor(authCall, workspace, groups, items, options = {\n        types: [\"attribute\", \"measure\", \"fact\", \"dateDataset\", \"attributeHierarchy\"],\n        excludeTags: [],\n        includeTags: [],\n        loadGroups: true,\n    }, mappings) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.groups = groups;\n        this.items = items;\n        this.options = options;\n        this.mappings = mappings;\n        this.loadAvailableCatalogItems = async (sanitizedVisualizationObject) => {\n            const { types } = this.options;\n            const compatibleBearItemTypes = types.filter(isCompatibleCatalogItemType);\n            if (compatibleBearItemTypes.length === 0) {\n                return [];\n            }\n            const bearTypes = compatibleBearItemTypes.map(convertItemType);\n            const itemDescriptions = await this.authCall((sdk) => sdk.catalogue.loadItemDescriptionObjects(this.workspace, sanitizedVisualizationObject.content, this.mappings.attributeByDisplayFormUri));\n            const availableItemUris = await this.authCall((sdk) => sdk.catalogue.loadAvailableItemUris(this.workspace, {\n                catalogQueryRequest: {\n                    bucketItems: itemDescriptions,\n                    types: bearTypes,\n                },\n            }));\n            const allAvailableItemUris = types.includes(\"attributeHierarchy\")\n                ? [...availableItemUris, ...this.items.filter(isCatalogAttributeHierarchy)]\n                : [...availableItemUris];\n            return this.items.filter((item) => allAvailableItemUris.includes(catalogItemUri(item)));\n        };\n        this.loadAvailableDateDatasets = async (sanitizedVisualizationObject) => {\n            const { types, includeTags, excludeTags, dataset, production, includeDateGranularities } = this.options;\n            const includeDateDatasets = types.includes(\"dateDataset\");\n            if (!includeDateDatasets) {\n                return [];\n            }\n            const [includeTagsIds, excludeTagsIds, dataSetIdentifier] = await Promise.all([\n                objRefsToIdentifiers(includeTags, this.authCall),\n                objRefsToIdentifiers(excludeTags, this.authCall),\n                dataset ? objRefToIdentifier(dataset, this.authCall) : Promise.resolve(\"\"),\n            ]);\n            // only return all the date datasets ignoring production or custom datasets if neither of those were specified by the user\n            const shouldReturnAllDateDataSets = !production && !dataSetIdentifier;\n            const result = await this.authCall((sdk) => sdk.catalogue.loadDateDataSets(this.workspace, {\n                bucketItems: sanitizedVisualizationObject.content,\n                includeAvailableDateAttributes: true,\n                dataSetIdentifier,\n                attributesMap: this.mappings.attributeByDisplayFormUri,\n                includeObjectsWithTags: includeTagsIds.length ? includeTagsIds : undefined,\n                excludeObjectsWithTags: excludeTagsIds.length ? excludeTagsIds : undefined,\n                returnAllDateDataSets: shouldReturnAllDateDataSets,\n                includeDateGranularities,\n            }));\n            return result.dateDataSets.map((dateDataSet) => convertDateDataset(dateDataSet, this.mappings.attributeById));\n        };\n    }\n    withOptions(options) {\n        const newOptions = Object.assign(Object.assign({}, this.options), options);\n        return new BearWorkspaceCatalogAvailableItemsFactory(this.authCall, this.workspace, this.groups, this.items, newOptions, this.mappings);\n    }\n    forDataset(dataset) {\n        return this.withOptions({ dataset });\n    }\n    forTypes(types) {\n        return this.withOptions({ types });\n    }\n    includeTags(tags) {\n        return this.withOptions({ includeTags: tags });\n    }\n    excludeTags(tags) {\n        return this.withOptions({ excludeTags: tags });\n    }\n    forItems(items) {\n        return this.withOptions({ items });\n    }\n    forInsight(insight) {\n        return this.withOptions({ insight });\n    }\n    withGroups(loadGroups) {\n        return this.withOptions({ loadGroups });\n    }\n    async load() {\n        const tempVisualizationObj = createVisObjectForAvailability(this.options, this.mappings);\n        const [availableCatalogItems, availableDateDatasets] = await Promise.all([\n            this.loadAvailableCatalogItems(tempVisualizationObj),\n            this.loadAvailableDateDatasets(tempVisualizationObj),\n        ]);\n        const allAvailableCatalogItems = [...availableCatalogItems, ...availableDateDatasets];\n        return new BearWorkspaceCatalogWithAvailableItems(this.groups, this.items, allAvailableCatalogItems, this.options);\n    }\n}\n/**\n * Creates temporary visualization object, whose bucket items can then be used to construct the bucket items\n * used by the catalog resource. The construction of bucket items happens using some serious mojo in bear's api\n * client and requires these types of objects.\n *\n * This function will take all the items, strip arithmetic measures and measures derived from them,\n * transform all identifiers to URIs.\n */\nfunction createVisObjectForAvailability(options, mappings) {\n    const { items = [], insight } = options;\n    if (items.length === 0 && !insight) {\n        throw new Error(\"No items or insight was specified.\");\n    }\n    const itemsToUse = insight ? insightItems(insight) : items;\n    const validItems = filterItemsForAvailabilityQuery(itemsToUse);\n    const itemsWithUris = validItems.map((item) => translateIdentifiersToUris(item, mappings));\n    const tempInsight = {\n        insight: {\n            title: \"\",\n            filters: [],\n            properties: {},\n            sorts: [],\n            visualizationUrl: \"\",\n            buckets: [\n                {\n                    items: itemsWithUris,\n                },\n            ],\n        },\n    };\n    return convertInsightDefinition(tempInsight);\n}\n/*\n * Availability query must not contain arithmetic measures and measures derived from them.\n */\nfunction filterItemsForAvailabilityQuery(items) {\n    const arithmeticMeasuresIds = new Set();\n    const otherMeasureIds = new Set();\n    items.forEach((measure) => {\n        if (isArithmeticMeasure(measure)) {\n            arithmeticMeasuresIds.add(measureLocalId(measure));\n        }\n        else if (isMeasure(measure)) {\n            otherMeasureIds.add(measureLocalId(measure));\n        }\n    });\n    return items.filter((item) => {\n        if (isAttribute(item) || isSimpleMeasure(item)) {\n            return true;\n        }\n        else if (isArithmeticMeasure(item)) {\n            return false;\n        }\n        else if (isPoPMeasure(item) || isPreviousPeriodMeasure(item)) {\n            const masterMeasure = measureMasterIdentifier(item);\n            // remove derived measures which are either derived from arithmetic measure or which do\n            // not have their master among the items to query\n            return !arithmeticMeasuresIds.has(masterMeasure) && otherMeasureIds.has(masterMeasure);\n        }\n        throw new InvariantError(\"unexpected type of item encountered while constructing items for availability query\");\n    });\n}\nfunction translateIdentifiersToUris(item, mappings) {\n    var _a, _b;\n    if (isAttribute(item)) {\n        const ref = attributeDisplayFormRef(item);\n        if (isIdentifierRef(ref)) {\n            const displayForm = mappings.displayFormById[ref.identifier];\n            return modifyAttribute(item, (m) => m.displayForm(uriRef(displayForm.meta.uri)).localId(attributeLocalId(item)));\n        }\n        return item;\n    }\n    else if (isSimpleMeasure(item)) {\n        const ref = measureItem(item);\n        if (isIdentifierRef(ref)) {\n            const metric = mappings.measureById[ref.identifier];\n            const fact = mappings.factById[ref.identifier];\n            const uri = (_a = metric === null || metric === void 0 ? void 0 : metric.uri) !== null && _a !== void 0 ? _a : fact.uri;\n            return modifySimpleMeasure(item, (m) => m.measureItem(uriRef(uri)).localId(measureLocalId(item)));\n        }\n        return item;\n    }\n    else if (isPoPMeasure(item)) {\n        const ref = measurePopAttribute(item);\n        if (isIdentifierRef(ref)) {\n            const attribute = mappings.attributeById[ref.identifier];\n            const dateAttribute = mappings.dateAttributeById[ref.identifier];\n            const uri = (_b = attribute === null || attribute === void 0 ? void 0 : attribute.attribute.meta.uri) !== null && _b !== void 0 ? _b : dateAttribute.attribute.uri;\n            return modifyPopMeasure(item, (m) => m.popAttribute(uriRef(uri)).localId(measureLocalId(item)));\n        }\n    }\n    return item;\n}\n//# sourceMappingURL=availableItemsFactory.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isCatalogAttribute, isCatalogFact, isCatalogMeasure, isCatalogDateDataset, isCatalogAttributeHierarchy, } from \"@gooddata/sdk-model\";\nimport { BearWorkspaceCatalogAvailableItemsFactory } from \"./availableItemsFactory.js\";\nexport class BearWorkspaceCatalog {\n    constructor(authCall, workspace, catalogGroups, items, options, mappings) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.catalogGroups = catalogGroups;\n        this.items = items;\n        this.options = options;\n        this.mappings = mappings;\n    }\n    groups() {\n        invariant(this.options.loadGroups, \"Catalog groups are not loaded.\");\n        return this.catalogGroups;\n    }\n    allItems() {\n        return this.items;\n    }\n    attributes() {\n        return this.items.filter(isCatalogAttribute);\n    }\n    measures() {\n        return this.items.filter(isCatalogMeasure);\n    }\n    facts() {\n        return this.items.filter(isCatalogFact);\n    }\n    dateDatasets() {\n        return this.items.filter(isCatalogDateDataset);\n    }\n    attributeHierarchies() {\n        return this.items.filter(isCatalogAttributeHierarchy);\n    }\n    availableItems() {\n        return new BearWorkspaceCatalogAvailableItemsFactory(this.authCall, this.workspace, this.catalogGroups, this.items, this.options, this.mappings);\n    }\n}\n//# sourceMappingURL=catalog.js.map","import partition from \"lodash/partition.js\";\nimport uniq from \"lodash/uniq.js\";\nimport flatMap from \"lodash/flatMap.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { isCatalogFact, isCatalogMeasure, isCatalogAttribute, uriRef, } from \"@gooddata/sdk-model\";\nimport { convertAttribute, convertDateDataset, convertFact, convertGroup, convertItemType, convertMeasure, isCompatibleCatalogItemType, } from \"../../../convertors/fromBackend/CatalogConverter.js\";\nimport { BearWorkspaceCatalog } from \"./catalog.js\";\nimport { objRefsToIdentifiers, objRefToIdentifier } from \"../../../utils/api.js\";\nimport { isCatalogAttribute as isBearCatalogAttribute, isCatalogMetric, isWrappedAttribute, } from \"@gooddata/api-model-bear\";\nimport { v4 } from \"uuid\";\nconst bearCatalogItemToCatalogItem = (displayForms, attributes) => (item) => {\n    if (isBearCatalogAttribute(item)) {\n        return convertAttribute(item, displayForms, attributes);\n    }\n    else if (isCatalogMetric(item)) {\n        return convertMeasure(item);\n    }\n    return convertFact(item);\n};\nconst createLookups = (displayFormsAndAttributes) => {\n    const [attributes, displayForms] = partition(displayFormsAndAttributes, isWrappedAttribute);\n    const unwrappedDisplayForms = displayForms.map((df) => df.attributeDisplayForm);\n    const attributeByUri = keyBy(attributes, (item) => item.attribute.meta.uri);\n    const attributeById = keyBy(attributes, (item) => item.attribute.meta.identifier);\n    const displayFormByUri = keyBy(unwrappedDisplayForms, (item) => item.meta.uri);\n    const displayFormById = keyBy(unwrappedDisplayForms, (item) => item.meta.identifier);\n    const attributeByDisplayFormUri = Object.keys(displayFormByUri).reduce((acc, displayFormUri) => {\n        const displayForm = displayFormByUri[displayFormUri];\n        const attributeUri = displayForm.content.formOf;\n        const attribute = attributeByUri[attributeUri];\n        acc[displayFormUri] = attribute;\n        return acc;\n    }, {});\n    return {\n        attributeById,\n        attributeByDisplayFormUri,\n        displayFormById,\n        displayFormByUri,\n    };\n};\nconst getProductionFlag = ({ production, dataset, }) => {\n    // if production is undefined, leave it as is - it has meaning\n    if (production === undefined) {\n        return production;\n    }\n    // if a dataset is specified, production must be false\n    const sanitizedProduction = !dataset && production;\n    return sanitizedProduction ? 1 : 0;\n};\nconst groupableCatalogItemTypes = [\"attribute\", \"measure\", \"fact\"];\nconst isGroupableCatalogItemType = (type) => groupableCatalogItemTypes.includes(type);\nexport class BearWorkspaceCatalogFactory {\n    constructor(authCall, workspace, options = {\n        types: [\"attribute\", \"measure\", \"fact\", \"dateDataset\", \"attributeHierarchy\"],\n        excludeTags: [],\n        includeTags: [],\n        loadGroups: true,\n    }) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.options = options;\n        this.tagsAndDatasetIdsPromise = null;\n        this.loadAllCatalogItemsAndMappings = async () => {\n            const [bearCatalogItems, bearDateDatasets] = await Promise.all([\n                this.loadBearCatalogItems(),\n                this.loadDateDatasets(),\n            ]);\n            const bearAttributes = await this.loadBearAttributes(bearCatalogItems, flatMap(bearDateDatasets, (dd) => { var _a; return (_a = dd.availableDateAttributes) !== null && _a !== void 0 ? _a : []; }));\n            const bearDisplayFormsAndAttributes = extractDisplayFormsFromBearAttributes(bearAttributes);\n            const { attributeByDisplayFormUri, displayFormById, displayFormByUri, attributeById } = createLookups(bearDisplayFormsAndAttributes);\n            const catalogItems = bearCatalogItems.map(bearCatalogItemToCatalogItem(displayFormByUri, attributeById));\n            const dateDatasets = bearDateDatasets.map((dd) => convertDateDataset(dd, attributeById));\n            const attributeHierarchies = this.options.types.includes(\"attributeHierarchy\")\n                ? extractAttributeHierarchiesFromCatalogItems(catalogItems, dateDatasets)\n                : [];\n            const allCatalogItems = catalogItems.concat(dateDatasets, attributeHierarchies);\n            const measureById = keyBy(catalogItems.filter(isCatalogMeasure).map((el) => el.measure), (el) => el.id);\n            const factById = keyBy(catalogItems.filter(isCatalogFact).map((el) => el.fact), (el) => el.id);\n            const dateAttributeById = keyBy(flatMap(dateDatasets, (dd) => dd.dateAttributes), (attr) => attr.attribute.id);\n            return {\n                allCatalogItems,\n                mappings: {\n                    attributeById,\n                    attributeByDisplayFormUri,\n                    displayFormById,\n                    measureById,\n                    factById,\n                    dateAttributeById,\n                },\n            };\n        };\n        this.loadDateDatasets = async () => {\n            const { types, production, includeDateGranularities } = this.options;\n            const includeDateDatasets = types.includes(\"dateDataset\");\n            if (!includeDateDatasets) {\n                return [];\n            }\n            const { includeTagsIds, excludeTagsIds, dataSetId } = await this.getTagsAndDatasetIds();\n            // only return all the date datasets ignoring production or custom datasets if neither of those were specified by the user\n            const shouldReturnAllDateDataSets = !production && !dataSetId;\n            const result = await this.authCall((sdk) => sdk.catalogue.loadDateDataSets(this.workspace, {\n                returnAllDateDataSets: shouldReturnAllDateDataSets,\n                dataSetIdentifier: dataSetId,\n                excludeObjectsWithTags: excludeTagsIds.length ? excludeTagsIds : undefined,\n                includeObjectsWithTags: includeTagsIds.length ? includeTagsIds : undefined,\n                includeDateGranularities,\n            }));\n            return result.dateDataSets;\n        };\n        this.loadBearCatalogItems = async () => {\n            const { types, dataset } = this.options;\n            const compatibleBearItemTypes = types.filter(isCompatibleCatalogItemType);\n            if (compatibleBearItemTypes.length === 0) {\n                return [];\n            }\n            const { includeTagsIds, excludeTagsIds, dataSetId } = await this.getTagsAndDatasetIds();\n            const bearItemTypes = compatibleBearItemTypes.map(convertItemType);\n            return this.authCall((sdk) => sdk.catalogue.loadAllItems(this.workspace, {\n                types: bearItemTypes,\n                includeWithTags: includeTagsIds.length ? includeTagsIds : undefined,\n                excludeWithTags: excludeTagsIds.length ? excludeTagsIds : undefined,\n                production: getProductionFlag(this.options),\n                csvDataSets: dataset ? [dataSetId] : [],\n            }));\n        };\n        this.loadBearAttributes = async (bearCatalogItems, dateDatasetAttributes) => {\n            const { types } = this.options;\n            const shouldLoadAttributes = types.some((type) => type === \"attribute\" || type === \"dateDataset\");\n            if (!shouldLoadAttributes) {\n                return [];\n            }\n            const bearCatalogAttributes = bearCatalogItems.filter(isCatalogAttribute);\n            const attributeUris = bearCatalogAttributes.map((attr) => attr.links.self);\n            const dateAttributeUris = dateDatasetAttributes.map((attr) => attr.attributeMeta.uri);\n            return this.authCall((sdk) => sdk.md.getObjects(this.workspace, uniq([...attributeUris, ...dateAttributeUris])));\n        };\n        this.loadCatalogGroups = async () => {\n            const { types, loadGroups } = this.options;\n            const shouldLoadGroups = loadGroups && types.some(isGroupableCatalogItemType);\n            if (!shouldLoadGroups) {\n                return [];\n            }\n            const { dataset } = this.options;\n            const { includeTagsIds, excludeTagsIds, dataSetId } = await this.getTagsAndDatasetIds();\n            const bearCatalogGroups = await this.authCall((sdk) => sdk.catalogue.loadGroups(this.workspace, {\n                includeWithTags: includeTagsIds.length ? includeTagsIds : undefined,\n                excludeWithTags: excludeTagsIds.length ? excludeTagsIds : undefined,\n                production: getProductionFlag(this.options),\n                csvDataSets: dataset ? [dataSetId] : [],\n            }));\n            return bearCatalogGroups.map(convertGroup);\n        };\n        this.getTagsAndDatasetIds = async () => {\n            if (!this.tagsAndDatasetIdsPromise) {\n                const { dataset, includeTags, excludeTags } = this.options;\n                this.tagsAndDatasetIdsPromise = Promise.all([\n                    objRefsToIdentifiers(includeTags, this.authCall),\n                    objRefsToIdentifiers(excludeTags, this.authCall),\n                    dataset ? objRefToIdentifier(dataset, this.authCall) : Promise.resolve(\"\"),\n                ]).then(([includeTagsIds, excludeTagsIds, dataSetId]) => ({\n                    dataSetId,\n                    excludeTagsIds,\n                    includeTagsIds,\n                }));\n            }\n            return this.tagsAndDatasetIdsPromise;\n        };\n    }\n    withOptions(options) {\n        const newOptions = Object.assign(Object.assign({}, this.options), options);\n        return new BearWorkspaceCatalogFactory(this.authCall, this.workspace, newOptions);\n    }\n    forDataset(dataset) {\n        return this.withOptions({\n            dataset,\n        });\n    }\n    forTypes(types) {\n        return this.withOptions({\n            types,\n        });\n    }\n    includeTags(tags) {\n        return this.withOptions({\n            includeTags: tags,\n        });\n    }\n    excludeTags(tags) {\n        return this.withOptions({\n            excludeTags: tags,\n        });\n    }\n    withGroups(loadGroups) {\n        return this.withOptions({\n            loadGroups,\n        });\n    }\n    async load() {\n        const [{ allCatalogItems, mappings }, catalogGroups] = await Promise.all([\n            this.loadAllCatalogItemsAndMappings(),\n            this.loadCatalogGroups(),\n        ]);\n        return new BearWorkspaceCatalog(this.authCall, this.workspace, catalogGroups, allCatalogItems, this.options, mappings);\n    }\n}\nfunction extractDisplayFormsFromBearAttributes(attributes) {\n    return flatMap(attributes, (attribute) => [\n        attribute,\n        ...attribute.attribute.content.displayForms.map((df) => ({ attributeDisplayForm: df })),\n    ]);\n}\nfunction extractAttributeHierarchiesFromCatalogItems(items, dateDatasets) {\n    const attributesWithDrillDownStep = items\n        .filter(isCatalogAttribute)\n        .filter((attr) => attr.attribute.drillDownStep);\n    const dateAttributesWithDrillDownStep = dateDatasets.flatMap((dateDataset) => dateDataset.dateAttributes.filter((attr) => attr.attribute.drillDownStep));\n    return [...attributesWithDrillDownStep, ...dateAttributesWithDrillDownStep].map((attr) => {\n        const { attribute } = attr;\n        const uri = v4(); // create a new uri for identification as this object is not a real Bear MD object\n        return {\n            type: \"attributeHierarchy\",\n            attributeHierarchy: {\n                type: \"attributeHierarchy\",\n                id: uri,\n                uri,\n                ref: uriRef(uri),\n                title: `Attribute hierarchy for ${attribute.title}`,\n                description: \"\",\n                production: true,\n                deprecated: false,\n                unlisted: false,\n                attributes: [attribute.ref, attribute.drillDownStep],\n            },\n        };\n    });\n}\n//# sourceMappingURL=factory.js.map","// (C) 2007-2021 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isCatalogAttribute(obj) {\n    return !isEmpty(obj) && obj.type === \"attribute\";\n}\n/**\n * @public\n */\nexport function isCatalogMetric(obj) {\n    return !isEmpty(obj) && obj.type === \"metric\";\n}\n/**\n * @public\n */\nexport function isCatalogFact(obj) {\n    return !isEmpty(obj) && obj.type === \"fact\";\n}\n//# sourceMappingURL=GdcCatalog.js.map","export const DEFAULT_LOCALE = \"en-US\";\nexport const ANONYMOUS_USER_ID = \"Anonymous\";\nexport const ANONYMOUS_USER_SETTINGS = {\n    locale: DEFAULT_LOCALE,\n    userId: ANONYMOUS_USER_ID,\n    separators: {\n        thousand: \",\",\n        decimal: \".\",\n    },\n};\n//# sourceMappingURL=constants.js.map","// (C) 2023 GoodData Corporation\n/**\n * Hardcoded UI settings that are configurable on Tiger or hardcoded on both backends.\n */\nexport const DefaultUiSettings = {\n    metadataTimeZone: \"Europe/Prague\", // Bear metadata are always stored in Prague time zone\n};\n//# sourceMappingURL=uiSettings.js.map","// (C) 2019-2022 GoodData Corporation\nimport { NotSupported, } from \"@gooddata/sdk-backend-spi\";\nimport { userLoginMd5FromAuthenticatedPrincipalWithAnonymous } from \"../../../utils/api.js\";\nimport { ANONYMOUS_USER_SETTINGS } from \"../../constants.js\";\nimport { DefaultUiSettings } from \"../../../uiSettings.js\";\n// settings which are ignored from user level as they can be set up only for project and above levels\n// no explicit type as every string is valid key from IUserWorkspaceSettings\nconst IGNORED_USER_SETTINGS = [\n    \"enableAnalyticalDashboardPermissions\",\n    \"enableNewAnalyticalDashboardsNavigation\",\n];\nconst filterIgnoredUserSettings = (userFeatureFlags) => {\n    const keptUserSettings = Object.assign({}, userFeatureFlags);\n    for (const settingName of IGNORED_USER_SETTINGS) {\n        delete keptUserSettings[settingName];\n    }\n    return keptUserSettings;\n};\nexport const mergeWorkspaceAndUserSettings = (workspaceFeatureFlags, userFeatureFlags) => {\n    return Object.assign(Object.assign({}, workspaceFeatureFlags), filterIgnoredUserSettings(userFeatureFlags));\n};\nexport class BearWorkspaceSettings {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    getSettings() {\n        return this.authCall(async (sdk) => {\n            const flags = await sdk.project.getProjectFeatureFlags(this.workspace);\n            return Object.assign(Object.assign(Object.assign({}, DefaultUiSettings), { workspace: this.workspace }), flags);\n        });\n    }\n    getSettingsForCurrentUser() {\n        return this.authCall(async (sdk, { getPrincipal }) => {\n            const userLoginMd5 = await userLoginMd5FromAuthenticatedPrincipalWithAnonymous(getPrincipal);\n            // for anonymous users, return defaults with just the workspace settings\n            if (!userLoginMd5) {\n                const workspaceSettings = await this.getSettings();\n                return Object.assign(Object.assign(Object.assign({}, DefaultUiSettings), ANONYMOUS_USER_SETTINGS), workspaceSettings);\n            }\n            const [workspaceFeatureFlags, userFeatureFlags, currentProfile, separators] = await Promise.all([\n                sdk.project.getProjectFeatureFlags(this.workspace),\n                // the getUserFeatureFlags returns all the feature flags (including the defaults)\n                // so we have to filter only the user specific values so as not to use defaults everywhere\n                sdk.user.getUserFeatureFlags(userLoginMd5, [\"user\"]),\n                sdk.user.getCurrentProfile(),\n                sdk.user.getUserRegionalNumberFormatting(userLoginMd5),\n            ]);\n            const { language } = currentProfile;\n            return Object.assign(Object.assign(Object.assign({}, DefaultUiSettings), { userId: userLoginMd5, workspace: this.workspace, locale: language, separators: separators }), mergeWorkspaceAndUserSettings(workspaceFeatureFlags, userFeatureFlags));\n        });\n    }\n    setLocale(_locale) {\n        throw new NotSupported(\"Backend does not support workspace locale setup\");\n    }\n}\n//# sourceMappingURL=settings.js.map","export const convertUserProject = ({ userProject }) => {\n    const workspace = {\n        description: userProject.projectDescription,\n        title: userProject.projectTitle,\n        id: userProject.links.self.match(/\\/gdc\\/projects\\/(.+)/i)[1],\n    };\n    if (userProject.demoProject) {\n        workspace.isDemo = true;\n    }\n    return workspace;\n};\nexport const convertPermissions = ({ permissions }) => {\n    const workspacePermissions = Object.keys(permissions).reduce((acc, permission) => {\n        const hasPermission = permissions[permission];\n        // the cast is necessary here, otherwise the indexing does not work\n        acc[permission] = hasPermission === \"1\";\n        return acc;\n    }, {});\n    return workspacePermissions;\n};\n//# sourceMappingURL=WorkspaceConverter.js.map","import { convertPermissions } from \"../../../convertors/toBackend/WorkspaceConverter.js\";\nimport { userLoginMd5FromAuthenticatedPrincipal } from \"../../../utils/api.js\";\nconst emptyPermissions = { permissions: {} };\nexport class BearWorkspacePermissionsFactory {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    async getPermissionsForCurrentUser() {\n        const permissions = await this.authCall(async (sdk, { getPrincipal }) => {\n            const userLoginMd5 = await userLoginMd5FromAuthenticatedPrincipal(getPrincipal);\n            return sdk.project.getPermissions(this.workspace, userLoginMd5);\n        });\n        return convertPermissions(permissions.associatedPermissions || emptyPermissions);\n    }\n}\n//# sourceMappingURL=permissions.js.map","export const convertVisualizationClass = (visClass) => {\n    const { content, meta } = visClass.visualizationClass;\n    return {\n        visualizationClass: Object.assign(Object.assign({}, content), { identifier: meta.identifier, title: meta.title, uri: meta.uri }),\n    };\n};\n//# sourceMappingURL=VisualizationClassConverter.js.map","// (C) 2019-2022 GoodData Corporation\nimport { insightUri } from \"@gooddata/sdk-model\";\nimport { unwrapMetadataObject, } from \"@gooddata/api-model-bear\";\nimport { getObjectIdFromUri } from \"../../../utils/api.js\";\nimport union from \"lodash/union.js\";\nimport { convertMetadataObject } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport flow from \"lodash/flow.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport values from \"lodash/values.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport flatMap from \"lodash/fp/flatMap.js\";\nimport uniqBy from \"lodash/fp/uniqBy.js\";\nimport { convertMetric, convertWrappedFact, convertWrappedAttribute, } from \"../../../convertors/fromBackend/CatalogConverter.js\";\nconst objectTypeToObjectCategory = (type) => {\n    switch (type) {\n        case \"displayForm\":\n            return \"attributeDisplayForm\";\n        case \"measure\":\n            return \"metric\";\n        case \"variable\":\n            return \"prompt\";\n        default:\n            return type;\n    }\n};\nconst objectTypesWithLinkToDataset = [\"fact\", \"attribute\"];\nconst objectCategoriesWithLinkToDataset = objectTypesWithLinkToDataset.map(objectTypeToObjectCategory);\n/**\n * Given requested types, return types of objects that should be queried using 'using2' resource\n *\n * 1. When user wants data set info, then facts and attributes always must be queried\n * 2. When user wants attribute or display form, then both must be queried because they are needed\n *    for the CatalogItem\n */\nfunction typesForXref(types) {\n    let enrichedTypes = types.includes(\"dataSet\")\n        ? union(types, objectTypesWithLinkToDataset)\n        : types;\n    if (types.includes(\"attribute\") || types.includes(\"displayForm\")) {\n        enrichedTypes = union(enrichedTypes, [\"attribute\", \"displayForm\"]);\n    }\n    return enrichedTypes;\n}\n/**\n * Given requested types, return types of objects that should be loaded.\n *\n * When user wants attribute or display form, then both must be queried because they are needed for CatalogItem\n */\nfunction typesForLoad(types) {\n    if (types.includes(\"attribute\") || types.includes(\"displayForm\")) {\n        return union(types, [\"attribute\", \"displayForm\"]);\n    }\n    return types;\n}\nexport class InsightReferencesQuery {\n    constructor(authCall, workspace, insight, requestedTypes) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.insight = insight;\n        this.requestedTypes = requestedTypes;\n        this.run = async () => {\n            if (isEmpty(this.typesForXref)) {\n                return {};\n            }\n            const xrefs = await this.findReferencedObjects();\n            /*\n             * If dataSet information is needed, do one more call to find out to which data sets do the\n             * different facts and attributes belong. Query resource cannot return dataSets because the relationship\n             * to dataSets is in the 'opposite direction'.\n             */\n            if (this.requestedTypes.includes(\"dataSet\")) {\n                const datasets = await this.findDatasets(xrefs);\n                xrefs.push(...datasets);\n            }\n            /*\n             * Xrefs do not contain all the necessary information. Load the referenced objects.\n             */\n            const objects = await this.loadObjects(xrefs);\n            return this.createResult(objects);\n        };\n        //\n        //\n        //\n        /**\n         * Uses the query resource to obtain all objects of the desired types which are used by the insight.\n         */\n        this.findReferencedObjects = async () => {\n            const categories = this.typesForXref.map(objectTypeToObjectCategory);\n            const { entries: allDirectObjects } = await this.authCall((sdk) => sdk.xhr.getParsed(`/gdc/md/${this.workspace}/using2/${this.objectId}?types=${categories.join(\",\")}`));\n            return allDirectObjects;\n        };\n        /**\n         * Given objects used by the insight, retrieve dataSets to which they belong. The usedBy2 is bulk mode\n         * is used for this.\n         */\n        this.findDatasets = async (objects) => {\n            // only some object types will have a reference to a dataSet, so no need to load other object types\n            const uris = objects\n                .filter((i) => objectCategoriesWithLinkToDataset.includes(i.category))\n                .map((i) => i.link);\n            const usedByPayload = {\n                inUseMany: {\n                    uris,\n                    types: [\"dataSet\"],\n                    nearest: false,\n                },\n            };\n            const datasetResponses = await this.authCall((sdk) => {\n                return sdk.xhr.postParsed(`/gdc/md/${this.workspace}/usedby2`, {\n                    body: usedByPayload,\n                });\n            });\n            return flow(flatMap((response) => response.entries), uniqBy((dataSet) => dataSet.identifier))(values(datasetResponses.useMany));\n        };\n        /**\n         * Give the discovered references, bulk load data for objects of those types that the caller is interested in.\n         */\n        this.loadObjects = async (xrefs) => {\n            const categories = this.typesForLoad.map(objectTypeToObjectCategory);\n            const objectUrisToObtain = xrefs\n                .filter((i) => categories.includes(i.category))\n                .map((meta) => meta.link);\n            return this.authCall((sdk) => sdk.md.getObjects(this.workspace, objectUrisToObtain));\n        };\n        const uri = insightUri(this.insight);\n        this.objectId = getObjectIdFromUri(uri);\n        this.typesForXref = typesForXref(this.requestedTypes);\n        this.typesForLoad = typesForLoad(this.requestedTypes);\n    }\n    //\n    //\n    //\n    createResult(objects) {\n        const unwrappedObjects = objects.map(unwrapMetadataObject);\n        const convertedObjects = unwrappedObjects.map(convertMetadataObject);\n        const wantDatasets = this.requestedTypes.includes(\"dataSet\");\n        if (this.requestedTypes.length === 1 && wantDatasets) {\n            return {\n                dataSetMeta: convertedObjects,\n            };\n        }\n        const objectsByUri = keyBy(unwrappedObjects, (obj) => obj.meta.uri);\n        const catalogItems = [];\n        const dataSetMeta = [];\n        convertedObjects.forEach((obj) => {\n            const fullObject = objectsByUri[obj.uri];\n            switch (obj.type) {\n                case \"displayForm\":\n                case \"variable\":\n                    /*\n                     * TODO: implement conversions in order to support these additional types;\n                     *  attributeDf -> catalog item? or tis this reliably covered by \"attribute\" objects\n                     *  variable -> ?? not catalog item, probably something else..\n                     */\n                    break;\n                case \"attribute\":\n                    catalogItems.push(convertWrappedAttribute({ attribute: fullObject }));\n                    break;\n                case \"fact\":\n                    catalogItems.push(convertWrappedFact({ fact: fullObject }));\n                    break;\n                case \"measure\":\n                    catalogItems.push(convertMetric({ metric: fullObject }));\n                    break;\n                case \"dataSet\":\n                    dataSetMeta.push(obj);\n                    break;\n            }\n        });\n        const datasetProp = wantDatasets ? { dataSetMeta } : {};\n        return Object.assign(Object.assign({}, datasetProp), { catalogItems });\n    }\n}\n//# sourceMappingURL=insightReferences.js.map","// (C) 2020 GoodData Corporation\nimport { filterObjRef, isRelativeDateFilter, relativeDateFilterValues, isIdentifierRef, isUriRef, isAbsoluteDateFilter, absoluteDateFilterValues, newAbsoluteDateFilter, uriRef, newRelativeDateFilter, isPositiveAttributeFilter, filterAttributeElements, newPositiveAttributeFilter, newNegativeAttributeFilter, isNegativeAttributeFilter, isMeasureValueFilter, isRankingFilter, mergeFilters, } from \"@gooddata/sdk-model\";\nimport partition from \"lodash/fp/partition.js\";\nimport zip from \"lodash/fp/zip.js\";\n/**\n * Appends a set of filters to an existing set making sure that all the filters compared regardless of their ObjRef types.\n * Uses {@link mergeFilters} internally, see its docs for details on the merging logic.\n *\n * @param originalFilters - original filter set\n * @param addedFilters - filters to append\n * @param objRefNormalizer - function that converts any ObjRef type to uri\n */\nexport async function appendFilters(originalFilters, addedFilters, objRefNormalizer) {\n    const [normalizedOriginalFilters, normalizedAddedFilters] = allUseSameRefType([\n        ...originalFilters,\n        ...addedFilters,\n    ])\n        ? [originalFilters, addedFilters]\n        : await Promise.all([\n            normalizeFilterRefs(originalFilters, objRefNormalizer),\n            normalizeFilterRefs(addedFilters, objRefNormalizer),\n        ]);\n    return mergeFilters(normalizedOriginalFilters, normalizedAddedFilters);\n}\nconst isFilterWithoutRefs = (filter) => isMeasureValueFilter(filter) || isRankingFilter(filter);\n/**\n * Detects if all the filters with refs use the same ObjRef type.\n *\n * @param filters - the filters to check\n */\nfunction allUseSameRefType(filters) {\n    const filtersWithRefs = filters.filter((f) => !isFilterWithoutRefs(f));\n    return (filtersWithRefs.every((f) => isIdentifierRef(filterObjRef(f))) ||\n        filtersWithRefs.every((f) => isUriRef(filterObjRef(f))));\n}\n/**\n * Makes sure that all the filters use the same ObjRef type so that they can be compared trivially.\n *\n * @param filters - filters to normalize\n * @param objRefNormalizer - function that converts any ObjRef type to uri\n */\nasync function normalizeFilterRefs(filters, objRefNormalizer) {\n    const [filtersWithoutRefs, filtersWithRefs] = partition(isFilterWithoutRefs, filters);\n    const refs = filtersWithRefs.map(filterObjRef);\n    const uris = await objRefNormalizer(refs);\n    const normalized = zip(filtersWithRefs, uris).map(([filter, uri]) => {\n        if (isAbsoluteDateFilter(filter)) {\n            const { from, to } = absoluteDateFilterValues(filter);\n            return newAbsoluteDateFilter(uriRef(uri), from, to);\n        }\n        else if (isRelativeDateFilter(filter)) {\n            const { granularity, from, to } = relativeDateFilterValues(filter);\n            return newRelativeDateFilter(uriRef(uri), granularity, from, to);\n        }\n        else if (isPositiveAttributeFilter(filter)) {\n            const elements = filterAttributeElements(filter);\n            return newPositiveAttributeFilter(uriRef(uri), elements);\n        }\n        else if (isNegativeAttributeFilter(filter)) {\n            const elements = filterAttributeElements(filter);\n            return newNegativeAttributeFilter(uriRef(uri), elements);\n        }\n        else {\n            return filter;\n        }\n    });\n    return [...filtersWithoutRefs, ...normalized];\n}\n//# sourceMappingURL=filterMerging.js.map","// (C) 2021 GoodData Corporation\nimport compact from \"lodash/compact.js\";\nimport uniq from \"lodash/uniq.js\";\n/**\n * @internal\n * TODO consider making this a generic method in api-model-bear that can handle any metadata object and wrapped metadata object\n */\nexport function getVisualizationUserUris(visualization) {\n    return uniq(compact([\n        visualization.visualizationObject.meta.author,\n        visualization.visualizationObject.meta.contributor,\n    ]));\n}\n/**\n * @internal\n * TODO consider making this a generic method in api-model-bear that can handle any metadata object and wrapped metadata object\n */\nexport function getAnalyticalDashboardUserUris(dashboard) {\n    return uniq(compact([dashboard.analyticalDashboard.meta.author, dashboard.analyticalDashboard.meta.contributor]));\n}\n/**\n * @internal\n * TODO consider making this a generic method in api-model-bear that can handle any metadata object and wrapped metadata object\n */\nexport function getDashboardPluginUserUris(dashboard) {\n    return uniq(compact([dashboard.dashboardPlugin.meta.author, dashboard.dashboardPlugin.meta.contributor]));\n}\n//# sourceMappingURL=metadata.js.map","// (C) 2019-2022 GoodData Corporation\nimport flatMap from \"lodash/flatMap.js\";\nimport flow from \"lodash/flow.js\";\nimport map from \"lodash/fp/map.js\";\nimport sortBy from \"lodash/fp/sortBy.js\";\nimport { insightId, insightVisualizationUrl, insightFilters, insightSetFilters, } from \"@gooddata/sdk-model\";\nimport { convertVisualizationClass } from \"../../../convertors/fromBackend/VisualizationClassConverter.js\";\nimport { convertVisualization } from \"../../../convertors/fromBackend/VisualizationConverter.js\";\nimport { convertMetadataObjectXrefEntry } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport { convertInsight, convertInsightDefinition } from \"../../../convertors/toBackend/InsightConverter.js\";\nimport { objRefToUri, objRefsToUris, getObjectIdFromUri, updateUserMap } from \"../../../utils/api.js\";\nimport { InsightReferencesQuery } from \"./insightReferences.js\";\nimport { appendFilters } from \"./filterMerging.js\";\nimport { ServerPaging } from \"@gooddata/sdk-backend-base\";\nimport { getVisualizationUserUris } from \"../../../utils/metadata.js\";\nexport class BearWorkspaceInsights {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.getVisualizationClass = async (ref) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            const visClassResult = await this.authCall((sdk) => sdk.md.getObjects(this.workspace, [uri]));\n            return convertVisualizationClass(visClassResult[0]);\n        };\n        this.getVisualizationClasses = async (options = {}) => {\n            const visualizationClassesResult = await this.authCall((sdk) => {\n                const queryOptions = {\n                    category: \"visualizationClass\",\n                };\n                if (options.includeDeprecated) {\n                    queryOptions.deprecated = true;\n                }\n                return sdk.md.getObjectsByQuery(this.workspace, queryOptions);\n            });\n            const visClassOrderingIndex = (visClass) => { var _a; return (_a = visClass.visualizationClass.content.orderIndex) !== null && _a !== void 0 ? _a : 0; };\n            return flow(sortBy(visClassOrderingIndex), map(convertVisualizationClass))(visualizationClassesResult);\n        };\n        this.getInsight = async (ref, options = {}) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            const visualization = await this.authCall((sdk) => sdk.md.getVisualization(uri));\n            const userMap = options.loadUserData\n                ? await updateUserMap(new Map(), getVisualizationUserUris(visualization), this.authCall)\n                : undefined;\n            const visClassResult = await this.authCall((sdk) => sdk.md.getObjects(this.workspace, [\n                visualization.visualizationObject.content.visualizationClass.uri,\n            ]));\n            const visClass = visClassResult[0];\n            const visualizationClassUri = visClass.visualizationClass.content.url;\n            return convertVisualization(visualization, visualizationClassUri, userMap);\n        };\n        this.getVisualizationClassesByVisualizationClassUri = async (options = {}) => {\n            const visualizationClasses = await this.getVisualizationClasses(options);\n            return visualizationClasses.reduce((acc, el) => {\n                if (el.visualizationClass.uri) {\n                    acc[el.visualizationClass.uri] = el.visualizationClass.url;\n                }\n                return acc;\n            }, {});\n        };\n        this.getInsights = async (options) => {\n            // get also deprecated visClasses in case some insights use them\n            const visualizationClassUrlByVisualizationClassUri = await this.getVisualizationClassesByVisualizationClassUri({ includeDeprecated: true });\n            return this.getInsightsInner(options !== null && options !== void 0 ? options : {}, visualizationClassUrlByVisualizationClassUri, new Map());\n        };\n        this.getInsightsInner = async (options, visualizationClassUrlByVisualizationClassUri, userMap) => {\n            var _a;\n            const mergedOptions = Object.assign(Object.assign({}, options), { getTotalCount: true });\n            const defaultLimit = 50;\n            return ServerPaging.for(async ({ limit, offset }) => {\n                const data = await this.authCall((sdk) => sdk.md.getObjectsByQueryWithPaging(this.workspace, Object.assign(Object.assign({ category: \"visualizationObject\" }, mergedOptions), { \n                    // the limit must be specified at all times, otherwise we get 400 (RAIL-3557)\n                    limit,\n                    offset })));\n                const { items, paging: { totalCount }, } = data;\n                // only load the user data if explicitly asked to do so\n                const updatedUserMap = options.loadUserData\n                    ? await updateUserMap(userMap, flatMap(items, getVisualizationUserUris), this.authCall)\n                    : userMap;\n                const insights = items.map((visualization) => convertVisualization(visualization, visualizationClassUrlByVisualizationClassUri[visualization.visualizationObject.content.visualizationClass.uri], updatedUserMap));\n                return {\n                    items: insights,\n                    totalCount: totalCount,\n                };\n            }, (_a = mergedOptions.limit) !== null && _a !== void 0 ? _a : defaultLimit, mergedOptions.offset);\n        };\n        this.createInsight = async (insight) => {\n            const withConvertedVisClass = await this.getInsightWithConvertedVisClass(insight);\n            const mdObject = await this.authCall((sdk) => sdk.md.saveVisualization(this.workspace, {\n                visualizationObject: convertInsightDefinition(withConvertedVisClass),\n            }));\n            return convertVisualization(mdObject, insightVisualizationUrl(insight));\n        };\n        this.updateInsight = async (insight) => {\n            const id = insightId(insight);\n            const uri = await this.authCall((sdk) => sdk.md.getObjectUri(this.workspace, id));\n            const withConvertedVisClass = await this.getInsightWithConvertedVisClass(insight);\n            await this.authCall((sdk) => sdk.md.updateVisualization(this.workspace, uri, {\n                visualizationObject: convertInsight(withConvertedVisClass),\n            }));\n            // sdk.md.updateVisualization returns just an URI, so we need to return the original insight\n            return insight;\n        };\n        this.deleteInsight = async (ref) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            await this.authCall((sdk) => sdk.md.deleteVisualization(uri));\n        };\n        this.openInsightAsReport = async (insight) => {\n            const visualizationObject = convertInsightDefinition(insight);\n            return this.authCall((sdk) => sdk.md.openVisualizationAsReport(this.workspace, { visualizationObject }));\n        };\n        this.getInsightReferencedObjects = async (insight, types = [\"dataSet\", \"measure\", \"fact\", \"attribute\"]) => {\n            return new InsightReferencesQuery(this.authCall, this.workspace, insight, types).run();\n        };\n        this.getInsightReferencingObjects = async (ref) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            const objectId = getObjectIdFromUri(uri);\n            return this.authCall(async (sdk) => {\n                const usedBy = await sdk.xhr.getParsed(`/gdc/md/${this.workspace}/usedby2/${objectId}?types=analyticalDashboard`);\n                return {\n                    analyticalDashboards: usedBy.entries.map((entry) => convertMetadataObjectXrefEntry(\"analyticalDashboard\", entry)),\n                };\n            });\n        };\n        this.getInsightWithAddedFilters = async (insight, filters) => {\n            if (!filters.length) {\n                return insight;\n            }\n            const mergedFilters = await appendFilters(insightFilters(insight), filters, (refs) => objRefsToUris(refs, this.workspace, this.authCall));\n            return insightSetFilters(insight, mergedFilters);\n        };\n        this.getVisualizationClassByUrl = async (url) => {\n            const allVisClasses = await this.getVisualizationClasses();\n            return allVisClasses.find((visClass) => visClass.visualizationClass.url === url);\n        };\n    }\n    async getInsightWithConvertedVisClass(insight) {\n        const visClassUrl = insightVisualizationUrl(insight);\n        const visClass = await this.getVisualizationClassByUrl(visClassUrl);\n        if (!visClass) {\n            throw new Error(`Visualization class with url ${visClassUrl} not found.`);\n        }\n        return {\n            insight: Object.assign(Object.assign({}, insight.insight), { visualizationUrl: visClass.visualizationClass.uri }),\n        };\n    }\n}\n//# sourceMappingURL=index.js.map","export const convertDataSet = (dataset) => {\n    return Object.assign({}, dataset);\n};\n//# sourceMappingURL=DataSetConverter.js.map","import { convertMetadataObjectXrefEntry } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport { convertDataSet } from \"../../../convertors/fromBackend/DataSetConverter.js\";\nexport class BearWorkspaceDataSets {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    async getDatasets() {\n        const result = await this.authCall((sdk) => sdk.catalogue.loadDataSets(this.workspace));\n        return result.map(convertDataSet);\n    }\n    async getAllDatasetsMeta() {\n        const datasetsResult = await this.authCall((sdk) => sdk.project.getDatasets(this.workspace));\n        return datasetsResult.map((dataset) => convertMetadataObjectXrefEntry(\"dataSet\", dataset));\n    }\n}\n//# sourceMappingURL=index.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2023 GoodData Corporation\nimport { layoutWidgets, UnexpectedError, NotSupported } from \"@gooddata/sdk-backend-spi\";\nimport { isUriRef, isAttributeElementsByValue, isIdentifierRef, isLocalIdRef, isDashboardDateFilter, isDashboardDateFilterReference, isFilterContext, isTempFilterContext, isDrillFromAttribute, isDrillFromMeasure, isDrillToAttributeUrl, isDrillToCustomUrl, isDrillToDashboard, isDrillToInsight, isDrillToLegacyDashboard, isWidget, isWidgetDefinition, isDashboardAttachment, isWidgetAttachment, isDashboardLayout, isKpiWithComparison, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { convertUrisToReferences } from \"../fromBackend/ReferenceConverter.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport omitBy from \"lodash/omitBy.js\";\nimport { serializeProperties } from \"../fromBackend/PropertiesConverter.js\";\nimport { assertNoNulls } from \"./utils.js\";\nconst refToUri = (ref) => {\n    invariant(isUriRef(ref));\n    return ref.uri;\n};\nconst refToIdentifier = (ref) => {\n    invariant(isIdentifierRef(ref));\n    return ref.identifier;\n};\nconst refToLocalId = (ref) => {\n    invariant(isLocalIdRef(ref));\n    return ref.localIdentifier;\n};\n/**\n * @internal\n */\nexport const convertLayoutSize = (size) => {\n    const converted = {\n        width: size.gridWidth,\n    };\n    if (size.gridHeight) {\n        converted.height = size.gridHeight;\n    }\n    if (size.heightAsRatio) {\n        converted.heightAsRatio = size.heightAsRatio;\n    }\n    return converted;\n};\n/**\n * @internal\n */\nexport const convertLayoutItemSize = (column) => {\n    const allScreens = [\"xl\", \"md\", \"lg\", \"sm\", \"xs\"];\n    return allScreens.reduce((acc, el) => {\n        const size = column[el];\n        if (size) {\n            acc[el] = convertLayoutSize(size);\n        }\n        return acc;\n    }, {});\n};\nconst convertLayoutItem = (column) => {\n    const { size, widget } = column;\n    if (isWidget(widget)) {\n        return {\n            size: convertLayoutItemSize(size),\n            content: {\n                widget: { qualifier: { uri: refToUri(widget.ref) } },\n            },\n        };\n    }\n    else if (isDashboardLayout(widget)) {\n        return {\n            size: convertLayoutItemSize(size),\n            content: convertLayout(widget),\n        };\n    }\n    else if (isWidgetDefinition(widget)) {\n        // This should never happen -> widgets in the layout should be already saved\n        throw new UnexpectedError(\"Cannot convert layout widget definition to bear model!\");\n    }\n    return {\n        size: convertLayoutItemSize(size),\n    };\n};\nconst convertLayoutSection = (section) => {\n    var _a, _b;\n    const convertedRow = {\n        columns: section.items.map((column) => convertLayoutItem(column)),\n    };\n    if (section.header) {\n        // Ignore empty strings in header\n        const headerWithoutEmptyStrings = omitBy(section.header, (x) => !x);\n        const isEmptyHeader = isEmpty(headerWithoutEmptyStrings);\n        if (!isEmptyHeader) {\n            const header = {};\n            if ((_a = section.header) === null || _a === void 0 ? void 0 : _a.title) {\n                header.title = section.header.title;\n            }\n            if ((_b = section.header) === null || _b === void 0 ? void 0 : _b.description) {\n                header.description = section.header.description;\n            }\n            convertedRow.header = header;\n        }\n    }\n    return convertedRow;\n};\nconst convertLayout = (layout) => {\n    const { sections } = layout;\n    const convertedLayout = {\n        fluidLayout: {\n            rows: sections.map(convertLayoutSection),\n        },\n    };\n    if (layout.size) {\n        convertedLayout.fluidLayout.size = convertLayoutSize(layout.size);\n    }\n    return convertedLayout;\n};\nexport const convertFilterContextItem = (filterContextItem) => {\n    if (isDashboardDateFilter(filterContextItem)) {\n        const { dateFilter: { granularity, type, attribute, dataSet, from, to }, } = filterContextItem;\n        const convertedDateFilter = {\n            dateFilter: {\n                granularity,\n                type,\n                from: from === null || from === void 0 ? void 0 : from.toString(),\n                to: to === null || to === void 0 ? void 0 : to.toString(),\n            },\n        };\n        if (attribute) {\n            convertedDateFilter.dateFilter.attribute = refToUri(attribute);\n        }\n        if (dataSet) {\n            convertedDateFilter.dateFilter.dataSet = refToUri(dataSet);\n        }\n        return convertedDateFilter;\n    }\n    const { attributeFilter: { attributeElements, displayForm, negativeSelection, localIdentifier, title, filterElementsBy = [], selectionMode, }, } = filterContextItem;\n    const displayFormUri = refToUri(displayForm);\n    const convertedAttributeFilterParents = filterElementsBy.map((filterElementsByItem) => {\n        return {\n            filterLocalIdentifier: filterElementsByItem.filterLocalIdentifier,\n            over: {\n                attributes: filterElementsByItem.over.attributes.map(refToUri),\n            },\n        };\n    });\n    if (isAttributeElementsByValue(attributeElements)) {\n        throw new NotSupported(\"Bear backend does not support value attribute filters in analytical dashboards\");\n    }\n    assertNoNulls(attributeElements);\n    return {\n        attributeFilter: Object.assign({ negativeSelection, attributeElements: attributeElements.uris, displayForm: displayFormUri, localIdentifier, filterElementsBy: convertedAttributeFilterParents, title }, (selectionMode !== undefined ? { selectionMode } : {})),\n    };\n};\nexport function convertFilterContext(filterContext) {\n    if (isTempFilterContext(filterContext)) {\n        const { created, filters } = filterContext;\n        return {\n            tempFilterContext: Object.assign({ created, filters: filters.map(convertFilterContextItem) }, (filterContext\n                ? {\n                    uri: refToUri(filterContext.ref),\n                }\n                : {})),\n        };\n    }\n    const { description, filters, title } = filterContext;\n    return {\n        filterContext: {\n            content: {\n                filters: filters.map(convertFilterContextItem),\n            },\n            meta: Object.assign({ summary: description, title }, (isFilterContext(filterContext)\n                ? {\n                    uri: refToUri(filterContext),\n                    identifier: filterContext.identifier,\n                }\n                : {})),\n        },\n    };\n}\nconst convertFilterReference = (filterReference) => {\n    if (isDashboardDateFilterReference(filterReference)) {\n        return {\n            dateFilterReference: {\n                dataSet: refToUri(filterReference.dataSet),\n            },\n        };\n    }\n    return {\n        attributeFilterReference: {\n            displayForm: refToUri(filterReference.displayForm),\n        },\n    };\n};\nexport function convertDrill(drill) {\n    if (isDrillToLegacyDashboard(drill)) {\n        const { tab } = drill;\n        return {\n            projectDashboard: refToUri(drill.target),\n            projectDashboardTab: tab,\n        };\n    }\n    const { origin } = drill;\n    let drillFrom;\n    if (isDrillFromMeasure(origin)) {\n        const { measure } = origin;\n        drillFrom = {\n            drillFromMeasure: {\n                localIdentifier: refToLocalId(measure),\n            },\n        };\n    }\n    else if (isDrillFromAttribute(origin)) {\n        const { attribute } = origin;\n        drillFrom = {\n            drillFromAttribute: {\n                localIdentifier: refToLocalId(attribute),\n            },\n        };\n    }\n    else {\n        throw new UnexpectedError(\"Unable to convert unknown drill origin!\");\n    }\n    if (isDrillToDashboard(drill)) {\n        return {\n            drillToDashboard: {\n                from: drillFrom,\n                target: \"in-place\",\n                toDashboard: drill.target !== undefined ? refToIdentifier(drill.target) : undefined,\n            },\n        };\n    }\n    else if (isDrillToInsight(drill)) {\n        return {\n            drillToVisualization: {\n                from: drillFrom,\n                target: \"pop-up\",\n                toVisualization: {\n                    uri: refToUri(drill.target),\n                },\n            },\n        };\n    }\n    else if (isDrillToCustomUrl(drill)) {\n        return {\n            drillToCustomUrl: {\n                from: drillFrom,\n                target: \"new-window\",\n                customUrl: drill.target.url,\n            },\n        };\n    }\n    else if (isDrillToAttributeUrl(drill)) {\n        return {\n            drillToAttributeUrl: {\n                from: drillFrom,\n                target: \"new-window\",\n                drillToAttributeDisplayForm: { uri: refToUri(drill.target.hyperlinkDisplayForm) },\n                insightAttributeDisplayForm: { uri: refToUri(drill.target.displayForm) },\n            },\n        };\n    }\n    throw new UnexpectedError(\"Unable to convert unknown drill!\");\n}\n/**\n * @internal\n */\nexport const convertWidget = (widget) => {\n    const { ignoreDashboardFilters, dateDataSet, title, description, drills } = widget;\n    const meta = Object.assign(Object.assign({}, (isWidget(widget)\n        ? {\n            identifier: widget.identifier,\n            uri: refToUri(widget.ref),\n        }\n        : {})), { title, summary: description });\n    const convertedDateDataSet = dateDataSet && refToUri(dateDataSet);\n    const convertedIgnoredDashboardFilters = ignoreDashboardFilters.map(convertFilterReference);\n    if (widget.type === \"kpi\") {\n        invariant(widget.kpi, \"Widget type is kpi, but kpi props are not defined!\");\n        const { kpi, configuration } = widget;\n        return {\n            kpi: {\n                content: Object.assign(Object.assign(Object.assign({}, (isKpiWithComparison(kpi)\n                    ? {\n                        comparisonDirection: kpi.comparisonDirection,\n                        comparisonType: kpi.comparisonType,\n                    }\n                    : {\n                        comparisonType: kpi.comparisonType,\n                    })), { metric: refToUri(kpi.metric), ignoreDashboardFilters: convertedIgnoredDashboardFilters, dateDataSet: convertedDateDataSet, drillTo: drills.length > 0 ? convertDrill(drills[0]) : undefined }), (configuration ? { configuration } : {})),\n                meta,\n            },\n        };\n    }\n    const { insight, properties: widgetProperties = {}, configuration } = widget;\n    const { properties, references } = convertUrisToReferences({\n        properties: widgetProperties,\n        references: {},\n    });\n    const nonEmptyProperties = omitBy(properties, (value, key) => key !== \"controls\" && isEmpty(value));\n    return {\n        visualizationWidget: {\n            content: Object.assign(Object.assign(Object.assign({ visualization: refToUri(insight), ignoreDashboardFilters: convertedIgnoredDashboardFilters, dateDataSet: convertedDateDataSet, drills: drills\n                    ? drills.map(convertDrill)\n                    : [] }, (!isEmpty(nonEmptyProperties) && {\n                properties: serializeProperties(nonEmptyProperties),\n            })), (!isEmpty(references) && { references })), (configuration ? { configuration } : {})),\n            meta,\n        },\n    };\n};\nconst convertAbsoluteDateFilterPreset = (preset) => {\n    const { type: _ } = preset, rest = __rest(preset, [\"type\"]);\n    return rest;\n};\nconst convertRelativeDateFilterPreset = (preset) => {\n    const { type: _ } = preset, rest = __rest(preset, [\"type\"]);\n    return rest;\n};\nconst convertDateFilterConfig = (config) => {\n    var _a, _b, _c, _d;\n    const absolutePresets = (_b = (_a = config.addPresets) === null || _a === void 0 ? void 0 : _a.absolutePresets) === null || _b === void 0 ? void 0 : _b.map(convertAbsoluteDateFilterPreset);\n    const relativePresets = (_d = (_c = config.addPresets) === null || _c === void 0 ? void 0 : _c.relativePresets) === null || _d === void 0 ? void 0 : _d.map(convertRelativeDateFilterPreset);\n    const addPresets = absolutePresets || relativePresets\n        ? Object.assign(Object.assign({}, (absolutePresets && { absolutePresets })), (relativePresets && { relativePresets })) : undefined;\n    return Object.assign(Object.assign({}, config), (addPresets && { addPresets }));\n};\nexport const convertPluginLink = (pluginLink) => {\n    const { plugin, parameters } = pluginLink;\n    return {\n        type: refToUri(plugin),\n        parameters: parameters,\n    };\n};\nexport const convertDashboard = (dashboard) => {\n    const { filterContext, layout, ref, identifier, title, description, dateFilterConfig, isLocked, tags, plugins, shareStatus, isUnderStrictControl, } = dashboard;\n    const convertedLayout = layout && convertLayout(layout);\n    const widgets = layout && layoutWidgets(layout);\n    const dashboardUri = ref && refToUri(ref);\n    const filterContextUri = (filterContext === null || filterContext === void 0 ? void 0 : filterContext.ref) && refToUri(filterContext.ref);\n    const convertedDateFilterConfig = dateFilterConfig && convertDateFilterConfig(dateFilterConfig);\n    const convertedPlugins = plugins === null || plugins === void 0 ? void 0 : plugins.map(convertPluginLink);\n    const sharedWithSomeoneProp = shareStatus === \"shared\"\n        ? {\n            sharedWithSomeone: 1,\n        }\n        : {};\n    let flagsProp = {};\n    if (isUnderStrictControl !== undefined) {\n        flagsProp = isUnderStrictControl\n            ? {\n                flags: [\"strictAccessControl\"],\n            }\n            : {\n                flags: [],\n            };\n    }\n    return {\n        analyticalDashboard: {\n            content: Object.assign(Object.assign(Object.assign({}, (convertedDateFilterConfig && { dateFilterConfig: convertedDateFilterConfig })), (convertedPlugins && !isEmpty(convertedPlugins) && { plugins: convertedPlugins })), { filterContext: filterContextUri, widgets: widgets ? widgets.filter(isWidget).map((widget) => refToUri(widget.ref)) : [], layout: convertedLayout }),\n            meta: Object.assign(Object.assign(Object.assign(Object.assign({}, (dashboardUri\n                ? {\n                    uri: dashboardUri,\n                    identifier,\n                }\n                : {})), { title, summary: description, locked: isLocked, tags: tags === null || tags === void 0 ? void 0 : tags.join(\" \"), unlisted: shareStatus === \"public\" ? 0 : 1 }), sharedWithSomeoneProp), flagsProp),\n        },\n    };\n};\nexport const convertWidgetAlert = (alert) => {\n    const { dashboard, widget, description, isTriggered, threshold, title, whenTriggered, ref, identifier, filterContext, } = alert;\n    const alertUri = ref && refToUri(ref);\n    return {\n        kpiAlert: {\n            content: {\n                filterContext: (filterContext === null || filterContext === void 0 ? void 0 : filterContext.ref) && refToUri(filterContext.ref),\n                dashboard: refToUri(dashboard),\n                kpi: refToUri(widget),\n                isTriggered,\n                threshold,\n                whenTriggered,\n            },\n            meta: Object.assign(Object.assign({}, (alertUri\n                ? {\n                    uri: alertUri,\n                    identifier,\n                }\n                : {})), { title, summary: description }),\n        },\n    };\n};\nexport const convertScheduledMailAttachment = (scheduledMailAttachment) => {\n    if (isDashboardAttachment(scheduledMailAttachment)) {\n        const { dashboard, format, filterContext } = scheduledMailAttachment;\n        return {\n            kpiDashboardAttachment: {\n                uri: refToUri(dashboard),\n                format,\n                filterContext: filterContext && refToUri(filterContext),\n            },\n        };\n    }\n    else if (isWidgetAttachment(scheduledMailAttachment)) {\n        const { widgetDashboard, widget, filterContext, formats, exportOptions } = scheduledMailAttachment;\n        return {\n            visualizationWidgetAttachment: {\n                uri: refToUri(widget),\n                dashboardUri: refToUri(widgetDashboard),\n                formats,\n                filterContext: filterContext && refToUri(filterContext),\n                exportOptions: exportOptions && {\n                    includeFilterContext: exportOptions.includeFilters ? \"yes\" : \"no\",\n                    mergeHeaders: exportOptions.mergeHeaders ? \"yes\" : \"no\",\n                },\n            },\n        };\n    }\n    throw new UnexpectedError(\"Cannot convert scheduled email attachment - only dashboard and widget attachments are supported!\");\n};\n/**\n * @internal\n */\nexport const convertScheduledMail = (scheduledMail) => {\n    const { title, description, uri, identifier, body, subject, to, when, bcc, lastSuccessful, unsubscribed, attachments, unlisted, } = scheduledMail;\n    return {\n        scheduledMail: {\n            content: {\n                attachments: attachments.map(convertScheduledMailAttachment),\n                body,\n                subject,\n                to,\n                when: {\n                    startDate: when.startDate,\n                    endDate: when.endDate,\n                    timeZone: when.timeZone,\n                    recurrency: when.recurrence,\n                },\n                bcc,\n                lastSuccessfull: lastSuccessful,\n                unsubscribed,\n            },\n            meta: Object.assign(Object.assign({ unlisted: unlisted ? 1 : 0 }, (uri\n                ? {\n                    uri,\n                    identifier,\n                }\n                : {})), { title, summary: description }),\n        },\n    };\n};\nexport const convertDashboardPlugin = (plugin) => {\n    const { uri, identifier, name, tags, description, url } = plugin;\n    return {\n        dashboardPlugin: {\n            content: {\n                url,\n            },\n            meta: Object.assign(Object.assign({}, (uri ? { uri, identifier } : {})), { title: name, summary: description, tags: tags === null || tags === void 0 ? void 0 : tags.join(\" \") }),\n        },\n    };\n};\n//# sourceMappingURL=DashboardConverter.js.map","import isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isKpiContentWithoutComparison(obj) {\n    return !isEmpty(obj) && obj.comparisonType === \"none\";\n}\n/**\n * @public\n */\nexport function isKpi(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"kpi\";\n}\n/**\n * @public\n */\nexport function isWrappedKpi(obj) {\n    return !isEmpty(obj) && !!obj.kpi;\n}\n//# sourceMappingURL=GdcKpi.js.map","// (C) 2019-2023 GoodData Corporation\nimport { isFilterContextAttributeFilter, } from \"@gooddata/api-model-bear\";\nimport { uriRef, isDashboardDateFilter, } from \"@gooddata/sdk-model\";\nfunction isNotTemporaryAllTimeDateFilter(filter) {\n    if (isDashboardDateFilter(filter)) {\n        return filter.dateFilter.from !== undefined || filter.dateFilter.to !== undefined;\n    }\n    return true;\n}\n// Remove the temporary \"All Time\" date filter from filter context when exporting the dashboard\nexport const sanitizeExportFilterContext = (exportFilterContext) => {\n    return Object.assign(Object.assign({}, exportFilterContext), { filters: exportFilterContext.filters.filter(isNotTemporaryAllTimeDateFilter) });\n};\n/**\n * @internal\n */\nexport const convertFilterContextItem = (filterContextItem) => {\n    if (isFilterContextAttributeFilter(filterContextItem)) {\n        const { attributeFilter: { attributeElements, displayForm, negativeSelection, localIdentifier, title, filterElementsBy = [], selectionMode, }, } = filterContextItem;\n        const convertedFilterElementsBy = filterElementsBy.map((filterBy) => {\n            return {\n                filterLocalIdentifier: filterBy.filterLocalIdentifier,\n                over: {\n                    attributes: filterBy.over.attributes.map(uriRef),\n                },\n            };\n        });\n        return {\n            attributeFilter: Object.assign({ attributeElements: { uris: attributeElements }, displayForm: uriRef(displayForm), negativeSelection,\n                localIdentifier, filterElementsBy: convertedFilterElementsBy, title }, (selectionMode !== undefined ? { selectionMode } : {})),\n        };\n    }\n    const { dateFilter: { granularity, type, attribute, dataSet, from, to }, } = filterContextItem;\n    const convertedFilterContextItem = {\n        dateFilter: {\n            granularity,\n            type,\n            from: type === \"relative\" ? Number(from) : from,\n            to: type === \"relative\" ? Number(to) : to,\n        },\n    };\n    if (attribute) {\n        convertedFilterContextItem.dateFilter.attribute = uriRef(attribute);\n    }\n    if (dataSet) {\n        convertedFilterContextItem.dateFilter.dataSet = uriRef(dataSet);\n    }\n    return convertedFilterContextItem;\n};\n/**\n * @internal\n */\nexport const convertFilterContext = (filterContext) => {\n    const { filterContext: { content: { filters }, meta: { identifier, uri, summary, title }, }, } = filterContext;\n    return Object.assign(Object.assign({ description: summary }, (uri\n        ? {\n            identifier,\n            uri,\n            ref: uriRef(uri),\n        }\n        : {})), { title, filters: filters.map(convertFilterContextItem) });\n};\nexport const convertTempFilterContext = (filterContext) => {\n    const { tempFilterContext: { created, filters, uri }, } = filterContext;\n    return {\n        uri,\n        ref: uriRef(uri),\n        filters: filters.map(convertFilterContextItem),\n        created,\n    };\n};\n//# sourceMappingURL=filterContext.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isFluidLayout, isLayoutWidget, isObjectUriQualifier, isVisualization, } from \"@gooddata/api-model-bear\";\nimport { uriRef, idRef, areObjRefsEqual, } from \"@gooddata/sdk-model\";\n// Default layout column size for the kpi widget, when generating implicit layout\nconst KPI_SIZE = 2;\n// Default layout column size for the visualization widget, when generating implicit layout\nconst VISUALIZATION_SIZE = 12;\n/**\n * @internal\n */\nexport const convertLayoutSize = (size) => {\n    const converted = {\n        gridWidth: size.width,\n    };\n    if (size.height) {\n        converted.gridHeight = size.height;\n    }\n    if (size.heightAsRatio) {\n        converted.heightAsRatio = size.heightAsRatio;\n    }\n    return converted;\n};\n/**\n * @internal\n */\nexport const convertLayoutItemSize = (column) => {\n    const allScreens = [\"xl\", \"md\", \"lg\", \"sm\", \"xs\"];\n    return allScreens.reduce((acc, el) => {\n        const size = column[el];\n        if (size) {\n            acc[el] = convertLayoutSize(size);\n        }\n        return acc;\n    }, {});\n};\nconst convertLayoutItem = (column, widgetDependencies) => {\n    const { content } = column;\n    if (isLayoutWidget(content)) {\n        const widget = widgetDependencies.find((dep) => {\n            const { qualifier } = content.widget;\n            if (isObjectUriQualifier(qualifier)) {\n                return areObjRefsEqual(uriRef(qualifier.uri), dep.ref);\n            }\n            return areObjRefsEqual(idRef(qualifier.identifier), dep.ref);\n        });\n        return {\n            type: \"IDashboardLayoutItem\",\n            size: convertLayoutItemSize(column.size),\n            widget,\n        };\n    }\n    else if (isFluidLayout(content)) {\n        return {\n            type: \"IDashboardLayoutItem\",\n            widget: convertLayout(content, widgetDependencies),\n            size: convertLayoutItemSize(column.size),\n        };\n    }\n    return {\n        type: \"IDashboardLayoutItem\",\n        size: convertLayoutItemSize(column.size),\n    };\n};\nconst convertLayoutSection = (row, widgetDependencies) => {\n    const section = {\n        type: \"IDashboardLayoutSection\",\n        items: row.columns.map((column) => convertLayoutItem(column, widgetDependencies)),\n    };\n    if (row.header) {\n        section.header = row.header;\n    }\n    return section;\n};\n/**\n * @internal\n */\nexport const convertLayout = (layout, widgetDependencies) => {\n    const { fluidLayout: { rows }, fluidLayout, } = layout;\n    const convertedLayout = {\n        type: \"IDashboardLayout\",\n        sections: rows.map((row) => convertLayoutSection(row, widgetDependencies)),\n    };\n    if (fluidLayout.size) {\n        convertedLayout.size = convertLayoutSize(fluidLayout.size);\n    }\n    return convertedLayout;\n};\n/**\n * Create {@link ILegacyDashboardLayout} from {@link IWidget} items. As widgets do not contain any layout information,\n * implicit layout with a single row will be generated.\n *\n * @returns fluid layout created from the widgets\n */\nexport function createImplicitDashboardLayout(widgets, dependencies, visualizationClasses) {\n    if (widgets.length < 1) {\n        return undefined;\n    }\n    const sections = createLayoutSections(widgets, dependencies, visualizationClasses);\n    return {\n        type: \"IDashboardLayout\",\n        sections,\n    };\n}\nfunction createLayoutSections(widgets, dependencies, visualizationClasses) {\n    return [\n        {\n            type: \"IDashboardLayoutSection\",\n            items: createLayoutItems(widgets, dependencies, visualizationClasses),\n        },\n    ];\n}\nfunction createLayoutItems(widgets, dependencies, visualizationClasses) {\n    return widgets.map((widget) => createLayoutItem(widget, dependencies, visualizationClasses));\n}\nfunction createLayoutItem(widget, dependencies, visualizationClasses) {\n    return {\n        type: \"IDashboardLayoutItem\",\n        widget,\n        size: {\n            xl: {\n                gridWidth: implicitWidgetWidth(widget, dependencies, visualizationClasses),\n            },\n        },\n    };\n}\nfunction implicitWidgetWidth(widget, dependencies, visualizationClasses) {\n    if (widget.type === \"kpi\") {\n        return KPI_SIZE;\n    }\n    const visualizationUri = widget.insight.uri;\n    const vis = dependencies.find((v) => isVisualization(v) && v.visualizationObject.meta.uri === visualizationUri);\n    const visualizationClassUri = vis.visualizationObject.content.visualizationClass.uri;\n    const visualizationClass = visualizationClasses.find((visClass) => visClass.visualizationClass.meta.uri === visualizationClassUri);\n    return implicitInsightWidth(visualizationClass);\n}\nfunction implicitInsightWidth(visualizationClass) {\n    const visualizationType = visualizationClass.visualizationClass.content.url.split(\":\")[1];\n    return visualizationType === \"headline\" ? KPI_SIZE : VISUALIZATION_SIZE;\n}\n//# sourceMappingURL=layout.js.map","// (C) 2007-2021 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isFluidLayout(obj) {\n    return !isEmpty(obj) && !!obj.fluidLayout;\n}\n/**\n * @public\n */\nexport function isLayoutWidget(obj) {\n    return !isEmpty(obj) && !!obj.widget;\n}\n//# sourceMappingURL=GdcDashboardLayout.js.map","// (C) 2019-2022 GoodData Corporation\n//import { GdcMetadata } from \"../meta/index.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport const isDateFilterReference = (obj) => !isEmpty(obj) && !!obj.dateFilterReference;\n/**\n * @public\n */\nexport const isAttributeFilterReference = (obj) => !isEmpty(obj) && !!obj.attributeFilterReference;\n//# sourceMappingURL=GdcExtendedDateFilters.js.map","// (C) 2019-2023 GoodData Corporation\nimport { isDrillFromAttribute, isDrillFromMeasure, isDrillToAttributeUrl, isDrillToCustomUrl, isDrillToDashboard, isDrillToVisualization, } from \"@gooddata/api-model-bear\";\nimport { uriRef, idRef, } from \"@gooddata/sdk-model\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\n/**\n * @internal\n */\nexport const convertKpiDrill = (kpi) => {\n    const { drillTo: { projectDashboard, projectDashboardTab } = {}, metric } = kpi.kpi.content;\n    return {\n        type: \"drillToLegacyDashboard\",\n        origin: {\n            type: \"drillFromMeasure\",\n            measure: uriRef(metric),\n        },\n        target: uriRef(projectDashboard),\n        tab: projectDashboardTab,\n        transition: \"in-place\",\n    };\n};\n/**\n * @internal\n */\nexport const convertDrillOrigin = (from) => {\n    if (isDrillFromMeasure(from)) {\n        return {\n            type: \"drillFromMeasure\",\n            measure: from.drillFromMeasure,\n        };\n    }\n    else if (isDrillFromAttribute(from)) {\n        return {\n            type: \"drillFromAttribute\",\n            attribute: from.drillFromAttribute,\n        };\n    }\n    else {\n        throw new UnexpectedError(\"Unable to convert unknown drill origin!\");\n    }\n};\n/**\n * @internal\n */\nexport const convertVisualizationWidgetDrill = (drill) => {\n    if (isDrillToDashboard(drill)) {\n        const { drillToDashboard: { toDashboard, target, from }, } = drill;\n        return {\n            type: \"drillToDashboard\",\n            origin: convertDrillOrigin(from),\n            target: toDashboard !== undefined ? idRef(toDashboard) : undefined,\n            transition: target,\n        };\n    }\n    else if (isDrillToVisualization(drill)) {\n        const { drillToVisualization: { toVisualization, target, from }, } = drill;\n        return {\n            type: \"drillToInsight\",\n            origin: convertDrillOrigin(from),\n            target: uriRef(toVisualization.uri),\n            transition: target,\n        };\n    }\n    else if (isDrillToCustomUrl(drill)) {\n        const { drillToCustomUrl: { target, customUrl, from }, } = drill;\n        return {\n            type: \"drillToCustomUrl\",\n            origin: convertDrillOrigin(from),\n            target: {\n                url: customUrl,\n            },\n            transition: target,\n        };\n    }\n    else if (isDrillToAttributeUrl(drill)) {\n        const { drillToAttributeUrl: { drillToAttributeDisplayForm, insightAttributeDisplayForm, target, from }, } = drill;\n        return {\n            type: \"drillToAttributeUrl\",\n            origin: convertDrillOrigin(from),\n            target: {\n                displayForm: uriRef(insightAttributeDisplayForm.uri),\n                hyperlinkDisplayForm: uriRef(drillToAttributeDisplayForm.uri),\n            },\n            transition: target,\n        };\n    }\n    throw new UnexpectedError(\"Unable to convert unknown drill!\");\n};\n//# sourceMappingURL=drills.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/fp/isEmpty.js\";\nimport has from \"lodash/has.js\";\n/**\n * @public\n */\nexport function isDrillToVisualization(obj) {\n    return !isEmpty(obj) && !!obj.drillToVisualization;\n}\n/**\n * @public\n */\nexport function isDrillToDashboard(obj) {\n    return !isEmpty(obj) && !!obj.drillToDashboard;\n}\n/**\n * @public\n */\nexport function isDrillToCustomUrl(obj) {\n    return !isEmpty(obj) && !!obj.drillToCustomUrl;\n}\n/**\n * @public\n */\nexport function isDrillToAttributeUrl(obj) {\n    return !isEmpty(obj) && !!obj.drillToAttributeUrl;\n}\n/**\n * @public\n */\nexport function isDrillFromMeasure(obj) {\n    return !isEmpty(obj) && !!obj.drillFromMeasure;\n}\n/**\n * @public\n */\nexport function isDrillFromAttribute(obj) {\n    return !isEmpty(obj) && !!obj.drillFromAttribute;\n}\n/**\n * @public\n */\nexport function isVisualizationWidget(obj) {\n    return !isEmpty(obj) && obj.meta.category === \"visualizationWidget\";\n}\n/**\n * @public\n */\nexport function isWrappedVisualizationWidget(obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    return !isEmpty(obj) && has(obj, \"visualizationWidget\");\n}\n//# sourceMappingURL=GdcVisualizationWidget.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isDateFilterReference, isKpiContentWithoutComparison, isWrappedKpi, } from \"@gooddata/api-model-bear\";\nimport { uriRef } from \"@gooddata/sdk-model\";\nimport { convertVisualizationWidgetDrill, convertKpiDrill } from \"./drills.js\";\nimport { convertReferencesToUris } from \"../ReferenceConverter.js\";\nimport { deserializeProperties } from \"../PropertiesConverter.js\";\n/**\n * @internal\n */\nexport const convertFilterReference = (filterReference) => {\n    if (isDateFilterReference(filterReference)) {\n        return {\n            type: \"dateFilterReference\",\n            dataSet: uriRef(filterReference.dateFilterReference.dataSet),\n        };\n    }\n    return {\n        type: \"attributeFilterReference\",\n        displayForm: uriRef(filterReference.attributeFilterReference.displayForm),\n    };\n};\nexport const convertVisualizationWidget = (visualizationWidget) => {\n    const { visualizationWidget: { content: { visualization, ignoreDashboardFilters, dateDataSet, drills, references, properties, configuration, }, meta: { identifier, uri, title, summary }, }, } = visualizationWidget;\n    const { properties: convertedProperties } = convertReferencesToUris({\n        properties: deserializeProperties(properties),\n        references: references || {},\n    });\n    return Object.assign({ type: \"insight\", ref: uriRef(uri), identifier: identifier, uri: uri, title, description: summary, insight: uriRef(visualization), dateDataSet: dateDataSet ? uriRef(dateDataSet) : undefined, ignoreDashboardFilters: ignoreDashboardFilters\n            ? ignoreDashboardFilters.map(convertFilterReference)\n            : [], drills: drills ? drills.map(convertVisualizationWidgetDrill) : [], properties: convertedProperties }, (configuration ? { configuration } : {}));\n};\nexport const convertKpi = (kpi) => {\n    const { kpi: { content, content: { dateDataSet, ignoreDashboardFilters, drillTo, configuration }, meta: { identifier, uri, title, summary }, }, } = kpi;\n    return Object.assign(Object.assign({ type: \"kpi\", ref: uriRef(uri), identifier: identifier, uri: uri, title, description: summary, dateDataSet: dateDataSet ? uriRef(dateDataSet) : undefined, ignoreDashboardFilters: ignoreDashboardFilters\n            ? ignoreDashboardFilters.map(convertFilterReference)\n            : [], drills: drillTo ? [convertKpiDrill(kpi)] : [] }, (configuration ? { configuration } : {})), { kpi: isKpiContentWithoutComparison(content)\n            ? {\n                comparisonType: content.comparisonType,\n                metric: uriRef(content.metric),\n            }\n            : {\n                comparisonType: content.comparisonType,\n                comparisonDirection: content.comparisonDirection,\n                metric: uriRef(content.metric),\n            } });\n};\nexport const convertWidget = (widget) => {\n    if (isWrappedKpi(widget)) {\n        return convertKpi(widget);\n    }\n    return convertVisualizationWidget(widget);\n};\n//# sourceMappingURL=widget.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isWrappedKpi, isWrappedFilterContext, isWrappedTempFilterContext, isWrappedVisualizationWidget, isVisualization, } from \"@gooddata/api-model-bear\";\nimport { uriRef, isWidget, } from \"@gooddata/sdk-model\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { sanitizeExportFilterContext, convertFilterContext, convertTempFilterContext, } from \"./filterContext.js\";\nimport { convertLayout, createImplicitDashboardLayout } from \"./layout.js\";\nimport { convertVisualizationWidget, convertKpi } from \"./widget.js\";\nexport const convertListedDashboard = (dashboardLink, availability, userMap) => {\n    var _a, _b, _c;\n    const isUnderStrictControlProp = ((_a = dashboardLink.flags) === null || _a === void 0 ? void 0 : _a.some((flag) => flag === \"strictAccessControl\"))\n        ? {\n            isUnderStrictControl: true,\n        }\n        : {};\n    return Object.assign({ ref: uriRef(dashboardLink.link), identifier: dashboardLink.identifier, uri: dashboardLink.link, title: dashboardLink.title, description: dashboardLink.summary, updated: dashboardLink.updated, updatedBy: dashboardLink.contributor ? userMap === null || userMap === void 0 ? void 0 : userMap.get(dashboardLink.contributor) : undefined, created: dashboardLink.created, createdBy: dashboardLink.author ? userMap === null || userMap === void 0 ? void 0 : userMap.get(dashboardLink.author) : undefined, \n        // filter takes care of multiple spaces and also the base scenario (\"\" ~> [])\n        tags: (_c = (_b = dashboardLink.tags) === null || _b === void 0 ? void 0 : _b.split(\" \").filter(Boolean)) !== null && _c !== void 0 ? _c : [], isLocked: !!dashboardLink.locked, shareStatus: getShareStatus(!!dashboardLink.unlisted, !!dashboardLink.sharedWithSomeone), availability }, isUnderStrictControlProp);\n};\nconst convertDateFilterConfigAddedPresets = (addPresets) => {\n    const { absolutePresets = [], relativePresets = [] } = addPresets;\n    return {\n        absolutePresets: absolutePresets.map((preset) => (Object.assign(Object.assign({}, preset), { type: \"absolutePreset\" }))),\n        relativePresets: relativePresets.map((preset) => (Object.assign(Object.assign({}, preset), { type: \"relativePreset\" }))),\n    };\n};\n/**\n * @internal\n */\nexport const convertDashboardDateFilterConfig = (dateFilterConfig) => {\n    const { filterName, mode, addPresets, hideGranularities, hideOptions } = dateFilterConfig;\n    return {\n        filterName,\n        mode,\n        addPresets: addPresets && convertDateFilterConfigAddedPresets(addPresets),\n        hideGranularities,\n        hideOptions,\n    };\n};\nconst convertPluginLink = (link) => {\n    const { type, parameters } = link;\n    return {\n        type: \"IDashboardPluginLink\",\n        plugin: uriRef(type),\n        parameters,\n    };\n};\nconst getShareStatus = (unlisted, sharedWithSomeone) => {\n    if (unlisted && !sharedWithSomeone) {\n        return \"private\";\n    }\n    else if (unlisted && sharedWithSomeone) {\n        return \"shared\";\n    }\n    else {\n        return \"public\";\n    }\n};\nexport const convertDashboard = (dashboard, dependencies, visualizationClasses = [], exportFilterContextUri, userMap) => {\n    var _a;\n    const { meta: { summary, created, author, updated, contributor, identifier, uri, title, locked, tags, unlisted, sharedWithSomeone, flags, }, content: { layout, filterContext, dateFilterConfig, widgets: widgetsUris, plugins }, } = dashboard.analyticalDashboard;\n    const sdkDependencies = dependencies\n        // Filter out visualization objects - we only need them to create implicit layout\n        .filter((d) => !isVisualization(d))\n        .map(convertDashboardDependency);\n    const unsortedWidgets = sdkDependencies.filter(isWidget);\n    // To preserve the logic of createImplicitDashboardLayout, we must preserve the order of the widgets\n    const widgetByUri = keyBy(unsortedWidgets, \"uri\");\n    const widgets = widgetsUris.map((widgetUri) => widgetByUri[widgetUri]);\n    const filterContextOrExportFilterContext = sdkDependencies.find((dep) => exportFilterContextUri ? dep.uri === exportFilterContextUri : dep.uri === filterContext);\n    const isUnderStrictControlProp = (flags === null || flags === void 0 ? void 0 : flags.some((flag) => flag === \"strictAccessControl\"))\n        ? {\n            isUnderStrictControl: true,\n        }\n        : {};\n    return Object.assign(Object.assign({ type: \"IDashboard\", title, description: summary, identifier: identifier, uri: uri, ref: uriRef(uri), created: created, createdBy: author ? userMap === null || userMap === void 0 ? void 0 : userMap.get(author) : undefined, updated: updated, updatedBy: contributor ? userMap === null || userMap === void 0 ? void 0 : userMap.get(contributor) : undefined, isLocked: !!locked, shareStatus: getShareStatus(!!unlisted, !!sharedWithSomeone) }, isUnderStrictControlProp), { dateFilterConfig: dateFilterConfig && convertDashboardDateFilterConfig(dateFilterConfig), filterContext: exportFilterContextUri && filterContextOrExportFilterContext\n            ? sanitizeExportFilterContext(filterContextOrExportFilterContext)\n            : filterContextOrExportFilterContext, layout: layout\n            ? convertLayout(layout, widgets)\n            : createImplicitDashboardLayout(widgets, dependencies, visualizationClasses), plugins: plugins === null || plugins === void 0 ? void 0 : plugins.map(convertPluginLink), \n        // filter takes care of multiple spaces and also the base scenario (\"\" ~> [])\n        tags: (_a = tags === null || tags === void 0 ? void 0 : tags.split(\" \").filter((t) => t)) !== null && _a !== void 0 ? _a : [] });\n};\nconst convertDashboardDependency = (dependency) => {\n    if (isWrappedVisualizationWidget(dependency)) {\n        return convertVisualizationWidget(dependency);\n    }\n    else if (isWrappedKpi(dependency)) {\n        return convertKpi(dependency);\n    }\n    else if (isWrappedFilterContext(dependency)) {\n        return convertFilterContext(dependency);\n    }\n    else if (isWrappedTempFilterContext(dependency)) {\n        return convertTempFilterContext(dependency);\n    }\n    throw new Error(`No converter for the dashboard dependency!`);\n};\n//# sourceMappingURL=dashboards.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isKpiDashboardAttachment, isVisualizationWidgetAttachment, } from \"@gooddata/api-model-bear\";\nimport { uriRef, } from \"@gooddata/sdk-model\";\nimport compact from \"lodash/compact.js\";\nexport const convertScheduledMailAttachment = (scheduledMailAttachment) => {\n    if (isKpiDashboardAttachment(scheduledMailAttachment)) {\n        const { kpiDashboardAttachment: { format, uri, filterContext }, } = scheduledMailAttachment;\n        return {\n            dashboard: uriRef(uri),\n            format,\n            filterContext: filterContext ? uriRef(filterContext) : undefined,\n        };\n    }\n    else if (isVisualizationWidgetAttachment(scheduledMailAttachment)) {\n        const { visualizationWidgetAttachment: { uri, dashboardUri, formats, filterContext, exportOptions }, } = scheduledMailAttachment;\n        const convertedExportOptions = exportOptions\n            ? {\n                exportOptions: {\n                    includeFilters: exportOptions.includeFilterContext === \"yes\",\n                    mergeHeaders: exportOptions.mergeHeaders === \"yes\",\n                },\n            }\n            : {};\n        return Object.assign({ widgetDashboard: uriRef(dashboardUri), widget: uriRef(uri), formats, filterContext: filterContext ? uriRef(filterContext) : undefined }, convertedExportOptions);\n    }\n    else {\n        return undefined;\n    }\n};\n/**\n * @internal\n */\nexport const convertScheduledMail = (scheduledMail, userMap) => {\n    const { scheduledMail: { content: { attachments, body, subject, to, when, bcc, lastSuccessfull, unsubscribed }, meta: { uri, identifier, title, summary, unlisted, author, contributor }, }, } = scheduledMail;\n    const convertedAttachments = compact(attachments.map(convertScheduledMailAttachment));\n    return Object.assign(Object.assign({ title, description: summary }, (uri\n        ? {\n            ref: uriRef(uri),\n            identifier,\n            uri,\n        }\n        : {})), { body,\n        subject,\n        to, when: {\n            startDate: when.startDate,\n            endDate: when.endDate,\n            timeZone: when.timeZone,\n            recurrence: when.recurrency,\n        }, bcc, lastSuccessful: lastSuccessfull, unsubscribed, attachments: convertedAttachments, unlisted: !!unlisted, createdBy: author ? userMap === null || userMap === void 0 ? void 0 : userMap.get(author) : undefined, updatedBy: contributor ? userMap === null || userMap === void 0 ? void 0 : userMap.get(contributor) : undefined });\n};\n//# sourceMappingURL=scheduledMails.js.map","// (C) 2020 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isKpiDashboardAttachment(obj) {\n    return !isEmpty(obj) && !!obj.kpiDashboardAttachment;\n}\n/**\n * @public\n */\nexport function isVisualizationWidgetAttachment(obj) {\n    return !isEmpty(obj) && !!obj.visualizationWidgetAttachment;\n}\n//# sourceMappingURL=GdcScheduledMail.js.map","import { uriRef } from \"@gooddata/sdk-model\";\nimport { convertFilterContext } from \"./filterContext.js\";\nexport const convertAlert = (alert, filterContext) => {\n    const { kpiAlert: { content: { dashboard, isTriggered, kpi, threshold, whenTriggered }, meta: { uri, identifier, title, summary }, }, } = alert;\n    return Object.assign(Object.assign({ title, description: summary }, (uri\n        ? {\n            ref: uriRef(uri),\n            identifier,\n            uri,\n        }\n        : {})), { dashboard: uriRef(dashboard), widget: uriRef(kpi), threshold,\n        whenTriggered,\n        isTriggered, filterContext: filterContext && convertFilterContext(filterContext) });\n};\n//# sourceMappingURL=alerts.js.map","// (C) 2021-2022 GoodData Corporation\nimport { uriRef } from \"@gooddata/sdk-model\";\nexport function convertDashboardPlugin(plugin, userMap) {\n    var _a;\n    const { dashboardPlugin: { content: { url }, meta: { title, summary, uri, identifier, updated, created, tags, author, contributor }, }, } = plugin;\n    return {\n        type: \"IDashboardPlugin\",\n        name: title,\n        description: summary !== null && summary !== void 0 ? summary : \"\",\n        uri: uri,\n        identifier: identifier,\n        updated: updated,\n        created: created,\n        createdBy: author ? userMap === null || userMap === void 0 ? void 0 : userMap.get(author) : undefined,\n        updatedBy: contributor ? userMap === null || userMap === void 0 ? void 0 : userMap.get(contributor) : undefined,\n        tags: (_a = tags === null || tags === void 0 ? void 0 : tags.split(\" \").filter((t) => t)) !== null && _a !== void 0 ? _a : [],\n        ref: uriRef(uri),\n        url: url,\n    };\n}\n//# sourceMappingURL=plugin.js.map","// (C) 2019-2022 GoodData Corporation\nimport { widgetUri } from \"@gooddata/sdk-model\";\nimport { getObjectIdFromUri } from \"../../../utils/api.js\";\nimport { convertMetadataObject } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { convertMetric } from \"../../../convertors/fromBackend/CatalogConverter.js\";\nimport { unwrapMetadataObject, } from \"@gooddata/api-model-bear\";\nconst objectTypeToObjectCategory = (type) => {\n    if (type === \"measure\") {\n        return \"metric\";\n    }\n    return type;\n};\nexport class WidgetReferencesQuery {\n    constructor(authCall, workspace, widget, requestedTypes) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.widget = widget;\n        this.requestedTypes = requestedTypes;\n        this.run = async () => {\n            if (isEmpty(this.typesForXref)) {\n                return {};\n            }\n            const xrefs = await this.findReferencedObjects();\n            /*\n             * Xrefs do not contain all the necessary information. Load the referenced objects.\n             */\n            const objects = await this.loadObjects(xrefs);\n            return this.createResult(objects);\n        };\n        //\n        //\n        //\n        /**\n         * Uses the query resource to obtain all objects of the desired types which are used by the insight.\n         */\n        this.findReferencedObjects = async () => {\n            const categories = this.typesForXref.map(objectTypeToObjectCategory);\n            const { entries: allDirectObjects } = await this.authCall((sdk) => sdk.xhr.getParsed(`/gdc/md/${this.workspace}/using2/${this.objectId}?types=${categories.join(\",\")}`));\n            return allDirectObjects;\n        };\n        /**\n         * Give the discovered references, bulk load data for objects of those types that the caller is interested in.\n         */\n        this.loadObjects = async (xrefs) => {\n            const categories = this.typesForLoad.map(objectTypeToObjectCategory);\n            const objectUrisToObtain = xrefs\n                .filter((i) => categories.includes(i.category))\n                .map((meta) => meta.link);\n            return this.authCall((sdk) => sdk.md.getObjects(this.workspace, objectUrisToObtain));\n        };\n        const uri = widgetUri(this.widget);\n        this.objectId = getObjectIdFromUri(uri);\n        this.typesForXref = this.requestedTypes;\n        this.typesForLoad = this.requestedTypes;\n    }\n    //\n    //\n    //\n    createResult(objects) {\n        const unwrappedObjects = objects.map(unwrapMetadataObject);\n        const convertedObjects = unwrappedObjects.map(convertMetadataObject);\n        const objectsByUri = keyBy(unwrappedObjects, (obj) => obj.meta.uri);\n        const catalogItems = [];\n        convertedObjects.forEach((obj) => {\n            const fullObject = objectsByUri[obj.uri];\n            if (obj.type === \"measure\") {\n                catalogItems.push(convertMetric({ metric: fullObject }));\n            }\n        });\n        return {\n            catalogItems,\n        };\n    }\n}\n//# sourceMappingURL=widgetReferences.js.map","// (C) 2020-2022 GoodData Corporation\nimport { filterObjRef, isAllTimeDateFilter, isAttributeFilter, isDateFilter, dashboardFilterReferenceObjRef, } from \"@gooddata/sdk-model\";\nimport last from \"lodash/last.js\";\nimport zip from \"lodash/zip.js\";\n/**\n * Performs widget filter resolution:\n * - removes all attribute filters hit by ignoreDashboardFilters\n * - removes all date filters for date dimension different than dateDataSet\n * - picks the last date filter for the dateDataSet dimension\n *   - if it is all time, removes all date filters\n *   - otherwise returns the last date filter specified\n *\n * @param widget - widget to resolve filters for\n * @param filters - filters to try\n * @param objRefsToUris - function providing conversion of any ObjRef to URI\n * @internal\n */\nexport async function resolveWidgetFilters(filters, ignoreDashboardFilters, dateDataSet, objRefsToUris) {\n    const dateFilters = filters.filter(isDateFilter);\n    const attributeFilters = filters.filter(isAttributeFilter);\n    const isIgnorableFilter = (obj) => isDateFilter(obj) || isAttributeFilter(obj);\n    if (!dateFilters.length && !attributeFilters.length) {\n        return filters;\n    }\n    const [dateFiltersToKeep, attributeFiltersToKeep] = await Promise.all([\n        getRelevantDateFiltersForWidget(dateFilters, dateDataSet, objRefsToUris),\n        getRelevantAttributeFiltersForWidget(attributeFilters, ignoreDashboardFilters, objRefsToUris),\n    ]);\n    const filtersToKeep = [...dateFiltersToKeep, ...attributeFiltersToKeep];\n    // filter the original filter array to maintain order of the items\n    return filters.filter((filter) => !isIgnorableFilter(filter) || filtersToKeep.includes(filter));\n}\nasync function getRelevantDateFiltersForWidget(filters, dateDataSet, objRefsToUris) {\n    if (!dateDataSet || !filters.length || filters.every(isAllTimeDateFilter)) {\n        return [];\n    }\n    const [dateDatasetUri, ...filterUris] = await objRefsToUris([\n        dateDataSet,\n        ...filters.map((filter) => filterObjRef(filter)),\n    ]);\n    const withRelevantDimension = zip(filters, filterUris)\n        .filter(([, uri]) => dateDatasetUri === uri)\n        .map(([filter]) => filter);\n    const candidate = last(withRelevantDimension);\n    return !candidate || isAllTimeDateFilter(candidate) ? [] : [candidate];\n}\nasync function getRelevantAttributeFiltersForWidget(filters, ignoreDashboardFilters, objRefsToUris) {\n    if (!ignoreDashboardFilters.length) {\n        return filters;\n    }\n    if (!filters.length) {\n        return [];\n    }\n    // get all the necessary uris in one call by concatenating both arrays\n    const uris = await objRefsToUris([\n        ...ignoreDashboardFilters.map(dashboardFilterReferenceObjRef),\n        ...filters.map((filter) => filterObjRef(filter)),\n    ]);\n    // re-split the uris array to the two parts corresponding to the original arrays\n    const divide = ignoreDashboardFilters.length;\n    const ignoredUris = uris.slice(0, divide);\n    const filterUris = uris.slice(divide);\n    return zip(filters, filterUris)\n        .filter(([, uri]) => !ignoredUris.includes(uri))\n        .map(([filter]) => filter);\n}\n//# sourceMappingURL=widgetFilters.js.map","// (C) 2021-2022 GoodData Corporation\nimport compact from \"lodash/compact.js\";\nimport flatMap from \"lodash/flatMap.js\";\nimport zip from \"lodash/zip.js\";\nimport { uriRef, isDashboardAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\n/**\n * Since bear backend does not support idRefs in filter context objects, we need to covert them to uriRefs if they are present.\n *\n * @param filterContext - filter context to sanitize\n * @param objRefsToUris - function converting ObjRefs to URIs\n * @returns filter context that uses uriRefs exclusively in its filters\n */\nexport async function sanitizeFilterContext(filterContext, objRefsToUris) {\n    const { filters } = filterContext;\n    if (!filters.length) {\n        return filterContext;\n    }\n    const refs = compact(flatMap(filters, (filter) => {\n        var _a;\n        const ref = getDashboardFilterRef(filter);\n        const overRefs = isDashboardAttributeFilter(filter)\n            ? flatMap((_a = filter.attributeFilter.filterElementsBy) !== null && _a !== void 0 ? _a : [], (item) => item.over.attributes)\n            : [];\n        return [ref, ...overRefs];\n    }));\n    const convertedRefs = await objRefsToUris(refs);\n    const refUriPairs = zip(refs, convertedRefs);\n    const sanitizedFilters = filters.map((filter) => {\n        var _a;\n        const originalRef = getDashboardFilterRef(filter);\n        if (!originalRef) {\n            return filter;\n        }\n        // we can use referential comparison here, the objects are the same\n        const refMatch = refUriPairs.find(([ref]) => ref === originalRef);\n        // this indicates a serious fault in the logic\n        invariant(refMatch);\n        const sanitizedRef = uriRef(refMatch[1]);\n        if (isDashboardAttributeFilter(filter)) {\n            const sanitizedFilterElementsBy = (_a = filter.attributeFilter.filterElementsBy) === null || _a === void 0 ? void 0 : _a.map((item) => (Object.assign(Object.assign({}, item), { over: Object.assign(Object.assign({}, item.over), { attributes: item.over.attributes.map((attrRef) => {\n                        // we can use referential comparison here, the objects are the same\n                        const attrMatch = refUriPairs.find(([ref]) => ref === attrRef);\n                        // this indicates a serious fault in the logic\n                        invariant(attrMatch);\n                        return uriRef(attrMatch[1]);\n                    }) }) })));\n            return {\n                attributeFilter: Object.assign(Object.assign({}, filter.attributeFilter), { displayForm: sanitizedRef, filterElementsBy: sanitizedFilterElementsBy }),\n            };\n        }\n        else {\n            return {\n                dateFilter: Object.assign(Object.assign({}, filter.dateFilter), { dataSet: sanitizedRef }),\n            };\n        }\n    });\n    return Object.assign(Object.assign({}, filterContext), { filters: sanitizedFilters });\n}\nfunction getDashboardFilterRef(filter) {\n    return isDashboardAttributeFilter(filter)\n        ? filter.attributeFilter.displayForm\n        : filter.dateFilter.dataSet;\n}\n//# sourceMappingURL=filterContexts.js.map","// (C) 2019-2023 GoodData Corporation\nimport { layoutWidgetsWithPaths, layoutWidgets, UnexpectedError, } from \"@gooddata/sdk-backend-spi\";\nimport { areObjRefsEqual, objRefToString, uriRef, isFilterContext, isFilterContextDefinition, isTempFilterContext, isWidget, isWidgetDefinition, widgetType, } from \"@gooddata/sdk-model\";\nimport { convertVisualization } from \"../../../convertors/fromBackend/VisualizationConverter.js\";\nimport * as fromSdkModel from \"../../../convertors/toBackend/DashboardConverter.js\";\nimport * as toSdkModel from \"../../../convertors/fromBackend/DashboardConverter/index.js\";\nimport clone from \"lodash/clone.js\";\nimport compact from \"lodash/compact.js\";\nimport flatMap from \"lodash/flatMap.js\";\nimport flatten from \"lodash/flatten.js\";\nimport isEqual from \"lodash/isEqual.js\";\nimport set from \"lodash/set.js\";\nimport { getObjectIdFromUri, objRefsToUris, objRefToUri, updateUserMap, userUriFromAuthenticatedPrincipalWithAnonymous, } from \"../../../utils/api.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { BearWorkspaceInsights } from \"../insights/index.js\";\nimport { WidgetReferencesQuery } from \"./widgetReferences.js\";\nimport { invariant } from \"ts-invariant\";\nimport { resolveWidgetFilters } from \"./widgetFilters.js\";\nimport { sanitizeFilterContext } from \"./filterContexts.js\";\nimport { getAnalyticalDashboardUserUris, getDashboardPluginUserUris } from \"../../../utils/metadata.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport includes from \"lodash/includes.js\";\nimport remove from \"lodash/remove.js\";\nimport { convertUser } from \"../../../convertors/fromBackend/UsersConverter.js\";\nimport { BearWorkspacePermissionsFactory } from \"../permissions/permissions.js\";\nimport { isDashboardPlugin, isVisualization, } from \"@gooddata/api-model-bear\";\n/**\n * Lists types of those metadata object that are essentially components of the dashboard object. Every time\n * when dashboard is loaded all related objects of these types must be loaded as well as their\n * content is integral part of the dashboard itself.\n */\nconst DashboardComponentTypes = [\"kpi\", \"visualizationWidget\", \"filterContext\"];\n// TODO: refactor impl into bunch of smaller classes + delegates\nexport class BearWorkspaceDashboards {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        // Public methods\n        this.getDashboards = async (options = {}) => {\n            const explicitlySharedDashboardsObjectLinks = await this.authCall((sdk) => sdk.md.getAnalyticalDashboards(this.workspace));\n            const accessibleDashboardsObjectLinks = await this.getAccessibleDashboards(explicitlySharedDashboardsObjectLinks, !!options.includeAvailableViaLink);\n            const userMap = options.loadUserData\n                ? await updateUserMap(new Map(), compact(flatMap(accessibleDashboardsObjectLinks, (link) => [link.author, link.contributor])), this.authCall)\n                : new Map();\n            return accessibleDashboardsObjectLinks.map((link) => {\n                const availability = this.isExplicitlyShared(link, explicitlySharedDashboardsObjectLinks)\n                    ? \"full\"\n                    : \"viaLink\";\n                return toSdkModel.convertListedDashboard(link, availability, userMap);\n            });\n        };\n        this.getDashboard = async (dashboardRef, exportFilterContextRef, options = {}) => {\n            const dashboardUri = await objRefToUri(dashboardRef, this.workspace, this.authCall);\n            const exportFilterContextUri = exportFilterContextRef\n                ? await objRefToUri(exportFilterContextRef, this.workspace, this.authCall)\n                : undefined;\n            const bearDashboard = await this.getBearDashboard(dashboardUri);\n            const dependenciesToGet = [...DashboardComponentTypes];\n            const bearVisualizationClasses = [];\n            if (!bearDashboard.analyticalDashboard.content.layout) {\n                // when dashboard has no layout and only list of widgets, the conversion will build an\n                // implicit layout. in order to set sizes correctly in that layout, the code needs to have\n                // visualization objects & info about visualization classes\n                dependenciesToGet.push(\"visualizationObject\");\n                bearVisualizationClasses.push(...(await this.getBearVisualizationClasses()));\n            }\n            const [bearDependencies, bearExportFilterContext] = await Promise.all([\n                this.getBearDashboardDependencies(dashboardUri, dependenciesToGet),\n                this.getBearExportFilterContext(exportFilterContextRef),\n            ]);\n            if (bearExportFilterContext) {\n                bearDashboard.analyticalDashboard.content.filterContext = exportFilterContextUri;\n                bearDependencies.push(bearExportFilterContext);\n            }\n            const userMap = options.loadUserData\n                ? await updateUserMap(new Map(), getAnalyticalDashboardUserUris(bearDashboard), this.authCall)\n                : new Map();\n            return toSdkModel.convertDashboard(bearDashboard, bearDependencies, bearVisualizationClasses, exportFilterContextUri, userMap);\n        };\n        this.createDashboard = async (dashboard) => {\n            const emptyDashboard = {\n                type: \"IDashboard\",\n                description: \"\",\n                filterContext: undefined,\n                title: \"\",\n                shareStatus: \"private\",\n                isUnderStrictControl: false,\n            };\n            return this.updateDashboard(emptyDashboard, dashboard);\n        };\n        this.updateDashboard = async (originalDashboard, updatedDashboard) => {\n            if (!areObjRefsEqual(originalDashboard.ref, updatedDashboard.ref)) {\n                throw new Error(\"Cannot update dashboard with different refs!\");\n            }\n            if (isEqual(originalDashboard, updatedDashboard)) {\n                return originalDashboard;\n            }\n            // for convenience allow clients to pass plugin links also with idRefs\n            const sanitizedPlugins = updatedDashboard.plugins\n                ? await this.ensureDashboardPluginLinksHaveUris(updatedDashboard.plugins)\n                : undefined;\n            const sanitizedDashboard = Object.assign(Object.assign({}, updatedDashboard), { plugins: sanitizedPlugins });\n            const [filterContext, layout] = await Promise.all([\n                this.updateFilterContext(originalDashboard.filterContext, sanitizedDashboard.filterContext),\n                this.updateLayoutAndWidgets(originalDashboard.layout, sanitizedDashboard.layout),\n            ]);\n            // Missing refs means that the dashboard is not yet stored, so let's create it\n            if (!originalDashboard.ref && !sanitizedDashboard.ref) {\n                const createdDashboardWithSavedDependencies = Object.assign(Object.assign({}, sanitizedDashboard), { filterContext,\n                    layout });\n                return this.createBearDashboard(createdDashboardWithSavedDependencies);\n            }\n            const { created, updated, ref, uri, identifier } = originalDashboard;\n            const updatedDashboardWithSavedDependencies = Object.assign(Object.assign({}, sanitizedDashboard), { created,\n                updated,\n                ref,\n                uri,\n                identifier,\n                filterContext,\n                layout });\n            // First we need to delete any alerts referenced by the deleted widgets\n            const deletedWidgets = this.collectDeletedWidgets(originalDashboard.layout, sanitizedDashboard.layout);\n            const alertsToDelete = flatten(await Promise.all(deletedWidgets.map((widget) => this.getBearWidgetAlertsForWidget(widget))));\n            if (alertsToDelete.length) {\n                await this.deleteWidgetAlerts(alertsToDelete);\n            }\n            // Then update the dashboard itself\n            await this.updateBearDashboard(updatedDashboardWithSavedDependencies);\n            // And finally delete the now orphaned widgets\n            await this.deleteBearWidgets(deletedWidgets);\n            return updatedDashboardWithSavedDependencies;\n        };\n        this.deleteDashboard = async (dashboardRef) => {\n            await this.deleteBearMetadataObject(dashboardRef);\n        };\n        this.exportDashboardToPdf = async (dashboardRef, filters) => {\n            const dashboardUri = await objRefToUri(dashboardRef, this.workspace, this.authCall);\n            const convertedFilters = filters === null || filters === void 0 ? void 0 : filters.map(fromSdkModel.convertFilterContextItem);\n            return this.authCall((sdk) => sdk.dashboard.exportToPdf(this.workspace, dashboardUri, convertedFilters).then((res) => res));\n        };\n        this.createScheduledMail = async (scheduledMailDefinition, exportFilterContextDefinition) => {\n            const filterContext = exportFilterContextDefinition &&\n                (await this.createBearFilterContext(exportFilterContextDefinition));\n            const scheduledMailWithFilterContext = filterContext\n                ? Object.assign(Object.assign({}, scheduledMailDefinition), { attachments: scheduledMailDefinition.attachments.map((attachment) => (Object.assign(Object.assign({}, attachment), { filterContext: filterContext.ref }))) }) : scheduledMailDefinition;\n            const convertedScheduledMail = fromSdkModel.convertScheduledMail(scheduledMailWithFilterContext);\n            const createdBearScheduledMail = await this.authCall((sdk) => sdk.md.createObject(this.workspace, convertedScheduledMail));\n            return toSdkModel.convertScheduledMail(createdBearScheduledMail);\n        };\n        this.updateScheduledMail = async (ref, scheduledMailDefinition, filterContextRef) => {\n            const scheduledMailWithFilterContext = Object.assign(Object.assign({}, scheduledMailDefinition), { attachments: scheduledMailDefinition.attachments.map((attachment) => (Object.assign(Object.assign({}, attachment), { filterContext: filterContextRef }))) });\n            const convertedScheduledMail = fromSdkModel.convertScheduledMail(scheduledMailWithFilterContext);\n            await this.updateBearMetadataObject(ref, convertedScheduledMail);\n        };\n        this.deleteScheduledMail = async (scheduledMailRef) => {\n            await this.deleteBearMetadataObject(scheduledMailRef);\n        };\n        this.getScheduledMailsForDashboard = async (dashboardRef, options = {}) => {\n            const { createdByCurrentUser } = options;\n            const scheduledMailObjectLinks = createdByCurrentUser\n                ? await this.getScheduledMailObjectLinksForDashboardAndCurrentUser(dashboardRef)\n                : await this.getScheduledMailObjectLinksForDashboard(dashboardRef);\n            let userMap = new Map();\n            if (options.loadUserData) {\n                userMap = await updateUserMap(userMap, compact(flatMap(scheduledMailObjectLinks, (link) => [link.author, link.contributor])), this.authCall);\n                // if listing users is not allowed add at least the current user\n                if (userMap.values.length === 0) {\n                    await this.authCall(async (sdk) => {\n                        var _a, _b;\n                        const profile = await sdk.user.getCurrentProfile();\n                        const user = convertUser(profile);\n                        if ((_a = profile.links) === null || _a === void 0 ? void 0 : _a.self) {\n                            userMap.set((_b = profile.links) === null || _b === void 0 ? void 0 : _b.self, user);\n                        }\n                    });\n                }\n            }\n            const wrappedScheduledMails = await this.authCall(async (sdk) => {\n                return sdk.md.getObjects(this.workspace, scheduledMailObjectLinks.map(({ link }) => link));\n            });\n            return wrappedScheduledMails.map((scheduledMail) => toSdkModel.convertScheduledMail(scheduledMail, userMap));\n        };\n        this.getScheduledMailsCountForDashboard = async (dashboardRef) => {\n            const objectLinks = await this.getScheduledMailObjectLinksForDashboard(dashboardRef);\n            return objectLinks.length;\n        };\n        this.getAllWidgetAlertsForCurrentUser = async () => {\n            const alerts = await this.getAllBearKpiAlertsForCurrentUser();\n            return this.getConvertedAlerts(alerts);\n        };\n        this.getDashboardWidgetAlertsForCurrentUser = async (ref) => {\n            const alerts = await this.getDashboardBearKpiAlertsForCurrentUser(ref);\n            return this.getConvertedAlerts(alerts);\n        };\n        this.getWidgetAlertsCountForWidgets = async (refs) => {\n            const widgetUris = await Promise.all(refs.map((ref) => objRefToUri(ref, this.workspace, this.authCall)));\n            const result = await this.authCall((sdk) => sdk.md.getObjectsUsedByMany(this.workspace, widgetUris, {\n                types: [\"kpiAlert\"],\n                nearest: true,\n            }));\n            return result.map((entry) => {\n                return {\n                    ref: uriRef(entry.uri),\n                    alertCount: entry.entries.length,\n                };\n            });\n        };\n        this.createWidgetAlert = async (alert) => {\n            const [savedFilterContext, dashboardUri] = await Promise.all([\n                this.createOrUpdateWidgetAlertFilterContext(alert),\n                objRefToUri(alert.dashboard, this.workspace, this.authCall),\n            ]);\n            const alertWithSavedFilterContext = Object.assign(Object.assign({}, alert), { dashboard: uriRef(dashboardUri), filterContext: savedFilterContext });\n            return this.createBearWidgetAlert(alertWithSavedFilterContext);\n        };\n        this.updateWidgetAlert = async (updatedAlert) => {\n            const savedFilterContext = await this.createOrUpdateWidgetAlertFilterContext(updatedAlert);\n            const alertWithSavedFilterContext = Object.assign(Object.assign({}, updatedAlert), { filterContext: savedFilterContext });\n            return this.updateBearWidgetAlert(alertWithSavedFilterContext);\n        };\n        this.deleteWidgetAlert = async (ref) => {\n            await this.deleteBearMetadataObject(ref);\n        };\n        this.deleteWidgetAlerts = async (refs) => {\n            const uris = await Promise.all(refs.map((ref) => objRefToUri(ref, this.workspace, this.authCall)));\n            return this.authCall((sdk) => sdk.md.bulkDeleteObjects(this.workspace, uris, \"cascade\"));\n        };\n        this.getWidgetReferencedObjects = async (widget, types = [\"measure\"]) => {\n            invariant(widgetType(widget) === \"kpi\", \"getWidgetReferencedObjects is currently supported for kpi widgets only\");\n            return new WidgetReferencesQuery(this.authCall, this.workspace, widget, types).run();\n        };\n        this.getResolvedFiltersForWidget = async (widget, filters) => {\n            return resolveWidgetFilters(filters, widget.ignoreDashboardFilters, widget.dateDataSet, (refs) => objRefsToUris(refs, this.workspace, this.authCall));\n        };\n        // Alerts\n        this.createBearWidgetAlert = async (alert) => {\n            // make sure the alert has a non-empty title, otherwise the backend will throw\n            // the default is taken form the existing convention set by KPI Dashboards\n            const alertWithSanitizedName = Object.assign(Object.assign({}, alert), { title: alert.title || \"kpi alert\" });\n            const bearAlert = fromSdkModel.convertWidgetAlert(alertWithSanitizedName);\n            const createdBearAlert = await this.authCall((sdk) => sdk.md.createObject(this.workspace, bearAlert));\n            const convertedAlertFilterContext = fromSdkModel.convertFilterContext(alertWithSanitizedName.filterContext);\n            return toSdkModel.convertAlert(createdBearAlert, convertedAlertFilterContext);\n        };\n        this.updateBearWidgetAlert = async (alert) => {\n            const bearAlert = fromSdkModel.convertWidgetAlert(alert);\n            await this.updateBearMetadataObject(alert.ref, bearAlert);\n            return alert;\n        };\n        this.createOrUpdateWidgetAlertFilterContext = async (alert) => {\n            const { filterContext } = alert;\n            const emptyFilterContextDefinition = {\n                title: `Filter context for ${objRefToString(alert.widget)}`,\n                description: \"\",\n                filters: [],\n            };\n            return isFilterContext(filterContext)\n                ? this.updateBearFilterContext(filterContext)\n                : // Create a new filter context, or create implicit filter context, when not provided\n                    this.createBearFilterContext(filterContext || emptyFilterContextDefinition);\n        };\n        this.getBearWidgetAlertsForWidget = async (widget) => {\n            const objectLinks = await this.authCall((sdk) => sdk.md.getObjectUsedBy(this.workspace, widget.uri, {\n                types: [\"kpiAlert\"],\n                // limit ourselves to nearest only, otherwise, other alerts on the dashboard would be deleted, too\n                nearest: true,\n            }));\n            return objectLinks.map((link) => uriRef(link.link));\n        };\n        // Dashboards\n        this.getBearDashboard = async (uri) => {\n            return this.authCall((sdk) => sdk.md.getObjectDetails(uri));\n        };\n        this.createBearDashboard = async (dashboard) => {\n            const bearDashboard = fromSdkModel.convertDashboard(dashboard);\n            const createdBearDashboard = await this.authCall((sdk) => sdk.md.createObject(this.workspace, bearDashboard));\n            const createdDashboardDependencies = await this.getBearDashboardDependencies(createdBearDashboard.analyticalDashboard.meta.uri, DashboardComponentTypes);\n            return toSdkModel.convertDashboard(createdBearDashboard, createdDashboardDependencies);\n        };\n        this.updateBearDashboard = async (dashboard) => {\n            const bearDashboard = fromSdkModel.convertDashboard(dashboard);\n            await this.updateBearMetadataObject(dashboard.ref, bearDashboard);\n            return dashboard;\n        };\n        this.getAccessibleDashboards = async (explicitlySharedDashboardsObjectLinks, includeAvailableViaLink) => {\n            if (!includeAvailableViaLink) {\n                return explicitlySharedDashboardsObjectLinks;\n            }\n            const allDashboardsObjectLinks = await this.authCall((sdk) => sdk.md.getAnalyticalDashboards(this.workspace, true));\n            return allDashboardsObjectLinks.filter((dashboard) => {\n                var _a;\n                return (this.isExplicitlyShared(dashboard, explicitlySharedDashboardsObjectLinks) ||\n                    !((_a = dashboard === null || dashboard === void 0 ? void 0 : dashboard.flags) === null || _a === void 0 ? void 0 : _a.includes(\"strictAccessControl\")));\n            });\n        };\n        // Layout\n        this.updateLayoutAndWidgets = async (originalLayout, updatedLayout) => {\n            if (!updatedLayout) {\n                return;\n            }\n            // Layout is now source of the truth, so collect relevant widgets and their layout paths\n            // from both original and updated layout\n            const createdWidgetsWithLayoutPaths = this.collectCreatedWidgetsWithLayoutPaths(updatedLayout);\n            const updatedWidgetsWithLayoutPaths = this.collectUpdatedWidgetsWithLayoutPaths(originalLayout, updatedLayout);\n            // Perform relevant operation (create/update) on each widget,\n            // and replace widget definitions with saved widgets\n            const createdAndUpdatedWidgetsWithLayoutPaths = await Promise.all([\n                ...createdWidgetsWithLayoutPaths.map((widgetWithpath) => this.createBearWidget(widgetWithpath.widget).then((widget) => (Object.assign(Object.assign({}, widgetWithpath), { widget })))),\n                ...updatedWidgetsWithLayoutPaths.map((widgetWithpath) => this.updateBearWidget(widgetWithpath.widget).then((widget) => (Object.assign(Object.assign({}, widgetWithpath), { widget })))),\n            ]);\n            // Update relevant parts of the layout with saved widgets\n            return createdAndUpdatedWidgetsWithLayoutPaths.reduce((acc, widgetWithPath) => {\n                return set(acc, widgetWithPath.path, widgetWithPath.widget);\n            }, clone(updatedLayout));\n        };\n        // Filter context\n        this.updateFilterContext = async (originalFilterContext, updatedFilterContext) => {\n            if (isTempFilterContext(originalFilterContext)) {\n                throw new UnexpectedError(\"Cannot update temp filter context!\");\n            }\n            else if (isFilterContextDefinition(updatedFilterContext)) {\n                // Create a new filter context\n                return this.createBearFilterContext(updatedFilterContext);\n            }\n            else if (isFilterContext(updatedFilterContext)) {\n                // Update the current filter context\n                const shouldUpdateFilterContext = !isEqual(originalFilterContext, updatedFilterContext);\n                if (shouldUpdateFilterContext) {\n                    return this.updateBearFilterContext(updatedFilterContext);\n                }\n            }\n            // No change, return the original filter context\n            return originalFilterContext;\n        };\n        this.getBearExportFilterContext = async (exportFilterContextRef) => {\n            if (!exportFilterContextRef) {\n                return;\n            }\n            const exportFilterContextUri = await objRefToUri(exportFilterContextRef, this.workspace, this.authCall);\n            return this.authCall(async (sdk) => {\n                var _a;\n                let result;\n                try {\n                    result = await sdk.md.getObjectDetails(exportFilterContextUri);\n                }\n                catch (err) {\n                    if (((_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.status) === 404) {\n                        // Export filter context has expired\n                        result = undefined;\n                    }\n                    // let other errors propagate correctly\n                    throw err;\n                }\n                return result;\n            });\n        };\n        this.createBearFilterContext = async (filterContext) => {\n            const sanitizedFilterContext = await this.sanitizeFilterContext(filterContext);\n            const bearFilterContext = fromSdkModel.convertFilterContext(sanitizedFilterContext);\n            const savedBearFilterContext = await this.authCall((sdk) => sdk.md.createObject(this.workspace, bearFilterContext));\n            const savedFilterContext = toSdkModel.convertFilterContext(savedBearFilterContext);\n            return savedFilterContext;\n        };\n        this.updateBearFilterContext = async (filterContext) => {\n            const sanitizedFilterContext = await this.sanitizeFilterContext(filterContext);\n            const bearFilterContext = fromSdkModel.convertFilterContext(sanitizedFilterContext);\n            await this.updateBearMetadataObject(filterContext.ref, bearFilterContext);\n            return filterContext;\n        };\n        this.sanitizeFilterContext = (filterContext) => {\n            return sanitizeFilterContext(filterContext, (refs) => objRefsToUris(refs, this.workspace, this.authCall));\n        };\n        // Widgets\n        this.createBearWidget = async (widget) => {\n            const bearWidget = fromSdkModel.convertWidget(widget);\n            const savedBearWidget = await this.authCall((sdk) => sdk.md.createObject(this.workspace, bearWidget));\n            return toSdkModel.convertWidget(savedBearWidget);\n        };\n        this.updateBearWidget = async (widget) => {\n            const bearWidget = fromSdkModel.convertWidget(widget);\n            await this.updateBearMetadataObject(widget.ref, bearWidget);\n            return widget;\n        };\n        this.deleteBearWidgets = async (widgets) => {\n            await Promise.all(widgets.map((widget) => this.deleteBearMetadataObject(widget.ref)));\n        };\n        this.collectCreatedWidgetsWithLayoutPaths = (updatedLayout) => {\n            const widgetsWithPath = updatedLayout ? layoutWidgetsWithPaths(updatedLayout) : [];\n            return widgetsWithPath.filter((widgetWithPath) => isWidgetDefinition(widgetWithPath.widget));\n        };\n        this.collectUpdatedWidgetsWithLayoutPaths = (originalLayout, updatedLayout) => {\n            const originalLayoutWidgetsWithPath = originalLayout ? layoutWidgetsWithPaths(originalLayout) : [];\n            const updatedLayoutWidgetsWithPath = updatedLayout ? layoutWidgetsWithPaths(updatedLayout) : [];\n            return updatedLayoutWidgetsWithPath.filter(({ widget }) => {\n                return (isWidget(widget) &&\n                    originalLayoutWidgetsWithPath.some((w) => isWidget(w.widget) &&\n                        areObjRefsEqual(widget.ref, w.widget.ref) &&\n                        !isEqual(widget, w.widget)));\n            });\n        };\n        this.collectDeletedWidgets = (originalLayout, updatedLayout) => {\n            const originalLayoutWidgets = originalLayout ? layoutWidgets(originalLayout) : [];\n            const updatedLayoutWidgets = updatedLayout ? layoutWidgets(updatedLayout) : [];\n            const deletedWidgets = originalLayoutWidgets.filter((widget) => {\n                return (isWidget(widget) &&\n                    updatedLayoutWidgets.every((w) => isWidget(w) && !areObjRefsEqual(widget.ref, w.ref)));\n            });\n            return deletedWidgets;\n        };\n        // Alerts\n        this.getAllBearKpiAlertsForCurrentUser = async () => {\n            return this.authCall(async (sdk, context) => {\n                const author = await userUriFromAuthenticatedPrincipalWithAnonymous(context.getPrincipal);\n                if (!author) {\n                    return [];\n                }\n                return sdk.md.getObjectsByQuery(this.workspace, {\n                    category: \"kpiAlert\",\n                    author,\n                });\n            });\n        };\n        this.getDashboardBearKpiAlertsForCurrentUser = async (dashboardRef) => {\n            const allAlerts = await this.getAllBearKpiAlertsForCurrentUser();\n            if (allAlerts.length === 0) {\n                return [];\n            }\n            const dashboardUri = await objRefToUri(dashboardRef, this.workspace, this.authCall);\n            return allAlerts.filter((alert) => alert.kpiAlert.content.dashboard === dashboardUri);\n        };\n        this.getConvertedAlerts = async (alerts) => {\n            const filterContexts = await this.getBearKpiAlertsFilterContexts(alerts);\n            const filterContextByUri = keyBy(filterContexts, (filterContext) => filterContext.filterContext.meta.uri);\n            return alerts.map((alert) => {\n                const alertFilterContext = filterContextByUri[alert.kpiAlert.content.filterContext];\n                return toSdkModel.convertAlert(alert, alertFilterContext);\n            });\n        };\n        this.getBearKpiAlertsFilterContexts = async (kpiAlerts) => {\n            const filterContextUris = kpiAlerts\n                .map((alert) => alert.kpiAlert.content.filterContext)\n                .filter((a) => !!a);\n            return this.authCall((sdk) => sdk.md.getObjects(this.workspace, filterContextUris));\n        };\n        // Scheduled mail\n        this.getScheduledMailObjectLinksForDashboard = async (dashboardRef) => {\n            const dashboardUri = await objRefToUri(dashboardRef, this.workspace, this.authCall);\n            return this.authCall((sdk) => sdk.md.getObjectUsedBy(this.workspace, dashboardUri, {\n                nearest: true,\n                types: [\"scheduledMail\"],\n            }));\n        };\n        this.getScheduledMailObjectLinksForDashboardAndCurrentUser = async (dashboardRef) => {\n            return this.authCall(async (_sdk, context) => {\n                const user = await userUriFromAuthenticatedPrincipalWithAnonymous(context.getPrincipal);\n                if (!user) {\n                    return [];\n                }\n                const objectLinks = await this.getScheduledMailObjectLinksForDashboard(dashboardRef);\n                return objectLinks.filter(({ author }) => author === user);\n            });\n        };\n        // Metadata\n        this.updateBearMetadataObject = async (ref, bearMetadataObject) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            const metadataObjectId = getObjectIdFromUri(uri);\n            await this.authCall((sdk) => sdk.md.updateObject(this.workspace, metadataObjectId, bearMetadataObject));\n        };\n        this.deleteBearMetadataObject = async (ref) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            return this.authCall((sdk) => sdk.md.deleteObject(uri));\n        };\n        this.getBearVisualizationClasses = async () => {\n            return this.authCall((sdk) => sdk.md.getObjectsByQuery(this.workspace, {\n                category: \"visualizationClass\",\n            }));\n        };\n        this.getBearDashboardDependencies = async (uri, types) => {\n            const dependenciesObjectLinks = await this.authCall((sdk) => sdk.md.getObjectUsing(this.workspace, uri, {\n                types,\n                nearest: false,\n            }));\n            const dependenciesUris = dependenciesObjectLinks.map((objectLink) => objectLink.link);\n            return this.authCall((sdk) => sdk.md.getObjects(this.workspace, dependenciesUris));\n        };\n        this.getBearDashboardReferences = async (uri, types) => {\n            const objectTypes = compact(types.map(mapDashboardReferenceTypes));\n            if (isEmpty(objectTypes)) {\n                return {\n                    dependencies: [],\n                    visClassMapping: {},\n                };\n            }\n            if (includes(types, \"insight\")) {\n                return Promise.all([\n                    this.getBearDashboardDependencies(uri, objectTypes),\n                    this.insights.getVisualizationClassesByVisualizationClassUri({ includeDeprecated: true }),\n                ]).then(([dependencies, visClassMapping]) => {\n                    return {\n                        dependencies,\n                        visClassMapping,\n                    };\n                });\n            }\n            return this.getBearDashboardDependencies(uri, objectTypes).then((dependencies) => {\n                return {\n                    dependencies,\n                    visClassMapping: {},\n                };\n            });\n        };\n        this.getDashboardReferencedObjects = async (dashboard, types = [\"insight\", \"dashboardPlugin\"]) => {\n            const typesToGet = [...types];\n            // if there are no plugins linked to the dashboard then do not ask for related plugin info\n            if (isEmpty(dashboard.plugins)) {\n                remove(typesToGet, (item) => item === \"dashboardPlugin\");\n            }\n            // bail out if there is nothing to get (e.g. user asked for referenced plugins but the dashboard has none)\n            if (isEmpty(typesToGet)) {\n                return {\n                    plugins: [],\n                    insights: [],\n                };\n            }\n            const { dependencies, visClassMapping } = await this.getBearDashboardReferences(dashboard.uri, typesToGet);\n            const insights = [];\n            const plugins = [];\n            dependencies.forEach((dep) => {\n                if (isVisualization(dep)) {\n                    insights.push(convertVisualization(dep, visClassMapping[dep.visualizationObject.content.visualizationClass.uri]));\n                }\n                else if (isDashboardPlugin(dep)) {\n                    plugins.push(toSdkModel.convertDashboardPlugin(dep));\n                }\n            });\n            return {\n                insights,\n                plugins,\n            };\n        };\n        this.createDashboardPlugin = async (plugin) => {\n            const convertedPlugin = fromSdkModel.convertDashboardPlugin(plugin);\n            const savedPlugin = await this.authCall((sdk) => {\n                return sdk.md.createObject(this.workspace, convertedPlugin);\n            });\n            if (plugin.identifier !== undefined) {\n                // when server creates a new object, it will automatically assign identifier & ignore identifier\n                // in the POST payload. Code must do another update to hammer in the desired identifier.\n                const pluginObjectId = getObjectIdFromUri(savedPlugin.dashboardPlugin.meta.uri);\n                savedPlugin.dashboardPlugin.meta.identifier = plugin.identifier;\n                await this.authCall((sdk) => {\n                    return sdk.md.updateObject(this.workspace, pluginObjectId, savedPlugin);\n                });\n            }\n            return toSdkModel.convertDashboardPlugin(savedPlugin);\n        };\n        this.deleteDashboardPlugin = async (ref) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            return this.authCall((sdk) => {\n                return sdk.md.deleteObject(uri);\n            });\n        };\n        this.getDashboardPlugin = async (ref, options) => {\n            const uri = await objRefToUri(ref, this.workspace, this.authCall);\n            const wrappedPlugin = await this.authCall((sdk) => {\n                return sdk.md.getObjectDetails(uri);\n            });\n            const userMap = (options === null || options === void 0 ? void 0 : options.loadUserData)\n                ? await updateUserMap(new Map(), getDashboardPluginUserUris(wrappedPlugin), this.authCall)\n                : new Map();\n            return toSdkModel.convertDashboardPlugin(wrappedPlugin, userMap);\n        };\n        this.getDashboardPlugins = async (options) => {\n            const pluginLinks = await this.authCall((sdk) => sdk.md.getDashboardPlugins(this.workspace));\n            const pluginUris = pluginLinks.map((link) => link.link);\n            const wrappedPlugins = await this.authCall((sdk) => {\n                return sdk.md.getObjects(this.workspace, pluginUris);\n            });\n            const userMap = (options === null || options === void 0 ? void 0 : options.loadUserData)\n                ? await updateUserMap(new Map(), compact(flatMap(wrappedPlugins, getDashboardPluginUserUris)), this.authCall)\n                : new Map();\n            return wrappedPlugins.map((value) => toSdkModel.convertDashboardPlugin(value, userMap));\n        };\n        /**\n         * Get user's dashboard-level permissions\n         *\n         * @remarks\n         * On bear the dashboard permissions are derived from dashboard accessibility\n         * and user's workspace-level permissions\n         *\n         * @param ref - dashboard reference\n         */\n        this.getDashboardPermissions = async (ref) => {\n            try {\n                const uri = await objRefToUri(ref, this.workspace, this.authCall);\n                await this.authCall((sdk) => sdk.md.getObjectDetails(uri));\n                const workspacePermissions = await this.authCall(() => this.permissions.getPermissionsForCurrentUser());\n                const canEditDashboard = workspacePermissions.canManageAnalyticalDashboard;\n                const canShareDashboard = workspacePermissions.canManageACL;\n                const canManageLockedDashboard = canEditDashboard && workspacePermissions.canManageProject;\n                return {\n                    canEditDashboard,\n                    canEditLockedDashboard: canManageLockedDashboard,\n                    canShareDashboard,\n                    canShareLockedDashboard: canManageLockedDashboard,\n                    canViewDashboard: true,\n                };\n            }\n            catch (_e) {\n                return {\n                    canEditDashboard: false,\n                    canEditLockedDashboard: false,\n                    canShareDashboard: false,\n                    canShareLockedDashboard: false,\n                    canViewDashboard: false,\n                };\n            }\n        };\n        this.ensureDashboardPluginLinksHaveUris = async (pluginLinks) => {\n            const resolvedUris = await objRefsToUris(pluginLinks.map((p) => p.plugin), this.workspace, this.authCall, true);\n            return pluginLinks.map((p, idx) => {\n                return Object.assign(Object.assign({}, p), { plugin: uriRef(resolvedUris[idx]) });\n            });\n        };\n        this.validateDashboardsExistence = async (dashboardRefs) => {\n            const validDashboards = await Promise.all(dashboardRefs.map(async (ref) => {\n                try {\n                    const { title, identifier, isUnderStrictControl, uri } = await this.getDashboard(ref);\n                    // Dashboard is not shared with current user (but does not have strict mode enabled).\n                    // For admin, backend returns object without 403 even if it is under strict control, therefore we\n                    // need to remove title of the dashboard to simulate forbidden dashboard without title to have\n                    // consistent behavior for both editor and admin.\n                    return {\n                        ref,\n                        title: isUnderStrictControl ? undefined : title,\n                        identifier,\n                        uri,\n                    };\n                }\n                catch (error) {\n                    if (error.httpStatus === 403) {\n                        // forbidden\n                        return {\n                            ref,\n                            identifier: objRefToString(ref),\n                            uri: \"\", // not needed for forbidden dashboard\n                        };\n                    }\n                    else {\n                        // non-existent\n                        return undefined;\n                    }\n                }\n            }));\n            return compact(validDashboards);\n        };\n        this.insights = new BearWorkspaceInsights(this.authCall, this.workspace);\n        this.permissions = new BearWorkspacePermissionsFactory(this.authCall, this.workspace);\n    }\n    isExplicitlyShared(dashboard, explicitlySharedDashboards) {\n        return explicitlySharedDashboards.some(({ link }) => link === dashboard.link);\n    }\n    async getDashboardWithReferences(ref, filterContextRef, options = {}, types = [\"insight\"]) {\n        const dashboard = await this.getDashboard(ref, filterContextRef, options);\n        const references = await this.getDashboardReferencedObjects(dashboard, types);\n        return {\n            dashboard,\n            references,\n        };\n    }\n}\nfunction mapDashboardReferenceTypes(type) {\n    const mapping = {\n        insight: \"visualizationObject\",\n        dashboardPlugin: \"dashboardPlugin\",\n    };\n    return mapping[type];\n}\n//# sourceMappingURL=index.js.map","// (C) 2021 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @public\n */\nexport function isDashboardPlugin(obj) {\n    return !isEmpty(obj) && obj.dashboardPlugin !== undefined;\n}\n//# sourceMappingURL=GdcDashboardPlugin.js.map","import { convertWorkspaceUser } from \"../../../convertors/fromBackend/UsersConverter.js\";\nimport { ServerPaging } from \"@gooddata/sdk-backend-base\";\nexport class BearWorkspaceUsersQuery {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.options = {};\n    }\n    withOptions(options) {\n        this.options = options;\n        return this;\n    }\n    async queryAll() {\n        const usersQuery = await this.query();\n        return usersQuery.all();\n    }\n    async queryWorker(options) {\n        var _a;\n        const { search } = options;\n        return ServerPaging.for(async ({ limit, offset }) => {\n            const data = await this.authCall((sdk) => sdk.project.getUserListWithPaging(this.workspace, {\n                prefixSearch: search,\n                userState: \"ACTIVE\",\n                offset,\n                limit,\n            }));\n            const { items, paging: { totalCount }, } = data.userList;\n            return {\n                items: items.map(convertWorkspaceUser),\n                totalCount,\n            };\n        }, (_a = this.options.limit) !== null && _a !== void 0 ? _a : 1000, this.options.offset);\n    }\n    async query() {\n        return this.queryWorker(this.options);\n    }\n}\n//# sourceMappingURL=index.js.map","import { __rest } from \"tslib\";\nimport { uriRef, } from \"@gooddata/sdk-model\";\nconst convertAllTime = (allTime) => {\n    return Object.assign({ type: \"allTime\" }, allTime);\n};\nconst convertAbsoluteForm = (absoluteForm) => {\n    return Object.assign({ type: \"absoluteForm\" }, absoluteForm);\n};\nconst convertRelativeForm = (relativeForm) => {\n    const { granularities: availableGranularities } = relativeForm, other = __rest(relativeForm, [\"granularities\"]);\n    return Object.assign({ type: \"relativeForm\", availableGranularities }, other);\n};\nconst convertAbsolutePreset = (absolutePreset) => {\n    return Object.assign({ type: \"absolutePreset\" }, absolutePreset);\n};\nconst convertRelativePreset = (relativePreset) => {\n    return Object.assign({ type: \"relativePreset\" }, relativePreset);\n};\nexport const convertDateFilterConfig = (dateFilterConfig) => {\n    const { dateFilterConfig: { content: { selectedOption, allTime, absoluteForm, relativeForm, absolutePresets, relativePresets, }, meta, }, } = dateFilterConfig;\n    return {\n        ref: uriRef(meta.uri),\n        selectedOption,\n        allTime: allTime && convertAllTime(allTime),\n        absoluteForm: absoluteForm && convertAbsoluteForm(absoluteForm),\n        relativeForm: relativeForm && convertRelativeForm(relativeForm),\n        absolutePresets: absolutePresets === null || absolutePresets === void 0 ? void 0 : absolutePresets.map(convertAbsolutePreset),\n        relativePresets: relativePresets === null || relativePresets === void 0 ? void 0 : relativePresets.map(convertRelativePreset),\n    };\n};\n//# sourceMappingURL=DateFilterConfigConverter.js.map","import { invariant } from \"ts-invariant\";\nimport { convertDateFilterConfig } from \"../../../convertors/fromBackend/DateFilterConfigConverter.js\";\nimport { ServerPaging } from \"@gooddata/sdk-backend-base\";\nexport class BearWorkspaceDateFilterConfigsQuery {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    withLimit(limit) {\n        invariant(limit > 0, `limit must be a positive number, got: ${limit}`);\n        this.limit = limit;\n        return this;\n    }\n    withOffset(offset) {\n        this.offset = offset;\n        return this;\n    }\n    async query() {\n        return this.queryWorker();\n    }\n    async queryWorker() {\n        return ServerPaging.for(async ({ limit, offset }) => {\n            const data = await this.authCall((sdk) => sdk.md.getObjectsByQueryWithPaging(this.workspace, {\n                offset,\n                limit,\n                category: \"dateFilterConfig\",\n                getTotalCount: true,\n            }));\n            const { items, paging: { totalCount }, } = data;\n            return {\n                items: items.map(convertDateFilterConfig),\n                totalCount: totalCount,\n            };\n        }, this.limit, this.offset);\n    }\n}\n//# sourceMappingURL=index.js.map","import { filterObjRef, isUriRef, isNegativeAttributeFilter, filterAttributeElements, isAttributeElementsByRef, isIdentifierRef, areObjRefsEqual, objRefToString, } from \"@gooddata/sdk-model\";\nimport { NotSupported } from \"@gooddata/sdk-backend-spi\";\nimport { invariant } from \"ts-invariant\";\nimport flatMap from \"lodash/flatMap.js\";\nimport groupBy from \"lodash/groupBy.js\";\nimport uniqWith from \"lodash/uniqWith.js\";\nimport { toBearRef } from \"../../../../convertors/toBackend/ObjRefConverter.js\";\nimport { convertMeasure } from \"../../../../convertors/toBackend/afm/MeasureConverter.js\";\nimport { objRefsToUris } from \"../../../../utils/api.js\";\nexport class LimitingAfmFactory {\n    constructor(authCall, displayFormRef, workspace) {\n        this.authCall = authCall;\n        this.displayFormRef = displayFormRef;\n        this.workspace = workspace;\n        this.getAfm = async (filters, measures, relativeDateFilters) => {\n            if (!(filters === null || filters === void 0 ? void 0 : filters.length) && !(measures === null || measures === void 0 ? void 0 : measures.length) && !(relativeDateFilters === null || relativeDateFilters === void 0 ? void 0 : relativeDateFilters.length)) {\n                return undefined;\n            }\n            const filtersPart = (filters === null || filters === void 0 ? void 0 : filters.length)\n                ? [\n                    {\n                        expression: {\n                            value: await this.createFiltersExpressionFromAttributeFilters(filters),\n                        },\n                    },\n                ]\n                : undefined;\n            const measuresPart = (measures === null || measures === void 0 ? void 0 : measures.length) ? measures.map(convertMeasure) : undefined;\n            const mergedFiltersPart = filtersPart &&\n                relativeDateFilters && [...filtersPart, ...relativeDateFilters];\n            return {\n                attributes: [\n                    {\n                        localIdentifier: \"a1\",\n                        displayForm: toBearRef(this.displayFormRef),\n                    },\n                ],\n                filters: mergedFiltersPart || filtersPart || relativeDateFilters,\n                measures: measuresPart,\n            };\n        };\n        this.createFiltersExpressionFromAttributeFilters = async (filters) => {\n            const filterDisplayForms = filters.map((f) => filterObjRef(f.attributeFilter));\n            const allDisplayFormRefs = uniqWith([this.displayFormRef, ...filterDisplayForms], areObjRefsEqual);\n            const [identifierUriPairs, displayFormAttributeUriMapping] = await Promise.all([\n                this.getIdentifierUriPairs(filters),\n                this.getDisplayFormAttributeUriMapping(allDisplayFormRefs),\n            ]);\n            const getDisplayFormAttributeUri = (ref) => {\n                const entry = displayFormAttributeUriMapping.find(([displayFormRef]) => areObjRefsEqual(displayFormRef, ref));\n                invariant(entry, `Attribute URI for the display form \"${objRefToString(ref)}\" was not found`);\n                return entry[1];\n            };\n            const getFilterAttributeUri = (attributeFilter) => getDisplayFormAttributeUri(filterObjRef(attributeFilter));\n            const getUriForIdentifier = (objRef) => {\n                if (isUriRef(objRef)) {\n                    return objRef.uri;\n                }\n                else {\n                    const foundUri = identifierUriPairs.find((pair) => pair.identifier === objRef.identifier);\n                    if (foundUri === undefined) {\n                        throw new Error(`URI for identifier ${objRef.identifier} have not been found`);\n                    }\n                    return foundUri.uri;\n                }\n            };\n            const attributeRefUri = getDisplayFormAttributeUri(this.displayFormRef);\n            const groupsByOverAttribute = groupBy(filters, (filter) => getUriForIdentifier(filter.overAttribute));\n            const expressionsByOverAttribute = Object.keys(groupsByOverAttribute).map((overAttribute) => {\n                const filterGroupExpression = groupsByOverAttribute[overAttribute]\n                    .map((parentFilter) => {\n                    const isNegativeFilter = isNegativeAttributeFilter(parentFilter.attributeFilter);\n                    const filterElements = filterAttributeElements(parentFilter.attributeFilter);\n                    const parentFilterAttributeUri = getFilterAttributeUri(parentFilter.attributeFilter);\n                    if (!isAttributeElementsByRef(filterElements)) {\n                        throw new NotSupported(\"Only attribute elements by ref are supported in elements attribute filter on the bear backend\");\n                    }\n                    const elementsString = filterElements.uris\n                        .map((attributeElementUri) => `[${attributeElementUri}]`)\n                        .join(\", \");\n                    const operatorString = isNegativeFilter ? \"NOT IN\" : \"IN\";\n                    return `[${parentFilterAttributeUri}] ${operatorString} (${elementsString})`;\n                })\n                    .join(\" AND \");\n                return `((${filterGroupExpression}) OVER [${overAttribute}] TO [${attributeRefUri}])`;\n            });\n            return expressionsByOverAttribute.join(\" AND \");\n        };\n        this.getIdentifierUriPairs = (filters) => {\n            const allIdentifiersUsed = this.getAllIdentifiersUsedInAttributeFilters(filters);\n            return this.authCall((sdk) => sdk.md.getUrisFromIdentifiers(this.workspace, allIdentifiersUsed));\n        };\n        this.getAllIdentifiersUsedInAttributeFilters = (filters) => {\n            return flatMap(filters, (filter) => {\n                // the only candidates are the filter itself and the overAttribute\n                return [filter.overAttribute, filterObjRef(filter.attributeFilter)]\n                    .filter(isIdentifierRef)\n                    .map((ref) => ref.identifier);\n            });\n        };\n        this.getDisplayFormAttributeUriMapping = async (displayForms) => {\n            const displayFormUris = await objRefsToUris(displayForms, this.workspace, this.authCall);\n            return this.authCall(async (sdk) => {\n                const response = await sdk.md.getObjects(this.workspace, displayFormUris);\n                return displayForms.map((displayForm) => {\n                    const attribute = response.find((item) => {\n                        if (isIdentifierRef(displayForm)) {\n                            return displayForm.identifier === item.attributeDisplayForm.meta.identifier;\n                        }\n                        else {\n                            return displayForm.uri === item.attributeDisplayForm.meta.uri;\n                        }\n                    });\n                    if (attribute === undefined) {\n                        throw new Error(\"Cannot find attribute for display form\");\n                    }\n                    return [displayForm, attribute.attributeDisplayForm.content.formOf];\n                });\n            });\n        };\n    }\n}\n//# sourceMappingURL=limitingAfmFactory.js.map","import { __rest } from \"tslib\";\n// (C) 2019-2023 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isValueBasedElementsQueryOptionsElements, } from \"@gooddata/sdk-backend-spi\";\nimport { filterObjRef, isAttributeFilter, filterAttributeElements, isAttributeElementsByRef, isRelativeDateFilter, } from \"@gooddata/sdk-model\";\nimport { InMemoryPaging, ServerPaging } from \"@gooddata/sdk-backend-base\";\nimport { objRefToUri, getObjectIdFromUri } from \"../../../../utils/api.js\";\nimport { LimitingAfmFactory } from \"./limitingAfmFactory.js\";\nexport class BearWorkspaceElements {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    forDisplayForm(ref) {\n        return new BearWorkspaceElementsQuery(this.authCall, ref, this.workspace);\n    }\n    forFilter(filter, dateFilterDisplayForm) {\n        return new BearWorkspaceFilterElementsQuery(this.authCall, filter, dateFilterDisplayForm, this.workspace);\n    }\n}\nclass BearWorkspaceElementsQuery {\n    constructor(authCall, displayFormRef, workspace) {\n        this.authCall = authCall;\n        this.displayFormRef = displayFormRef;\n        this.workspace = workspace;\n        this.limit = 50;\n        this.offset = 0;\n    }\n    withLimit(limit) {\n        invariant(limit > 0, `limit must be a positive number, got: ${limit}`);\n        this.limit = limit;\n        return this;\n    }\n    withOffset(offset) {\n        this.offset = offset;\n        return this;\n    }\n    withAttributeFilters(filters) {\n        this.attributeFilters = filters;\n        return this;\n    }\n    withDateFilters(filters) {\n        this.dateFilters = filters;\n        return this;\n    }\n    withMeasures(measures) {\n        this.measures = measures.length > 0 ? measures : undefined;\n        return this;\n    }\n    withOptions(options) {\n        this.options = options;\n        return this;\n    }\n    withSignal(_) {\n        console.warn(\"Cancelling requests is not supported on bear backend.\");\n        return this;\n    }\n    async query() {\n        var _a;\n        const limitingAfmFactory = new LimitingAfmFactory(this.authCall, this.displayFormRef, this.workspace);\n        this.limitingAfm = await limitingAfmFactory.getAfm(this.attributeFilters, this.measures, this.dateFilters);\n        return this.queryWorker((_a = this.options) !== null && _a !== void 0 ? _a : {});\n    }\n    async getObjectId() {\n        if (!this.objectId) {\n            const uri = await objRefToUri(this.displayFormRef, this.workspace, this.authCall);\n            this.objectId = getObjectIdFromUri(uri);\n        }\n        return this.objectId;\n    }\n    async queryWorker(options) {\n        const objectId = await this.getObjectId();\n        const { elements } = options, restOptions = __rest(options, [\"elements\"]);\n        invariant(!isValueBasedElementsQueryOptionsElements(elements), \"Specifying elements by value is not supported.\");\n        const urisToUse = elements === null || elements === void 0 ? void 0 : elements.uris;\n        invariant(!urisToUse || urisToUse.every((item) => item !== null), \"Nulls are not supported as attribute element uris on bear\");\n        return ServerPaging.for(async ({ limit, offset }) => {\n            const params = Object.assign(Object.assign(Object.assign({}, restOptions), { uris: urisToUse }), { limit,\n                offset, afm: this.limitingAfm });\n            const data = await this.authCall((sdk) => sdk.md.getValidElements(this.workspace, objectId, params));\n            const { items, paging } = data.validElements;\n            const totalCount = Number.parseInt(paging.total, 10);\n            return {\n                items: items.map(({ element }) => element),\n                totalCount,\n            };\n        }, this.limit, this.offset);\n    }\n}\nclass BearWorkspaceFilterElementsQuery {\n    constructor(authCall, filter, dateDf, workspace) {\n        this.authCall = authCall;\n        this.filter = filter;\n        this.workspace = workspace;\n        this.limit = 50;\n        this.offset = 0;\n        let ref = filterObjRef(filter);\n        if (isRelativeDateFilter(filter)) {\n            invariant(dateDf, \"Date filter's display form needs to be defined\");\n            ref = dateDf;\n        }\n        this.elementsQuery = new BearWorkspaceElementsQuery(this.authCall, ref, this.workspace);\n    }\n    // eslint-disable-next-line sonarjs/no-identical-functions\n    withLimit(limit) {\n        invariant(limit > 0, `limit must be a positive number, got: ${limit}`);\n        this.limit = limit;\n        return this;\n    }\n    withOffset(offset) {\n        this.offset = offset;\n        return this;\n    }\n    async query() {\n        if (isAttributeFilter(this.filter)) {\n            const selectedElements = filterAttributeElements(this.filter);\n            if (isAttributeElementsByRef(selectedElements)) {\n                return this.resultForElementsByRef(selectedElements);\n            }\n            return this.resultForElementsByValue(selectedElements);\n        }\n        else {\n            return this.elementsQuery.withDateFilters([this.filter]).query();\n        }\n    }\n    async resultForElementsByRef(selectedElements) {\n        if (selectedElements.uris.length) {\n            return this.elementsQuery\n                .withOptions({\n                elements: {\n                    uris: selectedElements.uris,\n                },\n            })\n                .withOffset(this.offset)\n                .withLimit(this.limit)\n                .query();\n        }\n        // Filter with empty selection resolves to empty values\n        return Promise.resolve(new InMemoryPaging([], this.limit, this.offset));\n    }\n    async resultForElementsByValue(selectedElements) {\n        const items = selectedElements.values.map((element) => ({\n            title: element,\n            uri: element,\n        }));\n        return Promise.resolve(new InMemoryPaging(items, this.limit, this.offset));\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport { uriRef, } from \"@gooddata/sdk-model\";\nimport { newAttributeDisplayFormMetadataObject, newAttributeMetadataObject, } from \"@gooddata/sdk-backend-base\";\nimport { invariant } from \"ts-invariant\";\nimport { objRefToUri, objRefsToUris, getObjectIdFromUri } from \"../../../utils/api.js\";\nimport { convertMetadataObjectXrefEntry } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport { BearWorkspaceElements } from \"./elements/index.js\";\nimport { UnexpectedError, } from \"@gooddata/sdk-backend-spi\";\nimport { isWrappedAttributeDisplayForm, } from \"@gooddata/api-model-bear\";\nexport class BearWorkspaceAttributes {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.elements = () => {\n            return new BearWorkspaceElements(this.authCall, this.workspace);\n        };\n        this.getAttributeDisplayForm = async (ref) => {\n            const displayFormUri = await objRefToUri(ref, this.workspace, this.authCall);\n            const wrappedDisplayForm = await this.authCall((sdk) => sdk.md.getObjectDetails(displayFormUri));\n            const displayFormDetails = wrappedDisplayForm.attributeDisplayForm;\n            return this.buildAttributeDisplayForm(displayFormDetails);\n        };\n        this.getAttribute = async (ref) => {\n            const attributeUri = await objRefToUri(ref, this.workspace, this.authCall);\n            const wrappedAttribute = await this.authCall((sdk) => sdk.md.getObjectDetails(attributeUri));\n            return this.buildAttribute(wrappedAttribute.attribute);\n        };\n        this.getAttributeDisplayForms = async (refs) => {\n            const displayFormUris = await objRefsToUris(refs, this.workspace, this.authCall, false);\n            const wrappedAttributeDisplayForms = await this.authCall((sdk) => sdk.md.getObjects(this.workspace, displayFormUris));\n            return wrappedAttributeDisplayForms.map((wrappedDisplayForm) => {\n                if (!isWrappedAttributeDisplayForm(wrappedDisplayForm)) {\n                    throw new UnexpectedError(\"INVALID_REFERENCED_OBJECT\", new Error(\"Referenced object is not attributeDisplayForm\"));\n                }\n                const displayFormDetails = wrappedDisplayForm.attributeDisplayForm;\n                return this.buildAttributeDisplayForm(displayFormDetails);\n            });\n        };\n        this.getAttributes = async (refs) => {\n            const attributeUris = await objRefsToUris(refs, this.workspace, this.authCall, false);\n            const wrappedAttributes = await this.authCall((sdk) => sdk.md.getObjects(this.workspace, attributeUris));\n            return wrappedAttributes.map((wrappedAttribute) => {\n                const { meta: { title, uri, isProduction, identifier, summary }, content: { displayForms }, } = wrappedAttribute.attribute;\n                const ref = uriRef(uri);\n                const attributeDisplayForms = displayForms.map((displayForm) => this.buildAttributeDisplayForm(displayForm));\n                return newAttributeMetadataObject(ref, (attribute) => attribute\n                    .title(title)\n                    .uri(uri)\n                    .production(Boolean(isProduction))\n                    .id(identifier)\n                    .description(summary)\n                    .displayForms(attributeDisplayForms));\n            });\n        };\n        this.buildAttributeDisplayForm = (displayFormDetails) => {\n            const { meta: { title, summary, identifier, uri }, content: { formOf, default: defaultDisplayForm, type }, } = displayFormDetails;\n            const ref = uriRef(uri);\n            const isDefaultDf = defaultDisplayForm === 1;\n            return newAttributeDisplayFormMetadataObject(ref, (df) => df\n                .attribute(uriRef(formOf))\n                .title(title)\n                .description(summary)\n                .isDefault(isDefaultDf)\n                .id(identifier)\n                .uri(uri)\n                .displayFormType(type));\n        };\n        this.buildAttribute = (attributeDetails) => {\n            const { title, uri, isProduction, identifier, summary } = attributeDetails.meta;\n            const { displayForms } = attributeDetails.content;\n            const attributeDisplayForms = displayForms.map((displayForm) => this.buildAttributeDisplayForm(displayForm));\n            const ref = uriRef(uri);\n            return newAttributeMetadataObject(ref, (a) => a\n                .title(title)\n                .uri(uri)\n                .production(Boolean(isProduction))\n                .id(identifier)\n                .description(summary)\n                .displayForms(attributeDisplayForms));\n        };\n    }\n    async getCommonAttributes(attributesRefs) {\n        const inputAttributeUris = await objRefsToUris(attributesRefs, this.workspace, this.authCall);\n        const returnAttributeUris = await this.authCall((sdk) => sdk.ldm.getCommonAttributes(this.workspace, inputAttributeUris));\n        return returnAttributeUris.map(uriRef);\n    }\n    getCommonAttributesBatch(attributesRefsBatch) {\n        return Promise.all(attributesRefsBatch.map(async (attributeRefs) => {\n            return this.getCommonAttributes(attributeRefs);\n        }));\n    }\n    async getAttributeByDisplayForm(ref) {\n        const displayFormUri = await objRefToUri(ref, this.workspace, this.authCall);\n        const wrappedDisplayForm = await this.authCall((sdk) => sdk.md.getObjectDetails(displayFormUri));\n        const wrappedAttribute = await this.authCall((sdk) => sdk.md.getObjectDetails(wrappedDisplayForm.attributeDisplayForm.content.formOf));\n        return this.buildAttribute(wrappedAttribute.attribute);\n    }\n    async getAttributeDatasetMeta(ref) {\n        const uri = await objRefToUri(ref, this.workspace, this.authCall);\n        const objectId = getObjectIdFromUri(uri);\n        return this.authCall(async (sdk) => {\n            const usedBy = await sdk.xhr.getParsed(`/gdc/md/${this.workspace}/usedby2/${objectId}?types=dataSet`);\n            invariant(usedBy.entries.length > 0, \"Attribute must have a dataset associated to it.\");\n            return convertMetadataObjectXrefEntry(\"dataSet\", usedBy.entries[0]);\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { convertMetadataObjectXrefEntry } from \"../../../convertors/fromBackend/MetaConverter.js\";\nimport { getObjectIdFromUri, objRefToUri } from \"../../../utils/api.js\";\nexport class BearWorkspaceFacts {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    async getFactDatasetMeta(ref) {\n        const uri = await objRefToUri(ref, this.workspace, this.authCall);\n        const objectId = getObjectIdFromUri(uri);\n        return this.authCall(async (sdk) => {\n            const usedBy = await sdk.xhr.getParsed(`/gdc/md/${this.workspace}/usedby2/${objectId}?types=dataSet`);\n            invariant(usedBy.entries.length > 0, \"Fact must have a dataset associated to it.\");\n            return convertMetadataObjectXrefEntry(\"dataSet\", usedBy.entries[0]);\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","import { uriRef } from \"@gooddata/sdk-model\";\nexport const convertWorkspaceUserGroup = (group) => {\n    const { content: { name, description, id }, links, } = group;\n    return {\n        ref: uriRef(links.self),\n        name,\n        id: id,\n        description: description,\n    };\n};\n//# sourceMappingURL=UserGroupsConverter.js.map","import { convertWorkspaceUserGroup } from \"../../../convertors/fromBackend/UserGroupsConverter.js\";\nimport { InMemoryPaging } from \"@gooddata/sdk-backend-base\";\nexport class BearWorkspaceUserGroupsQuery {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n    }\n    async queryAllPages(limit) {\n        const data = await this.authCall((sdk) => sdk.project.getUserGroups(this.workspace, { limit }));\n        const { items, paging } = data.userGroups;\n        const getNextPage = async (nextUri, result = []) => {\n            if (!nextUri) {\n                return result;\n            }\n            const data = await this.authCall((sdk) => sdk.xhr.getParsed(nextUri));\n            const { items, paging } = data.userGroups;\n            const updatedResult = [...result, ...items];\n            nextUri = paging.next;\n            return getNextPage(paging.next, updatedResult);\n        };\n        return getNextPage(paging.next, items);\n    }\n    async query(options) {\n        const { offset = 0, limit = 100, search } = options;\n        let userGroups = await this.queryAllPages(limit);\n        if (search) {\n            const lowercaseSearch = search.toLocaleLowerCase();\n            userGroups = userGroups.filter((userGroup) => {\n                const { name } = userGroup.userGroup.content;\n                return (name === null || name === void 0 ? void 0 : name.toLowerCase().indexOf(lowercaseSearch)) > -1;\n            });\n        }\n        const convertedUserGroups = userGroups.map((userGroup) => convertWorkspaceUserGroup(userGroup.userGroup));\n        return new InMemoryPaging(convertedUserGroups, limit, offset);\n    }\n}\n//# sourceMappingURL=index.js.map","import { __rest } from \"tslib\";\nimport { convertWorkspaceUserGroup } from \"./UserGroupsConverter.js\";\nimport { convertUsersItem } from \"./UsersConverter.js\";\nimport { isGranularUserAccessGrantee, } from \"@gooddata/sdk-model\";\nimport isEmpty from \"lodash/isEmpty.js\";\nfunction isGranteeUserInfo(grantee) {\n    return !isEmpty(grantee) && grantee.user !== undefined;\n}\nexport const convertGranteeEntry = (item) => {\n    if (isGranteeUserInfo(item.aclEntry.grantee)) {\n        return {\n            type: \"user\",\n            user: convertUsersItem(item.aclEntry.grantee.user),\n        };\n    }\n    else {\n        return {\n            type: \"group\",\n            userGroup: convertWorkspaceUserGroup(item.aclEntry.grantee.userGroup),\n        };\n    }\n};\nexport const mapUserFullName = (user) => {\n    if (user.fullName) {\n        return user.fullName;\n    }\n    return `${user.firstName} ${user.lastName}`;\n};\nexport const convertWorkspaceUserToAvailableUserAccessGrantee = (user) => {\n    var _a;\n    return ({\n        type: \"user\",\n        ref: user.ref,\n        name: mapUserFullName(user),\n        email: user.email,\n        status: (_a = user.status) !== null && _a !== void 0 ? _a : \"DISABLED\",\n    });\n};\nexport const convertWorkspaceUserGroupToAvailableUserGroupAccessGrantee = (group) => {\n    var _a;\n    return ({\n        type: \"group\",\n        ref: group.ref,\n        name: (_a = group.name) !== null && _a !== void 0 ? _a : \"\",\n    });\n};\nexport const convertGranularAccessGranteeToAcessGrantee = (grantee) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { permissions, inheritedPermissions } = grantee, rest = __rest(grantee, [\"permissions\", \"inheritedPermissions\"]);\n    const type = isGranularUserAccessGrantee(grantee) ? \"user\" : \"group\";\n    return Object.assign(Object.assign({}, rest), { type });\n};\n//# sourceMappingURL=AccessControlConverter.js.map","import { objRefToUri } from \"../../../utils/api.js\";\nimport { convertGranteeEntry, convertWorkspaceUserGroupToAvailableUserGroupAccessGrantee, convertWorkspaceUserToAvailableUserAccessGrantee, convertGranularAccessGranteeToAcessGrantee, } from \"../../../convertors/fromBackend/AccessControlConverter.js\";\nimport { BearWorkspaceUsersQuery } from \"../users/index.js\";\nimport { BearWorkspaceUserGroupsQuery } from \"../userGroups/index.js\";\nexport class BearWorkspaceAccessControlService {\n    constructor(authCall, workspace) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.users = new BearWorkspaceUsersQuery(this.authCall, this.workspace);\n        this.userGroups = new BearWorkspaceUserGroupsQuery(this.authCall, this.workspace);\n    }\n    async getAccessList(sharedObject) {\n        const objectUri = await objRefToUri(sharedObject, this.workspace, this.authCall);\n        const granteesList = await this.authCall((sdk) => sdk.project.getGranteesInfo(objectUri, {}));\n        const { grantees: { items }, } = granteesList;\n        return items.map(convertGranteeEntry);\n    }\n    async grantAccess(sharedObject, grantees) {\n        const objectUri = await objRefToUri(sharedObject, this.workspace, this.authCall);\n        const granteeUris = await Promise.all(grantees.map((grantee) => objRefToUri(grantee.granteeRef, this.workspace, this.authCall)));\n        return this.authCall((sdk) => sdk.project.addGrantees(objectUri, granteeUris));\n    }\n    async revokeAccess(sharedObject, grantees) {\n        const objectUri = await objRefToUri(sharedObject, this.workspace, this.authCall);\n        const granteeUris = await Promise.all(grantees.map((grantee) => objRefToUri(grantee.granteeRef, this.workspace, this.authCall)));\n        return this.authCall((sdk) => sdk.project.removeGrantees(objectUri, granteeUris));\n    }\n    /**\n     * Bear has no granular permissions, which means that the user or group either have permissions\n     * or they don't. An empty array of grantee permissions will result in revoking the access\n     * for the grantee. An array of grantee permissions with some content will result in granting\n     * access for the grantee.\n     */\n    async changeAccess(sharedObject, grantees) {\n        const granteesToGrantAccess = grantees\n            .filter((grantee) => grantee.permissions.length > 0)\n            .map(convertGranularAccessGranteeToAcessGrantee);\n        const granteesToRevokeAccess = grantees\n            .filter((grantee) => grantee.permissions.length === 0)\n            .map(convertGranularAccessGranteeToAcessGrantee);\n        if (granteesToGrantAccess.length) {\n            await this.grantAccess(sharedObject, granteesToGrantAccess);\n        }\n        if (granteesToRevokeAccess.length) {\n            await this.revokeAccess(sharedObject, granteesToRevokeAccess);\n        }\n    }\n    async getAvailableGrantees(_sharedObject, search) {\n        let usersOption = {};\n        let groupsOption = {};\n        if (search) {\n            usersOption = Object.assign(Object.assign({}, usersOption), { search: `%${search}` });\n            groupsOption = Object.assign(Object.assign({}, groupsOption), { search: `${search}` });\n        }\n        const workspaceUsersQuery = this.users.withOptions(usersOption).query();\n        const workspaceGroupsQuery = this.userGroups.query(groupsOption);\n        const [users, groups] = await Promise.all([workspaceUsersQuery, workspaceGroupsQuery]);\n        return [\n            ...users.items.map(convertWorkspaceUserToAvailableUserAccessGrantee),\n            ...groups.items.map(convertWorkspaceUserGroupToAvailableUserGroupAccessGrantee),\n        ];\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2021 GoodData Corporation\nimport { BearExecution } from \"./execution/executionFactory.js\";\nimport { BearWorkspaceMeasures } from \"./measures/index.js\";\nimport { BearWorkspaceStyling } from \"./styling/styling.js\";\nimport { BearWorkspaceCatalogFactory } from \"./catalog/factory.js\";\nimport { BearWorkspaceSettings } from \"./settings/settings.js\";\nimport { BearWorkspacePermissionsFactory } from \"./permissions/permissions.js\";\nimport { BearWorkspaceInsights } from \"./insights/index.js\";\nimport { BearWorkspaceDataSets } from \"./datasets/index.js\";\nimport { BearWorkspaceDashboards } from \"./dashboards/index.js\";\nimport { BearWorkspaceUsersQuery } from \"./users/index.js\";\nimport { BearWorkspaceDateFilterConfigsQuery } from \"./dateFilterConfigs/index.js\";\nimport { BearWorkspaceAttributes } from \"./attributes/index.js\";\nimport { BearWorkspaceFacts } from \"./facts/index.js\";\nimport { BearWorkspaceUserGroupsQuery } from \"./userGroups/index.js\";\nimport { BearWorkspaceAccessControlService } from \"./accessControl/index.js\";\nexport class BearWorkspace {\n    constructor(authCall, workspace, descriptor) {\n        this.authCall = authCall;\n        this.workspace = workspace;\n        this.descriptor = descriptor;\n    }\n    async getDescriptor() {\n        var _a, _b;\n        if (!this.descriptor) {\n            const project = await this.authCall(async (sdk) => {\n                return sdk.project.getProject(this.workspace);\n            });\n            return {\n                id: this.workspace,\n                description: (_a = project === null || project === void 0 ? void 0 : project.meta.summary) !== null && _a !== void 0 ? _a : \"\",\n                title: (_b = project === null || project === void 0 ? void 0 : project.meta.title) !== null && _b !== void 0 ? _b : \"\",\n                // isDemo:  TO-DO: Implement this using sdk.project.getProjectsWithPaging, which contains demoWorkspace prop\n            };\n        }\n        return this.descriptor;\n    }\n    async getParentWorkspace() {\n        // Bear has no workspace parenting\n        return undefined;\n    }\n    attributes() {\n        return new BearWorkspaceAttributes(this.authCall, this.workspace);\n    }\n    execution() {\n        return new BearExecution(this.authCall, this.workspace);\n    }\n    settings() {\n        return new BearWorkspaceSettings(this.authCall, this.workspace);\n    }\n    insights() {\n        return new BearWorkspaceInsights(this.authCall, this.workspace);\n    }\n    dashboards() {\n        return new BearWorkspaceDashboards(this.authCall, this.workspace);\n    }\n    measures() {\n        return new BearWorkspaceMeasures(this.authCall, this.workspace);\n    }\n    facts() {\n        return new BearWorkspaceFacts(this.authCall, this.workspace);\n    }\n    styling() {\n        return new BearWorkspaceStyling(this.authCall, this.workspace);\n    }\n    catalog() {\n        return new BearWorkspaceCatalogFactory(this.authCall, this.workspace);\n    }\n    datasets() {\n        return new BearWorkspaceDataSets(this.authCall, this.workspace);\n    }\n    permissions() {\n        return new BearWorkspacePermissionsFactory(this.authCall, this.workspace);\n    }\n    users() {\n        return new BearWorkspaceUsersQuery(this.authCall, this.workspace);\n    }\n    dateFilterConfigs() {\n        return new BearWorkspaceDateFilterConfigsQuery(this.authCall, this.workspace);\n    }\n    userGroups() {\n        return new BearWorkspaceUserGroupsQuery(this.authCall, this.workspace);\n    }\n    accessControl() {\n        return new BearWorkspaceAccessControlService(this.authCall, this.workspace);\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport { ServerPaging } from \"@gooddata/sdk-backend-base\";\nimport { NotSupported, } from \"@gooddata/sdk-backend-spi\";\nimport { convertUserProject } from \"../../convertors/toBackend/WorkspaceConverter.js\";\nimport { userLoginMd5FromAuthenticatedPrincipal } from \"../../utils/api.js\";\nimport { BearWorkspace } from \"../workspace/index.js\";\nexport class BearWorkspaceQueryFactory {\n    constructor(authCall) {\n        this.authCall = authCall;\n    }\n    forUser(userId) {\n        return new BearWorkspaceQuery(this.authCall, userId);\n    }\n    forCurrentUser() {\n        return new BearWorkspaceQuery(this.authCall);\n    }\n}\nclass BearWorkspaceQuery {\n    constructor(authCall, userId) {\n        this.authCall = authCall;\n        this.userId = userId;\n        this.limit = 100;\n        this.offset = 0;\n        this.search = undefined;\n    }\n    withLimit(limit) {\n        this.limit = limit;\n        return this;\n    }\n    withOffset(offset) {\n        this.offset = offset;\n        return this;\n    }\n    withParent() {\n        throw new NotSupported(\"not supported\");\n    }\n    withSearch(search) {\n        this.search = search;\n        return this;\n    }\n    query() {\n        return this.queryWorker();\n    }\n    async queryWorker() {\n        return ServerPaging.for(async ({ limit, offset }) => {\n            const data = await this.authCall(async (sdk, { getPrincipal }) => {\n                const userId = this.userId || (await userLoginMd5FromAuthenticatedPrincipal(getPrincipal));\n                return sdk.project.getProjectsWithPaging(userId, offset, limit, this.search);\n            });\n            const { items, paging: { totalCount }, } = data.userProjects;\n            return {\n                items: items.map((item) => {\n                    const descriptor = convertUserProject(item);\n                    return new BearWorkspace(this.authCall, descriptor.id, descriptor);\n                }),\n                totalCount,\n            };\n        }, this.limit, this.offset);\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2020-2022 GoodData Corporation\nimport { NotSupported } from \"@gooddata/sdk-backend-spi\";\nimport { userLoginMd5FromAuthenticatedPrincipalWithAnonymous } from \"../../utils/api.js\";\nimport { ANONYMOUS_USER_SETTINGS } from \"../constants.js\";\nimport { DefaultUiSettings } from \"../../uiSettings.js\";\nexport class BearUserSettingsService {\n    constructor(authCall) {\n        this.authCall = authCall;\n    }\n    async getSettings() {\n        return this.authCall(async (sdk, { getPrincipal }) => {\n            const userLoginMd5 = await userLoginMd5FromAuthenticatedPrincipalWithAnonymous(getPrincipal);\n            // for anonymous users, return defaults\n            if (!userLoginMd5) {\n                return ANONYMOUS_USER_SETTINGS;\n            }\n            const [flags, currentProfile, separators] = await Promise.all([\n                sdk.user.getUserFeatureFlags(userLoginMd5),\n                sdk.user.getCurrentProfile(),\n                sdk.user.getUserRegionalNumberFormatting(userLoginMd5),\n            ]);\n            const { language } = currentProfile;\n            return Object.assign(Object.assign(Object.assign({}, DefaultUiSettings), { userId: userLoginMd5, locale: language, separators }), flags);\n        });\n    }\n    setLocale(_locale) {\n        throw new NotSupported(\"Backend does not support user locale setup\");\n    }\n}\n//# sourceMappingURL=settings.js.map","import { BearUserSettingsService } from \"./settings.js\";\nimport { convertUser } from \"../../convertors/fromBackend/UsersConverter.js\";\nexport class BearUserService {\n    constructor(authCall) {\n        this.authCall = authCall;\n    }\n    settings() {\n        return new BearUserSettingsService(this.authCall);\n    }\n    getUser() {\n        return this.authCall(async (sdk) => {\n            const accountSettings = await sdk.user.getCurrentProfile();\n            return convertUser(accountSettings);\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","import compact from \"lodash/compact.js\";\nimport includes from \"lodash/includes.js\";\nimport isArray from \"lodash/isArray.js\";\nimport uniq from \"lodash/uniq.js\";\nconst getUriFromPairByIdentifier = (identifier, uriIdentifierPairs, excludeUris) => {\n    const resolvedPair = uriIdentifierPairs\n        .filter((result) => !includes(excludeUris, result.uri))\n        .find((result) => result.identifier === identifier);\n    return resolvedPair === null || resolvedPair === void 0 ? void 0 : resolvedPair.uri;\n};\n/**\n * @internal\n */\nexport const sanitizeDrillingActivationPostMessageData = async (workspace, postMessageData, idToUriConverter) => {\n    const { uris, identifiers, composedFrom } = postMessageData;\n    const simpleUris = isArray(uris) ? uris : [];\n    const simpleIdentifiers = isArray(identifiers) ? identifiers : [];\n    const composedFromUris = (composedFrom === null || composedFrom === void 0 ? void 0 : composedFrom.uris) && isArray(composedFrom.uris) ? composedFrom.uris : [];\n    const composedFromIdentifiers = (composedFrom === null || composedFrom === void 0 ? void 0 : composedFrom.identifiers) && isArray(composedFrom.identifiers) ? composedFrom.identifiers : [];\n    const allIdentifiers = uniq([...simpleIdentifiers, ...composedFromIdentifiers]);\n    const urisFromIdentifiers = allIdentifiers.length\n        ? await idToUriConverter(workspace, allIdentifiers)\n        : [];\n    const allUris = uniq([\n        ...simpleUris,\n        ...compact(simpleIdentifiers.map((identifier) => getUriFromPairByIdentifier(identifier, urisFromIdentifiers, simpleUris))),\n    ]);\n    const allComposedFromUris = uniq([\n        ...composedFromUris,\n        ...compact(composedFromIdentifiers.map((identifier) => getUriFromPairByIdentifier(identifier, urisFromIdentifiers, composedFromUris))),\n    ]);\n    return { uris: allUris, composedFrom: { uris: allComposedFromUris } };\n};\n//# sourceMappingURL=index.js.map","// (C) 2021-2022 GoodData Corporation\nimport { validatePluginUrlIsSane } from \"@gooddata/sdk-backend-base\";\nimport isEmpty from \"lodash/isEmpty.js\";\nexport class SecuritySettingsService {\n    /**\n     * Constructs a new SecuritySettingsService\n     * @param authCall - call guard to perform API calls through\n     * @param scope - URI of the scope. For now only the organization (domain) URI is supported by the backend.\n     *  The plan is to support also workspace URI and user profile URI.\n     */\n    constructor(authCall, scope) {\n        this.authCall = authCall;\n        this.scope = scope;\n        this.isUrlValid = (url, context) => {\n            return this.authCall(async (sdk) => sdk.xhr\n                .postParsed(\"/gdc/securitySettings/validate\", {\n                body: {\n                    validationRequest: {\n                        type: context,\n                        value: url,\n                        scope: this.scope,\n                    },\n                },\n            })\n                .then(({ validationResponse }) => {\n                return validationResponse.valid;\n            }));\n        };\n        this.isDashboardPluginUrlValid = async (url, workspace) => {\n            var _a;\n            const sanitizationError = validatePluginUrlIsSane(url);\n            if (sanitizationError) {\n                console.warn(\"Dashboard plugin URL is not valid: \", sanitizationError);\n                return false;\n            }\n            const setting = await this.authCall(async (sdk) => {\n                return sdk.project.getConfigItem(workspace, \"dashboardPluginHosts\");\n            });\n            return validateAgainstList(url, (_a = setting === null || setting === void 0 ? void 0 : setting.settingItem) === null || _a === void 0 ? void 0 : _a.value);\n        };\n    }\n}\nexport function validateAgainstList(url, listContent) {\n    if (!listContent || isEmpty(listContent) || typeof listContent !== \"string\") {\n        return false;\n    }\n    const allowedHosts = listContent\n        .split(\";\")\n        .map((entry) => entry.trim())\n        .filter((entry) => !isEmpty(entry));\n    return allowedHosts.some((host) => url.startsWith(host));\n}\n//# sourceMappingURL=securitySettings.js.map","// (C) 2022 GoodData Corporation\nimport { NotSupported } from \"@gooddata/sdk-backend-spi\";\nexport class OrganizationStylingService {\n    constructor() {\n        this.defaultReject = (message) => Promise.reject(new NotSupported(message));\n        this.defaultRejectTheme = () => this.defaultReject(\"Backend does not support theming on organization level\");\n        this.defaultRejectColorPalette = () => this.defaultReject(\"Backend does not support color palette on organization level\");\n        this.getThemes = () => this.defaultRejectTheme();\n        this.getActiveTheme = () => this.defaultRejectTheme();\n        this.setActiveTheme = () => this.defaultRejectTheme();\n        this.clearActiveTheme = () => this.defaultRejectTheme();\n        this.createTheme = (_theme) => this.defaultRejectTheme();\n        /**\n         * Update existing theme on organization level.\n         *\n         * @returns promise\n         */\n        this.updateTheme = (_theme) => this.defaultRejectTheme();\n        /**\n         * Delete theme on organization level.\n         *\n         * @returns promise\n         */\n        this.deleteTheme = (_themeRef) => this.defaultRejectTheme();\n        this.getColorPalettes = () => this.defaultRejectColorPalette();\n        this.getActiveColorPalette = () => this.defaultRejectColorPalette();\n        this.setActiveColorPalette = () => this.defaultRejectColorPalette();\n        this.clearActiveColorPalette = () => this.defaultRejectColorPalette();\n        this.createColorPalette = (_colorPalette) => this.defaultRejectColorPalette();\n        this.updateColorPalette = (_colorPalette) => this.defaultRejectColorPalette();\n        this.deleteColorPalette = (_colorPaletteRef) => this.defaultRejectColorPalette();\n    }\n}\n//# sourceMappingURL=styling.js.map","// (C) 2021-2022 GoodData Corporation\nimport { NotSupported, } from \"@gooddata/sdk-backend-spi\";\nimport { SecuritySettingsService } from \"./securitySettings.js\";\nimport { OrganizationStylingService } from \"./styling.js\";\nexport class BearOrganization {\n    constructor(authCall, organizationId, organizationName) {\n        this.authCall = authCall;\n        this.organizationId = organizationId;\n        this.organizationName = organizationName;\n    }\n    async getDescriptor() {\n        // if we already have the data, no reason to download them again\n        if (this.organizationName) {\n            return {\n                id: this.organizationId,\n                title: this.organizationName,\n            };\n        }\n        const accountInfo = await this.authCall((sdk) => sdk.user.getAccountInfo());\n        return {\n            id: this.organizationId,\n            title: accountInfo.organizationName,\n        };\n    }\n    securitySettings() {\n        const organizationUri = `/gdc/domains/${this.organizationId}`;\n        return new SecuritySettingsService(this.authCall, organizationUri);\n    }\n    styling() {\n        return new OrganizationStylingService();\n    }\n    settings() {\n        throw new NotSupported(\"Backend does not support organization settings service\");\n    }\n}\nexport class BearOrganizations {\n    constructor(authCall) {\n        this.authCall = authCall;\n    }\n    async getCurrentOrganization() {\n        const { organization: { id, name }, } = await this.authCall((sdk) => sdk.organization.getCurrentOrganization());\n        return new BearOrganization(this.authCall, id, name);\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport class BearEntitlements {\n    async resolveEntitlements() {\n        return Promise.resolve([{ name: \"PdfExports\" }]);\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2023 GoodData Corporation\nimport { getFactory as createSdk } from \"@gooddata/api-client-bear\";\nimport { NotAuthenticated, isNotAuthenticated, } from \"@gooddata/sdk-backend-spi\";\nimport { invariant } from \"ts-invariant\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isError from \"lodash/isError.js\";\nimport { convertApiError, isApiResponseError } from \"../utils/errorHandling.js\";\nimport { BearWorkspace } from \"./workspace/index.js\";\nimport { BearWorkspaceQueryFactory } from \"./workspaces/index.js\";\nimport { BearUserService } from \"./user/index.js\";\nimport { convertInsight } from \"../convertors/toBackend/InsightConverter.js\";\nimport { sanitizeDrillingActivationPostMessageData } from \"./drillingPostMessageData/index.js\";\nimport { NoopAuthProvider, AuthProviderCallGuard, } from \"@gooddata/sdk-backend-base\";\nimport { BearOrganization, BearOrganizations } from \"./organization/index.js\";\nimport { LIB_VERSION, LIB_NAME } from \"../__version.js\";\nimport { BearEntitlements } from \"./entitlements/index.js\";\nconst CAPABILITIES = {\n    canCalculateGrandTotals: true,\n    canCalculateSubTotals: true,\n    canCalculateTotals: true,\n    canCalculateNativeTotals: true,\n    canExportCsv: true,\n    canExportXlsx: true,\n    canSortData: true,\n    canTransformExistingResult: false,\n    canWorkspaceManagerSeeEverySharedObject: false,\n    maxDimensions: 2,\n    supportsElementUris: true,\n    supportsObjectUris: true,\n    supportsCsvUploader: true,\n    supportsLegacyReports: true,\n    supportsRankingFilter: true,\n    supportsRankingFilterWithMeasureValueFilter: true,\n    supportsElementsQueryParentFiltering: true,\n    supportsKpiWidget: true,\n    supportsWidgetEntity: true,\n    supportsHyperlinkAttributeLabels: true,\n    supportsGenericDateAttributeElements: true,\n    supportsExplain: false,\n    supportsAccessControl: true,\n    usesStrictAccessControl: false,\n    supportsOwners: true,\n    allowsInconsistentRelations: false,\n    supportsTimeGranularities: false,\n    supportsHierarchicalWorkspaces: false,\n    supportsCustomColorPalettes: true,\n    supportsOrganizationSettings: false,\n    supportsInlineMeasures: false,\n    supportsBootstrapResource: true,\n    supportsMetadataObjectLocking: true,\n    supportsGranularAccessControl: false,\n    supportsEveryoneUserGroupForAccessControl: true,\n    supportsNonProductionDatasets: true,\n    supportsShowAllAttributeValues: false,\n    supportsSeparateLatitudeLongitudeLabels: false,\n    supportsEnumeratingDatetimeAttributes: true,\n};\n/**\n * This implementation of analytical backend uses the gooddata-js API client to realize the SPI.\n *\n * The only thing worth noting about this impl is the handling of SDK instance creation and authentication:\n *\n * - New instance of SDK is created for each instance of BearBackend; new instance of BearBackend is created\n *   every time onHostname, withCredentials or withTelemetry methods are called (similar to how we did it\n *   so far with the clone())\n *\n * - Authentication (login) WILL be done every time credentials are provided using the\n *   withCredentials. No other methods in the bear backend lead to login.\n *\n * - Authentication is done at construction time; the constructor MAY receive an instance of deferred authentication -\n *   this is to cater for cases when withCredentials is called, new instance of backend is returned and then\n *   someone calls withTelemetry on this instance ⇒ in that case there is no need to re-initiate login.\n *\n */\nexport class BearBackend {\n    constructor(config, implConfig, telemetry, authProvider) {\n        var _a, _b;\n        this.capabilities = CAPABILITIES;\n        this.isAuthenticated = async () => {\n            try {\n                // the return await is crucial here so that we also catch the async errors\n                return await this.authProvider.getCurrentPrincipal({ client: this.sdk, backend: this });\n            }\n            catch (err) {\n                if (isNotAuthenticatedResponse(err)) {\n                    return null;\n                }\n                throw err;\n            }\n        };\n        this.authenticate = (force) => {\n            if (!force) {\n                return this.authApiCall(async (sdk) => {\n                    const principal = await this.authProvider.getCurrentPrincipal({ client: sdk, backend: this });\n                    invariant(principal, \"Principal must be defined\");\n                    return principal;\n                });\n            }\n            return this.triggerAuthentication(true);\n        };\n        /**\n         * Perform API call that requires authentication. The call will be decorated with error handling\n         * such that not authenticated errors will trigger authentication flow AND other errors will be\n         * converted using the provided converter and throw.\n         *\n         * @param call - a call which requires an authenticated session\n         * @param errorConverter - converter from rest client errors to analytical backend errors\n         */\n        this.authApiCall = async (call, errorConverter = convertApiError) => {\n            try {\n                // the return await is crucial here so that we also catch the async errors\n                return await call(this.sdk, await this.getAsyncCallContext());\n            }\n            catch (err) {\n                invariant(isError(err)); // if this bombs, the code in the try block threw something strange\n                // if we receive some other error than missing auth, we fail fast: no need to try the auth\n                // one more time, since it was not the problem in the first place\n                if (!isNotAuthenticatedResponse(err)) {\n                    throw this.handleNotAuthenticated(errorConverter(err));\n                }\n                // else we try to trigger the authentication once more and then we repeat the original call\n                // with the newly obtained async call context\n                try {\n                    await this.triggerAuthentication();\n                    // the return await is crucial here so that we also catch the async errors\n                    return await call(this.sdk, await this.getAsyncCallContext());\n                }\n                catch (err2) {\n                    invariant(isError(err2)); // if this bombs, the code in the try block threw something strange\n                    throw this.handleNotAuthenticated(errorConverter(err2));\n                }\n            }\n        };\n        this.getAuthenticationContext = () => ({ client: this.sdk, backend: this });\n        this.triggerAuthentication = async (reset = false) => {\n            if (!this.authProvider) {\n                throw new NotAuthenticated(\"Backend is not set up with authentication provider.\");\n            }\n            if (reset) {\n                this.authProvider.reset();\n            }\n            try {\n                // the return await is crucial here so that we also catch the async errors\n                return await this.authProvider.authenticate(this.getAuthenticationContext());\n            }\n            catch (e) {\n                invariant(isError(e)); // if this bombs, the code in the try block threw something strange\n                throw this.handleNotAuthenticated(convertApiError(e));\n            }\n        };\n        /**\n         * Triggers onNotAuthenticated handler of the the authProvider if the provided error is an instance\n         * of {@link @gooddata/sdk-backend-spi#NotAuthenticated}.\n         *\n         * @param err - error to observe and trigger handler for\n         * @returns the original error to facilitate re-throwing\n         */\n        this.handleNotAuthenticated = (err) => {\n            var _a, _b;\n            if (isNotAuthenticated(err)) {\n                (_b = (_a = this.authProvider).onNotAuthenticated) === null || _b === void 0 ? void 0 : _b.call(_a, { client: this.sdk, backend: this }, err);\n            }\n            return err;\n        };\n        this.getAsyncCallContext = async () => {\n            const getPrincipal = async () => {\n                if (!this.authProvider) {\n                    throw new NotAuthenticated(\"Cannot obtain principal without an authProvider.\");\n                }\n                const principal = await this.authProvider.getCurrentPrincipal({\n                    client: this.sdk,\n                    backend: this,\n                });\n                return principal !== null && principal !== void 0 ? principal : this.authProvider.authenticate(this.getAuthenticationContext());\n            };\n            return {\n                getPrincipal,\n            };\n        };\n        this.config = configSanitize(config);\n        this.implConfig = bearConfigSanitize(implConfig);\n        this.telemetry = telemetrySanitize(telemetry);\n        this.authProvider = authProvider || new NoopAuthProvider();\n        this.sdk = newSdkInstance(this.config, this.implConfig, this.telemetry);\n        // do the ajax setup without the need to call the ajaxSetup legacy function\n        // this is useful when deriving new instance using withTelemetry and similar functions\n        if (this.implConfig.ajaxSettings) {\n            this.sdk.xhr.ajaxSetup(this.implConfig.ajaxSettings);\n        }\n        (_b = (_a = this.authProvider).initializeClient) === null || _b === void 0 ? void 0 : _b.call(_a, this.sdk);\n        if (this.implConfig.onLegacyCallbacksReady) {\n            const legacyFunctions = {\n                openAsReport: (workspace, insight) => {\n                    const visualizationObject = convertInsight(insight);\n                    return this.authApiCall((sdk) => sdk.md.openVisualizationAsReport(workspace, { visualizationObject }));\n                },\n                getBootstrapResource: (options) => {\n                    return this.authApiCall((sdk) => sdk.user.getBootstrapResource(options));\n                },\n                ajaxSetup: (settings) => {\n                    // store the last used settings so that we can use them if copying this backend in withTelemetry for example\n                    this.lastAjaxSetupSettings = settings;\n                    this.sdk.xhr.ajaxSetup(settings);\n                },\n                log: (uri, logMessages) => this.sdk.xhr.post(uri, { data: JSON.stringify({ logMessages }) }),\n                updateProfileCurrentWorkspace: async (workspace, profileSetting) => {\n                    var _a, _b;\n                    const userId = (_b = (_a = profileSetting.links) === null || _a === void 0 ? void 0 : _a.profile) === null || _b === void 0 ? void 0 : _b.split(\"/\").pop();\n                    invariant(userId, \"Cannot obtain userId from IProfileSetting\");\n                    const newProfileSetting = Object.assign(Object.assign({}, profileSetting), { currentProjectUri: `/gdc/projects/${workspace}` });\n                    await this.authApiCall((sdk) => sdk.user.updateProfileSettings(userId, { profileSetting: newProfileSetting }));\n                },\n                sanitizeDrillingActivationPostMessageData: (workspace, postMessageData) => sanitizeDrillingActivationPostMessageData(workspace, postMessageData, (workspace, identifiers) => this.authApiCall((sdk) => sdk.md.getUrisFromIdentifiers(workspace, identifiers))),\n                getProjectDashboards: (workspace) => {\n                    return this.authApiCall((sdk) => sdk.md.getProjectDashboards(workspace));\n                },\n                getUrisFromIdentifiers: (workspace, identifiers) => {\n                    return this.authApiCall((sdk) => sdk.md.getUrisFromIdentifiers(workspace, identifiers));\n                },\n                getObjectsByUri: (workspace, uris) => {\n                    return this.authApiCall((sdk) => sdk.md.getObjects(workspace, uris));\n                },\n                getVisualizationObject: (workspace, uri) => {\n                    return this.authApiCall(async (sdk) => {\n                        const [visObject] = await sdk.md.getObjects(workspace, [uri]);\n                        return visObject;\n                    });\n                },\n                getUISettings: () => {\n                    return this.sdk.xhr\n                        .get(\"/gdc/account/organization/settings\")\n                        .then((response) => response.getData());\n                },\n                isDomainAdmin: (domainUri) => {\n                    return this.authApiCall((sdk) => {\n                        return sdk.xhr\n                            .get(`${domainUri}/config`)\n                            .then((_) => true)\n                            .catch((error) => {\n                            if (isApiResponseError(error)) {\n                                // when user _is not_ domain admin, then attempting to retrieve domain config\n                                // will fail fast with 403\n                                return error.response.status !== 403;\n                            }\n                            return true;\n                        });\n                    });\n                },\n            };\n            this.implConfig.onLegacyCallbacksReady(legacyFunctions);\n        }\n    }\n    onHostname(hostname) {\n        return new BearBackend(Object.assign(Object.assign({}, this.config), { hostname }), this.implConfig, this.telemetry);\n    }\n    withTelemetry(componentName, props) {\n        return new BearBackend(this.config, Object.assign(Object.assign({}, this.implConfig), { ajaxSettings: this.lastAjaxSetupSettings }), { componentName, props: Object.keys(props) }, this.authProvider);\n    }\n    withAuthentication(provider) {\n        const guardedAuthProvider = new AuthProviderCallGuard(provider);\n        return new BearBackend(this.config, this.implConfig, this.telemetry, guardedAuthProvider);\n    }\n    deauthenticate() {\n        if (!this.authProvider) {\n            throw new NotAuthenticated(\"Backend is not set up with authentication provider.\");\n        }\n        return this.authProvider.deauthenticate(this.getAuthenticationContext());\n    }\n    organization(organizationId) {\n        return new BearOrganization(this.authApiCall, organizationId);\n    }\n    organizations() {\n        return new BearOrganizations(this.authApiCall);\n    }\n    entitlements() {\n        return new BearEntitlements();\n    }\n    currentUser() {\n        return new BearUserService(this.authApiCall);\n    }\n    workspace(id) {\n        return new BearWorkspace(this.authApiCall, id);\n    }\n    workspaces() {\n        return new BearWorkspaceQueryFactory(this.authApiCall);\n    }\n}\n//\n// internals\n//\nfunction isNotAuthenticatedResponse(err) {\n    return isApiResponseError(err) && err.response.status === 401;\n}\nfunction configSanitize(config) {\n    return config !== null && config !== void 0 ? config : {};\n}\nfunction bearConfigSanitize(implConfig) {\n    return implConfig !== null && implConfig !== void 0 ? implConfig : {};\n}\nfunction telemetrySanitize(telemetry) {\n    return telemetry !== null && telemetry !== void 0 ? telemetry : {};\n}\nfunction newSdkInstance(config, implConfig, telemetry) {\n    const sdk = implConfig.factory ? implConfig.factory() : createSdk();\n    if (config.hostname) {\n        sdk.config.setCustomDomain(config.hostname);\n    }\n    if (implConfig.packageName && implConfig.packageVersion) {\n        sdk.config.setJsPackage(implConfig.packageName, implConfig.packageVersion);\n    }\n    else {\n        sdk.config.setJsPackage(LIB_NAME, LIB_VERSION);\n    }\n    if (telemetry.componentName) {\n        sdk.config.setRequestHeader(\"X-GDC-JS-SDK-COMP\", telemetry.componentName);\n        if (telemetry.props && !isEmpty(telemetry.props)) {\n            sdk.config.setRequestHeader(\"X-GDC-JS-SDK-COMP-PROPS\", telemetry.props.join(\",\"));\n        }\n    }\n    return sdk;\n}\n//# sourceMappingURL=index.js.map","// (C) 2021 GoodData Corporation\n// DO NOT CHANGE THIS FILE, IT IS RE-GENERATED ON EVERY BUILD\nexport const LIB_VERSION = \"0.0.0-dev.0\";\nexport const LIB_NAME = \"@gooddata/sdk-backend-bear\";\n//# sourceMappingURL=__version.js.map","import { invariant } from \"ts-invariant\";\nimport { NotAuthenticated, } from \"@gooddata/sdk-backend-spi\";\n/**\n * Base for other IAuthenticationProvider implementations.\n *\n * @public\n */\nexport class BearAuthProviderBase {\n    async deauthenticate(context) {\n        const sdk = context.client;\n        // we do not return the promise to logout as we do not want to return the response\n        await sdk.user.logout();\n    }\n    async getCurrentPrincipal(context) {\n        if (!this.principal) {\n            await this.obtainCurrentPrincipal(context);\n        }\n        return this.principal || null;\n    }\n    async obtainCurrentPrincipal(context) {\n        const sdk = context.client;\n        const currentProfile = await sdk.user.getCurrentProfile();\n        this.principal = {\n            userId: currentProfile.login,\n            userMeta: currentProfile,\n        };\n    }\n}\n/**\n * This implementation of authentication provider does login with fixed username and password.\n *\n * @public\n */\nexport class FixedLoginAndPasswordAuthProvider extends BearAuthProviderBase {\n    constructor(username, password) {\n        super();\n        this.username = username;\n        this.password = password;\n    }\n    async authenticate(context) {\n        const sdk = context.client;\n        await sdk.user.login(this.username, this.password);\n        await this.obtainCurrentPrincipal(context);\n        invariant(this.principal, \"Principal must be obtainable after login\");\n        return this.principal;\n    }\n}\n/**\n * This implementation of authentication provider defers the responsibility for performing authentication\n * to the context in which it exists.\n *\n * @remarks\n * In other words it expects that the application will take care of driving\n * the authentication and creating a correct session in which the Bear backend can make authenticated calls.\n *\n * You may use the provider's ability to use passed `NotAuthenticatedHandler` function. This will be called\n * every time a NotAuthenticated error is raised by the backend. Your application can pass a custom handler of\n * this event - typically something that will start driving the authentication from a single place.\n *\n * Note: the not authenticated handler MAY be called many times in succession so you may want to wrap it in a\n * call guard or in a debounce.\n *\n * @public\n */\nexport class ContextDeferredAuthProvider extends BearAuthProviderBase {\n    constructor(notAuthenticatedHandler) {\n        super();\n        this.notAuthenticatedHandler = notAuthenticatedHandler;\n        this.onNotAuthenticated = (context, error) => {\n            var _a;\n            (_a = this.notAuthenticatedHandler) === null || _a === void 0 ? void 0 : _a.call(this, context, error);\n        };\n    }\n    async authenticate(context) {\n        const sdk = context.client;\n        // check if the user is logged in, implicitly triggering token renewal in case it is needed\n        const isLoggedIn = await sdk.user.isLoggedIn();\n        if (!isLoggedIn) {\n            throw new NotAuthenticated(\"Please make sure the context is already authenticated when using ContextDeferredAuthProvider\");\n        }\n        await this.obtainCurrentPrincipal(context);\n        invariant(this.principal, \"Principal must be obtainable after login\");\n        return this.principal;\n    }\n}\nconst AnonymousUser = {\n    userId: \"anonymous\",\n};\n/**\n * This is a noop implementation of bear authentication provider - it does nothing and assumes anonymous user.\n *\n * @public\n */\nexport class AnonymousAuthProvider {\n    async authenticate(context) {\n        var _a;\n        const user = await context.client.user.getCurrentProfile();\n        return Promise.resolve(Object.assign(Object.assign({}, AnonymousUser), { userMeta: {\n                links: {\n                    // we need the actual self link of the user from the proxy, this is needed by some of the API calls\n                    self: (_a = user.links) === null || _a === void 0 ? void 0 : _a.self,\n                },\n            } }));\n    }\n    getCurrentPrincipal(_context) {\n        return Promise.resolve(null);\n    }\n    deauthenticate(_context) {\n        return Promise.resolve();\n    }\n    reset() {\n        return;\n    }\n}\n//# sourceMappingURL=auth.js.map","// (C) 2022 GoodData Corporation\nimport {\n    IAnalyticalBackendConfig,\n    IAnalyticalBackend,\n    IAuthenticationContext,\n} from \"@gooddata/sdk-backend-spi\";\nimport bearFactory, { ContextDeferredAuthProvider } from \"@gooddata/sdk-backend-bear\";\nimport { getFactory as sdkFactory } from \"@gooddata/api-client-bear\";\n\n/**\n * A factory to create a new instance of the Bear backend.\n *\n * @public\n */\nexport default (config?: IAnalyticalBackendConfig, implConfig?: any): IAnalyticalBackend =>\n    bearFactory(config, {\n        ...implConfig,\n        packageName: NPM_PACKAGE_NAME,\n        packageVersion: NPM_PACKAGE_VERSION,\n    });\n\nexport const redirectToBearAuthentication = (context: IAuthenticationContext): void => {\n    window.location.href = `${context.backend.config.hostname}/account.html?lastUrl=${encodeURIComponent(\n        window.location.href,\n    )}`;\n};\n\nexport const redirectToBearSsoAuthentication = (context: IAuthenticationContext): void => {\n    sdkFactory({ domain: context.backend.config.hostname })\n        .user.initiateSamlSso(window.location.href)\n        .catch((error) => {\n            console.error(\"Failed to initialize Bear SAML SSO authentication.\", error);\n        });\n};\n\nexport { ContextDeferredAuthProvider };\n","import { BearBackend } from \"./backend/index.js\";\nimport { FixedLoginAndPasswordAuthProvider, ContextDeferredAuthProvider, BearAuthProviderBase, AnonymousAuthProvider, } from \"./auth.js\";\n/**\n * Returns function which creates instances of Analytical Backend implementation which works with the 'bear'\n * version of the GoodData platform.\n *\n * @param config - analytical backend configuration, may be omitted and provided later\n * @param implConfig - bear client specific configuration, may be omitted at this point but it cannot be provided later\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bearFactory(config, implConfig) {\n    return new BearBackend(config, implConfig);\n}\nexport { FixedLoginAndPasswordAuthProvider, ContextDeferredAuthProvider, BearAuthProviderBase, AnonymousAuthProvider, };\nexport default bearFactory;\n//\n// Exports to support legacy state in AD / KD\n//\nimport { convertScheduledMail, convertWidget, convertLayoutSize, convertLayoutItemSize, } from \"./convertors/toBackend/DashboardConverter.js\";\nimport { convertInsight, convertInsightDefinition } from \"./convertors/toBackend/InsightConverter.js\";\nimport { toAfmExecution } from \"./convertors/toBackend/afm/ExecutionConverter.js\";\n/**\n * @internal\n */\nexport { convertInsightDefinition, toAfmExecution, convertScheduledMail, convertWidget, convertLayoutSize, convertLayoutItemSize, };\n/**\n * Some of the convertors from bear types are exported through this so that they can be used by our\n * applications that were using bear-specific types in their state.\n *\n * All of these exports are marked as internal and can break at any time.\n *\n * @internal\n */\nexport const BearToBackendConvertors = {\n    convertInsight,\n    convertInsightDefinition,\n    toAfmExecution,\n    convertScheduledMail,\n    convertWidget,\n    convertLayoutSize,\n    convertLayoutItemSize,\n};\nimport { convertVisualization, convertBucket } from \"./convertors/fromBackend/VisualizationConverter.js\";\nimport { convertReferencesToUris, convertUrisToReferences, } from \"./convertors/fromBackend/ReferenceConverter.js\";\nimport { serializeProperties, deserializeProperties } from \"./convertors/fromBackend/PropertiesConverter.js\";\nimport { convertFilterContext, convertFilterContextItem, convertFilterReference, convertKpiDrill, convertVisualizationWidgetDrill, convertScheduledMail as convertScheduledMailFromBackend, convertDashboardDateFilterConfig, convertLayoutSize as convertLayoutSizeFromBackend, convertLayoutItemSize as convertLayoutItemSizeFromBackend, } from \"./convertors/fromBackend/DashboardConverter/index.js\";\n/**\n * @internal\n */\nexport { convertBucket, convertVisualization, convertReferencesToUris, convertFilterContext, convertFilterContextItem, convertFilterReference, convertKpiDrill, convertInsight, convertVisualizationWidgetDrill, convertScheduledMailFromBackend, convertDashboardDateFilterConfig, convertUrisToReferences, serializeProperties, deserializeProperties, convertLayoutSizeFromBackend, convertLayoutItemSizeFromBackend, };\n/**\n * Some of the convertors to bear types are exported through this so that they can be used by our\n * applications that were using bear-specific types in their state.\n *\n * All of these exports are marked as internal and can break at any time.\n *\n * @internal\n */\nexport const BackendToBearConvertors = {\n    convertBucket,\n    convertVisualization,\n    convertReferencesToUris,\n    convertFilterContext,\n    convertFilterContextItem,\n    convertFilterReference,\n    convertKpiDrill,\n    convertInsight,\n    convertVisualizationWidgetDrill,\n    convertScheduledMail: convertScheduledMailFromBackend,\n    convertDashboardDateFilterConfig,\n    convertUrisToReferences,\n    serializeProperties,\n    deserializeProperties,\n    convertLayoutSize: convertLayoutSizeFromBackend,\n    convertLayoutItemSize: convertLayoutItemSizeFromBackend,\n};\n//# sourceMappingURL=index.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpi}.\n * @alpha\n */\nexport function isKpi(obj) {\n    return isKpiWithComparison(obj) || isKpiWithoutComparison(obj);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpiWithComparison}.\n * @alpha\n */\nexport function isKpiWithComparison(obj) {\n    return (!isEmpty(obj) &&\n        (obj.comparisonType === \"previousPeriod\" ||\n            obj.comparisonType === \"lastYear\"));\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpiWithoutComparison}.\n * @alpha\n */\nexport function isKpiWithoutComparison(obj) {\n    return !isEmpty(obj) && obj.comparisonType === \"none\";\n}\n//# sourceMappingURL=kpi.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardAttachment}.\n *\n * @alpha\n */\nexport function isDashboardAttachment(obj) {\n    return !isEmpty(obj) && obj.dashboard !== undefined;\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IWidgetAttachment}.\n *\n * @alpha\n */\nexport function isWidgetAttachment(obj) {\n    return !isEmpty(obj) && obj.widget !== undefined;\n}\n//# sourceMappingURL=scheduledMail.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport isNil from \"lodash/isNil.js\";\nimport { attributeDisplayFormRef, isAttribute, attributeLocalId } from \"../attribute/index.js\";\nimport { isObjRef } from \"../../objRef/index.js\";\nimport { isMeasure, measureLocalId } from \"../measure/index.js\";\nimport { idRef, localIdRef } from \"../../objRef/factory.js\";\n/**\n * Creates a new positive attribute filter.\n *\n * @remarks\n * NOTE: when specifying attribute element using URIs (primary keys), please keep in mind that they MAY NOT be transferable\n * across workspaces. On some backends (such as bear) same element WILL have different URI in each workspace.\n * In general we recommend using URIs only if your code retrieves them at runtime from backend using elements query\n * or from the data view's headers. Hardcoding URIs is never a good idea, if you find yourself doing that,\n * please consider specifying attribute elements by value\n *\n * @param attributeOrRef - either instance of attribute to create filter for or ref or identifier of attribute's display form\n * @param inValues - values to filter for; these can be either specified as AttributeElements object or as an array\n *  of attribute element _values_; if you specify empty array, then the filter will be noop and will be ignored\n * @public\n */\nexport function newPositiveAttributeFilter(attributeOrRef, inValues) {\n    const objRef = isObjRef(attributeOrRef)\n        ? attributeOrRef\n        : typeof attributeOrRef === \"string\"\n            ? idRef(attributeOrRef)\n            : attributeDisplayFormRef(attributeOrRef);\n    const inObject = Array.isArray(inValues) ? { values: inValues } : inValues;\n    return {\n        positiveAttributeFilter: {\n            displayForm: objRef,\n            in: inObject,\n        },\n    };\n}\n/**\n * Creates a new negative attribute filter.\n *\n * @remarks\n * NOTE: when specifying attribute element using URIs (primary keys), please keep in mind that they MAY NOT be transferable\n * across workspaces. On some backends (such as bear) same element WILL have different URI in each workspace.\n * In general we recommend using URIs only if your code retrieves them at runtime from backend using elements query\n * or from the data view's headers. Hardcoding URIs is never a good idea, if you find yourself doing that,\n * please consider specifying attribute elements by value\n *\n * @param attributeOrRef - either instance of attribute to create filter for or ref or identifier of attribute's display form\n * @param notInValues - values to filter out; these can be either specified as AttributeElements object or as an array\n *  of attribute element _values_; if you specify empty array, then the filter will be noop and will be ignored\n * @public\n */\nexport function newNegativeAttributeFilter(attributeOrRef, notInValues) {\n    const objRef = isObjRef(attributeOrRef)\n        ? attributeOrRef\n        : typeof attributeOrRef === \"string\"\n            ? idRef(attributeOrRef)\n            : attributeDisplayFormRef(attributeOrRef);\n    const notInObject = Array.isArray(notInValues)\n        ? { values: notInValues }\n        : notInValues;\n    return {\n        negativeAttributeFilter: {\n            displayForm: objRef,\n            notIn: notInObject,\n        },\n    };\n}\n/**\n * Creates a new absolute date filter.\n *\n * @param dateDataSet - ref or identifier of the date data set to filter on\n * @param from - start of the interval in ISO-8601 calendar date format\n * @param to - end of the interval in ISO-8601 calendar date format\n * @public\n */\nexport function newAbsoluteDateFilter(dateDataSet, from, to) {\n    const dataSet = isObjRef(dateDataSet) ? dateDataSet : idRef(dateDataSet);\n    return {\n        absoluteDateFilter: {\n            dataSet,\n            from,\n            to,\n        },\n    };\n}\n/**\n * Creates a new relative date filter.\n *\n * @param dateDataSet - ref or identifier of the date data set to filter on\n * @param granularity - granularity of the filters (month, year, etc.)\n * @param from - start of the interval – negative numbers mean the past, zero means today, positive numbers mean the future\n * @param to - end of the interval – negative numbers mean the past, zero means today, positive numbers mean the future\n *\n * See also {@link DateAttributeGranularity} and {@link DateGranularity}\n * @public\n */\nexport function newRelativeDateFilter(dateDataSet, granularity, from, to) {\n    const dataSet = isObjRef(dateDataSet) ? dateDataSet : idRef(dateDataSet);\n    return {\n        relativeDateFilter: {\n            dataSet,\n            granularity,\n            from,\n            to,\n        },\n    };\n}\n/**\n * Creates a new all time date filter. This filter is used to indicate that there should be no filtering on the given date data set.\n *\n * @param dateDataSet - ref or identifier of the date data set to filter on\n * @public\n */\nexport function newAllTimeFilter(dateDataSet) {\n    const dataSet = isObjRef(dateDataSet) ? dateDataSet : idRef(dateDataSet);\n    return {\n        relativeDateFilter: {\n            dataSet,\n            granularity: \"ALL_TIME_GRANULARITY\",\n            from: 0,\n            to: 0,\n        },\n    };\n}\nfunction convertMeasureOrRefToObjRefInScope(measureOrRef) {\n    return isMeasure(measureOrRef)\n        ? localIdRef(measureLocalId(measureOrRef))\n        : typeof measureOrRef === \"string\"\n            ? localIdRef(measureOrRef)\n            : measureOrRef;\n}\nfunction convertAttributeOrRefToObjRefInScope(attributeOrRef) {\n    return isAttribute(attributeOrRef)\n        ? localIdRef(attributeLocalId(attributeOrRef))\n        : typeof attributeOrRef === \"string\"\n            ? localIdRef(attributeOrRef)\n            : attributeOrRef;\n}\n/**\n * Creates a new measure value filter.\n *\n * @param measureOrRef - instance of measure to filter, or reference of the measure object; if instance of measure is\n *   provided, then it is assumed this measure is in scope of execution and will be referenced by the filter by\n *   its local identifier\n * @param operator - comparison or range operator to use in the filter\n * @param val1 - first numeric value, used as value in comparison or as 'from' value in range operators\n * @param val2OrTreatNullValuesAsInComparison - second numeric value, required in range operators and used in 'to' value; optional in comparison operators used as 'treatNullValuesAs' value\n * @param treatNullValuesAsInRange - third numeric value, optional in range operators and used as 'treatNullValuesAs' value; optional and ignored in comparison operators\n * @public\n */\nexport function newMeasureValueFilter(measureOrRef, operator, val1, val2OrTreatNullValuesAsInComparison, treatNullValuesAsInRange) {\n    const ref = convertMeasureOrRefToObjRefInScope(measureOrRef);\n    if (operator === \"BETWEEN\" || operator === \"NOT_BETWEEN\") {\n        invariant(val2OrTreatNullValuesAsInComparison !== undefined, \"measure value filter with range operator requires two numeric values\");\n        const nullValuesProp = !isNil(treatNullValuesAsInRange)\n            ? { treatNullValuesAs: treatNullValuesAsInRange }\n            : {};\n        return {\n            measureValueFilter: {\n                measure: ref,\n                condition: {\n                    range: Object.assign({ operator, from: val1, to: val2OrTreatNullValuesAsInComparison }, nullValuesProp),\n                },\n            },\n        };\n    }\n    else {\n        const nullValuesProp = !isNil(val2OrTreatNullValuesAsInComparison)\n            ? { treatNullValuesAs: val2OrTreatNullValuesAsInComparison }\n            : {};\n        return {\n            measureValueFilter: {\n                measure: ref,\n                condition: {\n                    comparison: Object.assign({ operator, value: val1 }, nullValuesProp),\n                },\n            },\n        };\n    }\n}\n/**\n * Creates a new ranking filter.\n *\n * @param measureOrRef - instance of measure to filter, or reference of the measure object; if instance of measure is\n *   provided, then it is assumed this measure is in scope of execution and will be referenced by the filter by\n *   its local identifier\n * @param attributesOrRefsOrOperator - Array of attributes used in filter, or reference of the attribute object. If instance of attribute is\n *   provided, then it is assumed this attribute is in scope of execution and will be referenced by the filter by\n *   its local identifier. If attributes are not specified it's TOP or BOTTOM operator to use in the filter\n * @param operatorOrValue - Number of values to use in filter or operator if attributes are not speciied\n * @param valueOrNothing - Value or nothing if attributes are not specified\n * @public\n */\nexport function newRankingFilter(measureOrRef, attributesOrRefsOrOperator, operatorOrValue, valueOrNothing) {\n    if (typeof attributesOrRefsOrOperator === \"string\" && typeof operatorOrValue === \"number\") {\n        const measureRef = convertMeasureOrRefToObjRefInScope(measureOrRef);\n        return {\n            rankingFilter: {\n                measure: measureRef,\n                operator: attributesOrRefsOrOperator,\n                value: operatorOrValue,\n            },\n        };\n    }\n    else if (typeof operatorOrValue === \"string\" && valueOrNothing) {\n        const measureRef = convertMeasureOrRefToObjRefInScope(measureOrRef);\n        const attributeRefs = attributesOrRefsOrOperator.map(convertAttributeOrRefToObjRefInScope);\n        const attributesProp = attributeRefs.length ? { attributes: attributeRefs } : {};\n        return {\n            rankingFilter: Object.assign({ measure: measureRef, operator: operatorOrValue, value: valueOrNothing }, attributesProp),\n        };\n    }\n    throw new Error(\"Ranking filter requires measure, operator and value\");\n}\n//# sourceMappingURL=factory.js.map"],"names":["isVisualization","obj","undefined","visualizationObject","isVisualizationObjectMeasure","bucketItem","measure","isVisualizationObjectAttribute","visualizationAttribute","isVisualizationObjectAttributeFilter","filter","positiveAttributeFilter","negativeAttributeFilter","isVisualizationObjectPositiveAttributeFilter","getMeasureAttributeFilters","_a","_b","definition","measureDefinition","getDefinition","filters","getMeasureFilters","getAttributeFilterDisplayForm","measureFilter","displayForm","uri","getAttributesDisplayForms","mdObject","attributesDfs","buckets","reduce","categoriesList","bucket","push","items","list","getAttributesInBucket","getAttributes","map","attribute","attrMeasureFilters","measuresList","getMeasuresInBucket","getMeasures","getAttributeFilters","stringify","options","Object","assign","arrayFormat","REST_API_DEPRECATED_VERSION_HEADER","thisPackage","name","version","simulateBeforeSend","url","settings","xhrMockInBeforeSend","setRequestHeader","key","value","beforeSend","enrichSettingWithCustomDomain","originalUrl","originalSettings","domain","indexOf","mode","credentials","originPackageHeaders","ApiError","Error","constructor","message","cause","super","this","setPrototypeOf","prototype","ApiResponseError","response","responseBody","ApiNetworkError","ApiResponse","data","getDataInner","getData","getRawData","getHeaders","JSON","parse","error","shouldLogDeprecatedRestApiCall","XhrModule","fetch","configStorage","xhrSettings","ensureNoLeadingTokenRequest","tokenRequest","ajaxSetup","async","customSettings","firstSettings","createRequestSettings","continueAfterTokenRequest","e","arrayBufferResponseBody","arrayBuffer","text","status","isLoginRequest","isTokenRequest","handleUnauthorized","dontPollOnResult","responseJson","responseBodyAsString","err","responseUrl","finalUrl","finalSettings","headers","has","get","method","body","sendRequest","pollingDelay","Promise","resolve","reject","setTimeout","then","handlePolling","ajax","bind","verifyRestApiDeprecationStatus","statusText","getParsed","restSettings","urlWithParams","head","post","postParsed","put","del","Accept","originPackage","pollDelay","ok","reason","logDeprecatedRestApiCall","deprecatedVersionDetails","console","warn","isRestApiDeprecated","responseHeaders","decoder","TextDecoder","ArrayBuffer","decode","delay","ms","isExportFinished","taskState","parseFileNameFromContentDisposition","contentDispositionHeader","matches","exec","urlEncodedFileName","decodeURIComponent","getFormatContentType","format","omitEmpty","val","getQueryEntries","query","entries","xhrRequest","isPollingDone","attempts","maxAttempts","pollStep","r","handleHeadPolling","blobContentType","fetchResponse","blob","Blob","type","objectUrl","URL","createObjectURL","fileName","REG_URI_OBJ","isUri","test","queryString","keys","k","getSingleParam","Array","isArray","item","encodeURIComponent","join","getAllPagesByOffsetLimit","xhr","itemKey","offset","pagesData","dataObjects","projects","concat","totalCount","paging","nextPage","parseSettingItemValue","nr","Number","toString","DEFAULT_PALETTE","g","b","ProjectModule","getCurrentProjectId","projectId","getProject","getProjects","profileId","result","p","project","getProjectsWithPaging","userId","limit","search","mergedOptions","projectStates","userState","titleSubstring","res","getDatasets","getColorPalette","apiResponse","styleSettings","chartPalette","c","fill","catch","getColorPaletteWithGuids","setColorPalette","colors","idx","guid","getTimezone","timezone","setTimezone","timezoneServiceUrl","service","createProject","title","authorizationToken","summary","projectTemplate","driver","environment","guidedNavigation","content","meta","projectState","state","isProjectCreated","deleteProject","getFeatureFlags","featureFlags","getConfig","getConfigItem","getProjectFeatureFlags","source","settingItems","filteredSettingItems","settingItem","forEach","getUserListWithPaging","getUserList","loadPage","userList","userItems","count","updatedItems","getUserGroups","getGranteesInfo","objectUri","permission","apiUri","replace","convertGrantees","granteeUris","granteeUri","aclEntryURI","grantee","handleGranteesChangeError","addGrantees","addGranteesRequest","granteeURIs","removeGrantees","removeGranteesRequest","getPermissions","workspaceId","getProjectLcmIdentifiers","domainId","productId","clientId","projectUri","dataProductId","segmentId","projectLcm","extractIdFromUri","client","id","segment","links","dataProduct","split","pop","UserModule","profile","getCurrentProfile","projectModule","self","some","login","username","password","postUserLogin","remember","captcha","verifyCaptcha","loginSso","encryptedClaims","ssoProvider","targetUrl","pgpLoginRequest","isLoggedIn","logoutUri","getAccountInfo","accountSetting","getUserRegionalNumberFormatting","decimal","separators","thousand","updateProfileSettings","profileSetting","accountInfo","getUserFeatureFlags","sourceFilter","getUserConfigs","includes","getBootstrapResource","loadAnalyticalDashboards","initiateSamlSso","relayState","loginUrl","samlRequests","samlRequest","window","location","isMetadataObjectAttribute","category","isWrappedAttribute","isAttributeDisplayForm","isMetric","isFact","isMetadataObjectDataSet","isTheme","getResponseData","MetadataModule","attributeElementUri","uriChunks","match","attributeUri","elementId","defaultDisplayForm","getAttributeDefaultDisplayForm","defaultDisplayFormUri","attributeElements","elements","object","displayForms","find","default","identifier","getObjectUri","identifiers","uris","getUrisFromIdentifiers","pair","getObjects","objectUris","promises","objectUrisChunk","objects","all","getObjectsByQuery","getOnePage","nextUri","next","deprecated","getObjectsByQueryWithPaging","getTotalCount","getObjectUsing","types","nearest","resourceUri","inUse","getObjectUsingMany","inUseMany","useMany","getObjectUsedBy","getObjectsUsedByMany","getVisualizations","getDimensions","getFolders","getFolderEntries","pId","t","typeURL","fact","metric","getFacts","getMetrics","getProjectDashboards","dashboardsQuery","dashboardLinks","dashboard","link","getAnalyticalDashboards","fetchAllListedDashboards","getDashboardPlugins","getAvailableMetrics","attrs","getAvailableAttributes","metrics","drillcrosspath","getAvailableFacts","getObjectDetails","getFoldersWithItems","folders","getMetricItemsDetails","array","metricArgs","mapBy","sortFolderTree","structure","folder","sort","a","foldersLinks","foldersTitles","folderDetails","attributes","attributesInFolders","fd","dimension","attr","unsortedUris","unsortedAttributeArgs","unsortedAttributes","folderDetail","entriesLinks","entry","metricsInFolders","linkArray","tree","treeItems","getObjectIdentifier","idFinder","dataSet","identifierToUri","found","length","getIdentifiersFromUris","uriToIdentifier","translateElementLabelsToUris","labelUri","patterns","elementLabelToUri","elementLabelUri","getValidElements","queryParams","pickedOptions","afm","execution","reportDefinitionResult","restrictiveDefinitionContent","reportDefinitionWithInlinedMetrics","requestBody","validElementsRequest","getVisualization","saveVisualization","visualization","createObject","updateVisualization","visualizationUri","objectId","slice","updateObject","deleteVisualization","deleteObject","delete","openVisualizationAsReport","ldmManage","maql","manage","manageStatusUri","isTaskFinished","checkStatusForError","etlPull","uploadsDir","pullIntegration","etlPullStatusUri","pull2Task","poll","task","wTaskStatus","getSanitizedMeta","originalMeta","clearLockedFlag","MetadataModuleExt","metadataModule","userModule","dashboardUri","_c","_d","objectsFromDashboard","getObjectsFromDashboard","dashboardDetails","analyticalDashboard","allCreatedObjUris","visWidgetUris","filterContext","duplicateFilterContext","kpiMap","duplicateOrKeepKpis","shouldCopyKpi","from","values","visWidgetMap","duplicateWidgets","translator","oldUri","kpiMatch","visWidgetMatch","createTranslator","updatedContent","uriTranslator","widgets","updateContent","duplicateDashboard","layout","tags","shouldCopyVisObj","cascadingDelete","projectID","currentUser","profileUri","objectsToBeDeleted","author","objsFromDashboard","uriMap","Map","unwrapObj","kpiWidget","kpi","toSave","newUriKpiObj","set","visWidget","createAndUpdateWidgets","visualizationWidget","visObj","newUriVisObj","updatedVisWidget","visUri","originalFilterContext","getObjectsUrisInDashboard","copyVisObj","copyKpi","IDENTIFIER_REGEX","getDependencies","metricDefinition","expression","s","substring","getIdentifier","resolvedDependencies","resolved","dependencies","scan","unresolved","i","tested","splice","sortDefinitions","definitions","indexed","lastLength","AttributesMapLoaderModule","md","loadAttributesMap","attributeDisplayFormUris","attributeUris","attributeDisplayForm","formOf","getAttributeUris","attributesMap","dfUri","createAttributesMap","notEmpty","findHeaderForMappingFn","mapping","header","element","measureIndex","emptyResult","extendedTabularDataResult","warnings","getBaseMetricTitle","suffix","maxLength","CONTRIBUTION_METRIC_FORMAT","getAggregation","aggregation","toLowerCase","allFiltersEmpty","f","isEmptyFilter","metricFilter","in","notIn","absoluteDateFilter","to","_e","relativeDateFilter","_f","isDerived","getAttrUriFromMap","getFilterExpression","isNegative","attributeFilter","isAttrFilterNegative","getAttrFilterElements","getAttrFilterExpression","getGeneratedMetricExpression","toUpperCase","where","Boolean","getPercentMetricExpression","metricExpressionWithoutFilters","whereFilters","byAllExpression","whereExpression","getPoPExpression","metricExpression","getGeneratedMetricHash","getGeneratedMetricIdentifier","expressionCreator","hasher","prjId","hash","hasNoFilters","getMeasureType","getMeasureSorting","mdObj","matchedSorting","properties","sortItems","sortItem","measureSortItem","locators","measureLocatorItem","measureIdentifier","localIdentifier","direction","getCategorySorting","attributeSortItem","attributeIdentifier","createDerivedMetric","createContributionMetric","getMetricExpression","getOriginalMeasureForPoP","popMeasure","popMeasureDefinition","getPoPDefinition","categoryToElement","isPoP","isContribution","computeRatio","rules","addRule","tests","callback","subject","params","getBuckets","popAttribute","originalMeasure","generated","generatedMeasureExpression","ExperimentalExecutionsModule","columns","executionConfiguration","executedReport","isLoaded","request","property","metricMappings","executionResult","loadExtendedDataResults","rawData","isEmpty","mdToExecutionDefinitionsAndColumns","allDfUris","getAttributesMap","measures","index","factory","getMetricFactory","removeDateItems","getAttrTypeFromMap","isDateAttribute","getExecutionDefinitionsAndColumns","displayFormUris","missingUris","displayFormsUris","getMissingUrisInAttributesMap","prevResult","_g","_h","_j","_k","updatedResult","convertExecutionToJson","ApiExecutionResponseError","executionResponse","ExecuteAfmModule","executeAfm","validateNumOfDimensions","resultSpec","dimensions","getExecutionResponse","getExecutionResult","unwrapExecutionResponse","_executeVisualization","visExecution","_getVisExecutionResponse","reference","visualizationExecution","resultSpecProp","filtersProp","createExecuteVisualizationBody","getPartialExecutionResult","executionResultUri","executionResultUriQueryPart","getExecutionResultUriQueryPart","getPage","numOfDimensions","getAllPages","fetchExecutionResult","executionResultWrapper","unwrapExecutionResult","prevExecutionResult","newExecutionResult","_l","_m","headerItems","mergeHeaderItems","otherDimension","mergeHeaderItemsForEachAttribute","rowOffset","currentPageData","mergePage","total","nextOffset","defaultNextRowsOffset","defaultNextColumnsOffset","nextColumnsExist","getNextOffset","nextLimit","getSingleNextLimit","getNextLimit","nextPageExists","uriPart","queryPart","addQueryPrefix","replaceLimitAndOffsetInUri","executionResponseWrapper","attrIdx","ExecutionModule","executeAfmModule","getExperimentalExecutionsModule","loaderModule","ReportModule","handleExportResultError","isApiResponseError","updatedError","exportResult","exportConfig","pollingOptions","requestPayload","resultExport","sanitizeExportConfig","sanitizedAfm","sanitizeFilters","isFilterContextAttributeFilter","sanitizeFiltersForExport","dateFilter","isFilterContextDateFilter","granularity","sanitizedProperties","String","sanitizeDateFilter","negativeSelection","sanitizeAttributeFilter","DashboardModule","sanitizedFilters","payload","getDashboardExportPayload","pollPdfFile","dashboardExport","sanitizeDomain","ConfigModule","arguments","setCustomDomain","getCustomDomain","setJsPackage","getJsPackage","getRequestHeader","REQUEST_DEFAULTS","LOAD_DATE_DATASET_DEFAULTS","includeUnavailableDateDataSetsCount","includeAvailableDateAttributes","getRequiredDataSets","returnAllRelatedDateDataSets","returnAllDateDataSets","requiredDataSets","dataSetIdentifier","customIdentifiers","unwrapItemDescriptionObject","itemDescription","isStoredItemDescription","isAdHocItemDescription","CatalogueModule","sanitizedOptions","loadAll","requestOptions","resultItems","catalogItems","updatedRequestOptions","catalogGroups","sanitizedCatalogQueryRequest","catalogQueryRequest","catalogAvailableItems","loadItems","bucketItems","loadItemDescriptionObjects","descriptionObjects","loadCatalog","omittedOptions","includeObjectsWithTags","requestDateDataSets","column","buildItemDescriptionObjects","datasets","dateDataSetsRequest","dateDataSetsResponse","catalogRequest","catalogResponse","LdmModule","getCommonAttributes","attributeUpperBounds","attributeUpperBoundsResponse","upperbounds","OrganizationModule","getCurrentOrganization","SDK","fetchMethod","config","sanitized","sanitizeConfig","user","mdExt","report","catalogue","ldm","organization","attributesMapLoaderModule","utils","clone","getFactoryBrowser","isComplainingAboutAuthorization","getJSONFromText","convertExecutionApiError","convertApiError","getTraceId","toBearRef","ref","toScopedBearRef","assertNoNulls","every","MAX_DECIMAL_PLACES","trimNumberToSupportedPrecision","num","parseFloat","toFixed","trimConditionToSupportedPrecision","condition","nullValuesProp","comparison","treatNullValuesAs","operator","range","convertFilter","measureValueFilter","convertMeasureValueFilter","rankingFilter","convertRankingFilter","convertMeasureFilter","convertAttributeFilter","convertAbsoluteDateFilter","convertRelativeDateFilter","convertFilters","DEFAULT_PERCENTAGE_FORMAT","DEFAULT_INTEGER_FORMAT","convertMeasure","convertedDefinition","convertAggregation","aggregationProp","computeRatioProp","convertSimpleMeasureDefinition","convertPopMeasureDefinition","previousPeriodMeasure","dateDataSets","dateDataSet","periodsAgo","convertPreviousPeriodMeasureDefinition","arithmeticMeasure","measureIdentifiers","convertArithmeticMeasureDefinition","convertMeasureDefinition","getFormat","formatProp","alias","aliasProp","convertAttribute","convertAFM","def","attrProp","measuresProp","nativeTotals","acc","totals","attributeInDims","attributeDim","rollupAttributes","dimIdx","mergedItemsId","itemIdentifiers","dim","findIndex","itemId","itemIdx","attributeIdentifiers","convertNativeTotals","nativeTotalsProp","convertResultSpec","sortBy","locator","attributeLocatorItem","assertNoNullsInSortBy","sortsProp","sorts","dims","convertTotals","totalsProp","convertDimensions","dimsProp","toAfmExecution","convertWarning","warning","warningCode","parameters","param","dateFormats","DEFAULT_DATE_FORMAT","createDefaultDateFormatter","dateFormat","targetDateFormat","transformDateFormat","resultHeader","dateAttributeUris","resultHeaderUri","attributeHeaderItem","dateAttributeUri","startsWith","dateFormatter","Date","parseDateValue","TOTAL_ORDER","BearExecutionResult","authApiCall","execFactory","execResponse","asDataView","promisedRes","hasEmptyData","hasMissingHeaderItems","isEmptyDataResult","BearDataView","attributeHeader","isAttributeHeader","measureGroupHeader","measureHeaderItem","totalItems","_fingerprint","sdk","size","saneOffset","offsetItem","sanitizeOffset","saneSize","sizeInDim","BEAR_PAGE_SIZE_LIMIT","sanitizeSize","transform","forDefinition","optionsForBackend","buildExportOptions","workspace","mergeHeaders","showFilters","equals","other","fingerprint","DIMENSION_BUCKETS","preprocessTotalHeaderItemsForDim","dimensionTotals","metricGroupPresent","bucketItemsIdentifiers","measuresIdentifiers","m","indexedTotalsUnordered","columnIdentifiers","indexedTotals","current","totComparison","fixTotalOrderByMeasuresOrder","indexedTotalsIterators","initiateTotalsIterators","topHeaderItems","nesting","itemLevel","Math","max","currentIteratorValue","correspondingTotal","totalMeasure","totalMeasureIndex","totalHeaderItem","dataResult","resultHeaders","resultHeaderTransformer","postProcessing","totalTotals","preprocessTotalHeaderItems","attrDimensions","dimensionItem","attrDescriptor","dateAttrDescriptor","resultHeaders1","resultHeaders2","BearPreparedExecution","authCall","executionFactory","checkDefIsExecutable","afmExecution","explain","download","withDimensions","dimsOrGen","withSorting","withDateFormat","withExecConfig","dataSamplingPercentage","getUserFullName","firstName","lastName","convertUser","email","fullName","convertWorkspaceUser","getStatusFromState","statusProp","convertUsersItem","firstname","lastname","userUriFromAuthenticatedPrincipalWithAnonymous","getPrincipal","selfLink","userMeta","userLoginMd5FromAuthenticatedPrincipalWithAnonymous","userLoginMd5","userLoginMd5FromAuthenticatedPrincipal","getObjectIdFromUri","objRefToUri","objRefsToUris","refs","throwOnUnresolved","identifiersToUrisPairs","translatedUris","foundPair","debug","objRefToIdentifier","objRefsToIdentifiers","updateUserMap","userMap","requestedUserUris","usersToLoad","uniqueUsersToLoad","results","ex","BearPreparedExecutionByRef","insight","createVisualizationExecution","BearExecution","forInsightByRef","nonNullFilters","byRefFactory","BearExecutionByRef","unwrapMetadataObject","VariableMetadataObjectBuilder","supportedMetadataObjectsTypeGuards","convertMetadataObject","isType","isSupportedMetadataObject","commonModifications","builder","description","production","isProduction","attributeDisplayForms","df","displayFormType","modify","ds","modifications","newVariableMetadataObject","v","convertMetadataObjectXrefEntry","unlisted","convertListedMetric","metricLink","convertMetricToBackend","locked","isLocked","REMOVE_BRACKETS_REGEXP","TOKEN_TYPE_REGEXP_PAIRS","getTokenValuesOfType","tokenType","tokens","token","getReferenceId","references","defaultIdGenerator","traverse","convert","createConverter","conversionFunction","conversionData","idGenerator","convertReferenceToUri","getReferenceValue","convertReferencesToUris","convertUrisToReferences","converter","originalReferences","convertedReferences","conversion","createUriToReferenceConverter","serializeProperties","deserializeProperties","isObjectUriQualifier","qualifier","fromBearRef","defaultType","fromScopedBearRef","convertAttributeElements","first","isVisualizationObjectMeasureValueFilter","isVisualizationObjectRankingFilter","isVisualizationObjectAbsoluteDateFilter","isVisualizationObjectArithmeticMeasureDefinition","isVisualizationObjectPoPMeasureDefinition","isVisualizationObjectPreviousPeriodMeasureDefinition","convertBucketItem","convertBucket","convertVisualization","visualizationClassUri","withResolvedReferences","convertedProperties","referencesProp","resolveReferences","parsedProperties","visualizationUrl","created","createdBy","updated","updatedBy","contributor","convertListedVisualization","visualizationLink","BearWorkspaceMeasures","metricMetadata","expressionTokens","_expression","regExp","substr","tokenizeExpression","expressionIdentifiers","expressionUris","expressionElementUris","expressionIdentifierUris","allExpressionElementAttributeUris","allExpressionUris","allExpressionObjects","allExpressionAttributeElements","elementUri","getAttributeElementDefaultDisplayFormValue","objectsByUri","el","objectsByIdentifier","attributeElementsByUri","deleted","createAttribute","createIdentifier","createToken","convertMetricFromBackend","insights","BearWorkspaceStyling","getTheme","selectedUiTheme","getObjectByIdentifier","unwrappedObject","isCompatibleCatalogItemType","bearItemTypeByCatalogItemType","convertItemType","bearObjectMetaToBearRef","bearCatalogItemToBearRef","bearGroupableCatalogItemToTagRefs","groups","tagId","commonMetadataModifications","commonCatalogItemModifications","convertDisplayForm","attrRef","convertDateDataset","dateDataset","attributeById","availableDateAttributes","dateDatasetRef","dateAttributes","dateDatasetAttribute","attributeMeta","defaultDisplayFormMeta","attributeRef","displayFormRef","attributeData","drillDownStep","drillDownStepAttributeDF","catalogDa","convertDateDataSetAttribute","catalogDs","relevance","convertMetric","measureRef","catalogMeasure","convertGroup","group","catalogG","tag","convertObjRefInScopeToRefWithoutIdentifier","convertExtendedFilter","measureObjQualifier","convertPositiveAttributeFilter","convertNegativeAttributeFilter","convertPreviousPeriodDataSet","convertPoPMeasureDefinition","convertInsightContent","nonEmptyProperties","visualizationClass","convertInsightDefinition","convertInsight","BearWorkspaceCatalogWithAvailableItems","availableItems","loadGroups","allItems","facts","dateDatasets","attributeHierarchies","allAvailableItems","availableAttributes","availableMeasures","availableFacts","availableDateDatasets","availableAttributeHierarchies","BearWorkspaceCatalogAvailableItemsFactory","excludeTags","includeTags","mappings","loadAvailableCatalogItems","sanitizedVisualizationObject","compatibleBearItemTypes","bearTypes","itemDescriptions","attributeByDisplayFormUri","availableItemUris","loadAvailableItemUris","allAvailableItemUris","catalogItem","attributeHierarchy","loadAvailableDateDatasets","dataset","includeDateGranularities","includeTagsIds","excludeTagsIds","shouldReturnAllDateDataSets","loadDateDataSets","excludeObjectsWithTags","withOptions","newOptions","forDataset","forTypes","forItems","forInsight","withGroups","tempVisualizationObj","itemsWithUris","arithmeticMeasuresIds","Set","otherMeasureIds","add","masterMeasure","filterItemsForAvailabilityQuery","displayFormById","localId","measureById","factById","measureItem","dateAttribute","dateAttributeById","translateIdentifiersToUris","createVisObjectForAvailability","availableCatalogItems","allAvailableCatalogItems","BearWorkspaceCatalog","getProductionFlag","groupableCatalogItemTypes","isGroupableCatalogItemType","BearWorkspaceCatalogFactory","tagsAndDatasetIdsPromise","loadAllCatalogItemsAndMappings","bearCatalogItems","bearDateDatasets","loadBearCatalogItems","loadDateDatasets","bearDisplayFormsAndAttributes","loadBearAttributes","dd","displayFormByUri","displayFormsAndAttributes","unwrappedDisplayForms","attributeByUri","displayFormUri","createLookups","isCatalogMetric","catalogM","factRef","catalogF","convertFact","geoPinDisplayForms","drillDownLink","linkAttributeDF","catalogA","drillToAttributeLink","bearCatalogItemToCatalogItem","attributesWithDrillDownStep","dateAttributesWithDrillDownStep","flatMap","v4","extractAttributeHierarchiesFromCatalogItems","allCatalogItems","dataSetId","getTagsAndDatasetIds","bearItemTypes","loadAllItems","includeWithTags","excludeWithTags","csvDataSets","dateDatasetAttributes","loadCatalogGroups","ANONYMOUS_USER_SETTINGS","locale","DefaultUiSettings","metadataTimeZone","IGNORED_USER_SETTINGS","BearWorkspaceSettings","getSettings","flags","getSettingsForCurrentUser","workspaceSettings","workspaceFeatureFlags","userFeatureFlags","currentProfile","language","keptUserSettings","settingName","filterIgnoredUserSettings","mergeWorkspaceAndUserSettings","setLocale","_locale","emptyPermissions","permissions","BearWorkspacePermissionsFactory","hasPermission","convertPermissions","associatedPermissions","convertVisualizationClass","visClass","objectTypeToObjectCategory","objectTypesWithLinkToDataset","objectCategoriesWithLinkToDataset","InsightReferencesQuery","requestedTypes","run","typesForXref","xrefs","findReferencedObjects","findDatasets","loadObjects","createResult","categories","allDirectObjects","usedByPayload","datasetResponses","typesForLoad","objectUrisToObtain","enrichedTypes","unwrappedObjects","convertedObjects","wantDatasets","dataSetMeta","fullObject","catalogAttr","geoDisplayForm","convertWrappedAttribute","catalogFact","convertWrappedFact","datasetProp","isFilterWithoutRefs","normalizeFilterRefs","objRefNormalizer","filtersWithoutRefs","filtersWithRefs","normalized","getVisualizationUserUris","getDashboardPluginUserUris","dashboardPlugin","BearWorkspaceInsights","getVisualizationClass","visClassResult","getVisualizationClasses","visualizationClassesResult","queryOptions","includeDeprecated","orderIndex","getInsight","loadUserData","getVisualizationClassesByVisualizationClassUri","getInsights","visualizationClassUrlByVisualizationClassUri","getInsightsInner","updatedUserMap","createInsight","withConvertedVisClass","getInsightWithConvertedVisClass","updateInsight","deleteInsight","openInsightAsReport","getInsightReferencedObjects","getInsightReferencingObjects","analyticalDashboards","getInsightWithAddedFilters","mergedFilters","originalFilters","addedFilters","normalizedOriginalFilters","normalizedAddedFilters","allUseSameRefType","appendFilters","getVisualizationClassByUrl","visClassUrl","convertDataSet","BearWorkspaceDataSets","loadDataSets","refToUri","refToLocalId","convertLayoutSize","converted","width","gridWidth","gridHeight","height","heightAsRatio","convertLayoutItemSize","convertLayoutSection","section","convertedRow","widget","convertLayout","convertLayoutItem","headerWithoutEmptyStrings","x","sections","convertedLayout","fluidLayout","rows","convertFilterContextItem","filterContextItem","convertedDateFilter","filterElementsBy","selectionMode","convertedAttributeFilterParents","filterElementsByItem","filterLocalIdentifier","over","convertFilterContext","tempFilterContext","convertFilterReference","filterReference","dateFilterReference","attributeFilterReference","convertDrill","drill","tab","projectDashboard","target","projectDashboardTab","origin","drillFrom","drillFromMeasure","drillFromAttribute","drillToDashboard","toDashboard","drillToVisualization","toVisualization","drillToCustomUrl","customUrl","drillToAttributeUrl","drillToAttributeDisplayForm","hyperlinkDisplayForm","insightAttributeDisplayForm","convertWidget","ignoreDashboardFilters","drills","convertedDateDataSet","convertedIgnoredDashboardFilters","configuration","comparisonDirection","comparisonType","drillTo","widgetProperties","convertAbsoluteDateFilterPreset","preset","_","convertRelativeDateFilterPreset","convertPluginLink","pluginLink","plugin","convertDashboard","dateFilterConfig","plugins","shareStatus","isUnderStrictControl","filterContextUri","convertedDateFilterConfig","absolutePresets","addPresets","relativePresets","convertDateFilterConfig","convertedPlugins","sharedWithSomeoneProp","sharedWithSomeone","flagsProp","convertWidgetAlert","alert","isTriggered","threshold","whenTriggered","alertUri","kpiAlert","convertScheduledMailAttachment","scheduledMailAttachment","kpiDashboardAttachment","widgetDashboard","formats","exportOptions","visualizationWidgetAttachment","includeFilterContext","includeFilters","convertScheduledMail","scheduledMail","when","bcc","lastSuccessful","unsubscribed","attachments","startDate","endDate","timeZone","recurrency","recurrence","lastSuccessfull","isWrappedKpi","isNotTemporaryAllTimeDateFilter","convertedFilterElementsBy","filterBy","convertedFilterContextItem","KPI_SIZE","VISUALIZATION_SIZE","widgetDependencies","row","dep","isFluidLayout","createImplicitDashboardLayout","visualizationClasses","createLayoutItems","createLayoutSections","xl","implicitWidgetWidth","createLayoutItem","convertKpiDrill","transition","convertDrillOrigin","isDrillFromAttribute","convertVisualizationWidgetDrill","isDrillToVisualization","isDrillToCustomUrl","isDrillToAttributeUrl","convertVisualizationWidget","convertKpi","convertDateFilterConfigAddedPresets","convertDashboardDateFilterConfig","filterName","hideGranularities","hideOptions","getShareStatus","exportFilterContextUri","widgetsUris","sdkDependencies","d","convertDashboardDependency","unsortedWidgets","widgetByUri","widgetUri","filterContextOrExportFilterContext","isUnderStrictControlProp","flag","exportFilterContext","dependency","hasOwnProperty","isWrappedFilterContext","isWrappedTempFilterContext","convertTempFilterContext","isVisualizationWidgetAttachment","convertedExportOptions","convertedAttachments","convertAlert","WidgetReferencesQuery","getRelevantDateFiltersForWidget","dateDatasetUri","filterUris","withRelevantDimension","candidate","getRelevantAttributeFiltersForWidget","divide","ignoredUris","getDashboardFilterRef","DashboardComponentTypes","BearWorkspaceDashboards","getDashboards","explicitlySharedDashboardsObjectLinks","accessibleDashboardsObjectLinks","getAccessibleDashboards","includeAvailableViaLink","dashboardLink","availability","isExplicitlyShared","getDashboard","dashboardRef","exportFilterContextRef","bearDashboard","getBearDashboard","dependenciesToGet","bearVisualizationClasses","getBearVisualizationClasses","bearDependencies","bearExportFilterContext","getBearDashboardDependencies","getBearExportFilterContext","createDashboard","updateDashboard","originalDashboard","updatedDashboard","sanitizedPlugins","ensureDashboardPluginLinksHaveUris","sanitizedDashboard","updateFilterContext","updateLayoutAndWidgets","createdDashboardWithSavedDependencies","createBearDashboard","updatedDashboardWithSavedDependencies","deletedWidgets","collectDeletedWidgets","alertsToDelete","getBearWidgetAlertsForWidget","deleteWidgetAlerts","updateBearDashboard","deleteBearWidgets","deleteDashboard","deleteBearMetadataObject","exportDashboardToPdf","convertedFilters","exportToPdf","createScheduledMail","scheduledMailDefinition","exportFilterContextDefinition","createBearFilterContext","scheduledMailWithFilterContext","attachment","convertedScheduledMail","createdBearScheduledMail","updateScheduledMail","filterContextRef","updateBearMetadataObject","deleteScheduledMail","scheduledMailRef","getScheduledMailsForDashboard","createdByCurrentUser","scheduledMailObjectLinks","getScheduledMailObjectLinksForDashboardAndCurrentUser","getScheduledMailObjectLinksForDashboard","getScheduledMailsCountForDashboard","getAllWidgetAlertsForCurrentUser","alerts","getAllBearKpiAlertsForCurrentUser","getConvertedAlerts","getDashboardWidgetAlertsForCurrentUser","getDashboardBearKpiAlertsForCurrentUser","getWidgetAlertsCountForWidgets","widgetUris","alertCount","createWidgetAlert","savedFilterContext","createOrUpdateWidgetAlertFilterContext","alertWithSavedFilterContext","createBearWidgetAlert","updateWidgetAlert","updatedAlert","updateBearWidgetAlert","deleteWidgetAlert","bulkDeleteObjects","getWidgetReferencedObjects","getResolvedFiltersForWidget","dateFilters","attributeFilters","dateFiltersToKeep","attributeFiltersToKeep","filtersToKeep","resolveWidgetFilters","alertWithSanitizedName","bearAlert","createdBearAlert","convertedAlertFilterContext","emptyFilterContextDefinition","updateBearFilterContext","createdBearDashboard","createdDashboardDependencies","originalLayout","updatedLayout","createdWidgetsWithLayoutPaths","collectCreatedWidgetsWithLayoutPaths","updatedWidgetsWithLayoutPaths","collectUpdatedWidgetsWithLayoutPaths","widgetWithpath","createBearWidget","updateBearWidget","widgetWithPath","path","updatedFilterContext","bearFilterContext","sanitizeFilterContext","savedBearFilterContext","convertedRefs","refUriPairs","originalRef","refMatch","sanitizedRef","sanitizedFilterElementsBy","attrMatch","bearWidget","originalLayoutWidgetsWithPath","w","originalLayoutWidgets","updatedLayoutWidgets","context","allAlerts","filterContexts","getBearKpiAlertsFilterContexts","filterContextByUri","alertFilterContext","kpiAlerts","filterContextUris","_sdk","bearMetadataObject","metadataObjectId","dependenciesUris","objectLink","getBearDashboardReferences","objectTypes","mapDashboardReferenceTypes","visClassMapping","getDashboardReferencedObjects","typesToGet","createDashboardPlugin","convertedPlugin","savedPlugin","pluginObjectId","deleteDashboardPlugin","getDashboardPlugin","wrappedPlugin","pluginUris","wrappedPlugins","getDashboardPermissions","workspacePermissions","getPermissionsForCurrentUser","canEditDashboard","canManageAnalyticalDashboard","canShareDashboard","canManageACL","canManageLockedDashboard","canManageProject","canEditLockedDashboard","canShareLockedDashboard","canViewDashboard","pluginLinks","resolvedUris","validateDashboardsExistence","dashboardRefs","validDashboards","httpStatus","explicitlySharedDashboards","BearWorkspaceUsersQuery","prefixSearch","queryWorker","convertAllTime","allTime","convertAbsoluteForm","absoluteForm","convertRelativeForm","relativeForm","granularities","availableGranularities","convertAbsolutePreset","absolutePreset","convertRelativePreset","relativePreset","selectedOption","BearWorkspaceDateFilterConfigsQuery","withLimit","withOffset","LimitingAfmFactory","getAfm","relativeDateFilters","filtersPart","createFiltersExpressionFromAttributeFilters","measuresPart","mergedFiltersPart","filterDisplayForms","allDisplayFormRefs","identifierUriPairs","displayFormAttributeUriMapping","getIdentifierUriPairs","getDisplayFormAttributeUriMapping","getDisplayFormAttributeUri","attributeRefUri","groupsByOverAttribute","objRef","foundUri","getUriForIdentifier","overAttribute","parentFilter","isNegativeFilter","filterElements","parentFilterAttributeUri","allIdentifiersUsed","getAllIdentifiersUsedInAttributeFilters","BearWorkspaceElements","forDisplayForm","BearWorkspaceElementsQuery","forFilter","dateFilterDisplayForm","BearWorkspaceFilterElementsQuery","withAttributeFilters","withDateFilters","withMeasures","withSignal","limitingAfmFactory","limitingAfm","getObjectId","restOptions","urisToUse","validElements","parseInt","dateDf","elementsQuery","selectedElements","resultForElementsByRef","resultForElementsByValue","BearWorkspaceAttributes","getAttributeDisplayForm","displayFormDetails","buildAttributeDisplayForm","getAttribute","wrappedAttribute","buildAttribute","getAttributeDisplayForms","wrappedDisplayForm","isDefaultDf","isDefault","attributeDetails","attributesRefs","inputAttributeUris","getCommonAttributesBatch","attributesRefsBatch","attributeRefs","usedBy","BearWorkspaceFacts","convertWorkspaceUserGroup","BearWorkspaceUserGroupsQuery","userGroups","getNextPage","queryAllPages","lowercaseSearch","toLocaleLowerCase","userGroup","convertedUserGroups","convertGranteeEntry","aclEntry","mapUserFullName","convertWorkspaceUserToAvailableUserAccessGrantee","convertWorkspaceUserGroupToAvailableUserGroupAccessGrantee","convertGranularAccessGranteeToAcessGrantee","inheritedPermissions","rest","BearWorkspaceAccessControlService","users","sharedObject","granteesList","grantees","granteeRef","granteesToGrantAccess","granteesToRevokeAccess","grantAccess","revokeAccess","_sharedObject","usersOption","groupsOption","workspaceUsersQuery","workspaceGroupsQuery","BearWorkspace","descriptor","dashboards","styling","catalog","dateFilterConfigs","accessControl","BearWorkspaceQueryFactory","forUser","BearWorkspaceQuery","forCurrentUser","withParent","withSearch","userProjects","userProject","projectDescription","projectTitle","demoProject","isDemo","convertUserProject","BearUserSettingsService","BearUserService","getUser","accountSettings","getUriFromPairByIdentifier","uriIdentifierPairs","excludeUris","resolvedPair","SecuritySettingsService","scope","isUrlValid","validationRequest","validationResponse","valid","isDashboardPluginUrlValid","sanitizationError","setting","listContent","trim","host","validateAgainstList","OrganizationStylingService","defaultReject","defaultRejectTheme","defaultRejectColorPalette","getThemes","getActiveTheme","setActiveTheme","clearActiveTheme","createTheme","_theme","updateTheme","deleteTheme","_themeRef","getColorPalettes","getActiveColorPalette","setActiveColorPalette","clearActiveColorPalette","createColorPalette","_colorPalette","updateColorPalette","deleteColorPalette","_colorPaletteRef","BearOrganization","organizationId","organizationName","securitySettings","organizationUri","BearOrganizations","BearEntitlements","CAPABILITIES","canCalculateGrandTotals","canCalculateSubTotals","canCalculateTotals","canCalculateNativeTotals","canExportCsv","canExportXlsx","canSortData","canTransformExistingResult","canWorkspaceManagerSeeEverySharedObject","maxDimensions","supportsElementUris","supportsObjectUris","supportsCsvUploader","supportsLegacyReports","supportsRankingFilter","supportsRankingFilterWithMeasureValueFilter","supportsElementsQueryParentFiltering","supportsKpiWidget","supportsWidgetEntity","supportsHyperlinkAttributeLabels","supportsGenericDateAttributeElements","supportsExplain","supportsAccessControl","usesStrictAccessControl","supportsOwners","allowsInconsistentRelations","supportsTimeGranularities","supportsHierarchicalWorkspaces","supportsCustomColorPalettes","supportsOrganizationSettings","supportsInlineMeasures","supportsBootstrapResource","supportsMetadataObjectLocking","supportsGranularAccessControl","supportsEveryoneUserGroupForAccessControl","supportsNonProductionDatasets","supportsShowAllAttributeValues","supportsSeparateLatitudeLongitudeLabels","supportsEnumeratingDatetimeAttributes","BearBackend","implConfig","telemetry","authProvider","capabilities","isAuthenticated","getCurrentPrincipal","backend","isNotAuthenticatedResponse","authenticate","force","triggerAuthentication","principal","call","errorConverter","getAsyncCallContext","handleNotAuthenticated","err2","getAuthenticationContext","reset","onNotAuthenticated","configSanitize","bearConfigSanitize","telemetrySanitize","hostname","packageName","packageVersion","componentName","props","newSdkInstance","ajaxSettings","initializeClient","onLegacyCallbacksReady","legacyFunctions","openAsReport","lastAjaxSetupSettings","log","logMessages","updateProfileCurrentWorkspace","newProfileSetting","currentProjectUri","sanitizeDrillingActivationPostMessageData","postMessageData","idToUriConverter","composedFrom","simpleUris","simpleIdentifiers","composedFromUris","composedFromIdentifiers","allIdentifiers","urisFromIdentifiers","getObjectsByUri","getVisualizationObject","visObject","getUISettings","isDomainAdmin","domainUri","onHostname","withTelemetry","withAuthentication","provider","guardedAuthProvider","deauthenticate","organizations","entitlements","workspaces","BearAuthProviderBase","logout","obtainCurrentPrincipal","ContextDeferredAuthProvider","notAuthenticatedHandler","bearFactory","NPM_PACKAGE_NAME","NPM_PACKAGE_VERSION","redirectToBearAuthentication","href","redirectToBearSsoAuthentication","sdkFactory","isKpi","isKpiWithComparison","isKpiWithoutComparison","isDashboardAttachment","isWidgetAttachment","newPositiveAttributeFilter","attributeOrRef","inValues","newNegativeAttributeFilter","notInValues","newAbsoluteDateFilter","newRelativeDateFilter","newAllTimeFilter"],"sourceRoot":""}