{"version":3,"file":"assets/26921724329050732598.js","mappings":"+HAAAA,EAAOC,QAAU,CAAC,QAAU,QAAQ,SAAW,YAAY,YAAc,cAAc,iBAAiB,YAAY,gBAAgB,aAAa,eAAe,MAAM,gCAAgC,8CAA8C,uBAAuB,oBAAoB,+BAA+B,sDAAsD,+BAA+B,+EAA+E,yCAAyC,+CAA+C,wDAAwD,+LAA+L,uDAAuD,8LAA8L,kDAAkD,0EAA0E,wDAAwD,gKAAgK,yCAAyC,gBAAgB,yCAAyC,mBAAmB,8CAA8C,4BAA4B,2CAA2C,4BAA4B,oBAAoB,gBAAgB,qBAAqB,mBAAmB,0BAA0B,uBAAuB,8BAA8B,mBAAmB,sBAAsB,UAAU,uBAAuB,SAAS,yBAAyB,sBAAsB,gCAAgC,kCAAkC,0BAA0B,wBAAwB,8BAA8B,8CAA8C,wBAAwB,cAAc,wCAAwC,oDAAoD,wCAAwC,iEAAiE,sCAAsC,sGAAsG,sCAAsC,+CAA+C,oCAAoC,+EAA+E,4BAA4B,gCAAkC,2BAA2B,kGAAkG,oCAAoC,oBAAoB,6CAA6C,6DAA6D,oCAAoC,wCAAwC,oCAAoC,6DAA6D,oCAAoC,wBAAwB,mCAAmC,iCAAiC,4CAA4C,uBAAuB,iCAAiC,qBAAqB,yCAAyC,UAAU,+CAA+C,2FAA2F,sCAAsC,6EAA6E,sCAAsC,yEAAyE,qCAAqC,+EAA+E,mBAAmB,sBAAsB,gCAAgC,aAAa,gCAAgC,iBAAiB,kCAAkC,aAAa,uBAAuB,YAAY,iCAAiC,iBAAiB,2BAA2B,UAAU,gCAAgC,eAAe,8BAA8B,eAAe,6BAA6B,0CAA0C,8BAA8B,4CAA4C,+BAA+B,4CAA4C,iCAAiC,8CAA8C,8BAA8B,2CAA2C,sCAAsC,4BAA4B,+CAA+C,qCAAqC,gDAAgD,sGAAsG,mDAAmD,uHAAuH,gDAAgD,oGAAoG,0CAA0C,uGAAuG,gDAAgD,+HAA+H,sCAAsC,kIAAkI,gDAAgD,qIAAqI,aAAa,0FAA0F,gBAAgB,cAAc,iCAAiC,8EAA8E,2CAA2C,oFAAoF,2CAA2C,qCAAqC,0CAA0C,UAAU,2CAA2C,WAAW,2CAA2C,oBAAoB,4DAA4D,gDAAgD,4DAA4D,kBAAkB,0DAA0D,4BAA4B,kCAAkC,mCAAmC,iCAAiC,uBAAuB,uCAAuC,aAAa,iDAAiD,qGAAqG,uCAAuC,kBAAkB,uDAAuD,YAAY,sDAAsD,0FAA0F,uCAAuC,OAAO,iDAAiD,sCAAsC,mDAAmD,0CAA0C,kDAAkD,0CAA0C,8CAA8C,oBAAoB,6CAA6C,UAAU,+CAA+C,oGAAoG,8CAA8C,uBAAuB,uCAAuC,WAAW,oCAAoC,gBAAgB,kCAAkC,MAAM,6CAA6C,gGAAgG,gCAAgC,SAAS,8BAA8B,YAAY,wCAAwC,iBAAiB,wCAAwC,0BAA0B,0CAA0C,8CAA8C,sCAAsC,8BAA8B,oCAAoC,0BAA0B,qCAAqC,4BAA4B,4CAA4C,oBAAoB,oDAAoD,oDAAoD,0CAA0C,sEAAsE,iDAAiD,6DAA6D,0CAA0C,sBAAsB,yCAAyC,qDAAqD,iDAAiD,UAAU,oDAAoD,YAAY,kDAAkD,2DAA2D,gDAAgD,yEAAyE,yCAAyC,iDAAiD,2CAA2C,sEAAsE,sCAAsC,OAAO,uCAAuC,mBAAmB,gDAAgD,yCAAyC,wDAAwD,kDAAkD,iEAAiE,iHAAiH,6DAA6D,yIAAyI,OAAS,UAAU,MAAQ,YAAY,OAAS,YAAY,aAAa,KAAK,gBAAgB,QAAQ,mBAAmB,SAAS,oBAAoB,UAAU,qBAAqB,gCAAgC,uBAAuB,QAAQ,+BAA+B,iKAAiK,kCAAkC,wDAAwD,iBAAiB,6HAA6H,wBAAwB,UAAU,0BAA0B,iBAAiB,yBAAyB,+BAA+B,6BAA6B,iCAAiC,2BAA2B,sCAAsC,+BAA+B,wFAAwF,+BAA+B,sEAAsE,8BAA8B,qCAAqC,8BAA8B,2EAA2E,iCAAiC,yEAAyE,6BAA6B,yBAAyB,mCAAmC,oIAAoI,6CAA6C,QAAQ,gCAAgC,+CAA+C,gCAAgC,mCAAmC,6BAA6B,gBAAgB,mCAAmC,uBAAuB,+BAA+B,qBAAqB,oCAAoC,0EAA0E,0BAA0B,mBAAmB,8BAA8B,oBAAoB,iCAAiC,OAAO,iCAAiC,QAAQ,sCAAsC,iFAAiF,6BAA6B,8EAA8E,uCAAuC,oGAAoG,6BAA6B,2BAA2B,+BAA+B,oCAAoC,iCAAiC,yBAAyB,uCAAuC,sFAAsF,sCAAsC,8EAA8E,sCAAsC,oCAAoC,kCAAkC,yEAAyE,kDAAkD,wDAAwD,8CAA8C,yDAAyD,oCAAoC,sEAAsE,+BAA+B,qCAAqC,+BAA+B,qDAAqD,2BAA2B,yDAAyD,wBAAwB,gCAAgC,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,sIAAsI,yCAAyC,mHAAmH,mCAAmC,0DAA0D,sBAAsB,yBAAyB,8BAA8B,kCAAkC,kCAAkC,sBAAsB,mCAAmC,wBAAwB,qCAAqC,uBAAuB,oBAAoB,SAAS,gCAAgC,4BAA4B,6BAA6B,sCAAsC,kDAAkD,gFAAgF,mCAAmC,yDAAyD,4BAA4B,gGAAgG,kCAAkC,SAAS,4CAA4C,0DAA0D,gDAAgD,gKAAgK,mDAAmD,6CAA6C,mDAAmD,oGAAoG,iCAAiC,SAAS,mCAAmC,gBAAgB,mCAAmC,4BAA4B,sCAAsC,mCAAmC,2CAA2C,6DAA6D,0BAA0B,YAAY,8BAA8B,eAAe,qCAAqC,qBAAqB,2BAA2B,QAAQ,iCAAiC,eAAe,mCAAmC,UAAU,yCAAyC,gBAAgB,0CAA0C,iBAAiB,oDAAoD,qLAAqL,mDAAmD,yKAAyK,yCAAyC,gLAAgL,qCAAqC,UAAU,oCAAoC,QAAQ,mDAAmD,uBAAuB,mCAAmC,0BAA0B,gCAAgC,iEAAiE,sCAAsC,2BAA2B,4CAA4C,kCAAkC,MAAQ,SAAS,4BAA4B,aAAa,sCAAsC,gCAAgC,4BAA4B,YAAY,sCAAsC,4FAA4F,qCAAqC,sCAAsC,oDAAoD,mDAAmD,wDAAwD,2DAA2D,8BAA8B,aAAa,iCAAiC,OAAO,gCAAgC,mBAAmB,gCAAgC,gDAAgD,4BAA4B,wBAAwB,oCAAoC,gCAAgC,2CAA2C,sCAAsC,gBAAkB,oBAAoB,cAAc,oBAAoB,sBAAsB,0BAA0B,mBAAmB,gBAAgB,2BAA2B,kBAAkB,iDAAiD,6CAA6C,sDAAsD,wBAAwB,eAAe,gCAAgC,4CAA4C,sEAAsE,2CAA2C,0DAA0D,wCAAwC,wBAAwB,+BAA+B,2BAA2B,yCAAyC,6BAA6B,iDAAiD,uBAAuB,sEAAsE,+BAA+B,oDAAoD,4BAA4B,4DAA4D,0GAA0G,4DAA4D,qHAAqH,2CAA2C,0BAA0B,wBAAwB,2BAA2B,wCAAwC,wBAAwB,oCAAoC,yCAAyC,2BAA2B,gBAAgB,gCAAgC,YAAY,iCAAiC,kBAAkB,wCAAwC,sBAAsB,wDAAwD,sBAAsB,kEAAkE,kCAAkC,sDAAsD,iBAAiB,oDAAoD,OAAO,kDAAkD,MAAM,6CAA6C,4BAA4B,4CAA4C,2BAA2B,sDAAsD,6DAA6D,qDAAqD,2DAA2D,uDAAuD,qBAAqB,sDAAsD,oBAAoB,iDAAiD,uBAAuB,0DAA0D,8BAA8B,sCAAsC,UAAU,qCAAqC,SAAS,8BAA8B,eAAe,0BAA0B,QAAQ,4BAA4B,MAAM,kDAAkD,uGAAuG,kDAAkD,gGAAgG,6CAA6C,6FAA6F,6CAA6C,sFAAsF,0CAA0C,4IAA8I,0CAA0C,8HAAgI,uCAAuC,iRAAiR,wCAAwC,uBAAuB,0CAA0C,mCAAmC,qCAAqC,0BAA0B,kCAAkC,gBAAgB,8CAA8C,sBAAsB,gDAAgD,yBAAyB,2CAA2C,mBAAmB,uDAAuD,WAAW,sDAAsD,kBAAkB,gDAAgD,eAAe,8CAA8C,aAAa,+CAA+C,gDAAgD,oDAAoD,uBAAuB,kDAAkD,yBAAyB,8CAA8C,yBAAyB,+DAA+D,0BAA0B,wCAAwC,oBAAoB,sEAAsE,sGAAsG,0CAA0C,+BAA+B,8CAA8C,QAAQ,2CAA2C,mBAAmB,oDAAoD,eAAe,oDAAoD,QAAQ,wDAAwD,uDAAuD,mEAAmE,kDAAkD,oEAAoE,mDAAmD,mDAAmD,oBAAoB,uDAAuD,0FAA0F,0DAA0D,wDAAwD,iDAAiD,QAAQ,yDAAyD,iCAAiC,wDAAwD,mCAAmC,6DAA6D,yFAAyF,4DAA4D,wFAAwF,wDAAwD,2BAA2B,qDAAqD,gBAAgB,2DAA2D,qCAAqC,wDAAwD,aAAa,qDAAqD,wBAAwB,sDAAsD,wBAAwB,uDAAuD,MAAM,8DAA8D,YAAY,gEAAgE,yFAAyF,iEAAiE,aAAa,6DAA6D,MAAM,8DAA8D,cAAc,+DAA+D,qDAAqD,mEAAmE,0BAA0B,iEAAiE,kBAAkB,gEAAgE,YAAY,qEAAqE,mBAAmB,iEAAiE,aAAa,mEAAmE,eAAe,gEAAgE,YAAY,mEAAmE,eAAe,6DAA6D,UAAU,uEAAuE,cAAc,0EAA0E,kBAAkB,0DAA0D,aAAa,2DAA2D,YAAY,6DAA6D,+DAA+D,yDAAyD,+BAA+B,sEAAsE,2CAA2C,0DAA0D,wBAAwB,2DAA2D,wBAAwB,qEAAqE,6BAA6B,iEAAiE,oBAAoB,iEAAiE,oBAAoB,iCAAiC,4BAA4B,sCAAsC,8JAA8J,wCAAwC,8DAA8D,+CAA+C,yBAAyB,mCAAmC,YAAY,6BAA6B,SAAS,+BAA+B,YAAY,iCAAiC,kBAAkB,0BAA0B,6BAA6B,0BAA0B,qCAAqC,2BAA2B,kDAAkD,2BAA2B,kDAAkD,8BAA8B,0BAA0B,iCAAiC,yBAAyB,4BAA4B,qBAAqB,wBAAwB,yDAAyD,uBAAuB,sBAAsB,mCAAmC,0CAA0C,uCAAuC,cAAc,sCAAsC,uEAAuE,+CAA+C,UAAU,qBAAqB,+BAA+B,2BAA2B,sBAAsB,6CAA6C,yIAAyI,2CAA2C,gB,UCAjl9BD,EAAOC,QAAU,CAAC,QAAU,CAAC,MAAQ,WAAW,QAAU,gDAAgD,MAAQ,GAAG,SAAW,CAAC,MAAQ,WAAW,QAAU,GAAG,MAAQ,GAAG,YAAc,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,iBAAiB,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,gBAAgB,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,eAAe,CAAC,MAAQ,OAAO,QAAU,GAAG,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,kCAAkC,QAAU,GAAG,MAAQ,GAAG,uBAAuB,CAAC,MAAQ,cAAc,QAAU,wBAAwB,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,mCAAmC,QAAU,mCAAmC,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,8CAA8C,QAAU,GAAG,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,wCAAwC,QAAU,2FAA2F,MAAQ,GAAG,gEAAgE,CAAC,MAAQ,0KAA0K,QAAU,uJAAuJ,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,yKAAyK,QAAU,uJAAuJ,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,yKAAyK,QAAU,uJAAuJ,WAAY,EAAM,MAAQ,GAAG,8DAA8D,CAAC,MAAQ,wKAAwK,QAAU,uJAAuJ,WAAY,EAAM,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,wDAAwD,QAAU,2FAA2F,MAAQ,GAAG,gEAAgE,CAAC,MAAQ,uJAAuJ,QAAU,uJAAuJ,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,sJAAsJ,QAAU,uJAAuJ,WAAY,EAAM,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,YAAY,QAAU,iEAAiE,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,YAAY,QAAU,gEAAgE,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,0BAA0B,QAAU,qDAAqD,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,uBAAuB,QAAU,qDAAqD,MAAQ,GAAG,oBAAoB,CAAC,MAAQ,WAAW,QAAU,GAAG,MAAQ,GAAG,qBAAqB,CAAC,MAAQ,YAAY,QAAU,GAAG,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,gBAAgB,QAAU,oCAAoC,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,oBAAoB,QAAU,iEAAiE,MAAQ,GAAG,sBAAsB,CAAC,MAAQ,SAAS,QAAU,mBAAmB,MAAQ,GAAG,uBAAuB,CAAC,MAAQ,QAAQ,QAAU,0DAA0D,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,kBAAkB,QAAU,6CAA6C,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,iBAAiB,QAAU,6CAA6C,MAAQ,EAAE,WAAY,GAAO,gCAAgC,CAAC,MAAQ,0BAA0B,QAAU,mDAAmD,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,iBAAiB,QAAU,2BAA2B,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,8BAA8B,QAAU,kFAAkF,MAAQ,GAAG,wBAAwB,CAAC,MAAQ,SAAS,QAAU,+BAA+B,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,6CAA6C,QAAU,GAAG,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,qDAAqD,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,qDAAqD,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,yCAAyC,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,gDAAgD,QAAU,GAAG,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,wBAAwB,QAAU,GAAG,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,sFAAsF,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,kBAAkB,QAAU,GAAG,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,oDAAoD,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,gCAAgC,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,yCAAyC,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,2BAA2B,QAAU,GAAG,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,kBAAkB,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,oBAAoB,QAAU,GAAG,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,kFAAkF,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,6DAA6D,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,uEAAuE,QAAU,GAAG,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,0EAA0E,QAAU,GAAG,MAAQ,GAAG,mBAAmB,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,aAAa,QAAU,+BAA+B,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,aAAa,QAAU,+BAA+B,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,uBAAuB,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,0CAA0C,QAAU,gMAAgM,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,2CAA2C,QAAU,iMAAiM,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,4CAA4C,QAAU,kMAAkM,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,8CAA8C,QAAU,oMAAoM,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,2CAA2C,QAAU,iMAAiM,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,4BAA4B,QAAU,4DAA4D,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,mCAAmC,QAAU,qIAAqI,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,iHAAiH,QAAU,qGAAqG,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,qHAAqH,QAAU,yGAAyG,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,oFAAoF,QAAU,mEAAmE,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,2GAA2G,QAAU,qFAAqF,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,0HAA0H,QAAU,gHAAgH,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,+GAA+G,QAAU,mEAAmE,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,iHAAiH,QAAU,qEAAqE,MAAQ,GAAG,aAAa,CAAC,MAAQ,iEAAiE,QAAU,GAAG,MAAQ,GAAG,gBAAgB,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,wEAAwE,QAAU,GAAG,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,gEAAgE,QAAU,GAAG,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,+BAA+B,QAAU,0DAA0D,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,cAAc,QAAU,qCAAqC,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,eAAe,QAAU,sCAAsC,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,qBAAqB,QAAU,oDAAoD,MAAQ,GAAG,oEAAoE,CAAC,MAAQ,gDAAgD,QAAU,8EAA8E,MAAQ,GAAG,mEAAmE,CAAC,MAAQ,+CAA+C,QAAU,4EAA4E,MAAQ,EAAE,WAAY,GAAO,4DAA4D,CAAC,MAAQ,kBAAkB,QAAU,+EAA+E,MAAQ,GAAG,iEAAiE,CAAC,MAAQ,sBAAsB,QAAU,4FAA4F,MAAQ,EAAE,WAAY,GAAO,kEAAkE,CAAC,MAAQ,uBAAuB,QAAU,6FAA6F,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,0BAA0B,QAAU,kEAAkE,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,kBAAkB,QAAU,2EAA2E,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,WAAW,QAAU,kCAAkC,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,oGAAoG,QAAU,oKAAoK,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,WAAW,QAAU,2CAA2C,MAAQ,GAAG,uDAAuD,CAAC,MAAQ,gBAAgB,QAAU,0IAA0I,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,sFAAsF,QAAU,oJAAoJ,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,QAAQ,QAAU,kMAAkM,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,sCAAsC,QAAU,qEAAqE,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,0CAA0C,QAAU,yEAAyE,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,wCAAwC,QAAU,uEAAuE,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,SAAS,QAAU,qEAAqE,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,QAAQ,QAAU,oCAAoC,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,8FAA8F,QAAU,oKAAoK,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,kBAAkB,QAAU,mHAAmH,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,WAAW,QAAU,iCAAiC,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,oBAAoB,QAAU,4DAA4D,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,MAAM,QAAU,gCAAgC,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,0FAA0F,QAAU,6DAA6D,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,WAAW,QAAU,4DAA4D,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,OAAO,QAAU,8EAA8E,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,iBAAiB,QAAU,oDAAoD,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,kBAAkB,QAAU,kDAAkD,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,iBAAiB,QAAU,kDAAkD,MAAQ,EAAE,WAAY,GAAO,0CAA0C,CAAC,MAAQ,8BAA8B,QAAU,4BAA4B,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,gCAAgC,QAAU,4BAA4B,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,oBAAoB,QAAU,GAAG,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,uBAAuB,QAAU,GAAG,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,mDAAmD,QAAU,uCAAuC,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,+DAA+D,QAAU,GAAG,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,0DAA0D,QAAU,GAAG,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,sDAAsD,QAAU,qFAAqF,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,WAAW,QAAU,wCAAwC,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,YAAY,QAAU,sBAAsB,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,kDAAkD,QAAU,iFAAiF,MAAQ,GAAG,yDAAyD,CAAC,MAAQ,gDAAgD,QAAU,+EAA+E,MAAQ,EAAE,WAAY,GAAO,wDAAwD,CAAC,MAAQ,gEAAgE,QAAU,wFAAwF,MAAQ,GAAG,uDAAuD,CAAC,MAAQ,8DAA8D,QAAU,sFAAsF,MAAQ,EAAE,WAAY,GAAO,yCAAyC,CAAC,MAAQ,mCAAmC,QAAU,GAAG,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,8CAA8C,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,MAAM,QAAU,GAAG,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,gBAAgB,QAAU,GAAG,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,qCAAqC,QAAU,qEAAqE,MAAQ,GAAG,wDAAwD,CAAC,MAAQ,yCAAyC,QAAU,sGAAsG,MAAQ,GAAG,iEAAiE,CAAC,MAAQ,kGAAkG,QAAU,qFAAqF,MAAQ,GAAG,6DAA6D,CAAC,MAAQ,oHAAoH,QAAU,qFAAqF,MAAQ,GAAG,OAAS,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,MAAQ,CAAC,MAAQ,QAAQ,QAAU,gDAAgD,MAAQ,GAAG,OAAS,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,aAAa,CAAC,MAAQ,KAAK,QAAU,GAAG,MAAQ,GAAG,gBAAgB,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,mBAAmB,CAAC,MAAQ,WAAW,QAAU,GAAG,MAAQ,GAAG,oBAAoB,CAAC,MAAQ,YAAY,QAAU,GAAG,MAAQ,GAAG,qBAAqB,CAAC,MAAQ,6BAA6B,QAAU,GAAG,MAAQ,GAAG,uBAAuB,CAAC,MAAQ,OAAO,QAAU,GAAG,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,4IAA4I,QAAU,GAAG,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,6CAA6C,QAAU,GAAG,MAAQ,GAAG,iBAAiB,CAAC,MAAQ,iFAAiF,QAAU,GAAG,MAAQ,GAAG,wBAAwB,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,YAAY,QAAU,gDAAgD,MAAQ,GAAG,yBAAyB,CAAC,MAAQ,WAAW,QAAU,GAAG,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,6BAA6B,QAAU,2CAA2C,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,oCAAoC,QAAU,6CAA6C,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,+EAA+E,QAAU,+CAA+C,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,kEAAkE,QAAU,GAAG,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,mCAAmC,QAAU,GAAG,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,yCAAyC,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,2CAA2C,QAAU,GAAG,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,6FAA6F,QAAU,GAAG,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,OAAO,QAAU,0EAA0E,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,iCAAiC,QAAU,GAAG,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,+BAA+B,QAAU,GAAG,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,iBAAiB,QAAU,GAAG,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,YAAY,QAAU,gDAAgD,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,6CAA6C,QAAU,GAAG,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,YAAY,QAAU,GAAG,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,WAAW,QAAU,gDAAgD,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,6EAA6E,QAAU,oIAAoI,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,8CAA8C,QAAU,qDAAqD,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,sEAAsE,QAAU,sFAAsF,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,qEAAqE,QAAU,qFAAqF,MAAQ,EAAE,WAAY,GAAO,6BAA6B,CAAC,MAAQ,qBAAqB,QAAU,kEAAkE,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,qBAAqB,QAAU,2DAA2D,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,mBAAmB,QAAU,wDAAwD,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,0DAA0D,QAAU,sDAAsD,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,wDAAwD,QAAU,2DAA2D,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,kCAAkC,QAAU,GAAG,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,sDAAsD,QAAU,GAAG,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,4CAA4C,QAAU,GAAG,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,8BAA8B,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,sDAAsD,QAAU,GAAG,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,oCAAoC,QAAU,GAAG,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,uCAAuC,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,sCAAsC,QAAU,GAAG,MAAQ,EAAE,WAAY,GAAO,2BAA2B,CAAC,MAAQ,8BAA8B,QAAU,GAAG,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,sBAAsB,QAAU,wDAAwD,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,qBAAqB,QAAU,wDAAwD,MAAQ,EAAE,WAAY,GAAO,0BAA0B,CAAC,MAAQ,MAAM,QAAU,qCAAqC,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,OAAO,QAAU,sCAAsC,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,2HAA2H,QAAU,mHAAmH,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,0HAA0H,QAAU,kHAAkH,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,0HAA0H,QAAU,kHAAkH,MAAQ,EAAE,WAAY,GAAO,gDAAgD,CAAC,MAAQ,yHAAyH,QAAU,iHAAiH,MAAQ,EAAE,WAAY,GAAO,2CAA2C,CAAC,MAAQ,gDAAgD,QAAU,uDAAuD,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,+CAA+C,QAAU,sDAAsD,MAAQ,EAAE,WAAY,GAAO,8BAA8B,CAAC,MAAQ,mBAAmB,QAAU,kCAAkC,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,kBAAkB,QAAU,kCAAkC,MAAQ,EAAE,WAAY,GAAO,8BAA8B,CAAC,MAAQ,0BAA0B,QAAU,oCAAoC,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,gBAAgB,QAAU,qCAAqC,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,iBAAiB,QAAU,sCAAsC,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,kBAAkB,QAAU,GAAG,MAAQ,GAAG,oBAAoB,CAAC,MAAQ,QAAQ,QAAU,yCAAyC,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,0BAA0B,QAAU,qDAAqD,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,6BAA6B,QAAU,qDAAqD,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,4BAA4B,QAAU,qDAAqD,WAAY,EAAM,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,4DAA4D,QAAU,6KAA6K,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,sCAAsC,QAAU,2DAA2D,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,gFAAgF,QAAU,8EAA8E,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,UAAU,QAAU,iDAAiD,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,6CAA6C,QAAU,mFAAmF,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,8HAA8H,QAAU,uFAAuF,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,mCAAmC,QAAU,4FAA4F,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,oEAAoE,QAAU,sLAAsL,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,qBAAqB,QAAU,gDAAgD,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,gBAAgB,QAAU,0DAA0D,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,qBAAqB,QAAU,6FAA6F,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,6BAA6B,QAAU,+GAA+G,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,oDAAoD,QAAU,wHAAwH,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,OAAO,QAAU,+DAA+D,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,YAAY,QAAU,kEAAkE,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,oBAAoB,QAAU,kMAAkM,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,YAAY,QAAU,6BAA6B,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,kBAAkB,QAAU,0BAA0B,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,eAAe,QAAU,0BAA0B,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,sJAAsJ,QAAU,sDAAsD,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,4HAA4H,QAAU,8DAA8D,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,8JAA8J,QAAU,+EAA+E,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,UAAU,QAAU,GAAG,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,oBAAoB,QAAU,uFAAuF,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,wBAAwB,QAAU,6CAA6C,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,sEAAsE,QAAU,wEAAwE,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,oBAAoB,QAAU,uCAAuC,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,0BAA0B,QAAU,6CAA6C,MAAQ,GAAG,MAAQ,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,OAAO,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,iBAAiB,QAAU,GAAG,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,OAAO,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,qFAAqF,QAAU,GAAG,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,6BAA6B,QAAU,GAAG,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,kCAAkC,QAAU,GAAG,MAAQ,GAAG,wDAAwD,CAAC,MAAQ,+BAA+B,QAAU,GAAG,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,UAAU,QAAU,gDAAgD,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,MAAM,QAAU,GAAG,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,gBAAgB,QAAU,GAAG,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,uCAAuC,QAAU,GAAG,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,sCAAsC,QAAU,GAAG,MAAQ,EAAE,WAAY,GAAO,oCAAoC,CAAC,MAAQ,iBAAiB,QAAU,GAAG,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,gBAAgB,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,uBAAuB,QAAU,GAAG,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,sBAAsB,QAAU,GAAG,MAAQ,EAAE,WAAY,GAAO,mDAAmD,CAAC,MAAQ,sBAAsB,QAAU,GAAG,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,qBAAqB,QAAU,GAAG,MAAQ,EAAE,WAAY,GAAO,0BAA0B,CAAC,MAAQ,uBAAuB,QAAU,gDAAgD,MAAQ,GAAG,yBAAyB,CAAC,MAAQ,sBAAsB,QAAU,gDAAgD,MAAQ,EAAE,WAAY,GAAO,cAAc,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,sBAAsB,CAAC,MAAQ,iBAAiB,QAAU,GAAG,MAAQ,GAAG,mBAAmB,CAAC,MAAQ,WAAW,QAAU,GAAG,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,8CAA8C,QAAU,GAAG,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,eAAe,CAAC,MAAQ,4BAA4B,QAAU,GAAG,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,+DAA+D,QAAU,GAAG,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,mDAAmD,QAAU,GAAG,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,iBAAiB,QAAU,GAAG,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,gBAAgB,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,oBAAoB,QAAU,iIAAiI,MAAQ,GAAG,sEAAsE,CAAC,MAAQ,yBAAyB,QAAU,gDAAgD,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,wBAAwB,QAAU,mJAAmJ,MAAQ,GAAG,4DAA4D,CAAC,MAAQ,mFAAmF,QAAU,yDAAyD,MAAQ,GAAG,4DAA4D,CAAC,MAAQ,qFAAqF,QAAU,yDAAyD,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,wBAAwB,QAAU,GAAG,MAAQ,GAAG,wBAAwB,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,mBAAmB,QAAU,4CAA4C,MAAQ,GAAG,oCAAoC,CAAC,MAAQ,kCAAkC,QAAU,GAAG,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,gBAAgB,QAAU,wCAAwC,MAAQ,GAAG,gCAAgC,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,uBAAuB,QAAU,GAAG,MAAQ,GAAG,wDAAwD,CAAC,MAAQ,kBAAkB,QAAU,GAAG,MAAQ,GAAG,kEAAkE,CAAC,MAAQ,+BAA+B,QAAU,GAAG,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,gBAAgB,QAAU,GAAG,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,MAAM,QAAU,GAAG,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,4CAA4C,CAAC,MAAQ,kBAAkB,QAAU,GAAG,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,+CAA+C,QAAU,GAAG,MAAQ,GAAG,qDAAqD,CAAC,MAAQ,8CAA8C,QAAU,GAAG,MAAQ,GAAG,uDAAuD,CAAC,MAAQ,kBAAkB,QAAU,gDAAgD,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,iBAAiB,QAAU,gDAAgD,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,qBAAqB,QAAU,gDAAgD,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,2BAA2B,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,UAAU,QAAU,GAAG,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,YAAY,QAAU,GAAG,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,OAAO,QAAU,GAAG,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,KAAK,QAAU,GAAG,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,6EAA6E,QAAU,iDAAiD,MAAQ,GAAG,yDAAyD,CAAC,MAAQ,4EAA4E,QAAU,iDAAiD,WAAY,EAAM,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,yEAAyE,QAAU,iDAAiD,MAAQ,GAAG,qDAAqD,CAAC,MAAQ,kEAAkE,QAAU,GAAG,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,iEAAiE,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,8DAA8D,QAAU,GAAG,MAAQ,GAAG,kDAAkD,CAAC,MAAQ,6GAA+G,QAAU,+EAA+E,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,2GAA6G,QAAU,+EAA+E,WAAY,EAAM,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,qGAAuG,QAAU,+EAA+E,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,yNAAyN,QAAU,sHAAsH,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,uBAAuB,QAAU,GAAG,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,0BAA0B,QAAU,GAAG,MAAQ,GAAG,qCAAqC,CAAC,MAAQ,qBAAqB,QAAU,GAAG,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,qBAAqB,QAAU,mLAAmL,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,kBAAkB,QAAU,sHAAwH,MAAQ,IAAI,2CAA2C,CAAC,MAAQ,kBAAkB,QAAU,kLAAkL,MAAQ,GAAG,uDAAuD,CAAC,MAAQ,mBAAmB,QAAU,+KAA+K,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,kBAAkB,QAAU,8KAA8K,MAAQ,GAAG,gDAAgD,CAAC,MAAQ,qBAAqB,QAAU,iKAAiK,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,YAAY,QAAU,GAAG,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,4CAA4C,QAAU,qEAAqE,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,uBAAuB,QAAU,GAAG,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,qBAAqB,QAAU,GAAG,MAAQ,GAAG,yDAAyD,CAAC,MAAQ,oBAAoB,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,iBAAiB,QAAU,gFAAgF,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,yBAAyB,QAAU,8FAA8F,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,iBAAiB,QAAU,wHAAwH,MAAQ,GAAG,8EAA8E,CAAC,MAAQ,oGAAoG,QAAU,8GAA8G,MAAQ,GAAG,6EAA6E,CAAC,MAAQ,mGAAmG,QAAU,8GAA8G,WAAY,EAAM,MAAQ,GAAG,0CAA0C,CAAC,MAAQ,qBAAqB,QAAU,GAAG,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,oDAAoD,CAAC,MAAQ,UAAU,QAAU,GAAG,MAAQ,GAAG,gEAAgE,CAAC,MAAQ,4CAA4C,QAAU,GAAG,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,2CAA2C,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,mEAAmE,CAAC,MAAQ,2CAA2C,QAAU,GAAG,MAAQ,GAAG,oEAAoE,CAAC,MAAQ,4CAA4C,QAAU,GAAG,MAAQ,GAAG,mDAAmD,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,6DAA6D,QAAU,GAAG,MAAQ,GAAG,8DAA8D,CAAC,MAAQ,4DAA4D,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,4BAA4B,QAAU,GAAG,MAAQ,GAAG,iDAAiD,CAAC,MAAQ,OAAO,QAAU,GAAG,MAAQ,GAAG,yDAAyD,CAAC,MAAQ,+BAA+B,QAAU,GAAG,MAAQ,GAAG,wDAAwD,CAAC,MAAQ,8BAA8B,QAAU,GAAG,MAAQ,GAAG,qEAAqE,CAAC,MAAQ,yEAAyE,QAAU,GAAG,MAAQ,GAAG,oEAAoE,CAAC,MAAQ,wEAAwE,QAAU,GAAG,MAAQ,GAAG,oEAAoE,CAAC,MAAQ,wEAAwE,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,mEAAmE,CAAC,MAAQ,uEAAuE,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,wDAAwD,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,qDAAqD,CAAC,MAAQ,aAAa,QAAU,gFAAgF,MAAQ,GAAG,2DAA2D,CAAC,MAAQ,+BAA+B,QAAU,8CAA8C,MAAQ,GAAG,wDAAwD,CAAC,MAAQ,aAAa,QAAU,8CAA8C,MAAQ,GAAG,qDAAqD,CAAC,MAAQ,iBAAiB,QAAU,qEAAqE,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,kBAAkB,QAAU,iEAAiE,MAAQ,GAAG,uDAAuD,CAAC,MAAQ,MAAM,QAAU,6DAA6D,MAAQ,GAAG,8DAA8D,CAAC,MAAQ,aAAa,QAAU,0DAA0D,MAAQ,GAAG,gEAAgE,CAAC,MAAQ,mFAAmF,QAAU,wIAAwI,MAAQ,GAAG,iEAAiE,CAAC,MAAQ,MAAM,QAAU,wFAAwF,MAAQ,GAAG,6DAA6D,CAAC,MAAQ,OAAO,QAAU,oEAAoE,MAAQ,GAAG,8DAA8D,CAAC,MAAQ,QAAQ,QAAU,qEAAqE,MAAQ,GAAG,+DAA+D,CAAC,MAAQ,uDAAuD,QAAU,gKAAgK,MAAQ,GAAG,mEAAmE,CAAC,MAAQ,sBAAsB,QAAU,mJAAmJ,MAAQ,GAAG,yEAAyE,CAAC,MAAQ,aAAa,QAAU,sEAAsE,MAAQ,GAAG,wEAAwE,CAAC,MAAQ,YAAY,QAAU,qEAAqE,WAAY,EAAM,MAAQ,GAAG,gEAAgE,CAAC,MAAQ,YAAY,QAAU,sEAAsE,MAAQ,GAAG,qEAAqE,CAAC,MAAQ,kBAAkB,QAAU,sEAAsE,MAAQ,GAAG,iEAAiE,CAAC,MAAQ,aAAa,QAAU,sEAAsE,MAAQ,GAAG,mEAAmE,CAAC,MAAQ,eAAe,QAAU,sEAAsE,MAAQ,GAAG,gEAAgE,CAAC,MAAQ,YAAY,QAAU,sEAAsE,MAAQ,GAAG,mEAAmE,CAAC,MAAQ,eAAe,QAAU,sEAAsE,MAAQ,GAAG,6DAA6D,CAAC,MAAQ,aAAa,QAAU,uEAAuE,MAAQ,GAAG,+EAA+E,CAAC,MAAQ,UAAU,QAAU,6GAA6G,MAAQ,GAAG,8EAA8E,CAAC,MAAQ,SAAS,QAAU,6GAA6G,WAAY,EAAM,MAAQ,GAAG,0EAA0E,CAAC,MAAQ,cAAc,QAAU,iGAAiG,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,QAAQ,QAAU,gFAAgF,MAAQ,GAAG,2DAA2D,CAAC,MAAQ,SAAS,QAAU,gFAAgF,MAAQ,GAAG,6DAA6D,CAAC,MAAQ,qDAAqD,QAAU,+DAA+D,MAAQ,GAAG,yDAAyD,CAAC,MAAQ,6BAA6B,QAAU,yDAAyD,MAAQ,GAAG,sEAAsE,CAAC,MAAQ,0CAA0C,QAAU,6GAA6G,MAAQ,GAAG,0DAA0D,CAAC,MAAQ,iBAAiB,QAAU,8FAA8F,MAAQ,GAAG,2DAA2D,CAAC,MAAQ,kBAAkB,QAAU,+FAA+F,MAAQ,GAAG,qEAAqE,CAAC,MAAQ,wBAAwB,QAAU,iFAAiF,MAAQ,GAAG,iEAAiE,CAAC,MAAQ,sBAAsB,QAAU,6EAA6E,MAAQ,GAAG,iEAAiE,CAAC,MAAQ,sBAAsB,QAAU,6EAA6E,MAAQ,GAAG,yCAAyC,CAAC,MAAQ,mBAAmB,QAAU,GAAG,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,kBAAkB,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,8CAA8C,CAAC,MAAQ,oGAAoG,QAAU,GAAG,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,mGAAmG,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,wCAAwC,CAAC,MAAQ,kDAAkD,QAAU,GAAG,MAAQ,GAAG,uDAAuD,CAAC,MAAQ,kBAAkB,QAAU,+HAA+H,MAAQ,GAAG,sDAAsD,CAAC,MAAQ,iBAAiB,QAAU,8HAA8H,WAAY,EAAM,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,cAAc,QAAU,GAAG,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,QAAQ,QAAU,GAAG,MAAQ,GAAG,+BAA+B,CAAC,MAAQ,UAAU,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,YAAY,QAAU,GAAG,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,iCAAiC,QAAU,iEAAiE,MAAQ,GAAG,0BAA0B,CAAC,MAAQ,iCAAiC,QAAU,iEAAiE,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,kCAAkC,QAAU,iEAAiE,MAAQ,GAAG,2BAA2B,CAAC,MAAQ,kCAAkC,QAAU,iEAAiE,MAAQ,GAAG,8BAA8B,CAAC,MAAQ,kBAAkB,QAAU,GAAG,MAAQ,GAAG,iCAAiC,CAAC,MAAQ,qBAAqB,QAAU,GAAG,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,eAAe,QAAU,GAAG,MAAQ,GAAG,wBAAwB,CAAC,MAAQ,2CAA2C,QAAU,+OAA+O,MAAQ,GAAG,uBAAuB,CAAC,MAAQ,mBAAmB,QAAU,sEAAsE,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,sCAAsC,QAAU,oRAAoR,MAAQ,GAAG,uCAAuC,CAAC,MAAQ,aAAa,QAAU,GAAG,MAAQ,GAAG,sCAAsC,CAAC,MAAQ,uDAAuD,QAAU,GAAG,MAAQ,GAAG,+CAA+C,CAAC,MAAQ,SAAS,QAAU,GAAG,MAAQ,GAAG,6BAA6B,CAAC,MAAQ,oBAAoB,QAAU,GAAG,MAAQ,GAAG,4BAA4B,CAAC,MAAQ,mBAAmB,QAAU,GAAG,WAAY,EAAM,MAAQ,GAAG,mCAAmC,CAAC,MAAQ,eAAe,QAAU,sGAAsG,MAAQ,GAAG,kCAAkC,CAAC,MAAQ,cAAc,QAAU,qGAAqG,WAAY,EAAM,MAAQ,GAAG,6CAA6C,CAAC,MAAQ,gIAAgI,QAAU,+EAA+E,MAAQ,GAAG,2CAA2C,CAAC,MAAQ,eAAe,QAAU,uGAAuG,MAAQ,G,WCAxjgED,EAAOC,QAAU,CAAC,QAAU,YAAY,SAAW,aAAa,YAAc,cAAc,iBAAiB,WAAW,gBAAgB,UAAU,eAAe,OAAO,gCAAgC,mCAAmC,uBAAuB,qBAAqB,+BAA+B,sCAAsC,+BAA+B,+CAA+C,yCAAyC,gDAAgD,wDAAwD,+LAA+L,uDAAuD,gMAAgM,kDAAkD,8EAA8E,wDAAwD,8KAA8K,yCAAyC,cAAc,yCAAyC,gBAAgB,8CAA8C,2BAA2B,2CAA2C,2BAA2B,oBAAoB,eAAe,qBAAqB,gBAAgB,0BAA0B,iBAAiB,8BAA8B,gCAAgC,sBAAsB,WAAW,uBAAuB,SAAS,yBAAyB,6BAA6B,gCAAgC,4BAA4B,0BAA0B,kBAAkB,8BAA8B,8CAA8C,wBAAwB,WAAW,wCAAwC,4DAA4D,wCAAwC,+DAA+D,sCAAsC,6DAA6D,sCAAsC,0CAA0C,oCAAoC,kEAAkE,4BAA4B,2BAA2B,2BAA2B,oGAAoG,oCAAoC,mBAAmB,6CAA6C,4EAA4E,oCAAoC,+BAA+B,oCAAoC,iDAAiD,oCAAoC,gCAAgC,mCAAmC,gCAAgC,4CAA4C,oBAAoB,iCAAiC,4BAA4B,yCAAyC,WAAW,+CAA+C,kGAAkG,sCAAsC,wEAAwE,sCAAsC,iGAAiG,qCAAqC,kFAAkF,mBAAmB,cAAc,gCAAgC,uBAAuB,gCAAgC,iBAAiB,kCAAkC,eAAe,uBAAuB,sBAAsB,iCAAiC,gBAAgB,2BAA2B,YAAY,gCAAgC,eAAe,8BAA8B,aAAa,6BAA6B,0CAA0C,8BAA8B,6CAA6C,+BAA+B,0CAA0C,iCAAiC,gDAAgD,8BAA8B,0CAA0C,sCAAsC,4BAA4B,+CAA+C,uCAAuC,gDAAgD,qHAAqH,mDAAmD,yIAAyI,gDAAgD,qGAAqG,0CAA0C,uHAAuH,gDAAgD,6IAA6I,sCAAsC,8GAA8G,gDAAgD,wHAAwH,aAAa,oFAAoF,gBAAgB,SAAS,iCAAiC,gFAAgF,2CAA2C,4EAA4E,2CAA2C,6CAA6C,0CAA0C,WAAW,2CAA2C,YAAY,2CAA2C,0BAA0B,4DAA4D,8CAA8C,4DAA4D,cAAc,0DAA0D,2BAA2B,kCAAkC,+BAA+B,iCAAiC,0BAA0B,uCAAuC,WAAW,iDAAiD,mHAAmH,uCAAuC,gBAAgB,uDAAuD,gBAAgB,sDAAsD,uFAAuF,uCAAuC,OAAO,iDAAiD,sCAAsC,mDAAmD,uCAAuC,kDAAkD,4CAA4C,8CAA8C,gBAAgB,6CAA6C,SAAS,+CAA+C,oGAAoG,8CAA8C,wBAAwB,uCAAuC,UAAU,oCAAoC,iBAAiB,kCAAkC,QAAQ,6CAA6C,sFAAsF,gCAAgC,YAAY,8BAA8B,UAAU,wCAAwC,sBAAsB,wCAAwC,6BAA6B,0CAA0C,8CAA8C,sCAAsC,iCAAiC,oCAAoC,4BAA4B,qCAAqC,2BAA2B,4CAA4C,6BAA6B,oDAAoD,uDAAuD,0CAA0C,2EAA2E,iDAAiD,oEAAoE,0CAA0C,sBAAsB,yCAAyC,4DAA4D,iDAAiD,aAAa,oDAAoD,QAAQ,kDAAkD,0DAA0D,gDAAgD,kEAAkE,yCAAyC,iDAAiD,2CAA2C,mEAAmE,sCAAsC,OAAO,uCAAuC,gBAAgB,gDAAgD,8DAA8D,wDAAwD,qCAAqC,iEAAiE,2IAA2I,6DAA6D,mKAAmK,OAAS,WAAW,MAAQ,SAAS,OAAS,WAAW,aAAa,KAAK,gBAAgB,MAAM,mBAAmB,SAAS,oBAAoB,OAAO,qBAAqB,2CAA2C,uBAAuB,SAAS,+BAA+B,sLAAsL,kCAAkC,4DAA4D,iBAAiB,8GAA8G,wBAAwB,WAAW,0BAA0B,cAAc,yBAAyB,iCAAiC,6BAA6B,gCAAgC,2BAA2B,iDAAiD,+BAA+B,2FAA2F,+BAA+B,4EAA4E,8BAA8B,qCAAqC,8BAA8B,6DAA6D,iCAAiC,8DAA8D,6BAA6B,cAAc,mCAAmC,wGAAwG,6CAA6C,QAAQ,gCAAgC,6BAA6B,gCAAgC,iCAAiC,6BAA6B,aAAa,mCAAmC,qBAAqB,+BAA+B,gBAAgB,oCAAoC,mDAAmD,0BAA0B,oBAAoB,8BAA8B,iBAAiB,iCAAiC,YAAY,iCAAiC,WAAW,sCAAsC,2FAA2F,6BAA6B,6DAA6D,uCAAuC,yEAAyE,6BAA6B,uBAAuB,+BAA+B,wBAAwB,iCAAiC,8BAA8B,uCAAuC,mFAAmF,sCAAsC,+EAA+E,sCAAsC,gDAAgD,kCAAkC,gDAAgD,kDAAkD,0CAA0C,8CAA8C,4CAA4C,oCAAoC,2DAA2D,+BAA+B,+CAA+C,+BAA+B,mDAAmD,2BAA2B,4CAA4C,wBAAwB,mCAAmC,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,2IAA2I,yCAAyC,kIAAkI,mCAAmC,yDAAyD,sBAAsB,yBAAyB,8BAA8B,kCAAkC,kCAAkC,iBAAiB,mCAAmC,kBAAkB,qCAAqC,0BAA0B,oBAAoB,YAAY,gCAAgC,wBAAwB,6BAA6B,wCAAwC,kDAAkD,kEAAkE,mCAAmC,oDAAoD,4BAA4B,uFAAuF,kCAAkC,UAAU,4CAA4C,mDAAmD,gDAAgD,4IAA4I,mDAAmD,gCAAgC,mDAAmD,uEAAuE,iCAAiC,oBAAoB,mCAAmC,gBAAgB,mCAAmC,gCAAgC,sCAAsC,sCAAsC,2CAA2C,gEAAgE,0BAA0B,UAAU,8BAA8B,gBAAgB,qCAAqC,uBAAuB,2BAA2B,SAAS,iCAAiC,cAAc,mCAAmC,YAAY,yCAAyC,iBAAiB,0CAA0C,cAAc,oDAAoD,6KAA6K,mDAAmD,0JAA0J,yCAAyC,qKAAqK,qCAAqC,oBAAoB,oCAAoC,UAAU,mDAAmD,iBAAiB,mCAAmC,mBAAmB,gCAAgC,wEAAwE,sCAAsC,wBAAwB,4CAA4C,6BAA6B,MAAQ,QAAQ,4BAA4B,SAAS,sCAAsC,qBAAqB,4BAA4B,UAAU,sCAAsC,qFAAqF,qCAAqC,kCAAkC,oDAAoD,qCAAqC,wDAAwD,6BAA6B,8BAA8B,aAAa,iCAAiC,OAAO,gCAAgC,gBAAgB,gCAAgC,oDAAoD,4BAA4B,oBAAoB,oCAAoC,uCAAuC,2CAA2C,mCAAmC,gBAAkB,uBAAuB,cAAc,qBAAqB,sBAAsB,yBAAyB,mBAAmB,iBAAiB,2BAA2B,qBAAqB,iDAAiD,8CAA8C,sDAAsD,kBAAkB,eAAe,iCAAiC,4CAA4C,mEAAmE,2CAA2C,0DAA0D,wCAAwC,kBAAkB,+BAA+B,uBAAuB,yCAAyC,yBAAyB,iDAAiD,kBAAkB,sEAAsE,4BAA4B,oDAAoD,4BAA4B,4DAA4D,kFAAkF,4DAA4D,kHAAkH,2CAA2C,mBAAmB,wBAAwB,uBAAuB,wCAAwC,uBAAuB,oCAAoC,uCAAuC,2BAA2B,gBAAgB,gCAAgC,cAAc,iCAAiC,eAAe,wCAAwC,yBAAyB,wDAAwD,iBAAiB,kEAAkE,iCAAiC,sDAAsD,kBAAkB,oDAAoD,QAAQ,kDAAkD,OAAO,6CAA6C,oBAAoB,4CAA4C,qBAAqB,sDAAsD,mDAAmD,qDAAqD,oDAAoD,uDAAuD,yBAAyB,sDAAsD,0BAA0B,iDAAiD,8BAA8B,0DAA0D,+BAA+B,sCAAsC,SAAS,qCAAqC,UAAU,8BAA8B,gBAAgB,0BAA0B,QAAQ,4BAA4B,OAAO,kDAAkD,+FAA+F,kDAAkD,2FAA2F,6CAA6C,sFAAsF,6CAA6C,iFAAiF,0CAA0C,sHAAwH,0CAA0C,2FAA6F,uCAAuC,oNAAoN,wCAAwC,0BAA0B,0CAA0C,0CAA0C,qCAAqC,sBAAsB,kCAAkC,gBAAgB,8CAA8C,+BAA+B,gDAAgD,qBAAqB,2CAA2C,sBAAsB,uDAAuD,kBAAkB,sDAAsD,mBAAmB,gDAAgD,oBAAoB,8CAA8C,QAAQ,+CAA+C,gDAAgD,oDAAoD,0BAA0B,kDAAkD,gCAAgC,8CAA8C,wBAAwB,+DAA+D,+BAA+B,wCAAwC,oBAAoB,sEAAsE,uGAAuG,0CAA0C,mBAAmB,8CAA8C,SAAS,2CAA2C,iBAAiB,oDAAoD,cAAc,oDAAoD,WAAW,wDAAwD,4CAA4C,mEAAmE,wCAAwC,oEAAoE,uCAAuC,mDAAmD,gBAAgB,uDAAuD,8EAA8E,0DAA0D,wCAAwC,iDAAiD,UAAU,yDAAyD,uCAAuC,wDAAwD,wCAAwC,6DAA6D,kFAAkF,4DAA4D,mFAAmF,wDAAwD,sBAAsB,qDAAqD,aAAa,2DAA2D,sCAAsC,wDAAwD,oBAAoB,qDAAqD,2BAA2B,sDAAsD,2BAA2B,uDAAuD,MAAM,8DAA8D,aAAa,gEAAgE,4GAA4G,iEAAiE,UAAU,6DAA6D,OAAO,8DAA8D,WAAW,+DAA+D,wDAAwD,mEAAmE,mBAAmB,iEAAiE,wBAAwB,gEAAgE,kBAAkB,qEAAqE,4BAA4B,iEAAiE,mBAAmB,mEAAmE,6BAA6B,gEAAgE,iBAAiB,mEAAmE,gBAAgB,6DAA6D,gBAAgB,uEAAuE,cAAc,0EAA0E,kBAAkB,0DAA0D,UAAU,2DAA2D,WAAW,6DAA6D,+DAA+D,yDAAyD,kCAAkC,sEAAsE,6CAA6C,0DAA0D,2BAA2B,2DAA2D,2BAA2B,qEAAqE,oCAAoC,iEAAiE,gCAAgC,iEAAiE,+BAA+B,iCAAiC,0CAA0C,sCAAsC,sKAAsK,wCAAwC,oEAAoE,+CAA+C,yBAAyB,mCAAmC,cAAc,6BAA6B,QAAQ,+BAA+B,cAAc,iCAAiC,iBAAiB,0BAA0B,mCAAmC,0BAA0B,mCAAmC,2BAA2B,oCAAoC,2BAA2B,oCAAoC,8BAA8B,6BAA6B,iCAAiC,gCAAgC,4BAA4B,wBAAwB,wBAAwB,kDAAkD,uBAAuB,qBAAqB,mCAAmC,wCAAwC,uCAAuC,eAAe,sCAAsC,8DAA8D,+CAA+C,WAAW,qBAAqB,+BAA+B,2BAA2B,qBAAqB,6CAA6C,sIAAsI,2CAA2C,e,YCApp8BD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,SAAW,aAAa,YAAc,cAAc,iBAAiB,UAAU,gBAAgB,YAAY,eAAe,aAAa,gCAAgC,0CAA0C,uBAAuB,kCAAkC,+BAA+B,uDAAuD,+BAA+B,wDAAwD,yCAAyC,oDAAoD,wDAAwD,2MAA2M,uDAAuD,6MAA6M,kDAAkD,yEAAyE,wDAAwD,6KAA6K,yCAAyC,eAAe,yCAAyC,gBAAgB,8CAA8C,yBAAyB,2CAA2C,uBAAuB,oBAAoB,gBAAgB,qBAAqB,gBAAgB,0BAA0B,oBAAoB,8BAA8B,+BAA+B,sBAAsB,YAAY,uBAAuB,WAAW,yBAAyB,4BAA4B,gCAAgC,gCAAgC,0BAA0B,qBAAqB,8BAA8B,6CAA6C,wBAAwB,WAAW,wCAAwC,8CAA8C,wCAAwC,6DAA6D,sCAAsC,qEAAqE,sCAAsC,4CAA4C,oCAAoC,8DAA8D,4BAA4B,kDAAkD,2BAA2B,oFAAoF,oCAAoC,mBAAmB,6CAA6C,4DAA4D,oCAAoC,wCAAwC,oCAAoC,iDAAiD,oCAAoC,6BAA6B,mCAAmC,0CAA0C,4CAA4C,4BAA4B,iCAAiC,gCAAgC,yCAAyC,YAAY,+CAA+C,oGAAoG,sCAAsC,yFAAyF,sCAAsC,4FAA4F,qCAAqC,4GAA4G,mBAAmB,2BAA2B,gCAAgC,0BAA0B,gCAAgC,WAAW,kCAAkC,kBAAkB,uBAAuB,eAAe,iCAAiC,gBAAgB,2BAA2B,cAAc,gCAAgC,eAAe,8BAA8B,cAAc,6BAA6B,2CAA2C,8BAA8B,8CAA8C,+BAA+B,2CAA2C,iCAAiC,gDAAgD,8BAA8B,4CAA4C,sCAAsC,8BAA8B,+CAA+C,0CAA0C,gDAAgD,gHAAgH,mDAAmD,sIAAsI,gDAAgD,yGAAyG,0CAA0C,2HAA2H,gDAAgD,yJAAyJ,sCAAsC,gIAAgI,gDAAgD,4IAA4I,aAAa,wFAAwF,gBAAgB,WAAW,iCAAiC,yGAAyG,2CAA2C,yFAAyF,2CAA2C,6CAA6C,0CAA0C,iBAAiB,2CAA2C,mBAAmB,2CAA2C,kCAAkC,4DAA4D,oDAAoD,4DAA4D,wBAAwB,0DAA0D,yBAAyB,kCAAkC,iCAAiC,iCAAiC,2BAA2B,uCAAuC,WAAW,iDAAiD,oGAAoG,uCAAuC,cAAc,uDAAuD,iBAAiB,sDAAsD,gGAAgG,uCAAuC,aAAa,iDAAiD,wCAAwC,mDAAmD,uCAAuC,kDAAkD,8CAA8C,8CAA8C,eAAe,6CAA6C,kBAAkB,+CAA+C,8GAA8G,8CAA8C,4BAA4B,uCAAuC,SAAS,oCAAoC,wBAAwB,kCAAkC,KAAK,6CAA6C,mHAAmH,gCAAgC,YAAY,8BAA8B,cAAc,wCAAwC,oBAAoB,wCAAwC,wBAAwB,0CAA0C,6CAA6C,sCAAsC,gCAAgC,oCAAoC,2BAA2B,qCAAqC,8BAA8B,4CAA4C,+BAA+B,oDAAoD,8DAA8D,0CAA0C,kGAAkG,iDAAiD,+EAA+E,0CAA0C,wBAAwB,yCAAyC,4DAA4D,iDAAiD,kBAAkB,oDAAoD,kBAAkB,kDAAkD,wDAAwD,gDAAgD,2EAA2E,yCAAyC,wDAAwD,2CAA2C,6EAA6E,sCAAsC,OAAO,uCAAuC,iBAAiB,gDAAgD,4CAA4C,wDAAwD,yCAAyC,iEAAiE,6HAA6H,6DAA6D,kIAAkI,OAAS,YAAY,MAAQ,SAAS,OAAS,UAAU,aAAa,IAAI,gBAAgB,cAAc,mBAAmB,SAAS,oBAAoB,OAAO,qBAAqB,oDAAoD,uBAAuB,UAAU,+BAA+B,oLAAoL,kCAAkC,qDAAqD,iBAAiB,mGAAmG,wBAAwB,YAAY,0BAA0B,wBAAwB,yBAAyB,wBAAwB,6BAA6B,+BAA+B,2BAA2B,qCAAqC,+BAA+B,4EAA4E,+BAA+B,kFAAkF,8BAA8B,oDAAoD,8BAA8B,oDAAoD,iCAAiC,+CAA+C,6BAA6B,qBAAqB,mCAAmC,8HAA8H,6CAA6C,OAAO,gCAAgC,uCAAuC,gCAAgC,8BAA8B,6BAA6B,gBAAgB,mCAAmC,4BAA4B,+BAA+B,wBAAwB,oCAAoC,+CAA+C,0BAA0B,mBAAmB,8BAA8B,uBAAuB,iCAAiC,eAAe,iCAAiC,gBAAgB,sCAAsC,+EAA+E,6BAA6B,2DAA2D,uCAAuC,gGAAgG,6BAA6B,uBAAuB,+BAA+B,wBAAwB,iCAAiC,sBAAsB,uCAAuC,wFAAwF,sCAAsC,uFAAuF,sCAAsC,uCAAuC,kCAAkC,uEAAuE,kDAAkD,kDAAkD,8CAA8C,kCAAkC,oCAAoC,4EAA4E,+BAA+B,+CAA+C,+BAA+B,wDAAwD,2BAA2B,kCAAkC,wBAAwB,qCAAqC,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,gJAAgJ,yCAAyC,kJAAkJ,mCAAmC,8DAA8D,sBAAsB,wBAAwB,8BAA8B,2CAA2C,kCAAkC,yBAAyB,mCAAmC,qBAAqB,qCAAqC,2BAA2B,oBAAoB,UAAU,gCAAgC,8BAA8B,6BAA6B,2CAA2C,kDAAkD,+EAA+E,mCAAmC,gEAAgE,4BAA4B,2GAA2G,kCAAkC,QAAQ,4CAA4C,8DAA8D,gDAAgD,qKAAqK,mDAAmD,wCAAwC,mDAAmD,0FAA0F,iCAAiC,cAAc,mCAAmC,gBAAgB,mCAAmC,6BAA6B,sCAAsC,qCAAqC,2CAA2C,6DAA6D,0BAA0B,cAAc,8BAA8B,cAAc,qCAAqC,wBAAwB,2BAA2B,QAAQ,iCAAiC,gBAAgB,mCAAmC,YAAY,yCAAyC,oBAAoB,0CAA0C,gBAAgB,oDAAoD,gNAAgN,mDAAmD,0KAA0K,yCAAyC,kLAAkL,qCAAqC,sBAAsB,oCAAoC,UAAU,mDAAmD,sBAAsB,mCAAmC,6BAA6B,gCAAgC,uEAAuE,sCAAsC,0BAA0B,4CAA4C,iCAAiC,MAAQ,SAAS,4BAA4B,WAAW,sCAAsC,yBAAyB,4BAA4B,cAAc,sCAAsC,wHAAwH,qCAAqC,mDAAmD,oDAAoD,mDAAmD,wDAAwD,0CAA0C,8BAA8B,2BAA2B,iCAAiC,OAAO,gCAAgC,iBAAiB,gCAAgC,uDAAuD,4BAA4B,uBAAuB,oCAAoC,2BAA2B,2CAA2C,oCAAoC,gBAAkB,mBAAmB,cAAc,kCAAkC,sBAAsB,yBAAyB,mBAAmB,iBAAiB,2BAA2B,oBAAoB,iDAAiD,8CAA8C,sDAAsD,iBAAiB,eAAe,gCAAgC,4CAA4C,iEAAiE,2CAA2C,0DAA0D,wCAAwC,iBAAiB,+BAA+B,6BAA6B,yCAAyC,2BAA2B,iDAAiD,8BAA8B,sEAAsE,6CAA6C,oDAAoD,0BAA0B,4DAA4D,0FAA0F,4DAA4D,kHAAkH,2CAA2C,6BAA6B,wBAAwB,uBAAuB,wCAAwC,4BAA4B,oCAAoC,2CAA2C,2BAA2B,gBAAgB,gCAAgC,cAAc,iCAAiC,gBAAgB,wCAAwC,0BAA0B,wDAAwD,qBAAqB,kEAAkE,qCAAqC,sDAAsD,qBAAqB,oDAAoD,OAAO,kDAAkD,QAAQ,6CAA6C,yBAAyB,4CAA4C,2BAA2B,sDAAsD,qDAAqD,qDAAqD,uDAAuD,uDAAuD,0BAA0B,sDAAsD,4BAA4B,iDAAiD,+BAA+B,0DAA0D,+BAA+B,sCAAsC,SAAS,qCAAqC,WAAW,8BAA8B,cAAc,0BAA0B,OAAO,4BAA4B,QAAQ,kDAAkD,gFAAgF,kDAAkD,wEAAwE,6CAA6C,qEAAqE,6CAA6C,6DAA6D,0CAA0C,6HAA+H,0CAA0C,+GAAiH,uCAAuC,oOAAoO,wCAAwC,8BAA8B,0CAA0C,yCAAyC,qCAAqC,kCAAkC,kCAAkC,eAAe,8CAA8C,4BAA4B,gDAAgD,0BAA0B,2CAA2C,wBAAwB,uDAAuD,mBAAmB,sDAAsD,qBAAqB,gDAAgD,oBAAoB,8CAA8C,UAAU,+CAA+C,mDAAmD,oDAAoD,8BAA8B,kDAAkD,yBAAyB,8CAA8C,iBAAiB,+DAA+D,6BAA6B,wCAAwC,sBAAsB,sEAAsE,8GAA8G,0CAA0C,iCAAiC,8CAA8C,QAAQ,2CAA2C,mBAAmB,oDAAoD,cAAc,oDAAoD,UAAU,wDAAwD,8CAA8C,mEAAmE,4CAA4C,oEAAoE,0CAA0C,mDAAmD,eAAe,uDAAuD,8EAA8E,0DAA0D,yCAAyC,iDAAiD,WAAW,yDAAyD,uCAAuC,wDAAwD,yCAAyC,6DAA6D,uEAAuE,4DAA4D,yEAAyE,wDAAwD,2BAA2B,qDAAqD,uBAAuB,2DAA2D,0CAA0C,wDAAwD,oBAAoB,qDAAqD,gCAAgC,sDAAsD,iCAAiC,uDAAuD,MAAM,8DAA8D,aAAa,gEAAgE,2GAA2G,iEAAiE,UAAU,6DAA6D,OAAO,8DAA8D,UAAU,+DAA+D,yDAAyD,mEAAmE,wBAAwB,iEAAiE,sBAAsB,gEAAgE,eAAe,qEAAqE,2BAA2B,iEAAiE,eAAe,mEAAmE,4BAA4B,gEAAgE,eAAe,mEAAmE,wBAAwB,6DAA6D,iBAAiB,uEAAuE,aAAa,0EAA0E,kBAAkB,0DAA0D,YAAY,2DAA2D,UAAU,6DAA6D,2EAA2E,yDAAyD,yCAAyC,sEAAsE,+CAA+C,0DAA0D,gCAAgC,2DAA2D,iCAAiC,qEAAqE,kCAAkC,iEAAiE,oCAAoC,iEAAiE,gCAAgC,iCAAiC,yBAAyB,sCAAsC,yHAAyH,wCAAwC,2DAA2D,+CAA+C,0BAA0B,mCAAmC,aAAa,6BAA6B,QAAQ,+BAA+B,UAAU,iCAAiC,cAAc,0BAA0B,sCAAsC,0BAA0B,sCAAsC,2BAA2B,sCAAsC,2BAA2B,sCAAsC,8BAA8B,wBAAwB,iCAAiC,yBAAyB,4BAA4B,2BAA2B,wBAAwB,gEAAgE,uBAAuB,qBAAqB,mCAAmC,2CAA2C,uCAAuC,mBAAmB,sCAAsC,mEAAmE,+CAA+C,YAAY,qBAAqB,mCAAmC,2BAA2B,yBAAyB,6CAA6C,mIAAmI,2CAA2C,sB,YCAvh+BD,EAAOC,QAAU,CAAC,QAAU,YAAY,SAAW,KAAK,YAAc,MAAM,iBAAiB,QAAQ,gBAAgB,KAAK,eAAe,KAAK,gCAAgC,qBAAqB,uBAAuB,UAAU,+BAA+B,qBAAqB,+BAA+B,gCAAgC,yCAAyC,oBAAoB,wDAAwD,iGAAiG,uDAAuD,iGAAiG,kDAAkD,8BAA8B,wDAAwD,gFAAgF,yCAAyC,QAAQ,yCAAyC,OAAO,8CAA8C,cAAc,2CAA2C,cAAc,oBAAoB,QAAQ,qBAAqB,OAAO,0BAA0B,cAAc,8BAA8B,UAAU,sBAAsB,KAAK,uBAAuB,KAAK,yBAAyB,eAAe,gCAAgC,gBAAgB,0BAA0B,eAAe,8BAA8B,sBAAsB,wBAAwB,SAAS,wCAAwC,sBAAsB,wCAAwC,gCAAgC,sCAAsC,iCAAiC,sCAAsC,oBAAoB,oCAAoC,4BAA4B,4BAA4B,kBAAkB,2BAA2B,yCAAyC,oCAAoC,cAAc,6CAA6C,uBAAuB,oCAAoC,YAAY,oCAAoC,oBAAoB,oCAAoC,cAAc,mCAAmC,eAAe,4CAA4C,QAAQ,iCAAiC,kBAAkB,yCAAyC,KAAK,+CAA+C,yCAAyC,sCAAsC,mCAAmC,sCAAsC,kCAAkC,qCAAqC,sCAAsC,mBAAmB,aAAa,gCAAgC,SAAS,gCAAgC,MAAM,kCAAkC,KAAK,uBAAuB,SAAS,iCAAiC,KAAK,2BAA2B,KAAK,gCAAgC,UAAU,8BAA8B,UAAU,6BAA6B,qCAAqC,8BAA8B,uCAAuC,+BAA+B,uCAAuC,iCAAiC,yCAAyC,8BAA8B,sCAAsC,sCAAsC,0BAA0B,+CAA+C,8BAA8B,gDAAgD,8DAA8D,mDAAmD,4DAA4D,gDAAgD,uDAAuD,0CAA0C,wDAAwD,gDAAgD,wDAAwD,sCAAsC,6CAA6C,gDAAgD,2CAA2C,aAAa,4CAA4C,gBAAgB,KAAK,iCAAiC,0CAA0C,2CAA2C,qCAAqC,2CAA2C,sBAAsB,0CAA0C,MAAM,2CAA2C,MAAM,2CAA2C,YAAY,4DAA4D,8BAA8B,4DAA4D,eAAe,0DAA0D,kBAAkB,kCAAkC,UAAU,iCAAiC,WAAW,uCAAuC,SAAS,iDAAiD,mDAAmD,uCAAuC,QAAQ,uDAAuD,WAAW,sDAAsD,oEAAoE,uCAAuC,KAAK,iDAAiD,iCAAiC,mDAAmD,iCAAiC,kDAAkD,iCAAiC,8CAA8C,OAAO,6CAA6C,KAAK,+CAA+C,uEAAuE,8CAA8C,WAAW,uCAAuC,MAAM,oCAAoC,QAAQ,kCAAkC,MAAM,6CAA6C,qDAAqD,gCAAgC,SAAS,8BAA8B,KAAK,wCAAwC,UAAU,wCAAwC,WAAW,0CAA0C,sBAAsB,sCAAsC,gBAAgB,oCAAoC,WAAW,qCAAqC,YAAY,4CAA4C,iBAAiB,oDAAoD,2BAA2B,0CAA0C,8CAA8C,iDAAiD,sCAAsC,0CAA0C,QAAQ,yCAAyC,yCAAyC,iDAAiD,QAAQ,oDAAoD,UAAU,kDAAkD,6CAA6C,gDAAgD,wDAAwD,yCAAyC,2BAA2B,2CAA2C,gCAAgC,sCAAsC,MAAM,uCAAuC,QAAQ,gDAAgD,wBAAwB,wDAAwD,qBAAqB,iEAAiE,oDAAoD,6DAA6D,gEAAgE,OAAS,KAAK,MAAQ,MAAM,OAAS,QAAQ,aAAa,MAAM,gBAAgB,KAAK,mBAAmB,KAAK,oBAAoB,KAAK,qBAAqB,eAAe,uBAAuB,KAAK,+BAA+B,yFAAyF,kCAAkC,4BAA4B,iBAAiB,yCAAyC,wBAAwB,KAAK,0BAA0B,WAAW,yBAAyB,WAAW,6BAA6B,sBAAsB,2BAA2B,wBAAwB,+BAA+B,kDAAkD,+BAA+B,qCAAqC,8BAA8B,sBAAsB,8BAA8B,+BAA+B,iCAAiC,+BAA+B,6BAA6B,YAAY,mCAAmC,qDAAqD,6CAA6C,KAAK,gCAAgC,wBAAwB,gCAAgC,2BAA2B,6BAA6B,KAAK,mCAAmC,WAAW,+BAA+B,OAAO,oCAAoC,iCAAiC,0BAA0B,QAAQ,8BAA8B,OAAO,iCAAiC,OAAO,iCAAiC,OAAO,sCAAsC,wEAAwE,6BAA6B,oCAAoC,uCAAuC,0CAA0C,6BAA6B,YAAY,+BAA+B,iBAAiB,iCAAiC,WAAW,uCAAuC,+BAA+B,sCAAsC,gCAAgC,sCAAsC,oBAAoB,kCAAkC,oCAAoC,kDAAkD,sBAAsB,8CAA8C,gBAAgB,oCAAoC,2BAA2B,+BAA+B,sBAAsB,+BAA+B,0BAA0B,2BAA2B,gBAAgB,wBAAwB,kBAAkB,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,yDAAyD,yCAAyC,2DAA2D,mCAAmC,0BAA0B,sBAAsB,QAAQ,8BAA8B,qBAAqB,kCAAkC,cAAc,mCAAmC,eAAe,qCAAqC,WAAW,oBAAoB,OAAO,gCAAgC,iBAAiB,6BAA6B,qBAAqB,kDAAkD,6CAA6C,mCAAmC,2BAA2B,4BAA4B,uDAAuD,kCAAkC,SAAS,4CAA4C,kCAAkC,gDAAgD,oEAAoE,mDAAmD,uBAAuB,mDAAmD,kCAAkC,iCAAiC,cAAc,mCAAmC,KAAK,mCAAmC,eAAe,sCAAsC,mBAAmB,2CAA2C,wCAAwC,0BAA0B,KAAK,8BAA8B,aAAa,qCAAqC,SAAS,2BAA2B,OAAO,iCAAiC,OAAO,mCAAmC,KAAK,yCAAyC,KAAK,0CAA0C,MAAM,oDAAoD,wFAAwF,mDAAmD,kEAAkE,yCAAyC,mGAAmG,qCAAqC,SAAS,oCAAoC,IAAI,mDAAmD,cAAc,mCAAmC,cAAc,gCAAgC,4DAA4D,sCAAsC,kBAAkB,4CAA4C,gBAAgB,MAAQ,MAAM,4BAA4B,KAAK,sCAAsC,SAAS,4BAA4B,KAAK,sCAAsC,6CAA6C,qCAAqC,iBAAiB,oDAAoD,oBAAoB,wDAAwD,eAAe,8BAA8B,WAAW,iCAAiC,MAAM,gCAAgC,QAAQ,gCAAgC,0BAA0B,4BAA4B,WAAW,oCAAoC,oBAAoB,2CAA2C,gBAAgB,gBAAkB,OAAO,cAAc,UAAU,sBAAsB,WAAW,mBAAmB,OAAO,2BAA2B,eAAe,iDAAiD,8BAA8B,sDAAsD,KAAK,eAAe,MAAM,4CAA4C,oCAAoC,2CAA2C,iCAAiC,wCAAwC,KAAK,+BAA+B,WAAW,yCAAyC,YAAY,iDAAiD,cAAc,sEAAsE,iBAAiB,oDAAoD,cAAc,4DAA4D,gDAAgD,4DAA4D,qDAAqD,2CAA2C,cAAc,wBAAwB,WAAW,wCAAwC,kBAAkB,oCAAoC,2BAA2B,2BAA2B,KAAK,gCAAgC,KAAK,iCAAiC,QAAQ,wCAAwC,WAAW,wDAAwD,KAAK,kEAAkE,SAAS,sDAAsD,OAAO,oDAAoD,IAAI,kDAAkD,IAAI,6CAA6C,aAAa,4CAA4C,YAAY,sDAAsD,gCAAgC,qDAAqD,iCAAiC,uDAAuD,WAAW,sDAAsD,YAAY,iDAAiD,SAAS,0DAA0D,SAAS,sCAAsC,OAAO,qCAAqC,QAAQ,8BAA8B,aAAa,0BAA0B,KAAK,4BAA4B,MAAM,kDAAkD,wDAAwD,kDAAkD,qDAAqD,6CAA6C,yCAAyC,6CAA6C,wCAAwC,0CAA0C,6DAA+D,0CAA0C,8DAAgE,uCAAuC,4IAA4I,wCAAwC,cAAc,0CAA0C,0BAA0B,qCAAqC,aAAa,kCAAkC,KAAK,8CAA8C,QAAQ,gDAAgD,QAAQ,2CAA2C,aAAa,uDAAuD,UAAU,sDAAsD,UAAU,gDAAgD,YAAY,8CAA8C,UAAU,+CAA+C,+BAA+B,oDAAoD,cAAc,kDAAkD,YAAY,8CAA8C,WAAW,+DAA+D,iBAAiB,wCAAwC,YAAY,sEAAsE,sDAAsD,0CAA0C,gBAAgB,8CAA8C,OAAO,2CAA2C,WAAW,oDAAoD,KAAK,oDAAoD,KAAK,wDAAwD,oBAAoB,mEAAmE,oBAAoB,oEAAoE,kBAAkB,mDAAmD,OAAO,uDAAuD,gCAAgC,0DAA0D,iBAAiB,iDAAiD,KAAK,yDAAyD,aAAa,wDAAwD,eAAe,6DAA6D,oCAAoC,4DAA4D,sCAAsC,wDAAwD,WAAW,qDAAqD,UAAU,2DAA2D,qBAAqB,wDAAwD,WAAW,qDAAqD,eAAe,sDAAsD,eAAe,uDAAuD,MAAM,8DAA8D,SAAS,gEAAgE,6CAA6C,iEAAiE,KAAK,6DAA6D,MAAM,8DAA8D,MAAM,+DAA+D,8CAA8C,mEAAmE,oBAAoB,iEAAiE,WAAW,gEAAgE,YAAY,qEAAqE,cAAc,iEAAiE,YAAY,mEAAmE,aAAa,gEAAgE,YAAY,mEAAmE,aAAa,6DAA6D,MAAM,uEAAuE,QAAQ,0EAA0E,MAAM,0DAA0D,KAAK,2DAA2D,QAAQ,6DAA6D,kCAAkC,yDAAyD,iBAAiB,sEAAsE,iCAAiC,0DAA0D,eAAe,2DAA2D,eAAe,qEAAqE,cAAc,iEAAiE,aAAa,iEAAiE,gBAAgB,iCAAiC,cAAc,sCAAsC,+DAA+D,wCAAwC,gCAAgC,+CAA+C,YAAY,mCAAmC,MAAM,6BAA6B,MAAM,+BAA+B,OAAO,iCAAiC,OAAO,0BAA0B,kBAAkB,0BAA0B,gBAAgB,2BAA2B,sBAAsB,2BAA2B,sBAAsB,8BAA8B,gBAAgB,iCAAiC,gBAAgB,4BAA4B,YAAY,wBAAwB,iCAAiC,uBAAuB,iBAAiB,mCAAmC,uBAAuB,uCAAuC,WAAW,sCAAsC,+BAA+B,+CAA+C,KAAK,qBAAqB,gBAAgB,2BAA2B,kBAAkB,6CAA6C,4FAA4F,2CAA2C,O,YCA9juBD,EAAOC,QAAU,CAAC,QAAU,SAAS,SAAW,eAAe,YAAc,cAAc,iBAAiB,YAAY,gBAAgB,YAAY,eAAe,SAAS,gCAAgC,0CAA0C,uBAAuB,oBAAoB,+BAA+B,6CAA6C,+BAA+B,yDAAyD,yCAAyC,6CAA6C,wDAAwD,oLAAoL,uDAAuD,2LAA2L,kDAAkD,kEAAkE,wDAAwD,yJAAyJ,yCAAyC,iBAAiB,yCAAyC,mBAAmB,8CAA8C,6BAA6B,2CAA2C,yBAAyB,oBAAoB,aAAa,qBAAqB,mBAAmB,0BAA0B,sBAAsB,8BAA8B,iBAAiB,sBAAsB,cAAc,uBAAuB,SAAS,yBAAyB,kBAAkB,gCAAgC,+BAA+B,0BAA0B,uBAAuB,8BAA8B,qCAAqC,wBAAwB,aAAa,wCAAwC,4CAA4C,wCAAwC,kDAAkD,sCAAsC,8DAA8D,sCAAsC,mCAAmC,oCAAoC,qDAAqD,4BAA4B,8BAA8B,2BAA2B,4FAA4F,oCAAoC,oBAAoB,6CAA6C,qDAAqD,oCAAoC,mCAAmC,oCAAoC,0CAA0C,oCAAoC,uBAAuB,mCAAmC,wCAAwC,4CAA4C,sBAAsB,iCAAiC,yBAAyB,yCAAyC,cAAc,+CAA+C,+EAA+E,sCAAsC,2EAA2E,sCAAsC,oEAAoE,qCAAqC,+EAA+E,mBAAmB,kBAAkB,gCAAgC,SAAS,gCAAgC,cAAc,kCAAkC,eAAe,uBAAuB,mBAAmB,iCAAiC,iBAAiB,2BAA2B,aAAa,gCAAgC,gBAAgB,8BAA8B,YAAY,6BAA6B,2CAA2C,8BAA8B,4CAA4C,+BAA+B,6CAA6C,iCAAiC,+CAA+C,8BAA8B,2CAA2C,sCAAsC,4BAA4B,+CAA+C,oCAAoC,gDAAgD,8GAA8G,mDAAmD,qHAAqH,gDAAgD,sGAAsG,0CAA0C,6GAA6G,gDAAgD,2HAA2H,sCAAsC,mHAAmH,gDAAgD,sHAAsH,aAAa,mFAAmF,gBAAgB,YAAY,iCAAiC,wEAAwE,2CAA2C,yEAAyE,2CAA2C,qCAAqC,0CAA0C,WAAW,2CAA2C,YAAY,2CAA2C,sBAAsB,4DAA4D,sCAAsC,4DAA4D,kBAAkB,0DAA0D,wBAAwB,kCAAkC,4BAA4B,iCAAiC,kBAAkB,uCAAuC,WAAW,iDAAiD,gGAAgG,uCAAuC,eAAe,uDAAuD,gBAAgB,sDAAsD,yFAAyF,uCAAuC,OAAO,iDAAiD,uCAAuC,mDAAmD,2CAA2C,kDAAkD,wCAAwC,8CAA8C,YAAY,6CAA6C,YAAY,+CAA+C,qGAAqG,8CAA8C,qBAAqB,uCAAuC,aAAa,oCAAoC,eAAe,kCAAkC,OAAO,6CAA6C,sFAAsF,gCAAgC,OAAO,8BAA8B,UAAU,wCAAwC,eAAe,wCAAwC,oBAAoB,0CAA0C,qCAAqC,sCAAsC,qCAAqC,oCAAoC,mBAAmB,qCAAqC,wBAAwB,4CAA4C,sBAAsB,oDAAoD,+CAA+C,0CAA0C,oEAAoE,iDAAiD,2DAA2D,0CAA0C,mBAAmB,yCAAyC,sDAAsD,iDAAiD,WAAW,oDAAoD,YAAY,kDAAkD,mDAAmD,gDAAgD,gEAAgE,yCAAyC,4CAA4C,2CAA2C,2DAA2D,sCAAsC,OAAO,uCAAuC,sBAAsB,gDAAgD,kCAAkC,wDAAwD,uCAAuC,iEAAiE,0GAA0G,6DAA6D,iHAAiH,OAAS,cAAc,MAAQ,UAAU,OAAS,YAAY,aAAa,MAAM,gBAAgB,UAAU,mBAAmB,SAAS,oBAAoB,WAAW,qBAAqB,4CAA4C,uBAAuB,QAAQ,+BAA+B,mKAAmK,kCAAkC,6CAA6C,iBAAiB,uGAAuG,wBAAwB,cAAc,0BAA0B,eAAe,yBAAyB,aAAa,6BAA6B,mCAAmC,2BAA2B,kDAAkD,+BAA+B,8FAA8F,+BAA+B,yEAAyE,8BAA8B,0CAA0C,8BAA8B,yDAAyD,iCAAiC,6DAA6D,6BAA6B,8BAA8B,mCAAmC,2HAA2H,6CAA6C,QAAQ,gCAAgC,mCAAmC,gCAAgC,sDAAsD,6BAA6B,SAAS,mCAAmC,oBAAoB,+BAA+B,WAAW,oCAAoC,kDAAkD,0BAA0B,kBAAkB,8BAA8B,aAAa,iCAAiC,QAAQ,iCAAiC,QAAQ,sCAAsC,+EAA+E,6BAA6B,iEAAiE,uCAAuC,wEAAwE,6BAA6B,uBAAuB,+BAA+B,uBAAuB,iCAAiC,oBAAoB,uCAAuC,kGAAkG,sCAAsC,wEAAwE,sCAAsC,sCAAsC,kCAAkC,oEAAoE,kDAAkD,oDAAoD,8CAA8C,oCAAoC,oCAAoC,iEAAiE,+BAA+B,mCAAmC,+BAA+B,8CAA8C,2BAA2B,oCAAoC,wBAAwB,6BAA6B,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,+IAA+I,yCAAyC,sJAAsJ,mCAAmC,gDAAgD,sBAAsB,sBAAsB,8BAA8B,oCAAoC,kCAAkC,sBAAsB,mCAAmC,uBAAuB,qCAAqC,kBAAkB,oBAAoB,OAAO,gCAAgC,wBAAwB,6BAA6B,kCAAkC,kDAAkD,0EAA0E,mCAAmC,kDAAkD,4BAA4B,wFAAwF,kCAAkC,QAAQ,4CAA4C,oDAAoD,gDAAgD,4IAA4I,mDAAmD,0CAA0C,mDAAmD,sFAAsF,iCAAiC,UAAU,mCAAmC,eAAe,mCAAmC,uBAAuB,sCAAsC,+BAA+B,2CAA2C,uDAAuD,0BAA0B,UAAU,8BAA8B,mBAAmB,qCAAqC,wBAAwB,2BAA2B,QAAQ,iCAAiC,QAAQ,mCAAmC,WAAW,yCAAyC,mBAAmB,0CAA0C,gBAAgB,oDAAoD,2LAA2L,mDAAmD,mKAAmK,yCAAyC,oKAAoK,qCAAqC,UAAU,oCAAoC,UAAU,mDAAmD,mBAAmB,mCAAmC,4BAA4B,gCAAgC,iEAAiE,sCAAsC,0BAA0B,4CAA4C,iCAAiC,MAAQ,OAAO,4BAA4B,WAAW,sCAAsC,uBAAuB,4BAA4B,UAAU,sCAAsC,4FAA4F,qCAAqC,sCAAsC,oDAAoD,gDAAgD,wDAAwD,0CAA0C,8BAA8B,WAAW,iCAAiC,OAAO,gCAAgC,sBAAsB,gCAAgC,wCAAwC,4BAA4B,gBAAgB,oCAAoC,0BAA0B,2CAA2C,+BAA+B,gBAAkB,mBAAmB,cAAc,oBAAoB,sBAAsB,6BAA6B,mBAAmB,aAAa,2BAA2B,gBAAgB,iDAAiD,8CAA8C,sDAAsD,aAAa,eAAe,4BAA4B,4CAA4C,2DAA2D,2CAA2C,qDAAqD,wCAAwC,aAAa,+BAA+B,4BAA4B,yCAAyC,uBAAuB,iDAAiD,oBAAoB,sEAAsE,6BAA6B,oDAAoD,uBAAuB,4DAA4D,4FAA4F,4DAA4D,kGAAkG,2CAA2C,4BAA4B,wBAAwB,4BAA4B,wCAAwC,wBAAwB,oCAAoC,uCAAuC,2BAA2B,eAAe,gCAAgC,eAAe,iCAAiC,kBAAkB,wCAAwC,qBAAqB,wDAAwD,iBAAiB,kEAAkE,sCAAsC,sDAAsD,oBAAoB,oDAAoD,QAAQ,kDAAkD,OAAO,6CAA6C,qBAAqB,4CAA4C,gCAAgC,sDAAsD,wDAAwD,qDAAqD,+DAA+D,uDAAuD,mBAAmB,sDAAsD,2BAA2B,iDAAiD,2BAA2B,0DAA0D,+BAA+B,sCAAsC,OAAO,qCAAqC,cAAc,8BAA8B,mBAAmB,0BAA0B,QAAQ,4BAA4B,MAAM,kDAAkD,uFAAuF,kDAAkD,kFAAkF,6CAA6C,kFAAkF,6CAA6C,wEAAwE,0CAA0C,wHAA0H,0CAA0C,8GAAgH,uCAAuC,2OAA2O,wCAAwC,qBAAqB,0CAA0C,8BAA8B,qCAAqC,2BAA2B,kCAAkC,cAAc,8CAA8C,uBAAuB,gDAAgD,uBAAuB,2CAA2C,iBAAiB,uDAAuD,kBAAkB,sDAAsD,0BAA0B,gDAAgD,uBAAuB,8CAA8C,SAAS,+CAA+C,6CAA6C,oDAAoD,qBAAqB,kDAAkD,sBAAsB,8CAA8C,kBAAkB,+DAA+D,2BAA2B,wCAAwC,gBAAgB,sEAAsE,sGAAsG,0CAA0C,yBAAyB,8CAA8C,QAAQ,2CAA2C,kBAAkB,oDAAoD,eAAe,oDAAoD,QAAQ,wDAAwD,uCAAuC,mEAAmE,2CAA2C,oEAAoE,mCAAmC,mDAAmD,YAAY,uDAAuD,2EAA2E,0DAA0D,wCAAwC,iDAAiD,OAAO,yDAAyD,qCAAqC,wDAAwD,4CAA4C,6DAA6D,mFAAmF,4DAA4D,0FAA0F,wDAAwD,0BAA0B,qDAAqD,aAAa,2DAA2D,+BAA+B,wDAAwD,iBAAiB,qDAAqD,2BAA2B,sDAAsD,0BAA0B,uDAAuD,MAAM,8DAA8D,aAAa,gEAAgE,2GAA2G,iEAAiE,YAAY,6DAA6D,OAAO,8DAA8D,QAAQ,+DAA+D,yDAAyD,mEAAmE,oBAAoB,iEAAiE,aAAa,gEAAgE,YAAY,qEAAqE,qBAAqB,iEAAiE,aAAa,mEAAmE,gBAAgB,gEAAgE,YAAY,mEAAmE,eAAe,6DAA6D,gBAAgB,uEAAuE,UAAU,0EAA0E,cAAc,0DAA0D,YAAY,2DAA2D,YAAY,6DAA6D,kEAAkE,yDAAyD,qCAAqC,sEAAsE,4CAA4C,0DAA0D,2BAA2B,2DAA2D,0BAA0B,qEAAqE,yBAAyB,iEAAiE,uBAAuB,iEAAiE,uBAAuB,iCAAiC,mBAAmB,sCAAsC,qJAAqJ,wCAAwC,0DAA0D,+CAA+C,kBAAkB,mCAAmC,aAAa,6BAA6B,UAAU,+BAA+B,UAAU,iCAAiC,eAAe,0BAA0B,mCAAmC,0BAA0B,mCAAmC,2BAA2B,kCAAkC,2BAA2B,kCAAkC,8BAA8B,yBAAyB,iCAAiC,wBAAwB,4BAA4B,oBAAoB,wBAAwB,0CAA0C,uBAAuB,2BAA2B,mCAAmC,6CAA6C,uCAAuC,kBAAkB,sCAAsC,sEAAsE,+CAA+C,cAAc,qBAAqB,0BAA0B,2BAA2B,uBAAuB,6CAA6C,uHAAuH,2CAA2C,mB,YCA3+6BD,EAAOC,QAAU,CAAC,QAAU,cAAc,SAAW,aAAa,YAAc,cAAc,iBAAiB,WAAW,gBAAgB,UAAU,eAAe,KAAK,gCAAgC,iCAAiC,uBAAuB,mBAAmB,+BAA+B,2CAA2C,+BAA+B,2CAA2C,yCAAyC,4CAA4C,wDAAwD,6KAA6K,uDAAuD,8KAA8K,kDAAkD,qEAAqE,wDAAwD,kKAAkK,yCAAyC,cAAc,yCAAyC,eAAe,8CAA8C,yBAAyB,2CAA2C,wBAAwB,oBAAoB,cAAc,qBAAqB,eAAe,0BAA0B,oBAAoB,8BAA8B,2BAA2B,sBAAsB,UAAU,uBAAuB,UAAU,yBAAyB,sBAAsB,gCAAgC,4BAA4B,0BAA0B,qBAAqB,8BAA8B,uCAAuC,wBAAwB,WAAW,wCAAwC,6CAA6C,wCAAwC,2DAA2D,sCAAsC,wDAAwD,sCAAsC,sCAAsC,oCAAoC,qEAAqE,4BAA4B,6BAA6B,2BAA2B,2FAA2F,oCAAoC,oBAAoB,6CAA6C,6DAA6D,oCAAoC,kCAAkC,oCAAoC,iDAAiD,oCAAoC,wBAAwB,mCAAmC,qCAAqC,4CAA4C,uBAAuB,iCAAiC,kBAAkB,yCAAyC,UAAU,+CAA+C,6FAA6F,sCAAsC,yEAAyE,sCAAsC,2EAA2E,qCAAqC,gFAAgF,mBAAmB,kBAAkB,gCAAgC,2BAA2B,gCAAgC,WAAW,kCAAkC,gBAAgB,uBAAuB,mBAAmB,iCAAiC,eAAe,2BAA2B,aAAa,gCAAgC,gBAAgB,8BAA8B,cAAc,6BAA6B,yCAAyC,8BAA8B,4CAA4C,+BAA+B,yCAAyC,iCAAiC,+CAA+C,8BAA8B,yCAAyC,sCAAsC,4BAA4B,+CAA+C,uCAAuC,gDAAgD,gGAAgG,mDAAmD,2GAA2G,gDAAgD,0EAA0E,0CAA0C,2GAA2G,gDAAgD,mIAAmI,sCAAsC,6GAA6G,gDAAgD,yHAAyH,aAAa,2EAA2E,gBAAgB,WAAW,iCAAiC,mFAAmF,2CAA2C,yEAAyE,2CAA2C,0BAA0B,0CAA0C,UAAU,2CAA2C,UAAU,2CAA2C,oBAAoB,4DAA4D,sCAAsC,4DAA4D,kBAAkB,0DAA0D,uBAAuB,kCAAkC,4BAA4B,iCAAiC,qBAAqB,uCAAuC,YAAY,iDAAiD,4GAA4G,uCAAuC,cAAc,uDAAuD,gBAAgB,sDAAsD,2FAA2F,uCAAuC,SAAS,iDAAiD,sCAAsC,mDAAmD,uCAAuC,kDAAkD,4CAA4C,8CAA8C,gBAAgB,6CAA6C,cAAc,+CAA+C,uGAAuG,8CAA8C,wBAAwB,uCAAuC,WAAW,oCAAoC,uBAAuB,kCAAkC,QAAQ,6CAA6C,oFAAoF,gCAAgC,UAAU,8BAA8B,SAAS,wCAAwC,oBAAoB,wCAAwC,sBAAsB,0CAA0C,uCAAuC,sCAAsC,oCAAoC,oCAAoC,wBAAwB,qCAAqC,yBAAyB,4CAA4C,uBAAuB,oDAAoD,sDAAsD,0CAA0C,0EAA0E,iDAAiD,oEAAoE,0CAA0C,wBAAwB,yCAAyC,wDAAwD,iDAAiD,cAAc,oDAAoD,YAAY,kDAAkD,kDAAkD,gDAAgD,8DAA8D,yCAAyC,yDAAyD,2CAA2C,sEAAsE,sCAAsC,QAAQ,uCAAuC,iBAAiB,gDAAgD,2CAA2C,wDAAwD,uCAAuC,iEAAiE,+GAA+G,6DAA6D,wIAAwI,OAAS,UAAU,MAAQ,SAAS,OAAS,WAAW,aAAa,KAAK,gBAAgB,OAAO,mBAAmB,SAAS,oBAAoB,QAAQ,qBAAqB,qCAAqC,uBAAuB,UAAU,+BAA+B,kKAAkK,kCAAkC,yDAAyD,iBAAiB,wGAAwG,wBAAwB,UAAU,0BAA0B,aAAa,yBAAyB,mBAAmB,6BAA6B,gCAAgC,2BAA2B,yCAAyC,+BAA+B,oEAAoE,+BAA+B,oFAAoF,8BAA8B,sCAAsC,8BAA8B,2CAA2C,iCAAiC,4CAA4C,6BAA6B,sBAAsB,mCAAmC,wGAAwG,6CAA6C,OAAO,gCAAgC,8BAA8B,gCAAgC,iCAAiC,6BAA6B,YAAY,mCAAmC,oBAAoB,+BAA+B,eAAe,oCAAoC,kDAAkD,0BAA0B,iBAAiB,8BAA8B,aAAa,iCAAiC,QAAQ,iCAAiC,SAAS,sCAAsC,wFAAwF,6BAA6B,+CAA+C,uCAAuC,yEAAyE,6BAA6B,sBAAsB,+BAA+B,oCAAoC,iCAAiC,+BAA+B,uCAAuC,+FAA+F,sCAAsC,8FAA8F,sCAAsC,0CAA0C,kCAAkC,kDAAkD,kDAAkD,mDAAmD,8CAA8C,0CAA0C,oCAAoC,2DAA2D,+BAA+B,mCAAmC,+BAA+B,iDAAiD,2BAA2B,0CAA0C,wBAAwB,4BAA4B,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,yHAAyH,yCAAyC,uHAAuH,mCAAmC,+CAA+C,sBAAsB,qBAAqB,8BAA8B,+BAA+B,kCAAkC,oBAAoB,mCAAmC,qBAAqB,qCAAqC,qBAAqB,oBAAoB,eAAe,gCAAgC,kBAAkB,6BAA6B,qCAAqC,kDAAkD,8DAA8D,mCAAmC,mDAAmD,4BAA4B,sEAAsE,kCAAkC,UAAU,4CAA4C,8CAA8C,gDAAgD,0HAA0H,mDAAmD,mCAAmC,mDAAmD,wEAAwE,iCAAiC,uBAAuB,mCAAmC,eAAe,mCAAmC,2BAA2B,sCAAsC,iCAAiC,2CAA2C,2DAA2D,0BAA0B,SAAS,8BAA8B,cAAc,qCAAqC,sBAAsB,2BAA2B,SAAS,iCAAiC,YAAY,mCAAmC,UAAU,yCAAyC,iBAAiB,0CAA0C,cAAc,oDAAoD,0KAA0K,mDAAmD,+IAA+I,yCAAyC,2JAA2J,qCAAqC,oBAAoB,oCAAoC,UAAU,mDAAmD,kBAAkB,mCAAmC,uBAAuB,gCAAgC,yEAAyE,sCAAsC,4BAA4B,4CAA4C,+BAA+B,MAAQ,OAAO,4BAA4B,SAAS,sCAAsC,oBAAoB,4BAA4B,SAAS,sCAAsC,4FAA4F,qCAAqC,oCAAoC,oDAAoD,2CAA2C,wDAAwD,gCAAgC,8BAA8B,YAAY,iCAAiC,QAAQ,gCAAgC,iBAAiB,gCAAgC,kDAAkD,4BAA4B,gBAAgB,oCAAoC,6BAA6B,2CAA2C,6BAA6B,gBAAkB,sBAAsB,cAAc,mBAAmB,sBAAsB,qBAAqB,mBAAmB,YAAY,2BAA2B,qBAAqB,iDAAiD,2CAA2C,sDAAsD,aAAa,eAAe,gCAAgC,4CAA4C,+DAA+D,2CAA2C,sDAAsD,wCAAwC,aAAa,+BAA+B,yBAAyB,yCAAyC,kBAAkB,iDAAiD,mBAAmB,sEAAsE,iCAAiC,oDAAoD,+BAA+B,4DAA4D,oFAAoF,4DAA4D,uGAAuG,2CAA2C,uBAAuB,wBAAwB,uBAAuB,wCAAwC,2BAA2B,oCAAoC,yCAAyC,2BAA2B,eAAe,gCAAgC,aAAa,iCAAiC,eAAe,wCAAwC,wBAAwB,wDAAwD,mBAAmB,kEAAkE,gCAAgC,sDAAsD,iBAAiB,oDAAoD,QAAQ,kDAAkD,WAAW,6CAA6C,qBAAqB,4CAA4C,sBAAsB,sDAAsD,qDAAqD,qDAAqD,gDAAgD,uDAAuD,qBAAqB,sDAAsD,sBAAsB,iDAAiD,yBAAyB,0DAA0D,+BAA+B,sCAAsC,SAAS,qCAAqC,UAAU,8BAA8B,cAAc,0BAA0B,OAAO,4BAA4B,OAAO,kDAAkD,qFAAqF,kDAAkD,iFAAiF,6CAA6C,2EAA2E,6CAA6C,sEAAsE,0CAA0C,0GAA4G,0CAA0C,kGAAoG,uCAAuC,oNAAoN,wCAAwC,kBAAkB,0CAA0C,iCAAiC,qCAAqC,uBAAuB,kCAAkC,aAAa,8CAA8C,6BAA6B,gDAAgD,sBAAsB,2CAA2C,mBAAmB,uDAAuD,mBAAmB,sDAAsD,mBAAmB,gDAAgD,oBAAoB,8CAA8C,WAAW,+CAA+C,gDAAgD,oDAAoD,kBAAkB,kDAAkD,mBAAmB,8CAA8C,eAAe,+DAA+D,8BAA8B,wCAAwC,iBAAiB,sEAAsE,gGAAgG,0CAA0C,qBAAqB,8CAA8C,SAAS,2CAA2C,mBAAmB,oDAAoD,YAAY,oDAAoD,UAAU,wDAAwD,iCAAiC,mEAAmE,iCAAiC,oEAAoE,gCAAgC,mDAAmD,gBAAgB,uDAAuD,uEAAuE,0DAA0D,yCAAyC,iDAAiD,SAAS,yDAAyD,+BAA+B,wDAAwD,gCAAgC,6DAA6D,gEAAgE,4DAA4D,iEAAiE,wDAAwD,uBAAuB,qDAAqD,eAAe,2DAA2D,kCAAkC,wDAAwD,oBAAoB,qDAAqD,8BAA8B,sDAAsD,2BAA2B,uDAAuD,MAAM,8DAA8D,aAAa,gEAAgE,0GAA0G,iEAAiE,YAAY,6DAA6D,OAAO,8DAA8D,SAAS,+DAA+D,wDAAwD,mEAAmE,qBAAqB,iEAAiE,gBAAgB,gEAAgE,gBAAgB,qEAAqE,yBAAyB,iEAAiE,gBAAgB,mEAAmE,2BAA2B,gEAAgE,eAAe,mEAAmE,kBAAkB,6DAA6D,gBAAgB,uEAAuE,UAAU,0EAA0E,kBAAkB,0DAA0D,UAAU,2DAA2D,WAAW,6DAA6D,0DAA0D,yDAAyD,kCAAkC,sEAAsE,4CAA4C,0DAA0D,8BAA8B,2DAA2D,2BAA2B,qEAAqE,8BAA8B,iEAAiE,+BAA+B,iEAAiE,2BAA2B,iCAAiC,mBAAmB,sCAAsC,8IAA8I,wCAAwC,mDAAmD,+CAA+C,oBAAoB,mCAAmC,cAAc,6BAA6B,SAAS,+BAA+B,cAAc,iCAAiC,kBAAkB,0BAA0B,kCAAkC,0BAA0B,qCAAqC,2BAA2B,uCAAuC,2BAA2B,uCAAuC,8BAA8B,wBAAwB,iCAAiC,wBAAwB,4BAA4B,wBAAwB,wBAAwB,2CAA2C,uBAAuB,oBAAoB,mCAAmC,uCAAuC,uCAAuC,cAAc,sCAAsC,sEAAsE,+CAA+C,UAAU,qBAAqB,4BAA4B,2BAA2B,iBAAiB,6CAA6C,8HAA8H,2CAA2C,e,UCAhq6BD,EAAOC,QAAU,CAAC,QAAU,cAAc,SAAW,aAAa,YAAc,cAAc,iBAAiB,WAAW,gBAAgB,UAAU,eAAe,KAAK,gCAAgC,wCAAwC,uBAAuB,oBAAoB,+BAA+B,6CAA6C,+BAA+B,6CAA6C,yCAAyC,4CAA4C,wDAAwD,oKAAoK,uDAAuD,qKAAqK,kDAAkD,uEAAuE,wDAAwD,qKAAqK,yCAAyC,eAAe,yCAAyC,gBAAgB,8CAA8C,yBAAyB,2CAA2C,wBAAwB,oBAAoB,eAAe,qBAAqB,gBAAgB,0BAA0B,oBAAoB,8BAA8B,yBAAyB,sBAAsB,WAAW,uBAAuB,UAAU,yBAAyB,sBAAsB,gCAAgC,4BAA4B,0BAA0B,qBAAqB,8BAA8B,oCAAoC,wBAAwB,WAAW,wCAAwC,8CAA8C,wCAAwC,6DAA6D,sCAAsC,0DAA0D,sCAAsC,wCAAwC,oCAAoC,gDAAgD,4BAA4B,8BAA8B,2BAA2B,iGAAiG,oCAAoC,mBAAmB,6CAA6C,2DAA2D,oCAAoC,kCAAkC,oCAAoC,iDAAiD,oCAAoC,uBAAuB,mCAAmC,qCAAqC,4CAA4C,sBAAsB,iCAAiC,sBAAsB,yCAAyC,WAAW,+CAA+C,iGAAiG,sCAAsC,6EAA6E,sCAAsC,uFAAuF,qCAAqC,iFAAiF,mBAAmB,kBAAkB,gCAAgC,yBAAyB,gCAAgC,aAAa,kCAAkC,mBAAmB,uBAAuB,sBAAsB,iCAAiC,eAAe,2BAA2B,WAAW,gCAAgC,cAAc,8BAA8B,YAAY,6BAA6B,yCAAyC,8BAA8B,4CAA4C,+BAA+B,yCAAyC,iCAAiC,+CAA+C,8BAA8B,yCAAyC,sCAAsC,4BAA4B,+CAA+C,oCAAoC,gDAAgD,kIAAkI,mDAAmD,yIAAyI,gDAAgD,wGAAwG,0CAA0C,8GAA8G,gDAAgD,mIAAmI,sCAAsC,kHAAkH,gDAAgD,2HAA2H,aAAa,6EAA6E,gBAAgB,UAAU,iCAAiC,+EAA+E,2CAA2C,uEAAuE,2CAA2C,wCAAwC,0CAA0C,SAAS,2CAA2C,UAAU,2CAA2C,oBAAoB,4DAA4D,gDAAgD,4DAA4D,kBAAkB,0DAA0D,uBAAuB,kCAAkC,4BAA4B,iCAAiC,4BAA4B,uCAAuC,YAAY,iDAAiD,6HAA6H,uCAAuC,cAAc,uDAAuD,gBAAgB,sDAAsD,2FAA2F,uCAAuC,SAAS,iDAAiD,sCAAsC,mDAAmD,uCAAuC,kDAAkD,4CAA4C,8CAA8C,gBAAgB,6CAA6C,cAAc,+CAA+C,uGAAuG,8CAA8C,uBAAuB,uCAAuC,WAAW,oCAAoC,uBAAuB,kCAAkC,QAAQ,6CAA6C,qFAAqF,gCAAgC,UAAU,8BAA8B,UAAU,wCAAwC,uBAAuB,wCAAwC,sBAAsB,0CAA0C,oCAAoC,sCAAsC,4BAA4B,oCAAoC,wBAAwB,qCAAqC,0BAA0B,4CAA4C,wBAAwB,oDAAoD,2DAA2D,0CAA0C,iFAAiF,iDAAiD,kEAAkE,0CAA0C,wBAAwB,yCAAyC,4DAA4D,iDAAiD,sBAAsB,oDAAoD,YAAY,kDAAkD,kDAAkD,gDAAgD,8DAA8D,yCAAyC,uCAAuC,2CAA2C,mDAAmD,sCAAsC,QAAQ,uCAAuC,kBAAkB,gDAAgD,2CAA2C,wDAAwD,kCAAkC,iEAAiE,+GAA+G,6DAA6D,kIAAkI,OAAS,WAAW,MAAQ,SAAS,OAAS,WAAW,aAAa,KAAK,gBAAgB,OAAO,mBAAmB,SAAS,oBAAoB,QAAQ,qBAAqB,wCAAwC,uBAAuB,UAAU,+BAA+B,6KAA6K,kCAAkC,4DAA4D,iBAAiB,8FAA8F,wBAAwB,WAAW,0BAA0B,cAAc,yBAAyB,sBAAsB,6BAA6B,gCAAgC,2BAA2B,yCAAyC,+BAA+B,+EAA+E,+BAA+B,uFAAuF,8BAA8B,yCAAyC,8BAA8B,0CAA0C,iCAAiC,2CAA2C,6BAA6B,oBAAoB,mCAAmC,gGAAgG,6CAA6C,OAAO,gCAAgC,iCAAiC,gCAAgC,kCAAkC,6BAA6B,YAAY,mCAAmC,oBAAoB,+BAA+B,eAAe,oCAAoC,6CAA6C,0BAA0B,iBAAiB,8BAA8B,aAAa,iCAAiC,QAAQ,iCAAiC,SAAS,sCAAsC,+EAA+E,6BAA6B,gDAAgD,uCAAuC,0EAA0E,6BAA6B,sBAAsB,+BAA+B,2BAA2B,iCAAiC,uBAAuB,uCAAuC,kEAAkE,sCAAsC,iEAAiE,sCAAsC,6CAA6C,kCAAkC,iDAAiD,kDAAkD,8CAA8C,8CAA8C,gCAAgC,oCAAoC,8DAA8D,+BAA+B,sCAAsC,+BAA+B,kDAAkD,2BAA2B,gCAAgC,wBAAwB,4BAA4B,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,4HAA4H,yCAAyC,6HAA6H,mCAAmC,gDAAgD,sBAAsB,qBAAqB,8BAA8B,+BAA+B,kCAAkC,oBAAoB,mCAAmC,qBAAqB,qCAAqC,4BAA4B,oBAAoB,YAAY,gCAAgC,4BAA4B,6BAA6B,qCAAqC,kDAAkD,+EAA+E,mCAAmC,yDAAyD,4BAA4B,wFAAwF,kCAAkC,UAAU,4CAA4C,2DAA2D,gDAAgD,kIAAkI,mDAAmD,mCAAmC,mDAAmD,2EAA2E,iCAAiC,uBAAuB,mCAAmC,eAAe,mCAAmC,qBAAqB,sCAAsC,iCAAiC,2CAA2C,2DAA2D,0BAA0B,UAAU,8BAA8B,cAAc,qCAAqC,0BAA0B,2BAA2B,SAAS,iCAAiC,QAAQ,mCAAmC,UAAU,yCAAyC,iBAAiB,0CAA0C,cAAc,oDAAoD,kKAAkK,mDAAmD,iJAAiJ,yCAAyC,0JAA0J,qCAAqC,oBAAoB,oCAAoC,UAAU,mDAAmD,kBAAkB,mCAAmC,uBAAuB,gCAAgC,8EAA8E,sCAAsC,2BAA2B,4CAA4C,8BAA8B,MAAQ,OAAO,4BAA4B,SAAS,sCAAsC,qBAAqB,4BAA4B,UAAU,sCAAsC,kHAAkH,qCAAqC,uCAAuC,oDAAoD,4CAA4C,wDAAwD,iCAAiC,8BAA8B,aAAa,iCAAiC,QAAQ,gCAAgC,kBAAkB,gCAAgC,uDAAuD,4BAA4B,gBAAgB,oCAAoC,4BAA4B,2CAA2C,iCAAiC,gBAAkB,+BAA+B,cAAc,oBAAoB,sBAAsB,sBAAsB,mBAAmB,YAAY,2BAA2B,qBAAqB,iDAAiD,2CAA2C,sDAAsD,aAAa,eAAe,gCAAgC,4CAA4C,+DAA+D,2CAA2C,sDAAsD,wCAAwC,aAAa,+BAA+B,0BAA0B,yCAAyC,qBAAqB,iDAAiD,sBAAsB,sEAAsE,iCAAiC,oDAAoD,4BAA4B,4DAA4D,gGAAgG,4DAA4D,kHAAkH,2CAA2C,uBAAuB,wBAAwB,wBAAwB,wCAAwC,6BAA6B,oCAAoC,2CAA2C,2BAA2B,eAAe,gCAAgC,aAAa,iCAAiC,eAAe,wCAAwC,qBAAqB,wDAAwD,mBAAmB,kEAAkE,gCAAgC,sDAAsD,iBAAiB,oDAAoD,QAAQ,kDAAkD,WAAW,6CAA6C,qBAAqB,4CAA4C,sBAAsB,sDAAsD,uDAAuD,qDAAqD,4DAA4D,uDAAuD,qBAAqB,sDAAsD,uBAAuB,iDAAiD,yBAAyB,0DAA0D,+BAA+B,sCAAsC,QAAQ,qCAAqC,UAAU,8BAA8B,cAAc,0BAA0B,OAAO,4BAA4B,OAAO,kDAAkD,0FAA0F,kDAAkD,sFAAsF,6CAA6C,+EAA+E,6CAA6C,2EAA2E,0CAA0C,4GAA8G,0CAA0C,oGAAsG,uCAAuC,gOAAgO,wCAAwC,sCAAsC,0CAA0C,gCAAgC,qCAAqC,0BAA0B,kCAAkC,aAAa,8CAA8C,wBAAwB,gDAAgD,sBAAsB,2CAA2C,mBAAmB,uDAAuD,kBAAkB,sDAAsD,mBAAmB,gDAAgD,oBAAoB,8CAA8C,QAAQ,+CAA+C,6CAA6C,oDAAoD,sCAAsC,kDAAkD,qBAAqB,8CAA8C,iBAAiB,+DAA+D,8BAA8B,wCAAwC,iBAAiB,sEAAsE,mGAAmG,0CAA0C,wBAAwB,8CAA8C,SAAS,2CAA2C,iBAAiB,oDAAoD,YAAY,oDAAoD,SAAS,wDAAwD,iCAAiC,mEAAmE,iCAAiC,oEAAoE,gCAAgC,mDAAmD,gBAAgB,uDAAuD,uEAAuE,0DAA0D,wCAAwC,iDAAiD,SAAS,yDAAyD,gCAAgC,wDAAwD,iCAAiC,6DAA6D,8EAA8E,4DAA4D,+EAA+E,wDAAwD,uBAAuB,qDAAqD,eAAe,2DAA2D,uCAAuC,wDAAwD,oBAAoB,qDAAqD,8BAA8B,sDAAsD,2BAA2B,uDAAuD,MAAM,8DAA8D,aAAa,gEAAgE,mGAAmG,iEAAiE,YAAY,6DAA6D,OAAO,8DAA8D,WAAW,+DAA+D,wDAAwD,mEAAmE,sBAAsB,iEAAiE,gBAAgB,gEAAgE,gBAAgB,qEAAqE,0BAA0B,iEAAiE,gBAAgB,mEAAmE,yBAAyB,gEAAgE,eAAe,mEAAmE,kBAAkB,6DAA6D,gBAAgB,uEAAuE,UAAU,0EAA0E,kBAAkB,0DAA0D,UAAU,2DAA2D,WAAW,6DAA6D,8DAA8D,yDAAyD,kCAAkC,sEAAsE,4CAA4C,0DAA0D,8BAA8B,2DAA2D,2BAA2B,qEAAqE,gCAAgC,iEAAiE,+BAA+B,iEAAiE,2BAA2B,iCAAiC,2BAA2B,sCAAsC,4HAA4H,wCAAwC,qDAAqD,+CAA+C,oBAAoB,mCAAmC,cAAc,6BAA6B,SAAS,+BAA+B,cAAc,iCAAiC,kBAAkB,0BAA0B,gCAAgC,0BAA0B,mCAAmC,2BAA2B,kCAAkC,2BAA2B,kCAAkC,8BAA8B,yBAAyB,iCAAiC,yBAAyB,4BAA4B,uBAAuB,wBAAwB,+CAA+C,uBAAuB,qBAAqB,mCAAmC,oCAAoC,uCAAuC,eAAe,sCAAsC,uEAAuE,+CAA+C,WAAW,qBAAqB,8BAA8B,2BAA2B,iBAAiB,6CAA6C,kJAAkJ,2CAA2C,e,YCA3+6BD,EAAOC,QAAU,CAAC,QAAU,YAAY,SAAW,eAAe,YAAc,uBAAuB,iBAAiB,SAAS,gBAAgB,YAAY,eAAe,SAAS,gCAAgC,qCAAqC,uBAAuB,sBAAsB,+BAA+B,mCAAmC,+BAA+B,mDAAmD,yCAAyC,+CAA+C,wDAAwD,oMAAoM,uDAAuD,+LAA+L,kDAAkD,4EAA4E,wDAAwD,6JAA6J,yCAAyC,WAAW,yCAAyC,SAAS,8CAA8C,4BAA4B,2CAA2C,4BAA4B,oBAAoB,eAAe,qBAAqB,SAAS,0BAA0B,gBAAgB,8BAA8B,6CAA6C,sBAAsB,UAAU,uBAAuB,SAAS,yBAAyB,mBAAmB,gCAAgC,+BAA+B,0BAA0B,iBAAiB,8BAA8B,2CAA2C,wBAAwB,iBAAiB,wCAAwC,+DAA+D,wCAAwC,2EAA2E,sCAAsC,uEAAuE,sCAAsC,yCAAyC,oCAAoC,4DAA4D,4BAA4B,8BAA8B,2BAA2B,mFAAmF,oCAAoC,gBAAgB,6CAA6C,yEAAyE,oCAAoC,oCAAoC,oCAAoC,4DAA4D,oCAAoC,sBAAsB,mCAAmC,+BAA+B,4CAA4C,qBAAqB,iCAAiC,mBAAmB,yCAAyC,UAAU,+CAA+C,4GAA4G,sCAAsC,uEAAuE,sCAAsC,+FAA+F,qCAAqC,6EAA6E,mBAAmB,kBAAkB,gCAAgC,aAAa,gCAAgC,aAAa,kCAAkC,YAAY,uBAAuB,SAAS,iCAAiC,eAAe,2BAA2B,YAAY,gCAAgC,eAAe,8BAA8B,YAAY,6BAA6B,2CAA2C,8BAA8B,6CAA6C,+BAA+B,4CAA4C,iCAAiC,8CAA8C,8BAA8B,0CAA0C,sCAAsC,4BAA4B,+CAA+C,mCAAmC,gDAAgD,oGAAoG,mDAAmD,4GAA4G,gDAAgD,mGAAmG,0CAA0C,0GAA0G,gDAAgD,yIAAyI,sCAAsC,2FAA2F,gDAAgD,mGAAmG,aAAa,wEAAwE,gBAAgB,WAAW,iCAAiC,4EAA4E,2CAA2C,kEAAkE,2CAA2C,wCAAwC,0CAA0C,YAAY,2CAA2C,YAAY,2CAA2C,mBAAmB,4DAA4D,6CAA6C,4DAA4D,gBAAgB,0DAA0D,sBAAsB,kCAAkC,0CAA0C,iCAAiC,wBAAwB,uCAAuC,aAAa,iDAAiD,+MAA+M,uCAAuC,WAAW,uDAAuD,SAAS,sDAAsD,2FAA2F,uCAAuC,SAAS,iDAAiD,6DAA6D,mDAAmD,uEAAuE,kDAAkD,sEAAsE,8CAA8C,eAAe,6CAA6C,YAAY,+CAA+C,sGAAsG,8CAA8C,uBAAuB,uCAAuC,QAAQ,oCAAoC,cAAc,kCAAkC,QAAQ,6CAA6C,6GAA6G,gCAAgC,gBAAgB,8BAA8B,YAAY,wCAAwC,oBAAoB,wCAAwC,kBAAkB,0CAA0C,2CAA2C,sCAAsC,sCAAsC,oCAAoC,2BAA2B,qCAAqC,sBAAsB,4CAA4C,sBAAsB,oDAAoD,4CAA4C,0CAA0C,0EAA0E,iDAAiD,2EAA2E,0CAA0C,sBAAsB,yCAAyC,gGAAgG,iDAAiD,YAAY,oDAAoD,UAAU,kDAAkD,mFAAmF,gDAAgD,6FAA6F,yCAAyC,iDAAiD,2CAA2C,0DAA0D,sCAAsC,MAAM,uCAAuC,eAAe,gDAAgD,gDAAgD,wDAAwD,oCAAoC,iEAAiE,8HAA8H,6DAA6D,gJAAgJ,OAAS,UAAU,MAAQ,UAAU,OAAS,SAAS,aAAa,IAAI,gBAAgB,UAAU,mBAAmB,SAAS,oBAAoB,QAAQ,qBAAqB,yCAAyC,uBAAuB,QAAQ,+BAA+B,mLAAmL,kCAAkC,kDAAkD,iBAAiB,6FAA6F,wBAAwB,UAAU,0BAA0B,YAAY,yBAAyB,gBAAgB,6BAA6B,2BAA2B,2BAA2B,6CAA6C,+BAA+B,yFAAyF,+BAA+B,qEAAqE,8BAA8B,2CAA2C,8BAA8B,sDAAsD,iCAAiC,oDAAoD,6BAA6B,0BAA0B,mCAAmC,iHAAiH,6CAA6C,OAAO,gCAAgC,6BAA6B,gCAAgC,qCAAqC,6BAA6B,WAAW,mCAAmC,mBAAmB,+BAA+B,cAAc,oCAAoC,kDAAkD,0BAA0B,wBAAwB,8BAA8B,aAAa,iCAAiC,OAAO,iCAAiC,OAAO,sCAAsC,0IAA0I,6BAA6B,sDAAsD,uCAAuC,+FAA+F,6BAA6B,sBAAsB,+BAA+B,4BAA4B,iCAAiC,yBAAyB,uCAAuC,kEAAkE,sCAAsC,mEAAmE,sCAAsC,6CAA6C,kCAAkC,sEAAsE,kDAAkD,4CAA4C,8CAA8C,sCAAsC,oCAAoC,8DAA8D,+BAA+B,uCAAuC,+BAA+B,kDAAkD,2BAA2B,sCAAsC,wBAAwB,yBAAyB,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,wIAAwI,yCAAyC,qIAAqI,mCAAmC,mDAAmD,sBAAsB,sBAAsB,8BAA8B,4BAA4B,kCAAkC,gBAAgB,mCAAmC,iBAAiB,qCAAqC,wBAAwB,oBAAoB,aAAa,gCAAgC,oBAAoB,6BAA6B,4BAA4B,kDAAkD,2GAA2G,mCAAmC,yDAAyD,4BAA4B,mFAAmF,kCAAkC,YAAY,4CAA4C,+DAA+D,gDAAgD,kJAAkJ,mDAAmD,mCAAmC,mDAAmD,0EAA0E,iCAAiC,mBAAmB,mCAAmC,eAAe,mCAAmC,uBAAuB,sCAAsC,6BAA6B,2CAA2C,sDAAsD,0BAA0B,YAAY,8BAA8B,iBAAiB,qCAAqC,0BAA0B,2BAA2B,YAAY,iCAAiC,QAAQ,mCAAmC,YAAY,yCAAyC,qBAAqB,0CAA0C,gBAAgB,oDAAoD,0LAA0L,mDAAmD,uIAAuI,yCAAyC,0IAA0I,qCAAqC,UAAU,oCAAoC,WAAW,mDAAmD,iBAAiB,mCAAmC,qBAAqB,gCAAgC,uEAAuE,sCAAsC,8BAA8B,4CAA4C,6BAA6B,MAAQ,SAAS,4BAA4B,WAAW,sCAAsC,2BAA2B,4BAA4B,YAAY,sCAAsC,kFAAkF,qCAAqC,iCAAiC,oDAAoD,kCAAkC,wDAAwD,+BAA+B,8BAA8B,cAAc,iCAAiC,MAAM,gCAAgC,eAAe,gCAAgC,4CAA4C,4BAA4B,iBAAiB,oCAAoC,0BAA0B,2CAA2C,2BAA2B,gBAAkB,0BAA0B,cAAc,sBAAsB,sBAAsB,0BAA0B,mBAAmB,gBAAgB,2BAA2B,mBAAmB,iDAAiD,uCAAuC,sDAAsD,YAAY,eAAe,oCAAoC,4CAA4C,uEAAuE,2CAA2C,wDAAwD,wCAAwC,YAAY,+BAA+B,6BAA6B,yCAAyC,sBAAsB,iDAAiD,oBAAoB,sEAAsE,2BAA2B,oDAAoD,yBAAyB,4DAA4D,2EAA2E,4DAA4D,8HAA8H,2CAA2C,qBAAqB,wBAAwB,2BAA2B,wCAAwC,yBAAyB,oCAAoC,oCAAoC,2BAA2B,eAAe,gCAAgC,YAAY,iCAAiC,aAAa,wCAAwC,mBAAmB,wDAAwD,oBAAoB,kEAAkE,iCAAiC,sDAAsD,gBAAgB,oDAAoD,UAAU,kDAAkD,UAAU,6CAA6C,wBAAwB,4CAA4C,qBAAqB,sDAAsD,sDAAsD,qDAAqD,kDAAkD,uDAAuD,sBAAsB,sDAAsD,mBAAmB,iDAAiD,qBAAqB,0DAA0D,uCAAuC,sCAAsC,aAAa,qCAAqC,UAAU,8BAA8B,iBAAiB,0BAA0B,OAAO,4BAA4B,MAAM,kDAAkD,qEAAqE,kDAAkD,kEAAkE,6CAA6C,0DAA0D,6CAA6C,uDAAuD,0CAA0C,0GAA4G,0CAA0C,sGAAwG,uCAAuC,0TAA0T,wCAAwC,uBAAuB,0CAA0C,0BAA0B,qCAAqC,mBAAmB,kCAAkC,iBAAiB,8CAA8C,6BAA6B,gDAAgD,0BAA0B,2CAA2C,iBAAiB,uDAAuD,sBAAsB,sDAAsD,mBAAmB,gDAAgD,oBAAoB,8CAA8C,SAAS,+CAA+C,2CAA2C,oDAAoD,uBAAuB,kDAAkD,sBAAsB,8CAA8C,mBAAmB,+DAA+D,yBAAyB,wCAAwC,oBAAoB,sEAAsE,wFAAwF,0CAA0C,qBAAqB,8CAA8C,YAAY,2CAA2C,mBAAmB,oDAAoD,WAAW,oDAAoD,iBAAiB,wDAAwD,mCAAmC,mEAAmE,mCAAmC,oEAAoE,sCAAsC,mDAAmD,eAAe,uDAAuD,8DAA8D,0DAA0D,iCAAiC,iDAAiD,MAAM,yDAAyD,gCAAgC,wDAAwD,2BAA2B,6DAA6D,mEAAmE,4DAA4D,8DAA8D,wDAAwD,qBAAqB,qDAAqD,cAAc,2DAA2D,+BAA+B,wDAAwD,uBAAuB,qDAAqD,sBAAsB,sDAAsD,oBAAoB,uDAAuD,MAAM,8DAA8D,YAAY,gEAAgE,iGAAiG,iEAAiE,WAAW,6DAA6D,MAAM,8DAA8D,QAAQ,+DAA+D,2FAA2F,mEAAmE,mBAAmB,iEAAiE,aAAa,gEAAgE,aAAa,qEAAqE,qBAAqB,iEAAiE,aAAa,mEAAmE,qBAAqB,gEAAgE,aAAa,mEAAmE,cAAc,6DAA6D,gBAAgB,uEAAuE,SAAS,0EAA0E,iBAAiB,0DAA0D,YAAY,2DAA2D,SAAS,6DAA6D,oDAAoD,yDAAyD,oCAAoC,sEAAsE,0CAA0C,0DAA0D,sBAAsB,2DAA2D,oBAAoB,qEAAqE,0BAA0B,iEAAiE,wBAAwB,iEAAiE,wBAAwB,iCAAiC,wBAAwB,sCAAsC,iJAAiJ,wCAAwC,qEAAqE,+CAA+C,kBAAkB,mCAAmC,gBAAgB,6BAA6B,SAAS,+BAA+B,YAAY,iCAAiC,cAAc,0BAA0B,kCAAkC,0BAA0B,mCAAmC,2BAA2B,kCAAkC,2BAA2B,mCAAmC,8BAA8B,qBAAqB,iCAAiC,oBAAoB,4BAA4B,iBAAiB,wBAAwB,mDAAmD,uBAAuB,uBAAuB,mCAAmC,qCAAqC,uCAAuC,cAAc,sCAAsC,kEAAkE,+CAA+C,UAAU,qBAAqB,yBAAyB,2BAA2B,kBAAkB,6CAA6C,4HAA4H,2CAA2C,Y,WCAtu7BD,EAAOC,QAAU,CAAC,QAAU,QAAQ,SAAW,MAAM,YAAc,KAAK,iBAAiB,KAAK,gBAAgB,KAAK,eAAe,IAAI,gCAAgC,mBAAmB,uBAAuB,QAAQ,+BAA+B,aAAa,+BAA+B,gBAAgB,yCAAyC,kBAAkB,wDAAwD,sEAAsE,uDAAuD,sEAAsE,kDAAkD,4BAA4B,wDAAwD,+DAA+D,yCAAyC,OAAO,yCAAyC,OAAO,8CAA8C,SAAS,2CAA2C,SAAS,oBAAoB,OAAO,qBAAqB,OAAO,0BAA0B,UAAU,8BAA8B,WAAW,sBAAsB,KAAK,uBAAuB,MAAM,yBAAyB,QAAQ,gCAAgC,YAAY,0BAA0B,WAAW,8BAA8B,YAAY,wBAAwB,KAAK,wCAAwC,mBAAmB,wCAAwC,sBAAsB,sCAAsC,kBAAkB,sCAAsC,cAAc,oCAAoC,gBAAgB,4BAA4B,YAAY,2BAA2B,6BAA6B,oCAAoC,cAAc,6CAA6C,mBAAmB,oCAAoC,WAAW,oCAAoC,gBAAgB,oCAAoC,QAAQ,mCAAmC,WAAW,4CAA4C,OAAO,iCAAiC,UAAU,yCAAyC,KAAK,+CAA+C,8BAA8B,sCAAsC,sBAAsB,sCAAsC,2BAA2B,qCAAqC,6BAA6B,mBAAmB,SAAS,gCAAgC,OAAO,gCAAgC,OAAO,kCAAkC,OAAO,uBAAuB,OAAO,iCAAiC,QAAQ,2BAA2B,MAAM,gCAAgC,OAAO,8BAA8B,OAAO,6BAA6B,oCAAoC,8BAA8B,oCAAoC,+BAA+B,oCAAoC,iCAAiC,sCAAsC,8BAA8B,oCAAoC,sCAAsC,2BAA2B,+CAA+C,8BAA8B,gDAAgD,2BAA2B,mDAAmD,4BAA4B,gDAAgD,uBAAuB,0CAA0C,gCAAgC,gDAAgD,uCAAuC,sCAAsC,4BAA4B,gDAAgD,4BAA4B,aAAa,qBAAqB,gBAAgB,KAAK,iCAAiC,wBAAwB,2CAA2C,wBAAwB,2CAA2C,eAAe,0CAA0C,MAAM,2CAA2C,MAAM,2CAA2C,OAAO,4DAA4D,gBAAgB,4DAA4D,aAAa,0DAA0D,iBAAiB,kCAAkC,WAAW,iCAAiC,OAAO,uCAAuC,MAAM,iDAAiD,kDAAkD,uCAAuC,MAAM,uDAAuD,cAAc,sDAAsD,uEAAuE,uCAAuC,IAAI,iDAAiD,iCAAiC,mDAAmD,iCAAiC,kDAAkD,iCAAiC,8CAA8C,MAAM,6CAA6C,KAAK,+CAA+C,wEAAwE,8CAA8C,WAAW,uCAAuC,MAAM,oCAAoC,SAAS,kCAAkC,OAAO,6CAA6C,wCAAwC,gCAAgC,MAAM,8BAA8B,KAAK,wCAAwC,OAAO,wCAAwC,QAAQ,0CAA0C,YAAY,sCAAsC,aAAa,oCAAoC,SAAS,qCAAqC,SAAS,4CAA4C,QAAQ,oDAAoD,oBAAoB,0CAA0C,8BAA8B,iDAAiD,wBAAwB,0CAA0C,OAAO,yCAAyC,yCAAyC,iDAAiD,MAAM,oDAAoD,OAAO,kDAAkD,uCAAuC,gDAAgD,4CAA4C,yCAAyC,cAAc,2CAA2C,gBAAgB,sCAAsC,KAAK,uCAAuC,OAAO,gDAAgD,aAAa,wDAAwD,cAAc,iEAAiE,+BAA+B,6DAA6D,sCAAsC,OAAS,KAAK,MAAQ,IAAI,OAAS,KAAK,aAAa,IAAI,gBAAgB,KAAK,mBAAmB,KAAK,oBAAoB,KAAK,qBAAqB,cAAc,uBAAuB,KAAK,+BAA+B,oDAAoD,kCAAkC,aAAa,iBAAiB,gCAAgC,wBAAwB,KAAK,0BAA0B,QAAQ,yBAAyB,QAAQ,6BAA6B,qBAAqB,2BAA2B,uBAAuB,+BAA+B,uCAAuC,+BAA+B,6BAA6B,8BAA8B,gBAAgB,8BAA8B,cAAc,iCAAiC,cAAc,6BAA6B,QAAQ,mCAAmC,sCAAsC,6CAA6C,KAAK,gCAAgC,cAAc,gCAAgC,eAAe,6BAA6B,KAAK,mCAAmC,QAAQ,+BAA+B,QAAQ,oCAAoC,eAAe,0BAA0B,OAAO,8BAA8B,MAAM,iCAAiC,KAAK,iCAAiC,KAAK,sCAAsC,+DAA+D,6BAA6B,gBAAgB,uCAAuC,sBAAsB,6BAA6B,OAAO,+BAA+B,QAAQ,iCAAiC,SAAS,uCAAuC,kBAAkB,sCAAsC,kBAAkB,sCAAsC,YAAY,kCAAkC,sBAAsB,kDAAkD,WAAW,8CAA8C,YAAY,oCAAoC,eAAe,+BAA+B,kBAAkB,+BAA+B,gBAAgB,2BAA2B,YAAY,wBAAwB,SAAS,0BAA0B,MAAM,2BAA2B,OAAO,0CAA0C,iCAAiC,yCAAyC,qCAAqC,mCAAmC,aAAa,sBAAsB,QAAQ,8BAA8B,QAAQ,kCAAkC,UAAU,mCAAmC,WAAW,qCAAqC,OAAO,oBAAoB,KAAK,gCAAgC,UAAU,6BAA6B,WAAW,kDAAkD,+BAA+B,mCAAmC,kBAAkB,4BAA4B,mCAAmC,kCAAkC,KAAK,4CAA4C,mBAAmB,gDAAgD,gDAAgD,mDAAmD,iBAAiB,mDAAmD,sBAAsB,iCAAiC,QAAQ,mCAAmC,KAAK,mCAAmC,QAAQ,sCAAsC,YAAY,2CAA2C,oCAAoC,0BAA0B,KAAK,8BAA8B,OAAO,qCAAqC,SAAS,2BAA2B,KAAK,iCAAiC,KAAK,mCAAmC,KAAK,yCAAyC,MAAM,0CAA0C,MAAM,oDAAoD,oDAAoD,mDAAmD,oCAAoC,yCAAyC,yFAAyF,qCAAqC,MAAM,oCAAoC,KAAK,mDAAmD,iBAAiB,mCAAmC,WAAW,gCAAgC,6DAA6D,sCAAsC,aAAa,4CAA4C,aAAa,MAAQ,KAAK,4BAA4B,KAAK,sCAAsC,QAAQ,4BAA4B,KAAK,sCAAsC,0BAA0B,qCAAqC,aAAa,oDAAoD,aAAa,wDAAwD,WAAW,8BAA8B,QAAQ,iCAAiC,KAAK,gCAAgC,OAAO,gCAAgC,eAAe,4BAA4B,OAAO,oCAAoC,WAAW,2CAA2C,YAAY,gBAAkB,UAAU,cAAc,QAAQ,sBAAsB,QAAQ,mBAAmB,MAAM,2BAA2B,QAAQ,iDAAiD,eAAe,sDAAsD,OAAO,eAAe,SAAS,4CAA4C,kBAAkB,2CAA2C,gBAAgB,wCAAwC,OAAO,+BAA+B,QAAQ,yCAAyC,SAAS,iDAAiD,UAAU,sEAAsE,YAAY,oDAAoD,UAAU,4DAA4D,4BAA4B,4DAA4D,iCAAiC,2CAA2C,WAAW,wBAAwB,SAAS,wCAAwC,gBAAgB,oCAAoC,cAAc,2BAA2B,KAAK,gCAAgC,KAAK,iCAAiC,MAAM,wCAAwC,SAAS,wDAAwD,QAAQ,kEAAkE,OAAO,sDAAsD,MAAM,oDAAoD,KAAK,kDAAkD,KAAK,6CAA6C,SAAS,4CAA4C,SAAS,sDAAsD,mBAAmB,qDAAqD,mBAAmB,uDAAuD,QAAQ,sDAAsD,QAAQ,iDAAiD,QAAQ,0DAA0D,QAAQ,sCAAsC,KAAK,qCAAqC,KAAK,8BAA8B,OAAO,0BAA0B,KAAK,4BAA4B,KAAK,kDAAkD,uCAAuC,kDAAkD,wCAAwC,6CAA6C,wBAAwB,6CAA6C,yBAAyB,0CAA0C,0CAA4C,0CAA0C,8CAAgD,uCAAuC,2IAA2I,wCAAwC,SAAS,0CAA0C,YAAY,qCAAqC,SAAS,kCAAkC,KAAK,8CAA8C,SAAS,gDAAgD,OAAO,2CAA2C,OAAO,uDAAuD,MAAM,sDAAsD,MAAM,gDAAgD,MAAM,8CAA8C,MAAM,+CAA+C,2BAA2B,oDAAoD,SAAS,kDAAkD,OAAO,8CAA8C,WAAW,+DAA+D,WAAW,wCAAwC,QAAQ,sEAAsE,4BAA4B,0CAA0C,WAAW,8CAA8C,KAAK,2CAA2C,OAAO,oDAAoD,KAAK,oDAAoD,MAAM,wDAAwD,WAAW,mEAAmE,WAAW,oEAAoE,WAAW,mDAAmD,MAAM,uDAAuD,iBAAiB,0DAA0D,WAAW,iDAAiD,IAAI,yDAAyD,SAAS,wDAAwD,SAAS,6DAA6D,qBAAqB,4DAA4D,qBAAqB,wDAAwD,QAAQ,qDAAqD,SAAS,2DAA2D,YAAY,wDAAwD,UAAU,qDAAqD,YAAY,sDAAsD,YAAY,uDAAuD,MAAM,8DAA8D,KAAK,gEAAgE,0BAA0B,iEAAiE,KAAK,6DAA6D,KAAK,8DAA8D,KAAK,+DAA+D,gDAAgD,mEAAmE,oBAAoB,iEAAiE,QAAQ,gEAAgE,QAAQ,qEAAqE,UAAU,iEAAiE,QAAQ,mEAAmE,SAAS,gEAAgE,QAAQ,mEAAmE,UAAU,6DAA6D,MAAM,uEAAuE,KAAK,0EAA0E,MAAM,0DAA0D,KAAK,2DAA2D,KAAK,6DAA6D,qBAAqB,yDAAyD,eAAe,sEAAsE,4BAA4B,0DAA0D,YAAY,2DAA2D,YAAY,qEAAqE,QAAQ,iEAAiE,QAAQ,iEAAiE,WAAW,iCAAiC,SAAS,sCAAsC,oCAAoC,wCAAwC,iBAAiB,+CAA+C,QAAQ,mCAAmC,MAAM,6BAA6B,KAAK,+BAA+B,KAAK,iCAAiC,KAAK,0BAA0B,WAAW,0BAA0B,WAAW,2BAA2B,WAAW,2BAA2B,WAAW,8BAA8B,QAAQ,iCAAiC,QAAQ,4BAA4B,OAAO,wBAAwB,wBAAwB,uBAAuB,cAAc,mCAAmC,gBAAgB,uCAAuC,SAAS,sCAAsC,uBAAuB,+CAA+C,KAAK,qBAAqB,UAAU,2BAA2B,OAAO,6CAA6C,sFAAsF,2CAA2C,Q,iBCA10pB,IAAIC,EAAM,CACT,UAAW,IACX,UAAW,KACX,UAAW,MACX,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,UAAW,MACX,aAAc,OAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,2DC5BpB,MAAMU,EACFC,YAAYC,EAASC,EAAY,CAAC,GAC9BC,KAAKC,UAAYH,EACjBE,KAAKD,UAAYA,EACjBC,KAAKE,aAAeJ,EAAQI,aAC5BF,KAAKG,OAASL,EAAQK,MAC1B,CACAC,aAAaC,GACT,OAAOL,KAAKC,UAAUG,aAAaC,EACvC,CACAC,iBACI,OAAON,KAAKC,UAAUK,gBAC1B,CACAC,kBACI,OAAOP,KAAKC,UAAUM,iBAC1B,CACAC,WAAWC,GACP,OAAO,IAAIb,EAA6BI,KAAKC,UAAUO,WAAWC,GAAWT,KAAKD,UACtF,CACAW,mBAAmBC,GACf,OAAO,IAAIf,EAA6BI,KAAKC,UAAUS,mBAAmBC,GAAWX,KAAKD,UAC9F,CACAa,cAAcC,EAAeC,GACzB,OAAO,IAAIlB,EAA6BI,KAAKC,UAAUW,cAAcC,EAAeC,GAAQd,KAAKD,UACrG,CACAgB,aAAaC,GACT,OAAO,IAAIC,EAAsBjB,KAAKC,UAAUc,aAAaC,GAAiBhB,KAAKD,UACvF,CACAmB,gBACI,OAAO,IAAIC,EAAuBnB,KAAKC,UAAUiB,gBAAiBlB,KAAKD,UAC3E,CACAqB,cACI,OAAOpB,KAAKC,UAAUmB,aAC1B,CACAC,UAAUnC,GACN,OAAO,IAAIoC,EAA6BtB,KAAKC,UAAUoB,UAAUnC,GAAKc,KAAKD,UAC/E,CACAwB,eACI,OAAOvB,KAAKC,UAAUsB,cAC1B,CACAC,aACI,OAAOxB,KAAKC,UAAUuB,YAC1B,EAEJ,MAAMF,EACFzB,YAAYI,EAAWF,GACnBC,KAAKC,UAAYA,EACjBD,KAAKD,UAAYA,EACjBC,KAAKqB,UAAYpB,EAAUoB,SAC/B,CACAI,gBACI,OAAOzB,KAAKC,UAAUwB,eAC1B,CACAC,qBACI,OAAO1B,KAAKC,UAAUyB,oBAC1B,CACAC,aACI,MAAM,WAAEA,GAAe3B,KAAKD,UAC5B,OAAI4B,EACOA,EAAW3B,KAAKC,UAAU0B,aAAc3B,KAAKqB,WAEjDrB,KAAKC,UAAU0B,YAC1B,CACAC,YACI,MAAM,UAAEA,GAAc5B,KAAKD,UAC3B,OAAI6B,EACOA,EAAU5B,KAAKC,UAAU2B,aAE7B5B,KAAKC,UAAU2B,WAC1B,CACAC,UACI,MAAM,QAAEA,GAAY7B,KAAKD,UACzB,OAAI8B,EACOA,EAAQ7B,KAAKC,UAAU4B,WAE3B7B,KAAKC,UAAU4B,SAC1B,CACAC,WACI,OAAO9B,KAAKC,UAAU6B,UAC1B,CACAC,QACI,OAAO/B,KAAKC,UAAU8B,OAC1B,CACAC,WACI,OAAOhC,KAAKC,UAAU+B,UAC1B,CACAC,aACI,MAAM,WAAEA,GAAejC,KAAKD,UAC5B,OAAIkC,EACOA,EAAWjC,KAAKC,UAAUgC,aAAcjC,KAAKqB,WAEjDrB,KAAKC,UAAUgC,YAC1B,CACAC,WACI,MAAM,kBAAEC,GAAsBnC,KAAKD,UACnC,OAAIoC,EACOA,EAAkBnC,KAAKC,UAAUiC,WAAYlC,KAAKqB,WAEtDrB,KAAKC,UAAUiC,UAC1B,CACAE,UACI,OAAOpC,KAAKC,UAAUmC,SAC1B,CACAC,WACI,OAAOrC,KAAKC,UAAUoC,UAC1B,CACAC,cACI,OAAOtC,KAAKC,UAAUqC,aAC1B,CACAC,QACI,OAAOvC,KAAKC,UAAUsC,OAC1B,CACAC,oBACI,OAAOxC,KAAKC,UAAUuC,mBAC1B,CACAC,aACI,OAAOzC,KAAKC,UAAUwC,YAC1B,CACAC,gBACI,OAAO1C,KAAKC,UAAUyC,eAC1B,EAEJ,MAAMzB,EACFpB,YAAYI,EAAWF,GACnBC,KAAKC,UAAYA,EACjBD,KAAKD,UAAYA,EACjBC,KAAKgB,eAAiBf,EAAUe,cACpC,CACAS,gBACI,OAAOzB,KAAKC,UAAUwB,eAC1B,CACAkB,mBACI,MAAM,iBAAEA,GAAqB3C,KAAKD,UAClC,OAAI4C,EACOA,EAAiB3C,KAAKC,UAAU0C,oBAEpC3C,KAAKC,UAAU0C,kBAC1B,CACAP,UACI,OAAOpC,KAAKC,UAAUmC,SAC1B,CACAF,WACI,OAAOlC,KAAKC,UAAUiC,UAC1B,EAEJ,MAAMf,EACFtB,YAAYI,EAAWF,GACnBC,KAAKC,UAAYA,EACjBD,KAAKD,UAAYA,CACrB,CACA6C,+BACI,MAAMC,QAAsB7C,KAAKC,UAAU6C,yBAC3C,OAAO,IAAI7B,EAAsB4B,EAAe7C,KAAKD,UACzD,EAcG,SAASgD,EAAiBjD,EAASkD,GACtC,OAAI,IAAQA,GACDlD,EAEJ,IAAIF,EAA6BE,EAASkD,EACrD,C,mGClKA,MAAMC,EAAwB,gCACxBC,EAAwB,gCAExBC,EAAyBC,IAAU,CACrCC,YAAaD,EAAM,GACnBE,WAAYF,EAAM,GAClBG,KAAK,QAAMH,EAAM,GAAI,eACrBI,YAA6B,IAAhBJ,EAAMK,QAMVC,EAAsBC,GAJlB,CAACA,GAAQA,EAAIC,MAAMX,GAKzBY,CAASF,GAAK5E,KAAK+E,IACtB,MAAMV,EAAQF,EAAsBa,KAAKD,GACzC,OAAc,OAAVV,EACOD,EAAsBC,GAAOG,IAEjCO,CAAO,IAMTE,EAAqBC,GAE1B,IAASA,GACFA,EAEJA,EACFlF,KAAK+E,IACF,QAAgBA,GA9Ba,oBA+BEA,EA/BsBR,eAiClDQ,IAENI,KAAK,IAKDC,EAA8CR,GAlD3D,SAAkBS,EAAOC,GACrB,MAAMC,EAAU,GAChB,IAAIlB,EAAQ,KACZ,KAAsC,QAA9BA,EAAQgB,EAAML,KAAKM,KACvBC,EAAQC,KAAKnB,GAEjB,OAAOkB,CACX,CA2CmEE,CAAStB,EAAuBS,GAAK5E,IAAIoE,E,8EChDrG,SAASsB,EAAMC,GAClB,OAAOC,EAAoBD,IAAQE,EAAuBF,EAC9D,CAKO,SAASC,EAAoBD,GAChC,OAAS,IAAQA,KACW,mBAAvBA,EAAIG,gBACsB,aAAvBH,EAAIG,eAChB,CAKO,SAASD,EAAuBF,GACnC,OAAQ,IAAQA,IAA+B,SAAvBA,EAAIG,cAChC,C,mECjBO,SAASC,EAAsBJ,GAClC,OAAQ,IAAQA,SAA0BK,IAAlBL,EAAIM,SAChC,CAMO,SAASC,EAAmBP,GAC/B,OAAQ,IAAQA,SAAuBK,IAAfL,EAAIQ,MAChC,C,u2oBCjBIC,E,0CA4BG,MAAMC,EACTvF,YAAYM,GACRH,KAAKG,OAASA,EACdH,KAAKmF,GAAM,YACXnF,KAAKqF,KAAO,EACZrF,KAAKsF,MAAQ,GACbtF,KAAKuF,kBAAoB,CAAC,EAC1BvF,KAAKwF,WAAa,CAAC,EACnBxF,KAAKyF,WAAa,CAACnC,EAAYoC,IACnB1F,KAAKG,OAAOwF,iBAAoBD,EAAoB,GAAGpC,KAAcoC,IAA9BpC,EAEnDtD,KAAK4F,QAAWC,IACZ,MAAM,WAAEC,EAAU,WAAEC,EAAU,UAAEC,GAAchG,KAAKG,OAC7C8F,EAAMF,EAAWF,GACjBvC,EAAa0C,EAAUH,GAC7B7F,KAAKwF,WAAWS,GAAOJ,EACvB7F,KAAKuF,kBAAkBvF,KAAKyF,WAAWnC,EAAYtD,KAAKG,OAAOuF,OAASG,EACxE7F,KAAKsF,MAAMf,KAAK,CAACuB,EAAWD,GAAOA,IACnC7F,KAAKqF,MAAM,EAEfrF,KAAKkG,qBAAuB,KACxB,MAAMC,EAAW,IAAOnG,KAAKwF,YAAYY,OAAO,IAAOpG,KAAKuF,oBAC5DvF,KAAKsF,MAAQtF,KAAKsF,MAAMe,QAAO,EAAEC,EAAGT,KACzBM,EAASI,MAAMC,GAAeA,IAAeX,KACtD,EAEN7F,KAAKyG,UAAanB,IACdA,EAAMoB,QAAQ1G,KAAK4F,SACnB5F,KAAKkG,uBACElG,KAEf,CACA,EAAEmF,EAAKwB,OAAOC,YAAaD,OAAOE,aAC9B,OAAO7G,KAAKsF,MAAMqB,OAAOE,WAC7B,CACAC,UACI,OAAO9G,KAAKsF,MAAMqB,OAAOE,WAC7B,CACAE,IAAIC,GACA,IAAI,QAAgBA,GAAM,CACtB,MAAMC,EAAcjH,KAAKuF,kBAAkBvF,KAAKyF,WAAWuB,EAAI1D,WAAY0D,EAAItB,OAI/E,OAHKuB,GAAgBD,EAAItB,OAAQ1F,KAAKG,OAAOwF,iBACzCuB,QAAQC,KAAK,uOAEVF,CACX,CACA,OAAOjH,KAAKwF,WAAWwB,EAAIf,IAC/B,CACAmB,IAAIJ,GACA,YAAyBjC,IAAlB/E,KAAK+G,IAAIC,EACpB,CACAvH,OACI,OAAOO,KAAKsF,MAAMvG,KAAKsI,GAAMA,EAAE,KAAIV,OAAOE,WAC9C,CACAS,SACI,OAAOtH,KAAKsF,MAAMvG,KAAKsI,GAAMA,EAAE,KAAIV,OAAOE,WAC9C,EAEJ,MAAMU,EAA2B,CAC7BvB,UAAYqB,GAAMA,EAAEnI,GACpB6G,WAAasB,GAAMA,EAAEpB,IACrBH,WAAauB,GAAMA,EAAE9D,KASlB,SAASiE,EAAyBlC,EAAOK,GAAkB,GAQ9D,OAPY,IAAIP,EAAU,CACtBM,KAAM,UACNC,kBACAK,UAAYqB,GAAMA,EAAEI,QAAQvI,GAC5B6G,WAAasB,GAAMA,EAAEI,QAAQxB,IAC7BH,WAAauB,GAAMA,EAAEI,QAAQlE,MAEtBkD,UAAUnB,EACzB,CA0CO,SAASoC,EAAkBpC,EAAOK,GAAkB,GAEvD,OADY,IAAIP,EAAU1F,OAAOiI,OAAO,CAAEjC,KAAM,cAAeC,mBAAmB4B,IACvEd,UAAUnB,EACzB,CAQO,SAASsC,EAAgBtC,EAAOK,GAAkB,GAErD,OADY,IAAIP,EAAU1F,OAAOiI,OAAO,CAAEjC,KAAM,YAAaC,mBAAmB4B,IACrEd,UAAUnB,EACzB,CAeO,SAASuC,EAA4BvC,EAAOI,EAAMC,GAAkB,GAQvE,OAPY,IAAIP,EAAU,CACtBM,OACAC,kBACAK,UAAYqB,GAAMA,EAAE/D,WACpByC,WAAasB,GAAMA,EAAEpB,IACrBH,WAAauB,GAAMA,EAAE9D,MAEdkD,UAAUnB,EACzB,CAQO,SAASwC,EAAcxC,EAAOK,GAAkB,GAQnD,OAPY,IAAIP,EAAU,CACtBM,KAAM,UACNC,kBACAK,UAAW,KACXD,WAAY,IACZD,WAAY,OAELW,UAAUnB,EACzB,C,6CCxMA,MAAMyC,EAAiC,IAahCnF,eAAeoF,EAAoBC,EAASnI,EAASuB,GACxD,MAAM6G,EAAWD,EAAQlJ,KAAKsH,IAC1B,IAAI,QAAqBA,GAAS,CAC9B,MAAM8B,EAAW,CACbC,KAAM/B,EAAOgC,mBAAmBD,KAChCE,GAAIjC,EAAOgC,mBAAmBC,IAElC,OAAOC,QAAQ5I,QAAQwI,EAC3B,CAGA,OAFA,QAAUrI,EAAS,yDAAyDuG,MAC5E,QAAUhF,EAAW,2DAA2DgF,MAC5E,QAAkBA,GA4D9BzD,eAA4CyD,EAAQvG,EAASuB,GACzD,MAAMmH,EAAS,CAAC,EAEVC,EADoB3I,EAAQuB,UAAUA,GAAWM,aACf+G,WAAWC,UAAUtC,GACvDuC,GAAmB,QAAwBvC,GAC3CwC,GAAwB,QAAuBD,GAErD,GAA8B,IAA1BC,EACA,OAAOL,EAEX,MAAMM,EAAeC,KAAKC,IAAIH,EAAuBd,GACrD,IAAIkB,QAAqBR,EAAcS,UAAUJ,GAAcK,QAC/D,MAAMT,EAAW,GACjB,MAAQ,IAAQO,EAAa3D,QACzBoD,EAASnE,QAAQ0E,EAAa3D,OAC9B2D,QAAqBA,EAAaG,OAEtC,OAAOV,EAASW,QAAO,CAACtK,EAAKuK,KAIzBvK,EAD4B,OAAhBuK,EAAQrD,IAAe,OAASqD,EAAQrD,KACzCqD,EAAQC,MACZxK,IACRyJ,EACP,CAnFmBgB,CAA6BnD,EAAQvG,EAASuB,GA8BjEuB,eAA+CyD,EAAQvG,EAASuB,GAC5D,IAAIoI,EACJ,IAAI,QAASpD,EAAOqD,mBAAmBjC,SAAU,CAC7C,MAAMA,QAAgB3H,EACjBuB,UAAUA,GACVQ,UACA8H,WAAWtD,EAAOqD,mBAAmBjC,SACrCmC,YAAW,GACXC,OACL,GAAIpC,EAAQqC,eAAe,GAAI,CAC3B,MACMC,EADwBtC,EAAQqC,eAAe,GAAGE,eACRzD,MAAM0D,GAAoD,kBAAhCA,EAAgBC,cAC1FT,EAAsBM,aAA6D,EAASA,EAAkBI,kBAClH,CACJ,CACA,MACM1B,EADoB3I,EAAQuB,UAAUA,GAAWM,aACf+G,WAAWC,UAAUtC,EAAQoD,aAAiE,EAASA,EAAoBlG,KAC7JmF,QAAiBD,EAAcU,QAI/BX,EAFcE,EAAS0B,MAAQ1B,EAAS2B,OAAS3B,EAAS4B,iBAGpD5B,EAAS6B,KAAKxB,KAAKyB,KAAK9B,EAAS4B,WAAa5B,EAAS0B,OAAS,GACtE1B,EACN,MAAO,CACHN,KAAMM,EAASpD,MAAM,GAAGiE,MACxBjB,IAkCchD,EAlCGkD,EAAOlD,MAmCrBA,EAAMA,EAAMmF,OAAS,GAAGlB,QADnC,IAAsBjE,CAhCtB,CAvDmBoF,CAAgCrE,EAAQvG,EAASuB,EAC5D,IAEJ,OAAOkH,QAAQoC,IAAIzC,GAAU0C,MAAMC,GAKxBA,EAAexB,QAAO,CAACb,EAAQsC,EAAgBrH,KAClD,MAAM4C,EAAS4B,EAAQxE,GACjBF,GAAM,QAAa8C,GAEzB,IADA,QAAU9C,EAAK,2CAA2C8C,MACtD,QAAaA,GAAS,CACtB,MAAM0E,EAAQC,EAAwBH,EAAgBxE,EAAQ5C,GAC9DsH,GAASvC,EAAOyC,YAAY1G,KAAKwG,EACrC,CACA,IAAI,QAAkB1E,GAAS,CAC3B,MAAM6E,GAAY,EAAAC,EAAA,IAAe5H,GAC3BwH,EAAQC,EAAwBH,EAAgBxE,EAAQ5C,GAC1DsH,IACAvC,EAAO4C,iBAAiBF,GAAaH,EAE7C,CACA,OAAOvC,CAAM,GAnBS,CACtByC,YAAa,GACbG,iBAAkB,CAAC,KAoB/B,CAuDA,SAASJ,EAAwBK,EAAOhF,EAAQ5C,GAC5C,OAAI,QAAa4C,GACNgF,EAAM5H,EAGrB,C,4CCxGO,SAAS6H,EAAgBhI,EAAYiI,EAAYC,GACpD,MAAMC,EAAaD,EAAS,IAAUA,GAAU,CAAC,EACjD,OAAO9L,OAAOiI,OAAO,CAAEjC,KAAM,eAAgB6F,aACzCjI,aAAY2C,IAAK,sBAAsB3C,IAAcC,KAAK,QAAMD,IAAemI,EACvF,CAOO,SAASC,EAAehH,GAC3B,MAAMiH,EAAIjH,EACV,OAAQ,IAAQiH,IAAiB,iBAAXA,EAAEjG,WAA4CX,IAAjB4G,EAAEJ,iBAAsCxG,IAAV4G,EAAEpI,GACvF,CAOO,SAASqI,EAAyBlH,GACrC,MAAMiH,EAAIjH,EACV,OAAQ,IAAQiH,IAAiB,iBAAXA,EAAEjG,WAA4CX,IAAjB4G,EAAEJ,iBAAsCxG,IAAV4G,EAAEpI,GACvF,CAOO,SAASsI,EAAmBnH,GAC/B,MAAMiH,EAAIjH,EACV,OAAQ,IAAQiH,IAAiB,iBAAXA,EAAEjG,WAA4CX,IAAjB4G,EAAEJ,UACzD,CAOO,SAASO,EAAuB5G,GACnC,MAAM6G,EAAW,GAAG7G,EAAO5B,aAC3B,IAAI0I,EAAa,sBAOjB,OANI,QAAS9G,GACT8G,EAAa9G,EAAOQ,KAEfgG,EAAexG,KACpB8G,EAAa,GAAG9G,EAAOQ,QAAQR,EAAOqG,cAEnC,GAAGQ,KAAYC,IAC1B,CASO,SAASC,EAAiB/G,EAAQgH,GAErC,MAAO,CACHxG,KAAM,uBACNL,KAHkC,iBAAlB6G,EAA6B,CAAEC,GAAI,CAAEC,UAAWF,IAAoBA,EAIpFhH,OAAQ,IAAUA,GAE1B,CAwBO,SAASmH,EAAoBC,KAAkBhH,GAClD,MAAMiH,EAxBV,SAAkCD,GAC9B,GAAKA,EAAL,CAGA,GAA6B,iBAAlBA,EAA4B,CACnC,GAAI,IAAQA,GACR,OAEJ,MAAO,CACH/C,MAAO+C,EAEf,CACA,OAAOA,CATP,CAUJ,CAWmBE,CAAyBF,GAExC,MAAO,CACH5G,KAAM,0BACNJ,MAHe,IAAUA,GAIzBiH,SAER,C,IC7GWE,E,WCKJ,SAASC,EAA4B7G,GACxC,OAAO,QAAsBA,EAAK8G,YACtC,CAQO,SAASC,EAAiC/G,GAC7C,OAAO,OAA2BA,EAAK8G,YAC3C,EDhBA,SAAWF,GACPA,EAAqC,WAAI,eACzCA,EAAuC,aAAI,iBAC3CA,EAAqC,WAAI,eACzCA,EAAoC,UAAI,cACxCA,EAAuC,aAAI,iBAC3CA,EAAoC,UAAI,cACxCA,EAA0C,gBAAI,mBACjD,CARD,CAQGA,EAA2BA,IAA6BA,EAA2B,CAAC,I,8CEPvF,MAAMI,GAAyB,IAAAC,eAAc,CACzCC,gBAAiB,IACjBC,kBAAmB,MAEvBH,EAAuBI,YAAc,yBAI9B,MAAMC,EAA4B,KAAM,IAAAC,YAAWN,GAInD,SAASO,EAAwBtM,GACpC,MAAM,SAAEuM,EAAQ,gBAAEN,EAAe,kBAAEC,GAAsBlM,EACnDiK,GAAQ,IAAAuC,UAAQ,KACX,CACHP,kBACAC,uBAEL,CAACD,EAAiBC,IACrB,OAAO,gBAAoBH,EAAuBU,SAAU,CAAExC,MAAOA,GAASsC,EAClF,C,0BCnBA,MAAMG,EAAyB,gBAAoB,CAC/CC,OAAQ,UACRC,WAAO3I,EACPyD,YAAQzD,EACR4I,eAAe,IAEnBH,EAAuBP,YAAc,kBAkB9B,MA2DMW,EAAgC,KACzC,IAAIzI,EAEJ,OAAiC,QAAzBA,EADQ,aAAiBqI,GACZhF,cAA2B,IAAPrD,EAAgBA,EAAK,CAAC,CAAC,ECtFvD0I,EAAe/M,IACxB,MAAMgN,GAAgB,IAAAC,QAAOjN,GAI7B,OAHA,IAAAkN,YAAU,KACNF,EAAcG,QAAUnN,CAAK,IAE1BgN,EAAcG,OAAO,E,eCLzB,SAASC,EAAYxJ,GACxB,MAAMyJ,EAASzJ,EACf,OAAQ,IAAQyJ,IAA2B,eAAhBA,EAAOzI,WAAwCX,IAAfoJ,EAAO5K,GACtE,C,0BCHO,SAAS6K,EAAiB1J,GAC7B,IAAIS,EACJ,OAAQ,IAAQT,KAA6B,QAAnBS,EAAKT,EAAIgB,YAAyB,IAAPP,OAAgB,EAASA,EAAGkJ,WAAW,gBAChG,CAOO,SAASC,GAAuB5J,GACnC,IAAIS,EACJ,OAAQ,IAAQT,KAA6B,QAAnBS,EAAKT,EAAIgB,YAAyB,IAAPP,OAAgB,EAASA,EAAGkJ,WAAW,cAChG,CAOO,SAASE,GAAuC7J,GACnD,OAAO0J,EAAiB1J,IAAQ4J,GAAuB5J,EAC3D,CCtBO,MAAM8J,GAAc9I,GAAUhB,IACzB,IAAQA,IAAQA,EAAIgB,OAASA,ECPlC,SAAS+I,GAAqBC,EAAK1J,EAAWhD,EAAU7B,EAAQmC,EAAaqM,GAChF,MAAO,CACHjJ,KAAM,2BACNgJ,MACAC,gBACAC,QAAS,CACL5J,YACAhD,WACA7B,SACAmC,eAGZ,CAOO,MAAMuM,GAAyBL,GAAW,4BAiBpCM,GAA2BN,GAAW,8BAkBtCO,GAAmBP,GAAW,sBAkB9BQ,GAAuBR,GAAW,2BAiBlCS,GAAqBT,GAAW,wBACtC,SAASU,GAAkBR,EAAK1J,EAAW2J,GAC9C,MAAO,CACHjJ,KAAM,qBACNgJ,MACAC,gBACAC,QAAS,CACL5J,aAGZ,CAOO,MAAMmK,GAAsBX,GAAW,sBAiBjCY,GAAqBZ,GAAW,wBAiBhCa,GAA+Bb,GAAW,6DAc1Cc,GAAkCd,GAAW,qCAkB7Ce,GAAiCf,GAAW,oCAiB5CgB,GAA4BhB,GAAW,gCC7KvCiB,GAA4BjB,GAAW,gCAc7C,SAASkB,GAAyBhB,EAAKiB,EAASC,GACnD,MAAO,CACHlK,KAAM,8BACNgJ,MACAC,cAAegB,EAAQhB,cACvBC,QAAS,CACLiB,OAAQ,aACRF,UACAC,WAGZ,CAOO,MAAME,GAA2BtB,GAAW,+BAC5C,SAASuB,GAAgBrB,EAAKC,GACjC,MAAO,CACHjJ,KAAM,gCACNgJ,MACAC,gBAER,CAOO,MAAMqB,GAA6BxB,GAAW,iCAcxCyB,GAA2BzB,GAAW,+BAa5C,SAAS0B,GAAsBxB,EAAKkB,EAASjB,GAChD,MAAO,CACHjJ,KAAM,4BACNgJ,MACAC,gBACAC,QAAS,CACLiB,OAAQ,aACRD,WAGZ,CAOO,MAAMO,GAAyB3B,GAAW,6BAiBpC4B,GAA0B5B,GAAW,8BAkBrC6B,GAA4B7B,GAAW,gCC7HvC8B,GAAwC9B,GAAW,6DAkBnD+B,GAAkC/B,GAAW,sDACnD,SAASgC,GAAuB9B,EAAK+B,EAASpD,EAAUsB,GAC3D,MAAO,CACHjJ,KAAM,uDACNgJ,MACAC,gBACAC,QAAS,CACL6B,UACApD,YAGZ,CAOO,MAAMqD,GAAoClC,GAAW,wDAmB/CmC,GAAkCnC,GAAW,sDAiB7CoC,GAA6CpC,GAAW,kEAiBxDqC,GAA0CrC,GAAW,+DAiBrDsC,GAAyCtC,GAAW,8DA2BpDuC,GAAiDvC,GAAW,uEAiB5DwC,GAAkCxC,GAAW,uCCtJ7CyC,GAAgCzC,GAAW,2CAmB3C0C,GAAgC1C,GAAW,2CACjD,SAAS2C,GAAqBzC,EAAK0C,EAAS3N,EAAO4N,EAAcC,EAAiB3C,GACrF,MAAO,CACHjJ,KAAM,4CACNgJ,MACAC,gBACAC,QAAS,CACLwC,UACA3N,QACA4N,eACAC,mBAGZ,CAOO,MAAMC,GAAkC/C,GAAW,6CA0C7CgD,GAAwChD,GAAW,oDAoBnDiD,GAAqCjD,GAAW,yCAqBhDkD,GAAuClD,GAAW,2CAsBlDmD,GAAoCnD,GAAW,wCAuBrD,SAASoD,GAAyBlD,EAAK7I,EAAMgM,EAAWT,EAASE,EAAiB3C,GACrF,MAAO,CACHjJ,KAAM,yCACNgJ,MACAC,gBACAC,QAAS,CACL/I,OACAgM,YACAT,UACAE,mBAGZ,CAb6D9C,GAAW,uDAoBjE,MAAMsD,GAAsCtD,GAAW,0CAiBjDuD,GAA2BvD,GAAW,4CC1MtCwD,GAAoCxD,GAAW,0CAkB/CyD,GAAyCzD,GAAW,+CAkBpD0D,GAA2C1D,GAAW,iDAoBtD2D,GAAqC3D,GAAW,2CAmBhD4D,GAA4C5D,GAAW,mDAkBvD6D,GAAwC7D,GAAW,8CAiBnD8D,GAAmC9D,GAAW,yCAkB9C+D,GAA+B/D,GAAW,qCAiB1CgE,GAA8BhE,GAAW,0CClJzCiE,GAAwCjE,GAAW,8CAkBnDkE,GAA6ClE,GAAW,mDAmBxDmE,GAAgDnE,GAAW,uDAkB3DoE,GAA+CpE,GAAW,kDAmB1DqE,GAAkDrE,GAAW,qDAkB7DsE,GAA0CtE,GAAW,gDAmBrDuE,GAAyCvE,GAAW,+CAC1D,SAASwE,GAA2BtE,EAAKnL,EAAKkN,EAAS9B,GAC1D,MAAO,CACHjJ,KAAM,6CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAkN,WAGZ,CAOO,MAAMwC,GAAwCzE,GAAW,8CAiBnD0E,GAAkC1E,GAAW,8CAqB7C2E,GAA0C3E,GAAW,gDAqBrD4E,GAAyC5E,GAAW,+CAoBpD6E,GAAoC7E,GAAW,yCC7M/C8E,GAAoC9E,GAAW,yCAoB/C+E,GAAmC/E,GAAW,wCAoB9CgF,GAAsChF,GAAW,2CC5CjDiF,GAA0BjF,GAAW,8BAiBrCkF,GAA2BlF,GAAW,+BAiBtCmF,GAA0BnF,GAAW,8BClCrCoF,GAAmCpF,GAAW,wCAc9CqF,GAAiCrF,GAAW,sCCV5CsF,GAA4BtF,GAAW,gCAqBvCuF,GAA2BvF,GAAW,+BAsBtCwF,GAAgCxF,GAAW,2CAsB3CyF,GAA+BzF,GAAW,0CAsB1C0F,GAAqC1F,GAAW,iDAsBhD2F,GAAoC3F,GAAW,gDAqB/C4F,GAAuC5F,GAAW,mDAsBlD6F,GAAsC7F,GAAW,kDAqBjD8F,GAAuC9F,GAAW,oDAuBlD+F,GAAsC/F,GAAW,mDAqBjDgG,GAA0ChG,GAAW,uDAwBrDiG,GAAyCjG,GAAW,sDAqBpDkG,GAA6ClG,GAAW,0DAqBxDmG,GAA4CnG,GAAW,yDAoBvDoG,GAAmCpG,GAAW,8CCzTpD,SAASqG,GAAkBnG,EAAKnL,EAAKuR,EAAuBnG,GAC/D,MAAO,CACHjJ,KAAM,mCACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAuR,yBAGZ,CAOO,MAAMC,GAAsBvG,GAAW,oC,2BCnBvC,SAASwG,GAAyBC,EAA0BtG,GAI/D,MAAO,CACHjJ,KAAM,0CACNiJ,gBACAC,QANY,KAASqG,GACnB,CAAEC,YAAaD,GACfA,EAMV,CAOO,MAAME,GAAsC3G,GAAW,2CCRjD4G,GAA6B5G,GAAW,iCAoBxC6G,GAAkC7G,GAAW,uCAoB7C8G,GAAiC9G,GAAW,sCAoB5C+G,GAA4B/G,GAAW,gCCxDvCgH,GAA+BhH,GAAW,oCCdhD,SAASiH,GAAuB9G,GACnC,MAAO,CACHjJ,KAAM,wCACNiJ,gBAER,CAOO,MAAM+G,GAA2BlH,GAAW,yCCK5C,SAASmH,GAA2BC,EAAWC,GAClD,OAAQC,IACJ,IAAI3Q,EACJ,OAAK2Q,aAAqC,EAASA,EAAMpQ,QAAUkQ,IAGO,QAAlEzQ,EAAK0Q,aAAmC,EAASA,EAAKC,UAA2B,IAAP3Q,GAAgBA,EAAS,CAEnH,CC5BA,SAAU4Q,GAAKC,GAEX,aADM,QAAMA,IACL,CACX,CACA,MAAMC,GAA8B/W,GAAOyW,GAA2B,qCAAsCzW,EAAMI,GAAMA,EAAEsP,QAAQ1P,KAAOA,EAAK,KAAM,GAC9IgX,GAA+BhX,GAAOyW,GAA2B,sCAAuCzW,EAAMI,GAAMA,EAAEsP,QAAQ1P,KAAOA,EAAK,KAAM,GAC/I,SAASiX,GAAmBhW,EAAS,CACxCiW,4BAA6B,IAC7BC,2BAA4B,IAC5BC,WAAY,KACZC,uBAAwB,MAExB,OAAO,UAA0B7H,GAC7B,IAEI,MAAMC,EAAgBxO,EAAOoW,+BAEvB,QJjBX,SAAyB7H,EAAKC,GACjC,MAAO,CACHjJ,KAAM,gCACNiJ,gBACAD,MAER,CIWsB8H,CAAgB9H,EAAKC,UAEzB,QAAK,4BAEX,MAAM8H,QAAyB,QAAKC,GAAyBvW,SAEvD,QAAKwW,GAAmCF,EAAkBtW,SAE1D,QJmCX,SAAwBuO,EAAKC,GAChC,MAAO,CACHjJ,KAAM,+BACNiJ,gBACAD,MAER,CIzCsBkI,CAAelI,EAAKC,GAClC,CACA,MAAOkI,GACH3P,QAAQwG,MAAM,0BAA2BmJ,EAC7C,CACJ,CACJ,CACA,SAAUH,GAAwBvW,GAC9B,MAAMsW,EAAmB,IAAIK,IACvBC,QAAgB,QAAMhB,GAAM5V,EAAOiW,6BACnCY,QAA+B,QAAcd,MACnD,OAAa,CACT,MAAM,qBAAEe,EAAoB,gBAAEC,SAA0B,QAAK,CACzDD,sBAAsB,QAAKD,GAC3BE,iBAAiB,QAAKH,KAE1B,GAAIG,EACA,MAEJ,MAAMC,EAAgBF,EAAqBrI,QAAQ1P,GAGnD,GAAIuX,EAAiBrP,IAAI+P,GACrB,SAGJ,MAAMC,QAAwB,QAAMC,GAA8BF,EAAehX,GACjFsW,EAAiBa,IAAIH,EAAeC,EACxC,CACA,OAAOX,CACX,CACA,SAAUE,GAAkCF,EAAkBtW,GAC1D,MAAM4W,QAAgB,QAAMhB,GAAM5V,EAAOmW,WAAanW,EAAOiW,6BACvDY,QAA+B,QAAcd,MACnD,OAAa,CAGT,MAAMqB,EAAuBC,MAAMpP,KAAKqO,GAAkB,EAAE,CAAEgB,KAAUA,KAClE,mBAAEC,EAAkB,qBAAET,EAAoB,gBAAEC,SAA0B,QAAK,CAC7ED,sBAAsB,QAAKD,GAC3BU,oBAAoB,QAAIH,EAAqBxY,KAAK0Y,IAAS,QAAKA,MAChEP,iBAAiB,QAAKH,KAE1B,GAAIG,GAAmBQ,EAGnB,OAFAH,EAAqB7Q,SAAS+Q,GAASA,EAAKE,sBACtC,QAAOZ,IAKjB,GAAIE,EAAsB,CACtB,MAAME,EAAgBF,EAAqBrI,QAAQ1P,GAGnD,GAAIuX,EAAiBrP,IAAI+P,GACrB,SAGJ,MAAMC,QAAwB,QAAMC,GAA8BF,EAAehX,GACjFsW,EAAiBa,IAAIH,EAAeC,EACxC,CACJ,CACJ,CACA,SAAUC,GAA6BnY,EAAIiB,GAGvC,IAAIyX,EAAU,EACd,MAAMC,QAA8B,QAAc5B,GAA2B/W,IAC7E,OAAa,OACH,QAAK2Y,GAIX,MAAM,QAAEd,SAAkB,QAAK,CAC3BA,SAAS,QAAKhB,GAAM5V,EAAOkW,4BAC3ByB,kBAAkB,QAAK5B,GAA4BhX,MAIvD,GAFA0Y,GAAW,EAEPb,GAdW,IAcAa,EACX,MAER,CACJ,CC1GO,MAAMG,GAA2B,cA8BjC,SAASC,GAAoB7X,EAAQmC,EAAaqM,GACrD,MAAO,CACHjJ,KAAM,0BACNiJ,gBACAC,QAAS,CACLzO,SACAmC,eAGZ,CAgCO,SAAS2V,GAA0C9X,EAAQmC,EAAa4V,EAAoBvJ,GAC/F,MAAO,CACHjJ,KAAM,0BACNiJ,gBACAC,QAAS,CACLzO,SACAmC,cACA4V,sBAGZ,CAaO,SAASC,GAAc5O,EAAOoF,GACjC,MAAO,CACHjJ,KAAM,oBACNiJ,gBACAC,QAAS,CACLrF,SAGZ,CAqBO,SAAS6O,GAAgB7O,EAAO8O,EAAcC,EAA0B3J,GAC3E,MAAO,CACHjJ,KAAM,sBACNiJ,gBACAC,QAAS,CACLrF,QACA8O,eACAC,4BAGZ,CAUO,SAASC,GAAgBC,EAAU7J,GACtC,MAAO,CACHjJ,KAAM,sBACNiJ,gBACAC,QAAS,CACL4J,YAGZ,CAUO,SAASC,GAAcC,EAAsB/J,GAChD,MAAO,CACHjJ,KAAM,8BACNiJ,gBACAC,QAAS,CACL8J,wBAGZ,CAgBO,SAASC,GAAehK,GAC3B,MAAO,CACHjJ,KAAM,qBACNiJ,gBAER,CAWO,SAASiK,GAAgBjK,GAC5B,MAAO,CACHjJ,KAAM,sBACNiJ,gBAER,CAWO,SAASkK,GAAqBlK,GACjC,MAAO,CACHjJ,KAAM,0BACNiJ,gBAER,C,2EC/NA,MAAMmK,GAAgC,KAAM,SAASC,QAAQ,KAAM,IAgMtDC,GAAwB,CACjCC,iBAhMqB,CAACC,EAAOC,KAC7B,IAAIhU,EACJ,MAAM,wBAAEiU,EAAuB,gCAAEC,EAA+B,sBAAEC,EAAqB,4BAAEC,GAAiCJ,EAAOvK,QAE3H4K,EAAgE,QAA1CrU,EAAKiU,EAAwBnR,eAA4B,IAAP9C,OAAgB,EAASA,EAAGpG,KAAKsH,IAC3G,IAAIlB,EACJ,OAAO,OAA2BkB,GAC5B,CACEoT,gBAAiB/Z,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtB,EAAOoT,iBAAkB,CAAEC,gBAAmE,QAAjDvU,EAAKkB,EAAOoT,gBAAgBC,uBAAoC,IAAPvU,EAAgBA,EAAK2T,QAE9KzS,CAAM,KAITsT,EAAYvO,GAAoB,KAAUoO,EAAoB,MAC/DvR,EAAU,IAAI0R,KAAevO,GACnC8N,EAAME,wBAA0B1Z,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyR,GAA0B,CAAEnR,QAASA,IACrGiR,EAAMG,gCAAkCA,EACxCH,EAAMI,sBAAwBA,EAC9BJ,EAAMK,4BAA8BA,CAA2B,EA8K/DK,4BA5KgC,CAACV,EAAOC,KACxCD,EAAMI,sBAAwBH,EAAOvK,QAAQ0K,qBAAqB,EA4KlEO,kCAvKsC,CAACX,EAAOC,MAC9C,QAAUD,EAAMK,4BAA6B,+CAC7CL,EAAMK,4BAA8BL,EAAMK,4BAA4BlT,QAAQyT,KAClE,QAAgBA,EAAIX,EAAOvK,UACrC,EAoKFmL,8BAlKkC,CAACb,EAAOC,MAC1C,QAAUD,EAAMK,4BAA6B,+CAE5BL,EAAMK,4BAA4BhT,MAAMuT,IAAO,QAAgBA,EAAIX,EAAOvK,QAAQrL,SAE/F2V,EAAMK,4BAA8BL,EAAMK,4BAA4BlT,QAAQyT,KAAQ,QAAgBA,EAAIX,EAAOvK,YAErHsK,EAAMK,4BAA4BhV,KAAK4U,EAAOvK,QAAQ,EA4JtDoL,mBA7GuB,CAACd,EAAOC,MAC/B,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,YAAEa,EAAW,MAAExW,EAAK,2BAAEyW,EAA0B,iBAAEC,EAAgB,cAAEC,EAAa,cAAEC,GAAkBlB,EAAOvK,QAC5G0L,EAAeH,KAAqB,QAAyBA,GAC7DI,EAA+B,WAAlBF,IAA+BH,IAA+BI,GAC3EjU,EAAS,CACXoT,gBAAiB/Z,OAAOiI,OAAO,CAAE6S,kBAAmBL,QAA2DA,EAAmB,CAAEM,KAAM,IAAMR,cAAaS,kBAAmBH,EAAYb,gBAAiBZ,KAAiC6B,iBAAkBP,EAAgB,IAAIA,QAAiBrV,QAAgCA,IAAlBsV,EAA8B,CAAEA,iBAAkB,CAAC,IAGpWO,EAAsB1B,EAAME,wBAAwBnR,QAAQ4S,UAAU,OAA0B,EACtG,IAAe,IAAXpX,EACAyV,EAAME,wBAAwBnR,QAAQ1D,KAAK8B,OAE1C,CAED,MAAMyU,EAAuBF,EAAsBnX,EAAQ,EAAIA,EAC/DyV,EAAME,wBAAwBnR,QAAQ8S,OAAOD,EAAsB,EAAGzU,EAC1E,GA6FA2U,sBA3F0B,CAAC9B,EAAOC,MAClC,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,cAAE6B,GAAkB9B,EAAOvK,QACjCsK,EAAME,wBAAwBnR,QAAUiR,EAAME,wBAAwBnR,QAAQ5B,QAAQR,IAAS,QAAsBA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,GAAc,EAyFrLC,oBAvFwB,CAAChC,EAAOC,MAChC,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,cAAE6B,EAAa,MAAExX,GAAU0V,EAAOvK,QAClCuM,EAAqBjC,EAAME,wBAAwBnR,QAAQ4S,WAAWhV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KAClK,QAAUE,GAAsB,EAAG,uCACnC,MAAM9U,EAAS6S,EAAME,wBAAwBnR,QAAQkT,GACrDjC,EAAME,wBAAwBnR,QAAQ8S,OAAOI,EAAoB,GAEjE,MAAMP,EAAsB1B,EAAME,wBAAwBnR,QAAQ4S,UAAU,OAA0B,EACtG,IAAe,IAAXpX,EACAyV,EAAME,wBAAwBnR,QAAQ1D,KAAK8B,OAE1C,CAED,MAAMyU,EAAuBF,EAAsBnX,EAAQ,EAAIA,EAC/DyV,EAAME,wBAAwBnR,QAAQ8S,OAAOD,EAAsB,EAAGzU,EAC1E,GAwEA+U,+BA1HmC,CAAClC,EAAOC,MAC3C,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,SAAE1Q,EAAQ,cAAEuS,EAAa,kBAAEP,GAAsBvB,EAAOvK,QACxDyM,EAAsBnC,EAAME,wBAAwBnR,QAAQ4S,WAAWhV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KACnK,QAAUI,GAAuB,EAAG,yCACpCnC,EAAME,wBAAwBnR,QAAQoT,GAAuB,CACzD5B,gBAAiB/Z,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,EAAME,wBAAwBnR,QAAQoT,GAClF5B,iBAAkB,CAAEe,kBAAmB9R,EAAUgS,sBACzD,EAmHDY,0BAvE8B,CAACpC,EAAOC,MACtC,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,cAAE6B,EAAa,cAAEb,GAAkBjB,EAAOvK,QAC1CuM,EAAqBjC,EAAME,wBAAwBnR,QAAQ4S,WAAWhV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KAClK,QAAUE,GAAsB,EAAG,kDACnCjC,EAAME,wBAAwBnR,QAAQkT,GAAoB1B,gBAAgBkB,iBAAmB,IAAIP,EAAc,EAmE/GmB,+BAjEmC,CAACrC,EAAOC,KAC3C,MAAM,eAAEqC,GAAmBrC,EAAOvK,QAClC4M,EAAe9U,SAASuU,KACpB,QAAU/B,EAAME,wBAAyB,gDACzC,MAAM+B,EAAqBjC,EAAME,wBAAwBnR,QAAQ4S,WAAWhV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KAClK,QAAUE,GAAsB,EAAG,uDACnC,MAAMM,EAAgBvC,EAAME,wBAAwBnR,QAAQkT,GACtDO,EAAgE,WAAhDD,EAAchC,gBAAgBY,cACpDoB,EAAchC,gBAAgBiB,kBAAoBgB,EAClDD,EAAchC,gBAAgBe,mBAAoB,QAAyBiB,EAAchC,gBAAgBe,mBACnG,CAAEC,KAAM,IACR,CAAEnT,OAAQ,GAAI,GACtB,EAsDFqU,iBAhKqB,CAACzC,EAAOC,MAC7B,QAAUD,EAAME,wBAAyB,gDACzC,MAAMiC,EAAsBnC,EAAME,wBAAwBnR,QAAQ4S,WAAWhV,IAAS,QAAsBA,KAK5G,GAA4B,YAAxBsT,EAAOvK,QAAQlJ,KACX2V,GAAuB,GAEvBnC,EAAME,wBAAwBnR,QAAQ8S,OAAOM,EAAqB,QAGrE,GAAIA,GAAuB,EAAG,CAC/B,MAAM,KAAE3V,EAAI,YAAEwE,EAAW,KAAE9B,EAAI,GAAEE,GAAO6Q,EAAOvK,QACzC+K,EAAaT,EAAME,wBAAwBnR,QAAQoT,IACrD,QAAsB1B,KACtBA,EAAWA,WAAWjU,KAAOA,EAC7BiU,EAAWA,WAAWzP,YAAcA,EACpCyP,EAAWA,WAAWvR,KAAOA,EAC7BuR,EAAWA,WAAWrR,GAAKA,EAEnC,KACK,CACD,MAAM,KAAE5C,EAAI,YAAEwE,EAAW,KAAE9B,EAAI,GAAEE,GAAO6Q,EAAOvK,QAC/CsK,EAAME,wBAAwBnR,QAAQ2T,QAAQ,CAC1CjC,WAAY,CACRzP,cACAxE,OACA0C,OACAE,OAGZ,GAgIAuT,2BAlD+B,CAAC3C,EAAOC,MACvC,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,cAAE6B,EAAa,YAAEhB,EAAW,oBAAE6B,GAAwB3C,EAAOvK,QAC7DuM,EAAqBjC,EAAME,wBAAwBnR,QAAQ4S,WAAWhV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KAClK,QAAUE,GAAsB,EAAG,kDACnC,MAAMM,EAAgBvC,EAAME,wBAAwBnR,QAAQkT,GAC5DM,EAAchC,gBAAgBQ,YAAcva,OAAOiI,OAAO,CAAC,EAAGsS,GAC9D,MAAMyB,EAAgE,WAAhDD,EAAchC,gBAAgBY,cAC/CyB,IACDL,EAAchC,gBAAgBiB,kBAAoBgB,EAClDD,EAAchC,gBAAgBe,mBAAoB,QAAyBiB,EAAchC,gBAAgBe,mBACnG,CAAEC,KAAM,IACR,CAAEnT,OAAQ,IACpB,EAsCAyU,qBAjCyB,CAAC7C,EAAOC,MACjC,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,cAAE6B,EAAa,MAAE1R,GAAU4P,EAAOvK,QAClCoN,EAAa9C,EAAME,wBAAwBnR,QAAQ1B,MAAMV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KACrJ,QAAUe,EAAY,oDACtBA,EAAWvC,gBAAgBlQ,MAAQA,CAAK,EA6BxC0S,oBAxBwB,CAAC/C,EAAOC,MAChC,QAAUD,EAAME,wBAAyB,gDACzC,MAAM,cAAE6B,EAAa,cAAEZ,GAAkBlB,EAAOvK,QAC1CoN,EAAa9C,EAAME,wBAAwBnR,QAAQ1B,MAAMV,IAAS,OAA2BA,IAASA,EAAK4T,gBAAgBC,kBAAoBuB,KACrJ,QAAUe,EAAY,6DACtBA,EAAWvC,gBAAgBY,cAAgBA,CAAa,GC5LtD6B,IAAqB,SAAY,CACnCC,KAAM,gBACNC,aCLqC,CACrChD,6BAAyBrU,EACzBuU,2BAAuBvU,EACvBwU,iCAA6BxU,GDG7BsX,SAAUrD,KAEDsD,GAA4BJ,GAAmBK,QAC/CC,GAAuBN,GAAmBO,Q,wCEHvD,WAIO,MAAMC,GAAmB,CAC5BC,MAAO,CACHC,aAAc,EACdC,UAAW,KAWnB,SAASC,GAAa/R,GAClB,IAAI5F,EAKJ,MAAM4X,EAA2C,QAA1B5X,GAAK,SAAS4F,UAA2B,IAAP5F,EAAgBA,EAd7E,SAAqB4F,GACjB,IACI,OAAOiS,KAAKC,MAAMD,KAAKE,UAAUnS,GACrC,CACA,MAAO5F,GACH,MACJ,CACJ,CAOkFgY,CAAYpS,GAE1F,OADA,QAAUgS,EAAe,sEAClBA,CACX,CAQO,MAAMK,GAAYC,GACd,CAACnE,EAAOC,KACX,MAAM,KAAEmE,GAASnE,EAAOvK,QAClBmO,EAAgBD,GAAa5D,IAC5BqE,EAAWC,EAAaC,IAAe,SAAmBV,GAAgBW,IAC7EL,EAAgBK,EAAOvE,EAAO,IAElC,OAAO,SAAQoE,GAAYG,IACvBA,EAAMf,MAAMC,cACZc,EAAMf,MAAME,UAAUtY,KAAK,CAMvBoZ,IAAKL,EAAKK,IACVH,cACAC,eACF,GACJ,EA0CGG,GAAoB1E,IAC7BA,EAAMyD,MAAQD,GAAiBC,KAAK,ECtG3BkB,GAAqBne,OAAOiI,OAAO,CAAEmW,YAAQ/Y,EAAWgZ,MAAO,CAAC,GAAKrB,ICD3E,SAASsB,GAAiBC,EAAKxa,EAAO6B,GAC3B,IAAV7B,EACAwa,EAAIrC,WAAWtW,GAEV7B,EAAQ,EACbwa,EAAI1Z,QAAQe,GAGZ2Y,EAAIlD,OAAOtX,EAAO,KAAM6B,EAEhC,CACO,SAAS4Y,GAAmBD,EAAKxa,GACpC,OAAc,IAAVA,EACOwa,EAAIE,QAEN1a,EAAQ,EACNwa,EAAIG,MAGKH,EAAIlD,OAAOtX,EAAO,GACnB,EAEvB,CAUO,SAAS4a,GAAqBJ,EAAKxa,GAEtC,OADA,QAAUA,EAAQwa,EAAIxT,QAAUhH,IAAU,GACnCA,EAAQ,EAAIwa,EAAIxT,OAAS,EAAIhH,CACxC,CAKO,SAAS6a,GAAsBL,EAAKxa,GAGvC,OADA,QAAoB,IAAVA,GAAgBA,GAASwa,EAAIxT,QAAUhH,IAAU,GACpDA,EAAQ,EAAIwa,EAAIxT,OAAShH,CACpC,CC3CO,SAAS8a,GAAYC,EAAQC,EAAM1T,GAClC,IAAQA,UACDyT,EAAOC,GAGdD,EAAOC,GAAQ1T,CAEvB,CCPO,SAAS2T,GAAqBZ,EAAQva,GACzC,MAAMob,EAAWC,GAA4Bd,EAAQva,GACrD,GAAIob,EACA,MAAO,CACHE,aAAcF,EAASE,aACvBhN,UAAW8M,EAAS9M,UAIhC,CACO,SAAS+M,GAA4Bd,EAAQva,GAChD,IAAI4B,EACJ,IAAK,IAAI0Z,EAAe,EAAGA,EAAef,EAAOgB,SAASrU,OAAQoU,IAAgB,CAC9E,MAAMzN,EAAU0M,EAAOgB,SAASD,GAChC,IAAK,IAAIhN,EAAY,EAAGA,EAAYT,EAAQ9L,MAAMmF,OAAQoH,IAAa,CACnE,MAAMhM,EAAOuL,EAAQ9L,MAAMuM,GAC3B,IAAI,QAAuC,QAAtB1M,EAAKU,EAAKX,cAA2B,IAAPC,OAAgB,EAASA,EAAG5B,IAAKA,GAChF,MAAO,CACHsb,eACAhN,YACAhM,OAGZ,CACJ,CAEJ,CACO,SAASkZ,GAAqBra,GACjC,MAAMQ,EAASR,EAAIQ,OACnB,OAAO,QAAgBA,KAAW,QAAYA,EAClD,CCKA,MA6GM8Z,GAAiB,CAAC9F,EAAO+F,KAC3B,IAAI9Z,EAIJ,OADkB0C,EAFC,KAA8E,QAArE1C,EAAK+T,aAAqC,EAASA,EAAM4E,cAA2B,IAAP3Y,OAAgB,EAASA,EAAG2Z,UAAW1N,GAAYA,EAAQ9L,MAAMvG,KAAK8G,GAASA,EAAKX,WAClKmB,OAAO6Y,UAEjBnY,IAAIkY,EAAU,EAsB7BE,GAAqB,CAACjG,EAAOC,MAC/B,QAAUD,EAAM4E,QAChB,MAAM,iBAAEsB,EAAgB,IAAE7b,GAAQ4V,EAAOvK,QACnC1J,EAAS8Z,GAAe9F,EAAO3V,IAGrC,QAAU2B,KAAW,QAAYA,KAAW,QAAgBA,KAC5DA,EAAOma,OAASD,QAA2DA,EAAmB,EAAE,EAkF9FE,GAAwB,CAACpG,EAAOC,MAClC,QAAUD,EAAM4E,QAChB,MAAM,IAAEva,EAAG,MAAEgc,GAAUpG,EAAOvK,QACxB1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,IAAU,QAAYA,IAChCA,EAAOma,OAASE,EAAQ,CAACA,GAAS,EAAE,EAS3BC,GAAiB,CAC1BC,UAzQc,CAACvG,EAAOC,KACtBD,EAAM4E,OAAS3E,EAAOvK,QACtBgP,GAAiB1E,EAAM,EAwQvBwG,uBAjP2B,CAACxG,EAAOC,KAlBvC,IAAyC2E,EAAQ6B,GAmB7C,QAAUzG,EAAM4E,QAnBqBA,EAoBL5E,EAAM4E,OApBO6B,EAoBCxG,EAAOvK,QAnBrDkP,EAAOgB,SAASpY,SAAS0K,IACrBA,EAAQ9L,MAAMoB,SAASb,IACnB,IAAIV,EACJ,MAAMD,EAASW,EAAKX,OACpB,KAAK,QAAgBA,MAAY,QAAYA,GACzC,OAEJ,MAAQ0a,QAASC,GAAmD,QAAlC1a,EAAKwa,EAAQ5Y,IAAI7B,EAAO3B,YAAyB,IAAP4B,EAAgBA,EAAK,CAAC,EAC7F0a,IAGL3a,EAAO3B,IAAMsc,EAAYtc,IACzB2B,EAAOe,IAAM4Z,EAAY5Z,IACzBf,EAAO5B,WAAauc,EAAYvc,WAAU,GAC5C,GAKuD,EAgP7Dwc,6BA1DiC,CAAC5G,EAAOC,MACzC,QAAUD,EAAM4E,QAChB,MAAM,gBAAEiC,GAAoB5G,EAAOvK,QACnCsK,EAAM4E,OAAOgB,SAASpY,SAAS0K,IAC3BA,EAAQ9L,MAAMoB,SAASb,IACnB,MAAMX,EAASW,EAAKX,OACpB,IAAI,QAAgBA,KAAW,QAAYA,GAAS,CAChD,MAAM8a,EAAiB9a,EAAO+a,uBAAuB5Z,QAAQA,MACrD,QAA+BA,SAI/BtB,IADIgb,EAAgBxZ,MAAMkK,IAAY,QAAgBA,EAASpK,EAAO4T,iBAG9E/U,EAAO+a,uBAAyBD,CACpC,IACF,GACJ,EA0CFE,WAAY9C,IA/OG,CAAClE,EAAOC,MACvB,QAAUD,EAAM4E,QAChB,MAAM,MAAEra,EAAK,QAAE2N,EAAO,YAAE+O,GAAgBhH,EAAOvK,QAC/CoP,GAAiB9E,EAAM4E,OAAOgB,SAAUrb,EAAO,CAAC2N,IAChD+O,EAAYzZ,SAAS4K,WACV4H,EAAM6E,MAAMzM,EAAgB,GACrC,IA0OF8O,cAAehD,IAxOG,CAAClE,EAAOC,MAC1B,QAAUD,EAAM4E,QAChB,MAAM,MAAEra,EAAK,gBAAE6N,GAAoB6H,EAAOvK,QAC1C,GAAI0C,EAAiB,CACjB,MAAMhM,EAAQ4T,EAAM4E,OAAOgB,SAASrb,GAAO6B,MAC3C4T,EAAM6E,MAAMzM,GAAmBhM,CACnC,CACA4Y,GAAmBhF,EAAM4E,OAAOgB,SAAUrb,EAAM,IAkOhD4c,YAAajD,IAtMG,CAAClE,EAAOC,MACxB,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,QAAEyB,GAAYnH,EAAOvK,SH9DtC,SAA0BqP,EAAKsC,EAAWD,GAC7C,MAAMhX,EAAU4U,GAAmBD,EAAKsC,IAExC,QAAUjX,GACV0U,GAAiBC,EAAKqC,EAAS,CAAChX,GACpC,CG0DIkX,CAAiBtH,EAAM4E,OAAOgB,SAAUD,EAAcyB,EAAQ,IAoM9DG,oBAAqBrD,IAjOG,CAAClE,EAAOC,MAChC,QAAUD,EAAM4E,QAChB,MAAM,MAAEra,EAAK,OAAE8I,GAAW4M,EAAOvK,QACjCsK,EAAM4E,OAAOgB,SAASrb,GAAO8I,OAASA,CAAM,IA+N5CmU,gBAAiBtD,IAnMG,CAAClE,EAAOC,MAC5B,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,UAAEhN,EAAS,MAAEvM,EAAK,YAAE6a,GAAgBhH,EAAOvK,QACzDwC,EAAU8H,EAAM4E,OAAOgB,SAASD,IACtC,QAAUzN,GACV4M,GAAiB5M,EAAQ9L,MAAOuM,EAAWvM,GAC3C6a,EAAYzZ,SAAS4K,WACV4H,EAAM6E,MAAMzM,EAAgB,GACrC,IA4LFqP,gBAAiBvD,IA1LG,CAAClE,EAAOC,MAC5B,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,UAAEhN,EAAS,eAAE+O,EAAc,YAAEC,GAAgB1H,EAAOvK,QAClEkS,EAAc5H,EAAM4E,OAAOgB,SAASD,GACpCkC,EAAY7H,EAAM4E,OAAOgB,SAAS8B,IACxC,QAAUE,IACV,QAAUC,GACV,MAAMlb,EAAOqY,GAAmB4C,EAAYxb,MAAOuM,IACnD,QAAUhM,GACVmY,GAAiB+C,EAAUzb,MAAOub,EAAa,CAAChb,GAAM,IAkLtDmb,kBAAmB5D,IAhLG,CAAClE,EAAOC,MAC9B,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,UAAEhN,EAAS,gBAAEP,GAAoB6H,EAAOvK,QACtDwC,EAAU8H,EAAM4E,OAAOgB,SAASD,IACtC,QAAUzN,GACV,MAAMvL,EAAOqY,GAAmB9M,EAAQ9L,MAAOuM,IAC/C,QAAUhM,GACNyL,IACA4H,EAAM6E,MAAMzM,GAAmB,CAACzL,GACpC,IAwKAob,mBAAoB7D,IAtKG,CAAClE,EAAOC,MAC/B,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,UAAEhN,EAAS,SAAEqP,EAAQ,gBAAE5P,EAAe,YAAE6O,GAAgBhH,EAAOvK,QAC7EwC,EAAU8H,EAAM4E,OAAOgB,SAASD,IACtC,QAAUzN,GACV,MAAMvL,EAAOqY,GAAmB9M,EAAQ9L,MAAOuM,IAC/C,QAAUhM,GACNyL,IACA4H,EAAM6E,MAAMzM,GAAmB,CAACzL,IAEpCmY,GAAiB5M,EAAQ9L,MAAOuM,EAAWqP,GAC3Cf,EAAYzZ,SAASya,SAKOpc,IAApBuM,GAAiC6P,IAAc7P,UAG5C4H,EAAM6E,MAAMoD,EAAU,GAC/B,IAmJFC,oBAAqBhE,IAvIG,CAAClE,EAAOC,KAChC,IAAIhU,GACJ,QAAU+T,EAAM4E,QAChB,MAAM,OAAEvR,EAAM,IAAEhJ,GAAQ4V,EAAOvK,QACzB1J,EAAS8Z,GAAe9F,EAAO3V,IAGrC,QAAU2B,KAAW,QAAYA,KAAW,QAAgBA,KAC5DA,EAAOqE,MAAgC,QAAvBpE,EAAKoH,EAAOhD,aAA0B,IAAPpE,EAAgBA,EAAK,EAAE,IAgItEkc,yBAA0BjE,IA9HG,CAAClE,EAAOC,KACrC,IAAIhU,GACJ,QAAU+T,EAAM4E,QAChB,MAAM,YAAEwD,EAAW,IAAE/d,GAAQ4V,EAAOvK,QAC9B1J,EAAS8Z,GAAe9F,EAAO3V,IAGrC,QAAU2B,KAAW,QAAYA,KAAW,QAAgBA,KAC5DA,EAAOoc,YAAiD,QAAlCnc,EAAKmc,EAAYA,mBAAgC,IAAPnc,EAAgBA,EAAK,EAAE,IAuHvFoc,8BAA+BpC,GAC/BqC,oBAAqBpE,GAAS+B,IAC9BsC,kCAAmCrE,IA9GG,CAAClE,EAAOC,MAC9C,QAAUD,EAAM4E,QAChB,MAAM,WAAE4D,EAAU,IAAEne,GAAQ4V,EAAOvK,QAC7B1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,IAAU,QAAgBA,IACpCqZ,GAAYrZ,EAAQ,aAAcwc,EAAW,IA0G7CC,qCAAsCvE,IAxGG,CAAClE,EAAOC,MACjD,QAAUD,EAAM4E,QAChB,MAAM,OAAE3d,EAAM,IAAEoD,GAAQ4V,EAAOvK,QACzB1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,IAAU,QAAgBA,IACpCqZ,GAAYrZ,EAAQ,gBAAiB/E,EAAO,IAoG5CyhB,4BAA6BxE,IAlGG,CAAClE,EAAOC,MACxC,QAAUD,EAAM4E,OAAQ,4BACxB,MAAM,WAAE+D,EAAU,WAAEH,EAAU,IAAEne,EAAG,OAAEgJ,EAAM,QAAEuV,GAAY3I,EAAOvK,QAC1D1J,EAAS8Z,GAAe9F,EAAO3V,GAC/Bwe,EAAOnD,GAA4B1F,EAAM4E,OAAQva,IACvD,SAAU,QAAgB2B,GAAS,sCAC/Bwc,IACAxc,EAAOwc,WAAaA,IAEpBnV,aAAuC,EAASA,EAAOhD,SACvDrE,EAAOqE,MAAQgD,EAAOhD,OAE1BrE,EAAO8c,QAAUH,EACbC,IAAYC,aAAmC,EAASA,EAAKlc,QAC7Dkc,EAAKlc,KAAKR,KAAK8G,GDjLhB,SAA6B9G,EAAM4c,GACtC,MAAM,MAAEC,EAAK,OAAEC,GAAWF,GACpB,cAAEG,GAAkB/c,EAC1B,IAAI,UAAE+G,EAAY,EAAC,WAAEiW,GAAehd,EAiBpC,OAfI6c,EAAMI,KAAOlW,EAAY8V,EAAMI,MAC/BlW,EAAY8V,EAAMI,KAElBJ,EAAMlZ,KAAOoD,EAAY8V,EAAMlZ,MAC/BoD,EAAY8V,EAAMlZ,KAGjBoZ,IACGD,EAAOG,MAAQD,GAAc,GAAKF,EAAOG,MACzCD,EAAaF,EAAOG,KAEpBH,EAAOnZ,MAAQqZ,GAAc,GAAKF,EAAOnZ,MACzCqZ,EAAaF,EAAOnZ,MAGrB,CACHoD,YACAiW,aACAD,gBAER,CCwJ4BG,CAAoBR,EAAKlc,KAAKR,KAAK8G,GAAI2V,GAC/D,IAoFAU,4BAA6BpF,IAlFG,CAAClE,EAAOC,MACxC,QAAUD,EAAM4E,QAChB,MAAM,uBAAEmC,EAAsB,YAAEwC,EAAW,IAAElf,GAAQ4V,EAAOvK,QACtD1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,KAAW,QAAgBA,KAAW,QAAYA,KAC5DA,EAAOud,YAAcA,EACrBvd,EAAO+a,uBAAyBA,QAAuEA,EAAyB,EAAE,IA6ElIyC,yBAA0BtF,IAxDG,CAAClE,EAAOC,MACrC,QAAUD,EAAM4E,QAChB,MAAM,YAAE2E,EAAW,IAAElf,GAAQ4V,EAAOvK,QAC9B1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,KAAW,QAAgBA,KAAW,QAAYA,KAC5DA,EAAOud,YAAcA,CAAW,IAoDhCE,wBAAyBvF,IAlDG,CAAClE,EAAOC,MACpC,QAAUD,EAAM4E,QAChB,MAAM,IAAEva,EAAG,WAAEqf,GAAezJ,EAAOvK,QAC7B1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,IAAU,QAAYA,IAChCA,EAAO2d,IAAIC,OAASF,CAAU,IA8C9BG,2BAA4B3F,IA5CG,CAAClE,EAAOC,MACvC,QAAUD,EAAM4E,QAChB,MAAM,IAAEva,EAAG,eAAEsB,EAAc,oBAAEme,GAAwB7J,EAAOvK,QACtD1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,IAAU,QAAYA,IAChCA,EAAO2d,IAAIhe,eAAiBA,EAC5BK,EAAO2d,IAAIG,oBAAsBA,CAAmB,IAuCpDC,iCAAkC3D,GAClCA,sBAAuBlC,GAASkC,IAChC4D,8BAA+B9F,IAhCG,CAAClE,EAAOC,MAC1C,QAAUD,EAAM4E,QAChB,MAAM,OAAE3d,EAAM,IAAEoD,GAAQ4V,EAAOvK,QACzB1J,EAAS8Z,GAAe9F,EAAO3V,IACrC,QAAU2B,IAAU,QAAYA,IAChCqZ,GAAYrZ,EAAQ,gBAAiB/E,EAAO,IA4B5CgjB,WLvOuB,CAACjK,EAAOC,KAC/B,MAAM,WAAEiK,GAAejK,EAAOvK,QACxBmO,EAAgBD,GAAa5D,IAC7B,MAAEyD,GAAUI,GAElB,QAAUqG,GAAczG,EAAME,UAAUpS,OAAQ,sBAAsB2Y,8BAAuCzG,EAAME,UAAUpS,kBAK7H,MAAM4Y,EAAgB1G,EAAME,UAAUyG,MAAMF,GAC5CC,EAAcE,UAKd,MAAMC,EAAa,KAAQH,GAAgBI,GAAUA,EAAMhG,cAIrDiG,GAAgB,SAAa3G,EAAeyG,GAClD,OAAO,SAAQE,GAAgBhG,IAC3BA,EAAMf,MAAMC,YAAcwG,EAAa,EAEvC1F,EAAMf,MAAME,UAAUpS,OAAS2Y,CAAU,GAC3C,EK+MFO,mBAAoB/F,GACpBgG,kBAjPsB,CAAC1K,EAAOC,MAC9B,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,YAAEgF,EAAW,OAAE1B,GAAWhJ,EAAOvK,QAC/CwC,EAAU8H,EAAM4E,OAAOgB,SAASD,GACtCgF,EAAYnd,SAASmL,IACjB,MAAMhM,EAAOuL,EAAQ9L,MAAMuM,GAC3B,GAAInG,EAAe7F,EAAKX,QACpB,OAEJ,MAAM4c,EAAUpiB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKR,MAAO,CAAE8G,GAAIzM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKR,KAAK8G,IAAK,CAAEkW,WAAYF,MAC/Htc,EAAKR,KAAOyc,CAAO,GACrB,EAuOFgC,gBArOoB,CAAC5K,EAAOC,MAC5B,QAAUD,EAAM4E,QAChB,MAAM,aAAEe,EAAY,UAAEhN,EAAS,MAAEqQ,GAAU/I,EAAOvK,QAE5C/I,EADUqT,EAAM4E,OAAOgB,SAASD,GACjBvZ,MAAMuM,GACrBiQ,EAAUpiB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKR,MAAO,CAAE8G,GAAIzM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKR,KAAK8G,IAAK,CAAEC,UAAW8V,MAC9Hrc,EAAKR,KAAOyc,CAAO,GC9EjBiC,IAAc,SAAY,CAC5B5H,KAAM,SACNC,aAAcyB,GACdxB,SAAUmD,KAEDwE,GAAqBD,GAAYxH,QACjC0H,GAAgBF,GAAYtH,QCNnCyH,IAAe,SAAY,CAC7B/H,KAAM,eACNC,aCL+B,CAAE+H,SAAS,GDM1C9H,SEQ2B,CAC3B+H,gBAhBqBlL,IACrBA,EAAMiL,SAAU,EAChBjL,EAAM1Q,YAASzD,EACfmU,EAAMxL,WAAQ3I,CAAS,EAcvBsf,kBAZuBnL,IACvBA,EAAMiL,SAAU,EAChBjL,EAAM1Q,QAAS,EACf0Q,EAAMxL,WAAQ3I,CAAS,EAUvBuf,gBARoB,CAACpL,EAAOC,KAC5BD,EAAMiL,SAAU,EAChBjL,EAAM1Q,QAAS,EACf0Q,EAAMxL,MAAQyL,EAAOvK,OAAO,KFJnB2V,GAAsBL,GAAa3H,QACnCiI,GAAiBN,GAAazH,QGNrCgI,IAAc,SAAY,CAC5BtI,KAAM,cACNC,aCL8B,CAAEsI,QAAQ,GDMxCrI,SEQ0B,CAC1BsI,eAhBoBzL,IACpBA,EAAMwL,QAAS,EACfxL,EAAM1Q,YAASzD,EACfmU,EAAMxL,WAAQ3I,CAAS,EAcvB6f,iBAZsB1L,IACtBA,EAAMwL,QAAS,EACfxL,EAAM1Q,QAAS,EACf0Q,EAAMxL,WAAQ3I,CAAS,EAUvB8f,eARmB,CAAC3L,EAAOC,KAC3BD,EAAMwL,QAAS,EACfxL,EAAM1Q,QAAS,EACf0Q,EAAMxL,MAAQyL,EAAOvK,OAAO,KFJnBkW,GAAqBL,GAAYlI,QACjCwI,GAAgBN,GAAYhI,QGP5BuI,IAAkB,SAAoB,CAC/CC,SAAWjD,IAAY,SAAgB,QAAWA,MCDhDkD,IAAgB,SAAY,CAC9B/I,KAAM,WACNC,aAAc4I,GAAgBG,kBAC9B9I,SAAU,CACN+I,YAAaJ,GAAgBK,OAC7BC,YAAaN,GAAgBO,QAC7BC,cAAeR,GAAgBS,aAG1BC,GAAuBR,GAAc3I,QACrCoJ,GAAkBT,GAAczI,QCNtC,SAASmJ,GAAuB9P,GACnC,OAAO,QAAIA,EACf,C,4BCTO,MAAM+P,GAAuB,CAChC,kBAAmB,SACnB,gBAAiB,OACjB,gBAAiB,MACjB,mBAAoB,OACpB,iBAAkB,QAClB,mBAAoB,UACpB,gBAAiB,Q,2BCLd,MAAMC,GAAqB,aACrBC,GAAyB,mBACzBC,GAAc,QACdC,GAA6B,UAC7BC,GAAiB,QACjBC,GAAe,QAEfC,GAAsB,aCDtBC,GAA2B,CACpCC,QAAS,CACL5M,gBAAiB,WACjBhU,KAAM,UACNyW,KAAM,GACNoK,SAAS,GAEbC,aAAc,CACV9M,gBAAiB,gBACjBhU,KAAM,eACN0C,KAAM,OAASqe,SAAS,EAAG,SAASC,QAAQ,OAAOC,OAAOb,IAC1Dxd,GAAI,OAASoe,QAAQ,OAAOC,OAAOb,IACnC3J,KAAM,GACNoK,SAAS,GAEbK,eAAgB,GAChBC,aAAc,CACVnN,gBAAiB,gBACjBhU,KAAM,eACNwE,YAAa,iBACb9B,UAAMrD,EACNuD,QAAIvD,EACJoX,KAAM,GACNoK,SAAS,GAEbO,eAAgB,CACZ,gBAAiB,CACb,CACI1e,MAAO,EACPE,GAAI,EACJ4B,YAAa,gBACbwP,gBAAiB,cACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,GACPE,GAAI,EACJ4B,YAAa,gBACbwP,gBAAiB,eACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,GACPE,GAAI,EACJ4B,YAAa,gBACbwP,gBAAiB,eACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,KAGd,iBAAkB,CACd,CACI/T,KAAM,EACNE,GAAI,EACJ4B,YAAa,iBACbwP,gBAAiB,aACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,EACPE,IAAK,EACL4B,YAAa,iBACbwP,gBAAiB,aACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,GACPE,GAAI,EACJ4B,YAAa,iBACbwP,gBAAiB,iBACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,KAGd,mBAAoB,CAChB,CACI/T,KAAM,EACNE,GAAI,EACJ4B,YAAa,mBACbwP,gBAAiB,eACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,EACPE,IAAK,EACL4B,YAAa,mBACbwP,gBAAiB,eACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,EACPE,GAAI,EACJ4B,YAAa,mBACbwP,gBAAiB,kBACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,KAGd,gBAAiB,CACb,CACI/T,KAAM,EACNE,GAAI,EACJ4B,YAAa,gBACbwP,gBAAiB,YACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,IAEV,CACI/T,MAAO,EACPE,IAAK,EACL4B,YAAa,gBACbwP,gBAAiB,YACjBhU,KAAM,iBACN6gB,SAAS,EACTpK,KAAM,OCxIhB4K,GAAwB,CAC1B,kBACA,gBACA,gBACA,mBACA,iBACA,mBACA,iBAWSC,GAA6BtiB,IAAS,IAAQA,IAAqB,YAAbA,EAAIgB,KAK1DuhB,GAA4BviB,IAAS,IAAQA,IAAqB,iBAAbA,EAAIgB,KAKzDwhB,GAA8BxiB,IAAS,IAAQA,IAAqB,mBAAbA,EAAIgB,KAK3DyhB,GAA4BziB,IAAS,IAAQA,IAAqB,iBAAbA,EAAIgB,KAKzD0hB,GAA8B1iB,IAAS,IAAQA,IAAqB,mBAAbA,EAAIgB,K,2BCnCjE,MAAM2hB,GAAkC,CAACC,EAAMC,EAAazB,KAAwB,KAAOwB,GAAQ,KAAOA,GAAME,QAAQb,OAAOY,GAAcD,EACvIG,GAAmCC,GACvC,KAASA,GAeP,IAAIC,KAAK,KAAOD,EAAc3B,IAAwBY,UAdlDe,E,gBCLR,MAAME,IAAW,SAAe,CACnCC,OAAQ,CAAE3oB,GAAI,+BACd4oB,KAAM,CAAE5oB,GAAI,6BACZ6oB,IAAK,CAAE7oB,GAAI,4BACX8oB,KAAM,CAAE9oB,GAAI,6BACZ+oB,MAAO,CAAE/oB,GAAI,8BACbgpB,QAAS,CAAEhpB,GAAI,gCACfipB,KAAM,CAAEjpB,GAAI,6BACZkpB,gBAAiB,CAAElpB,GAAI,wCACvBmpB,eAAgB,CAAEnpB,GAAI,uCACtBopB,aAAc,CAAEppB,GAAI,qCACpBqpB,YAAa,CAAErpB,GAAI,oCACnBspB,aAAc,CAAEtpB,GAAI,qCACpBupB,cAAe,CAAEvpB,GAAI,sCACrBwpB,gBAAiB,CAAExpB,GAAI,wCACvBypB,aAAc,CAAEzpB,GAAI,qCACpB0pB,eAAgB,CAAE1pB,GAAI,sDACtB2pB,aAAc,CAAE3pB,GAAI,oDACpB4pB,cAAe,CAAE5pB,GAAI,qDACrB6pB,aAAc,CAAE7pB,GAAI,oDACpB8pB,WAAY,CAAE9pB,GAAI,kDAClB+pB,YAAa,CAAE/pB,GAAI,mDACnBgqB,YAAa,CAAEhqB,GAAI,mDACnBiqB,UAAW,CAAEjqB,GAAI,iDACjBkqB,WAAY,CAAElqB,GAAI,kDAClBmqB,aAAc,CAAEnqB,GAAI,oDACpBoqB,WAAY,CAAEpqB,GAAI,kDAClBqqB,YAAa,CAAErqB,GAAI,mDACnBsqB,cAAe,CAAEtqB,GAAI,qDACrBuqB,YAAa,CAAEvqB,GAAI,mDACnBwqB,aAAc,CAAExqB,GAAI,oDACpByqB,gBAAiB,CAAEzqB,GAAI,uDACvB0qB,cAAe,CAAE1qB,GAAI,qDACrB2qB,eAAgB,CAAE3qB,GAAI,sDACtB4qB,aAAc,CAAE5qB,GAAI,oDACpB6qB,WAAY,CAAE7qB,GAAI,kDAClB8qB,YAAa,CAAE9qB,GAAI,mDACnB,kBAAmB,CAAEA,GAAI,wBACzB,gBAAiB,CAAEA,GAAI,sBACvB,gBAAiB,CAAEA,GAAI,qBACvB,mBAAoB,CAAEA,GAAI,sBAC1B,iBAAkB,CAAEA,GAAI,uBACxB,mBAAoB,CAAEA,GAAI,yBAC1B,gBAAiB,CAAEA,GAAI,sBACvB+qB,IAAK,CAAE/qB,GAAI,qBACXgrB,OAAQ,CAAEhrB,GAAI,wBACdirB,YAAa,CAAEjrB,GAAI,4CACnBkrB,eAAgB,CAAElrB,GAAI,+CACtBmrB,eAAgB,CAAEnrB,GAAI,+CACtBorB,kBAAmB,CAAEprB,GAAI,kDACzBqrB,IAAK,CAAErrB,GAAI,oBACXsrB,aAAc,CAAEtrB,GAAI,4BACpBurB,yBAA0B,CAAEvrB,GAAI,qCAChCwrB,UAAW,CAAExrB,GAAI,yBACjByrB,sBAAuB,CAAEzrB,GAAI,kCAC7B0rB,SAAU,CAAE1rB,GAAI,wBAChB2rB,aAAc,CAAE3rB,GAAI,2BACpB4rB,QAAS,CAAE5rB,GAAI,wBACf6rB,YAAa,CAAE7rB,GAAI,2BACnB8rB,gBAAiB,CAAE9rB,GAAI,wCACvB+rB,uBAAwB,CAAE/rB,GAAI,+CAC9BgsB,WAAY,CAAEhsB,GAAI,4BAClBisB,WAAY,CAAEjsB,GAAI,4BAClBksB,WAAY,CAAElsB,GAAI,4BAClBmsB,SAAU,CAAEnsB,GAAI,0BAChBosB,SAAU,CAAEpsB,GAAI,0BAChBqsB,SAAU,CAAErsB,GAAI,0BAChBssB,QAAS,CAAEtsB,GAAI,yBACfusB,QAAS,CAAEvsB,GAAI,yBACfwsB,QAAS,CAAExsB,GAAI,yBACfysB,SAAU,CAAEzsB,GAAI,0BAChB0sB,SAAU,CAAE1sB,GAAI,0BAChB2sB,SAAU,CAAE3sB,GAAI,0BAChB4sB,UAAW,CAAE5sB,GAAI,2BACjB6sB,UAAW,CAAE7sB,GAAI,2BACjB8sB,UAAW,CAAE9sB,GAAI,2BACjB+sB,YAAa,CAAE/sB,GAAI,6BACnBgtB,YAAa,CAAEhtB,GAAI,6BACnBitB,YAAa,CAAEjtB,GAAI,6BACnBktB,SAAU,CAAEltB,GAAI,0BAChBmtB,SAAU,CAAEntB,GAAI,0BAChBotB,SAAU,CAAEptB,GAAI,0BAChBqtB,aAAc,CAAErtB,GAAI,wBACpBstB,WAAY,CAAEttB,GAAI,sBAClButB,UAAW,CAAEvtB,GAAI,qBACjBwtB,WAAY,CAAExtB,GAAI,sBAClBytB,YAAa,CAAEztB,GAAI,uBACnB0tB,cAAe,CAAE1tB,GAAI,yBACrB2tB,WAAY,CAAE3tB,GAAI,sBAClB4tB,aAAc,CAAE5tB,GAAI,wBACpB6tB,WAAY,CAAE7tB,GAAI,sBAClB8tB,UAAW,CAAE9tB,GAAI,qBACjB+tB,WAAY,CAAE/tB,GAAI,sBAClBguB,YAAa,CAAEhuB,GAAI,uBACnBiuB,cAAe,CAAEjuB,GAAI,yBACrBkuB,WAAY,CAAEluB,GAAI,sBAClB,eAAgB,CAAEA,GAAI,iCACtB,yBAA0B,CAAEA,GAAI,2CAChC,iBAAkB,CAAEA,GAAI,mCACxB,2BAA4B,CAAEA,GAAI,6CAClC,gBAAiB,CAAEA,GAAI,kCACvB,aAAc,CAAEA,GAAI,+BACpB,uBAAwB,CAAEA,GAAI,yCAC9B,eAAgB,CAAEA,GAAI,iCACtB,yBAA0B,CAAEA,GAAI,2CAChC,cAAe,CAAEA,GAAI,gCACrB,YAAa,CAAEA,GAAI,8BACnB,sBAAuB,CAAEA,GAAI,wCAC7B,cAAe,CAAEA,GAAI,gCACrB,wBAAyB,CAAEA,GAAI,0CAC/B,aAAc,CAAEA,GAAI,+BACpB,aAAc,CAAEA,GAAI,+BACpB,uBAAwB,CAAEA,GAAI,yCAC9B,eAAgB,CAAEA,GAAI,iCACtB,yBAA0B,CAAEA,GAAI,2CAChC,cAAe,CAAEA,GAAI,gCACrB,cAAe,CAAEA,GAAI,gCACrB,wBAAyB,CAAEA,GAAI,0CAC/B,gBAAiB,CAAEA,GAAI,kCACvB,0BAA2B,CAAEA,GAAI,4CACjC,eAAgB,CAAEA,GAAI,iCACtB,gBAAiB,CAAEA,GAAI,kCACvB,0BAA2B,CAAEA,GAAI,4CACjC,kBAAmB,CAAEA,GAAI,oCACzB,4BAA6B,CAAEA,GAAI,8CACnC,iBAAkB,CAAEA,GAAI,mCACxB,aAAc,CAAEA,GAAI,+BACpB,uBAAwB,CAAEA,GAAI,yCAC9B,eAAgB,CAAEA,GAAI,iCACtB,yBAA0B,CAAEA,GAAI,2CAChC,cAAe,CAAEA,GAAI,kCClInBmuB,GAAsBC,IACxB,MAAMC,EAAS,CAAC,EAKhB,OAJKD,EAAa/G,UAEdgH,EAAOD,EAAa5nB,MAAQ,CAAC,GAE1B6nB,CAAM,EAmCJC,GAAwBF,GAC7BrG,GAAyBqG,GAlCJ,CAACA,IAC1B,MAAMC,EAASF,GAAmBC,GAmBlC,MAlByB,CAAC,OAAQ,MACjB5mB,SAAS+mB,IACjBH,EAAaG,KACdF,EAAO/G,aAAe+G,EAAO/G,cAAgB,CAAC,OAGlBzhB,IAAxBuoB,EAAaG,KACbF,EAAO/G,aAAaiH,GAAS7F,GAASoD,gBAAgB9rB,IAE9D,IAECquB,EAAO/G,cACMiB,GAAgC6F,EAAallB,MAC/Cqf,GAAgC6F,EAAahlB,MAErDilB,EAAO/G,aAAe,CAAEle,GAAIsf,GAASqD,uBAAuB/rB,KAG7DquB,EAAO/G,aAAe+G,EAAS,CAAC,CAAC,EAe7BG,CAAqBJ,GAEvBnG,GAAyBmG,GAfT,CAACA,IAC1B,MAAMC,EAASF,GAAmBC,GAQlC,MAPyB,CAAC,OAAQ,MACjB5mB,SAAS+mB,SACM1oB,IAAxBuoB,EAAaG,KACbF,EAAO1G,aAAe0G,EAAO1G,cAAgB,CAAC,EAElD,IAEG0G,EAAO1G,aAAe0G,EAAS,CAAC,CAAC,EAO7BI,CAAqBL,GAGrBD,GAAmBC,GC/CrBM,GAA4B,CAACC,EAAkBC,KACxD,IAAKD,IAAqBC,EACtB,OAAOD,EAEX,GAAI7G,GAA0B6G,IAC1B5G,GAAyB4G,IACzB3G,GAA2B2G,IAC3B1G,GAAyB0G,GACzB,OAAOA,EAEN,GAAIzG,GAA2ByG,GAAmB,CACnD,MAAM,KAAEzlB,EAAI,GAAEE,GAAOulB,EACfE,EAA8B,IAAPzlB,GAAYF,EAAOE,EAChD,OAAO5I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGkmB,GAAmB,CAAEzlB,KAAM2lB,EAAuBF,EAAiBzlB,KAAO,EAAIylB,EAAiBzlB,KAAME,GAAIylB,GAAwB,EAAIzlB,GAChL,CAEI,MAAM,IAAI/I,MAAM,iCACpB,EAESyuB,GAA2BH,KAC/BA,EAAiBtH,WAGlBa,GAA2ByG,IACI,IAAxBA,EAAiBvlB,IAAYulB,EAAiBzlB,KAAOylB,EAAiBvlB,GCtBxE2lB,GAA8BvpB,IAC/B,IAAQA,IAAqB,iBAAbA,EAAIgB,KAMnBwoB,GAA8BxpB,GAAQuiB,GAAyBviB,IAAQwiB,GAA2BxiB,GAKlGypB,GAA8BzpB,GAAQyiB,GAAyBziB,IAAQ0iB,GAA2B1iB,GCV/G,SAAS0pB,GAA0BC,GAC/B,OAAOA,aAAuC,EAASA,EAAO9H,OAClE,CACA,SAAS+H,GAA8BD,GACnC,OAAOD,GAA0BC,GAAUA,OAAStpB,CACxD,CAWA,SAASwpB,GAAqCC,GAC1C,MAAM,aAAEhI,EAAY,eAAEI,EAAc,QAAEN,EAAO,aAAEO,EAAY,eAAEC,GAAmB0H,EAChF,OAAO9uB,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAI2e,GAAW,CAAEA,YAAcE,GAAgB,CAAEA,kBAAoB,IAAQI,IAAmB,CAAEA,mBAAqBC,GAAgB,CAAEA,kBAAoB,IAAQC,IAAmB,CAAEA,kBAC5Q,CAOO,SAAS2H,GAA+BD,GAC3C,IAAIrpB,EACJ,MAAMmhB,EAAUgI,GAA8BE,EAAkBlI,SAC1DE,EAAe8H,GAA8BE,EAAkBhI,cAC/DK,EAAeyH,GAA8BE,EAAkB3H,cAGrE,OAAO0H,GAAqC,CACxCjI,UACAE,eACAI,eAL+D,QAA3CzhB,EAAKqpB,EAAkB5H,sBAAmC,IAAPzhB,OAAgB,EAASA,EAAGkB,OAAO+nB,IAM1GvH,eACAC,eANmB0H,EAAkB1H,iBA1BPA,EA0BsD0H,EAAkB1H,eAzBnGpnB,OAAOD,KAAKqnB,GAAgBzd,QAAO,CAACqlB,EAAUxkB,KACjD,MACMykB,EADuB7H,EAAe5c,GACa7D,OAAO+nB,IAIhE,OAHIO,EAA4BlkB,SAC5BikB,EAASxkB,GAAeykB,GAErBD,CAAQ,GAChB,CAAC,MARR,IAAsC5H,CAkCtC,CACA,SAAS8H,GAAeP,GACpB,OAAIA,EAAOjmB,KAAOimB,EAAO/lB,GACd5I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG0mB,GAAS,CAAEjmB,KAAMimB,EAAO/lB,GAAIA,GAAI+lB,EAAOjmB,OAE3EimB,CACX,CAYO,SAASQ,GAAwBL,GACpC,IAAIrpB,EACJ,MAAMyhB,EAA6D,QAA3CzhB,EAAKqpB,EAAkB5H,sBAAmC,IAAPzhB,OAAgB,EAASA,EAAGpG,IAAI6vB,IACrG9H,EAAiB0H,EAAkB1H,gBAd7C,SAAiCA,GAC7B,OAAOpnB,OAAOD,KAAKqnB,GAAgBzd,QAAO,CAACqlB,EAAUxkB,KACjD,MAAM4kB,EAAuBhI,EAAe5c,GAE5C,OADAwkB,EAASxkB,GAAe4kB,EAAqB/vB,IAAI6vB,IAC1CF,CAAQ,GAChB,CAAC,EACR,CAQ+DK,CAAwBP,EAAkB1H,gBACrG,OAAOyH,GAAqC7uB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG6mB,GAAoB,CAAE5H,iBAC9FE,mBACR,C,4DC9DO,MASDkI,GAAiB,CAAC1H,EAAM2H,EAAeC,EAAchJ,KAClD,KAASoB,IAGV2H,GAA4C,IAA3B3H,EAAK1jB,MAAM,KAAK6G,OAC1B,GAAG6c,KAAQ4H,IAHX5H,EAOF6H,GAA0B,CAAC/mB,EAAME,EAAIif,KAC9C,MAAM0H,EAAgB1H,EAAW6H,SAASpJ,IACpCqJ,EAAwB9H,EAAWxO,QAAQkN,GAA4B,IAEvEqJ,EAAeN,GAAe5mB,EAAM6mB,EAAe/I,IACnDqJ,EAAaP,GAAe1mB,EAAI2mB,EAAe9I,IAC/CqJ,EAAW/H,GAAgC6H,GAC3CG,EAAShI,GAAgC8H,GACzCG,GArB2BC,EAqBkBF,EArBiB,KAA7CG,EAqBkBJ,GArBYK,YAC3B,IAA1BD,EAASE,cACa,KAAtBH,EAAOE,YACiB,KAAxBF,EAAOG,cAHe,IAACF,EAAUD,EAsBjC,GAAI,KAAOH,GAAUO,OAAON,EAAQ,OAChC,OAAIR,IAAkBS,EACX,GAAG,KAAOF,EAAUH,OA7BX,EAACO,EAAUD,KACnC,MAAMK,EAAW,KAAOJ,EAAU5J,IAC5BiK,EAAS,KAAON,EAAQ3J,IAC9B,OAAOgK,IAAaC,EAASD,EAAW,GAAGA,OAAmBC,GAAQ,EA0BRC,CAAaV,EAAUC,KAGtE,KAAOD,EAAUH,GAIhC,MAAMc,EAAoBT,EAAiBL,EAAwB9H,EAGnE,MAAO,GAFW,KAAOiI,EAAUW,QACnB,KAAOV,EAAQU,IACQ,EAErCC,GAA8B,CAChC,CAEIC,UAAW,CAACjoB,EAAME,IAAgB,IAATF,GAAqB,IAAPE,EACvCgoB,UAAW,CAACC,EAAOC,EAAKC,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,OAAO,KAAW6I,QAEhH,CAEIJ,UAAW,CAACjoB,EAAME,IAAgB,IAATF,GAAqB,IAAPE,EACvCgoB,UAAW,CAACC,EAAOC,EAAKC,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,OAAO,KAAW6I,QAEhH,CAEIJ,UAAW,CAACjoB,EAAME,KAAiB,IAAVF,IAAuB,IAARE,EACxCgoB,UAAW,CAACC,EAAOC,EAAKC,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,OAAO,KAAW6I,QAEhH,CAEIJ,UAAYjoB,GAAkB,IAATA,EACrBkoB,UAAW,CAACC,EAAOjoB,EAAImoB,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,QAAQ,KAAW6I,OAAsB,CAC9HG,EAAG7nB,KAAK8nB,IAAIvoB,GAAM,KAG1B,CAEI+nB,UAAW,CAACE,EAAOjoB,IAAc,IAAPA,EAC1BgoB,UAAW,CAACloB,EAAMooB,EAAKC,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,QAAQ,KAAW6I,OAAsB,CAC9HG,EAAG7nB,KAAK8nB,IAAIzoB,GAAQ,KAG5B,CAEIioB,UAAW,CAACjoB,EAAME,IAAOF,EAAO,GAAKA,IAASE,EAC9CgoB,UAAW,CAACloB,EAAMooB,EAAKC,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,GAAG6I,qBAAoC,CAC5H1lB,MAAOhC,KAAK8nB,IAAIzoB,MAGxB,CAEIioB,UAAW,CAACjoB,EAAME,IAAOF,EAAO,GAAKA,IAASE,EAC9CgoB,UAAW,CAACloB,EAAMooB,EAAKC,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,GAAG6I,uBAAsC,CAC9H1lB,MAAOhC,KAAK8nB,IAAIzoB,MAGxB,CAEIioB,UAAW,CAACjoB,EAAME,IAAOF,EAAO,GAAKE,EAAK,EAC1CgoB,UAAW,CAACloB,EAAME,EAAImoB,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,GAAG6I,WAA0B,CACjHroB,KAAMW,KAAK8nB,IAAIzoB,GACfE,GAAIS,KAAK8nB,IAAIvoB,MAGrB,CAEI+nB,UAAW,CAACjoB,EAAME,IAAOF,EAAO,GAAKE,EAAK,EAC1CgoB,UAAW,CAACloB,EAAME,EAAImoB,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,GAAG6I,aAA4B,CACnHroB,KAAMW,KAAK8nB,IAAIzoB,GACfE,GAAIS,KAAK8nB,IAAIvoB,MAGrB,CAEI+nB,UAAW,KAAM,EACjBC,UAAW,CAACloB,EAAME,EAAImoB,EAAiBC,IAAeA,EAAWC,cAAc/I,GAAS,GAAG6I,YAA2B,CAClHroB,KAAMW,KAAK8nB,IAAIzoB,GACfE,GAAIS,KAAK8nB,IAAIvoB,OAIZwoB,GAA0B,CAAC1oB,EAAME,EAAI4B,EAAawmB,KAC3D,MAAMD,EAAkB5K,GAAqB3b,IACvC,UAAEomB,GAAcF,GAA4B7pB,MAAMwqB,GAAMA,EAAEV,UAAUjoB,EAAME,KAChF,OAAOgoB,EAAUloB,EAAME,EAAImoB,EAAiBC,EAAW,EASrDM,GAA0C,CAAC3qB,EAAQqqB,EAAYnJ,KACjE,GAAIN,GAAyB5gB,IAAW8gB,GAAyB9gB,GAC7D,OAAO4qB,GAA2C5qB,EAAQqqB,EAAYnJ,GAErE,GAAIP,GAA0B3gB,IAC/B6gB,GAA2B7gB,IAC3B+gB,GAA2B/gB,GAC3B,OAAOA,EAAO8V,MAAQ8U,GAA2C5qB,EAAQqqB,EAAYnJ,GAGrF,MAAM,IAAIhoB,MAAM,gCACpB,EAcS2xB,GAAqB,CAAC7qB,EAAQ8qB,EAAQ5J,EAAanB,MAC5D,MAAMsK,GAAa,QAAQS,GAC3B,OAAOH,GAAwC3qB,EAAQqqB,EAAYnJ,EAAW,EAW5E0J,GAA6C,CAAC5qB,EAAQqqB,EAAYnJ,KACpE,GAAIN,GAAyB5gB,GACzB,MA9CoC,EAACA,EAAQkhB,IAAelhB,EAAO+B,MAAQ/B,EAAOiC,GAAK6mB,GAAwB9oB,EAAO+B,KAAM/B,EAAOiC,GAAIif,GAAc,GA8C9I6J,CAAoC/qB,EAAQkhB,GAElD,GAAIL,GAA2B7gB,GAChC,MAhDsC,EAACA,EAAQkhB,IAAe4H,GAAwB9oB,EAAO+B,KAAM/B,EAAOiC,GAAIif,GAgDvG8J,CAAsChrB,EAAQkhB,GAEpD,GAAIP,GAA0B3gB,GAC/B,MArD+B,CAACqqB,GAAeA,EAAWC,cAAc,CAAEzxB,GAAI,0BAqDvEoyB,CAA+BZ,GAErC,GAAIvJ,GAAyB9gB,GAC9B,MArDoC,EAACA,EAAQqqB,IAAsC,iBAAhBrqB,EAAO+B,MAA0C,iBAAd/B,EAAOiC,GAC/GwoB,GAAwBzqB,EAAO+B,KAAM/B,EAAOiC,GAAIjC,EAAO6D,YAAawmB,GACpE,GAmDSa,CAAoClrB,EAAQqqB,GAElD,GAAItJ,GAA2B/gB,GAChC,MArDsC,EAACA,EAAQqqB,IAAeI,GAAwBzqB,EAAO+B,KAAM/B,EAAOiC,GAAIjC,EAAO6D,YAAawmB,GAqD3Hc,CAAsCnrB,EAAQqqB,GAGrD,MAAM,IAAInxB,MAAM,gCACpB,ECjLEkyB,GAAoB,CACtBjE,qBAAoB,GACpB0D,mBAAkB,GAClBQ,kCDuJ6C,CAACrrB,EAAQqqB,EAAYnJ,EAAanB,KAAwB4K,GAAwC3qB,EAAQqqB,EAAYnJ,GCtJnKoK,4BD+KuC,CAACtrB,EAAQ8qB,EAAQ5J,EAAanB,MACrE,MAAMsK,GAAa,QAAQS,GAC3B,OAAOF,GAA2C5qB,EAAQqqB,EAAYnJ,EAAW,EChLjF1B,qBAAoB,GACpB+H,0BAAyB,GACzBvH,yBAAwB,GACxB2H,wBAAuB,GACvB4D,eCF0B,CAAC7mB,EAAO0X,EAAaqL,KAC/C,MAAM+D,EAAiBjE,GAA0B7iB,EAAO+iB,GACxD,GAAI9G,GAA0B6K,GAC1B,OAAO,KAEX,GAAI3D,GAA2B2D,GAC3B,MArB8B,EAAC9mB,EAAOtD,KAAY,CACtDY,mBAAoB,CAChBZ,UACAW,KAAM2C,EAAM3C,KACZE,GAAIyC,EAAMzC,MAiBHwpB,CAAuBD,EAAgBpP,GAElD,GAAI0L,GAA2B0D,GAC3B,MAjB8B,EAAC9mB,EAAOtD,KAAY,CACtDiC,mBAAoB,CAChBjC,UACAW,KAAM2C,EAAM3C,KACZE,GAAIyC,EAAMzC,GACV4B,YAAaa,EAAMb,eAYZ6nB,CAAuBF,EAAgBpP,GAElD,MAAM,IAAIljB,MAAM,qCAAqC,EDRrD4vB,wBAAuB,GACvB2B,wBAAuB,GACvBrC,+BAA8B,IEjBrBuD,GAA0B,CACnCzuB,KAAK,QAAM,kCACX0uB,eAAgB,aAChB3L,QAASmL,GAAkBpL,yBAAyBC,QACpDE,aAAciL,GAAkBpL,yBAAyBG,aACzDK,aAAc,CACVnhB,KAAM,eAENwsB,uBAAwB,CAAC,iBAAkB,gBAAiB,mBAAoB,iBAChFxY,gBAAiB+X,GAAkBpL,yBAAyBQ,aAAanN,gBACzEyC,KAAMsV,GAAkBpL,yBAAyBQ,aAAa1K,KAC9DoK,SAAS,GAEb4L,gBAAiBzyB,OAAOD,KAAKgyB,GAAkBpL,yBAAyBS,gBAAgBzd,QAAO,CAAC+oB,EAASC,KACrG,MAAMC,EAAqBb,GAAkBpL,yBAAyBS,eAAeuL,GAErF,OADAD,EAAQ7tB,QAAQ+tB,GACTF,CAAO,GACf,IACHG,gBAAiB,I,2BCnBd,MAAMC,GAEH,mB,0BCFV,MAAMC,GAAwBvoB,GAAgBA,IAAgBsoB,GACxDE,GAAmBC,GAAWA,EAAOzoB,cAAgBsoB,GAS3D,SAASI,GAAgBvsB,GACrB,IAAIlB,EACJ,OAAiF,QAAzEA,EAAKkB,aAAuC,EAASA,EAAOkgB,eAA4B,IAAPphB,GAAgBA,CAC7G,CACA,SAAS0tB,GAAsB5qB,GAC3B,IAAI9C,EACJ,OAAkG,QAA1FA,EAAK8C,aAAyC,EAASA,EAAQ6qB,KAAKF,WAAqC,IAAPztB,GAAgBA,CAC9H,CAuCO,SAAS4tB,GAAyB5yB,EAAQ6yB,GAA4B,GACzE,IAnCJ,SAA4B7yB,GACxB,OAAQyyB,GAAgBzyB,EAAOmmB,UAC3BsM,GAAgBzyB,EAAOqmB,eAN/B,SAA+BngB,GAC3B,IAAIlB,EACJ,OAAOytB,GAAgBvsB,KAAY,IAAiG,QAAxFlB,EAAKkB,aAAuC,EAASA,EAAO6rB,8BAA2C,IAAP/sB,EAAgBA,EAAK,GACrK,CAIQ8tB,CAAsB9yB,EAAO0mB,eAC7BgM,GAAsB1yB,EAAOoyB,kBAC7BM,GAAsB1yB,EAAOgyB,gBACrC,CA6BSe,CAAmB/yB,GACpB,MAAO,mBAEX,MAAMgzB,EA/BV,SAAgChzB,GAQ5B,MAPmB,CACfA,EAAOmmB,QACPnmB,EAAOqmB,aACPrmB,EAAO0mB,gBACH1mB,EAAOoyB,iBAAmB,MAC1BpyB,EAAOgyB,iBAAmB,IAEhB9rB,QAAQR,QAAkBd,IAATc,GACvC,CAsBuButB,CAAuBjzB,GACpCkzB,EA3DV,SAAiCC,GAC7B,MAAMC,EAAS,KAAQD,GAAUjtB,GAAWA,EAAOqT,kBAC7C8Z,EAAa9zB,OAAOD,KAAK8zB,GAAQltB,QAAQqT,GAAoB6Z,EAAO7Z,GAAiBjP,OAAS,IAIpG,OAHI+oB,EAAW/oB,QACXvD,QAAQC,KAAK,oEAAoEqsB,EAAWtvB,KAAK,QAE9FsvB,CACX,CAoDiCC,CAAwBN,GACrD,OAAIE,EAAqB5oB,OACd,0BAEHuoB,GA1BZ,SAA+B7yB,GAE3B,MAKMuzB,EALmB,CACrBvzB,EAAOmmB,WACHnmB,EAAOoyB,iBAAmB,MAC1BpyB,EAAOgyB,iBAAmB,IAEM5rB,MAAM8nB,IAAYA,aAAuC,EAASA,EAAO3U,mBAAqBvZ,EAAO8xB,iBAC7I,QAAOyB,GAAiBA,EAAenN,OAC3C,CAiByCoN,CAAsBxzB,GAAU,QAAU,uBACnF,CAcA,MAAMyzB,GAAoB,CAAC,yBAA0B,oB,gBC/E9C,SAASC,GAA2BC,GACvC,MAAQC,OAAQC,EAAS7C,OAAQ8C,EAASC,WAAYC,EAAa9yB,UAAW+yB,GAAeN,EAC7F,OAD2H,SAAOA,EAAuB,CAAC,SAAU,SAAU,aAAc,aAEhM,CCTA,MCGMO,IAAc,SAAY,CAC5BlY,KAAM,mBACNC,aCLwC,CACxCkY,sBAAkBvvB,EAClBwvB,+BAA2BxvB,EAC3ByvB,+BAA2BzvB,EAC3B0vB,wCAAoC1vB,GDEpCsX,SDSoC,CACpCqY,oBAhBwB,CAACxb,EAAOC,KAChC,MAAM,iBAAEmb,EAAgB,0BAAEC,EAAyB,0BAAEC,GAA8Brb,EAAOvK,QAC1FsK,EAAMob,iBAAmBA,EACzBpb,EAAMqb,0BAA4BA,EAClCrb,EAAMsb,0BAA4BA,CAAyB,EAa3DG,qCAXyC,CAACzb,EAAOC,KAC5CD,EAAMub,qCACPvb,EAAMub,mCAAqC,IAE/Cvb,EAAMub,mCAAmClwB,KAAK4U,EAAOvK,QAAQ,EAQ7DgmB,uCAN4C1b,IAC5CA,EAAMub,mCAAqC,EAAE,KCLpCI,GAA+BR,GAAY9X,QAC3CuY,GAA0BT,GAAY5X,Q,2BERnD,MAAMsY,GAAqB,CACvB,mBACA,SACA,aACA,eACA,YCOSC,GAAoC,CAAC,ECXrCC,GAAqC/yB,KAC9C,QAAUA,EAAU,sCACbxC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzF,GAAW8yB,KCA/C,SAAUE,GAAkCxmB,EAAKymB,EAAkBxmB,SAChEiX,G5DwHH,SAAoClX,EAAKlG,EAAQmG,GACpD,MAAO,CACHjJ,KAAM,4DACNgJ,MACAC,gBACAC,QAAS,CACLpG,UAGZ,C4DjIiC4sB,CAA2B1mB,EAAKymB,EAAkBxmB,UACzE,QAAImmB,GAAwBH,qCAAqCQ,GAC3E,CCCA,SAASE,GAAqB3mB,GAC1B,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EACFuB,UAAUA,GACVmB,oBACA0G,UAAU,GACVC,QACAmsB,OAAOh2B,IAER4H,QAAQquB,IAAI,wGAAyGj2B,EACrG,GAExB,CASA,SAAUk2B,GAAwB9mB,EAAKvO,EAAQwd,GAC3C,IAAIxY,EAAIswB,EACR,QAAgC1wB,IAA5B5E,EAAOm0B,iBACP,OAAOn0B,EAAOm0B,iBAElB,MAAM9rB,QAAe,QAAK6sB,GAAsB3mB,GAQhD,OAPkF,QAA5EvJ,EAAKqD,aAAuC,EAASA,EAAO8B,kBAA+B,IAAPnF,EAAgBA,EAAK,GAAK,UAC1G,QAAK+vB,GAAmCxmB,EAAK,mBAAoBiP,EAAIhP,iBAE3DnG,aAAuC,EAASA,EAAOlD,MAAM,YAEvE,QAAK4vB,GAAmCxmB,EAAK,YAAaiP,EAAIhP,gBAEU,QAA1E8mB,EAAKjtB,aAAuC,EAASA,EAAOlD,MAAM,UAAuB,IAAPmwB,EAAgBA,EAAKzD,EACnH,CACA,SAAS0D,GAAoBhnB,EAAKvO,GAC9B,OAAIA,EAAO+B,UAAY/B,EAAOgxB,QAAUhxB,EAAO+zB,WACpC3rB,QAAQ5I,QAAQ,CACnBwxB,OAAQhxB,EAAOgxB,OACf+C,WAAY/zB,EAAO+zB,WACnBhyB,SAAU/B,EAAO+B,WA5B7B,SAAoCwM,GAChC,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWa,WAAWyzB,2BACnD,CA4BWC,CAA2BlnB,GAAK9D,MAAMirB,IACzC,IAAI1wB,EAAIswB,EAAIK,EACZ,MAAO,CACH3E,OAAiC,QAAxBhsB,EAAKhF,EAAOgxB,cAA2B,IAAPhsB,EAAgBA,GAAK,SAAc0wB,EAAI1E,QAChF+C,WAAyC,QAA5BuB,EAAKt1B,EAAO+zB,kBAA+B,IAAPuB,EAAgBA,EAAKI,EAAI3B,WAC1EhyB,SAAqC,QAA1B4zB,EAAK31B,EAAO+B,gBAA6B,IAAP4zB,EAAgBA,EAAKjC,GAA2BgC,GAC/F,GAEV,CACA,SAASE,GAAoBrnB,EAAKvO,GAC9B,OAAIA,EAAO61B,aACAztB,QAAQ5I,QAAQQ,EAAO61B,cAtCtC,SAA0BtnB,GACtB,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWe,UAAU6zB,iBAClD,CAqCWC,CAAiBxnB,EAC5B,CAMO,SAAUynB,GAAuBznB,EAAKiP,GACzC,MAAQ/O,SAAS,OAAEzO,EAAS,CAAC,IAASwd,EAEtC,SADM,QAAImX,GAAwBF,0CJ7D/B,SAA0Bz0B,GAC7B,IAAKA,EACD,OAAO,EAEX,MAAMi2B,EAAkB,KAAKj2B,GAC7B,OAAO40B,GAAmBsB,OAAOrvB,GAAQ,KAASovB,EAAiBpvB,IACvE,CIwDQsvB,CAAiBn2B,GAIjB,OAAIA,EAAOo2B,0BAA4Bp2B,EAAO+B,SACnCs0B,GAAoBr2B,GAExBT,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG6uB,GAAoBr2B,IAAU,CAAE+B,SAAU+yB,GAAkC90B,EAAO+B,YAS9H,MAAOoyB,EAAkBpyB,EAAU8zB,SAAsB,QAAI,EACzD,QAAKR,GAAyB9mB,EAAKvO,EAAQwd,IAC3C,QAAK+X,GAAqBhnB,EAAKvO,IAC/B,QAAK41B,GAAqBrnB,EAAKvO,MAE5Bs2B,EAAuBC,GTN3B,SAAkCv2B,EAAQ+B,GAC7C,MAAMw0B,EAAmB3D,GAAyB5yB,GAC5Cw2B,EAAe,KAAS/C,GAAmB8C,GAA6B1E,GAAT7xB,EAC/Dm0B,EAAoBpyB,EAAS00B,kBAAkDD,EAlBlF,SAAwBx2B,GAC3B,IAAIgF,EAAIswB,EACR,MAAM,aAAE5O,EAAY,gBAAEsL,GAAoBhyB,EACpC02B,EAAmBhQ,EACnB,CACEA,aAAcnnB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGkf,GAAe,CAAEqL,uBAA+M,QAAtLuD,EAAgH,QAA1GtwB,EAAK0hB,aAAmD,EAASA,EAAaqL,8BAA2C,IAAP/sB,OAAgB,EAASA,EAAGkB,OAAOosB,WAA0C,IAAPgD,EAAgBA,EAAK,MAE7S,CAAC,EACP,OAAO/1B,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGxH,GAAS02B,GAAmB,CAAE1E,gBAAiBA,aAAyD,EAASA,EAAgB9rB,OAAOqsB,KACjM,CAS2DoE,CAAeH,GACtE,MAAO,CAACrC,EAAkBoC,EAC9B,CSCsDK,CAAyBzC,EAAkBpyB,EAASA,UAC7E,UAArBw0B,UACM,QAAKxB,GAAmCxmB,EAAKgoB,EAAkB/Y,EAAIhP,gBAE7E,MAAMqoB,EAAqBR,GAAoBr2B,GAC/C,OAAOT,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGqvB,GAAqB,CAAE7F,OAAQjvB,EAASivB,OAAQ+C,WAAYhyB,EAASgyB,WAAYI,iBAAkBmC,EAAuBv0B,SAAU80B,EAAmBT,wBACpLr0B,EAASA,SACT+yB,GAAkC/yB,EAASA,UAAW8zB,eAAciB,YAAa92B,EAAO82B,aACtG,CACA,SAAST,GAAoBr2B,GACzB,IAAIgF,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,OAAOl4B,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGxH,GAAS,CAAE03B,mBAAyD,QAApC1yB,EAAKhF,EAAO03B,0BAAuC,IAAP1yB,EAAgBA,EAAK,CAAC,EAAG2yB,WAAyC,QAA5BrC,EAAKt1B,EAAO23B,kBAA+B,IAAPrC,GAAgBA,EAAYsC,WAAyC,QAA5BjC,EAAK31B,EAAO43B,kBAA+B,IAAPjC,GAAgBA,EAAYkC,SAAqC,QAA1Bd,EAAK/2B,EAAO63B,gBAA6B,IAAPd,GAAgBA,EAAYe,eAAiD,QAAhCd,EAAKh3B,EAAO83B,sBAAmC,IAAPd,GAAgBA,EAAYe,qBAA6D,QAAtCd,EAAKj3B,EAAO+3B,4BAAyC,IAAPd,GAAgBA,EAAYe,0CAAuG,QAA3Dd,EAAKl3B,EAAOg4B,iDAA8D,IAAPd,GAAgBA,EAAYe,0BAAuE,QAA3Cd,EAAKn3B,EAAOi4B,iCAA8C,IAAPd,EAAgBA,EAAK,CAAC,EAAGf,wBAAmE,QAAzCgB,EAAKp3B,EAAOo2B,+BAA4C,IAAPgB,GAAgBA,EAAYc,0BAAuE,QAA3Cb,EAAKr3B,EAAOk4B,iCAA8C,IAAPb,GAAgBA,EAAYc,kBAAuD,QAAnCb,EAAKt3B,EAAOm4B,yBAAsC,IAAPb,EAAgBA,EAAK,OAAQc,oBAA2D,QAArCb,EAAKv3B,EAAOo4B,2BAAwC,IAAPb,GAAgBA,EAAYc,gBAAmD,QAAjCb,EAAKx3B,EAAOq4B,uBAAoC,IAAPb,GAAgBA,EAAYc,eAAiD,QAAhCb,EAAKz3B,EAAOs4B,sBAAmC,IAAPb,EAAgBA,EAAK,CAAC,GAC/0C,CC5GA,MCGM,IAAc,SAAY,CAC5Bzb,KAAM,SACNC,aCL8B,CAAEjc,YAAQ4E,GDMxCsX,SDH0B,CAC1Bqc,UAJc,CAACxf,EAAOC,KACtBD,EAAM/Y,OAASgZ,EAAOvK,OAAO,KCOpB+pB,GAAqB,GAAYpc,QACjCqc,GAAgB,GAAYnc,QENnCoc,IAAoB,SAAY,CAClC1c,KAAM,eACNC,aCLoC,CAAE7a,kBAAcwD,GDMpDsX,SEHgC,CAChCyc,gBAJoB,CAAC5f,EAAOC,KAC5BD,EAAM3X,aAAe4X,EAAOvK,OAAO,KFO1BmqB,GAA2BF,GAAkBtc,QAC7Cyc,GAAsBH,GAAkBpc,Q,yEGVrD,MAAM6F,GAAM,CAAC2W,EAAGC,IAAOD,EAAIC,EAAID,EAAIC,EAEtBC,GAA4B9K,IAAW,OAAC3uB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG0mB,GAAS,CAAEjmB,MADnF6wB,EAC6F5K,EAAOjmB,KADjG8wB,EACuG7K,EAAO/lB,GADvG2wB,GAAKC,EAAID,EAAIC,GAC+F5wB,GAAIga,GAAI+L,EAAOjmB,KAAMimB,EAAO/lB,MADnJ,IAAC2wB,EAAGC,CACsJ,ECOhKE,GAAe,CAACC,EAAgBC,KAClC,MAAMC,EAAS,IAAKF,GAAkB,MAASC,GAAoB,IAAKv6B,IAAIo6B,IAC5E,OAAO,KAAOI,EAAQ,KAAU,EAE9BC,GAAcC,GAAqBC,IACrC,IAAIv0B,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EACxB,IAAKqC,EAAgBD,WACjB,OAAOE,EAEX,MAAMnH,EAAkB6G,GAAoH,QAAtGj0B,EAAKu0B,aAAqD,EAASA,EAAcnH,uBAAoC,IAAPptB,EAAgBA,EAAK,GAAyG,QAApG2wB,EAA2C,QAArCL,EAAKgE,EAAgBD,kBAA+B,IAAP/D,OAAgB,EAASA,EAAGlD,uBAAoC,IAAPuD,EAAgBA,EAAK,IACzS3D,EAAkBiH,GAAoH,QAAtGlC,EAAKwC,aAAqD,EAASA,EAAcvH,uBAAoC,IAAP+E,EAAgBA,EAAK,GAAyG,QAApGE,EAA2C,QAArCD,EAAKsC,EAAgBD,kBAA+B,IAAPrC,OAAgB,EAASA,EAAGhF,uBAAoC,IAAPiF,EAAgBA,EAAK,IAC/S,OAAO13B,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+xB,GAAiBnH,EAAgB9nB,OAAS,CAAE8nB,mBAAoB,MAASJ,EAAgB1nB,OAAS,CAAE0nB,mBAAoB,KAAM,EAEjLwH,GAA0B3yB,GAASyyB,GAAqBC,IAC1D,IAAIv0B,EACJ,MAAMy0B,EAAYF,EAAc1yB,GAChC,OAAK4yB,GAGAA,EAAUrT,SAAYkT,EAAgBI,cAGI,QAAtC10B,EAAKs0B,EAAgBI,mBAAgC,IAAP10B,OAAgB,EAASA,EAAGiqB,SAASwK,EAAUlgB,kBAChGha,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+xB,GAAgB,CAAE,CAAC1yB,GAAMtH,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+xB,EAAc1yB,IAAO,CAAEuf,SAAS,MANpHmT,CAM+I,EAExJI,GAAcH,GAAuB,WACrCI,GAAmBJ,GAAuB,gBAC1CK,GAAmBL,GAAuB,gBAO1CM,GAAuBR,GAAqBC,IAC9C,IAAIv0B,EACJ,KAA+C,QAAxCA,EAAKu0B,EAAcnH,uBAAoC,IAAPptB,OAAgB,EAASA,EAAGsF,UAAYgvB,EAAgBI,YAC3G,OAAOH,EAEX,MAAMnH,EAAkBmH,EAAcnH,gBAAgBxzB,KAAK4zB,IACvD,IAAIxtB,EACJ,OAA+C,QAAtCA,EAAKs0B,EAAgBI,mBAAgC,IAAP10B,OAAgB,EAASA,EAAGiqB,SAASuD,EAAOjZ,kBAC7Fha,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgrB,GAAS,CAAEpM,SAAS,IAAWoM,CAAM,IAE/E,OAAOjzB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+xB,GAAgB,CAAEnH,mBAAkB,EAEzE2H,GAAuBT,GAAqBC,IAC9C,IAAIv0B,EACJ,MAAMg1B,EAAuCV,EAAgBI,aAAeJ,EAAgBW,kBAC5F,KAA+C,QAAxCj1B,EAAKu0B,EAAcvH,uBAAoC,IAAPhtB,OAAgB,EAASA,EAAGsF,UAAY0vB,EAC3F,OAAOT,EAEX,MAAMvH,EAAkBuH,EAAcvH,gBAAgBpzB,KAAK4zB,GAxB9B,EAACA,EAAQ8G,KACtC,IAAIt0B,EAAIswB,EACR,MAAM4E,EAAkE,QAA5Cl1B,EAAKs0B,EAAgBW,yBAAsC,IAAPj1B,OAAgB,EAASA,EAAGiqB,SAASuD,EAAOzoB,aACtHowB,EAAmD,QAAtC7E,EAAKgE,EAAgBI,mBAAgC,IAAPpE,OAAgB,EAASA,EAAGrG,SAASuD,EAAOjZ,iBAC7G,OAAO2gB,GAAsBC,IAAa,CAAK,EAoBuBC,CAAyB5H,EAAQ8G,GACjG/5B,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgrB,GAAS,CAAEpM,SAAS,IAAWoM,IACrE,OAAOjzB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+xB,GAAgB,CAAEvH,mBAAkB,EAEzEqI,GAAiCf,GAAqBC,IACxD,IAAIv0B,EACJ,KAA4C,QAArCA,EAAKu0B,EAAc7S,oBAAiC,IAAP1hB,OAAgB,EAASA,EAAGohB,WAAakT,EAAgBW,kBACzG,OAAOV,EAEX,MAAMe,EAAgBf,EAAc7S,aAAaqL,uBAAuB7rB,QAAQ6D,IAAkB,IAAI/E,EAAIswB,EAAI,QAA2H,QAAjHA,EAAkD,QAA5CtwB,EAAKs0B,EAAgBW,yBAAsC,IAAPj1B,OAAgB,EAASA,EAAGiqB,SAASllB,UAAiC,IAAPurB,GAAgBA,EAAW,KACtQ,aAAE5O,GAAiB6S,EAAegB,GAAmC,SAAOhB,EAAe,CAAC,iBAClG,OAAOe,EAAchwB,OAAS,EACxB/K,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+xB,GAAgB,CAAE7S,aAAcnnB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGkf,GAAe,CAAEqL,uBAAwBuI,MAAsBC,CAAgC,ECrElM,SAAUC,GAAmCjsB,EAAKiP,EAAKxd,EAAQy6B,GAClE,IAAKA,EACD,MAAO,CACHz6B,SACA06B,OAAQ,aAGhB,MAAMC,EDuEH,SAAgC36B,EAAQy6B,GAE3C,OADiB,KAAKpB,GAAWoB,GAAqBd,GAAYc,GAAqBb,GAAiBa,GAAqBZ,GAAiBY,GAAqBJ,GAA8BI,GAAqBX,GAAoBW,GAAqBV,GAAoBU,GAC5QG,CAAS56B,EACpB,CC1EyB66B,CAAuB76B,EAAQy6B,GAQ9CK,EAAyBlI,GAAyB+H,GAAc,GACtE,MAA+B,UAA3BG,SACM,QAAK/F,GAAmCxmB,EAAKusB,EAAwBtd,EAAIhP,eACxE,CACHxO,SACA06B,OAAQ,cAGT,CACH16B,OAAQ26B,EACRD,OAAQ,YAEhB,CC9BA,SAASK,GAA2BxsB,GAChC,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWiB,cAAc64B,8BACtD,CACO,SAAUC,GAAmB1sB,EAAKiP,GACrC,MAAM,YAAErb,GAAgBqb,EAAI/O,QAC5B,OAAItM,UAGiB,QAAK44B,GAA4BxsB,GAE1D,CCXA,MCGM2sB,IAAmB,SAAY,CACjClf,KAAM,cACNC,aCLmC,CAAE9Z,iBAAayC,GDMlDsX,SDH+B,CAC/Bif,eAJmB,CAACpiB,EAAOC,KAC3BD,EAAM5W,YAAc6W,EAAOvK,OAAO,KCOzB2sB,GAA0BF,GAAiB9e,QAC3Cif,GAAqBH,GAAiB5e,QEV7Cgf,GAA8B,CAChC,uBACA,wBACA,0BACA,uBACA,2BACA,wBACA,4BACA,yBACA,4BAEG,SAASC,GAAYhtB,GACxB,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EACzB4kB,EAAU,CACZqI,YAAa,GACbC,YAAa,GACbC,MAAO,CAAC,YAAa,OAAQ,UAAW,cAAe,sBACvDC,yBAA0BL,GAC1BM,YAAY,GAEhB,OAAOj8B,EAAQuB,UAAUA,GAAWQ,UAAUm6B,YAAY1I,GAASzpB,MACvE,CCrBO,SAASoyB,GAAoBvtB,GAChC,MAAM,QAAE5O,EAAO,UAAEuB,EAAS,aAAE66B,GAAiBxtB,EAE7C,OAAK5O,EAAQI,aAAai8B,kBAGnBr8B,EAAQuB,UAAUA,GAAWY,aAAam6B,uCAAuCF,GAF7E3zB,QAAQ5I,QAAQ,GAG/B,CCNA,MCGM08B,IAAe,SAAY,CAC7BlgB,KAAM,UACNC,aCN+B,CAC/Bza,gBAAYoD,EACZjD,cAAUiD,EACV+E,kBAAc/E,EACdhD,WAAOgD,EACPu3B,0BAAsBv3B,GDEtBsX,SDE2B,CAC3BkgB,gBAToB,CAACrjB,EAAOC,KAC5B,MAAM,WAAExX,EAAU,SAAEG,EAAQ,aAAEgI,EAAY,MAAE/H,EAAK,qBAAEu6B,GAAyBnjB,EAAOvK,QACnFsK,EAAMvX,WAAaA,EACnBuX,EAAMpX,SAAWA,EACjBoX,EAAMnX,MAAQA,EACdmX,EAAMpP,aAAeA,EACrBoP,EAAMojB,qBAAuBA,CAAoB,KCExCE,GAAsBH,GAAa9f,QACnCkgB,GAAiBJ,GAAa5f,QEP9BigB,IAAgB,SAAoB,CAC7CzX,SAAW0X,IAAU,EAAAxxB,EAAA,IAAewxB,EAAMp5B,OCDxCq5B,IAAc,SAAY,CAC5BzgB,KAAM,SACNC,aAAcsgB,GAAcvX,kBAC5B9I,SAAU,CACNwgB,UAAWH,GAAcrX,OACzByX,SAAUJ,GAAcK,OACxBC,YAAaN,GAAcO,UAC3BC,YAAaR,GAAcS,UAC3BC,aAAcV,GAAcW,cAGvBC,GAAqBV,GAAYrgB,QACjCghB,GAAgBX,GAAYngB,QCflC,SAAS+gB,GAAS9uB,GACrB,MAAM,QAAE5O,GAAY4O,EACpB,OAAO5O,EAAQsB,cAAcq8B,SACjC,CCFA,MCGMC,IAAY,SAAY,CAC1BvhB,KAAM,OACNC,aCL4B,CAAEuhB,UAAM54B,GDMpCsX,SDHwB,CACxBuhB,QAJY,CAAC1kB,EAAOC,KACpBD,EAAMykB,KAAOxkB,EAAOvK,OAAO,KCOlBivB,GAAmBH,GAAUnhB,QAC7BuhB,GAAcJ,GAAUjhB,Q,oIEkErC,MAAMshB,GAA6BC,IAC/B,IAAI74B,EACJ,OAAO,OAAmG,QAA1FA,EAAK64B,aAA+C,EAASA,EAAWC,oBAAiC,IAAP94B,OAAgB,EAASA,EAAG+4B,eAAiB,IAC1Jn/B,KAAKm/B,GAAiBA,EAAa3xB,SACnClG,OAAO,OACPtH,IAAI,OAAiC,EAavC,SAASo/B,GAAyB/e,EAAkB4e,GACvD,OAAK5e,GAAqB4e,GA5BoBI,EAgCLhf,EAhC4Bif,EAgBlE,SAAgDL,GACnD,MAAMM,EAbH,SAAsCN,GACzC,IAAI74B,EAEJ,QADsH,QAA1FA,EAAK64B,aAA+C,EAASA,EAAWC,oBAAiC,IAAP94B,OAAgB,EAASA,EAAG+4B,eAAiB,IAClJn/B,KAAKw/B,GAAMA,EAAEhyB,SAAQxN,IAAI,MACtD,CASsCy/B,CAA6BR,GAC/D,MAAqC,UAAjCA,EAAWC,aAAav4B,KAKjB,CADwBq4B,GAA0BC,IACC,KAAKM,IAE5DA,CACX,CAKwCG,CAAuCT,GA9BpEI,EAAsB/3B,QAAQq4B,IAAM,SAAyBA,IAChEL,EAA4BjP,SAASuP,GAA8BD,OA2B5D,GA7BR,IAA2CN,EAAuBC,CAiCzE,CACO,SAASM,GAA8BC,GAC1C,MAAM,OAAEC,GAAWD,EACnB,IAAI,QAAaC,GACb,OAAOA,EAAOnlB,gBAElB,IAAI,SAAmBmlB,GACnB,OAAOC,GAAwBD,EAAOE,SAE1C,IAAI,SAAqBF,GACrB,OAAOC,GAAwBD,EAAOG,WAE1C,MAAM,IAAIz/B,MAAM,kDACpB,CACO,SAASu/B,GAAwBv7B,GACpC,IAAI,QAAaA,GACb,OAAOA,EAAImW,gBAEf,MAAM,IAAIna,MAAM,gDACpB,CACO,SAAS0/B,GAAkB1f,EAAO2f,GACrC,QAAI,SAAyB3f,IAGtB2f,EAAiBpM,MAAMqM,KACtB,SAAyBA,IAGtB,KAAQ5f,EAAO4f,IAE9B,CACO,SAASC,GAA8BC,EAAyB3lB,GACnE,IAAIvU,EAAIswB,EAAIK,EACZ,MACMwJ,GAD2D,QAA3Cn6B,EAAKk6B,EAAwBv9B,gBAA6B,IAAPqD,EAAgBA,EAAK,IACnDoB,MAAMV,GAASA,EAAKk5B,QAAQQ,kBAAkB7lB,kBAAoBA,IAC7G,GAAI4lB,EACA,OAAOA,EAAsB39B,WAEjC,MACM69B,GAD+D,QAA7C/J,EAAK4J,EAAwB19B,kBAA+B,IAAP8zB,EAAgBA,EAAK,IACnDlvB,MAAMk5B,GAAaA,EAAST,UAAUU,gBAAgBhmB,kBAAoBA,IACzH,OAAmJ,QAA3Ioc,EAAK0J,aAAyE,EAASA,EAAwBG,8BAA2C,IAAP7J,EAAgBA,EAAK,EACpL,CC3IA,MAuLa8J,GAAa,CACtBC,wBAxL6B3mB,IAC7BA,EAAM4mB,oBAAoBC,MAAO,CAAI,EAwLrCC,yBAtL8B9mB,IAC9BA,EAAM4mB,oBAAoBC,MAAO,CAAK,EAsLtCE,wCApL4C,CAAC/mB,EAAOC,KACpDD,EAAM4mB,oBAAoBI,qBAAuB/mB,EAAOvK,OAAO,EAoL/DuxB,0CAlL+CjnB,IAC/CA,EAAM4mB,oBAAoBI,0BAAuBn7B,CAAS,EAkL1Dq7B,kCAhLuClnB,IACvCA,EAAMmnB,8BAA8BN,MAAO,CAAI,EAgL/CO,mCA9KwCpnB,IACxCA,EAAMmnB,8BAA8BN,MAAO,CAAK,EA8KhDQ,iBA5KsBrnB,IACtBA,EAAMsnB,aAAaT,MAAO,CAAI,EA4K9BU,kBA1KuBvnB,IACvBA,EAAMsnB,aAAaT,MAAO,CAAK,EA0K/BW,qBAtJyB,CAACxnB,EAAOC,KACjCD,EAAMynB,UAAUC,SAAWznB,EAAOvK,OAAO,EAsJzCiyB,oBAjJyB3nB,IACzBA,EAAM4nB,UAAUC,qBAAkBh8B,CAAS,EAiJ3Ci8B,mBArJuB,CAAC9nB,EAAOC,KAC/BD,EAAM4nB,UAAUC,gBAAkB5nB,EAAOvK,OAAO,EAqJhDqyB,kBA1IsB,CAAC/nB,EAAOC,KAC9BD,EAAM4nB,UAAUI,qBAAuB/nB,EAAOvK,OAAO,EA0IrDuyB,gBA5KqBjoB,IACrBA,EAAMkoB,YAAYrB,MAAO,CAAI,EA4K7BsB,iBA1KsBnoB,IACtBA,EAAMkoB,YAAYrB,MAAO,CAAK,EA0K9BuB,iBAxKsBpoB,IACtBA,EAAMqoB,aAAaxB,MAAO,CAAI,EAwK9ByB,kBAtKuBtoB,IACvBA,EAAMqoB,aAAaxB,MAAO,CAAK,EAsK/B0B,oBApKwB,CAACvoB,EAAOC,KAChCD,EAAMwoB,gBAAgBC,kBAAoBxoB,EAAOvK,OAAO,EAoKxDgzB,qBAlK0B1oB,IAC1BA,EAAMwoB,gBAAgBC,uBAAoB58B,CAAS,EAkKnD88B,6BA9IiC,CAAC3oB,EAAOC,KACzCD,EAAM4oB,WAAWC,gBAAkB5oB,EAAOvK,OAAO,EA8IjDozB,aA5IiB,CAAC9oB,EAAOC,KACzBD,EAAM+oB,kBAAoB9oB,EAAOvK,OAAO,EA4IxCszB,qBA1I0BhpB,IAC1BA,EAAM+oB,uBAAoBl9B,CAAS,EA0InCo9B,4BAxIgC,CAACjpB,EAAOC,KACxCD,EAAMkpB,yBAA2BjpB,EAAOvK,OAAO,EAwI/CyzB,+BAtImC,CAACnpB,EAAOC,KAC3CD,EAAMopB,4BAA8BnpB,EAAOvK,OAAO,EAsIlD2zB,yBApI8BrpB,IAC9BA,EAAMspB,gCAAkC,IAAI7a,IAAM,EAoIlD8a,sCAlI0C,CAACvpB,EAAOC,KAClDD,EAAMwpB,6BAA6Bn+B,KAAK4U,EAAOvK,QAAQ,EAkIvD+zB,sCAhI0C,CAACzpB,EAAOC,KAClDD,EAAMwpB,6BAA+BxpB,EAAMwpB,6BAA6Br8B,QAAQR,KAAU,QAAgBA,EAAMsT,EAAOvK,UAAS,EAgIhIg0B,gCA9HoC,CAAC1pB,EAAOC,KAC5CD,EAAM2pB,6BAA+B1pB,EAAOvK,OAAO,EA8HnDk0B,kBA5HsB,CAAC5pB,EAAOC,KAC9BD,EAAM6pB,oBAAsB5pB,EAAOvK,OAAO,EA4H1Co0B,0BA1H+B9pB,IAC/BA,EAAM6pB,yBAAsBh+B,CAAS,EA0HrCk+B,sBAxH0B,CAAC/pB,EAAOC,KAClCD,EAAMgqB,mBAAqB/pB,EAAOvK,OAAO,EAwHzCu0B,wBAtH6BjqB,IAC7BA,EAAMgqB,wBAAqBn+B,CAAS,EAsHpCq+B,yBApK8BlqB,IAC9BA,EAAMmqB,qBAAqBtD,MAAO,CAAI,EAoKtCuD,0BAlK+BpqB,IAC/BA,EAAMmqB,qBAAqBtD,MAAO,CAAK,EAkKvCwD,4BAtHiCrqB,IACjCA,EAAMsqB,wBAAwBC,uBAAyB,EAAE,EAsHzDC,8CApHmDxqB,IACnDA,EAAMsqB,wBAAwBG,sCAAwC,EAAE,EAoHxEC,sDAlH2D1qB,IAC3DA,EAAMsqB,wBAAwBG,sCAC1BzqB,EAAMsqB,wBAAwBG,sCAAsC5kC,KAAK8G,GAC9DnG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEg+B,aAAa,KAC/D,EA+GNC,0BA7G8B,CAAC5qB,EAAOC,KACtCA,EAAOvK,QAAQlI,SAASq9B,IACf7qB,EAAMsqB,wBAAwBC,uBAAuB3Q,MAAMkR,IAAa,QAAgBA,EAAUD,MACnG7qB,EAAMsqB,wBAAwBC,uBAAuBl/B,KAAKw/B,EAC9D,GACF,EAyGFE,yCAvG6C,CAAC/qB,EAAOC,KACrDA,EAAOvK,QAAQlI,SAASb,IACpB,MAAMq+B,EAAgBhrB,EAAMsqB,wBAAwBG,sCAAsC9oB,WAAWxT,GAAMA,EAAE0E,YAAa,QAASlG,EAAKX,UAClIi/B,EAAc,CAChBC,oCAAqCv+B,EAAKw+B,cAActlC,IAAI4/B,IAC5D5yB,UAAU,QAASlG,EAAKX,QACxB+Z,WAAW,QAAUpZ,EAAKX,QAC1Bo/B,WAAW,QAAUz+B,EAAKX,QAC1B2+B,aAAa,GAEbK,GAAiB,EACjBhrB,EAAMsqB,wBAAwBG,sCAAsCO,GAAiBC,EAGrFjrB,EAAMsqB,wBAAwBG,sCAAsCp/B,KAAK4/B,EAC7E,GACF,EAwFFI,6BA9EiC,CAACrrB,EAAOC,KACzCD,EAAMsqB,wBAAwBC,uBAC1BvqB,EAAMsqB,wBAAwBC,uBAAuBp9B,QAAQ29B,IAAc7qB,EAAOvK,QAAQkkB,MAAM0R,IAAa,QAAgBA,EAAUR,MAAW,EA6EtJS,0CAvF8C,CAACvrB,EAAOC,KACtDA,EAAOvK,QAAQlI,SAASxB,IACpB,MAAMg/B,EAAgBhrB,EAAMsqB,wBAAwBG,sCAAsC9oB,WAAWxT,GAAMA,EAAE0E,YAAa,QAAS7G,KAC/Hg/B,GAAiB,GACjBhrB,EAAMsqB,wBAAwBG,sCAAsC5oB,OAAOmpB,EAAe,EAC9F,GACF,EAkFFQ,wBA5E4B,CAACxrB,EAAOC,KACpCD,EAAMyrB,qBAAuBxrB,EAAOvK,OAAO,EA4E3Cg2B,0BA1E+B1rB,IAC/BA,EAAMyrB,0BAAuB5/B,CAAS,EA0EtC8/B,wBAxE4B,CAAC3rB,EAAOC,KACpCD,EAAM4rB,qBAAuB3rB,EAAOvK,QACpCsK,EAAMgqB,mBAAqB/pB,EAAOvK,QAAQiQ,YAAY,EAuEtDkmB,0BArE+B7rB,IAC/BA,EAAM4rB,0BAAuB//B,EAC7BmU,EAAMgqB,wBAAqBn+B,CAAS,EAoEpCigC,qBA/DyB,CAAC9rB,EAAOC,KACjC,MAAM,QAAEoN,EAAO,KAAE0e,GAAS9rB,EAAOvK,QACjCq2B,EAAKv+B,SAASnD,IACV,IAAKA,EACD,OAEJ,MAAM2hC,GAAQ,EAAA/5B,EAAA,IAAe5H,IACZ2V,EAAMuf,eAAeyM,GAAShsB,EAAMuf,eAAeyM,IAAU,CAC1EC,YAAa5e,IAET4e,YAAc5e,CAAO,GAC/B,EAqDF6e,kBAnEsB,CAAClsB,EAAOC,KAC9BD,EAAMuf,eAAiBtf,EAAOvK,OAAO,EAmErCy2B,sBApD2BnsB,IAC3BA,EAAMuf,eAAiB/4B,OAAOD,KAAKyZ,EAAMuf,gBAAgBpvB,QAAO,CAACi8B,EAAMt+B,IAC5DtH,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG29B,GAAO,CAAE,CAACt+B,GAAMtH,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,EAAMuf,eAAezxB,IAAO,CAAEm+B,aAAa,OACnI,CAAC,EAAE,GCnLJI,IAAU,SAAY,CACxBppB,KAAM,UACNC,aCN0B,CAC1BikB,8BAA+B,CAC3BN,MAAM,GAEVD,oBAAqB,CACjBC,MAAM,EACNG,0BAAsBn7B,GAE1By7B,aAAc,CACVT,MAAM,GAEVqB,YAAa,CACTrB,MAAM,GAEVwB,aAAc,CACVxB,MAAM,GAEV2B,gBAAiB,CACbC,uBAAmB58B,GAEvBs+B,qBAAsB,CAClBtD,MAAM,GAEVY,UAAW,CACPC,UAAU,GAEdE,UAAW,CACPI,0BAAsBn8B,EACtBg8B,qBAAiBh8B,GAErB+8B,WAAY,CACRC,gBAAiB,CAAC,GAEtBE,uBAAmBl9B,EACnBq9B,0BAA0B,EAC1BE,6BAA6B,EAC7BE,+BAAgC,EAChCE,6BAA8B,GAC9BG,8BAA8B,EAC9BE,yBAAqBh+B,EACrBm+B,wBAAoBn+B,EACpBy+B,wBAAyB,CACrBC,uBAAwB,GACxBE,sCAAuC,IAE3CgB,0BAAsB5/B,EACtB+/B,0BAAsB//B,EACtB0zB,eAAgB,CAAC,GDxCjBpc,SAAUujB,KAED4F,GAAiBD,GAAQhpB,QAMzBkpB,GAAYF,GAAQ9oB,QEX3BipB,IAAkB,SAAY,CAChCvpB,KAAM,kBACNC,aCNkC,CAClCupB,WAAY,QDMZtpB,SEE8B,CAC9BupB,cAVkB,CAAC1sB,EAAOC,KAC1BD,EAAMysB,WAAaxsB,EAAOvK,OAAO,EAUjCi3B,kBARuB3sB,IACvBA,EAAMysB,WAAa,MAAM,EAQzBG,kBANuB5sB,IACvBA,EAAMysB,WAAa,MAAM,KFEhBI,GAAyBL,GAAgBnpB,QAMzCypB,GAAoBN,GAAgBjpB,QGf1C,SAASwpB,GAAkBv3B,GAC9B,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAaikC,eACrD,CCAO,MAAMC,IAAgC,SAAoB,CAC7DlhB,SAAWjgB,IAAc,EAAAmG,EAAA,IAAenG,EAAUzB,OCDhD6iC,IAAwB,SAAY,CACtCjqB,KAAM,mBACNC,aAAc+pB,GAA8BhhB,kBAC5C9I,SAAU,CACNgqB,oBAAqBF,GAA8B9gB,OACnDihB,mBAAoBH,GAA8B1gB,aAG7C8gB,GAA+BH,GAAsB7pB,QACrDiqB,GAA0BJ,GAAsB3pB,QCRvDgqB,IAA2B,SAAY,CACzCtqB,KAAM,sBACNC,aCL2C,CAAEsqB,yBAAqB3hC,GDMlEsX,SEHuC,CACvCsqB,uBAJ2B,CAACztB,EAAOC,KACnCD,EAAMwtB,oBAAsBvtB,EAAOvK,OAAO,KFOjCg4B,GAAkCH,GAAyBlqB,QAC3DsqB,GAA6BJ,GAAyBhqB,Q,gGGDnE,MAAMqqB,GAAuB,aAOtB,SAASC,GAA2C5mC,GACvD,MAAMmmB,EAaV,SAAwBjgB,GACpB,OAAQA,GAAU3G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtB,GAAS,CAAEX,KAAM,WACvE,CAfoBshC,CAAe7mC,EAAOmmB,SAChCE,EAeV,SAA6BngB,GACzB,OAAQA,GAAU3G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtB,GAAS,CAAE+B,KAAM,KAAO,KAAW,KAAU,IAAIuf,KAAQ,IAAKmf,IAAuBx+B,GAAI,KAAO,KAAW,IAAIqf,MAASmf,IAAuBphC,KAAM,gBAC3M,CAjByBuhC,CAAoB9mC,EAAOqmB,cAC1CK,EAiBV,SAA6BxgB,GACzB,OAAQA,GAAU,CACd+B,UAAMrD,EAENmF,YAAa7D,EAAO6rB,uBAAuB,GAC3CxY,gBAAiBrT,EAAOqT,gBACxByC,KAAM9V,EAAO8V,KACb7T,QAAIvD,EACJW,KAAM,eACN6gB,QAASlgB,EAAOkgB,QAExB,CA5ByB2gB,CAAoB/mC,EAAO0mB,cAC1CD,EA6BC3e,OADqBA,EA5BkB9H,EAAOoyB,sBA6BL,EAAStqB,EAAQlJ,KAAK4zB,GAAW,GAAyBjzB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgrB,GAAS,CAAEjtB,KAAM,sBAD/J,IAAgCuC,EA3B5B,MAAM6e,EA8BV,SAAgC7e,GAC5B,OAAQA,GACJ,KAAQA,EAAQlJ,KAAK4zB,GAAW,GAAyBjzB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgrB,GAAS,CAAEjtB,KAAM,uBAAwBitB,GAAWA,EAAOzoB,aAC5J,CAjC2Bi9B,CAAuBhnC,EAAOgyB,iBACrD,OAiCJ,SAA8C3D,GAC1C,MAAM,aAAEhI,EAAY,eAAEI,EAAc,QAAEN,EAAO,aAAEO,EAAY,eAAEC,GAAmB0H,EAChF,OAAO9uB,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAI2e,GAAW,CAAEA,YAAcE,GAAgB,CAAEA,kBAAoB,IAAQI,IAAmB,CAAEA,mBAAqBC,GAAgB,CAAEA,kBAAoB,IAAQC,IAAmB,CAAEA,kBAC5Q,CApCW,CAAqC,CACxCR,UACAE,eACAI,iBACAC,eACAC,kBAER,CA8BA,SAAS,GAAyBuH,GAC9B,OAAO3uB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG0mB,GAAS,CAAEjmB,KAAM,KAAI,CAACimB,EAAOjmB,KAAMimB,EAAO/lB,KAAMA,GAAI,KAAI,CAAC+lB,EAAOjmB,KAAMimB,EAAO/lB,MACxH,C,yBCzDA,MACM8+B,GAAoB,CACtB1tB,gBAF8B,sBAG9ByC,KAAM,GACNoK,SAAS,GAqEN,SAAS8gB,GAAyB7Y,GACrC,MAAM2D,EAAkB,KAAQ,IAAO3D,EAAkB1H,iBAGzD,OAAO,KAAQ,CACX0H,EAAkBlI,WACdkI,EAAkB5H,gBAAkB,MACrCuL,EACH3D,EAAkBhI,aAClBgI,EAAkB3H,cAE1B,CACA,SAASygB,GAAkChU,EAAS3Z,GAChD,OAAQA,EAAWA,WAAWjU,MAC1B,IAAK,WACD,OAAO,GAA0B4tB,EAAQ9M,cAC7C,IAAK,WACD,OAAO,GAA0B8M,EAAQzM,cAC7C,QACI,MAAM,IAAItnB,MAAM,gCAE5B,CACA,SAASgoC,GAA+BjU,EAAS3Z,GAC7C,MAAmC,aAA/BA,EAAWA,WAAWjU,KAEf,CAAEmoB,iBADgBnuB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2rB,EAAQ9M,cAAe,CAAEpe,KAAMuR,EAAWA,WAAWvR,KAAKo/B,WAAYl/B,GAAIqR,EAAWA,WAAWrR,GAAGk/B,WAAY9hC,KAAM,iBACnJooB,sBAAsB,GAI1C,CAAED,iBADgBnuB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2rB,EAAQzM,cAAe,CAAEze,KAAMq/B,OAAOC,SAAS/tB,EAAWA,WAAWvR,KAAKo/B,WAAY,IAAKl/B,GAAIm/B,OAAOC,SAAS/tB,EAAWA,WAAWrR,GAAGk/B,WAAY,IAAKt9B,YAAayP,EAAWA,WAAWzP,YAAaxE,KAAM,iBAC7OooB,sBAAsB,EAEzD,CACA,SAAS,GAA0BO,GAC/B,SAAUA,aAAuC,EAASA,EAAO9H,QACrE,CAIO,SAASohB,GAA4BhuB,EAAY6U,GACpD,OAAO6Y,GAAyB7Y,GAAmBjoB,KAAKqhC,GAAkBjuB,GAC9E,CAMA,MAAMiuB,GAAqBjuB,GAAgBtT,IACvC,IAAIlB,EAAIswB,EACR,IAAKpvB,EACD,OAAO,EAEX,MAAM0b,EAAOpI,EAAWA,WACxB,OAAIuU,GAA2B7nB,GACN,aAAd0b,EAAKrc,MAAuBW,EAAO+B,OAAS2Z,EAAK3Z,MAAQ/B,EAAOiC,KAAOyZ,EAAKzZ,KAEnF6lB,GAA2B9nB,IACL,aAAd0b,EAAKrc,WACOX,IAAhBsB,EAAO+B,MACP/B,EAAO+B,KAAKo/B,cAAqC,QAApBriC,EAAK4c,EAAK3Z,YAAyB,IAAPjD,OAAgB,EAASA,EAAGqiC,kBACvEziC,IAAdsB,EAAOiC,IACPjC,EAAOiC,GAAGk/B,cAAmC,QAAlB/R,EAAK1T,EAAKzZ,UAAuB,IAAPmtB,OAAgB,EAASA,EAAG+R,aACjFnhC,EAAO6D,cAAgB6X,EAAK7X,WAExB,EAOhB,SAAS29B,GAAmCluB,GACxC,IAAKA,EAED,MAAO,CAAEkU,iBADgBnuB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGy/B,IAAoB,CAAE1hC,KAAM,YAC1DooB,sBAAsB,GAErD,MAAM,KAAEpoB,EAAI,KAAE0C,EAAI,GAAEE,EAAE,YAAE4B,GAAgByP,EAAWA,WACnD,MAAa,aAATjU,EAEO,CAAEmoB,iBADgBnuB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGy/B,IAAoB,CAAEh/B,KAAMA,EAAKo/B,WAAYl/B,GAAIA,EAAGk/B,WAAY9hC,KAAM,mBACpGooB,sBAAsB,GAI1C,CAAED,iBADgBnuB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGy/B,IAAoB,CAAEh/B,KAAMq/B,OAAOC,SAASt/B,EAAKo/B,WAAY,IAAKl/B,GAAIm/B,OAAOC,SAASp/B,EAAGk/B,WAAY,IAAKt9B,cAAaxE,KAAM,mBAC3JooB,sBAAsB,EAEzD,CCvHO,SAASga,GAA2BxT,EAM3CyT,GAAwB,GACpB,MAAMC,EAdV,SAA8B1T,EAAkByT,GAC5C,MAAME,EApBV,SAAoC3T,EAAkByT,GAClD,MAAQ9V,eAAgBiW,GAAsB5T,EAExC6T,EAAmBd,GADCN,GAA2CzS,IAErE,GAAIyT,EAAuB,CACvB,MAAMK,EAAkBD,EAAiB5hC,MAAM8nB,GAAWA,EAAO3U,kBAAoBwuB,IACrF,GAAIE,GAEqCA,EAAgB7hB,UAChDS,GAA0BohB,IACvBlhB,GAA2BkhB,IAC3BhhB,GAA2BghB,IAE/B,OAAOA,CAGnB,CACA,OAAOD,EAAiB5hC,MAAM8nB,GAAWA,EAAO9H,SACpD,CAEgC8hB,CAA2B/T,EAAkByT,GACzE,GAAKE,EAGL,OCpCG,SAAmC5Z,GACtC,IAAIlpB,EACJ,IAAI6hB,GAA0BqH,GAA9B,CAGA,GAAIH,GAA2BG,GAC3B,MAAO,CACH1U,WAAY,CACRjU,KAAM,WACNwE,YAAa,gBACb9B,KAAMimB,EAAOjmB,KACbE,GAAI+lB,EAAO/lB,KAIlB,GAAI6lB,GAA2BE,GAChC,MAAO,CACH1U,WAAY,CACRjU,KAAM,WACNwE,YAA2C,QAA7B/E,EAAKkpB,EAAOnkB,mBAAgC,IAAP/E,EAAgBA,EAAK,gBACxEiD,KAAMimB,EAAOjmB,KACbE,GAAI+lB,EAAO/lB,KAIvB,MAAM,IAAI,KAAe,uEArBzB,CAsBJ,CDUWggC,CAA0BL,EACrC,CAQ8BM,CAAqBjU,EAAkByT,GACjE,MAAO,CACHx+B,MAAO,gBACP+X,YAAa,GACbrZ,QAAS+/B,EAAoB,CAACA,GAAqB,GAE3D,CEtDO,MAAMQ,GAA2B,CACpCj/B,MAAO,GACP+X,YAAa,GACbmnB,YAAa,WAEJC,GAAmB,CAC5BC,WAAYH,GACZtwB,wBAAoBnT,GCaX6jC,GAAe,CACxBC,QAnBY,CAAC3vB,EAAOC,KACpB,MAAM,UAAEnU,GAAcmU,EAAOvK,QAC7BsK,EAAMhB,mBAAqBlT,EAC3BkU,EAAMyvB,WAAa3jC,EACb,CACEuE,MAAOvE,EAAUuE,MACjB+X,YAAatc,EAAUsc,YACvBwnB,KAAM9jC,EAAU8jC,KAChBL,YAAazjC,EAAUyjC,YACvBM,qBAAsB/jC,EAAU+jC,qBAChCC,SAAUhkC,EAAUgkC,UAEtBtpC,OAAOiI,OAAO,CAAC,EAAG6gC,GAAyB,EAQjDS,kBANsB,CAAC/vB,EAAOC,MAC9B,QAAUD,EAAMyvB,YAChBzvB,EAAMyvB,WAAWp/B,MAAQ4P,EAAOvK,OAAO,GCfrCs6B,IAAY,SAAY,CAC1B/sB,KAAM,OACNC,aAAcssB,GACdrsB,SAAUusB,KAEDO,GAAmBD,GAAU3sB,QAC7B6sB,GAAcF,GAAUzsB,QCwC9B,SAAS4sB,GAA+BrkC,GAC3C,MAAM,cAAEskC,GAAkBtkC,EAC1B,GAAKskC,KAAiB,QAAoBA,IAAmBA,EAAc/lC,IAG3E,MAAO,CACHA,IAAK+lC,EAAc/lC,IACnB0C,IAAKqjC,EAAcrjC,IACnB3C,WAAYgmC,EAAchmC,WAElC,C,uHC1DO,MAAMimC,GAAsC,G,yECK5C,MAAMC,GACT3pC,YAAY4pC,EAAe5jC,EAAMgM,GAC7B7R,KAAKypC,cAAgBA,EACrBzpC,KAAK6F,KAAOA,EACZ7F,KAAK6R,UAAYA,CACrB,CACA63B,WAAWD,EAAe5jC,EAAMpC,GAC5B,OAAO,IAAI+lC,GAA0BC,EAAe5jC,EAAMpC,EAC9D,CACAkmC,MACI,OAAO3pC,KAAK6F,IAChB,CACAuL,UACI,OAAOpR,KAAKypC,aAChB,CACAhmC,QACI,OAAOzD,KAAK6R,SAChB,CACA+3B,QAAQnmC,GACJ,OAAOzD,KAAKyD,UAAYA,CAC5B,CACAomC,UACI,OAAO7pC,KAAK4pC,QAAQ,EACxB,CACAE,SACI,OAAO9pC,KAAK4pC,QAAQ5pC,KAAKypC,cAAcnkC,QAAQykC,QAAU,EAC7D,CACA7kC,SACI,OAAOlF,KAAK6F,KAAKX,MACrB,CACA3B,MACI,IAAI,QAASvD,KAAK6F,KAAKX,QACnB,OAAOlF,KAAK6F,KAAKX,MAGzB,CACA8kC,aAAa9kC,GACT,OAAO,KAAQlF,KAAKkF,SAAUA,EAClC,CACA+kC,SAAS/kC,GACL,OAAOlF,KAAKkF,WAAaA,CAC7B,CACAglC,UACI,OAAO,KAAMlqC,KAAKkF,SACtB,CACAG,OACI,OAAOrF,KAAK6F,KAAKR,IACrB,CACA8kC,cAAcC,GACV,OAAOpqC,KAAKqF,OAAO+kC,EACvB,CACAC,iBAAiBD,GACb,OAAQ,KAAMpqC,KAAKmqC,cAAcC,GACrC,CACAE,QAAQz0B,GACJ,OAAOA,EAAK7V,KAAK2pC,MACrB,CACAY,KAAK10B,GACD,OAAOA,EAAK7V,KAChB,CACAwqC,eACI,OAAO,QAASxqC,KAAKkF,SACzB,CACAulC,yBACI,OAAO,QAAmBzqC,KAAKkF,SACnC,CACAwlC,kBACI,OAAO,QAAY1qC,KAAKkF,SAC5B,CACAylC,4BACI,OAAO,QAAsB3qC,KAAKkF,SACtC,CACA0lC,sBACI,OAAO,QAAgB5qC,KAAKkF,SAChC,CACA2lC,gCACI,OAAO,QAA0B7qC,KAAKkF,SAC1C,CACA4lC,eACI,OAAO,SAAkB9qC,KAAKkF,SAClC,CACA6lC,eACI,QAAQ,SAAsB/qC,KAAKkF,SACvC,CACA8lC,oBAAoBznC,GAChB,IAAI4B,EACJ,QAAInF,KAAKwqC,iBACE,QAA4C,QAA3BrlC,EAAKnF,KAAK6F,KAAKX,cAA2B,IAAPC,OAAgB,EAASA,EAAG5B,IAAKA,EAGpG,CACA0nC,2BAA2B1nC,GACvB,IAAI4B,EACJ,SAAInF,KAAK4qC,wBAAyB5qC,KAAK6qC,mCAC5B,QAA4C,QAA3B1lC,EAAKnF,KAAK6F,KAAKX,cAA2B,IAAPC,OAAgB,EAASA,EAAG6c,QAASze,EAGxG,CACA2nC,uBAAuB3nC,GACnB,IAAI4B,EACJ,SAAInF,KAAK0qC,oBAAqB1qC,KAAK2qC,+BACxB,QAA4C,QAA3BxlC,EAAKnF,KAAK6F,KAAKX,cAA2B,IAAPC,OAAgB,EAASA,EAAG5B,IAAKA,EAGpG,ECxGG,MAAM4nC,GACTtrC,YAAYurC,GACRprC,KAAKorC,YAAcA,CACvB,CACA1B,WAAWD,EAAenkC,GACtB,MAAM8lC,EAAc9lC,EAAMvG,KAAI,CAACssC,EAAQ5nC,IAAU+lC,GAAA,IAA8BC,EAAe4B,EAAQ5nC,KACtG,OAAO,IAAI0nC,GAA2BC,EAC1C,CACAzB,MACI,OAAO3pC,KAAKorC,YAAYrsC,KAAK8G,GAASA,EAAK8jC,OAC/C,CACA9jC,KAAKpC,GACD,OAAOzD,KAAKorC,YAAY3nC,EAC5B,CACAkH,MACI,OAAO3K,KAAKorC,WAChB,CACAE,WAAWlB,GACP,MAAMmB,EAAe,GACrB,IAAIC,EAAkB,EAClBC,EAAa,GAejB,OAdAzrC,KAAKorC,YAAY1kC,SAASglC,IACtB,MAAMC,EAAWD,EAAWvB,cAAcC,IAC1C,QAAUuB,EAAU,iBAAiBvB,4BACjCoB,EAAkBG,EAASv/B,UAAYm9B,KACvCgC,EAAahnC,KAAKknC,GAClBA,EAAa,GACbD,EAAkB,GAEtBC,EAAWlnC,KAAKmnC,GAChBF,GAAoCG,EAASv/B,SAAS,IAEtDq/B,EAAWhhC,OAAS,GACpB8gC,EAAahnC,KAAKknC,GAEfF,CACX,CACAK,QAAQC,GACJ,OAAO,KAAQ7rC,KAAKorC,YAAaS,EACrC,CACA9B,QACI,OAAO/pC,KAAKorC,YAAY3gC,MAC5B,CACA1L,IAAI8sC,GACA,OAAO7rC,KAAKorC,YAAYrsC,IAAI8sC,EAChC,CACAxiC,OAAOwiC,EAAUC,GACb,OAAO9rC,KAAKorC,YAAY/hC,OAAOwiC,EAAUC,EAC7C,CACAzV,MAAMxgB,GACF,OAAO7V,KAAKorC,YAAY/U,MAAMxgB,EAClC,CACAid,KAAKjd,GACD,OAAO7V,KAAKorC,YAAYtY,KAAKjd,EACjC,CACAtP,KAAKsP,GACD,OAAO7V,KAAKorC,YAAY7kC,KAAKsP,EACjC,CACAxP,OAAOwP,GACH,OAAO7V,KAAKorC,YAAY/kC,OAAOwP,EACnC,EC3DG,MAAMk2B,GACTlsC,YAAYmsC,EAAc56B,EAASyN,GAC/B7e,KAAKgsC,aAAeA,EACpBhsC,KAAKoR,QAAUA,EACfpR,KAAK6e,aAAeA,CACxB,CACA6qB,WAAWsC,EAAc56B,EAAS3N,GAC9B,OAAO,IAAIsoC,GAA6BC,EAAc56B,EAAS3N,EACnE,CACAkmC,MACI,OAAO3pC,KAAKoR,OAChB,CACA7E,SACI,OAAOvM,KAAKoR,QAAQ7E,MACxB,CACAhD,QACI,IAAIpE,EACJ,OAAgC,QAAxBA,EAAKnF,KAAKuM,gBAA6B,IAAPpH,OAAgB,EAASA,EAAGoE,KACxE,CACA+X,cACI,IAAInc,EACJ,OAAgC,QAAxBA,EAAKnF,KAAKuM,gBAA6B,IAAPpH,OAAgB,EAASA,EAAGmc,WACxE,CACA7d,QACI,OAAOzD,KAAK6e,YAChB,CACAgrB,UACI,OAAO7pC,KAAK4pC,QAAQ,EACxB,CACAE,SACI,OAAO9pC,KAAK4pC,QAAQ5pC,KAAKgsC,aAAaltB,WAAWirB,QAAU,EAC/D,CACAO,QAAQz0B,GACJ,OAAOA,EAAK7V,KAAK2pC,MACrB,CACAY,KAAK10B,GACD,OAAOA,EAAK7V,KAChB,CACA4pC,QAAQnmC,GACJ,OAAOzD,KAAKyD,UAAYA,CAC5B,CACAwoC,aAAa1/B,GACT,OAAO,KAAQvM,KAAKuM,SAAUA,EAClC,CACA2/B,YACI,OAAQ,KAAMlsC,KAAKuM,SACvB,CACA4/B,WACI,OAAQ,KAAMnsC,KAAKuJ,QACvB,CACA6iC,iBACI,OAAQ,KAAMpsC,KAAKshB,cACvB,CACA+qB,YAAY9iC,GACR,OAAO,KAAQvJ,KAAKuJ,QAASA,EACjC,CACA+iC,kBAAkBhrB,GACd,OAAO,KAAQthB,KAAKshB,cAAeA,EACvC,CACA4oB,UACI,OAAgC,IAAzBlqC,KAAKsF,QAAQykC,OACxB,CACAzkC,QACI,OAAO6lC,GAAA,IAA+BnrC,KAAMA,KAAKoR,QAAQ9L,MAC7D,CACAO,KAAKpC,GACD,MAAM4nC,EAASrrC,KAAKoR,QAAQ9L,MAAM7B,GAClC,GAAK4nC,EAGL,OAAO7B,GAAA,IAA8BxpC,KAAMqrC,EAAQ5nC,EACvD,CACAqa,SACI,OAAO9d,KAAKgsC,YAChB,EC5EG,MAAMO,GACT1sC,YAAYmsC,EAAcQ,GACtBxsC,KAAKgsC,aAAeA,EACpBhsC,KAAKwsC,eAAiBA,CAC1B,CACA9C,WAAWsC,EAAcltB,GACrB,MAAM0tB,EAAiB1tB,EAAS/f,KAAI,CAACqS,EAAS3N,IAAUsoC,GAAA,IAAiCC,EAAc56B,EAAS3N,KAChH,OAAO,IAAI8oC,GAA8BP,EAAcQ,EAC3D,CACA7C,MACI,OAAO3pC,KAAKwsC,eAAeztC,KAAK0tC,GAAMA,EAAE9C,OAC5C,CACAh/B,MACI,OAAO3K,KAAKwsC,cAChB,CACAp7B,QAAQ3N,GACJ,OAAOzD,KAAKwsC,eAAe/oC,EAC/B,CACAmoC,QAAQC,GACJ,OAAO,KAAQ7rC,KAAKwsC,eAAgBX,EACxC,CACA9B,QACI,OAAO/pC,KAAKwsC,eAAe/hC,MAC/B,CACA1L,IAAI8sC,GACA,OAAO7rC,KAAKwsC,eAAeztC,IAAI8sC,EACnC,CACAxiC,OAAOwiC,EAAUC,GACb,OAAO9rC,KAAKwsC,eAAenjC,OAAOwiC,EAAUC,EAChD,CACAzV,MAAMxgB,GACF,OAAO7V,KAAKwsC,eAAenW,MAAMxgB,EACrC,CACAid,KAAKjd,GACD,OAAO7V,KAAKwsC,eAAe1Z,KAAKjd,EACpC,CACAtP,KAAKsP,GACD,OAAO7V,KAAKwsC,eAAejmC,KAAKsP,EACpC,CACAxP,OAAOwP,GACH,OAAO7V,KAAKwsC,eAAenmC,OAAOwP,EACtC,ECxCG,MAAM62B,GACT7sC,YAAYie,GACR9d,KAAK8d,OAASA,CAClB,CAKA4rB,WAAW5rB,GAEP,OADA,SAAU,SAAkBA,GAAS,2CAC9B,IAAI4uB,GAAsB5uB,EACrC,CACAgB,WAII,YAH2B/Z,IAAvB/E,KAAK2sC,gBACL3sC,KAAK2sC,cAAgBJ,GAAA,IAAkCvsC,KAAMA,KAAK8d,OAAOgB,WAEtE9e,KAAK2sC,aAChB,CACAv7B,QAAQw7B,GACJ,OAAO5sC,KAAK8e,WAAW1N,QAAQw7B,EACnC,CACAvnC,OACI,OAAOrF,KAAK8d,OAAOzY,IACvB,CACAskC,MACI,OAAO3pC,KAAK8d,MAChB,E,gBC7BG,MAAM+uB,WAA0B,MACnChtC,cACIitC,SAASC,WACT/sC,KAAKgtC,UAAaC,IACdjtC,KAAK6F,KAAOonC,EAAejtC,KAAK6F,MACzB7F,MAEXA,KAAKktC,cAAgB,CAACzuB,EAAM0uB,KACxBntC,KAAKgtC,WAAWrhC,GAAOjM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgE,GAAI,CAAE,CAAC8S,IAAO,SAA6B0uB,EAAuBxhC,EAAE8S,QACpHze,MAEXA,KAAKuJ,MAAS4jC,GAA0BntC,KAAKktC,cAAc,QAASC,GACpEntC,KAAKshB,YAAe6rB,GAA0BntC,KAAKktC,cAAc,cAAeC,GAChFntC,KAAKigB,uBAA0BktB,GAA0BntC,KAAKktC,cAAc,yBAA0BC,GACtGntC,KAAKyiB,YAAe0qB,GAA0BntC,KAAKktC,cAAc,cAAeC,GAChFntC,KAAKuD,IAAO4pC,GAA0BntC,KAAKktC,cAAc,MAAOC,GAChEntC,KAAKd,GAAMiuC,GAA0BntC,KAAKktC,cAAc,aAAcC,GACtEntC,KAAKiG,IAAOknC,GAA0BntC,KAAKktC,cAAc,MAAOC,EACpE,ECfG,MAAMC,WAA6BP,GACtChtC,YAAYgG,EAAMwnC,GACdP,MAAMjnC,EAAMwnC,GACZrtC,KAAK6F,KAAOA,EACZ7F,KAAKqtC,UAAYA,EACjBrtC,KAAKqf,OAAU8tB,GAA0BntC,KAAKktC,cAAc,SAAUC,GACtEntC,KAAKgiB,QAAWmrB,GAA0BntC,KAAKktC,cAAc,UAAWC,GACxEntC,KAAK0hB,WAAcyrB,GAA0BntC,KAAKktC,cAAc,aAAcC,EAClF,CACAzD,WAAW4D,GAEP,OADA,SAAU,QAA0BA,KAAkB,QAAgBA,GAAgB,qEAC/E,IAAIF,GAAqBE,EACpC,CACA5D,cAAc1nB,GACV,MAAMurB,EAAqB,CACvBjsB,YAAa,GACbjC,OAAQ,GACRY,uBAAwB,GACxB1W,MAAO,GACP7D,KAAM,UACNsc,WAEJ,OAAOorB,GAAqBI,IAAID,EACpC,ECtBG,MAAME,WAAyBZ,GAClChtC,YAAYgG,EAAMwnC,GACdP,MAAMjnC,EAAMwnC,GACZrtC,KAAK6F,KAAOA,EACZ7F,KAAKqtC,UAAYA,EAEjBrtC,KAAK0tC,iBAAmB,CAACjvB,EAAM0uB,KAC3BntC,KAAKgtC,WAAWrhC,GAAOjM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgE,GAAI,CAAEkX,IAAKnjB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgE,EAAEkX,KAAM,CAAE,CAACpE,IAAO,SAA6B0uB,EAAuBxhC,EAAEkX,IAAIpE,UACvKze,MAEXA,KAAKqf,OAAU8tB,GAA0BntC,KAAKktC,cAAc,SAAUC,GACtEntC,KAAK++B,QAAWoO,GAA0BntC,KAAK0tC,iBAAiB,SAAUP,GAC1EntC,KAAK6E,eAAkBsoC,GAA0BntC,KAAK0tC,iBAAiB,iBAAkBP,GACzFntC,KAAKgjB,oBAAuBmqB,GAA0BntC,KAAK0tC,iBAAiB,sBAAuBP,EACvG,CACAzD,WAAWiE,GAEP,OADA,SAAU,QAAsBA,KAAc,QAAYA,GAAY,6DAC/D,IAAIF,GAAiBE,EAChC,CACAjE,cAAc3K,GACV,MAAM6O,EAAiB,CACnBtsB,YAAa,GACbjC,OAAQ,GACRY,uBAAwB,GACxB1W,MAAO,GACP7D,KAAM,MACNmd,IAAK,CACDC,OAAQic,EACRl6B,eAAgB,SAGxB,OAAO4oC,GAAiBD,IAAII,EAChC,EChCG,MAAMC,GACThuC,YAAYiuC,EAAYC,EAAel8B,GACnC7R,KAAK8tC,WAAaA,EAClB9tC,KAAK+tC,cAAgBA,EACrB/tC,KAAK6R,UAAYA,CACrB,CAMA63B,WAAWsE,EAAgBn8B,GACvB,IAAI1M,EAIJ,OAHA,SAAU,SAAyE,QAAlDA,EAAK6oC,EAAeC,SAASpoC,KAAKgM,UAA+B,IAAP1M,OAAgB,EAASA,EAAGwkC,OAAQ,+CAA+C93B,KAAam8B,EACtLC,SACApoC,KAAKgM,MACH,IAAIg8B,IAA4Bz8B,GAAY48B,EAAeF,WAAW18B,KAAU,IAAM48B,EAAeC,SAASpoC,KAAKgM,IAAYA,EAC1I,CACAxM,KAAK8nC,GAED,OADAntC,KAAKkuC,SAASroC,GAAUnG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAER,MAAM,SAA6B8nC,EAAuBtnC,EAAKR,UACzHrF,IACX,CACAkF,OAAOioC,GAEH,OADAntC,KAAKkuC,SAASroC,GAAUnG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,QAAQ,SAA6BioC,EAAuBtnC,EAAKX,YAC3HlF,IACX,CACAkuC,QAAQf,GAMJ,OALAntC,KAAK8tC,YAAY18B,IACb,MAAM+8B,EAAe,IAAI/8B,EAAQ9L,OAEjC,OADA6oC,EAAanuC,KAAK6R,YAAa,SAA6Bs7B,EAAuBntC,KAAKouC,SACjF1uC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO6oC,GAAe,IAEtEnuC,IACX,CACAquC,OAAOC,GAEH,OADAA,EAActuC,KAAMA,KAAKiuC,UAClBjuC,IACX,CACAouC,QACI,OAAOpuC,KAAKiuC,SAAStE,KACzB,CACAsE,SACI,OAAOjuC,KAAK+tC,eAChB,CACAQ,iBAAiBvsB,EAASwsB,EAAS,MAE/B,OADAxuC,KAAKkF,OAAOspC,EAAOpB,GAAqBqB,OAAOzsB,IAAUosB,SAClDpuC,IACX,CACA0uC,oBAAoBL,GAChB,MAAMM,EAAU3uC,KAAKiuC,SAAS/oC,SAG9B,OAFA,SAAU,QAA0BypC,KAAY,QAAgBA,GAAU,4CAC1E3uC,KAAKkF,OAAOmpC,EAAOjB,GAAA,IAAyBuB,IAAUP,SAC/CpuC,IACX,CACA4uC,aAAa7P,EAASyP,EAAS,MAE3B,OADAxuC,KAAKkF,OAAOspC,EAAOf,GAAiBgB,OAAO1P,IAAUqP,SAC9CpuC,IACX,CACA6uC,gBAAgBR,GACZ,MAAMM,EAAU3uC,KAAKiuC,SAAS/oC,SAG9B,OAFA,SAAU,QAAsBypC,KAAY,QAAYA,GAAU,4CAClE3uC,KAAKkF,OAAOmpC,EAAOZ,GAAA,IAAqBkB,IAAUP,SAC3CpuC,IACX,EC5DG,MAAM8uC,GACTjvC,YAAYgf,EAAckwB,EAAkBtvB,GACxCzf,KAAK6e,aAAeA,EACpB7e,KAAK+uC,iBAAmBA,EACxB/uC,KAAKyf,UAAYA,EACjBzf,KAAKgvC,iBAAmB,IACbhvC,KAAKivC,aAAa3pC,GAAUA,EAAMe,QAAQR,GAASA,EAAKqkC,aAEvE,CAIAR,WAAWwF,EAAerwB,GACtB,IAAI1Z,EAGJ,OAFA,SAAU,SAA4F,QAAlEA,EAAK+pC,EAAcjB,SAASnvB,WAAW1N,QAAQyN,UAAkC,IAAP1Z,OAAgB,EAASA,EAAGwkC,OAAQ,kDAC3H,IAAImF,GAA8BjwB,GAAc,IAAMqwB,EAAcjB,SAAS78B,QAAQyN,KAAgBf,GAAWoxB,EAAczvB,UAAU3B,IAEnK,CACAvR,OAAO4gC,GACH,OAAOntC,KAAK8tC,YAAY18B,GAAa1R,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE7E,QAAQ,SAA6B4gC,EAAuB/7B,EAAQ7E,WACzJ,CACA4iC,WAAWC,EAAQZ,EAAS,KAAU/qC,EAAQzD,KAAKiuC,SAAS3oC,QAAQykC,SAChE,MAAMsF,EAAY,CACd3pC,KAAM,uBACNL,KAAM,CACF8G,GAAIijC,IASZ,OANApvC,KAAK8tC,YAAY18B,IACb,MAAM+8B,EAAe,IAAI/8B,EAAQ9L,OAEjC,OADA6oC,EAAapzB,OAAOtX,EAAO,EAAG4rC,GACvB3vC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO6oC,GAAe,IAE7EN,GAAA,IAA+B7tC,KAAMyD,GAAO4qC,OAAOG,GAC5CxuC,IACX,CACA4F,QAAQC,EAAMpC,EAAQzD,KAAKiuC,SAAS3oC,QAAQykC,SAMxC,OALA/pC,KAAK8tC,YAAY18B,IACb,MAAM+8B,EAAe,IAAI/8B,EAAQ9L,OAEjC,OADA6oC,EAAapzB,OAAOtX,EAAO,EAAGoC,GACvBnG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO6oC,GAAe,IAEtEnuC,IACX,CACAsvC,WAAW7rC,EAAO4qC,GACd,MAAM3C,EAAa1rC,KAAKiuC,SAAS3oC,QAAQO,KAAKpC,GAG9C,OAFA,QAAUioC,EAAY,0CAA0CjoC,qBAChEoqC,GAAA,IAA+B7tC,KAAMyD,GAAO4qC,OAAOA,GAC5CruC,IACX,CACAuvC,WAAW9rC,GACP,MAAMioC,EAAa1rC,KAAKiuC,SAAS3oC,QAAQO,KAAKpC,GAE9C,OADA,QAAUioC,EAAY,0CAA0CjoC,qBACzDzD,KAAK8tC,YAAY18B,IACpB,MAAM+8B,EAAe,IAAI/8B,EAAQ9L,OAEjC,OADA6oC,EAAapzB,OAAOtX,EAAO,GACpB/D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO6oC,GAAe,GAEjF,CACAqB,SAASjvB,EAAWD,GAChB,MAAMorB,EAAa1rC,KAAKiuC,SAASpoC,KAAK0a,IACtC,QAAUmrB,EAAY,wCAAwCnrB,qBAC9D,MAAMkvB,EAAa1mC,KAAKC,IAAIsX,EAAStgB,KAAKiuC,SAAS3oC,QAAQykC,QAAU,GAGrE,OAFA/pC,KAAKuvC,WAAWhvB,GAChBvgB,KAAKmvC,WAAWzD,EAAWvB,cAAc,OAAQuF,GAAMA,EAAExB,QAAQxC,EAAW/B,QAAQ8F,GAC7EzvC,IACX,CACAivC,YAAYU,EAAW,CAACrqC,GAAUA,EAAMqF,QACpC,MAAMilC,EAAgBD,EAAS3vC,KAAKiuC,SAAS3oC,SAU7C,OATI,KAAQsqC,GACR5vC,KAAK8tC,YAAY18B,IACb,MAAM+8B,EAAe,KAAW/8B,EAAQ9L,MAAOsqC,EAAc7wC,KAAK8wC,GAAMA,EAAElG,SAC1E,OAAOjqC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO6oC,GAAe,IAGxEyB,GACL5vC,KAAKuvC,WAAWK,EAAcnsC,SAE3BzD,IACX,CACA8vC,YAAYzB,EAAQsB,EAAW,CAACrqC,GAAUA,EAAMqF,QAC5C,MAAMolC,EAAgBJ,EAAS3vC,KAAKiuC,SAAS3oC,SAS7C,OARI,KAAQyqC,GACRA,EAAcrpC,SAASb,IACnB7F,KAAKsvC,WAAWzpC,EAAKpC,QAAS4qC,EAAO,IAGpC0B,GACL/vC,KAAKsvC,WAAWS,EAActsC,QAAS4qC,GAEpCruC,IACX,CACA8tC,WAAWX,GAMP,OALAntC,KAAKyf,WAAW3B,IACZ,MAAMkyB,EAAc,IAAIlyB,EAAOgB,UAE/B,OADAkxB,EAAYhwC,KAAK6e,eAAgB,SAA6BsuB,EAAuBntC,KAAKouC,SACnF1uC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUkxB,GAAc,IAEvEhwC,IACX,CACAiuC,SACI,OAAOjuC,KAAK+uC,kBAChB,CACAV,OAAOC,GAEH,OADAA,EAActuC,KAAMA,KAAKiuC,UAClBjuC,IACX,CACAouC,QACI,OAAOpuC,KAAKiuC,SAAStE,KACzB,EC5GG,MAAMsG,GACTpwC,YAAYmsC,EAAckE,GACtBlwC,KAAKgsC,aAAeA,EACpBhsC,KAAKkwC,wBAA0BA,CACnC,CAMAxG,WAAW5rB,GAGP,OAFA,SAAU,SAAkBA,GAAS,2CACN,IAAImyB,GAAuBvD,GAAA,IAA0B5uB,GAAS4uB,GAAA,IAEjG,CAIAhD,sBAKI,OAAOuG,GAAuBzC,IAJV,CAChB9nC,KAAM,mBACNoZ,SAAU,IAGlB,CACAzZ,KAAK8nC,GACD,OAAOntC,KAAKyf,WAAW3B,GAAYpe,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEzY,MAAM,SAA6B8nC,EAAuBntC,KAAKiuC,SAAS5oC,WAC1J,CACA8qC,cAAc3B,EAAS,KAAU/qC,EAAQzD,KAAKiuC,SAASnvB,WAAWirB,SAC9D,MAAMqG,EAAe,CACjB1qC,KAAM,0BACNJ,MAAO,IAQX,OANAtF,KAAKyf,WAAW3B,IACZ,MAAMkyB,EAAc,IAAIlyB,EAAOgB,UAE/B,OADAkxB,EAAYj1B,OAAOtX,EAAO,EAAG2sC,GACtB1wC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUkxB,GAAc,IAE9ElB,GAAA,IAAkC9uC,KAAMyD,GAAO4qC,OAAOG,GAC/CxuC,IACX,CACAkgB,WAAW9O,EAAS3N,EAAQzD,KAAKiuC,SAASnvB,WAAWirB,SAMjD,OALA/pC,KAAKyf,WAAW3B,IACZ,MAAMkyB,EAAc,IAAIlyB,EAAOgB,UAE/B,OADAkxB,EAAYj1B,OAAOtX,EAAO,EAAG2N,GACtB1R,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUkxB,GAAc,IAEvEhwC,IACX,CACAqwC,cAAc5sC,EAAO4qC,GACjB,MAAM5E,EAAgBzpC,KAAKiuC,SAASnvB,WAAW1N,QAAQ3N,GAGvD,OAFA,QAAUgmC,EAAe,gDAAgDhmC,qBACzEqrC,GAAA,IAAkC9uC,KAAMyD,GAAO4qC,OAAOA,GAC/CruC,IACX,CACAogB,cAAc3c,GACV,MAAMgmC,EAAgBzpC,KAAKiuC,SAASnvB,WAAW1N,QAAQ3N,GAEvD,OADA,QAAUgmC,EAAe,gDAAgDhmC,qBAClEzD,KAAKyf,WAAW3B,IACnB,MAAMkyB,EAAc,IAAIlyB,EAAOgB,UAE/B,OADAkxB,EAAYj1B,OAAOtX,EAAO,GACnB/D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUkxB,GAAc,GAElF,CACA3vB,YAAYE,EAAWD,GACnB,IAAInb,EACJ,MAAMiM,EAAiE,QAAtDjM,EAAKnF,KAAKiuC,SAASnvB,WAAW1N,QAAQmP,UAA+B,IAAPpb,OAAgB,EAASA,EAAGwkC,OAC3G,QAAUv4B,EAAS,8CAA8CmP,qBACjE,MAAMkvB,EAAa1mC,KAAKC,IAAIsX,EAAStgB,KAAKiuC,SAASnvB,WAAWirB,QAAU,GAKxE,OAJA/pC,KAAKogB,cAAcG,GACnBvgB,KAAKmwC,eAAeN,GACTA,EAAE/B,WAAW18B,IACrBq+B,GACIzvC,IACX,CACAswC,eAAeX,EAAW,CAAC7wB,GAAaA,EAASnU,QAC7C,MAAM4lC,EAAmBZ,EAAS3vC,KAAKiuC,SAASnvB,YAUhD,OATI,KAAQyxB,GACRvwC,KAAKyf,WAAW3B,IACZ,MAAMkyB,EAAc,KAAWlyB,EAAOgB,SAAUyxB,EAAiBxxC,KAAK8wC,GAAMA,EAAElG,SAC9E,OAAOjqC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUkxB,GAAc,IAGzEO,GACLvwC,KAAKogB,cAAcmwB,EAAiB9sC,SAEjCzD,IACX,CACAwwC,sBACI,OAAOxwC,KAAKswC,gBAAgBxxB,GAAaA,EAASzY,QAAQ+K,GAAYA,EAAQ84B,aAClF,CACAuG,eAAepC,EAAQsB,EAAW,CAAC7wB,GAAaA,EAASnU,QACrD,MAAM+lC,EAAmBf,EAAS3vC,KAAKiuC,SAASnvB,YAShD,OARI,KAAQ4xB,GACRA,EAAiBhqC,SAAS0K,IACtBpR,KAAKqwC,cAAcj/B,EAAQ3N,QAAS4qC,EAAO,IAG1CqC,GACL1wC,KAAKqwC,cAAcK,EAAiBjtC,QAAS4qC,GAE1CruC,IACX,CACAyf,UAAU0tB,GACN,MAAMwD,GAAgB,SAA6BxD,EAAuBntC,KAAKouC,SAE/E,OADApuC,KAAKgsC,aAAehsC,KAAKkwC,wBAAwBS,GAC1C3wC,IACX,CACAiuC,SACI,OAAOjuC,KAAKgsC,YAChB,CACAqC,OAAOC,GAEH,OADAA,EAActuC,KAAMA,KAAKiuC,UAClBjuC,IACX,CACAouC,QACI,OAAOpuC,KAAKgsC,aAAarC,KAC7B,E,wCCjIG,MACMiH,GAAmC,CAC5C1uB,MAAO,CACHlZ,IAAK,EACL6nC,QAAS,GAEb1uB,OAAQ,CACJ0uB,QAAS,EACT7nC,IAAK,EACLsZ,IAAK,KAGAwuB,GAAgC,CACzC5uB,MAAO,CACHlZ,IAAK,EACL6nC,QAAS,GAEb1uB,OAAQ,CACJ0uB,QAAS,GACT7nC,IAAK,GACLsZ,IAAK,KCbN,SAAS,GAAYpgB,EAAU8J,EAAY+kC,GAC9C,MAAmB,QAAf/kC,EAwBR,SAAwB9J,EAAU2gB,GAC9B,OAAK3gB,EAAS8uC,4BAGT,SAAMnuB,IAGJ,SAAuBA,GAAO+tB,GAAmCE,GAF7D,MAHA,KAMf,CA/BeG,CAAe/uC,EAAU6uC,GAE7BG,GAAyBhvC,EAAU6uC,EAC9C,CAIO,SAASI,GAA8BjvC,GAC1C,OAAOgvC,GAAyBhvC,EACpC,CACA,SAASgvC,GAAyBhvC,EAAU8f,GACxC,IAAIC,EAIJ,OAHI,QAAUD,KACVC,GAAW,KAAAmvB,oBAAmBpvB,EAAS9f,IAEtC+f,IACI/f,EAAS8uC,2BAGP,MAFI,MAKnB,CAoBO,SAASK,GAAsCnvC,EAAU8J,EAAY+kC,GAExE,OADiB,GAAY7uC,EAAU8J,EAAY+kC,GACnC5uB,OAAOnZ,GAC3B,CAIO,SAASsoC,GAAsCpvC,EAAU8J,EAAY+kC,GAExE,OADiB,GAAY7uC,EAAU8J,EAAY+kC,GACnC5uB,OAAOG,GAC3B,CAIO,SAASivB,GAAaC,EAASC,EAAYC,EAAa,GAC3D,MAAMC,EAAOH,EACRnrC,OAAO,OACPtH,KAAKmG,GAAWmsC,GAAsC,CAAEL,4BAA4B,IAAQ,QAAc9rC,IAAS,QAAYA,GAAUA,EAAO2d,IAAM4uB,EAAW1qC,IAAI7B,EAAO8c,YACjL,OAAOjZ,KAAKuZ,IAAIovB,KAAeC,EACnC,CAIO,SAASC,GAAaJ,EAASC,GAClC,MAAMI,EAAOL,EACRnrC,OAAO,OACPtH,KAAKmG,GAAWosC,GAAsC,CAAEN,4BAA4B,IAAQ,QAAc9rC,IAAS,QAAYA,GAAUA,EAAO2d,IAAM4uB,EAAW1qC,IAAI7B,EAAO8c,YACjL,OAAOjZ,KAAKC,OAAO6oC,EACvB,CAIO,SAASC,GAAqC5vC,EAAU8J,EAAY+kC,GAEvE,OADiB,GAAY7uC,EAAU8J,EAAY+kC,GACnC7uB,MAAMlZ,GAC1B,CAIO,SAAS+oC,GAAY7sC,EAAQusC,GAChC,OAAOK,GAAqC,CAAEd,4BAA4B,IAAQ,QAAc9rC,IAAS,QAAYA,GAAUA,EAAO2d,IAAM4uB,EAAW1qC,IAAI7B,EAAO8c,SACtK,CAIO,SAASgwB,GAAyB9sC,EAAQ+sC,EAAaR,EAAYvvC,GACtE,IAAI8J,EACAgW,EACA2sB,EAWJ,OAVI,QAASzpC,KACT8G,GAAa,QAAc9G,KAE3B,QAAgBA,KAChB8c,EAAUyvB,EAAW1qC,IAAI7B,EAAO8c,SAChC2sB,EAAU3sB,IAEV,QAAY9c,KACZypC,EAAUzpC,EAAO2d,KAEdovB,EACDC,GAA6BD,KACzBA,EAAY7vB,mBAERrd,EAtEX,SAA+C7C,EAAU8J,EAAY+kC,GACxE,MAAM9uB,EAAW,GAAY/f,EAAU8J,EAAY+kC,GACnD,OAAO,kBAAmC9uB,EAASE,OAAO0uB,QAC9D,CAkEkBsB,CAAsCjwC,EAAU8J,EAAY2iC,SAEpE5pC,CACV,CACO,MAAMmtC,GAAgC7sC,IACzC,MAAM,WAAEgd,GAAehd,EACvB,GAAIgd,EACA,OAAO+vB,GAAoC/vB,EAE/B,EAEP+vB,GAAuC/vB,GD5Hf,GC4H8BA,EC5HtDgwB,GAAc,CAAC,KAAM,KAAM,KAAM,KAAM,MA6BvCC,GAAoC,CAC7CC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJvmC,GAAI,MCnBD,SAASwmC,GAAgCC,GAC5C,IAAI,SAAkBA,GAOlB,OANsBlzC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGirC,GAAgB,CAAE9zB,SAAU4tB,GAAA,IAA0BkG,GACnG9zB,WACAzV,QAAO,CAACwpC,EAAKzhC,KACdyhC,EAAItuC,KAAK7E,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,EAAQu4B,OAAQ,CAAErkC,MAAOqtC,GAAgCvhC,EAAQ9L,QAAQqkC,UAC3GkJ,IACR,MAGX,MAAMC,EAA6BF,EAAc7zC,KAAK8G,GAAUnG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAER,KAAM0tC,GAAiCltC,EAAKR,KAAK8G,QACpJ6mC,EAAsCX,GAAYhpC,QAAO,CAACwpC,EAAKzI,KACjE,MAAM6I,EA2GP,SAAqD3tC,EAAO8kC,GAC/D,MAAMmB,EAAe,GACrB,IAAIC,EAAkB,EAClBC,EAAa,GAiBjB,OAhBAnmC,EAAMoB,SAASb,IACX,MAAM8lC,EAAW9lC,EAAKR,KAAK+kC,GAC3B,GAAI,KAAMuB,GACN,MAAMpsC,MAAM,6CAEZisC,EAAkBG,EAASv/B,UAAYm9B,KACvCgC,EAAahnC,KAAKknC,GAClBA,EAAa,GACbD,EAAkB,GAEtBC,EAAWlnC,KAAKsB,GAChB2lC,GAAoCG,EAASv/B,SAAS,IAEtDq/B,EAAWhhC,OAAS,GACpB8gC,EAAahnC,KAAKknC,GAEfF,CACX,CAhIsC2H,CAA4CL,EAAKzI,GAC/E,OAAO,KAAQ6I,EAAsBl0C,KAAKo0C,GA2JlD,SAAkD7tC,EAAO8kC,GACrD,MAAMgJ,EAAU9tC,EAAMvG,KAAK8G,GAnB/B,SAA4CA,EAAMukC,GAC9C,IAAIjlC,EAAIswB,EACR,MAAM,UAAErpB,EAAS,WAAEiW,EAAU,cAAED,EAAgB,GAAkF,QAA3EqT,EAA0B,QAApBtwB,EAAKU,EAAKR,YAAyB,IAAPF,OAAgB,EAASA,EAAGilC,UAA4B,IAAP3U,EAAgBA,EAAK,CAAC,EAC/J,OAAKrpB,EAGDiW,EACO+vB,GAAoC/vB,GAExCjW,EAAYgW,EALR,CAMf,CASwCixB,CAAmCxtC,EAAMukC,KACvEkJ,EAAYvqC,KAAKuZ,IAAI,KAAM8wB,GACjC,OAAkB,IAAdE,EACOhuC,EAEJA,EAAMvG,KAAK8G,GAAS0tC,GAAgC1tC,EAAMukC,EAAQkJ,IAC7E,CAlKoEE,CAAyCL,EAAe/I,KAAS,GAC9H0I,GACH,OAAOE,CACX,CAMA,SAASD,GAAiC3D,GACtC,MAAMqE,EAAUrE,EAAOhjC,UACjBsnC,EAAWtE,EAAO/sB,WAClBsxB,EAAQvE,EAAOhtB,cACrB,OAAQqxB,GACJ,KAAK,EACD,OAAOG,GAAqC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClE,KAAK,EACD,OAAOA,GAAqCD,EAAOD,EAAUD,EAASA,EAAS,EAAG,EAAG,IACzF,KAAK,EACD,OAAOG,GAAqCD,EAAOD,EAAUD,EAASA,EAAS,EAAG,EAAG,IACzF,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACD,OAAOG,GAAqCD,EAAOD,EAAUD,EAASA,EAAS,EAAG,GAAI,IAC1F,KAAK,GAEL,KAAK,GAEL,KAAK,GACD,OAAOG,GAAqCD,EAAOD,EAAUD,EAASA,EAAS,GAAI,GAAI,IAC3F,SACI,SAAU,EAAO,wBAAwBA,KAErD,CAcA,SAASG,GAAqCxxB,EAAeC,EAAYlW,EAAIumC,EAAID,EAAID,EAAID,GACrF,OAAIlwB,EACO,CACHlW,GAAI,CACAC,UAAWD,EACXkW,cAEJqwB,GAAI,CACAtmC,UAAWsmC,EACXrwB,cAEJowB,GAAI,CACArmC,UAAWqmC,EACXpwB,cAEJmwB,GAAI,CACApmC,UAAWomC,EACXnwB,cAEJkwB,GAAI,CACAnmC,UAAWmmC,EACXlwB,eAIL,CACHlW,GAAI,CACAC,UAAWD,EACXiW,iBAEJswB,GAAI,CACAtmC,UAAWsmC,EACXtwB,iBAEJqwB,GAAI,CACArmC,UAAWqmC,EACXrwB,iBAEJowB,GAAI,CACApmC,UAAWomC,EACXpwB,iBAEJmwB,GAAI,CACAnmC,UAAWmmC,EACXnwB,iBAGZ,CAiEA,MAAMmxB,GAAkC,CAAC1tC,EAAMukC,EAAQkJ,KACnD,MAAMO,EAA2BhuC,EAAKR,KAAK+kC,GACrChoB,GAAiByxB,aAA2E,EAASA,EAAyBznC,WAC9H,KAAMknC,EAAYO,EAAyBznC,UAAW,GACtD,EACN,IAAI0nC,EAAgBjuC,EAYpB,OAXMguC,aAA2E,EAASA,EAAyBxxB,aAC9G,KAAMwxB,aAA2E,EAASA,EAAyBzxB,iBACnHyxB,aAA2E,EAASA,EAAyBzxB,iBAAmBA,MAC7H,QAAS0xB,EAAc5uC,UAAW,QAAmB4uC,EAAc5uC,WACnE4uC,EAAgBp0C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,GAAgB,CAAE5uC,OAAQxF,OAAOiI,OAAO,CAAC,EAAGmsC,EAAc5uC,WAE9G4uC,EAAgBp0C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,GAAgB,CAAEzuC,KAAM3F,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,EAAczuC,MAAO,CAAE,CAAC+kC,GAAS1qC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,EAAczuC,KAAK+kC,IAAU,CAAEhoB,uBAE7L,OAAXgoB,GAAmBhoB,EDxK4B,MCyK/C0xB,EAAgBp0C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,GAAgB,CAAEzuC,KAAM3F,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,EAAczuC,MAAO,CAAEktC,GAAI7yC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmsC,EAAczuC,KAAKktC,IAAK,CAAEnwB,cDzK9I,WC2K5C0xB,CAAa,EAMXC,GAA0B,CAACC,EAAgBC,EAAeC,EAAY,MAC/E,MAAMC,EAAuBzH,GAAA,IAA0BsH,GACvD,OAAOtH,GAAA,IAA0BuH,GAC5Bn1B,WACAzV,QAAO,CAACwpC,EAAKzhC,IACPA,EAAQ9L,QAAQ+D,QAAO,CAACwpC,EAAKhtC,KAChC,MAAMuuC,EAAiBD,EAClBr1B,WACA1N,QAAQA,EAAQ3N,SAChB6B,QACAO,KAAKA,EAAKpC,UAEf,QAAU2wC,GACV,MAAMC,EAAkBD,EAAelvC,SACjCovC,EAAiBzuC,EAAKX,SAE5B,OAAI,SAAkBmvC,KAAoB,SAAkBC,GACjDP,GAAwBM,EAAiBC,EAAgBJ,IAE/D,KAAQE,EAAe/uC,OAAQQ,EAAKR,WACpC,QAASivC,MAAmB,QAAmBA,IAChDzB,EAAItuC,KAAK,CAACsB,EAAKuL,UAAU3N,QAASoC,EAAKpC,UAEpCovC,EAAG,GACXA,IACJqB,EAAU,EAmCV,SAASK,GAA4Bz2B,GAExC,OADsBmyB,GAAA,IAA2BnyB,GAE5C2yB,gBAAgBr/B,GAAYA,EAAQ0+B,aAAY,CAAC0E,EAAa9I,KAC/D,MAAMxmC,EAASwmC,EAAWxmC,SAC1B,IAAI,SAAkBA,GAAS,CAC3B,MAAMyrC,EAAgB4D,GAA4BrvC,GAClD,OAAOsvC,EAAYtvC,OAAOyrC,EAC9B,CACA,MAAM8D,EAKd,SAAsC5uC,GAElC,MAAMV,EAAKU,EAAKR,KAAK8G,IAAI,WAAEkW,GAAeld,EAAIuvC,GAAO,SAAOvvC,EAAI,CAAC,eACjE,OAAOzF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAER,KAAM3F,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKR,MAAO,CAAE8G,GAAIzM,OAAOiI,OAAO,CAAC,EAAG+sC,MAC9H,CATsCC,CAA6BjJ,EAAW/B,OACtE,OAAO6K,EAAYtG,QAAQuG,EAAsB,MAEhDrG,OACT,CASO,SAASwG,GAAkCC,EAAcC,EAAe9oC,EAAY+kC,EAAe7uC,GACtG,MAAM6yC,EAAWjD,GAAqC5vC,EAAU8J,EAAY+kC,GACtEiE,EAAW,sBACXC,EAAY5D,GAAsCnvC,EAAU8J,EAAY+kC,GACxEuC,EAAYhC,GAAsCpvC,EAAU8J,EAAY+kC,GAG9E,MAAO,CACHmE,gBAHgCnwC,IAAjB8vC,EAA6B,KAAMA,EAAcE,EAAUC,GAAYH,EAItFM,iBAHkCpwC,IAAlB+vC,EAA8B,KAAMA,EAAeG,EAAW3B,GAAawB,EAKnG,CC/NA,SAASM,GAAkBlwC,GACvB,MAAM,IAAE3B,EAAG,IAAE0C,EAAG,WAAE3C,GAAe4B,QAAuCA,EAAS,CAAC,EAClF,GAAK3B,GAAQ0C,GAAQ3C,EAGrB,MAAO,CACHC,MACA0C,MACA3C,aAER,CACA,SAAS+xC,GAAmBC,EAAU11B,GAClC,MAAMpX,EAAS,GAsBf,OArBA8sC,EAASx2B,SAASpY,SAAQ,CAAC0K,EAASmkC,KAChC,MAAMC,EAAiB51B,EAAQd,SAASy2B,IACxC,QAAUC,GACVpkC,EAAQ9L,MAAMoB,SAAQ,CAACb,EAAM4vC,KACzB,MAAMC,EAAcF,EAAelwC,MAAMmwC,GAEzC,IADA,QAAUC,IACN,SAAkB7vC,EAAKX,SACvB,SAAU,SAAkBwwC,EAAYxwC,SACxCsD,EAAOjE,QAAQ8wC,GAAmBxvC,EAAKX,OAAQwwC,EAAYxwC,aAE1D,CACD,MAAMywC,EAAmBP,GAAkBvvC,EAAKX,QAC1C0wC,EAAkBR,GAAkBM,EAAYxwC,SACtD,QAAUywC,GAAoBC,GAC9BptC,EAAOjE,KAAK,CACR+wC,SAAUK,EACV/1B,QAASg2B,GAEjB,IACF,IAECptC,CACX,CAcO,SAASqtC,GAAiCP,EAAU11B,GAEvD,OA7DwBta,EA4DT+vC,GAAmBC,EAAU11B,GA3DhC,IAAIxa,EAAU,CACtBM,KAAM,UACNC,iBAAiB,EACjBK,UAAY1G,GAAMA,EAAEg2C,SAAShyC,WAC7ByC,WAAazG,GAAMA,EAAEg2C,SAASrvC,IAC9BH,WAAaxG,GAAMA,EAAEg2C,SAAS/xC,MAEvBkD,UAAUnB,GARzB,IAA4BA,CA8D5B,CAWO,SAASwwC,GAA8Bh4B,EAAQi4B,GAClD,MAAMC,EAAkBl4B,EAAOgB,SAAS/f,KAAKqS,IACzC,MAAM+8B,EAAe/8B,EAAQ9L,MAAMvG,KAAK8G,IACpC,IAAI,SAAkBA,EAAKX,QACvB,OAAOxF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQ4wC,GAA8Bh4B,EAAQi4B,KAE7F,CACD,MAAME,EAAWb,GAAkBvvC,EAAKX,QACxC,OAAK+wC,GAAaF,EAAkBE,GAG7Bv2C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQxF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKX,QAAS,CAAE3B,SAAKwB,EAAWkB,SAAKlB,EAAWzB,gBAAYyB,MAFzIc,CAGf,KAEJ,OAAOnG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO6oC,GAAe,IAE7E,OAAOzuC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUk3B,GAChE,C,eCjKA,MAAME,IAAa,KAAAC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMwtB,sBAMxD0P,IAA4B,KAAAD,gBAAeD,IAAah9B,KACjE,QAAUA,EAAMwtB,oBAAqB,2DAC9BxtB,EAAMwtB,uBAOJ2P,IAA6C,KAAAF,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAAoE,QAA5DA,EAAKjF,EAAao2C,4CAAyD,IAAPnxC,GAAgBA,CAAU,IAMzNoxC,IAAoC,KAAAJ,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAAiD,QAAzCA,EAAKjF,EAAai8B,yBAAsC,IAAPh3B,GAAgBA,CAAU,IAM7LqxC,IAAwC,KAAAL,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAAqD,QAA7CA,EAAKjF,EAAau2C,6BAA0C,IAAPtxC,GAAgBA,CAAU,IAMrMuxC,IAAiD,KAAAP,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAA8D,QAAtDA,EAAKjF,EAAay2C,sCAAmD,IAAPxxC,GAAgBA,CAAU,IAMvNyxC,IAA4B,KAAAT,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAAmD,QAA3CA,EAAKjF,EAAa4b,2BAAwC,IAAP3W,GAAgBA,CAAU,IAMvL0xC,IAA4B,KAAAV,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAA4C,QAApCA,EAAKjF,EAAa42C,oBAAiC,IAAP3xC,GAAgBA,CAAU,IAMhL4xC,IAA6B,KAAAZ,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAA6C,QAArCA,EAAKjF,EAAa82C,qBAAkC,IAAP7xC,GAAgBA,CAAU,IAMlL8xC,IAA2B,KAAAd,gBAAeC,IAA4Bl2C,IAAmB,IAAIiF,EAAI,OAAkD,QAA1CA,EAAKjF,EAAag3C,0BAAuC,IAAP/xC,GAAgBA,CAAU,IC9C3L,SAASgyC,GAAqBx1C,EAAYmI,EAAcstC,GAAqB,GAGhF,OAAO1vC,EAAkB,IAFG,KAAQ/F,GAAas3B,GAAM,IAAIA,EAAEoe,gBAAiBpe,EAAEqe,yBACvD,KAAQxtC,GAAe40B,GAAM,KAAQA,EAAE10B,gBAAiBivB,GAAMA,EAAE+F,UAAUqY,kBAC3BD,EAC5E,C,2BCRA,MAAM,IAAa,KAAAjB,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMrX,UAIxD01C,IAA0B,KAAApB,gBAAe,IAAaj9B,IAC/D,IAAI/T,EACJ,OAAmC,QAA3BA,EAAK+T,EAAMvX,kBAA+B,IAAPwD,EAAgBA,EAAK,EAAE,IAKzDqyC,IAA6B,KAAArB,gBAAeoB,GAAyB,KAAO,MAI5EE,IAAqC,KAAAtB,gBAAeoB,IAA0B51C,GAChF,KAAQA,GAAaq9B,GAAc,IACnCA,EAAUqY,gBACVrY,EAAUsY,wBAMRI,IAAwB,KAAAvB,gBAAe,IAAaj9B,IAC7D,IAAI/T,EACJ,OAAiC,QAAzBA,EAAK+T,EAAMpX,gBAA6B,IAAPqD,EAAgBA,EAAK,EAAE,IAKvDwyC,IAA2B,KAAAxB,gBAAeuB,GAAuB,KAAO,MAIxEE,IAAqB,KAAAzB,gBAAe,IAAaj9B,IAC1D,IAAI/T,EACJ,OAA8B,QAAtBA,EAAK+T,EAAMnX,aAA0B,IAAPoD,EAAgBA,EAAK,EAAE,IAKpD0yC,IAAwB,KAAA1B,gBAAeyB,GAAoB,KAAO,MAIlEE,IAA4B,KAAA3B,gBAAe,IAAaj9B,IACjE,IAAI/T,EACJ,OAAqC,QAA7BA,EAAK+T,EAAMpP,oBAAiC,IAAP3E,EAAgBA,EAAK,EAAE,IAK3D4yC,IAA+B,KAAA5B,gBAAe2B,GAA2B,KAAO,MAIhFE,IAA8B,KAAA7B,gBAAe2B,IAA4BhuC,GAC3E,KAAQA,GAAemuC,GAAOA,EAAGjuC,mBAK/BkuC,IAAoC,KAAA/B,gBAAe,IAAaj9B,IACzE,IAAI/T,EACJ,OAA6C,QAArCA,EAAK+T,EAAMojB,4BAAyC,IAAPn3B,EAAgBA,EAAK,EAAE,IAKnEgzC,IAAgC,KAAAhC,gBAAe,CAACoB,GAAyBS,KAA8B,CAACr2C,EAAa,GAAIqI,EAAiB,KAC5I,IAAIrI,KAAeqI,GAAgB3D,QAAQ+xC,GAASA,EAAKpZ,UAAUqZ,kBAUjEC,IAA2C,KAAAnC,gBAAe,CAACoB,GAAyBS,GAA6BE,KAAoC,CAACv2C,EAAa,GAAIqI,EAAiB,GAAIsyB,EAAuB,MAC5N,MAAMic,EAAuB,IAAI52C,KAAeqI,GAC1CwuC,EAAuB,CAAC,EAsB9B,OArBAD,EAAqB7xC,SAASs4B,IAC1B,MAAMyZ,EAAezZ,EAAUA,UAAUz7B,IACzC+4B,EAAqB51B,SAASgyC,IAC1B,MAAMC,EAAsBD,EAAUE,mBAAmBj3C,WACnDk3C,EAAsBF,EAAoB99B,WAAWtX,IAAQ,QAAgBA,EAAKk1C,KACxF,GAAII,EAAsB,EACtB,OAEJ,MAAMC,EAAkBH,EAAoBE,EAAsB,GAClE,IAAKC,EACD,OAEJ,MAAMC,GAAuB,EAAA5tC,EAAA,IAAestC,GACxCD,EAAqBO,GACrBP,EAAqBO,GAAsBx0C,KAAKu0C,GAGhDN,EAAqBO,GAAwB,CAACD,EAClD,GACF,IAECN,CAAoB,IAKlBQ,IAAsC,KAAA7C,gBAAe,CAACoB,KAA0B,CAAC51C,EAAa,KAChGA,EAAW0E,QAAQ+xC,GAASA,EAAKpZ,UAAUia,yBAOzCC,IAAkC,KAAA/C,gBAAe,CAAC2B,GAA2B1B,KAA4B,CAACtsC,EAAc5J,IAC1HsH,EAAyBsC,EAAc5J,EAAai5C,4BAOlDC,IAAkC,KAAAjD,gBAAe,CAACoB,GAAyBO,GAA2B1B,KAA4B,CAACz0C,EAAYmI,EAAc5J,IAC/Ji3C,GAAqBx1C,EAAYmI,EAAc5J,EAAai5C,4BAS1DE,IAAgC,KAAAlD,gBAAe,CAACoB,GAAyBO,GAA2B1B,KAA4B,CAACz0C,EAAYmI,EAAc5J,IzI/BjK,SAAgCoF,EAAOK,GAAkB,GAQ5D,OAPY,IAAIP,EAAU,CACtBM,KAAM,YACNC,kBACAK,UAAYqB,GAAMA,EAAE23B,UAAU9/B,GAC9B6G,WAAasB,GAAMA,EAAE23B,UAAU/4B,IAC/BH,WAAauB,GAAMA,EAAE23B,UAAUz7B,MAExBkD,UAAUnB,EACzB,CyIwBWg0C,CAAuB,IAAI33C,KADX,KAAQmI,GAAe40B,GAAMA,EAAE10B,kBACY9J,EAAai5C,4BAOtEI,IAA8B,KAAApD,gBAAe,CAACuB,GAAuBtB,KAA4B,CAACt0C,EAAU5B,IzIvBlH,SAA8BoF,EAAOK,GAAkB,GAQ1D,OAPY,IAAIP,EAAU,CACtBM,KAAM,UACNC,kBACAK,UAAYqB,GAAMA,EAAE03B,QAAQ7/B,GAC5B6G,WAAasB,GAAMA,EAAE03B,QAAQ94B,IAC7BH,WAAauB,GAAMA,EAAE03B,QAAQx7B,MAEtBkD,UAAUnB,EACzB,CyIeWk0C,CAAqB13C,EAAU5B,EAAai5C,4BAS1CM,IAAsC,KAAAtD,gBAAe,CAAC2B,GAA2B1B,KAA4B,CAACtsC,EAAc5J,KACrI,MAAMw5C,EAAyB,KAAQ5vC,GAAe6vC,GAAYA,EAAQ3vC,eAAejL,KAAKigC,IACnF,CACHA,YACA2a,gBAGR,OCpKG,SAA+Cr0C,EAAOK,GAAkB,GAS3E,OADY,IAAIP,EAPD,CACXM,KAAM,YACNC,kBACAK,UAAYqB,GAAMA,EAAE23B,UAAUA,UAAU9/B,GACxC6G,WAAasB,GAAMA,EAAE23B,UAAUA,UAAU/4B,IACzCH,WAAauB,GAAMA,EAAE23B,UAAUA,UAAUz7B,MAGlCkD,UAAUnB,EACzB,CD0JWs0C,CAAsCF,EAAwBx5C,EAAai5C,yBAAyB,IEzK/Gv2C,eAAei3C,GAAyBnrC,EAAKu2B,GACzC,OAAKA,EAAKx6B,OAGHiE,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWM,aAAam4C,yBAAyB7U,GAFvE,EAGf,CAUO,SAAU8U,GAA2BrrC,EAAKu2B,EAAMoS,GACnD,MAAM2C,EAAsB3C,UAEhB,QAAO+B,KACba,EAAuB,GACvBC,EAAsB,GAC5BjV,EAAKv+B,SAASnD,IACV,MAAM42C,EAAqBH,EAAoBjzC,IAAIxD,GAC/C42C,EACAF,EAAqB11C,KAAK41C,GAG1BD,EAAoB31C,KAAKhB,EAC7B,IAEJ,MACM62C,EAAwB1yC,QADG,QAAKmyC,GAA0BnrC,EAAKwrC,IAE/DG,EAAU,GAUhB,OATAH,EAAoBxzC,SAASnD,IACzB,MAAM+2C,EAAoBF,EAAsBrzC,IAAIxD,GAChD+2C,EACAL,EAAqB11C,KAAK+1C,GAG1BD,EAAQ91C,KAAKhB,EACjB,IAEG,CACH4E,SAAUT,EAAkBuyC,GAC5BI,UAER,CCjCO,SAAUE,GAA0B7rC,EAAKzG,EAASovC,GACrD,MAAMt3B,EAAkB9X,EACnB5B,OAAO,KACPtH,KAAKsH,GAAWA,EAAOoT,gBAAgBQ,cACtCggC,QAA6B,QAAKF,GAA4BrrC,EAAKqR,EAAiBs3B,GAM1F,OAHA,QAAU,IAAQ4C,EAAqBI,SAAU,mEAAmEJ,EAAqBI,QACpIt7C,KAAKy7C,IAAM,EAAArvC,EAAA,IAAeqvC,KAC1Bt2C,KAAK,UACHsT,MAAMpP,KAAK6xC,EAAqB9xC,SAASb,SACpD,CCtBO,SAAUmzC,KACb,aAAa,QAAW,mBAC5B,CAIO,SAAUC,KACb,aAAa,QAAW,iBAC5B,CCbO,SAASC,GAA6BjsC,EAAK2oC,GAC9C,MAAM,QAAEv3C,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EACFuB,UAAUA,GACVM,aACAm4C,yBAAyBzC,GACzBzsC,MAAMgwC,GAAeA,EAAW77C,KAAK+a,GAAOA,EAAGvW,OACxD,C,2BCUO,MAAMs3C,GAAuB,CAChCn1C,KAAM,mBACNoZ,SAAU,IAQP,SAASg8B,GAAgCxmB,GAC5C,MAAO,CACHiJ,GAAcV,UAAU,IACxBrgB,GAAqBvD,iBAAiB,CAClCG,wBAAyB0uB,GAA2BxT,GACpD/a,4BAA6B,KAEjC0K,GAAcxE,UAAUo7B,IACxBl1B,GAAgBP,YAAY,IAC5BgkB,GAAYP,QAAQ,CAAC,GAE7B,CACA,SAAUkS,GAAsBrsC,EAAK46B,GAEjC,IAAK56B,EAAI5O,QAAQI,aAAa86C,4BAC1B,OAAO1R,EAEX,IAAKA,GAAiB,IAAQA,EAAcrhC,SACxC,OAAOqhC,EAEX,MAAM2R,EAAyB3R,EAAcrhC,QACxC5B,OAAO,KACPtH,KAAKgyB,GAAMA,EAAEtX,gBAAgBQ,cAC5BihC,QAAsB,QAAKP,GAA8BjsC,EAAKusC,GACpE,OAAO,KAAO,WAAYhzC,GAAYA,EAAQ5B,QAAQA,KAC7C,OAA2BA,IAGzB60C,EAAcpoB,MAAMvvB,IAAQ,QAAgBA,EAAK8C,EAAOoT,gBAAgBQ,kBAC/EqvB,EACR,CAwBO,SAAU6R,GAAqCzsC,EAAK1J,EAAWhD,EAAUE,EAAUoyB,EAAkB+iB,EAAcn/B,GACtH,IAAI/S,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EACxB,MAAMgkB,QAA+B,QAAKL,GAAuBrsC,EAAK1J,EAAUskC,eAC1E+R,EAAqB37C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3C,GAAY,CAAE8Y,OAAoC,QAA3B3Y,EAAKH,EAAU8Y,cAA2B,IAAP3Y,EAAgBA,EAAK01C,GAAsBvR,cAAe8R,IACzKE,QAAmB,QAAKZ,IACxBa,EAAqN,QAA9LzlB,EAAgH,QAA1GL,EAAK6lB,aAA+C,EAASA,EAAWE,oCAAiD,IAAP/lB,OAAgB,EAASA,EAAGgmB,KAAKH,EAAYD,UAAwC,IAAPvlB,EAAgBA,EAAKulB,EAClPK,EAAsM,QAAnLvkB,EAAoG,QAA9FD,EAAKokB,aAA+C,EAASA,EAAWK,wBAAqC,IAAPzkB,OAAgB,EAASA,EAAGukB,KAAKH,EAAYC,UAAyC,IAAPpkB,EAAgBA,EAAK,CAAC,EACpO/d,E1BlEH,SAA0CpU,EAAWsvB,GACxD,MAAM,cAAEgV,GAAkBtkC,EAC1B,IAAKskC,EACD,OAAOxB,GAA2BxT,GAAmBtvB,EAAUzB,KAEnE,IAAI,QAAoB+lC,GAEpB,MAAO,CACH//B,MAAO,gBACP+X,YAAa,GACbrZ,QAASqhC,EAAcrhC,SAG/B,MAAMO,EAAS9I,OAAOiI,OAAO,CAAC,EA+B3B,SAAwC2hC,GAC3C,MAAMrhC,EAAUqhC,EAAcrhC,QACxB2zC,EAAyB3zC,EAC1B5B,OAAO,KACPtH,KAAKsH,GAAWA,EAAOoT,gBAAgBC,kBACtCmiC,EAAmB5zC,EAAQlJ,KAAKsH,IAClC,KAAK,OAA2BA,KAAYA,EAAOoT,gBAAgBkB,iBAC/D,OAAOtU,EAEX,MAAMy1C,EAA4Bz1C,EAAOoT,gBAAgBkB,iBAAiBtU,QAAQsU,IAAiG,IAA5EihC,EAAuBG,QAAQphC,EAAiBqhC,yBACvJ,MAAO,CACHviC,gBAAiB/Z,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtB,EAAOoT,iBAAkB,CAAEkB,iBAAkBmhC,IACjG,IAEL,OAAOp8C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2hC,GAAgB,CAAErhC,QAAS4zC,GACtE,CA9CqCI,CAA+B3S,IAIhE,cAHO9gC,EAAOjF,WACPiF,EAAOvC,WACPuC,EAAOlF,WACPkF,CACX,C0BgDoC0zC,CAAiCX,EAAqBjnB,GAChFhb,EAAwB+vB,GAA+BkS,GACvDhiC,QAAoC,QAAKghC,GAA2B7rC,EAAK0K,EAAwBnR,QAASovC,GAQ1G8E,ETnCH,SAAiCr+B,EAAQ9b,EAAUE,GACtD,MAAMk6C,EAAe,KAAMp6C,GAAWggB,IAAY,SAAgB,QAAWA,MACvEq6B,EAAoBv+B,EAAOgB,SAAS/f,KAAKqS,IAC3C,MAAMkrC,EAAiB,KAAQlrC,EAAQ9L,MAAMvG,KAAK8G,GApC1D,SAAqCA,EAAMu2C,EAAcl6C,GACrD,MAAM,OAAEgD,EAAQG,MAAM,GAAE8G,IAAUtG,EAElC,IAAKX,EAGD,YADAgC,QAAQquB,IAAI,cAAc1vB,6DAI9B,KAAK,QAAgBX,MAAY,QAAYA,GACzC,OAAOW,EAEX,MAAM,KAAEH,EAAI,QAAEipC,GAnClB,SAAkCzpC,EAAQk3C,GACtC,IAAI,QAAgBl3C,GAAS,CACzB,MAAM2c,EAAa3c,EAAO8c,QAC1B,MAAO,CACHtc,KAAM,UACNipC,QAASyN,GAAa,QAAgBv6B,IAE9C,CACK,IAAI,QAAY3c,GACjB,MAAO,CACHQ,KAAM,MACNipC,QAASzpC,EAAO2d,KAGxB,MAAM,IAAI,KAAe,sDAAsD3d,EAAOQ,OAC1F,CAoB8B62C,CAAyBr3C,EAAQk3C,GAE3D,IAAKzN,EACD,OAEJ,MAAM,WAAEuG,EAAU,YAAEC,GAAgBP,GAAkCzoC,EAAGC,UAAWD,EAAGkW,WAAY3c,EAAMipC,EAASzsC,GAClH,OAAOxC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAER,KAAM,CAC9C8G,GAAIzM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGwE,GAAK,CAAEC,UAAW8oC,EAAY7yB,WAAY8yB,MAE1F,CAemEqH,CAA4B32C,EAAMu2C,EAAcl6C,MAC3G,OAAOxC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAOg3C,GAAiB,IAE/E,OAAO58C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUu9B,GAChE,CS4B4BI,CAA8D,QAArCrlB,EAAKmkB,EAAoBz9B,cAA2B,IAAPsZ,EAAgBA,EAAKyjB,GAAsB74C,EAAUE,GACnJ,MAAO,CACHsa,GAAqBvD,iBAAiB,CAClCI,gCAAiCD,EACjCA,0BACAE,wBACAC,gCAEJ0K,GAAcxE,UAAU08B,GACxB/S,GAAYP,QAAQ,CAChB7jC,UAAWkT,QAA+DA,EAAqBlT,IAEnG2gB,GAAgBP,YAAYpjB,GAC5BonC,GAAYH,kBAAkBjkC,EAAUuE,OACxCk8B,GAAUvD,uBACVuD,GAAUL,kBAAkBsW,GAEpC,CCjHO,MAAMgB,IAA0B,SAAoB,CACvDz3B,SAAWrjB,GAAcA,EAAU1C,KCAjCy9C,IAAwB,SAAY,CACtCxgC,KAAM,mBACNC,aAAcsgC,GAAwBv3B,kBACtC9I,SAAU,CACNugC,sBAAuBF,GAAwBj3B,UAC/Co3B,yBAA0BH,GAAwBI,aAG7CC,GAA+BJ,GAAsBpgC,QACrDygC,GAA0BL,GAAsBlgC,QCThDwgC,IAAoC,SAAoB,CACjEh4B,SAAWjgB,IAAc,EAAAmG,EAAA,IAAenG,EAAUzB,OCDhD25C,IAA4B,SAAY,CAC1C/gC,KAAM,uBACNC,aAAc6gC,GAAkC93B,kBAChD9I,SAAU,CACN8gC,wBAAyBF,GAAkC53B,OAC3D+3B,uBAAwBH,GAAkCx3B,aAGrD43B,GAAmCH,GAA0B3gC,QAC7D+gC,GAA8BJ,GAA0BzgC,QCZ9D,SAAS8gC,GAA4B7uC,GACxC,MAAM,QAAE5O,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAaikC,cAAc,CAAEsX,yBAAyB,GAC9F,CCDO56C,eAAe66C,GAAqB/uC,GACvC,MAAMgvC,QAwBV96C,eAAoC9C,EAASuB,GAGzC,OAZJ,SAA4CvB,GACxC,IAAIqF,EACJ,OAAsC,QAA9BA,EAAKrF,EAAQ69C,mBAAgC,IAAPx4C,EAAgBA,EAAKy4C,EACvE,CAQwBC,CADKC,GAAuBh+C,GAEzC69C,EAAY/6C,MAAOm7C,IACtB,MAAMC,EATd,SAAuCD,GACnC,IAAI54C,EACJ,MAAM84C,EAA8E,QAApE94C,EAAK44C,aAAuC,EAASA,EAAOtL,UAAuB,IAAPttC,OAAgB,EAASA,EAAG+4C,qBAAqBC,KAAKJ,aAAuC,EAASA,EAAOtL,IACzM,OAAOwL,QAAuCA,EAASL,EAC3D,CAKuCQ,CAA8BL,GAC7D,OAAOC,EAAuB38C,EAAU,GAEhD,CA/BoC68C,CAAqBxvC,EAAI5O,QAAS4O,EAAIrN,WACtE,OAAKq8C,EAGoCA,EA6B7B3+C,KAAK8G,IACb,MAAM,QAAE8oC,EAAO,KAAE0P,GAASx4C,EAAKy4C,iBAC/B,MAAO,CACHh7C,WAAY+6C,EAAK/6C,WACjB2C,IAAKo4C,EAAKp4C,IACV1C,KAAK,QAAO86C,EAAKp4C,KACjBsD,MAAO80C,EAAK90C,MACZg1C,KAAM5P,EAAQ4P,KAAKx/C,KAAKy/C,IACb,CACHl7C,WAAYk7C,EAAIl7C,WAChBiG,MAAOi1C,EAAIj1C,UAGtB,IA5CM,EAGf,CACA,SAASq0C,KACL,OAAOr1C,QAAQ5I,SACnB,CACA,SAASm+C,GAAuBh+C,GAC5B,OAAIA,aAAyC,EAASA,EAAQG,WACnD69C,GAAuBh+C,EAAQG,WAEnCH,CACX,CCjBA,MCIM2+C,IAAwB,SAAY,CACtCtiC,KAAM,mBACNC,aCLwC,CACxCsiC,sBAAkB35C,GDKlBsX,SDJoC,CACpCsiC,oBAJwB,CAACzlC,EAAOC,KAChCD,EAAMwlC,iBAAmBvlC,EAAOvK,OAAO,KCQ9BgwC,GAA+BH,GAAsBliC,QACrDsiC,GAA0BJ,GAAsBhiC,QEVtD,SAASqiC,GAAyBpwC,GACrC,MAAM,QAAE5O,EAAO,UAAEuB,EAAS,aAAE66B,GAAiBxtB,EAC7C,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAa88C,wBAAwB7iB,EAC7E,CCFA,MCGM8iB,IAA4B,SAAY,CAC1C7iC,KAAM,uBACNC,aCL4C,CAC5C6iC,0BAAsBl6C,GDKtBsX,SDHwC,CACxC6iC,wBAJ4B,CAAChmC,EAAOC,KACpCD,EAAM+lC,qBAAuB9lC,EAAOvK,OAAO,KCOlCuwC,GAAmCH,GAA0BziC,QAC7D6iC,GAA8BJ,GAA0BviC,QEV9D,SAAS4iC,GAAoB3wC,GAChC,MAAM,QAAE5O,GAAY4O,EACpB,OAAO5O,EAAQyB,eAAe89C,qBAClC,CCiCAz8C,eAAe08C,GAAyB5wC,EAAK4sC,EAAYpf,EAAcqjB,GACnE,MAAM,QAAEz/C,EAAO,UAAEuB,EAAS,iBAAEm+C,GAAqB9wC,GAC3C,mBAAE+wC,GAAuBnE,EAC/B,GAAImE,IAAsB,QAAgBA,EAAmBl8C,IAAK24B,GAAe,CAI7E,GAAIqjB,EAAuB,CACvB,MAAMv9C,QAyBlBY,eAAiD8L,EAAK1J,GAClD,KAAMA,aAA6C,EAASA,EAAU8Y,QAClE,MAAO,GAEX,MAAM,QAAEhe,EAAO,UAAEuB,GAAcqN,EACzBgxC,EAAqB,IAC3B,SAAW16C,EAAU8Y,OAAQ,CACzB6hC,eAAiBz6C,KACT,QAAgBA,IAChBw6C,EAAmBn7C,KAEnBW,EAAO8c,WAEJ9c,EAAOma,OAAOhZ,OAAO,OAAkBtH,KAAKwgB,GAAUA,EAAMqgC,SACnE,IAGR,MAAMC,EAAa,KAAOH,EAAoB,MAC9C,OAAOn3C,QAAQoC,IAAIk1C,EAAW9gD,KAAKwE,GAAQzD,EAAQuB,UAAUA,GAAWW,WAAW89C,WAAWv8C,KAClG,CA5CmCw8C,CAAkCrxC,EAAK+wC,GAC9D,MAAO,CACHz6C,UAAWy6C,EACX7E,WAAY,CACR54C,WACAg+C,QAAS,IAGrB,CACA,OAAOlgD,EACFuB,UAAUA,GACVY,aACAg+C,8BAA8BR,EAAoB,CAAC,YACnD70C,MAAMgwC,IACA,CACH51C,UAAWy6C,EACX7E,gBAGZ,CACA,OAAO96C,EACFuB,UAAUA,GACVY,aACAi+C,2BAA2BhkB,EAAcsjB,EAAkB,CAAEW,cAAc,GAAQ,CAAC,WAC7F,CAqBA,SAAUC,GAAsB1xC,EAAKiP,EAAKue,GACtC,MAAM,QAAEp8B,GAAY4O,EACd4sC,QAAmB,QAAKZ,KACvB2F,EAAyBlgD,EAAQmC,EAAaf,EAAcM,EAASy+C,EAAQ3iB,EAAM4iB,EAAkBC,EAAsB9B,EAAkBO,SAA+B,QAAI,EACnL,QAAKK,GAA0B5wC,EAAK4sC,EAAYpf,IAAgBve,EAAI/O,QAAQsJ,qBAC5E,QAAKie,GAAwBznB,EAAKiP,IAClC,QAAKyd,GAAoB1sB,EAAKiP,IAC9B,QAAK0hC,GAAqB3wC,IAC1B,QAAKgtB,GAAahtB,IAClB,QAAKutB,GAAqBvtB,IAC1B,QAAK8uB,GAAU9uB,IACf,QAAKu3B,GAAmBv3B,IACxB,QAAK6uC,GAA6B7uC,IAClC,QAAK+uC,GAAsB/uC,IAC3B,QAAKowC,GAA0BpwC,MAE7B,UAAE1J,EAAW41C,YAAY,SAAE54C,IAAgBq+C,EAC3C9rB,QAAkC,QAAKoG,GAAoCjsB,EAAKiP,EAAKxd,EAAOm0B,iBAAkBtvB,EAAUsvB,kBACxHmsB,QAAoB,QAAKtF,GAAsCzsC,EAAK1J,EAAWhD,EAAU7B,EAAO+B,SAAUqyB,EAA0Bp0B,OtB9EvI,SAAyC0B,EAASu1C,GAAqB,GAC1E,OAAOD,GAAqBt1C,EAAQF,aAAcE,EAAQiI,eAAgBstC,EAC9E,CsB4EsJsJ,CAAgC7+C,GAAU8b,EAAI/O,QAAQsJ,oBA6BxM,MAAO,CACHyoC,OA7BU,SAAa,CACvB9Z,GAA2BF,uBAAuB7mC,EAAQI,cAC1D04B,GAAcF,UAAUv4B,GACxB64B,GAAoBF,gBAAgBv3B,GACpCu8B,GAAYF,QAAQD,GACpBnC,GAAmBF,eAAeh5B,GAClCm6B,GAAeF,gBAAgB,CAC3B56B,WAAYE,EAAQF,aACpBmI,aAAcjI,EAAQiI,eACtB/H,MAAOF,EAAQE,QACfD,SAAUD,EAAQC,WAClBw6B,qBAAsBz6B,EAAQy6B,4BAE/BmkB,EACHljB,GAAcV,UAAUyjB,GACxBxrB,GAAwBJ,oBAAoB,CACxCJ,iBAAkBtvB,EAAUsvB,iBAC5BC,0BAA2BA,EAA0Bp0B,OACrDq0B,0BAAgE,cAArCD,EAA0BsG,SAEzD2L,GAAwBH,oBAAoBka,GAC5CjD,GAA4BH,wBAAwBqD,GACpD3B,GAAwBF,oBAAoBD,GAC5CjZ,GAAU5D,6BAA6B1hC,EAAOi4B,2BAC9C4N,GAAkBJ,cAAczlC,EAAOm4B,mBACvC8mB,GAA4BF,wBAAwBD,IACrD,kCAICnpC,MAHUrH,GAAqBC,EAAK1J,EAAWhD,EAAU7B,EAAQmC,EAAaqb,EAAIhP,eAK1F,CACA,SAAUiyC,GAAuBlyC,EAAKiP,GAClC,MAAM,QAAE7d,GAAY4O,GACbvO,EAAQmC,EAAaf,EAAcM,EAAS87B,EAAM4iB,EAAkBC,EAAsB9B,SAA2B,QAAI,EAC5H,QAAKvoB,GAAwBznB,EAAKiP,IAClC,QAAKyd,GAAoB1sB,EAAKiP,IAC9B,QAAK0hC,GAAqB3wC,IAC1B,QAAKgtB,GAAahtB,IAClB,QAAK8uB,GAAU9uB,IACf,QAAKu3B,GAAmBv3B,IACxB,QAAK6uC,GAA6B7uC,IAClC,QAAK+uC,GAAsB/uC,KAoC/B,MAAO,CACHiyC,OAnCU,SAAa,CACvB9Z,GAA2BF,uBAAuB7mC,EAAQI,cAC1D04B,GAAcF,UAAUv4B,GACxB64B,GAAoBF,gBAAgBv3B,GACpCu8B,GAAYF,QAAQD,GACpBnC,GAAmBF,eAAeh5B,GAClCm6B,GAAeF,gBAAgB,CAC3B56B,WAAYE,EAAQF,aACpBmI,aAAcjI,EAAQiI,eACtB/H,MAAOF,EAAQE,QACfD,SAAUD,EAAQC,WAClBw6B,qBAAsBz6B,EAAQy6B,yBAElCkK,GAAwBH,oBAAoBka,GAC5CjD,GAA4BH,wBAAwBqD,GACpD3B,GAAwBF,oBAAoBD,GAC5C1B,GAAwBH,8BACrB/B,GAAgC36C,EAAOm0B,kBAC1CQ,GAAwBJ,oBAAoB,CACxCJ,sBAAkBvvB,EAClBwvB,0BAA2Bp0B,EAAOm0B,iBAClCE,2BAA2B,IAE/BiR,GAAU5D,6BAA6B1hC,EAAOi4B,2BAC9C4N,GAAkBJ,cAAczlC,EAAOm4B,mBACvC8mB,GAA4BF,wBAAwB,CAChD2B,kBAAkB,EAClBC,mBAAmB,EACnBC,yBAAyB,EACzBC,kBAAkB,EAClBC,wBAAwB,KAE7B,6BAICnrC,MAHUrH,GAAqBC,OAAK3J,EAAW,GAAI5E,EAAQmC,EAAaqb,EAAIhP,eAKpF,CCpLO,SAASuyC,GAAiBvb,EAAYwb,EAA0B,CAAExoC,gBAAgB,GAAQhK,GAC7F,MAAO,CACHjJ,KAAM,kCACNiJ,gBACAC,QAAS,CACL+2B,aACAwb,2BAGZ,CASO,SAASC,GAAuBzyC,GACnC,OAAOuyC,GAAiB,OAAQ,CAAEvoC,gBAAgB,GAAQhK,EAC9D,CASO,SAAS0yC,GAAqB1yC,GACjC,OAAOuyC,GAAiB,OAAQ,CAAEvoC,gBAAgB,GAAQhK,EAC9D,C,2BC7BO,MAAM2yC,GAA0B3R,GAAa,KAAQA,GAAU,IAAI4R,IAAS,KAAUA,EAAM,CAAEC,MAAO,MCNtG,IAAa,KAAArL,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMowB,gBAYxDmY,IAAwC,KAAAtL,gBAAe,IAAauL,KAC7E,QAAUA,EAAmBtoC,wBAAyB,2DAC/CsoC,EAAmBroC,mCAajBsoC,IAAqC,KAAAxL,gBAAesL,IAAwCnY,IAAoB,IAAInkC,EAAI,OAAsG,QAA9FA,EAAKmkC,aAAqD,EAASA,EAAcrhC,eAA4B,IAAP9C,EAAgBA,EAAK,EAAE,IAY7Py8C,IAAgC,KAAAzL,gBAAe,IAAauL,KACrE,QAAUA,EAAmBtoC,wBAAyB,2DAC/CsoC,EAAmBtoC,2BAsBjByoC,IAA8B,KAAA1L,gBAAe,IAAauL,KAGnE,QAAUA,EAAmBtoC,wBAAyB,2DAC/CsoC,EAAmBpoC,yBAYjBwoC,IAAoC,KAAA3L,gBAAe,IAAauL,KACzE,QAAUA,EAAmBnoC,4BAA6B,2DACnDmoC,EAAmBnoC,+BAYjB,IAAuC,KAAA48B,gBAAe,IAAauL,KAC5E,QAAUA,EAAmBnoC,4BAA6B,2DACnD7R,EAAkBg6C,EAAmBnoC,gCAWnCwoC,IAA6B,KAAA5L,gBAAeyL,IAAgCtY,GAAkBA,EAAcrhC,UAU5G+5C,IAAsC,KAAA7L,gBAAe4L,IAA6B95C,GAAYA,EAAQ5B,OAAO,OAU7G47C,IAAgC,KAAA9L,gBAAe4L,IAA6B95C,GAAYA,EAAQ1B,KAAK,QASrG27C,GAAkDZ,IAAwBrnC,IAAgB,KAAAk8B,gBAAe,GAAsC6L,IAAqC,CAACG,EAA0B/2C,KACxN,MAAM0O,EAAKqoC,EAAyBp7C,IAAIkT,GACxC,GAAKH,EAIL,OAAO1O,EAAiB7E,MAAMF,IAAW,QAAgBA,EAAOoT,gBAAgBQ,aAAa,QAAMH,EAAG5a,GAAI,kBACtG,QAAgBmH,EAAOoT,gBAAgBQ,aAAa,QAAOH,EAAG7T,OAAM,MAU/Dm8C,GAA8Cd,IAAwBe,IAAY,KAAAlM,gBAAe6L,IAAsC52C,GAAqBA,EAAiB7E,MAAMF,GAAWA,EAAOoT,gBAAgBC,kBAAoB2oC,QASzOC,GAAmDhB,IAAwBe,IAAY,KAAAlM,gBAAe6L,IAAsC52C,GAAqBA,EAAiByP,WAAWxU,GAAWA,EAAOoT,gBAAgBC,kBAAoB2oC,QASnPE,GAAmCjB,IAAwBe,IAAY,KAAAlM,gBAAe6L,IAAsC52C,IACrI,MAAMo3C,EAAU,KAAQ,CAACH,IACnB75C,EAAS,IAAIi6C,IACnB,KAAOD,EAAQ/3C,QAAQ,CACnB,MAAMwD,EAAUu0C,EAAQpkC,MAClB/Q,EAAWjC,EAAiB/E,QAAQ0qB,IACtC,IAAI5rB,EACJ,OAAqD,QAA7CA,EAAK4rB,EAAEtX,gBAAgBkB,wBAAqC,IAAPxV,OAAgB,EAASA,EAAG2tB,MAAM4vB,GAAWA,EAAO1G,wBAA0B/tC,GAAQ,IAEvJZ,EAAS3G,SAASi8C,IACdn6C,EAAOo6C,IAAID,EAAMlpC,gBAAgBC,iBACjC8oC,EAAQj+C,KAAKo+C,EAAMlpC,gBAAgBC,gBAAgB,GAE3D,CACA,OAAOlC,MAAMpP,KAAKI,EAAO,MAOhBq6C,GAAqCvB,IAAwB/9C,IAAQ,KAAA4yC,gBAAe6L,IAAsC52C,GAC5HA,EAAiB/E,QAAQoT,KAAqB,QAAgBA,EAAgBA,gBAAgBQ,YAAa1W,SAOzGu/C,GAA4CxB,IAAwBe,IAAY,KAAAlM,gBAAe6L,IAAsC/5C,IAC9I,MAAM5B,EAAS4B,EAAQ1B,MAAMF,GAAWA,EAAOoT,gBAAgBC,kBAAoB2oC,IAEnF,OADA,QAAUh8C,EAAQ,mDACXA,EAAOoT,gBAAgBQ,WAAW,MAOhC8oC,GAA6BzB,IAAuB,CAAC0B,EAAsBC,KAA0B,KAAA9M,gBAAeoM,GAAiCS,IAAwBE,GAC/KA,EAAYpwB,MAAMqwB,GAAeA,IAAeF,QAY9CG,IAAmC,KAAAjN,gBAAe6L,IAAsC52C,GAC1FA,EAAiBX,OAXQ,K,gBCjN7B,SAAS44C,GAAwC/Z,EAAepkC,GACnE,OAAKokC,EAGEga,GAA6Cha,EAAcrhC,QAAS/C,GAFhE,EAGf,CASO,SAASq+C,GAA6Cja,EAAe7mB,GACxE,OAAK6mB,EAGEka,GAAkDla,EAAcrhC,QAASwa,GAFrE,EAGf,CAOO,SAASghC,GAA0Cp9C,GACtD,OAAIA,EAAOoT,gBAAgBiB,mBAChB,SAA2BrU,EAAOoT,gBAAgBQ,YAAa5T,EAAOoT,gBAAgBe,oBAE1F,SAA2BnU,EAAOoT,gBAAgBQ,YAAa5T,EAAOoT,gBAAgBe,kBACjG,CAQO,SAASkpC,GAAwCr9C,EAAQnB,GAC5D,MAA+B,aAA3BmB,EAAOsT,WAAWjU,MACX,SAAsBR,EAAOud,YAAapc,EAAOsT,WAAWzP,YAAay5C,GAAuBt9C,EAAOsT,WAAWvR,MAAOu7C,GAAuBt9C,EAAOsT,WAAWrR,MAGlK,SAAsBpD,EAAOud,YAAapc,EAAOsT,WAAWvR,KAAKo/B,WAAYnhC,EAAOsT,WAAWrR,GAAGk/B,WAEjH,CAQO,SAASoc,GAA6Cv9C,EAAQoc,GACjE,MAA+B,aAA3Bpc,EAAOsT,WAAWjU,MACX,SAAsB+c,EAAapc,EAAOsT,WAAWzP,YAAay5C,GAAuBt9C,EAAOsT,WAAWvR,MAAOu7C,GAAuBt9C,EAAOsT,WAAWrR,MAG3J,SAAsBma,EAAapc,EAAOsT,WAAWvR,KAAKo/B,WAAYnhC,EAAOsT,WAAWrR,GAAGk/B,WAE1G,CAQO,SAAS8b,GAA6CO,EAAoB3+C,GAC7E,OAAO2+C,EAAmB9kD,KAAKsH,IACvB,OAA2BA,GACpBo9C,GAA0Cp9C,GAG1Cq9C,GAAwCr9C,EAAQnB,IAGnE,CAQO,SAASs+C,GAAkDK,EAAoBphC,GAClF,OAAOohC,EAAmB9kD,KAAKsH,IACvB,OAA2BA,GACpBo9C,GAA0Cp9C,GAG1Cu9C,GAA6Cv9C,EAAQoc,IAGxE,CACA,SAASkhC,GAAuBG,GAC5B,OAAO,KAASA,GAASrc,OAAOC,SAASoc,GAASA,CACtD,CCnGO,SAASC,GAAuBr/C,GACnC,OAAQ,IAAQA,IAA2B,uBAAnBA,EAAI6G,UAChC,CAIO,MAAMy4C,GAA4B,qBAIlC,SAASC,KACZ,OAAO34C,EAAgB04C,GAA2B,qBACtD,CAOO,SAASE,GAA2Bx/C,GACvC,OAAQ,IAAQA,IAA2B,2BAAnBA,EAAI6G,UAChC,CAIO,MAAM44C,GAAgC,yBAItC,SAASC,KACZ,OAAO94C,EAAgB64C,GAA+B,yBAC1D,CAOO,SAASE,GAAoB3/C,GAChC,OAAQ,IAAQA,IAA2B,0BAAnBA,EAAI6G,UAChC,CAOO,SAAS+4C,GAA2B5/C,GACvC,OAAO2/C,GAAoB3/C,MAAUA,EAAI6/C,SAC7C,CAOO,SAASC,GAA2B9/C,GACvC,OAAO2/C,GAAoB3/C,MAAUA,EAAI+/C,SAC7C,CAIO,MAAMC,GAAwB,kBAI9B,SAASC,KACZ,OAAOr5C,EAAgBo5C,GAAuB,wBAClD,CAIO,SAASE,KACZ,OAAOt5C,EAAgBo5C,GAAuB,wBAAyB,CACnEH,WAAW,GAEnB,CAIO,SAASM,KACZ,OAAOv5C,EAAgBo5C,GAAuB,wBAAyB,CACnED,WAAW,GAEnB,CAOO,SAASK,GAAuBpgD,GACnC,OAAO2/C,GAAoB3/C,IAAQw/C,GAA2Bx/C,IAAQq/C,GAAuBr/C,EACjG,CCzFA,MAAM,IAAa,KAAAyxC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAM4E,SAQxDinC,IAAc,KAAA5O,gBAAe,IAAa6O,GAC5CA,EAAYjnC,QAOVknC,IAA+B,KAAA9O,gBAAe,IAAa6O,GpIoFjE,SAAuC9rC,GAC1C,MAAM1Q,EAAS,GACf,IAAI08C,EAAc,GAClB,MAAMC,EAAe,IAAI1C,IAmBzB,OAlBAvpC,EAAMyD,MAAME,UAAUnW,SAAQ,CAAC+c,EAAO2hC,KAClC,MAAM,IAAEznC,EAAKA,KAAO0gC,MAAM,KAAEgH,GAAS,CAAC,IAAS5hC,GAE/C,QAAU4hC,GACNH,IAAgBG,KAKhB,SAAWF,EAAa/9C,IAAIi+C,GAAO,qBACnC78C,EAAOoT,QAAQ,CACX+B,MACA2nC,uBAAwBF,IAE5BF,EAAcG,EACdF,EAAavC,IAAIyC,GACrB,IAEG78C,CACX,CoI1GW+8C,CAA8BP,KAQ5BQ,IAAe,KAAArP,gBAAe,IAAa6O,KACpD,QAAUA,EAAYlnC,OAAQ,mDACvBknC,EAAYlnC,UAiBV2nC,IAAoB,KAAAtP,gBAAeqP,IAAe1nC,GACnCpe,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmW,GAAS,CAAEgB,SAAUhB,EAAOgB,SAC3E/f,KAAKqS,GACC1R,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyJ,GAAU,CAAE9L,MAAO8L,EAAQ9L,MAAMe,OAAO0Y,QAE9E1Y,QAAQ+K,IAAa,IAAQA,EAAQ9L,aASrCogD,IAAgB,KAAAvP,gBAAeqP,IAAe1nC,IACvD,MAAMxY,EAAQ,GACd,IAAK,MAAM8L,KAAW0M,EAAOgB,SACzB,IAAK,MAAMjZ,KAAQuL,EAAQ9L,MAClBO,EAAKX,QAGVI,EAAMf,KAAKsB,EAAKX,QAGxB,OAAOI,CAAK,IAQHqgD,IAAmB,KAAAxP,gBAAeuP,IAAgBlU,GACpD3pC,EAA4B2pC,KAU1BoU,GAAoBtE,IAAwB/9C,IAAQ,KAAA4yC,gBAAewP,IAAmBE,IAC/F,GAAKtiD,EAGL,OAAOsiD,EAAU9+C,IAAIxD,EAAI,MAWhBuiD,GAA8BxE,IAAwB/9C,IAAQ,KAAA4yC,gBAAewP,IAAmBE,IACzG,IAAKtiD,EACD,OAEJ,MAAM2B,EAAS2gD,EAAU9+C,IAAIxD,GAC7B,OAAK2B,IAAUwG,EAAexG,GAGvBA,OAHP,CAGa,MAOJ6gD,GAAqBzE,IAAwB/9C,IAAQ,KAAA4yC,gBAAe2P,GAA4BviD,IAAO2B,IAAa,IAAIC,EAAI,OAAgF,QAAxEA,EAAKD,aAAuC,EAASA,EAAOma,cAA2B,IAAPla,EAAgBA,EAAK,EAAE,MAS3O6gD,GAAiC1E,IAAwB/9C,IAC3D,KAAA4yC,gBAAeyP,GAAkBriD,GAAMw+C,IAA4B,CAAC78C,EAAQ+gD,MAC/E,QAAU/gD,EAAQ,oBAAmB,EAAAiG,EAAA,IAAe5H,kCAC7C+/C,GAA6C2C,EAAkB/gD,QAGxEghD,IAAmB,KAAA/P,gBAAewP,IAAmBE,GAChDruC,MAAMpP,KAAKy9C,EAAUv+C,YAOnB6+C,IAAsB,KAAAhQ,gBAAe+P,IAAmBE,GACpC,IAAtBA,EAAW37C,SAOT47C,IAAsB,KAAAlQ,gBAAe+P,IAAmBE,GAC1DA,EAAW//C,OAAO,QAOhBigD,IAA0B,KAAAnQ,gBAAe+P,IAAmBE,GAC9DA,EAAW//C,OAAO,QAOhBkgD,IAAyB,KAAApQ,gBAAe+P,IAAmBE,GAC7DA,EAAW//C,OAAOqF,KAOhB86C,IAA6B,KAAArQ,gBAAe+P,IAAmBE,GACjEA,EAAW//C,QAAQsF,IAAOD,EAAeC,OAOvC86C,IAAmC,KAAAtQ,gBAAeqQ,IAA6BE,GACjFA,EAAqBj8C,OAAS,IAO5Bk8C,GAA+BrF,IAAwB/9C,IACzD,KAAA4yC,gBAAeqP,IAAe1nC,IACjC,MAAM8oC,EAASloC,GAAqBZ,EAAQva,GAE5C,OADA,QAAUqjD,EAAQ,oBAAmB,EAAAz7C,EAAA,IAAe5H,kCAC7CqjD,CAAM,MAMRC,IAA0B,KAAA1Q,gBAAeoQ,IAAyBO,GACpEA,EAAcvgD,KAAK89C,MAKjB0C,IAAqC,KAAA5Q,gBAAe0Q,GAAyBrB,IAAc,CAACwB,EAAmBlpC,IACjHkpC,EAAoBtoC,GAAqBZ,EAAQkpC,EAAkBzjD,UAAOwB,IAKxEkiD,IAAiC,KAAA9Q,gBAAeoQ,IAAyBO,GAC3EA,EAAcvgD,KAAK29C,MAKjBgD,IAA4C,KAAA/Q,gBAAe8Q,GAAgCzB,IAAc,CAACwB,EAAmBlpC,IAC/HkpC,EAAoBtoC,GAAqBZ,EAAQkpC,EAAkBzjD,UAAOwB,IAKxEoiD,IAA6B,KAAAhR,gBAAeoQ,IAAyBO,GACvEA,EAAcvgD,KAAKw9C,MAKjBqD,IAAwC,KAAAjR,gBAAegR,GAA4B3B,IAAc,CAACwB,EAAmBlpC,IACvHkpC,EAAoBtoC,GAAqBZ,EAAQkpC,EAAkBzjD,UAAOwB,I,2BChPrF,MAAM,IAAa,KAAAoxC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMysB,aAIxD0hB,IAAmB,KAAAlR,gBAAe,IAAaj9B,GAAUA,EAAMysB,aAI/D2hB,IAAqB,KAAAnR,gBAAekR,IAAmB1hB,GAA8B,SAAfA,IAItE4hB,IAAqB,KAAApR,gBAAekR,IAAmB1hB,GAA8B,SAAfA,ICT7E,IAAa,KAAAwQ,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMob,mBAcxDkzB,IAAkC,KAAArR,gBAAe,IAAasR,IACvE,IAAItiD,EACJ,OAAyD,QAAjDA,EAAKsiD,EAAsBnzB,wBAAqC,IAAPnvB,EAAgBA,OAAKJ,CAAS,IAUtF2iD,IAAkC,KAAAvR,gBAAe,IAAasR,KACvE,QAAUA,EAAsBlzB,0BAA2B,+DACpDkzB,EAAsBlzB,6BAUpBozB,IAAmC,KAAAxR,gBAAeuR,IAAkCnzB,GAA8BwS,GAA2CxS,KAS7JqzB,IAAkD,KAAAzR,gBAAeuR,IAAkCnzB,IAAgC,IAAIpvB,EAAIswB,EAAI,OAA+H,QAAvHA,EAAuD,QAAjDtwB,EAAKovB,EAA0B1N,oBAAiC,IAAP1hB,OAAgB,EAASA,EAAG+sB,8BAA2C,IAAPuD,EAAgBA,EAAK,EAAE,IAIpToyB,IAA4C,KAAA1R,gBAAe,IAAasR,KAC1E,aAA8D1iD,IAApD0iD,EAAsBjzB,0BAAyC,+DAClEizB,EAAsBjzB,6BASpBszB,IAAiC,KAAA3R,gBAAe0R,GAA2CL,IAAiC,CAACO,EAAkBntB,KACxJ,GAAKmtB,EAML,OADA,aAAiChjD,IAAvB61B,GACHA,EAAmBotB,UAAU,IAQ3BC,IAAgC,KAAA9R,gBAAeoR,GAAoBC,IAAiC,CAACU,EAActtB,KAC5H,IAAIz1B,EACJ,OAAI+iD,EACO,SAEuG,QAA1G/iD,EAAKy1B,aAA+D,EAASA,EAAmButB,YAAyB,IAAPhjD,EAAgBA,EAAK,QAAQ,IAO9IijD,IAA2C,KAAAjS,gBAAe,IAAasR,IAChF,IAAItiD,EACJ,OAA2E,QAAnEA,EAAKsiD,EAAsBhzB,0CAAuD,IAAPtvB,EAAgBA,EAAK,EAAE,ICrFxG,IAAa,KAAAgxC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMmlC,OAMxDgK,IAA4B,KAAAlS,gBAAe,IAAaj9B,KACjE,QAAUA,EAAMyvB,WAAY,iDACrBzvB,EAAMyvB,cAWJ2f,IAA2B,KAAAnS,gBAAe,IAAaj9B,IAChE,IAAI/T,EACJ,OAA2C,QAAnCA,EAAK+T,EAAMhB,0BAAuC,IAAP/S,EAAgBA,OAAKJ,CAAS,IAUxEwjD,IAAwC,KAAApS,gBAAe,IAAaj9B,IAC7E,IAAI/T,EAAIswB,EACR,OAAwG,QAAhGA,EAAyC,QAAnCtwB,EAAK+T,EAAMhB,0BAAuC,IAAP/S,OAAgB,EAASA,EAAGmkC,qBAAkC,IAAP7T,EAAgBA,OAAK1wB,CAAS,IAWrIyjD,IAAiE,KAAArS,gBAAeoS,IAAwCjf,IACjI,GAAKA,EAAL,CAGA,IAAI,QAAoBA,GAAgB,CACpC,MAAQ/lC,IAAK+C,EAAGL,IAAKwiD,GAAOnf,EAAeof,GAAa,SAAOpf,EAAe,CAAC,MAAO,QACtF,OAAO5pC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+gD,GAAa,CAAEn/C,MAAO,gBAAiB+X,YAAa,IAC/F,CACK,CACD,MAAQhe,WAAYgD,EAAG/C,IAAKklD,EAAIxiD,IAAK0iD,GAAQrf,EAC7C,OADyE,SAAOA,EAAe,CAAC,aAAc,MAAO,OAEzH,CARA,CAQA,IAWSsf,IAAqB,KAAAzS,gBAAemS,IAA2BpvC,IACxE,IAAI/T,EACJ,OAA0E,QAAlEA,EAAK+T,aAAqC,EAASA,EAAM3V,WAAwB,IAAP4B,EAAgBA,OAAKJ,CAAS,IAWvG8jD,IAAoB,KAAA1S,gBAAemS,IAA2BpvC,IACvE,IAAI/T,EACJ,OAAiF,QAAzEA,EAAK+T,aAAqC,EAASA,EAAM5V,kBAA+B,IAAP6B,EAAgBA,OAAKJ,CAAS,IAW9G+jD,IAAqB,KAAA3S,gBAAemS,IAA2BpvC,IACxE,IAAI/T,EACJ,OAA0E,QAAlEA,EAAK+T,aAAqC,EAASA,EAAMjT,WAAwB,IAAPd,EAAgBA,OAAKJ,CAAS,IAWvGgkD,IAAuB,KAAA5S,gBAAe0S,IAAoB3pD,GAC5DA,GAAK,QAAMA,EAAI,4BAAyB6F,IAWtCikD,IAAwB,KAAA7S,gBAAe2S,IAAqB7iD,GAC9DA,GAAM,QAAOA,QAAOlB,IAOlBkkD,IAAuB,KAAA9S,gBAAeyS,GAAoB,MAS1DM,IAAuB,KAAA/S,gBAAekS,IAA4BnvC,GACpEA,EAAM3P,QAOJ4/C,IAA6B,KAAAhT,gBAAekS,IAA4BnvC,GAC1EA,EAAMoI,cAOJ8nC,IAAsB,KAAAjT,gBAAekS,IAA4BnvC,IAC1E,IAAI/T,EACJ,OAA6B,QAArBA,EAAK+T,EAAM4vB,YAAyB,IAAP3jC,EAAgBA,EAAK,EAAE,IAOnDkkD,IAA6B,KAAAlT,gBAAekS,IAA4BnvC,GAC1EA,EAAMuvB,cAOJ6gB,IAA2B,KAAAnT,gBAAekT,IAA6B57C,GAC9D,YAAXA,IAOE87C,IAA4B,KAAApT,gBAAekS,IAA4BnvC,IAChF,IAAI/T,EACJ,OAAiC,QAAzBA,EAAK+T,EAAM8vB,gBAA6B,IAAP7jC,GAAgBA,CAAU,IAO1DqkD,IAA2B,KAAArT,gBAAekS,IAA2B,EAAG5f,cAAaO,eAAe,CAC7GP,cACAO,eAYEygB,IAA+C,KAAAtT,gBAAeoS,IAAwCmB,GACjGA,aAAuE,EAASA,EAAuBzhD,UAS5G0hD,IAAkD,KAAAxT,gBAAesT,IAA+CG,IAC1GA,QAA2DA,EAAmB,IAAIrjD,KAAK,QAS7FsjD,IAAwD,KAAA1T,gBAAesT,IAA+CG,IAChHA,QAA2DA,EAAmB,IAAIvjD,OAAO,OAS/FyjD,IAAgC,KAAA3T,gBAAe,IAAaj9B,IAC9D,IAAI/T,EACJ,OAA2C,QAAnCA,EAAK+T,EAAMhB,0BAAuC,IAAP/S,OAAgB,EAASA,EAAGoE,KAAK,IASlFwgD,IAAiC,KAAA5T,gBAAe,IAAaj9B,IAC/D,IAAI/T,EACJ,OAA2C,QAAnCA,EAAK+T,EAAMhB,0BAAuC,IAAP/S,OAAgB,EAASA,EAAG2Y,MAAM,IAO5EksC,IAA4B,KAAA7T,gBAAewT,GAAiD1H,IAA+B,CAACgI,EAAqBC,KAClJ,KAAQD,EAAqBC,KAO5BC,IAAkC,KAAAhU,gBAAe0T,GAAuD7H,IAAqC,CAACoI,EAA2BC,KAC1K,KAAQD,EAA2BC,KAOlCC,IAAyB,KAAAnU,gBAAe6T,GAA2BG,IAAiC,CAACI,EAAqBC,IAC5HD,GAAuBC,IAOrBC,IAAuB,KAAAtU,gBAAe2T,GAA+BZ,IAAsB,CAACwB,EAAgBC,IAC9GA,IAAiBD,IAOfE,IAAwB,KAAAzU,gBAAe4T,GAAgCtE,IAAmB,CAACoF,EAAiBC,KAC7G,KAAQA,EAAeD,KAOtBE,IAAyB,KAAA5U,gBAAe8S,GAAsBxD,GAAmB6E,GAAwBG,GAAsBG,IAAuB,CAACI,EAAOltC,EAAQmtC,EAAkBC,EAAgBC,IAC7MH,IACQ,SAAuBltC,GAE5B,CAACmtC,EAAkBC,EAAgBC,GAAiBr4B,KAAK5T,WAKvDksC,IAAmC,KAAAjV,gBAAemS,GAA0BD,GAA2BzG,GAA+BC,GAA6B4D,GAAmB+B,IAAiC,CAACtvC,EAAoBmzC,EAAqBjyC,EAAyBE,EAAuBwE,EAAQwW,KAClU,MAAMg3B,EAAoB,CACtB/nD,IAAK2U,aAA+D,EAASA,EAAmB3U,IAChG0C,IAAKiS,aAA+D,EAASA,EAAmBjS,IAChG3C,WAAY4U,aAA+D,EAASA,EAAmB5U,YAErGioD,GAAerzC,aAA+D,EAASA,EAAmB8nC,SAAW,CAAEA,QAAS9nC,EAAmB8nC,SAAY,CAAC,EACtK,OAAOtgD,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAEjC,KAAM,cAAgB2lD,GAAsBC,GAAoB,CAAEhiB,cAAe5pC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2R,GAAwBF,GAA0B0E,SAChOwW,qBAAqBi3B,EAAY,IC/SnCC,GAA0B,kBAgBzB,SAASC,GAAoB/mD,GAChC,OAAOA,EAAIpB,WAAW+K,WAAWm9C,GACrC,CAoBO,SAASE,GAA8BpmD,GAC1C,OAAOA,EAAMvG,KAAK8G,IACd,KAAK,SAAsBA,GACvB,OAAOA,EAEX,IAAI,QAA0BA,EAAKX,UAC/B,QAAsBW,EAAKX,SAC3B0G,EAAyB/F,EAAKX,QAAS,CACvC,MAAMymD,EA7ClB,WACI,MAAMzsD,EAAK,GAAGssD,OAA2B,WACzC,MAAO,CACHjoD,KAAK,QAAMrE,GACXoE,WAAYpE,EACZ+G,IAAK/G,EAEb,CAsCsC0sD,GAC1B,OAAOlsD,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQxF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKX,QAASymD,IAC1G,CACA,OAAO9lD,CAAI,GAEnB,CC9DA,MAAM,IAAa,KAAAswC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAM/Y,SAUxD0rD,IAAe,KAAA1V,gBAAe,IAAa2V,KACpD,QAAUA,EAAY3rD,OAAQ,mDACvB2rD,EAAY3rD,UAWV4rD,IAAyB,KAAA5V,gBAAe0V,IAAe3yC,IAChE,IAAI/T,EACJ,OAAyC,QAAjCA,EAAK+T,EAAMob,wBAAqC,IAAPnvB,EAAgBA,OAAKJ,CAAS,IAOtEinD,IAAiB,KAAA7V,gBAAe0V,IAAe3yC,IACxD,IAAI/T,EACJ,OAAiC,QAAzBA,EAAK+T,EAAMhX,gBAA6B,IAAPiD,EAAgBA,OAAKJ,CAAS,IAO9DknD,IAAe,KAAA9V,gBAAe0V,IAAe3yC,IACtD,IAAI/T,EACJ,OAA+B,QAAvBA,EAAK+T,EAAMiY,cAA2B,IAAPhsB,EAAgBA,OAAKJ,CAAS,IAO5DmnD,IAAmB,KAAA/V,gBAAe0V,IAAe3yC,IAC1D,IAAI/T,EACJ,OAAmC,QAA3BA,EAAK+T,EAAMgb,kBAA+B,IAAP/uB,EAAgBA,OAAKJ,CAAS,IAOhEonD,IAAqB,KAAAhW,gBAAe0V,IAAe3yC,IAC5D,IAAI/T,EACJ,OAAqC,QAA7BA,EAAK+T,EAAM8c,oBAAiC,IAAP7wB,EAAgBA,OAAKJ,CAAS,IAWlEqnD,IAAiC,KAAAjW,gBAAe0V,IAAe3yC,IACxE,IAAI/T,EACJ,OAA2C,QAAnCA,EAAK+T,EAAM2e,0BAAuC,IAAP1yB,EAAgBA,OAAKJ,CAAS,IAOxEsnD,IAAoB,KAAAlW,gBAAe0V,IAAe3yC,IAC3D,IAAI/T,EACJ,OAAoC,QAA5BA,EAAK+T,EAAM+d,mBAAgC,IAAP9xB,EAAgBA,OAAKJ,CAAS,IAOjEunD,IAAkB,KAAAnW,gBAAe0V,IAAe3yC,IACzD,IAAI/T,EAAIswB,EACR,OAAsB,MAAlBvc,EAAMhX,SACC,SAEPgX,EAAMhX,SAASqqD,4BAA8BrzC,EAAMhX,SAASsqD,yBACrD,SAE+E,QAAlF/2B,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGsnD,iBAA8B,IAAPh3B,EAAgBA,EAAK,QAAQ,IAUtHi3B,IAAmB,KAAAvW,gBAAe0V,IAAe3yC,IAC1D,IAAI/T,EACJ,OAAmC,QAA3BA,EAAK+T,EAAM4e,kBAA+B,IAAP3yB,GAAgBA,CAAU,IAU5DwnD,IAAmB,KAAAxW,gBAAe0V,IAAe3yC,IAC1D,IAAI/T,EACJ,OAAmC,QAA3BA,EAAK+T,EAAM6e,kBAA+B,IAAP5yB,GAAgBA,CAAU,IAQ5DynD,IAAiB,KAAAzW,gBAAe0V,IAAe3yC,IACxD,IAAI/T,EACJ,OAAiC,QAAzBA,EAAK+T,EAAM8e,gBAA6B,IAAP7yB,GAAgBA,CAAU,IAO1D0nD,IAAuB,KAAA1W,gBAAe0V,IAAe3yC,IAC9D,IAAI/T,EACJ,OAAuC,QAA/BA,EAAK+T,EAAM+e,sBAAmC,IAAP9yB,GAAgBA,CAAU,IAQhE2nD,IAA6B,KAAA3W,gBAAe0V,IAAe3yC,IACpE,IAAI/T,EACJ,OAA6C,QAArCA,EAAK+T,EAAMgf,4BAAyC,IAAP/yB,GAAgBA,CAAU,IAOtE4nD,IAAkD,KAAA5W,gBAAe0V,IAAe3yC,IACzF,IAAI/T,EACJ,OAAkE,QAA1DA,EAAK+T,EAAMif,iDAA8D,IAAPhzB,GAAgBA,CAAU,IAO3F6nD,IAAgC,KAAA7W,gBAAe0V,IAAe3yC,IACvE,IAAI/T,EACJ,OAA4C,QAApCA,EAAK+T,EAAMqf,2BAAwC,IAAPpzB,GAAgBA,CAAU,IAUrE8nD,IAAmB,KAAA9W,gBAAe0V,IAAe3yC,IAC1D,IAAI/T,EAAIswB,EACR,OAAuG,QAA/FA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG+nD,8BAA2C,IAAPz3B,EAAgBA,OAAK1wB,CAAS,IAOpIooD,IAAmC,KAAAhX,gBAAe0V,IAAe3yC,IAC1E,IAAI/T,EAAIswB,EACR,OAA2G,QAAnGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGioD,kCAA+C,IAAP33B,GAAgBA,CAAU,IAOpI43B,IAA6C,KAAAlX,gBAAe0V,IAAe3yC,IACpF,IAAI/T,EAAIswB,EACR,OAAqH,QAA7GA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGmoD,4CAAyD,IAAP73B,GAAgBA,CAAU,IAO9I83B,IAAwB,KAAApX,gBAAe0V,IAAe3yC,IAC/D,IAAI/T,EAAIswB,EACR,OAAgG,QAAxFA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGqoD,uBAAoC,IAAP/3B,EAAgBA,EAAK,YAAY,IAOhIg4B,IAAsC,KAAAtX,gBAAe0V,IAAe3yC,IAC7E,IAAI/T,EAAIswB,EACR,OAA8G,QAAtGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGuoD,qCAAkD,IAAPj4B,GAAgBA,CAAU,IAOvIk4B,IAAoC,KAAAxX,gBAAe0V,IAAe3yC,IAC3E,IAAI/T,EAAIswB,EACR,OAA4G,QAApGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGyoD,mCAAgD,IAAPn4B,GAAgBA,CAAS,IAOpIo4B,IAA2C,KAAA1X,gBAAe0V,IAAe3yC,IAClF,IAAI/T,EAAIswB,EACR,OAAmH,QAA3GA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG2oD,0CAAuD,IAAPr4B,GAAgBA,CAAU,IAO5Is4B,IAAoC,KAAA5X,gBAAe0V,IAAe3yC,IAC3E,IAAI/T,EAAIswB,EACR,OAA4G,QAApGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG6oD,mCAAgD,IAAPv4B,GAAgBA,CAAU,IAOrIw4B,IAAoC,KAAA9X,gBAAe0V,IAAe3yC,IAC3E,IAAI/T,EAAIswB,EACR,OAA4G,QAApGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG+oD,mCAAgD,IAAPz4B,GAAgBA,CAAS,IAOpI04B,IAAqC,KAAAhY,gBAAe0V,IAAe3yC,IAC5E,IAAI/T,EAAIswB,EACR,OAA6G,QAArGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGipD,oCAAiD,IAAP34B,GAAgBA,CAAU,IAOtI44B,IAAyC,KAAAlY,gBAAe0V,IAAe3yC,IAChF,IAAI/T,EAAIswB,EACR,OAAiH,QAAzGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGmpD,wCAAqD,IAAP74B,GAAgBA,CAAU,IAO1I84B,IAA4C,KAAApY,gBAAe0V,IAAe3yC,IACnF,IAAI/T,EAAIswB,EACR,OAAoH,QAA5GA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGqpD,2CAAwD,IAAP/4B,GAAgBA,CAAU,IAO7Ig5B,IAA6C,KAAAtY,gBAAe0V,IAAe3yC,IACpF,IAAI/T,EAAIswB,EACR,OAAqH,QAA7GA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGupD,4CAAyD,IAAPj5B,GAAgBA,CAAU,IAO9Ik5B,IAA+B,KAAAxY,gBAAe0V,IAAe3yC,IACtE,IAAI/T,EAAIswB,EACR,OAAuG,QAA/FA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGypD,8BAA2C,IAAPn5B,GAAgBA,CAAU,IAOhIo5B,IAAsC,KAAA1Y,gBAAe0V,IAAe3yC,IAC7E,IAAI/T,EAAIswB,EACR,OAA8G,QAAtGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG2pD,qCAAkD,IAAPr5B,GAAgBA,CAAU,IAOvIs5B,IAA6C,KAAA5Y,gBAAe0V,IAAe3yC,IACpF,IAAI/T,EAAIswB,EACR,OAAqH,QAA7GA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG6pD,4CAAyD,IAAPv5B,GAAgBA,CAAS,IAO7Iw5B,IAAiC,KAAA9Y,gBAAe0V,IAAe3yC,IACxE,IAAI/T,EAAIswB,EACR,OAA2G,QAAnGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG6rC,kCAA+C,IAAPvb,GAAgBA,CAAU,IAOpIy5B,IAAyC,KAAA/Y,gBAAe0V,IAAe3yC,IAChF,IAAI/T,EAAIswB,EACR,QAAoH,QAAzGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGgqD,wCAAqD,IAAP15B,IAAgBA,EAAU,IAO7I25B,IAAsC,KAAAjZ,gBAAe0V,IAAe3yC,IAC7E,IAAI/T,EAAIswB,EACR,QAAiH,QAAtGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGkqD,qCAAkD,IAAP55B,IAAgBA,EAAW,IAO3I65B,IAAyC,KAAAnZ,gBAAe0V,IAAe3yC,IAChF,IAAI/T,EAAIswB,EAAIK,EAAIoB,EAChB,MAAMq4B,EAA+G,QAAnG95B,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGqqD,kCAA+C,IAAP/5B,GAAgBA,EACvIg6B,EAAkH,QAArGv4B,EAA+B,QAAzBpB,EAAK5c,EAAMhX,gBAA6B,IAAP4zB,OAAgB,EAASA,EAAG45B,oCAAiD,IAAPx4B,GAAgBA,EAChJ,OAAQq4B,GAAYE,CAAS,IAOpBE,IAA6C,KAAAxZ,gBAAe0V,IAAe3yC,IACpF,IAAI/T,EAAIswB,EACR,QAAwH,QAA7GA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGyqD,4CAAyD,IAAPn6B,IAAgBA,EAAW,IAOlJo6B,IAAgC,KAAA1Z,gBAAe0V,IAAe3yC,GAAUA,EAAMqd,0BAA2B,IAMzGu5B,IAAkC,KAAA3Z,gBAAe0V,IAAe3yC,IACzE,IAAI/T,EACJ,OAAkD,QAA1CA,EAAK+T,EAAMmf,iCAA8C,IAAPlzB,GAAgBA,CAAU,IAO3E4qD,IAAoC,KAAA5Z,gBAAe0V,IAAe3yC,IAAY,IAAI/T,EAAI,SAAqC,QAAzBA,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG6qD,mBAA6B,IAM5LC,IAAoC,KAAA9Z,gBAAe0V,IAAe3yC,IAAY,IAAI/T,EAAI,SAAqC,QAAzBA,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAG+qD,qCAA+C,IAM9MC,IAA8C,KAAAha,gBAAe0V,IAAe3yC,IAAY,IAAI/T,EAAI,SAAqC,QAAzBA,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGirD,mCAA6C,IAMtNC,IAAiD,KAAAla,gBAAe0V,IAAe3yC,IAAY,IAAI/T,EAAI,SAAqC,QAAzBA,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGmrD,sCAAgD,IAM5NC,IAA4B,KAAApa,gBAAe0V,IAAe3yC,IACnE,IAAI/T,EACJ,OAAwC,QAAhCA,EAAK+T,EAAMsf,uBAAoC,IAAPrzB,GAAgBA,CAAU,IAOjEqrD,IAAmC,KAAAra,gBAAe0V,IAAe3yC,IAC1E,IAAI/T,EAAIswB,EACR,OAA2G,QAAnGA,EAA+B,QAAzBtwB,EAAK+T,EAAMhX,gBAA6B,IAAPiD,OAAgB,EAASA,EAAGsrD,kCAA+C,IAAPh7B,GAAgBA,CAAU,IAUpIi7B,IAA2B,KAAAva,gBAAeoY,GAA2CiC,IAAkC,CAACG,EAAwCC,IAClKD,GAA0CC,I,2BC1arD,MAcaC,GAdW7rC,GAAgB8rC,cAAc53C,GAAUA,EAAMlX,WAcxB+uD,UAMjCC,IAAoB,KAAA7a,gBAAe0a,IAAiB7uD,GACtDA,EAASjD,IAAI,QAOXkyD,IAAoB,KAAA9a,gBAAe0a,GAAgBza,IAA2B,CAACp0C,EAAU9B,IAC3F4H,EAAc9F,EAAU9B,EAAai5C,4BAOnC+X,GAAqB5P,IAAwB/9C,IAC/C,KAAA4yC,gBAAe8a,IAAoBjvD,GAC/BuB,GAAOvB,EAAS+E,IAAIxD,OCxCnCX,eAAeuuD,GAAwBziD,EAAK0iD,GACxC,MAAM,QAAEtxD,EAAO,UAAEuB,GAAcqN,EACzBlG,QAAeD,QAAQoC,IAAIymD,EAAYryD,KAAKwE,GAAQzD,EACrDuB,UAAUA,GACVW,WACA89C,WAAWv8C,GACX+xB,OAAOhvB,GAAM/C,OAClB,MAAO,CACH8tD,OAAQ7oD,EAAOnC,OAAO,MACtBg0C,QAAS7xC,EAAOnC,OAAO,MAE/B,CASO,SAAUirD,GAAgB5iD,EAAK0iD,GAClC,MAAMG,QAA8B,QAAON,IACrCO,EAAgB,GAChBC,EAAqB,GAC3BL,EAAY1qD,SAASnD,IACjB,MAAMye,EAAUuvC,EAAsBxqD,IAAIxD,GACtCye,EACAwvC,EAAcjtD,KAAKyd,GAGnByvC,EAAmBltD,KAAKhB,EAC5B,IAEJ,MAAMmuD,QAAmB,QAAKP,GAAyBziD,EAAK+iD,GAC5D,MAAO,CACHtpD,SAAUL,EAAc,IAAI0pD,KAAkBE,EAAWL,SACzDA,OAAQK,EAAWL,OACnBhX,QAASqX,EAAWrX,QAE5B,CC5BO,SAAUsX,GAAsBjjD,EAAKiP,GACxC,MAAMoE,QAAa,QAAK6vC,GAA6BljD,GACrD,MAAO,CACHiyC,OAAO,SAAa5+B,EAAK4+B,MAAO,oBAChCkR,MAAO3iD,GAAkBR,EAAKqT,EAAK7J,mBAAoByF,EAAIhP,eAEnE,CACA,SAAUijD,GAA4BljD,GAClC,MAAMwJ,QAA2B,QAAOowC,IACxC,IAAI3H,EAAQ,GACZ,GAAIzoC,EAAoB,CAepB,MAAM45C,ECtCP,SAA2Bh0C,GAC9B,MAAMg0C,EAAyB,GAe/B,OAdIh0C,IACA,SAAWA,EAAQ,CACf6hC,eAAiBz6C,KACT,QAAgBA,KAChB4sD,EAAuBvtD,KAAKW,EAAO8c,SACnC9c,EAAOma,OAAO3Y,SAAS6Y,KACf,SAAiBA,IACjBuyC,EAAuBvtD,KAAKgb,EAAMqgC,OACtC,IAER,IAILkS,CACX,CDqBuCC,CAAkB75C,EAAmB4F,QAC9Dk0C,EAA+B,KAASF,EAAwB,MAChEG,QAAyB,QAAKX,GAAiB5iD,EAAKsjD,GACpD9vD,QAAiB,QAAO8pD,IACxBkG,QAAwB,QAAOxK,IAC/ByK,EAAyB36C,SAASy6C,EAAiB9pD,SAASb,UAClEq5C,QAAc,QAAKxF,GAAsCzsC,EAAKwJ,EAAoBi6C,EAAwBjwD,EAAUgwD,EACxH,MAMIvR,EAAQ7F,SADuB,QAAOiR,KAG1C,MAAO,CACHpL,QACAzoC,qBAER,CErDO,SAASk6C,MAAiBC,GAC7B,OAAS9zB,KAAOA,GAAI8zB,EAAOv/B,MAAM/B,GAAMA,EAAEwN,IAC7C,C,gBCNO,SAAS+zB,GAA6B1zB,EAAiB9pB,EAAuBmF,GACjF,IAAI9U,EAAIswB,EAMR,OAD2B2J,GAA8BtqB,EADzCgqB,IAHK,SAAqBF,EAAgBC,QAClB,QAAjC15B,EAAKy5B,EAAgBC,cAA2B,IAAP15B,OAAgB,EAASA,EAAG65B,UACpC,QAAjCvJ,EAAKmJ,EAAgBC,cAA2B,IAAPpJ,OAAgB,EAASA,EAAGsJ,UAGlDjM,MAAMkM,IAAc,QAAgB/kB,EAAY+kB,UAAWA,EAAUU,gBAAgB6yB,SACnH,CCeO,SAASC,GAA6B5zB,EAAiB6zB,EAAuB,IACjF,MAAMC,EAAU/zB,GAA8BC,GAC9C,OAAO6zB,EAAqB3/B,MAAMyL,GACvBm0B,IAAY/zB,GAA8BJ,IAEzD,CAoBO,SAASo0B,GAA8BvzC,GAC1C,OAAO,KAAQA,EACV/Y,OAAO,GAAyB,MAAoB,QACpDtH,KAAK6zD,IACF,SAAmBA,IACJ,SAA2CA,EAAUhT,OAAOj8C,KAG7D5E,KAAK8zD,IAAU,QAAMA,EAAMvvD,WAAY,iBAG9C,CAACsvD,EAAUhT,OAAO3lC,YAAa24C,EAAUhT,OAAOkT,wBAGnE,CC7DO,MAAMC,IAAsB,SAAoB,CACnD9tC,SAAW+tC,IAAiB,QAAgBC,GAAsBD,MAEhEC,GAAyBC,ICNpB,CAAEjtD,IDOKitD,EAAQjtD,ICPR3C,WDOa4vD,EAAQ5vD,aEDjC6vD,GADkBJ,GAAoBjC,cAAc53C,GAAUA,EAAM85C,eACvBjC,UAKtCqC,IAAqB,KAAAjd,gBAAegd,IAA6BH,GACnEnrD,EAA4BmrD,KAO1BK,GAAgC,MAAS9vD,IAC3C,KAAA4yC,gBAAeid,IAAqBJ,GAChCA,EAAajsD,IAAIxD,MAE7B,MCpBG,IAAa,KAAA4yC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMsnC,uBAOxD8S,GANYrW,GAAkC6T,aAAa,IAMbC,UAM9CwC,IAAgC,KAAApd,gBAAemd,IAA6BrxD,GAC9E4F,EAA4B5F,KCf1BuxD,IAAsC,SAAoB,CACnEvuC,SAAWjgB,IAAc,EAAAmG,EAAA,IAAenG,EAAUzB,OCAhD,IAAa,KAAA4yC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMu6C,yBAOxDC,GANYF,GAAoC1C,aAAa,IAMbC,UAMhD4C,IAAkC,KAAAxd,gBAAeud,IAA+BzxD,GAClF4F,EAA4B5F,KCThC,SAAS2xD,GAAwBh1B,EAAiBi1B,EAAgBnlD,EAAKiP,GAC1E,IAAIxY,EACJ,IAAIU,EAAO+4B,EAEX,KAA6C,QAAtCz5B,EAAK0uD,EAAeb,oBAAiC,IAAP7tD,OAAgB,EAASA,EAAG2P,uBAC7E,MAAMpF,GAAyBhB,EAAKiP,EAAK,yBAG7C,IACI9X,EPZD,SAAuC+4B,EAAiBo0B,GAC3D,MAAM,OAAEn0B,GAAWD,EACnB,IAAI,SAAmBC,GAAS,CAC5B,MAAMi1B,EAA0Bn1B,GAA8BC,GAG9D,KAFqBo0B,EAAalxD,UAAY,IACJgxB,MAAMzrB,GAAMA,EAAE03B,QAAQQ,kBAAkB7lB,kBAAoBo6C,IAElG,MAAM,IAAIv0D,MAAM,iEAExB,CACA,IAAI,SAAqBs/B,GAAS,CAC9B,MAAMk1B,EAA4Bp1B,GAA8BC,GAGhE,KAFuBo0B,EAAarxD,YAAc,IACJmxB,MAAMzrB,GAAMA,EAAE23B,UAAUU,gBAAgBhmB,kBAAoBq6C,IAEtG,MAAM,IAAIx0D,MAAM,mEAExB,CACA,OAAOq/B,CACX,COPeo1B,CAA8BnuD,EAAMguD,EAAeb,aAAal+C,sBAC3E,CACA,MAAOm/C,GAEH,MAAMvkD,GAAyBhB,EAAKiP,EAAK,2DADnBs2C,EAAGrkD,UAE7B,CAEA,MAAMskD,EAAoB,CACtBC,cAAeN,EAAeO,uBAC9BC,YAAaR,EAAe5B,iBAAiB9pD,SAC7CmsD,gBAAiBT,EAAe5Z,qBAAqB9xC,SACrD2M,sBAAuB++C,EAAeb,aAAal+C,sBACnDy/C,0BAA2BV,EAAeU,2BAE9C,IACI1uD,EPiCD,SAAwC+4B,EAAiBs1B,GAC5D,IAAI,SAAmBt1B,GACnB,OAaR,SAA4CA,EAAiBs1B,GACzD,MAAM,OAAEtU,GAAWhhB,EACnB,IAAIghB,EAcA,OAAOhhB,EAdC,CACR,IAAIp2B,EACJ,MAAMgsD,EAAkBN,EAAkBC,cAAcptD,IAAI64C,IACxDsU,EAAkBK,0BAA0BxtD,IAAI64C,GAMpD,GALI4U,IAGAhsD,EAAS9I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGi3B,GAAkB,CAAEghB,QAAQ,QAAM4U,EAAgBlxD,WAAY,0BAEvGkF,EACA,OAAOA,CAEf,CAIA,MAAMjJ,MAAM,2BAChB,CAhCek1D,CAAmC71B,EAAiBs1B,GAE/D,IAAI,SAAiBt1B,GACjB,OA8BR,SAA0CA,EAAiBs1B,GACvD,MAAM,OAAEtU,GAAWhhB,EACnB,IAAIp2B,EACJ,GAAIo3C,EAAQ,CACR,MAAM8U,EAAiBR,EAAkBG,YAAYttD,IAAI64C,GACrD8U,IAEAlsD,EAAS9I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGi3B,GAAkB,CAAEghB,OAAQ8U,EAAe1yC,QAAQze,MAEpG,CACA,GAAIiF,EACA,OAAOA,EAEX,MAAMjJ,MAAM,yBAChB,CA5Ceo1D,CAAiC/1B,EAAiBs1B,GAE7D,IAAI,SAAmBt1B,GACnB,OA0CD,SAA4CA,EAAiBs1B,GAQhE,OAPYvB,GAA8B,CAAC/zB,IACvCl4B,SAASpD,IAET,IADqB4wD,EAAkBI,gBAAgBvtD,IAAIzD,GAEvD,MAAM,IAAI/D,MAAM,yEAAwE,EAAA4L,EAAA,IAAe7H,KAC3G,IAEGs7B,CACX,CAnDeg2B,CAAmCh2B,EAAiBs1B,GAE/D,IAAI,SAAsBt1B,GACtB,OAiDD,SAA+CA,EAAiBs1B,GAEnE,IADqBA,EAAkBI,gBAAgBvtD,IAAI63B,EAAgBghB,OAAO3lC,aAE9E,MAAM,IAAI1a,MAAM,oCAAmC,EAAA4L,EAAA,IAAeyzB,EAAgBghB,OAAO3lC,gBAE7F,MAAM64C,EAAuBoB,EAAkBI,gBAAgBvtD,IAAI63B,EAAgBghB,OAAOkT,sBAC1F,IAAKA,EACD,MAAM,IAAIvzD,MAAM,6CAA4C,EAAA4L,EAAA,IAAeyzB,EAAgBghB,OAAOkT,yBAEtG,GAA6C,aAAzCA,EAAqB+B,gBACrB,MAAM,IAAIt1D,MAAM,0EAEpB,IAAK+yD,GAA6B1zB,EAAiBs1B,EAAkBp/C,sBAAuBg+C,GACxF,MAAM,IAAIvzD,MAAM,6BAA4B,EAAA4L,EAAA,IAAe2nD,EAAqBvvD,oCAEpF,OAAOq7B,CACX,CAjEek2B,CAAsCl2B,EAAiBs1B,GAElE,MAAM,IAAI30D,MAAM,2CACpB,CO/Cew1D,CAA+BlvD,EAAMquD,EAChD,CACA,MAAOD,GAEH,MAAMvkD,GAAyBhB,EAAKiP,EAAK,0CADnBs2C,EAAGrkD,UAE7B,CACA,OAAO/J,CACX,CACO,SAAUmvD,GAAkB/1C,EAAWg2C,EAAgBvmD,GAC1D,MAAMwmD,EAAwC7B,GAA8Bp0C,GACtE+zC,QAAqB,QAAOkC,GAC5Bd,QAA+B,QAAOb,IACtCgB,QAAkC,QAAOZ,IACzCvC,EAAiC6D,EPG1B5uD,OAAO,OAAkBtH,KAAK8G,GAASA,EAAK+5C,SOFnDqS,QAAyB,QAAKX,GAAiB5iD,EAAK0iD,GACpD+D,EAAiBxC,GAA8BsC,GAErD,MAAO,CACHjC,eACAoB,yBACAnC,mBACAhY,2BAL+B,QAAKF,GAA4BrrC,EAAKymD,GAMrEZ,4BAER,CChDO,SAAUa,GAAe1mD,EAAKiP,EAAK6zB,GACtC,MAGMnN,SAH8B,QAAImN,EACnCnrC,OAAO,MACPtH,KAAKmG,IAAW,QAAKmwD,GAAiC3mD,EAAKiP,EAAKzY,OACzBmB,QAAO,EAAGg+B,mBAAoBA,EAAc55B,OAAS,IACpE,IAAzB45B,EAAc55B,aACR,QAAIg7B,GAAUlB,6BAA6BiN,EAAQzyC,IAAI,eAGvD,QAAIslC,EAActlC,KAAKu2D,IAAc,QAAKC,GAA2B7mD,EAAKiP,EAAK23C,EAAUpwD,OAAQowD,EAAUjxB,wBAC3G,QAAIoB,GAAU3B,0BAA0BO,EAActlC,KAAKwgB,GAAUA,EAAMra,OAAO3B,QAEhG,CACA,SAAUgyD,GAA0B7mD,EAAKiP,EAAKzY,EAAQm/B,GAClD,MAAMmxB,EAA6BtwD,EAAOma,OAAOhZ,QAAQusD,IAAeJ,GAA6BI,EAAWvuB,WAC1G,QAAIpgB,GAAc1C,8BAA8B,CAClDhe,KAAK,QAAU2B,GACfka,iBAAkBo2C,WAEhB,QAAIxiD,GAA2BtE,GAAK,QAAUxJ,GAASm/B,EAAe1mB,EAAIhP,eACpF,CACA,SAAU0mD,GAAgC3mD,EAAKiP,EAAKzY,GAChD,MAAM2uD,QAAuB,QAAKmB,IAAmB,QAAU9vD,GAASA,EAAOma,OAAQ3Q,GACvF,OAAKmlD,EAAeb,aAeb,CAAE3uB,cATa,KAAQn/B,EAAOma,QAASuzC,IAC1C,IAEI,OADAgB,GAAwBhB,EAAWiB,EAAgBnlD,EAAKiP,GACjD,EACX,CACA,MAAOxY,GACH,MAAO,CAACytD,EACZ,KAEoB1tD,UAdb,CACHm/B,cAAe,GACfn/B,SAaZ,CCxCO,SAAUuwD,GAA+BjkB,GAC5C,MACMnN,SAD8B,QAAImN,EAAQzyC,KAAKmG,IAAW,QAAKwwD,GAAsCxwD,OAC/DmB,QAAO,EAAGg+B,mBAAoBA,EAAc55B,OAAS,IACpE,IAAzB45B,EAAc55B,aACR,QAAIg7B,GAAUhB,0CAA0C+M,UAGxD,QAAI/L,GAAUxB,yCAAyCI,GAErE,CACA,SAAUqxB,GAAqCxwD,GAC3C,MAAMgwD,EAAwC7B,IAA8B,QAAUnuD,IAChF8tD,QAAqB,QAAOkC,GAClC,KAAMlC,aAAmD,EAASA,EAAal+C,uBAE3E,MAAO,CACH5P,SACAm/B,cAAe,IAGvB,MAAMgT,QAAqB,QAAO+B,IAClC,OAAOl0C,EAAOma,OAAOhZ,OAAO,OAAoBgD,QAAO,CAACwpC,EAAKjU,KAC7C+zB,GAA8B,CAAC/zB,IACf9L,MAAMxvB,IAC9B,MAAM2W,EAAco9B,EAAatwC,IAAIzD,GACrC,QAAK2W,IAIGq4C,GAA6B1zB,EAAiBo0B,EAAal+C,sBAAuBmF,EAAY,KAGtG44B,EAAIxO,cAAc9/B,KAAKq6B,GAEpBiU,IACR,CAAE3tC,SAAQm/B,cAAe,IAChC,CCzCA,MAAMsxB,IAA8B,SAAY,CAC5Cx5C,KAAM,yBACNC,aAAco3C,GAAoCruC,kBAClD9I,SAAU,CACNu5C,0BAA2BpC,GAAoCqC,cAG1DC,GAAqCH,GAA4Bp5C,QACjEw5C,GAAgCJ,GAA4Bl5C,QCJlE,SAAUu5C,GAA2BtnD,EAAK8iC,GAC7C,MAAMykB,QAAgC,QAAO1C,IACvC2C,EAAwB,KAAQ1kB,EAAQnrC,OAAO,MAAiBtH,KAAI,EAAGsgB,YAAaA,EAAOhZ,OAAO,UAElG8vD,EAD2B,KAAQD,EAAsBn3D,KAAI,EAAG6gD,YAAaA,KAClBv5C,QAAQ9C,IAAS0yD,EAAwBlvD,IAAIxD,KAExGkwD,SAD2B,QAAK2C,GAAuB1nD,EAAKynD,IAChBp3D,KAAKiG,IACnD,IAAIG,EACJ,OAAOzF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3C,GAAY,CAAEuE,MAAkC,QAA1BpE,EAAKH,EAAUuE,aAA0B,IAAPpE,EAAgBA,EAAK,GAAIkxD,6BAA6CtxD,IAApBC,EAAUuE,MAAsB,YAAc,aAAc,UAE3M,QAAIwsD,GAA8BH,0BAA0BnC,GACtE,CACA7wD,eAAewzD,GAAsB1nD,EAAK4nD,GACtC,IACI,aAAa5nD,EAAI5O,QACZuB,UAAUqN,EAAIrN,WACdY,aACAs0D,4BAA4BD,EACrC,CACA,MAAOnxD,GAEH,MAAO,EACX,CACJ,CClBO,SAAUqxD,GAAwB9nD,EAAKiP,GAC1C,MAAQ/O,SAAS,WAAE+2B,EAAU,wBAAEwb,GAAyB,cAAExyC,GAAmBgP,EAI7E,GAAIwjC,EAAwBxoC,eAAgB,CACxC,MAAMoJ,QAAa,QAAK4vC,GAAuBjjD,EAAKiK,GAAsBhK,UACpE,SAAI,SAAa,CACnBoT,EAAK4+B,MACLlb,GAAUlC,8BACVkC,GAAU7B,wDACVoC,GAAkBJ,cAAcD,YAE9B,QAAI5jB,EAAK8vC,MACnB,YAEU,SAAI,SAAa,CACnBpsB,GAAUlC,8BACVkC,GAAU7B,wDACVoC,GAAkBJ,cAAcD,MAGxC,GAAmB,SAAfA,EAAuB,CACvB,MAAM6L,QAAgB,QAAOgV,UACvB,QAAKwP,GAA4BtnD,EAAK8iC,SACtC,QAAK4jB,GAAgB1mD,EAAKiP,EAAK6zB,SAC/B,QAAKikB,GAAgCjkB,EAAQnrC,OAAO,MAC9D,CACA,OpKnCG,SAA2BqI,EAAKi3B,EAAYh3B,GAC/C,MAAO,CACHjJ,KAAM,mCACNgJ,MACAC,gBACAC,QAAS,CACL+2B,cAGZ,CoK0BW8wB,CAAkB/nD,EAAKi3B,EAAYh3B,EAC9C,CCpCO,MAAM+nD,GAAyB1xD,IAClC,MAAM,QAAE2xD,EAAO,YAAEr1C,EAAW,WAAEhe,EAAU,IAAEC,EAAG,MAAEgG,EAAK,QAAEqW,EAAO,IAAE3Z,EAAG,KAAE6iC,EAAI,YAAEL,EAAW,SAAEO,GAAahkC,EACpG,MAAO,CACH2xD,UACAr1C,cACAhe,aACAC,MACAgG,QACAqW,UACA3Z,MACA6iC,OACAL,cACAO,WACA4tB,aAAc,OACjB,ECKL,SAASC,GAAgBnoD,EAAKooD,GAC1B,OAAOpoD,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWY,aAAa40D,gBAAgBC,EAAQC,gBACrF,CACA,SAASC,GAAgBtoD,EAAKooD,GAC1B,MAAM,mBAAE5+C,EAAkB,gBAAE6+C,GAAoBD,EAEhD,OADA,QAAU5+C,GACHxJ,EAAI5O,QACNuB,UAAUqN,EAAIrN,WACdY,aACA+0D,gBAAgB9+C,EAAoB6+C,EAC7C,CACO,SAASE,GAAwBjyD,EAAWkyD,GAAiB,EAAOC,GAAmB,EAAMC,GAChG,IAAIC,EAAY,CAAC,EACjB,GAAID,EAAgB,CAChB,MAAQruB,qBAAsBuuB,GAAgCtyD,EAAWuyD,GAAgB,SAAOvyD,EAAW,CAAC,yBAU5G,OATAqyD,EACIH,GAAkBC,EACZ,CACE1uB,YAAa,UACbM,sBAAsB,GAExB,CACEN,YAAa,UAElB/oC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG4vD,GAAgBF,EAC3D,CACA,OAAOryD,CACX,CAOA,SAAUwyD,GAA2B75C,EAAKy5C,GACtC,IAAIjyD,EACJ,MAAM+S,QAA2B,QAAOowC,IAClC+C,QAA4B,QAAOhD,IACnCjvC,QAAgC,QAAOwoC,IACvCtoC,QAA8B,QAAOuoC,IACrC/jC,QAAe,QAAO2nC,IACtBnxB,QAAyB,QAAOkzB,IAChCtlD,QAAiB,QAAO8pD,IACxB9rD,QAAqB,QAAOk2C,IAO5BkV,EAAoB,CACtB/nD,IAAK2U,aAA+D,EAASA,EAAmB3U,IAChG0C,IAAKiS,aAA+D,EAASA,EAAmBjS,IAChG3C,WAAY4U,aAA+D,EAASA,EAAmB5U,YAErGioD,GAAerzC,aAA+D,EAASA,EAAmB8nC,SAAW,CAAEA,QAAS9nC,EAAmB8nC,SAAY,CAAC,EAChKyX,EAAqB/3D,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAEjC,KAAM,cAAgB2lD,GAAsB,CAAE9hD,MAAoC,QAA5BpE,EAAKwY,EAAI/O,QAAQrF,aAA0B,IAAPpE,EAAgBA,EAAKkmD,EAAoB9hD,QAAU+hD,GAAoB,CAAEhiB,cAAe5pC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2R,GAAwBF,GAA0B0E,SACnWwW,qBAAqBi3B,GAEzB,MAAO,CACH5tC,MACAzF,qBACAu/C,qBACAV,gBAAiBE,GALGv3D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8vD,GAAqB,CAAE35C,OAAQg4B,GAA8Bh4B,EAAQ2tC,MAK/DvpD,EAAS8sD,qCAAsC9uD,EAAau2C,sBAAuB2gB,GAErJ,CACA,SAAUM,GAAKhpD,EAAKooD,EAASa,EAAQC,GACjC,MAAM5yD,QAAkB,QAAK2yD,EAAQjpD,EAAKooD,GAYpCe,EAAkBhiB,GAAiCihB,EAAQW,mBAAmB35C,OAAQ9Y,EAAU8Y,QAChGrB,EAAU,CACZ2sB,GAAYP,QAAQ,CAAE7jC,cACtBwX,GAAqB5C,4BAA4B,CAC7CN,sBAAuB+vB,GAA+BrkC,KAE1Dif,GAAcvE,uBAAuBm4C,GACrC5zC,GAAcN,sBAElB,QAAmC5e,IAA/B+xD,EAAQ5+C,mBAAkC,CAC1C,MAAM4/C,EAAkBpB,GAAsB1xD,GAC9CyX,EAAQlY,KAAKiiC,GAAwBF,mBAAmBwxB,GAAkBxa,GAA4BF,uBAAuB0a,GACjI,CAEA,MAAO,CACHnX,OAFU,SAAalkC,EAASm7C,GAGhC5yD,YAER,CCtHA,MAAM,IAAa,KAAAmxC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMykB,OA2CxDo6B,IAAoB,KAAA5hB,gBAAe,IAAaj9B,KACzD,QAAUA,EAAMykB,KAAM,iDACfzkB,EAAMykB,QAYJq6B,IAAuB,KAAA7hB,gBAAe4hB,IAAoBp6B,GAC5DA,EAAKp6B,MCpChB,SAAS,GAAgBmL,EAAKupD,GAC1B,OAAOvpD,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWY,aAAa40D,gBAAgBoB,EAAUlB,gBACvF,CAOA,SAAUmB,GAA6Bv6C,GACnC,MAAM,MAAEpU,EAAK,yBAAE+O,GAA6BqF,EAAI/O,QAC1CupD,EAAY5uD,EAAQ,CAAEA,SAAU,CAAC,EACjC2O,QAA2B,QAAOowC,IAClC+C,QAA4B,QAAOhD,IACnC+P,QAAqC,QAAO9P,IAC5ClvC,QAAgC,QAAQd,GAA6B8/C,EAErE5P,GADA5G,IAEA9jC,QAAe,QAAO2nC,IACtBnxB,QAAyB,QAAOkzB,IAChCtlD,QAAiB,QAAO8pD,IACxB9rD,QAAqB,QAAOk2C,KAC1BrN,qBAAsBsvB,GAAgBhN,EAAqBiN,GAA0B,SAAOjN,EAAqB,CAAC,yBACpHoM,EAAqB/3D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAEjC,KAAM,cAAgB4yD,GAA0B,CAAEhvB,cAAe5pC,OAAOiI,OAAO,CAAC,EAAGyR,GAA0B0E,SAClKwW,qBACEi3B,GAAerzC,aAA+D,EAASA,EAAmB8nC,SAAW,CAAEA,QAAS9nC,EAAmB8nC,SAAY,CAAC,EAChKqX,EAAYn1D,EAAS8sD,sCAAwC9uD,EAAau2C,sBAC1E,CACEzN,UAAU,EACVP,YAAa,UACbM,sBAAsB,GAExB,CACEC,UAAU,EACVP,YAAa,UAKrB,MAAO,CACH9qB,MACA85C,qBACAV,gBAJoBr3D,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8vD,GAAqBU,GAAY,CAAEr6C,OAAQg4B,GAA8Bh4B,GAAQ,KAAM,MAAUu5C,GAAY9L,GAMnN,CACA,SAAUgN,GAAO7pD,EAAKupD,GAClB,MAAMjzD,QAAkB,QAAK,GAAiB0J,EAAKupD,GAC7Ct6B,QAAa,QAAOo6B,IAGpBS,EAAoB94D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3C,GAAY,CAAEyzD,UAAW96B,IACnF,IAAKs6B,EAAUt6C,IAAI/O,QAAQyJ,aACvB,MAAO,CACHrT,UAAWwzD,GAGnB,MAAMX,EAAkBhiB,GAAiCoiB,EAAUR,mBAAmB35C,OAAQ06C,EAAkB16C,QAUhH,MAAO,CACH6iC,OAVU,SAAa,CACvBvX,GAAYP,QAAQ,CAAE7jC,UAAWwzD,IACjCj7B,GAAcV,UAAU,IACxBrgB,GAAqB5C,4BAA4B,CAC7CN,sBAAuB+vB,GAA+BmvB,KAE1Dv0C,GAAcvE,uBAAuBm4C,GACrC5zC,GAAcN,sBACf,sBAGC3e,UAAWwzD,EAEnB,CCpFA,SAAS,GAAgB9pD,EAAKwtB,GAC1B,MAAM,QAAEp8B,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAa2W,gBAAgBsjB,EACrE,CAOA,SAAUw8B,GAAoBhqD,GAC1B,MAAM4lB,QAAyB,QAAOy3B,UAChC,SAAI,SAAa,IAChBjR,GAAgCxmB,GACnC0oB,GAAwBH,4BACzB,2BAKHnuC,EAAIwtB,kBAAen3B,CACvB,CC7BA,MAAM4zD,GAA2B,CAC7Bh/C,WAAY,CACRjU,KAAM,WACNwE,YAAa,kBAGd,SAAS0uD,GAA6B3wD,GAGzC,OAAOA,EAAQ6qB,KAAK,MAAyB7qB,EAAU,CAAC0wD,MAA6B1wD,EACzF,CCPA,SAAS,GAAqByG,EAAKwtB,EAAcj0B,GAC7C,MAAM,QAAEnI,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAa4W,qBAAqBqjB,EAAcj0B,EACxF,C,gBCGA,SAAU4wD,GAAkCl7C,GACxC,MAAM,qBAAEjF,GAAyBiF,EAAI/O,QAC/BsJ,QAA2B,QAAOowC,KACxC,QAAUpwC,EAAoB,4CAC9B,MAAM,cAAEoxB,GAAkBpxB,EAAoB4gD,GAAsB,SAAO5gD,EAAoB,CAAC,kBAE1F6gD,GAAoB,QAAgBzvB,GACpC,CACEA,iBAEF,CAAC,EACDmuB,EAAqB/3D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmxD,GAAsBC,GAEjF,MAAO,CACHp7C,MACAzF,qBACA6+C,gBAJoBr3D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8vD,GAAqB,CAAEhvB,YAAa/vB,EAAqB+vB,YAAaO,SAAUtwB,EAAqBswB,SAAUD,qBAAsBrwB,EAAqBqwB,uBAMtN,CACA,SAAS,GAAgBr6B,EAAKsqD,GAC1B,OAAOtqD,EAAI5O,QACNuB,UAAUqN,EAAIrN,WACdY,aACA+0D,gBAAgBgC,EAAe9gD,mBAAoB8gD,EAAejC,gBAC3E,CACA,SAASkC,GAAavqD,EAAKwtB,GACvB,OAAOxtB,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWY,aAAag3D,aAAa/8B,EAC1E,CACA,SAASg9B,GAAexqD,EAAKsqD,GACzB,MAAM,cAAEG,EAAa,iBAAEC,GAAqBJ,EAAer7C,IAAI/O,QAAQ8J,qBACjE2gD,EAAW,IAAIF,KAAkBC,GAAkB/yD,OAAO,OAChE,OAAOqI,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWqB,gBAAgB42D,aAAa5qD,EAAIwtB,aAAcm9B,EAC/F,CACA,SAAUE,GAAY7qD,EAAKsqD,GACvB,MAAM,cAAEG,EAAa,iBAAEC,GAAqBJ,EAAer7C,IAAI/O,QAAQ8J,qBACjE2gD,EAAW,IAAIF,KAAkBC,GAAkB/yD,OAAO,OAC3D,IAAQgzD,WACH,QAAKH,GAAgBxqD,EAAKsqD,IAGpC,MAAMQ,QAAoC,QAAK1a,GAA0BpwC,GACnE+qD,EAAgCra,GAA4BF,wBAAwBsa,GAC1F,IAAIx0D,EAQIA,EAPJw0D,EAA4B3Y,iBACvBnyC,EAAI5O,QAAQI,aAAaw5D,oCAMR,QAAKT,GAAcvqD,EAAKsqD,EAAe9gD,mBAAmB3U,WAJ1D,QAAK,GAAiBmL,EAAKsqD,GAQrCA,EAAe9gD,mBAE/B,MAAMyhD,EAAyBvwB,GAAYP,QAAQ,CAAE7jC,cAErD,MAAO,CACH27C,OAFU,SAAa,CAACgZ,EAAwBF,GAAgC,2BAGhFz0D,YAER,CCnEO,SAAU40D,GAA6BlrD,EAAKiP,GAC/C,MAAM2rB,QAAsB,QAAOsY,UAC7Bh8B,GxL+IH,SAA8BlX,EAAK46B,EAAe36B,GACrD,MAAO,CACHjJ,KAAM,sCACNgJ,MACAC,gBACAC,QAAS,CACL06B,iBAGZ,CwLxJiCuwB,CAAqBnrD,EAAK46B,EAAe3rB,EAAIhP,eAC9E,CACO,SAAUmrD,GAAmBngD,GAChC,IAAIxU,EAAIswB,EAAIK,EACZ,MAAMikC,QAAmC,QAAOpS,IAC1CqS,EAAeryB,GAA4BhuB,EAAYogD,GAC7D,IAAKC,EAAc,CACf,GAAmC,aAA/BrgD,EAAWA,WAAWjU,KACtB,SAAqJ,QAA1IP,EAAK40D,aAA+E,EAASA,EAA2BvzC,oBAAiC,IAAPrhB,OAAgB,EAASA,EAAGohB,SAExL,GAAmC,aAA/B5M,EAAWA,WAAWjU,KAC3B,MAA0C,kBAAtCiU,EAAWA,WAAWzP,kBACSnF,IAA/B4U,EAAWA,WAAWvR,WACOrD,IAA7B4U,EAAWA,WAAWrR,MAC0H,QAArImtB,EAAKskC,aAA+E,EAASA,EAA2BzzC,eAA4B,IAAPmP,OAAgB,EAASA,EAAGlP,YAEnC,QAA1IuP,EAAKikC,aAA+E,EAASA,EAA2BlzC,oBAAiC,IAAPiP,OAAgB,EAASA,EAAGvP,QAEjM,CACA,QAASyzC,CACb,C,gBC1BAp3D,eAAeq3D,GAAuBvrD,EAAKu2B,GACvC,OAAKA,EAAKx6B,OAGHiE,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWM,aAAau4D,cAAcj1B,GAF5D,EAGf,CAUO,SAAUk1B,GAAyBzrD,EAAKu2B,EAAMtjC,GACjD,MAAMy4D,EAAoBz4D,UAEd,QAAO03C,KACbghB,EAAqB,GACrBC,EAAoB,GAC1Br1B,EAAKv+B,SAASnD,IACV,MAAMg3D,EAAmBH,EAAkBrzD,IAAIxD,GAC3Cg3D,EACAF,EAAmB91D,KAAKg2D,EAAiBv7B,WAGzCs7B,EAAkB/1D,KAAKhB,EAC3B,IAEJ,MACMi3D,EAAsB5yD,QADG,QAAKqyD,GAAwBvrD,EAAK4rD,IAE3DjgB,EAAU,GAUhB,OATAigB,EAAkB5zD,SAASnD,IACvB,MAAMk3D,EAAkBD,EAAoBzzD,IAAIxD,GAC5Ck3D,EACAJ,EAAmB91D,KAAKk2D,GAGxBpgB,EAAQ91C,KAAKhB,EACjB,IAEG,CACH4E,SAAUP,EAAgByyD,GAC1BhgB,UAER,CCUA,SAAUqgB,GAAiCtvD,EAAkBuvD,EAAajsD,GACtE,IAAIvJ,EACJ,MAAMy1D,EAAgB,GAChBC,EAAkB,IAAIpY,IACtBxI,QAA6B,QAAKF,GAA4BrrC,EAAKtD,EAAiBrM,KAAK+7D,GAAOA,EAAGrhD,gBAAgBQ,eACzH,IAAK,MAAMR,KAAmBrO,EAAkB,CAC5C,MAAM2vD,EAAYthD,EAAgBA,gBAAgBQ,YAClD,IAAI+gD,QAAwB,QAAO9Y,GAAgD6Y,IACnF,IAAKC,GAAmBC,GAA4CvsD,GAAM,CACtE,IAAI,QAASqsD,KAAersD,EAAI5O,QAAQI,aAAag3C,mBACjD,MAAM,IAAI,MAAa,8EAE3B,MAAMgkB,EAAWjhB,EAAqB9xC,SAASpB,IAAIg0D,GAC7CI,QAA0B,QAAKhB,GAA0BzrD,EAAK,KAAQ,CAACwsD,aAA2C,EAASA,EAASl8B,aACpIA,GAAak8B,aAA2C,EAASA,EAASl8B,YAAcm8B,EAAkBhzD,SAASpB,IAAIm0D,aAA2C,EAASA,EAASl8B,WAC1L,IAAK,MAAM/kB,KAAuG,QAAvF9U,EAAK65B,aAA6C,EAASA,EAAUqY,oBAAiC,IAAPlyC,EAAgBA,EAAK,GAE3I,GADA61D,QAAwB,QAAO9Y,GAAgDjoC,EAAY1W,MACvFy3D,EACA,KAGZ,CACIA,IACAJ,EAAcr2D,KAAKiY,GAAqBpB,+BAA+BggD,GAAmC3hD,EAAiBuhD,KAC3HH,EAAgBjY,IAAIoY,EAAgBvhD,gBAAgBC,iBAE5D,CACA,GAAIihD,EAAa,CACb,MAEMU,SAFgC,QAAOrZ,KAEI37C,QAAQA,IAAYw0D,EAAgBzzD,IAAIf,EAAOoT,gBAAgBC,mBAC5G2hD,EAAiB5wD,OAAS,GAC1BmwD,EAAcr2D,KAAKiY,GAAqBjB,+BAA+B,CACnEC,eAAgB6/C,EAAiBt8D,KAAKsH,GAAWA,EAAOoT,gBAAgBC,oBAGpF,CACA,OAAOkhD,CACX,CACA,SAAUU,GAA2B3hD,EAAYghD,GAC7C,GAAIhhD,EAAY,CAEZ,WADuB,QAAKmgD,GAAoBngD,IAE5C,MAAO,GAEX,MAAM4hD,GAAgB,QAA6B5hD,GAC7C,CAAEjU,KAAM,WACR,CACEA,KAAMiU,EAAWA,WAAWjU,KAC5BwE,YAAayP,EAAWA,WAAWzP,YACnC9B,KAAMuR,EAAWA,WAAWvR,KAC5BE,GAAIqR,EAAWA,WAAWrR,IAElC,MAAO,CAACkU,GAAqBb,iBAAiB4/C,GAClD,CACK,OAAIZ,EACE,CAACn+C,GAAqBb,iBAAiB,CAAEjW,KAAM,aAEnD,EACX,CACA,MAAM01D,GAAqC,CAACI,EAAgB//C,KACxD,MAAM,kBAAEjB,EAAiB,kBAAEE,GAAsB8gD,EAAe/hD,gBAC1DgiD,EAAkC,CACpC/yD,SAAU8R,EACVS,cAAeQ,EAAchC,gBAAgBC,gBAC7CgB,kBAAmBA,GAEvB,IAAI,QAAwBe,GAAgB,CACxC,GAAIf,EACA,OAAOhb,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8zD,GAAkC,CAAE/yD,UAAU,QAA6B8R,EAAmB,IAAKE,mBAAmB,IAEjK,KAAK,QAAyBF,GAAoB,CAC9C,MACMkhD,EAAgC,EADN,QAA0BlhD,GACK,IAC/D,OAAO9a,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8zD,GAAkC,CAAE/yD,UAAU,QAA6B8R,EAAmBkhD,IACzI,CACJ,CACA,OAAOD,CAA+B,EAgB1C,SAASR,GAA4CvsD,GACjD,OAAOA,EAAI5O,QAAQI,aAAa4b,mBACpC,C,2BCxJOlZ,eAAe+4D,GAAiBjtD,EAAKktD,EAAqBC,GAE7D,GAA0B,IAAtBA,EAAWpxD,OACX,OAAO,EAEX,MAAMqxD,EAAuBptD,EAAI5O,QAC5BuB,UAAUqN,EAAIrN,WACdM,aACAo6D,wBAAwBH,GACvBI,EAA2BttD,EAAI5O,QAChCuB,UAAUqN,EAAIrN,WACdM,aACAm4C,yBAAyB+hB,EAAW98D,KAAK8G,GAASA,EAAK4T,gBAAgBQ,gBACrEgiD,EAAkBC,SAA8B3zD,QAAQoC,IAAI,CAC/DmxD,EACAE,IAEEG,EAAqBF,EAAiBj9B,UAG5C,OAF2Bk9B,EAAqBn9D,KAAK+a,GAAOA,EAAGklB,YAEpClM,MAAMkR,IAAa,QAAgBA,EAAUm4B,IAC5E,C,kDCnBOv5D,eAAew5D,GAA+B1tD,EAAKssD,EAAiBqB,EAASR,EAAYvH,GAC5F,MAAMgI,EAAqBT,EAAWx1D,QAAQR,KAAU,QAAgBA,EAAK4T,gBAAgBQ,YAAa+gD,EAAgBvhD,gBAAgBQ,eAEpIsiD,EAA6BD,EAAmBv9D,KAAK8G,GAASA,EAAK4T,gBAAgBC,kBAEzF,GAD4B2iD,EAAQvpC,MAAM4vB,IAAY6Z,EAA2BntC,SAASszB,EAAO1G,yBAE7F,MAAO,oBAGX,MAAMwgB,EAAuBH,EAAQt9D,KAAK2jD,IACtC,IAAIv9C,EAAIswB,EACR,MAAMgnC,EAAeH,EAAmB/1D,MAAMV,GAASA,EAAK4T,gBAAgBC,kBAAoBgpC,EAAO1G,wBACjG0gB,EAA2F,QAAxEv3D,EAAKmvD,EAAgBvtD,IAAI01D,EAAahjD,gBAAgBQ,oBAAiC,IAAP9U,OAAgB,EAASA,EAAG65B,UAC/H29B,EAAuG,QAA3ElnC,EAAK6+B,EAAgBvtD,IAAIi0D,EAAgBvhD,gBAAgBQ,oBAAiC,IAAPwb,OAAgB,EAASA,EAAGuJ,UACjJ,GAAK09B,GAAoBC,EAGzB,MAAO,CACHC,qBAAsBla,EAAOma,KAAKl7D,WAClCm7D,8BAA+B,CAACH,EAA0BD,GAC7D,IAEL,GAAIF,EAAqB1pC,MAAM4vB,QAAsB39C,IAAX29C,IACtC,MAAO,mBAEX,MAAMqa,QAA+BruD,EAAI5O,QACpCuB,UAAUqN,EAAIrN,WACdM,aAEAq7D,yBAAyBR,EAAqBz9D,KAAK8G,GAASA,EAAKi3D,iCAItE,OAHwB,KAAIN,EAAqBz9D,KAAK8G,GAASA,EAAK+2D,uBAAuBG,GAE5C1mC,OAAM,EAAEumC,EAAsBK,KAAoG,IAA/E,KAAaL,EAAsBK,EAAiB9xD,EAAA,IAAgBV,SACtI,QAAU,oBAC9C,CCrCO,SAASyyD,GAAyBp/C,EAAQra,GAC7C,OAAe,IAAXA,MAGA,IAAQqa,EAAOgB,WAAcrb,IAI1BA,GAASqa,EAAOgB,SAASrU,MACpC,CACO,SAAS0yD,GAAsBr/C,EAAQra,GAC1C,OAAOA,GAAS,GAAKA,EAAQqa,EAAOgB,SAASrU,MACjD,CACO,SAAS2yD,GAAsBhsD,EAAS3N,GAC3C,OAAe,IAAXA,MAGA,IAAQ2N,EAAQ9L,QAAW7B,IAIxBA,GAAS2N,EAAQ9L,MAAMmF,MAClC,CACO,SAAS4yD,GAAmBjsD,EAAS3N,GACxC,OAAOA,GAAS,GAAKA,EAAQ2N,EAAQ9L,MAAMmF,MAC/C,CCZO,SAAS6yD,GAA+Bv/C,EAAOw/C,GAClD,MAAM/0D,EAAS,CACX6xC,QAAS,GACTrW,SAAU,GACV77B,SAAU,GACVq1D,cAAe,IAiBnB,OAfAD,EAAgB72D,SAASb,IACrB,GzMmGkB,iByMnGaA,EAG3B,OAFA2C,EAAOL,SAAS5D,KAAKsB,QACrB2C,EAAOg1D,cAAcj5D,MAAK,QAGVQ,IAAhBgZ,EAAMlY,IACN2C,EAAOw7B,SAASz/B,KAAKsB,GACrB2C,EAAOL,SAAS5D,QAAQwZ,EAAMlY,IAC9B2C,EAAOg1D,cAAcj5D,QAAQwZ,EAAMlY,GAAM9G,KAAKuH,IAAM,MAGpDkC,EAAO6xC,QAAQ91C,KAAKsB,EACxB,IAEG2C,CACX,CC3BO,SAASi1D,GAA4BC,EAAc/uD,GACtD,MAAO,CACHjJ,KAAM,uCACNiJ,gBACAC,QAAS,CACL8uD,gBAGZ,CAQO,SAASC,GAAyBC,GACrC,MAAM,yBAAEC,EAAwB,oBAAEC,GAAwBF,EAC1D,OAAOC,QAA2EA,EAA2BC,EAAoB,EACrI,CAUO,SAASC,GAA2BL,EAAc/uD,GACrD,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACL8uD,gBAGZ,CCtCO,SAASM,GAA4Bp7C,EAAYjU,GACpD,MAAO,CACHjJ,KAAM,uCACNiJ,gBACAC,QAAS,CACLgU,cAGZ,C,2BCJO,MAAMq7C,GAA4B,MAOlC,SAASC,GAAc/0D,EAAOg1D,EAAeC,GAAU,GAC1D,IAAIj5D,EAAIswB,EAAIK,EACZ,MAAO,CACHpwB,KAAM,GAAGu4D,MAA6B90D,EAAMzD,QAC5CyD,QACAi1D,UACAC,QAAwG,QAA9Fl5D,EAAKg5D,aAAqD,EAASA,EAAcE,eAA4B,IAAPl5D,EAAgBA,EAAK,IACrIm5D,QAAwG,QAA9F7oC,EAAK0oC,aAAqD,EAASA,EAAcG,eAA4B,IAAP7oC,EAAgBA,EAAK,IACrI8oC,UAA4G,QAAhGzoC,EAAKqoC,aAAqD,EAASA,EAAcI,iBAA8B,IAAPzoC,EAAgBA,EAAK,IAEjJ,CAIO,SAAS0oC,GAAyBr1D,EAAOi1D,GAAU,GACtD,MAAMK,EAA6B,CAAC,EAMpC,MAAO,CACHC,QANY,IAAIn2D,SAAQ,CAAC5I,EAASg/D,KAClCF,EAA2BF,UAAY5+D,EACvC8+D,EAA2BJ,QAAUM,CAAM,IAK3CC,SAHaV,GAAc/0D,EAAOs1D,EAA4BL,GAKtE,CACA,SAAUS,GAAaC,EAASpwD,EAAKkwD,GACjC,IAAIz5D,EACJ,MAAM,MAAEgE,EAAOA,OAAO,KAAEzD,EAAI,cAAEiJ,IAAqBiwD,EAC7CG,EAAsBpwD,QAAqDA,EAAgB,8BACjG,IACI,IACIiwD,EAASN,QAAQn1D,EACrB,CACA,MAAO7J,GACH4H,QAAQC,KAAK,qEAAqEzB,KAAQq5D,gBAAmCz/D,EACjI,OACMsmB,GlMoDP,SAAsBlX,EAAKvF,EAAOwF,GACrC,MAAO,CACHjJ,KAAM,6BACNgJ,MACAC,gBACAC,QAAS,CACLzF,SAGZ,CkM7DqC61D,CAAatwD,EAAKvF,EAAOwF,IACtD,MAAMnG,QAAe,QAAKs2D,EAAQG,UAAWvwD,EAAKkwD,EAASz1D,MAAmC,QAA3BhE,EAAKy5D,EAASR,eAA4B,IAAPj5D,GAAgBA,GACtH,IACIy5D,EAASL,UAAU/1D,EACvB,CACA,MAAOlJ,GACH4H,QAAQC,KAAK,uEAAuEzB,KAAQq5D,eAAkCz/D,EAClI,OACMsmB,GlM6DP,SAAwBlX,EAAKvF,EAAOX,EAAQmG,GAC/C,MAAO,CACHjJ,KAAM,+BACNgJ,MACAC,gBACAC,QAAS,CACLzF,QACAX,UAGZ,CkMvEqC02D,CAAexwD,EAAKvF,EAAOX,EAAQmG,GACpE,CACA,MAAOrP,GACH,IACIs/D,EAASP,QAAQ/+D,EACrB,CACA,MAAO6/D,GACHj4D,QAAQC,KAAK,qEAAqEzB,KAAQq5D,gBAAmCI,EACjI,CACIhvD,GAAuB7Q,SACjBsmB,GAAuBtmB,SAGvBsmB,GlMCX,SAAoClX,EAAKkB,EAASlC,EAAOiB,GAC5D,MAAO,CACHjJ,KAAM,4BACNgJ,MACAC,gBACAC,QAAS,CACLiB,OAAQ,iBACRD,UACAlC,SAGZ,CkMZyC0xD,CAA2B1wD,EAAK,mDAAmDhJ,IAAQpG,EAAGqP,GAEnI,CACJ,CCxEO,SAAUxF,GAAMk2D,EAAGjB,GAAU,GAChC,MAAM,QAAEM,EAAO,SAAEE,GAAaJ,GAAyBa,EAAGjB,GAQ1D,aADM,QAAIQ,SACG,SAPS,IACXF,GAOf,CCaO,SAAUY,GAA0C5wD,EAAKiP,EAAKzY,EAAQud,EAAa88C,GACtF,MACMC,EAAiBh4D,SADW,QAAK2B,GAAOs0D,GAA4B8B,GAAoCr6D,EAAO8c,WACjDy9C,0BAA0B14D,IAAI0b,GAClG,IAAK+8C,EACD,MAAM9vD,GAAyBhB,EAAKiP,EAAK,mCAAkC,EAAAxS,EAAA,IAAesX,6CAC3D,EAAAtX,EAAA,IAAejG,EAAO3B,8GAGzD,OAAOi8D,CACX,CAkBO,SAAUE,GAAsChxD,EAAKiP,EAAKzY,EAAQud,GACrE,MACM+8C,EAAiBh4D,SADW,QAAK2B,GAAO60D,GAA4B94D,EAAO2d,IAAIC,UACjBhZ,cAAc/C,IAAI0b,GACtF,IAAK+8C,EACD,MAAM9vD,GAAyBhB,EAAKiP,EAAK,mCAAkC,EAAAxS,EAAA,IAAesX,6CAC3D,EAAAtX,EAAA,IAAejG,EAAO3B,8GAGzD,OAAOi8D,CACX,CAuBO,SAAUG,GAAiCjxD,EAAKiP,EAAKiiD,EAASC,GACjE,MAAM5lB,QAA6B,QAAKF,GAA4BrrC,EAAKmxD,IACnE,QAAExlB,EAAO,SAAElyC,GAAa8xC,EAC9B,IAAK,IAAQI,GACT,MAAM3qC,GAAyBhB,EAAKiP,EAAK,iHAAiH08B,EACrJt7C,IAAIoM,EAAA,IACJjH,KAAK,SAEd,MAAM47D,QAAwB,QAAO9d,IAC/B+d,EAAa,GACbC,EAAkB,GACxB,IAAK,MAAMH,KAAY13D,EAASb,SAAU,CACtC,MAAM24D,EAAuBH,EAAgBv5D,MAAMF,IAAW,QAAgBA,EAAOoT,gBAAgBQ,YAAa4lD,EAASt8D,OACtH08D,EAIDD,EAAgBz7D,KAAK07D,GAHrBF,EAAWx7D,KAAKs7D,EAASt8D,IAKjC,CACA,IAAK,IAAQw8D,GACT,MAAMrwD,GAAyBhB,EAAKiP,EAAK,sIAAsIoiD,EAC1KhhE,IAAIoM,EAAA,IACJjH,KAAK,SAEd,OAAO87D,CACX,CC1GA,SAASE,GAAe56D,EAAOtD,GAC3B,OAAOsD,EAAMvG,KAAK8G,IACd,IAAI,QAAgBA,EAAKX,QAAS,CAC9B,MAAMi7D,EAAkBn+D,EAAS+E,IAAIlB,EAAKX,OAAO8c,SAEjD,OADA,QAAUm+C,GACHzgE,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQxF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKX,QAAS,CAAE8c,SAAS,QAAWm+C,MAChI,CACA,OAAOt6D,CAAI,GAEnB,CAYO,SAAUu6D,GAAgC1xD,EAAKpJ,EAAOqY,GACzD,MAAMyzC,EzC7BH,SAAqC9rD,GACxC,MAAMkD,EAAS,GAMf,OALAlD,EAAMoB,SAASb,KACP,QAAgBA,EAAKX,SACrBsD,EAAOjE,KAAKsB,EAAKX,OAAO8c,QAC5B,IAEGxZ,CACX,CyCqBwB63D,CAA4B/6D,EAAM6C,UAChD8pD,QAAyB,QAAKX,GAAiB5iD,EAAK0iD,GAC1D,IAAK,IAAQa,EAAiB5X,SAC1B,MAAM3qC,GAAyBhB,EAAKiP,EAAK,sEAAsEs0C,EAAiB5X,QAC3Ht7C,IAAIoM,EAAA,IACJjH,KAAK,SAEd,MAAO,CACHo8D,gBAAiB5gE,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGrC,GAAQ,CAAE6C,SAAU+3D,GAAe56D,EAAM6C,SAAU8pD,EAAiB9pD,YACrH8pD,mBAER,CACA,SAAUsO,GAAuC7xD,EAAKiP,EAAKzY,EAAQs7D,EAAiBjB,GAChF,IAAIp6D,EACJ,MAAMs7D,EAAoBv7D,EAAO+a,uBAC5B5Z,OAAO,MACPtH,KAAKgyB,GAAMA,EAAE9W,cAElB,SADM,QAAK0lD,GAAkCjxD,EAAKiP,EAAKzY,EAAQu7D,GAC3Dv7D,EAAOud,YAEP,aADM,QAAK68C,GAA2C5wD,EAAKiP,EAAKzY,EAAQA,EAAOud,YAAa88C,GACrFr6D,EAEN,GAAIs7D,EAAiB,CACtB,MAAME,QAA4B,QAAKv3D,GAAOs0D,GAA4B8B,IAC1E,OAAO7/D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzC,GAAS,CAAEud,YAAsE,QAAxDtd,EAAKw4D,GAAyB+C,UAAyC,IAAPv7D,OAAgB,EAASA,EAAGsC,QAAQlE,KACxK,CAEI,OAAO2B,CAEf,CACA,SAAUy7D,GAA6BjyD,EAAKiP,EAAKzY,EAAQs7D,GACrD,IAAIr7D,EACJ,MAAMs7D,EAAoBv7D,EAAO+a,uBAC5B5Z,OAAO,MACPtH,KAAKgyB,GAAMA,EAAE9W,cAElB,SADM,QAAK0lD,GAAkCjxD,EAAKiP,EAAKzY,EAAQu7D,GAC3Dv7D,EAAOud,YAEP,aADM,QAAKi9C,GAAuChxD,EAAKiP,EAAKzY,EAAQA,EAAOud,aACpEvd,EAEN,GAAIs7D,EAAiB,CACtB,MAAMI,QAA4B,QAAKz3D,GAAO60D,GAA4B94D,EAAO2d,IAAIC,SACrF,OAAOpjB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzC,GAAS,CAAEud,YAAmE,QAArDtd,EAAKy7D,EAAoB9C,oBAAoB,UAAuB,IAAP34D,OAAgB,EAASA,EAAGsC,QAAQlE,KACrK,CAEI,OAAO2B,CAEf,CACA,SAAS27D,GAAqC37D,EAAQkG,GAClD,MAAM01D,EAA4B57D,EAAO+a,uBAAuB5Z,QAAQ00D,KAChE,QAAoCA,IAC7B3vD,EAAiB7E,MAAMF,IAAW,QAAgBA,EAAOoT,gBAAgBQ,YAAa8gD,EAAU9gD,iBAI/G,OAAOva,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzC,GAAS,CAAE+a,uBAAwB6gD,GAC9E,CAkBO,SAAUC,GAAqCryD,EAAKiP,EAAKrY,EAAOk7D,GAAkB,GACrF,MAAMp1D,QAAyB,QAAO42C,KAChC,iBAAEiQ,EAAgB,gBAAEqO,GAAoBh7D,EACxC6oC,EAAe,GACrB,IAAI9mC,EAAI,EACR,IAAK,MAAMxB,KAAQy6D,EAAgBn4D,SAAU,CACzC,MAAMjD,EAASW,EAAKX,OAEpB,GADco7D,EAAgB9C,cAAcn2D,GAwBxC,IAAI,QAAgBnC,GAAS,CACzB,MAAMq6D,EAAkBtN,EAAiB9pD,SAASpB,IAAI7B,EAAO8c,UAI7D,QAAUu9C,GACV,MAAMyB,QAAsB,QAAKT,GAAwC7xD,EAAKiP,EAAKzY,EAAQs7D,EAAiBjB,GAC5GpxB,EAAa5pC,KAAK7E,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQ87D,IACvE,MACK,IAAI,QAAY97D,GAAS,CAC1B,MAAM87D,QAAsB,QAAKL,GAA8BjyD,EAAKiP,EAAKzY,EAAQs7D,GACjFryB,EAAa5pC,KAAK7E,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQ87D,IACvE,MAEI7yB,EAAa5pC,KAAKsB,QA7BtB,IAAI,QAAgBX,KAAW,QAAYA,GAAS,CAOhD,MAAM87D,EAAgBH,GAAqC37D,EAAQkG,GACnE+iC,EAAa5pC,KAAK7E,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEX,OAAQ87D,IACvE,MAEI7yB,EAAa5pC,KAAKsB,GAqB1BwB,GACJ,CACA,OAAO8mC,CACX,CC3JO,SAAS8yB,GAAe10D,GAE3B,OAAQA,GAAU7M,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAI4E,EAAO+U,aAAe,CAAEA,YAAa/U,EAAO+U,cAAkB/U,EAAOhD,OAAS,CAAEA,MAAOgD,EAAOhD,OACrJ,C,2BCmBO,SAAU23D,GAAsBxyD,EAAKiP,EAAKwjD,EAAcxjD,GAC3D,MAAMyjD,EAAa,CACf1yD,MACAiP,MACAwjD,cACArjD,aAAc,QAAO0nC,MAEnB,YAAE1kC,EAAW,aAAEugD,GAzBzB,SAA4BD,GACxB,MAAM,IAAE1yD,EAAKiP,KAAO/O,SAAS,aAAEiQ,EAAY,UAAEhN,IAAc,OAAEiM,GAAYsjD,EACzE,IAAKjE,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAK0yD,EAAWD,YAAa,0DAA0DtiD,qBAAgCf,EAAOgB,SAASrU,oBAE1K,MAAMqW,EAAchD,EAAOgB,SAASD,GACpC,IAAKw+C,GAAmBv8C,EAAajP,GACjC,MAAMnC,GAAyBhB,EAAK0yD,EAAWD,YAAa,qDAAqDtvD,gBAAwBgN,qBAAgCiC,EAAYxb,MAAMmF,iCAG/L,MAAO,CACHqW,cACAugD,aAHiBvgD,EAAYxb,MAAMuM,GAK3C,CAW0C,CAAmBuvD,IACnD,aAAEviD,EAAY,UAAEhN,EAAS,MAAEyvD,EAAK,gBAAEhwD,GAAoBqM,EAAI/O,QAChE,GAAI0yD,GAAsC,IAA7BxgD,EAAYxb,MAAMmF,OAAc,OACnC,QAAIwZ,GAAc7D,cAAc,CAClC3c,MAAOob,EACPvN,kBACAgM,KAAM,CACFK,IAAKwjD,MAKb,MAAMI,EAAwB7hE,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmZ,GAAc,CAAExb,MAAO,WAC/EsgB,GAAuBhU,GAAyBlD,EAAK2yD,EAAcxvD,EAAW0vD,EAAuBjwD,EAAiBqM,EAAIhP,sBAC1HiX,GAAuBzU,GAAqBzC,EAAK6yD,EAAuB1iD,GAAc,OAAM9Z,EAAW4Y,EAAIhP,eACrH,YAEU,QAAIsV,GAAcjD,kBAAkB,CACtCnC,eACAhN,YACAP,kBACAgM,KAAM,CACFK,IAAKwjD,YAGPv7C,GAAuBhU,GAAyBlD,EAAK2yD,EAAcxvD,OAAW9M,EAAWuM,EAAiBqM,EAAIhP,eAE5H,CCnDA,MAAM6yD,GAA6BC,GACxB,ECMJ,SAASC,GAA8BlwB,EAAS7zB,EAAKjP,GACxD,MAAQE,SAAS,IAAErL,IAAWoa,EACxBzY,EAASssC,EAAQzqC,IAAIxD,GAC3B,IAAK2B,EACD,MAAMwK,GAAyBhB,EAAKiP,EAAK,yCAAwC,QAAgBpa,OAErG,KAAK,QAAgB2B,GACjB,MAAMwK,GAAyBhB,EAAKiP,EAAK,qBAAoB,QAAgBpa,2CAEjF,OAAO2B,CACX,CAaO,SAASy8D,GAA0BnwB,EAAS7zB,EAAKjP,GACpD,MAAQE,SAAS,IAAErL,IAAWoa,EACxBzY,EAASssC,EAAQzqC,IAAIxD,GAC3B,IAAK2B,EACD,MAAMwK,GAAyBhB,EAAKiP,EAAK,yCAAwC,QAAgBpa,OAErG,KAAK,QAAY2B,GACb,MAAMwK,GAAyBhB,EAAKiP,EAAK,qBAAoB,QAAgBpa,sCAEjF,OAAO2B,CACX,CClCA,SAAU08D,GAAgBlzD,EAAKiP,GAC3B,MAAQ/O,SAAS,WAAEgU,IAAkBjF,EAE/BohB,SADiB,QAAOwa,KACLxyC,IAAI6b,GAC7B,IAAKmc,EACD,MAAMrvB,GAAyBhB,EAAKiP,EAAK,2DAA0D,EAAAxS,EAAA,IAAeyX,sBAEtH,OAAOmc,CACX,CAaA,SAAU8iC,GAA0B38D,EAAQ65B,GACxC,IAAK75B,EAAOud,YACR,OAEJ,MAAMm+C,QAA4B,QAAKz3D,GAAO60D,GAA4Bj/B,EAAQA,QAAQx7B,MAE1F,OADuBiE,EAAyBo5D,EAAoB92D,cAAc/C,IAAI7B,EAAOud,eAEpF,IAAQm+C,EAAoB9C,0BAGjC,EAFW8C,EAAoB9C,oBAAoB,GAK3D,CCrCA,SAASgE,GAA2B75D,EAAS85D,GACzC,MAAMC,EAAyCD,EAH7B17D,OAAO,MAAqCtH,KAAKkjE,GAAcA,EAAUhoD,cAI3F,OAAOhS,EAAQ5B,QAAQA,GACZ27D,EAAYlvC,MAAMvvB,IAAQ,QAAgB8C,EAAOoT,gBAAgBQ,YAAa1W,MAE7F,CACA,SAAU2+D,GAAsBxzD,EAAKyzD,EAAYxkD,EAAKzY,EAAQk9D,GAC1D,IAAI3/C,EAIA4/C,EAIJ,OAPID,EAAGE,0BACH7/C,QAAoB,QAAK0/C,EAAWI,qBAAsB7zD,EAAKiP,EAAKzY,EAAQk9D,EAAGE,0BAG/EF,EAAGI,yBACHH,QAAuB,QAAKF,EAAWM,yBAA0B/zD,EAAKiP,EAAKzY,EAAQk9D,EAAGI,yBAEnF,CACH//C,cACA4/C,iBAER,CACA,SAAUK,GAAuBx9D,EAAQud,GAGrC,MAAO,CACHA,cACA4/C,eAHmBP,SADQ,QAAO9f,IAC8B98C,EAAO+a,wBAK/E,CACA,SAAU0iD,GAAkBC,EAAMC,EAAaC,EAAM59D,GAEjD,aADqB,QAAKw9D,GAAwBx9D,OAAQH,EAE9D,CACA,SAAUg+D,GAAiBr0D,EAAKyzD,EAAYxkD,EAAKzY,EAAQk9D,GACrD,IAAIY,EAkBJ,MAjBuB,YAAnBZ,EAAGa,aACC,QAAgB/9D,GAEhB89D,EAAmBrF,SADO,QAAKx0D,GAAOs0D,GAA4Bv4D,EAAO8c,YAGpE,QAAY9c,GAEjB89D,SAD0B,QAAK75D,GAAO60D,GAA4B94D,EAAO2d,IAAIC,UAC9Cg7C,oBAAoB,IAGnD,SAAU,EAAO,sDAIrBkF,QAAyB,QAAKb,EAAWI,qBAAsB7zD,EAAKiP,EAAKzY,EAAQk9D,EAAGa,mBAEnE,QAAKP,GAAwBx9D,EAAQ89D,EAE9D,CACA,SAAUE,GAAuBh+D,EAAQi+D,GACrC,MAAMC,QAAuB,QAAOlqB,IAEpC,MAAO,CACHz2B,YAFgBvd,EAAOud,YAAc2gD,EAAer8D,IAAI7B,EAAOud,kBAAe1d,EAG9Es9D,eAAgBc,EAExB,CACA,SAAUE,GAAwB30D,EAAKyzD,EAAYxkD,EAAKzY,EAAQk9D,GAC5D,MAAMC,QAAuB,QAAKF,EAAWM,yBAA0B/zD,EAAKiP,EAAKzY,EAAQk9D,EAAGriD,iBAE5F,aADqB,QAAKmjD,GAAwBh+D,EAAQm9D,EAE9D,CACA,SAAUiB,GAAsB50D,EAAKyzD,EAAYxkD,EAAKzY,EAAQk9D,GAC1D,MAAMC,QAAuB,QAAKF,EAAWM,yBAA0B/zD,EAAKiP,EAAKzY,EAAQk9D,EAAGriD,iBAEtFwjD,EAAiBzB,SADQ,QAAO9f,IAC8B98C,EAAO+a,wBACrEujD,GAAenB,QAAuDA,EAAiB,IAAIh8D,QAAQo9D,IAC7FF,EAAezwC,MAAM4wC,IAAkB,QAAgBA,EAAcjqD,gBAAgBQ,YAAawpD,EAAUhqD,gBAAgBQ,iBAMxI,aAJqB,QAAKipD,GAAwBh+D,EAAQ,IACnDq+D,KACAC,GAGX,CACA,SAAUG,GAAwBj1D,EAAKyzD,EAAYxkD,EAAKzY,EAAQk9D,GAC5D,MAAMwB,QAAyB,QAAKzB,EAAWM,yBAA0B/zD,EAAKiP,EAAKzY,EAAQk9D,EAAGriD,iBAGxF8jD,EADiB/B,SADQ,QAAO9f,IAC8B98C,EAAO+a,wBACrC5Z,QAAQo9D,KACjCG,QAA2DA,EAAmB,IAAI9wC,MAAM0R,IAAa,QAAgBi/B,EAAUhqD,gBAAgBQ,YAAauqB,EAAS/qB,gBAAgBQ,iBAGlM,aADqB,QAAKipD,GAAwBh+D,EAAQ2+D,EAE9D,CA0CO,SAAUC,GAAgBp1D,EAAKyzD,EAAYxkD,EAAKzY,GACnD,MAAQ0J,SAAS,UAAEm1D,IAAiBpmD,EACpC,OAAQomD,EAAUr+D,MACd,IAAK,UACD,aAAa,QAAKw8D,GAAuBxzD,EAAKyzD,EAAYxkD,EAAKzY,EAAQ6+D,GAE3E,IAAK,oBACD,aAAa,QAAKpB,GAAmBj0D,EAAKyzD,EAAYxkD,EAAKzY,GAE/D,IAAK,mBACD,aAAa,QAAK69D,GAAkBr0D,EAAKyzD,EAAYxkD,EAAKzY,EAAQ6+D,GAEtE,IAAK,0BACD,aAAa,QAAKV,GAAyB30D,EAAKyzD,EAAYxkD,EAAKzY,EAAQ6+D,GAE7E,IAAK,wBACD,aAAa,QAAKT,GAAuB50D,EAAKyzD,EAAYxkD,EAAKzY,EAAQ6+D,GAE3E,IAAK,0BACD,aAAa,QAAKJ,GAAyBj1D,EAAKyzD,EAAYxkD,EAAKzY,EAAQ6+D,GAGrF,CC3JA,MAAMC,GAA6B,CAC/BzB,qBAAsB7C,GACtB+C,yBAA0B9C,ICFxBsE,GAAiC,CACnC1B,qBAAsBjD,GACtBmD,yBAA0B9C,ICGvB,SAASuE,GAA0B3gE,EAAKgJ,EAAQoC,GACnD,MAAO,CACHjJ,KAAM,4CACNiJ,gBACAC,QAAS,CACLrL,MACAgJ,UAGZ,CAcO,SAAS43D,GAAmC5gE,EAAKrB,EAAUyM,GAC9D,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAWrkE,OAAOiI,OAAO,CAAEjC,KAAM,WAAaxD,IAG1D,CAcO,SAASkiE,GAA8B7gE,EAAK0/D,EAAat0D,GAC5D,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,mBACNu9D,gBAIhB,CAaO,SAASoB,GAA+B9gE,EAAKoL,GAChD,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,sBAItB,CAcO,SAAS4+D,GAAmC/gE,EAAK8zC,EAAc1oC,GAClE,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,0BACNqa,gBAAiBs3B,QAAmDA,EAAe,KAInG,CAmBO,SAASktB,GAA4BhhE,EAAKihE,EAAuB71D,GAEpE,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,wBACNqa,iBARY,QAASykD,GAAyB,CAACA,GAAyBA,IAYxF,CAgBO,SAASC,GAA8BlhE,EAAKihE,EAAuB71D,GAEtE,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,0BACNqa,iBARY,QAASykD,GAAyB,CAACA,GAAyBA,IAYxF,CAiBO,SAASE,GAAiCnhE,EAAKme,EAAY/S,GAC9D,MAAO,CACHjJ,KAAM,gDACNiJ,gBACAC,QAAS,CACLrL,MACAme,cAGZ,CAiBO,SAASijD,GAAoCphE,EAAKpD,EAAQwO,GAC7D,MAAO,CACHjJ,KAAM,mDACNiJ,gBACAC,QAAS,CACLrL,MACApD,UAGZ,CAcO,SAASykE,GAA2BrhE,EAAKse,EAAYgjD,EAAyBl2D,GACjF,MAAO,CACHjJ,KAAM,6CACNiJ,gBACAC,QAAS,CACLrL,MACAse,aACAgjD,2BAGZ,CAsBO,SAASC,GAA6BvhE,EAAK8b,EAAQ1Q,GACtD,MAAO,CACHjJ,KAAM,4CACNiJ,gBACAC,QAAS,CACLrL,MACA8b,UAGZ,CAoBO,SAAS0lD,GAA6BxhE,EAAKyhE,EAASr2D,GACvD,MAAO,CACHjJ,KAAM,4CACNiJ,gBACAC,QAAS,CACLrL,MACAyhE,WAGZ,CAWO,SAASC,GAAqB1hE,EAAKoL,GACtC,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLrL,OAGZ,CAWO,SAAS2hE,GAAoB3hE,EAAKpD,EAAQwO,GAC7C,MAAO,CACHjJ,KAAM,qCACNiJ,gBACAC,QAAS,CACLzO,SACAoD,OAGZ,CAYO,SAAS4hE,GAA+B5hE,EAAK+d,EAAa3S,GAC7D,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACA+d,eAGZ,C,4BC7WO,MAAM8jD,GAAuB,GAAyB,MAAmB,MAAc,MAAkB,MAAmB,MAAyB,MAI/IC,GAAc,GAAyB,MAAmB,MAAc,MAAkB,MAAyB,MAAyB,MAAmB,KAAY,OCdlL,IAAa,KAAAlvB,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAM5W,cAoCxDgjE,IAAoB,KAAAnvB,gBAAe,IAAaj9B,KACzD,QAAUA,EAAM5W,YAAa,wDACtB4W,EAAM5W,eAOJijE,IAAgC,KAAApvB,gBAAemvB,IAAoBpsD,IAC5E,IAAI/T,EACJ,OAA4F,QAApFA,EAAK+T,aAAqC,EAASA,EAAMssD,6BAA0C,IAAPrgE,GAAgBA,CAAU,IAOrHsgE,IAA2B,KAAAtvB,gBAAemvB,IAAoBpsD,IACvE,IAAI/T,EACJ,OAAuF,QAA/EA,EAAK+T,aAAqC,EAASA,EAAMwsD,wBAAqC,IAAPvgE,GAAgBA,CAAU,IAOhHwgE,IAAwB,KAAAxvB,gBAAemvB,IAAoBpsD,IACpE,IAAI/T,EACJ,OAAsF,QAA9EA,EAAK+T,aAAqC,EAASA,EAAM0sD,uBAAoC,IAAPzgE,GAAgBA,CAAU,IAO/G0gE,IAAyB,KAAA1vB,gBAAemvB,IAAoBpsD,IACrE,IAAI/T,EACJ,OAAoK,QAA5JA,GAAO+T,aAAqC,EAASA,EAAM0sD,mBAAqB1sD,aAAqC,EAASA,EAAM4sD,yBAAuC,IAAP3gE,GAAgBA,CAAU,IAO7L4gE,IAAqB,KAAA5vB,gBAAemvB,IAAoBpsD,IACjE,IAAI/T,EACJ,OAAgK,QAAxJA,GAAO+T,aAAqC,EAASA,EAAM0sD,mBAAqB1sD,aAAqC,EAASA,EAAM8sD,qBAAmC,IAAP7gE,GAAgBA,CAAU,IAOzL8gE,IAAqC,KAAA9vB,gBAAemvB,IAAoBpsD,IACjF,IAAI/T,EACJ,OAAmG,QAA3FA,EAAK+T,aAAqC,EAASA,EAAMgtD,oCAAiD,IAAP/gE,GAAgBA,CAAU,IAO5HghE,IAAqC,KAAAhwB,gBAAemvB,IAAoBpsD,IACjF,IAAI/T,EACJ,OAAmG,QAA3FA,EAAK+T,aAAqC,EAASA,EAAMktD,oCAAiD,IAAPjhE,GAAgBA,CAAU,IAO5HkhE,IAAqB,KAAAlwB,gBAAemvB,IAAoBpsD,IACjE,IAAI/T,EACJ,OAAmF,QAA3EA,EAAK+T,aAAqC,EAASA,EAAMotD,oBAAiC,IAAPnhE,GAAgBA,CAAU,IAO5GohE,IAA+B,KAAApwB,gBAAemvB,IAAoBpsD,IAC3E,IAAI/T,EACJ,OAA6F,QAArFA,EAAK+T,aAAqC,EAASA,EAAMstD,8BAA2C,IAAPrhE,GAAgBA,CAAU,IAOtHshE,IAAoB,KAAAtwB,gBAAemvB,IAAoBpsD,IAChE,IAAI/T,EACJ,OAAkF,QAA1EA,EAAK+T,aAAqC,EAASA,EAAMwtD,mBAAgC,IAAPvhE,GAAgBA,CAAU,IAO3GwhE,IAAkC,KAAAxwB,gBAAemvB,IAAoBpsD,IAC9E,IAAI/T,EACJ,OAAgG,QAAxFA,EAAK+T,aAAqC,EAASA,EAAM0tD,iCAA8C,IAAPzhE,GAAgBA,CAAU,IAOzH0hE,IAAsB,KAAA1wB,gBAAemvB,IAAoBpsD,IAClE,IAAI/T,EACJ,OAAoF,QAA5EA,EAAK+T,aAAqC,EAASA,EAAM4tD,qBAAkC,IAAP3hE,GAAgBA,CAAU,IAO7G4hE,IAA+B,KAAA5wB,gBAAemvB,IAAoBpsD,IAC3E,IAAI/T,EACJ,OAA6F,QAArFA,EAAK+T,aAAqC,EAASA,EAAM8tD,8BAA2C,IAAP7hE,GAAgBA,CAAU,IAOtH8hE,IAAwB,KAAA9wB,gBAAemvB,IAAoBpsD,IACpE,IAAI/T,EACJ,OAAsF,QAA9EA,EAAK+T,aAAqC,EAASA,EAAMguD,uBAAoC,IAAP/hE,GAAgBA,CAAU,IAO/GgiE,IAAwB,KAAAhxB,gBAAemvB,IAAoBpsD,IACpE,IAAI/T,EACJ,OAAsF,QAA9EA,EAAK+T,aAAqC,EAASA,EAAMkuD,uBAAoC,IAAPjiE,GAAgBA,CAAU,IAO/GkiE,IAAiC,KAAAlxB,gBAAemvB,IAAoBpsD,IAC7E,IAAI/T,EACJ,OAA6F,QAArFA,EAAK+T,aAAqC,EAASA,EAAMouD,8BAA2C,IAAPniE,GAAgBA,CAAU,IAOtHoiE,IAAuB,KAAApxB,gBAAemvB,IAAoBpsD,IACnE,IAAI/T,EACJ,OAAqF,QAA7EA,EAAK+T,aAAqC,EAASA,EAAMsuD,sBAAmC,IAAPriE,GAAgBA,CAAU,IAO9GsiE,IAA+B,KAAAtxB,gBAAemvB,IAAoBpsD,IAC3E,IAAI/T,EACJ,OAA6F,QAArFA,EAAK+T,aAAqC,EAASA,EAAMwuD,8BAA2C,IAAPviE,GAAgBA,CAAU,ICjM7H,IAAa,KAAAgxC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMyuD,mBAC/D,GAAmBjrB,GAAwBoU,aAAa,IACxD8W,GAAgC,GAAiBC,eAI1CC,GAAwB,GAAiBC,WAIzCC,GAA6B1mB,IAAwB/9C,IAAQ,KAAA4yC,gBAAeyxB,IAAgCD,GAE9GA,GADK,QAAgBpkE,QAMnB0kE,GAA6C3mB,IAAwB/9C,IAAQ,KAAA4yC,gBAAe6xB,GAA2BzkE,GAAMuiD,GAA4BviD,IAAO2kE,IACzK,IAAKA,EACD,OAAO,EAEX,MAAM,UAAEzjB,EAAS,MAAE/2C,EAAK,gBAAEy6D,GAAoBD,EAC9C,QAASC,IAAoB1jB,IAAc2gB,GAAqB13D,EAAM,MAK7D06D,GAA8C9mB,IAAwB/9C,IAAQ,KAAA4yC,gBAAeU,GAA2BoxB,GAA2C1kE,GAAMsiE,GAAwBgB,GAAqB7a,IAAgB,CAACqc,EAAuBC,EAAkBxC,EAAkBgB,EAAe5kE,KAC1T,MAAMqmE,EAAkBrpD,QAAQhd,EAASsmE,0BAA4B1C,GAC/D2C,EAAqBvpD,QAAQqpD,GAAmBzB,GACtD,OAAOuB,GAAyBC,GAAoBG,CAAkB,MAK7DC,GAA+CpnB,IAAwB/9C,IAAQ,KAAA4yC,gBAAeY,GAA4BkxB,GAA2C1kE,GAAMsiE,GAAwB7Z,IAAgB,CAAC2c,EAAuBL,EAAkBxC,EAAkB5jE,KACxR,MAAMqmE,EAAkBrpD,QAAQhd,EAASsmE,0BAA4B1C,GACrE,OAAO6C,GAAyBL,GAAoBC,CAAe,M,gBCxCvE3lE,eAAegmE,GAAcT,EAAiBhoE,GAE1C,OADiB,QAAqBgoE,EAC/BU,CAAS1oE,EACpB,CACA,SAAU2oE,GAAqBp6D,EAAKiP,EAAKpa,GAErC,WAD2B,QAAO0kE,GAA2C1kE,KAEzE,MAAMmM,GAAyBhB,EAAKiP,EAAK,yBAAwB,QAAgBpa,uCAEzF,CACA,SAAUwlE,GAA+Br6D,EAAKiP,GAC1C,MAAM,OAAExd,EAAM,IAAEoD,GAAQoa,EAAI/O,QAC5B,IAAIo6D,GAAY,EAOhB,GANsB,QAAlB7oE,EAAOwmB,SACPqiD,QAAkB,QAAOZ,GAA4C7kE,KAEnD,SAAlBpD,EAAOwmB,SACPqiD,QAAkB,QAAON,GAA6CnlE,MAErEylE,EACD,MAAMt5D,GAAyBhB,EAAKiP,EAAK,yBAAwB,QAAgBpa,6GAEzF,CC1BA,SAAS0lE,GAAYv6D,EAAKiuB,GACtB,MAAM,QAAE78B,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAainE,kBAAkBvsC,EACvE,CCFA,SAASK,GAAYtuB,EAAKiuB,GACtB,MAAM,QAAE78B,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAaknE,kBAAkBxsC,EACvE,CCCA,MAAM,IAAa,KAAAwZ,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMonC,SAOxD8oB,GANY1sC,GAAco0B,aAAa,IAMPC,UAMvCsY,IAA8B,KAAAlzB,gBAAeizB,GAAczjB,IAAkB,CAACrF,EAAQgpB,IAmBjFzhE,EAlBa,KAAQy4C,EAAOvhD,KAAK49B,IACpC,MAAMz3B,EAASokE,EAAWviE,IAAI41B,EAAMz3B,QACpC,GAAKA,EAcL,MANe,CACX5B,WAAY4B,EAAO5B,WACnB2C,IAAKf,EAAOe,IACZ1C,IAAK2B,EAAO3B,IACZo5B,QAES,QASR4sC,GAAyB,MAAStqD,IACpC,KAAAk3B,gBAAekzB,IAA8B/oB,IAChD,MAAM3jB,EAAQ2jB,EAAOv5C,IAAIkY,GACzB,GAAI0d,EACA,OAAOA,EAAMA,KACjB,KAEL,MAMU6sC,IAAkB,KAAArzB,gBAAeizB,IAAe9oB,GAClDz4C,EAA4By4C,KAO1BmpB,GAAmB,MAASlmE,IAC9B,KAAA4yC,gBAAeqzB,IAAkBlpB,GAC7BA,EAAOv5C,IAAIxD,MAEvB,MClEH,SAAS65B,GAAa1uB,EAAKg7D,GACvB,MAAM,QAAE5pE,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAa0nE,mBAAmBD,EACxE,CCPA,SAASE,GAAqBl7D,EAAKm7D,EAAgBvgC,GAC/C,MAAM,QAAExpC,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWY,aAAa6nE,oBAAoBD,EAAgBvgC,EACzF,CCFA,SAASygC,GAAmBr7D,EAAKm7D,EAAgBrqB,GAC7C,MAAM,QAAE1/C,EAAO,UAAEuB,GAAcqN,EAC/B,KAAK,QAASm7D,GACV,MAAM,IAAItqE,MAAM,+DAEpB,OAAOO,EACFuB,UAAUA,GACVY,aACA+nE,oBAAoBH,EAAgBA,EAAgBrqB,EAC7D,C,wCCyBA,SAASyqB,GAAyB/wD,EAAOhU,GACrC,MAAMglE,EAAmBjoB,GAA8B/oC,GACvD,OAAOgxD,EACDxmB,GAAwCwmB,EAAkBhlE,IAC1D,SAAiBA,EAAOud,YAClC,CACA,SAAS0nD,GAA0BjxD,GAC/B,OAAO8oC,GAAoC9oC,EAC/C,CACA,SAAUkxD,GAA+B17D,EAAKxJ,GAC1C,MACM+C,SAD2B,QAAO+5C,KACLjjD,IAAI0kD,IACvC,aAAa,QAAK4mB,GAA6B37D,EAAKxJ,EAAQ+C,EAChE,CAaA,SAASoiE,GAA4B37D,EAAKxJ,EAAQ+C,GAC9C,OAAOyG,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWY,aAAaooE,4BAA4BnlE,EAAQ+C,EACjG,CCjEOrF,eAAe0nE,GAAgBC,EAAWC,EAAOC,EAA8B/7D,GAClF,MAAMg8D,EAAe,CACjBhiE,SAAUgG,EAAI5O,QAAQI,aAAa4b,oBAC7B,CACErB,KAAM,CAACgwD,IAET,CACEE,cAAe,CAACF,KAW5B,aARiC/7D,EAAI5O,QAChCuB,UAAUkpE,GACV5oE,aACA+G,WACAkiE,eAAeJ,GACfthE,UAAU,GACV8yB,YAAY0uC,GACZvhE,SACqB7D,MAAM,GAAGiE,KACvC,CCTO,SAAUshE,GAA2BC,EAAah1D,EAAOpH,GAC5D,MAAMnC,EANV,SAA+Du+D,EAAah1D,GACxE,IAAI3Q,EACJ,OAC2F,QADnFA,EAAK2Q,EAAMmoB,aAAaC,aAAa33B,MAAMV,IAAS,QAAiCA,EAAK0G,UAC9F,QAAgB1G,EAAK0G,OAAOmzB,gBAAgBn8B,IAAKunE,EAAYlrB,OAAO3lC,sBAAkC,IAAP9U,OAAgB,EAASA,EAAGoH,MACnI,CAEmBw+D,CAAsDD,EAAah1D,GAClF,GAAKvJ,EAIL,aADkB,QAAK+9D,GAAiB57D,EAAIrN,UAAWypE,EAAYlrB,OAAOkT,qBAAsBvmD,EAAOy+D,oBAAoB/kE,IAAKyI,EAEpI,CCLO,SAASu8D,GAAmBhsD,EAAW+C,EAASrT,GACnD,MAAO,CACHjJ,KAAM,gCACNiJ,gBACAC,QAAS,CACLqQ,YACA+C,WAGZ,CAUO,SAASkpD,GAAwBjsD,EAAWtQ,GAC/C,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLqQ,aAGZ,CAUO,SAASksD,GAAsBlsD,EAAWtQ,GAC7C,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACLqQ,aAGZ,CCjDO,SAASmsD,GAAkB1mE,GAC9B,OAAO,QAAkBA,KAAQ,QAAaA,EAClD,CAKO,SAAS2mE,GAAsB3mE,GAClC,OAAQ,IAAQA,IAAqB,cAAbA,EAAIgB,IAChC,CCVO,SAAU4lE,GAAuC58D,EAAKuQ,GAEzD,MACMhX,SADyB,QAAKkB,GAAO8hE,GAAmBhsD,EAAW,QACxC5Y,OAAO+kE,IAExC,aADwD,QAAOre,KAGpD,CAAE9kD,UAASsjE,2BADiB,QAAKvjE,EAAqBC,EAASyG,EAAI5O,QAAS4O,EAAIrN,YAGpF,CAAE4G,UACb,CCHO,SAAUujE,GAAiBhB,EAAOiB,EAAcC,EAAgBh9D,GAEnE,MAAO,CACHpL,WAAYmoE,EACZE,mBAHuB,QAAKrB,GAAiB57D,EAAIrN,UAAWmpE,EAAOkB,EAAgBh9D,GAK3F,CAIA,SAASk9D,GAAyCC,EAA2BpzB,GACzE,MAAMqzB,EAA2BD,EAA0BtlE,MAAK,EAAGgG,aAAa,SAAsBA,KAAW,QAAgBksC,EAAclsC,EAAOmzB,gBAAgB6yB,OAAOhvD,OAC7K,GAAIuoE,IAA4B,QAAiCA,EAAyBv/D,QACtF,OAAOu/D,EAAyBv/D,OAAOy+D,mBAE/C,CACO,SAAUe,GAA2BC,EAAwBt9D,GAChE,GAAIA,EAAI5O,QAAQI,aAAa4b,oBACzB,MAAO,CACHmwD,wBAAyBD,EACzBE,4BAA6B,IAKrC,MACMC,SADuB,QAAOn0B,KACKj5C,KAAKqtE,GAAOA,EAAGptC,UAAUz7B,OAC1D8oE,KAAMH,EAA8B,GAAII,MAAOL,EAA0B,IAAO,KAAQD,GAAyBlyD,IAAOyyD,OApB/GC,EAoB2HL,EApBrH5oE,EAoBwIuW,EAAGklB,UAnB3JwtC,EAAK15C,MAAM25C,IAAY,QAAgBA,EAASlpE,KAD3D,IAAqBipE,EAAMjpE,CAoBqJ,IAC5K,MAAO,CACH2oE,8BACAD,0BAER,CACO,SAAUS,GAA0Cb,EAA2BG,EAAwBt9D,GAC1G,MAAMi+D,QAA0B,QAAKZ,GAA4BC,EAAwBt9D,IACnF,4BAAEw9D,EAA2B,wBAAED,GAA4BU,EAC3DC,EAAiBV,EAA4B7iE,QAAO,CAACwpC,GAAO3zC,GAAIusE,EAAczsC,gBAChF,MAAMgsC,EAAsBY,GAAyCC,EAA2B7sC,GAChG,OAAKgsC,GAGLn4B,EAAItuC,KAAK,CACLjB,WAAYmoE,EACZE,aAAcX,EAAoB/kE,MAE/B4sC,GANIA,CAMD,GACX,IACGg6B,QAAsB,QAAIZ,EAAwB5iE,QAAO,CAACwpC,EAAK54B,KACjE,MAAQ/a,GAAIusE,EAAY,UAAEzsC,EAAWz7B,IAAKinE,GAAUvwD,EAC9C+wD,EAAsBY,GAAyCC,EAA2B7sC,GAChG,OAAKgsC,GAGLn4B,EAAItuC,MAAK,QAAKinE,GAAkBhB,EAAOiB,EAAcT,EAAoB/kE,IAAKyI,IACvEmkC,GAHIA,CAGD,GACX,KACH,MAAO,IAAI+5B,KAAmBC,EAClC,CACA,MAAMC,GAAwBC,GAAc,KAAMA,GAAaA,EAAYC,mBAAmBD,GACvF,SAASjzB,GAAyBywB,EAAW0C,EAASv+D,GACzD,OAAOA,EAAI5O,QAAQuB,UAAUkpE,GAAW5oE,aAAam4C,yBAAyBmzB,EAClF,CACO,SAAUC,GAAoCvpE,EAAKkoE,EAA2Bn9D,GACjF,MAAMy+D,GAAmC,SAA2CxpE,GACpF,GAAgD,IAA5CwpE,EAAiC1iE,OACjC,MAAO,GAEX,MAAM4sC,QAAqB,QAAKyC,GAA0BprC,EAAIrN,UAAW8rE,EAAiCpuE,KAAKsE,IAAgB,QAAMA,EAAYC,cAAcoL,GACzJhG,QAAiB,QAAKgkE,GAA2Cb,EAA2Bx0B,EAAc3oC,GAChH,OAAOy+D,EAAiCpuE,KAAI,EAAGsE,YAAa+pE,EAAc9pE,aAAYE,kBAClF,IAAI2B,EACJ,MAAMwmE,EAAwF,QAAxExmE,EAAKuD,EAASnC,MAAM+C,GAAYA,EAAQhG,aAAeA,WAAgC,IAAP6B,OAAgB,EAASA,EAAGwmE,aAElI,MAAO,CACHyB,eACAC,YAHgB7pE,EAAcspE,GAAqBnB,GAAgBA,EAItE,GAET,CACA,MAAM2B,GAA8B,CAACF,EAAcC,EAAc,MAAO,CAAGD,eAAcC,cAAaE,iBAAiB,IAChH,SAAUC,GAAkCC,EAAWxuD,EAAWvQ,GACrE,MAAM,UAAErN,EAAS,SAAEqsE,EAAQ,cAAEC,GAAkBj/D,EACzCk/D,QAAoB,QAAO/kB,IAC3B3jD,QAAe,QAAO4gD,GAA4B7mC,IAClD+C,QAAgB,QAAOkvC,GAAmBhsD,EAAO8c,UACjD6rD,EAAe,CACjBP,GAA4B7gE,EAAyBqhE,WAAYzsE,GACjEisE,GAA4B7gE,EAAyBshE,aAAc1sE,GACnEisE,GAA4B7gE,EAAyBuhE,aAAcJ,GACnEN,GAA4B7gE,EAAyBwhE,UAAWP,GAChEJ,GAA4B7gE,EAAyByhE,gBAAiBP,GACtEL,GAA4B7gE,EAAyB0hE,YAAY,QAAUnsD,KAE/E,OAAIyrD,EAAUr+C,SAAS3iB,EAAyB2hE,WACrC,IACAP,EACHP,GAA4B7gE,EAAyB2hE,UAAWlpE,EAAO5B,aAGxEuqE,CACX,CAEO,SAAUQ,GAAwBvD,EAAa7rD,EAAWnJ,EAAOpH,EAAKiP,GACzE,MAAM8vD,EAAY3C,EAAYlrB,OAAOj8C,IAC/B2qE,QAAyC,QAAKpB,GAAqCO,EAAW33D,EAAMmoB,aAAaC,aAAcxvB,GAC/H6/D,EAAqBD,EAAiC/nE,MAAK,EAAG8mE,sBAAkCtoE,IAAhBsoE,IACtF,GAAIkB,EACA,MAAM7+D,GAAyBhB,EAAKiP,EAAK,2DAA2D4wD,EAAmBnB,gBAE3H,MAAMoB,QAAuC,QAAKhB,GAAmCC,EAAWxuD,EAAWvQ,GAE3G,MAVsB,EAAC/K,EAAKkqE,IAAiBA,EAAaxkE,QAAO,CAAColE,GAAqCrB,eAAcC,cAAaE,qBAAsBkB,EAAkC11D,QAAQw0D,EAAkB,IAAImB,OAAOtB,EAAc,KAAOA,EAAcC,IAAc1pE,GAUzQgrE,CAAkBlB,EADJ,IAAIa,KAAqCE,GAElE,CC7HA,MCGMI,IAAa,SAAY,CAC3BzyD,KAAM,OACNC,aCN6B,CAAEyyD,eAAgB,IDO/CxyD,SDHyB,CACzByyD,kBAJsB,CAAC51D,EAAOC,KAC9BD,EAAM21D,eAAiB11D,EAAOvK,OAAO,KCO5BmgE,GAAoBH,GAAWryD,QAC/ByyD,GAAeJ,GAAWnyD,QEPjCwyD,IAAoB,SAAY,CAClC9yD,KAAM,eACNC,aAAc22C,GAAoB5tC,kBAClC9I,SAAU,CACN6yD,gBAAiBnc,GAAoBttC,aAGhC0pD,GAAsBF,GAAkB1yD,QACxC6yD,GAAsBH,GAAkBxyD,QCT9C7Z,eAAeysE,GAA0B3gE,EAAK4gE,EAAiBr1D,GAElE,IAAKq1D,EACD,MAAO,2BAEX,MAAM,QAAExvE,EAAO,UAAEuB,GAAcqN,EAI/B,aAHqC5O,EAAQuB,UAAUA,GAAWM,aAAa4tE,aAAaD,IAAkBj4B,aAGpFvkB,MAAMhZ,IAAO,SAAgB,QAAMA,EAAG5a,GAAI,eAAgB+a,KAChF,SAAgB,QAAOH,EAAG7T,KAAMgU,KACzB,QAEJ,gCACX,CCLO,SAASu1D,GAA4Bn4B,EAAc1oC,GACtD,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACLyoC,gBAGZ,CChBA,MAAM,IAAa,KAAAlB,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMwlC,mBAMxD+wB,IAAyB,KAAAt5B,gBAAe,IAAaj9B,KAC9D,QAAUA,EAAMwlC,iBAAkB,6DAC3BxlC,EAAMwlC,oBCPV,SAAUgxB,GAAiBnwD,EAAO7Q,EAAKiP,GAC1C,MAAM+gC,QAAyB,QAAO+wB,IACtC,KCJG,SAAgClwD,EAAOowD,GAC1C,MAAMC,EAAoBD,EAA0BppE,MAAMspE,IAAS,QAAgBA,EAAKtsE,IAAKgc,EAAMqgC,UACnG,IAAKgwB,EACD,MAAMrwE,MAAM,uBAAsB,EAAA4L,EAAA,IAAeoU,EAAMqgC,0BAE3D,IAAKgwB,EAAkBrxB,KAAKzrB,MAAM0rB,GAAQA,EAAIl7C,aAAeic,EAAMi/B,MAC/D,MAAMj/C,MAAM,uBAAsB,EAAA4L,EAAA,IAAeoU,EAAMqgC,gDAAgDrgC,EAAMi/B,OAErH,CDHQsxB,CAAuBvwD,EAAOm/B,EAClC,CACA,MAAOuV,GAEH,MAAMvkD,GAAyBhB,EAAKiP,EAAK,oCADnBs2C,EAAGrkD,UAE7B,CACJ,CEbO,SAASmgE,GAAYrhE,EAAKmT,GAC7B,OAAOnT,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWW,WAAW89C,WAAWj+B,EACtE,CCuEO,MAAMmuD,GAAyB,CAClC,0BxFsHG,UAAqCthE,EAAKiP,GAC7C,MAAM,aAAEue,GAAiBxtB,EACzB,IAEI,IAAIlG,EASJ,aAVM,QAAIgc,GAAeJ,mBAGrB5b,EADA0zB,QACe,QAAKkkB,GAAuB1xC,EAAKiP,EAAKue,SAGtC,QAAK0kB,GAAwBlyC,EAAKiP,SAE/C,QAAInV,EAAOm4C,aACX,QAAIn8B,GAAeH,qBAClB7b,EAAOsN,KAClB,CACA,MAAOxW,GAEH,YADM,QAAIklB,GAAeF,gBAAgBhlB,IACnCA,CACV,CACJ,EwFxII,oBxD+CG,UAA+BoP,EAAKiP,GACvC,UACU,QAAIoH,GAAcJ,kBACxB,MACMyyC,OAAwCryD,WADb,QAAOujD,KAElCwO,QAAgB,QAAKU,GAA4B75C,EAAKy5C,GAC5D,IAAI5uD,EAEAA,EADA4uD,QACe,QAAKM,GAAMhpD,EAAKooD,EAASD,GAAiB,6BAG1C,QAAKa,GAAMhpD,EAAKooD,EAASE,GAAiB,4BAE7D,MAAM,UAAEhyD,EAAS,MAAE27C,GAAUn4C,EAc7B,aAbM,QAAIm4C,GACNyW,IAKA1oD,EAAIwtB,aAAel3B,EAAUzB,YAEN,QAAO+jD,aAExB,QAAKkP,GAAyB9nD,EAAKwyC,GAAiB,YAAQn8C,EAAW4Y,EAAIhP,uBAE/E,QAAIoW,GAAcH,oBnL7GzB,SAAwBlW,EAAK1J,EAAWirE,EAActhE,GACzD,MAAO,CACHjJ,KAAM,qBACNgJ,MACAC,gBACAC,QAAS,CACL5J,YACAirE,gBAGZ,CmLoGeC,CAAexhE,EAAK1J,EAAWoyD,EAAgBz5C,EAAIhP,cAC9D,CACA,MAAOrP,GAEH,YADM,QAAIylB,GAAcF,eAAevlB,IACjCA,CACV,CACJ,EwD/EI,sBtDoBG,UAAiCoP,EAAKiP,GACzC,IAAIxY,EACJ,UACU,QAAI4f,GAAcJ,kBACxB,MAAMszC,QAAkB,QAAKC,GAA8Bv6C,IACnD/O,SAAS,aAAEyJ,IAAoBsF,EACjCnV,QAAe,QAAK+vD,GAAQ7pD,EAAKupD,IACjC,UAAEjzD,EAAS,MAAE27C,GAAUn4C,EACzBm4C,UACM,QAAIA,IAEVtoC,IAKA3J,EAAIwtB,aAAel3B,EAAUzB,KAEjC,MAAMu0D,EAAkBpB,GAAsB1xD,GAS9C,aARM,QAAIwhC,GAAwBF,mBAAmBwxB,UAC/C,QAAIxa,GAA4BF,uBAAuB0a,WAClC,QAAOxQ,aAExB,QAAKkP,GAAyB9nD,EAAKwyC,GAAiB,YAAQn8C,EAAW4Y,EAAIhP,uBAE/E,QAAIoW,GAAcH,oBrLhEzB,SAA4BlW,EAAK1J,EAAWmrE,EAA2BxhE,GAC1E,MAAO,CACHjJ,KAAM,0BACNgJ,MACAC,gBACAC,QAAS,CACL5J,YACAmrE,6BAGZ,CqLwDeC,CAAmB1hE,EAAK1J,EADoD,QAAhDG,EAAK8yD,EAAUR,mBAAmBzuB,gBAA6B,IAAP7jC,GAAgBA,EACtCwY,EAAIhP,cAC7E,CACA,MAAOrP,GAEH,YADM,QAAIylB,GAAcF,eAAevlB,IACjCA,CACV,CACJ,EsDpDI,qB1ElEG,UAAgCoP,EAAKiP,GACxC,MAAMoE,QAAa,QAAK6vC,GAA6BljD,GAErD,aADM,SAAI,SAAaqT,EAAK4+B,MAAO,qBAC5BzxC,GAAkBR,EAAKqT,EAAK7J,mBAAoByF,EAAIhP,cAC/D,E0E+DI,sBC3EG,UAAiCD,EAAKiP,GACzC,MAAM,SAAEnF,GAAamF,EAAI/O,QAEzB,aADM,QAAIw6B,GAAYH,kBAAkBzwB,I5OsErC,SAA0B9J,EAAK8J,EAAU7J,GAC5C,MAAO,CACHjJ,KAAM,uBACNgJ,MACAC,gBACAC,QAAS,CACL4J,YAGZ,C4O9EW63D,CAAiB3hE,EAAK8J,EAAUmF,EAAIhP,cAC/C,EDwEI,sBrD9CG,UAAiCD,EAAKiP,GACzC,MAAM2yD,EAAuB5hE,EAAIwtB,aAC3BhkB,QAA2B,QAAOowC,IACxC,IAAKpwC,EACD,MAAMxI,GAAyBhB,EAAKiP,EAAK,0DAW7C,OANA,QAAU2yD,KACL,QAAgBA,GAAsB,QAAOp4D,EAAmBjS,QAC7D,QAAgBqqE,GAAsB,QAAMp4D,EAAmB5U,qBAEjE,QAAK,GAAiBoL,EAAKwJ,EAAmB3U,WAC9C,QAAKm1D,GAAqBhqD,GtL8D7B,SAA0BA,EAAK1J,EAAW2J,GAC7C,MAAO,CACHjJ,KAAM,uBACNgJ,MACAC,gBACAC,QAAS,CACL5J,aAGZ,CsLtEWurE,CAAiB7hE,EAAKwJ,EAAoByF,EAAIhP,cACzD,EqD+BI,kCAAmC6nD,GACnC,8BlDNG,UAA+B9nD,EAAKiP,GAEvC,WAD2B,QAAOirC,KAE9B,MAAMl5C,GAAyBhB,EAAKiP,EAAK,+DAE7C,MAAMq7C,QAAuB,QAAKH,GAAmCl7C,GAC/DnV,QAAe,QAAK+wD,GAAa7qD,EAAKsqD,IACtC,MAAErY,EAAK,UAAE37C,GAAcwD,EAS7B,OARIm4C,UACM,QAAIA,IzL2FX,SAAiCjyC,EAAKgK,EAAsB/J,GAC/D,MAAO,CACHjJ,KAAM,+BACNgJ,MACAC,gBACAC,QAAS,CACL8J,wBAGZ,CyL7FW83D,CAAwB9hE,EADIhP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgW,EAAI/O,QAAQ8J,sBAAuB,CAAE+vB,YAAazjC,EAAUyjC,cAC/D9qB,EAAIhP,cACxE,EkDVI,0BnDxEG,UAAsCD,EAAKiP,SACxC,QxLoIH,SAAuCjP,EAAKC,GAC/C,MAAO,CACHjJ,KAAM,oCACNgJ,MACAC,gBAER,CwL1Ic8hE,CAA8B/hE,EAAKiP,EAAIhP,gBACjD,MAAMutB,QAAqB,QAAO0sB,IAClC,IAAK1sB,EACD,MAAMxsB,GAAyBhB,EAAKiP,EAAK,mDAE7C,MACM+yD,EAAmB9X,SADU,QAAO7W,KAEpCv5C,QAAe,QAAK,GAAsBkG,EAAKwtB,EAAcw0C,GAE7DC,EAAUjiE,EAAI5O,QAAQK,OAAOM,SAC7B,IAAImwE,IAAIpoE,EAAOvC,IAAKyI,EAAI5O,QAAQK,OAAOM,UAAUowE,KACjDroE,EAAOvC,IAEb,OxLqIG,SAAsCyI,EAAKlG,EAAQmG,GACtD,MAAO,CACHjJ,KAAM,mCACNgJ,MACAC,gBACAC,QAAS,CACLkiE,UAAWtoE,EAAOvC,IAClBuC,UAGZ,CwL/IWuoE,CAA6BriE,EADZhP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGa,GAAS,CAAEvC,IAAK0qE,IACdhzD,EAAIhP,cAClE,EmD0DI,6BElFG,UAA8BD,EAAKiP,GAEtC,MAAMqzD,EAAYtxE,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgW,EAAI/O,QAAQqiE,WAAY,CAAEviE,cACtEkX,GAAuBorD,EACjC,EF+EI,uCGlFG,UAAuCpO,EAAMjlD,SAC1C,QAAIq/B,GAAwBJ,sBAAsBj/B,EAAI/O,SAChE,EHiFI,+C/ClDG,UAA8CF,EAAKiP,GACtD,MAAM,QAAE1V,EAAO,YAAE0yD,GAAgBh9C,EAAI/O,QAC/BsiE,EAAoBjpE,EAAQlJ,KAAKsH,IAC/B,OAA2BA,KAAW,QAAsBA,GACrDA,EA1BnB,SAA4CA,GACxC,IAAI,QAAkBA,GAClB,MAAO,CACHoT,gBAAiB,CACbiB,mBAAmB,QAA0BrU,GAC7C4T,aAAa,QAAa5T,GAC1BmU,mBAAmB,QAAwBnU,GAC3CgU,cAAe,UAItB,IAAI,QAAqBhU,GAC1B,OAAO,QAA+BA,EAAOgC,mBAAmBD,KAAM/B,EAAOgC,mBAAmBC,IAE/F,IAAI,QAAoBjC,GACzB,OAAO,UAEN,IAAI,QAAqBA,GAC1B,OAAO,QAA+BA,EAAOqD,mBAAmBQ,YAAa7D,EAAOqD,mBAAmBtB,KAAM/B,EAAOqD,mBAAmBpB,IAE3I,MAAM,IAAI,MAAa,kEAC3B,CAQmB6oE,CAAmC9qE,KAG5C+qE,EAAgB,KAAOF,GAAoB7qE,IAC7C,MAAMgrE,GAAiB,OAA2BhrE,GAC5CA,EAAOoT,gBAAgBQ,YACvB5T,EAAOsT,WAAWlS,QACxB,OAAO4pE,GAAiB,EAAAlmE,EAAA,IAAekmE,GAAkBA,CAAc,MAEnE13D,GAAavO,GAAoB,KAAUgmE,EAAe,OAC3DE,EAA8BC,SAAiC,QAAI,EACtE,QAAK7W,GAAkCtvD,EAAkBuvD,EAAajsD,IACtE,QAAK4sD,GAA4B3hD,EAAYghD,WAE3C,SAAI,SAAa,IAAI2W,KAAiCC,WACtD,QAAK3X,GAA8BlrD,EAAKiP,EAClD,E+C4BI,2DI7EG,UAA2CjP,EAAKiP,GACnD,MAAM6zD,EAAiC,aAArB7zD,EAAI/O,QAAQlJ,MACE,kBAA5BiY,EAAI/O,QAAQ1E,kBACSnF,IAArB4Y,EAAI/O,QAAQxG,WACOrD,IAAnB4Y,EAAI/O,QAAQtG,GAiBpB,IAAyCmpE,EAfrC,WADuB,QAAK3X,IAgBS2X,EAhB2C9zD,EAAI/O,QAiBnD,aAA7B6iE,EAAoB/rE,MAAuB+rE,EAAoBrpE,MAAQqpE,EAAoBnpE,IACpF,QAA+BmpE,EAAoBrpE,KAAKo/B,WAAYiqC,EAAoBnpE,GAAGk/B,YAEhE,aAA7BiqC,EAAoB/rE,MACW,kBAApC+rE,EAAoBvnE,kBACSnF,IAA7B0sE,EAAoBrpE,WACOrD,IAA3B0sE,EAAoBnpE,IACb,WAGA,QAA+BmpE,EAAoBvnE,YAAa,KAASunE,EAAoBrpE,MAAO,KAASqpE,EAAoBnpE,QAzBxI,MAAMoH,GAAyBhB,EAAKiP,EAAK,qFAEvC,QAAInB,GAAqBb,iBAAiB61D,EAC1C,CAAE9rE,KAAM,WACR,CACEA,KAAMiY,EAAI/O,QAAQlJ,KAClBwE,YAAayT,EAAI/O,QAAQ1E,YACzB9B,KAAMuV,EAAI/O,QAAQxG,KAClBE,GAAIqV,EAAI/O,QAAQtG,MAExB,MAAMopE,QAAuB,QAAOzvB,UAC9Br8B,G7O1BH,SAA2BlX,EAAKrI,EAAQsrE,EAAyBhjE,GACpE,MAAO,CACHjJ,KAAM,4DACNgJ,MACAC,gBACAC,QAAS,CACLvI,SACAsrE,2BAGZ,C6OgBiCC,CAAkBljE,EAAKgjE,EAAgB/zD,EAAI/O,QAAQ+iE,wBAAyBh0D,EAAIhP,sBACvG,QAAKirD,GAA8BlrD,EAAKiP,EAClD,EJ0DI,mDKzEG,UAAoCjP,EAAKiP,GAC5C,MAAM,YAAE1D,EAAW,MAAExW,EAAK,2BAAEyW,EAA0B,iBAAEC,EAAgB,cAAEC,EAAa,cAAEC,GAAkBsD,EAAI/O,QAE/G,WADsC,QAAOw0C,KAEzC,MAAM1zC,GAAyBhB,EAAKiP,EAAK,6FAE7C,MAAMk+C,QAAmB,QAAO7Z,IAC1B6vB,QAA4B,QAAK93B,GAA4BrrC,EAAK,CAACuL,IACzE,IAAK,IAAQ43D,EAAoBx3B,SAC7B,MAAM3qC,GAAyBhB,EAAKiP,EAAK,6DAA4D,EAAAxS,EAAA,IAAe8O,OAExH,MAAM63D,EAAsBD,EAAoB1pE,SAASpB,IAAIkT,IAC7D,QAAU63D,GACV,MAAMr5B,EAAeq5B,EAAoB9yC,UAEzC,WADyB,QAAK28B,GAAkBjtD,EAAKuL,EAAa4hD,IAE9D,MAAMnsD,GAAyBhB,EAAKiP,EAAK,yBAAwB,EAAAxS,EAAA,IAAestC,sCAAgD,EAAAttC,EAAA,IAAe8O,kDAE7I,SAAI,SAAa,CACnBuC,GAAqBxC,mBAAmB,CACpCC,YAAa63D,EAAoBvuE,IACjCE,QACAyW,6BACAC,mBACAC,gBACAC,kBAEJmC,GAAqBzC,8BAA8B+3D,MAEvD,MAAMC,QAAoB,QAAO7vB,GAAgD4vB,EAAoBvuE,OACrG,QAAUwuE,EAAa,gEACjBnsD,G9O1BH,SAA8BlX,EAAKsjE,EAAOvuE,EAAOkL,GACpD,MAAO,CACHjJ,KAAM,qDACNgJ,MACAC,gBACAC,QAAS,CACLojE,QACAvuE,SAGZ,C8OgBiCwuE,CAAqBvjE,EAAKqjE,EAAap0D,EAAI/O,QAAQnL,MAAOka,EAAIhP,sBACrF,QAAKirD,GAA8BlrD,EAAKiP,EAClD,ELyCI,sDM5EG,UAAwCjP,EAAKiP,GAChD,MAAM,eAAEnC,GAAmBmC,EAAI/O,QACzBitD,QAAmB,QAAO7Z,KACzBkwB,EAAgBC,GAAoB,KAAUtW,GAAah2D,GAAS2V,EAAe4T,SAASvpB,EAAK4T,gBAAgBC,mBAClH04D,EAAkB,KAAW52D,EAAgBqgD,EAAW98D,KAAKsH,GAAWA,EAAOoT,gBAAgBC,mBACrG,GAAI04D,EAAgB3nE,OAChB,MAAMiF,GAAyBhB,EAAKiP,EAAK,8DAA8Dy0D,EAAgBluE,KAAK,UAEhI,IAAK,MAAMmuE,KAAiBH,EAAgB,CACxC,MAAMI,EAAmBH,EAAiB9rE,QAAQR,IAC9C,IAAIV,EACJ,OAAwD,QAAhDA,EAAKU,EAAK4T,gBAAgBkB,wBAAqC,IAAPxV,OAAgB,EAASA,EAAG2tB,MAAM4vB,GAAWlnC,EAAe4T,SAASszB,EAAO1G,wBAAuB,IAEjK2E,GAAQ,SAAa,IAEpB2xB,EAAiBvzE,KAAI,EAAG0a,qBAAsB+C,GAAqBlB,0BAA0B,CAC5FL,cAAexB,EAAgBC,gBAC/BU,cAAeX,EAAgBkB,iBAAiBtU,QAAQq8C,GAAWA,EAAO1G,yBAA2Bq2B,aAAqD,EAASA,EAAc54D,gBAAgBC,uBAGrM8C,GAAqBxB,sBAAsB,CACvCC,cAAeo3D,EAAc54D,gBAAgBC,kBAGjD8C,GAAqB3C,kCAAkCw4D,EAAc54D,gBAAgBQ,aAErFgK,GAAcnE,6BAA6B,CACvCC,gBAAiB,CAACsyD,EAAc54D,gBAAgBQ,uBAGlD,QAAI0mC,SACJ/6B,GAAuBpV,GAAuB9B,EAAK2jE,EAAeC,EAAkB30D,EAAIhP,eAClG,OACM,QAAKirD,GAA8BlrD,EAAKiP,EAClD,EN2CI,oDOjFG,UAAqCjP,EAAKiP,GAC7C,MAAM,cAAE1C,EAAa,MAAExX,GAAUka,EAAI/O,QAE/B8iE,QAAuB,QAAOtvB,GAA4CnnC,IAChF,IAAKy2D,EACD,MAAMhiE,GAAyBhB,EAAKiP,EAAK,6BAA6B1C,gBAG1E,MACMs3D,SADmB,QAAOxwB,KACMt3C,OAAS,EAC/C,GAAIhH,EAAQ8uE,GAAsB9uE,GAAS,EACvC,MAAMiM,GAAyBhB,EAAKiP,EAAK,kBAAkBla,0CAA8C8uE,KAE7G,MAAMC,QAAsB,QAAOlwB,GAAiDrnC,UAC9E,QAAIuB,GAAqBtB,oBAAoB,CAC/CD,gBACAxX,WAEJ,MAAMgvE,QAAmB,QAAOnwB,GAAiDrnC,UAC3E2K,GhP4BH,SAA8BlX,EAAKgkE,EAAOnyD,EAAWD,EAAS3R,GACjE,MAAO,CACHjJ,KAAM,qDACNgJ,MACAC,gBACAC,QAAS,CACL8jE,QACAnyD,YACAD,WAGZ,CgPvCiCqyD,CAAqBjkE,EAAKgjE,EAAgBc,EAAeC,EAAY90D,EAAIhP,sBAChG,QAAKirD,GAA8BlrD,EAAKiP,EAClD,EP6DI,gEQjFG,UAAgDjP,EAAKiP,GACxD,MAAM,SAAEjV,EAAQ,cAAEuS,EAAa,cAAE23D,GAAkBj1D,EAAI/O,QAGvD,WAD6B,QAAOwzC,GAA4CzkC,EAAI/O,QAAQqM,iBAExF,MAAMvL,GAAyBhB,EAAKiP,EAAK,6BAA6B1C,sBAEpE,QAAIuB,GAAqBpB,+BAA+B,CAC1D1S,WACAuS,gBACAP,kBAAqC,WAAlBk4D,KAEvB,MAAMC,QAAsB,QAAOzwB,GAA4CzkC,EAAI/O,QAAQqM,iBAC3F,QAAU43D,EAAe,sEACzB,MAAMC,QAAwB,QAAOvwB,GAAiCswB,EAAcp5D,gBAAgBC,wBAC9F,QAAIo5D,EAAgB/zE,KAAKg0E,IAAkB,QAAIv2D,GAAqBpB,+BAA+B,CACrGH,cAAe83D,EACfrqE,SAAU,CACN+R,KAAM,IAEVC,mBAAmB,cAEjBkL,GjP2CH,SAAyClX,EAAKrI,EAAQsI,GACzD,MAAO,CACHjJ,KAAM,iEACNgJ,MACAC,gBACAC,QAAS,CACLvI,UAGZ,CiPpDiC2sE,CAAgCtkE,EAAKmkE,EAAel1D,EAAIhP,sBAC/E,QAAKirD,GAA8BlrD,EAAKiP,EAClD,ER0DI,2DSjFG,UAA2CjP,EAAKiP,GACnD,MAAM,cAAE1C,EAAa,cAAEb,GAAkBuD,EAAI/O,QACvCitD,QAAmB,QAAO7Z,IAC1B0vB,QAAuB,QAAOtvB,GAA4CnnC,IAC1Eq5C,QAAwB,QAAO,IACrC,IAAKod,EACD,MAAMhiE,GAAyBhB,EAAKiP,EAAK,uBAAuB1C,oBAEpE,MAAMka,QAAyB,QAAKinC,GAAgC1tD,EAAKgjE,EAAgB,IAAIt3D,GAAgByhD,EAAYvH,GACzH,GAAyB,UAArBn/B,EAOA,MAAMzlB,GAAyBhB,EAAKiP,EANC,sBAArBwX,EACV,gKAEqB,qBAArBA,EACI,oGACA,oHAGR,QAAI3Y,GAAqBlB,0BAA0B,CACrDL,gBACAb,mBAEJ,MAAMy4D,QAAsB,QAAOzwB,GAA4CnnC,KAC/E,QAAU43D,EAAe,sEACnBjtD,GlPyDH,SAAsClX,EAAKrI,EAAQsI,GACtD,MAAO,CACHjJ,KAAM,8DACNgJ,MACAC,gBACAC,QAAS,CACLvI,UAGZ,CkPlEiC4sE,CAA6BvkE,EAAKmkE,EAAel1D,EAAIhP,sBAC5E,QAAKirD,GAA8BlrD,EAAKiP,EAClD,ETwDI,gEU5EG,UAA4CjP,EAAKiP,GACpD,MAAM,cAAE1C,EAAa,YAAEhB,GAAgB0D,EAAI/O,SACnC9O,SAAWI,cAAc,oBAAE4b,KAA8BpN,EAC3DwkE,QAA+B,QAAO95B,IACtCz3C,QAAmB,QAAKwH,GAAOqmE,GAA4B,CAACv1D,KAC5DkoC,EAA2Bz6C,EAAkB,IAAI,KAAQ/F,GAAas3B,GAAMA,EAAEoe,iBAC9E87B,EAAkBD,EAAuBnsE,IAAIkT,IAAgBkoC,EAAyBp7C,IAAIkT,IAChG,QAAUk5D,EAAiB,2IAC3B,MAAMn0C,EAAYm0C,aAAyD,EAASA,EAAgBn0C,UAC9F7J,QAAyB,QAAKk6C,GAA2B3gE,EAAKswB,EAAW/kB,GAC/E,GAAyB,UAArBkb,EAIA,MAAMzlB,GAAyBhB,EAAKiP,EAHC,mCAArBwX,EACV,iFACA,sFAGJ,SAAI,SAAa,CAEnB3Y,GAAqBzC,8BAA8Bo5D,GACnD32D,GAAqBX,2BAA2B,CAC5CZ,gBACAhB,cACA6B,2BAGR,MAAM+2D,QAAsB,QAAOzwB,GAA4CnnC,KAC/E,QAAU43D,EAAe,6HACnBjtD,GnPkFH,SAAqClX,EAAKrI,EAAQsI,GACrD,MAAO,CACHjJ,KAAM,oEACNgJ,MACAC,gBACAC,QAAS,CACLvI,UAGZ,CmP3FiC+sE,CAA4B1kE,EAAKmkE,EAAel1D,EAAIhP,sBAC3E,QAAKirD,GAA8BlrD,EAAKiP,EAClD,EVgDI,yDWpFG,UAAsCjP,EAAKiP,GAC9C,MAAM,cAAE1C,EAAa,MAAE1R,GAAUoU,EAAI/O,QAGrC,WAD6B,QAAOwzC,GAA4CzkC,EAAI/O,QAAQqM,iBAExF,MAAMvL,GAAyBhB,EAAKiP,EAAK,6BAA6B1C,sBAEpE,QAAIuB,GAAqBT,qBAAqB,CAChDd,gBACA1R,WAEJ,MAAMspE,QAAsB,QAAOzwB,GAA4CzkC,EAAI/O,QAAQqM,iBAC3F,QAAU43D,EAAe,uHACnBjtD,GpPsFH,SAAsClX,EAAKrI,EAAQsI,GACtD,MAAO,CACHjJ,KAAM,6DACNgJ,MACAC,gBACAC,QAAS,CACLvI,UAGZ,CoP/FiCgtE,CAA6B3kE,EAAKmkE,EAAel1D,EAAIhP,sBAC5E,QAAKirD,GAA8BlrD,EAAKiP,EAClD,EXsEI,kEYrFG,UAA8CjP,EAAKiP,GACtD,MAAM,cAAE1C,EAAa,cAAEZ,GAAkBsD,EAAI/O,QAG7C,WAD6B,QAAOwzC,GAA4CzkC,EAAI/O,QAAQqM,iBAExF,MAAMvL,GAAyBhB,EAAKiP,EAAK,6BAA6B1C,sBAEpE,QAAIuB,GAAqBP,oBAAoB,CAC/ChB,gBACAZ,mBAEJ,MAAMw4D,QAAsB,QAAOzwB,GAA4CzkC,EAAI/O,QAAQqM,iBAC3F,QAAU43D,EAAe,+HACnBjtD,GrPiHH,SAAuClX,EAAKrI,EAAQsI,GACvD,MAAO,CACHjJ,KAAM,sEACNgJ,MACAC,gBACAC,QAAS,CACLvI,UAGZ,CqP1HiCitE,CAA8B5kE,EAAKmkE,EAAel1D,EAAIhP,sBAC7E,QAAKirD,GAA8BlrD,EAAKiP,EAClD,EZuEI,wCapEG,UAAkCjP,EAAKiP,GAC1C,MAAQ/O,SAAS,aAAE2kE,EAAe,KAAU51D,EACtCyjD,EAAa,CACf1yD,MACAiP,MACA41D,aAAc7nB,GAA8B6nB,GAC5Cz1D,aAAc,QAAO0nC,IACrBznC,YAAa,QAAOgnC,IACpByuB,wBAAyB,QAAOviB,KAE9BwiB,EArBV,SAAiCrS,GAC7B,MAAM,IAAE1yD,EAAG,OAAEoP,EAAM,MAAEC,EAAK,aAAEw1D,EAAc51D,KAAO/O,SAAS,MAAEnL,KAAgB29D,EAC5E,IAAKlE,GAAyBp/C,EAAQra,GAClC,MAAMiM,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,mDAAmDla,0BAA8Bqa,EAAOgB,SAASrU,oBAEzJ,MAAMgpE,EAAwBnW,GAA+Bv/C,EAAOw1D,GACpE,IAAK,IAAQE,EAAsBp5B,SAC/B,MAAM3qC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,2EAA2E81D,EAAsBp5B,QAAQn2C,KAAK,SAEtK,OAAOuvE,CACX,CAWkCC,CAAwBtS,IAC9CxyD,SAAS,MAAEnL,EAAK,cAAEkwE,EAAa,6BAAEC,IAAoCj2D,EACvEk2D,QAA4B,QAAKzT,GAAiC1xD,EAAK+kE,EAAuB91D,GAC9Fm2D,QAAmB,QAAK/S,GAAsCryD,EAAKiP,EAAKk2D,EAAqBD,GAC7FxiE,EAAU,CACZ1L,KAAM,0BACN6G,OAAQ00D,GAAe0S,GACvBruE,MAAOwuE,GAaX,aAXM,SAAI,SAAa,CACnBnuD,GAAgBL,YAAYuuD,EAAoB5hB,iBAAiBZ,QACjEptC,GAAc/D,WAAW,CACrB9O,UACA+O,YAAaszD,EAAsBzvC,SACnCvgC,QACA6Z,KAAM,CACFK,YrPpDT,SAA4BjP,EAAK0C,EAAS3N,EAAOkL,GACpD,MAAO,CACHjJ,KAAM,0CACNgJ,MACAC,gBACAC,QAAS,CACLwC,UACA3N,SAGZ,CqP8CWswE,CAAmBrlE,EAAK0C,EAASkN,GAAsB8iD,EAAWtjD,OAAOgB,SAAUrb,GAAQka,EAAIhP,cAC1G,EbsCI,yCczEG,UAAmCD,EAAKiP,GAC3C,MAAMyjD,EAAa,CACf1yD,MACAiP,MACAG,aAAc,QAAO0nC,MAEnB,cAAEwuB,GAtBZ,SAA4B5S,GACxB,MAAM,IAAE1yD,EAAKiP,KAAO/O,SAAS,aAAEiQ,EAAY,QAAEyB,IAAY,OAAExC,GAAYsjD,EACvE,IAAKjE,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,sDAAsDkB,qBAAgCf,EAAOgB,SAASrU,oBAE9J,IAAKyyD,GAAyBp/C,EAAQwC,GAClC,MAAM5Q,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,+CAA+C2C,0BAAgCxC,EAAOgB,SAASrU,oBAEvJ,MAAMupE,EAAgB31D,GAAqBP,EAAOgB,SAAUwB,GAC5D,GAAIzB,IAAiBm1D,EACjB,MAAMtkE,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,uEAAuEkB,MAE/H,MAAO,CACHm1D,gBAER,CAO8BC,CAAmB7S,IACvC,aAAEviD,EAAY,QAAEyB,GAAY3C,EAAI/O,QAStC,aARM,QAAIqV,GAAc5D,YAAY,CAChCxB,eACAyB,UACAhD,KAAM,CACFK,UtPhBL,SAA4BjP,EAAK0C,EAASmP,EAAWD,EAAS3R,GACjE,MAAO,CACHjJ,KAAM,0CACNgJ,MACAC,gBACAC,QAAS,CACLwC,UACAmP,YACAD,WAGZ,CsPSW4zD,CAAmBxlE,EADV0yD,EAAWtjD,OAAOgB,SAASD,GACHA,EAAcm1D,EAAer2D,EAAIhP,cAC7E,EdyDI,2CezFG,UAAqCD,EAAKiP,GAC7C,MAAMG,QAAe,QAAO0nC,KACtB,MAAE/hD,EAAK,gBAAE6N,GAAoBqM,EAAI/O,QACvC,GAAI,IAAQkP,EAAOgB,UACf,MAAMpP,GAAyBhB,EAAKiP,EAAK,wDAE7C,IAAKw/C,GAAsBr/C,EAAQra,GAC/B,MAAMiM,GAAyBhB,EAAKiP,EAAK,6DAA6Dla,MAE1G,MAAMuwE,EAAgB31D,GAAqBP,EAAOgB,SAAUrb,GACtD2N,EAAU0M,EAAOgB,SAASk1D,GAQhC,aAPM,QAAI/vD,GAAc7D,cAAc,CAClC3c,MAAOuwE,EACP1iE,kBACAgM,KAAM,CACFK,UAGDxM,GAAqBzC,EAAK0C,EAAS4iE,GAAe,EAAO1iE,EAAiBqM,EAAIhP,cACzF,EfuEI,kDgB1FG,UAA2CD,EAAKiP,GACnD,IAAIxY,EACJ,MAAM2Y,QAAe,QAAO0nC,KACtB,MAAE/hD,EAAK,OAAE8I,EAAQ4nE,MAAOC,GAAiBz2D,EAAI/O,QACnD,IAAKuuD,GAAsBr/C,EAAQra,GAC/B,MAAMiM,GAAyBhB,EAAKiP,EAAK,0DAA0Dla,0BAA8Bqa,EAAOgB,SAASrU,oBAErJ,MAAM4pE,EAA0D,QAAxClvE,EAAK2Y,EAAOgB,SAASrb,GAAO8I,cAA2B,IAAPpH,EAAgBA,EAAK,CAAC,EAExFmvE,EAAkBrT,GADNmT,EAAe,KAAM,CAAC,EAAGC,EAAgB9nE,GAAUA,GASrE,aAPM,QAAI0X,GAAcxD,oBAAoB,CACxChd,QACA8I,OAAQ+nE,EACRh3D,KAAM,CACFK,UxPoCL,SAAoCjP,EAAK6lE,EAAW11D,EAAclQ,GACrE,MAAO,CACHjJ,KAAM,mDACNgJ,MACAC,gBACAC,QAAS,CACL2lE,YACA11D,gBAGZ,CwP3CW21D,CAA2B9lE,EAAK4lE,EAAiB7wE,EAAOka,EAAIhP,cACvE,EhByEI,0CiB9EG,UAA8BD,EAAKiP,GACtC,MAAQ/O,SAAS,aAAEiQ,EAAY,YAAEgF,EAAW,OAAE1B,IAAcxE,EACtDG,QAAe,QAAO0nC,IACtB6O,QAAoB,QAAOpD,IAQjC,OAvBJ,SAA+BviD,EAAKoP,EAAQnO,GACxC,MAAQf,SAAS,aAAEiQ,EAAY,YAAEgF,IAAmBlU,EACpD,IAAKwtD,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAKiB,EAAS,0DAA0DkP,qBAAgCf,EAAOgB,SAASrU,oBAE3J,MAAMqW,EAAchD,EAAOgB,SAASD,GACpCgF,EAAYnd,SAASmL,IACjB,IAAKwrD,GAAmBv8C,EAAajP,GACjC,MAAMnC,GAAyBhB,EAAKiB,EAAS,qDAAqDkC,gBAAwBgN,qBAAgCiC,EAAYxb,MAAMmF,gCAChL,GAER,CAKIgqE,CAAsB/lE,EAAKoP,EAAQH,GASvC,SAAwBjP,EAAKoP,EAAQu2C,EAAa12C,GAC9C,MAAQ/O,SAAS,aAAEiQ,EAAY,YAAEgF,EAAW,OAAE1B,IAAcxE,EACtD6zB,EAAU3tB,EAAY9kB,KAAK8S,GAAciM,EAAOgB,SAASD,GAAcvZ,MAAMuM,GAAW3M,SACxFwvE,EAAWnjC,GAAaC,EAAS6iB,GACjCsgB,EAAW/iC,GAAaJ,EAAS6iB,GAEvC,KADoBlyC,GAAUuyD,GAAYvyD,GAAUwyD,GAEhD,MAAMjlE,GAAyBhB,EAAKiP,EAAK,4DAA4D+2D,QAAeC,KAE5H,CAjBIC,CAAelmE,EAAKoP,EAAQu2C,EAAa12C,SACnC,QAAIsG,GAAcL,kBAAkB,CACtC/E,eACAgF,cACA1B,YzPuCD,SAAyCzT,EAAKmQ,EAAcgF,EAAagxD,EAAWlmE,GACvF,MAAO,CACHjJ,KAAM,yDACNgJ,MACAC,gBACAC,QAAS,CACLiQ,eACAgF,cACAgxD,aAGZ,CyPhDWC,CAAgCpmE,EAAKmQ,EAAcgF,EAAa1B,EAAQxE,EAAIhP,cACvF,EjBmEI,yCkBhFG,UAA6BD,EAAKiP,GACrC,MAAQ/O,SAAS,aAAEiQ,EAAY,UAAEhN,EAAS,MAAEqQ,IAAavE,EACnDG,QAAe,QAAO0nC,IACtB6O,QAAoB,QAAOpD,IAQjC,OArBJ,SAA+BviD,EAAKoP,EAAQnO,GACxC,MAAQf,SAAS,aAAEiQ,EAAY,UAAEhN,IAAiBlC,EAClD,IAAKwtD,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAKiB,EAAS,0DAA0DkP,qBAAgCf,EAAOgB,SAASrU,oBAE3J,MAAMqW,EAAchD,EAAOgB,SAASD,GACpC,IAAKw+C,GAAmBv8C,EAAajP,GACjC,MAAMnC,GAAyBhB,EAAKiB,EAAS,qDAAqDkC,gBAAwBgN,qBAAgCiC,EAAYxb,MAAMmF,gCAEpL,CAKI,CAAsBiE,EAAKoP,EAAQH,GASvC,SAAuBjP,EAAKoP,EAAQu2C,EAAa12C,GAC7C,MAAQ/O,SAAS,aAAEiQ,EAAY,UAAEhN,EAAS,MAAEqQ,IAAavE,EAEnD+2D,EAAW3iC,GADFj0B,EAAOgB,SAASD,GAAcvZ,MAAMuM,GAAW3M,OACzBmvD,GAGrC,KADoBnyC,GAASwyD,GAAYxyD,GADxBqnB,IAGb,MAAM75B,GAAyBhB,EAAKiP,EAAK,0DAA0D+2D,QAHtFnrC,MAKrB,CAjBIwrC,CAAcrmE,EAAKoP,EAAQu2C,EAAa12C,SAClC,QAAIsG,GAAcH,gBAAgB,CACpCjF,eACAhN,YACAqQ,W1PoDD,SAAuCxT,EAAKmQ,EAAchN,EAAWmjE,EAAUrmE,GAClF,MAAO,CACHjJ,KAAM,uDACNgJ,MACAC,gBACAC,QAAS,CACLiQ,eACAhN,YACAmjE,YAGZ,C0P7DWC,CAA8BvmE,EAAKmQ,EAAchN,EAAWqQ,EAAOvE,EAAIhP,cAClF,ElBqEI,sCmBrEG,UAAiCD,EAAKiP,GACzC,MAAQ/O,SAAS,MAAEtJ,IAAaqY,EAC1ByjD,EAAa,CACf1yD,MACAiP,MACArY,MAAOomD,GAA8BpmD,GACrCwY,aAAc,QAAO0nC,IACrBznC,YAAa,QAAOgnC,IACpByuB,wBAAyB,QAAOviB,MAE9B,sBAAEwiB,EAAqB,QAAEriE,GA5BnC,SAAiCgwD,GAC7B,MAAM,IAAE1yD,EAAG,OAAEoP,EAAM,MAAEC,EAAK,MAAEzY,EAAOqY,KAAO/O,SAAS,aAAEiQ,EAAY,UAAEhN,KAAoBuvD,EACvF,IAAKjE,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,mEAAmEkB,MAE3H,MAAMzN,EAAU0M,EAAOgB,SAASD,GAChC,IAAKu+C,GAAsBhsD,EAASS,GAChC,MAAMnC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,gDAAgD9L,0BAAkCT,EAAQ9L,MAAMmF,iBAExJ,MAAMgpE,EAAwBnW,GAA+Bv/C,EAAOzY,GACpE,IAAK,IAAQmuE,EAAsBp5B,SAC/B,MAAM3qC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,2EAA2E81D,EAAsBp5B,QAAQn2C,KAAK,SAEtK,MAAO,CACHuvE,wBACAriE,UAER,CAW+C,CAAwBgwD,IAC3DxyD,SAAS,UAAEiD,EAAS,aAAEgN,EAAY,6BAAE+0D,IAAoCj2D,EAC1Ek2D,QAA4B,QAAKzT,GAAiC1xD,EAAK+kE,EAAuB91D,GAC9Fm2D,QAAmB,QAAK/S,GAAsCryD,EAAKiP,EAAKk2D,EAAqBD,GAanG,aAZM,SAAI,SAAa,CACnBjuD,GAAgBL,YAAYuuD,EAAoB5hB,iBAAiBZ,QACjEptC,GAAcvD,gBAAgB,CAC1B7B,eACAhN,YACAvM,MAAOwuE,EACP3zD,YAAaszD,EAAsBzvC,SACnC1mB,KAAM,CACFK,Y3P8CT,SAAiCjP,EAAKmQ,EAAcq2D,EAAYC,EAAYC,EAAazmE,GAC5F,MAAO,CACHjJ,KAAM,wCACNgJ,MACAC,gBACAC,QAAS,CACLiQ,eACAq2D,aACAC,aACAC,eAGZ,C2PtDWC,CAAwB3mE,EAAKmQ,EAAcP,GAAsBlN,EAAQ9L,MAAOuM,GAAY4hE,EAAsBtrE,SAAUsrE,EAAsBzvC,SAAUrmB,EAAIhP,cAC3K,EnB2CI,sCoB3DG,UAAiCD,EAAKiP,GACzC,MAAMyjD,EAAa,CACf1yD,MACAiP,MACAG,aAAc,QAAO0nC,MAEnB,mBAAE8vB,EAAkB,gBAAEC,EAAe,WAAEC,EAAU,oBAAEC,GAzC7D,SAA4BrU,GACxB,MAAM,IAAE1yD,EAAG,OAAEoP,EAAQH,KAAO/O,SAAS,aAAEiQ,EAAY,eAAE+B,EAAc,UAAE/O,EAAS,YAAEgP,EAAW,6BAAE60D,KAAuCtU,EACpI,IAAKjE,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,wDAAwDkB,qBAAgCf,EAAOgB,SAASrU,oBAEhK,MAAMqW,EAAchD,EAAOgB,SAASD,GACpC,IAAKw+C,GAAmBv8C,EAAajP,GACjC,MAAMnC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,mDAAmD9L,qBAA6BiP,EAAYxb,MAAMmF,iBAE1J,MAAM+qE,EAAa10D,EAAYxb,MAAMuM,GACrC,IAAKqrD,GAAyBp/C,EAAQ8C,GAClC,MAAMlR,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,uDAAuDiD,0BAAuC9C,EAAOgB,SAASrU,oBAEtK,MAAM6qE,EAAqBj3D,GAAqBP,EAAOgB,SAAU8B,GAC3D+0D,EAAgB73D,EAAOgB,SAASw2D,GACtC,IAAKlY,GAAsBuY,EAAe90D,GACtC,MAAMnR,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,wDAAwDkD,yBAAmC80D,EAAcrwE,MAAMmF,iBAEvK,IAAI8qE,EAAkB,EACtB,GAAI12D,IAAiBy2D,GAEjB,GADAC,EAAkBl3D,GAAqBs3D,EAAcrwE,MAAOub,GACxDhP,IAAc0jE,EACd,MAAM7lE,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,oEAAoEkD,WAI5H00D,EAAkBj3D,GAAsBq3D,EAAcrwE,MAAOub,GAEjE,MAAO,CACHy0D,qBACAC,kBACAC,aACAC,oBAAqBv2D,QAAQw2D,IAA8D,IAA7B50D,EAAYxb,MAAMmF,OAExF,CAOqF,CAAmB22D,IAC9F,UAAEvvD,EAAS,aAAEgN,GAAiBlB,EAAI/O,QAuBxC,aAtBM,SAAI,SAAa,CACnBqV,GAActD,gBAAgB,CAC1B9B,eACAhN,YACA+O,eAAgB00D,EAChBz0D,YAAa00D,EACbj4D,KAAM,CACFK,YAGJ83D,EACE,CACExxD,GAAc7D,cAAc,CACxB3c,MAAOob,EACPvB,KAAM,CACFK,UAIV,M5PuEP,SAAgCjP,EAAK7I,EAAM+vE,EAAkBh1D,EAAgBL,EAAWD,EAASu1D,EAAwBlnE,GAC5H,MAAO,CACHjJ,KAAM,uCACNgJ,MACAC,gBACAC,QAAS,CACL/I,OACA+vE,mBACAh1D,iBACAL,YACAD,UACAu1D,0BAGZ,C4PlFWC,CAAuBpnE,EAAK8mE,EAAY32D,EADb42D,GAAuB52D,EAAey2D,EAAqBz2D,EAAe,EAAIy2D,EACxBzjE,EAAW0jE,EAAiBE,EAAqB93D,EAAIhP,cACjJ,EpB6BI,qDqB3EG,UAA6CD,EAAKiP,GACrD,MAAMyjD,EAAa,CACf1yD,MACAiP,MACAG,aAAc,QAAO0nC,MAEnB,mBAAE8vB,EAAkB,gBAAEC,EAAe,WAAEC,EAAU,oBAAEC,GA1B7D,SAA4BrU,GACxB,MAAM,IAAE1yD,EAAG,OAAEoP,EAAQH,KAAO/O,SAAS,aAAEiQ,EAAY,eAAE+B,EAAc,UAAE/O,EAAS,6BAAE6jE,KAAuCtU,EACvH,IAAKjE,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,wDAAwDkB,qBAAgCf,EAAOgB,SAASrU,oBAEhK,MAAMqW,EAAchD,EAAOgB,SAASD,GACpC,IAAKw+C,GAAmBv8C,EAAajP,GACjC,MAAMnC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,mDAAmD9L,qBAA6BiP,EAAYxb,MAAMmF,iBAE1J,MAAM+qE,EAAa10D,EAAYxb,MAAMuM,GACrC,IAAKqrD,GAAyBp/C,EAAQ8C,GAClC,MAAMlR,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,uDAAuDiD,0BAAuC9C,EAAOgB,SAASrU,oBAEtK,MAAO,CACH6qE,mBAAoB10D,EACpB20D,gBAAiB,EACjBC,aACAC,oBAAqBv2D,QAAQw2D,IAA8D,IAA7B50D,EAAYxb,MAAMmF,OAExF,CAOqF,CAAmB22D,IAC9F,UAAEvvD,EAAS,aAAEgN,EAAY,eAAE+B,GAAmBjD,EAAI/O,QAClDmnE,EAAmBn1D,EAAiB/B,EAAeA,EAAeA,EAAe,EAkCvF,aA7BM,SAAI,SAAa,CACnBoF,GAAc/D,WAAW,CACrBzc,MAAO6xE,EACPlkE,QAPQ,CACZ1L,KAAM,0BACNJ,MAAO,IAMH6a,YAAa,GACb7C,KAAM,CACFK,SAGRsG,GAActD,gBAAgB,CAC1B9B,aAAck3D,EACdlkE,YACA+O,eAAgB00D,EAChBz0D,YAAa00D,EACbj4D,KAAM,CACFK,YAGJ83D,EACE,CACExxD,GAAc7D,cAAc,CACxB3c,MAAOsyE,EACPz4D,KAAM,CACFK,UAIV,M7P+FP,SAA4CjP,EAAK7I,EAAM+vE,EAAkBh1D,EAAgBL,EAAWD,EAASu1D,EAAwBlnE,GACxI,MAAO,CACHjJ,KAAM,sDACNgJ,MACAC,gBACAC,QAAS,CACL/I,OACA+vE,mBACAh1D,iBACAL,YACAD,UACAu1D,0BAGZ,C6P3GWG,CAAmCtnE,EAAK8mE,EAAY32D,EAAcy2D,EAAoBzjE,EAAW0jE,EAAiBE,EAAqB93D,EAAIhP,cACtJ,ErBiCI,wCnClFG,UAAmCD,EAAKiP,GAC3C,aAAa,QAAKujD,GAAuBxyD,EAAKiP,EAClD,EmCiFI,sDsBpGG,UAA8CjP,EAAKiP,GACtD,IAAIgkB,EACJ,IACIA,QAA0B,QAAOglB,GAA6BhpC,EAAI/O,QAAQqQ,WAC9E,CACA,MAAO3f,GACH,MAAMoQ,GAAyBhB,EAAKiP,EAAK,iDAAgD,EAAAxS,EAAA,IAAewS,EAAI/O,QAAQqQ,eAAe3f,EAAEsQ,UACzI,CACA,aAAa,QAAKsxD,GAAuBxyD,EAAK,CAC1CC,cAAegP,EAAIhP,cACnBC,QAASlP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGg6B,GAAoB,CAAE2/B,MAAO3jD,EAAI/O,QAAQ0yD,MAAOhwD,gBAAiBqM,EAAI/O,QAAQ0C,mBACvHqM,EACP,EtByFI,yCuB5EG,UAAoCjP,EAAKiP,GAC5C,MAAQ/O,SAAS,KAAE/I,IAAY8X,EACzByjD,EAAa,CACf1yD,MACAiP,MACArY,MAAOomD,GAA8B,CAAC7lD,IACtCiY,aAAc,QAAO0nC,IACrBznC,YAAa,QAAOgnC,MAElB,cAAEkxB,EAAa,sBAAExC,GA3B3B,SAA4BrS,GACxB,MAAM,IAAE1yD,EAAKiP,KAAO/O,SAAS,aAAEiQ,EAAY,UAAEhN,IAAc,MAAEvM,EAAK,OAAEwY,EAAM,MAAEC,GAAWqjD,EACvF,IAAKjE,GAAsBr/C,EAAQe,GAC/B,MAAMnP,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,2DAA2DkB,qBAAgCf,EAAOgB,SAASrU,oBAEnK,MAAMqW,EAAchD,EAAOgB,SAASD,GACpC,IAAKw+C,GAAmBv8C,EAAajP,GACjC,MAAMnC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,sDAAsD9L,gBAAwBgN,qBAAgCiC,EAAYxb,MAAMmF,iCAExL,MAAMgpE,EAAwBnW,GAA+Bv/C,EAAOzY,GACpE,IAAK,IAAQmuE,EAAsBp5B,SAC/B,MAAM3qC,GAAyBhB,EAAK0yD,EAAWzjD,IAAK,2EAA2E81D,EAAsBp5B,QAAQn2C,KAAK,SAEtK,MAAO,CACH+xE,cAAen1D,EAAYxb,MAAMuM,GACjC4hE,wBAER,CAUqD,CAAmBrS,IAC9D,aAAEviD,EAAY,UAAEhN,EAAS,gBAAEP,EAAe,6BAAEsiE,GAAiCj2D,EAAI/O,QACjFilE,QAA4B,QAAKzT,GAAiC1xD,EAAK+kE,EAAuB91D,GAC9Fm2D,QAAmB,QAAK/S,GAAsCryD,EAAKiP,EAAKk2D,EAAqBD,GAcnG,aAbM,SAAI,SAAa,CACnBjuD,GAAgBL,YAAYuuD,EAAoB5hB,iBAAiBZ,QACjEptC,GAAchD,mBAAmB,CAC7BpC,eACAhN,YACAqP,SAAU4yD,EACVxiE,kBACA6O,YAAaszD,EAAsBzvC,SACnC1mB,KAAM,CACFK,Y/PoET,SAAmCjP,EAAKmQ,EAAchN,EAAWvM,EAAO4wE,EAAc5kE,EAAiB3C,GAC1G,MAAO,CACHjJ,KAAM,0CACNgJ,MACAC,gBACAC,QAAS,CACLiQ,eACAhN,YACAvM,QACA4wE,eACA5kE,mBAGZ,C+P7EW6kE,CAA0BznE,EAAKmQ,EAAchN,EAAW4hE,EAAsBtrE,SAAU8tE,EAAe3kE,EAAiBqM,EAAIhP,cACvI,EvBkDI,iClChGG,UAAmCD,EAAKiP,GAC3C,MAAMy4D,QAAyB,QAAOnxB,KAChC,kBAAEoxB,EAAoB7U,IAA8B7jD,EAAI/O,QACxD0nE,EAAuBD,EAAkBD,EAAiBr3E,KAAK0kB,GAAUA,EAAM9F,OACrF,GAAI24D,EAAuB,GAAKA,GAAwBF,EAAiB3rE,OACrE,MAAMiF,GAAyBhB,EAAKiP,EAAK,yEAAyEy4D,EAAiB3rE,sBAAsB6rE,KAE7J,MAAMC,EAAkBH,EAAiBE,GAKzC,aAJM,QAAIryD,GAAcd,WAAW,CAC/BC,WAAYmzD,EAAgBjxB,0BtMyL7B,SAAuB52C,EAAKoP,EAAQnP,GACvC,MAAO,CACHjJ,KAAM,2CACNgJ,MACAC,gBACAC,QAAS,CACLkP,UAGZ,CsM/LW04D,CAAc9nE,QADA,QAAO82C,IACM7nC,EAAIhP,cAC1C,EkCoFI,wCwBvGG,UAAuCD,EAAKiP,GAC/C,MAAQ/O,SAAS,OAAErC,GAAQ,cAAEoC,GAAmBgP,EAE1CgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,GAQ1D,aAPM,QAAIuV,GAAc7C,oBAAoB,CACxC7d,IAAKoqC,EAAUpqC,IACfgJ,SACA+Q,KAAM,CACFK,U/PXL,SAAgCjP,EAAKnL,EAAKgJ,EAAQoC,GACrD,MAAO,CACHjJ,KAAM,yCACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAgJ,UAGZ,C+PIWkqE,CAAuB/nE,EAAKi/B,EAAUpqC,IAAKgJ,EAAQoC,EAC9D,ExB4FI,yChCzCG,UAAwCD,EAAKiP,GAChD,MAAM,cAAEhP,GAAkBgP,EAEpBgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,GACpDqwB,QAAgB,QAAK6iC,GAAiBlzD,EAAKiP,GAC3CpR,EAlDV,SAA8BoR,EAAKohB,GAC/B,MAAQnwB,SAAS,OAAErC,IAAcoR,EACjC,MAAsB,iBAAXpR,GAAkC,iBAAXA,EACvB,CACHhD,MAAOw1B,EAAQA,QAAQx1B,QyDtBJ7E,EzDyBH6H,EyDxBhB,IAAQ7H,SAAsBK,IAAdL,EAAI6E,WzDwBvB,EACMgD,GyD1BR,IAAwB7H,CzD6B/B,CAuCmBgyE,CAAqB/4D,EAAKohB,GACnCkkC,QAAoB,QAAKpB,GAA2Bl0B,EAAW5O,GAC/DtiB,EAAU,CACZwH,GAActB,wBAAwB,CAClCpf,IAAKoqC,EAAUpqC,IACfqf,WAAYmc,EAAQA,QAAQx7B,IAC5B+Z,KAAM,CACFK,SAGRsG,GAAcvB,yBAAyB,CACnCnf,IAAKoqC,EAAUpqC,IACfkf,YAAawgD,aAAiD,EAASA,EAAYx7D,QAAQlE,IAC3F+Z,KAAM,CACFK,UAIRpR,GACAkQ,EAAQlY,KAAK0f,GAAc7C,oBAAoB,CAC3C7d,IAAKoqC,EAAUpqC,IACfgJ,SACA+Q,KAAM,CACFK,gBAIN,SAAI,SAAalB,EAAS,qBAChC,MACMk6D,SADuB,QAAOhxB,KACI5+C,IAAI4mC,EAAUpqC,KACtD,OvM/CG,SAAiCmL,EAAKnL,EAAKoqC,EAAW5O,EAASxyB,EAAQoC,GAC1E,MAAO,CACHjJ,KAAM,0CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAoqC,YACA5O,UACAxyB,UAGZ,CuMmCWqqE,CAAwBloE,EAAKi/B,EAAUpqC,IAAKozE,EAAkB53C,EAAQA,QAASxyB,EAAQoC,EAClG,EgCMI,iD9BvFG,UAA+CD,EAAKiP,GACvD,MACMgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,GACpDlG,QAAe,QAAKs7D,GAAiBp1D,EAAKs1D,GAA4BrmD,EAAKgwB,IAC3E,YAAElrB,EAAW,eAAE4/C,GAAmB75D,EAClCyX,EAAyBoiD,aAAuD,EAASA,EAAetjE,KAAKsH,IACvF,CACpBX,KAAM,2BACNuU,YAAa5T,EAAOoT,gBAAgBQ,gBAY5C,aARM,QAAIgK,GAAczB,4BAA4B,CAChDjf,IAAKoqC,EAAUpqC,IACfkf,YAAaA,aAAiD,EAASA,EAAYhb,QAAQlE,IAC3F0c,uBAAwBA,EACxB3C,KAAM,CACFK,UzMoCL,SAAwCjP,EAAKnL,EAAKszE,EAAyBvU,EAAyB3zD,GACvG,MAAO,CACHjJ,KAAM,kDACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAszE,0BACAvU,2BAGZ,CyM5CWwU,CAA+BpoE,EAAKi/B,EAAUpqC,IAAK8+D,QAAuDA,EAAiB,GAAI75D,EAAOia,YAAa9E,EAAIhP,cAClK,E8BmEI,4C0B1GG,UAA2CD,EAAKiP,GACnD,MAAQ/O,SAAWmoE,YAAY,eAAElyE,EAAc,oBAAEme,IAAwB,cAAErU,GAAmBgP,EAExFgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,GACpDsoE,EAAyBnyE,QAAuDA,EAAiB,OACjGoyE,EAAyD,SAA3BD,EAAoCh0D,QAAiEA,EAAsB,kBAAeje,QACxK,QAAIkf,GAAclB,2BAA2B,CAC/Cxf,IAAKoqC,EAAUpqC,IACfsB,eAAgBmyE,EAChBh0D,oBAAqBi0D,EACrB35D,KAAM,CACFK,UAGR,MACMg5D,SADuB,QAAOhxB,KACI5+C,IAAI4mC,EAAUpqC,KACtD,OjQ0EG,SAAoCmL,EAAKnL,EAAKsf,EAAKlU,GACtD,MAAO,CACHjJ,KAAM,6CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAsf,OAGZ,CiQpFWq0D,CAA2BxoE,EAAKi/B,EAAUpqC,IAAKozE,EAAiB9zD,IAAKlU,EAChF,E1B0FI,uC2B1GG,UAAyCD,EAAKiP,GACjD,MAAM,cAAEhP,GAAkBgP,EAEpBgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,IAClDnL,IAAK0b,GAAc0uB,EAQ3B,aAPM,QAAI1pB,GAAc3E,sBAAsB,CAC1C/b,IAAK0b,EACLM,WAAOxa,EACPuY,KAAM,CACFK,UlQkGL,SAA+BjP,EAAKnL,EAAKoL,GAC5C,MAAO,CACHjJ,KAAM,wCACNgJ,MACAC,gBACAC,QAAS,CACLrL,OAGZ,CkQxGW4zE,CAAsBzoE,EAAKuQ,EAAWtQ,EACjD,E3B8FI,oC4B1GG,UAAsCD,EAAKiP,GAC9C,MAAM,cAAEhP,GAAkBgP,GACpB,6BAAEy5D,EAA4B,mBAAEC,GAAuB15D,EAAI/O,QAE3D++B,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,IAClDnL,IAAK0b,GAAc0uB,EACrBpuB,EAAQ,CACVi/B,IAAK44B,EACLx3B,OAAQy3B,EACRx4C,OAAQ,CACJn5B,KAAM,mBACNq5B,QAAS4O,EAAU9qB,IAAIC,QAE3Bpd,KAAM,yBACN4xE,WAAY,YAUhB,aARM,QAAK5H,GAAkBnwD,EAAO7Q,EAAKiP,SACnC,QAAIsG,GAAc3E,sBAAsB,CAC1C/b,IAAK0b,EACLM,QACAjC,KAAM,CACFK,UnQsGL,SAA2BjP,EAAKnL,EAAKgc,EAAO5Q,GAC/C,MAAO,CACHjJ,KAAM,oCACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAgc,SAGZ,CmQ7GWg4D,CAAkB7oE,EAAKuQ,EAAWM,EAAO5Q,EACpD,E5BkFI,kCA5CJ,UAAgCD,EAAKiP,SAC3BiI,GAAuB7V,GAAgBrB,EAAKiP,EAAIhP,eAC1D,EA2CI,6C6B9GG,UAA4CD,EAAKiP,GACpD,MAAQ/O,SAAS,YAAE0S,GAAa,cAAE3S,GAAmBgP,EAE/CgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,GAQ1D,aAPM,QAAIuV,GAAc5C,yBAAyB,CAC7C9d,IAAKoqC,EAAUpqC,IACf+d,cACAhE,KAAM,CACFK,UpQOL,SAAqCjP,EAAKnL,EAAK+d,EAAa3S,GAC/D,MAAO,CACHjJ,KAAM,8CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACA+d,eAGZ,CoQdWk2D,CAA4B9oE,EAAKi/B,EAAUpqC,IAAK+d,EAAa3S,EACxE,E7BmGI,+C8B9GG,UAA8CD,EAAKiP,GACtD,MAAQ/O,SAAS,OAAEzO,GAAQ,cAAEwO,GAAmBgP,EAE1CgwB,EAAYg0B,SADI,QAAOhc,IACwBhoC,EAAKjP,GAQ1D,aAPM,QAAIuV,GAAcf,8BAA8B,CAClD3f,IAAKoqC,EAAUpqC,IACfpD,SACAmd,KAAM,CACFK,UrQwBL,SAAuCjP,EAAKnL,EAAKk0E,EAAe9oE,GACnE,MAAO,CACHjJ,KAAM,gDACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAk0E,iBAGZ,CqQ/BWC,CAA8BhpE,EAAKi/B,EAAUpqC,IAAKpD,EAAQwO,EACrE,E9BmGI,4C+BhHG,UAA2CD,EAAKiP,GACnD,MAAQ/O,SAAS,OAAErC,GAAQ,cAAEoC,GAAmBgP,EAE1C2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,GAQlE,aAPM,QAAIuV,GAAc7C,oBAAoB,CACxC7d,IAAK+pC,EAAc/pC,IACnBgJ,SACA+Q,KAAM,CACFK,UrQZL,SAAoCjP,EAAKnL,EAAKgJ,EAAQoC,GACzD,MAAO,CACHjJ,KAAM,6CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAgJ,UAGZ,CqQKWorE,CAA2BjpE,EAAK4+B,EAAc/pC,IAAKgJ,EAAQoC,EACtE,E/BqGI,iDgCjHG,UAAgDD,EAAKiP,GACxD,MAAQ/O,SAAS,YAAE0S,GAAa,cAAE3S,GAAmBgP,EAE/C2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,GAQlE,aAPM,QAAIuV,GAAc5C,yBAAyB,CAC7C9d,IAAK+pC,EAAc/pC,IACnB+d,cACAhE,KAAM,CACFK,UtQML,SAAyCjP,EAAKnL,EAAK+d,EAAa3S,GACnE,MAAO,CACHjJ,KAAM,kDACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACA+d,eAGZ,CsQbWs2D,CAAgClpE,EAAK4+B,EAAc/pC,IAAK+d,EAAa3S,EAChF,EhCsGI,qD7BhGG,UAAmDD,EAAKiP,GAC3D,MACM2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,GAC5DlG,QAAe,QAAKs7D,GAAiBp1D,EAAKu1D,GAAgCtmD,EAAK2vB,IAC/E,YAAE7qB,EAAW,eAAE4/C,GAAmB75D,EAClCyX,EAAyBoiD,aAAuD,EAASA,EAAetjE,KAAKsH,IACvF,CACpBX,KAAM,2BACNuU,YAAa5T,EAAOoT,gBAAgBQ,gBAY5C,aARM,QAAIgK,GAAczB,4BAA4B,CAChDjf,IAAK+pC,EAAc/pC,IACnBkf,YAAaA,aAAiD,EAASA,EAAYhb,QAAQlE,IAC3F0c,uBAAwBA,EACxB3C,KAAM,CACFK,UzMHL,SAA4CjP,EAAKnL,EAAKszE,EAAyBvU,EAAyB3zD,GAC3G,MAAO,CACHjJ,KAAM,sDACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAszE,0BACAvU,2BAGZ,CyMLWuV,CAAmCnpE,EAAK4+B,EAAc/pC,IAAK8+D,QAAuDA,EAAiB,GAAI75D,EAAOia,YAAa9E,EAAIhP,cAC1K,E6B4EI,gDiClHG,UAAkDD,EAAKiP,GAC1D,MAAQ/O,SAAS,WAAE8S,GAAY,cAAE/S,GAAmBgP,EAE9C2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,GAQlE,aAPM,QAAIuV,GAAcxC,kCAAkC,CACtDle,IAAK+pC,EAAc/pC,IACnBme,aACApE,KAAM,CACFK,UvQ0CL,SAA2CjP,EAAKnL,EAAKme,EAAY/S,GACpE,MAAO,CACHjJ,KAAM,iDACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAme,cAGZ,CuQjDWo2D,CAAkCppE,EAAK4+B,EAAc/pC,IAAKme,EAAY/S,EACjF,EjCuGI,mDkCnHG,UAAqDD,EAAKiP,GAC7D,MAAQ/O,SAAS,OAAEzO,GAAQ,cAAEwO,GAAmBgP,EAE1C2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,GAQlE,aAPM,QAAIuV,GAActC,qCAAqC,CACzDpe,IAAK+pC,EAAc/pC,IACnBpD,SACAmd,KAAM,CACFK,UxQ4DL,SAA8CjP,EAAKnL,EAAKw0E,EAAWC,EAAWrpE,GACjF,MAAO,CACHjJ,KAAM,oDACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAw0E,YACAC,aAGZ,CwQpEWC,CAAqCvpE,EAAK4+B,EAAc/pC,IAAKpD,EAAQmtC,EAAcmqC,cAAe9oE,EAC7G,ElCwGI,6CmC3GG,UAA4CD,EAAKiP,GACpD,MAAQ/O,SAAS,IAAErL,EAAG,WAAEse,EAAU,wBAAEgjD,GAAyB,cAAEl2D,GAAmBgP,EAE5E2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,GAC5DwpE,QAAwB,QAAOhnB,GAAmB5jB,EAActrB,WACtE,QAAUk2D,EAAiB,6DAC3B,MAAMC,GAAuB,QAAaD,GAE1C,IAAIl2D,EACJ,IACIA,QAAgB,QAAK+tD,GAAarhE,EAAKmT,EAC3C,CACA,MAAO1c,GACH,MAAMuK,GAAyBhB,EAAKiP,EAAK,0BAAyB,QAAgBkE,oBACtF,CACA,MAAMu2D,GAAgB,QAAY9qC,KAAmB6qC,EAC/CE,GAAmB,QAAar2D,KAAam2D,EAC7CG,GAAqBF,GAAiBC,EACtCv2D,EAAU,GAAY,CAAEkvB,4BAA4B,GAAQ,UAAWhvB,GA2B7E,aA1BM,SAAI,SAAa,CAEnB2D,GAAgBH,cAAcxD,GAE9ByjB,GAAUlD,2BAOVte,GAAcrC,4BAA4B,CACtCre,MACAse,aACAH,WAAYmjD,EACZt4D,OAAQ+rE,EACF,CACE/uE,OAAO,QAAayY,SAEtBjd,EACN+c,UACAxE,KAAM,CACFK,YzQqCT,SAAqCjP,EAAKnL,EAAKye,EAASrT,GAC3D,MAAO,CACHjJ,KAAM,+CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAye,WAGZ,CyQ3CWu2D,CAA4B7pE,EAAKnL,EAAKye,EAASrT,EAC1D,EnC8DI,4CoC/GG,UAA8CD,EAAKiP,GACtD,MAAQ/O,SAAWyQ,OAAQ41C,EAAiB,IAAI,cAAEtmD,GAAmBgP,EAE/D2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,IAC1DnL,IAAK0b,GAAcquB,EACrBumB,QAAuB,QAAKmB,GAAmB/1C,EAAWg2C,EAAgBvmD,IACxE2Q,OAAQm5D,EAAuB,IAAOlrC,EACxCmrC,EAA2BxjB,EAAel2D,KAAK6zD,GAAcgB,GAAwBhB,EAAWiB,EAAgBnlD,EAAKiP,KACrH+6D,EAAuBD,EAAyBpyE,QAAQusD,IAAeJ,GAA6BI,EAAW4lB,KAC/GG,EAAyBF,EAAyBpyE,QAAQusD,GAAcJ,GAA6BI,EAAW4lB,KAShHI,EAAuB,IAPdJ,EAAqBz5E,KAAK6zD,G1GStC,SAAqCh0B,EAAiB6zB,EAAuB,IAChF,MAAMC,EAAU/zB,GAA8BC,GAC9C,OAAO6zB,EAAqBlsD,MAAMg4B,GACvBm0B,IAAY/zB,GAA8BJ,IAEzD,C0GbwBs6C,CAA4BjmB,EAAW+lB,IAIhD/lB,OAEiC8lB,SACtC,SAAI,SAAa,CACnB/yD,GAAgBL,YAAYuuC,EAAe5B,iBAAiBZ,QAC5DptC,GAAczC,oBAAoB,CAC9Bje,IAAK+pC,EAAc/pC,IACnB6b,iBAAkBw5D,EAClBt7D,KAAM,CACFK,YAKZ,MAAMqjD,QAAsB,QAAOpb,GAAkBtY,EAAc/pC,MAGnE,aAFM,QAAK6xD,GAAgB1mD,EAAKiP,EAAK,CAACqjD,UAChC,QAAKvL,GAAgC,CAACuL,I1QmEzC,SAAqCtyD,EAAKnL,EAAKyuE,EAAOpyD,EAASjR,GAClE,MAAO,CACHjJ,KAAM,8CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACAyuE,QACApyD,WAGZ,C0Q7EWk5D,CAA4BpqE,EAAKuQ,EAAWy5D,EAAsBC,EAAwBhqE,EACrG,EpC8EI,4CqClHG,UAA8CD,EAAKiP,GACtD,MAAQ/O,SAAS,QAAEo2D,GAAS,cAAEr2D,GAAmBgP,EAE3C2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,IAC1DnL,IAAK0b,EAAWI,OAAQm5D,GAAyBlrC,EACnDyrC,ECVH,SAAuCC,EAAe35D,EAAQ3Q,EAAKiP,GACtE,MlEkSe,MkElSQq7D,EACZ35D,EAEJ25D,EAAcj6E,KAAKk6E,IACtB,IACI,O5G2BL,SAAkD11E,EAAKkvD,EAAuB,IACjF,MAAM/4C,EAAkBolB,GAAwBv7B,GAC1CiF,EAASiqD,EAAqBlsD,MAAMV,GAC/B6T,IAAoBilB,GAA8B94B,KAE7D,IAAK2C,EACD,MAAM,IAAIjJ,MAAM,8DAEpB,OAAOiJ,CACX,C4GpCmB0wE,CAAyCD,EAAU55D,EAC9D,CACA,MAAO40C,GACH,MAAMklB,EAAgBllB,EAAGrkD,QACzB,MAAMF,GAAyBhB,EAAKiP,EAAK,yCAAwC,EAAAxS,EAAA,IAAe8tE,cAAqBE,IACzH,IAER,CDH2BC,CAA8BpU,EAASwT,EAAsB9pE,EAAKiP,GACnF63C,EAA6BgjB,EAAqBnyE,QAAQusD,IAAeJ,GAA6BI,EAAWmmB,WACjH,QAAI90D,GAAczC,oBAAoB,CACxCje,IAAK0b,EACLG,iBAAkBo2C,EAClBl4C,KAAM,CACFK,UAIR,MAAMqjD,QAAsB,QAAOpb,GAAkB3mC,IAGrD,aAFM,QAAKm2C,GAAgB1mD,EAAKiP,EAAK,CAACqjD,UAChC,QAAKvL,GAAgC,CAACuL,IACrChuD,GAA2BtE,EAAKuQ,EAAW85D,EAAgBpqE,EACtE,ErCgGI,sCuCnHG,UAAsCD,EAAKiP,GAC9C,MACM2vB,EAAgBo0B,SADA,QAAO/b,IACgChoC,EAAKjP,IAC1DsT,QAASH,GAAeyrB,EAEhC,WADsB,QAAO4jB,GAAmBrvC,KAE5C,MAAMnS,GAAyBhB,EAAKiP,EAAK,qBAAoB,EAAAxS,EAAA,IAAe0W,kCAEhF,MAAMw3D,QAAmB,QAAKtJ,GAAarhE,EAAKmT,GAEhD,aADM,QAAI8D,GAAgBH,cAAc6zD,I7Q+LrC,SAAgC3qE,EAAKsT,EAASrT,GACjD,MAAO,CACHjJ,KAAM,wCACNgJ,MACAC,gBACAC,QAAS,CACLoT,WAGZ,C6QvMWs3D,CAAuB5qE,EAAK2qE,EAAY17D,EAAIhP,cACvD,EvCyGI,qCxBhGG,UAAqCD,EAAKiP,GAC7C,MAAM,OAAExd,EAAM,IAAEoD,GAAQoa,EAAI/O,cACtB,Q9MwIH,SAAsCF,EAAKnL,EAAKpD,EAAQwO,GAC3D,MAAO,CACHjJ,KAAM,+CACNgJ,MACAC,gBACAC,QAAS,CACLrL,MACApD,UAGZ,C8MlJco5E,CAA6B7qE,EAAKnL,EAAKpD,EAAQwd,EAAIhP,sBACvD,QAAKm6D,GAAsBp6D,EAAKiP,EAAKpa,SACrC,QAAKwlE,GAAgCr6D,EAAKiP,GAChD,MAAM67D,QAA0B,QAAOxR,GAA2BzkE,KAElE,QAAUi2E,aAA6D,EAASA,EAAkBrR,iBAClG,MAAM3/D,QAAe,QAAKogE,GAAe4Q,EAAkBrR,gBAAiBhoE,GAEtEwwE,EAAUjiE,EAAI5O,QAAQK,OAAOM,SAC7B,IAAImwE,IAAIpoE,EAAOvC,IAAKyI,EAAI5O,QAAQK,OAAOM,UAAUowE,KACjDroE,EAAOvC,IAEb,O9MiJG,SAAqCyI,EAAKlG,EAAQmG,GACrD,MAAO,CACHjJ,KAAM,8CACNgJ,MACAC,gBACAC,QAAS,CACLkiE,UAAWtoE,EAAOvC,IAClBuC,UAGZ,C8M3JWixE,CAA4B/qE,EADXhP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGa,GAAS,CAAEvC,IAAK0qE,IACfhzD,EAAIhP,cACjE,EwBkFI,4BvBxHG,UAA6BD,EAAKiP,GACrC,MAAMgf,QAAc,QAAKssC,GAAav6D,EAAKiP,EAAI/O,QAAQ+tB,OAEvD,aADM,QAAIY,GAAcT,SAASH,I7MR9B,SAAsBjuB,EAAKiuB,EAAOhuB,GACrC,MAAO,CACHjJ,KAAM,6BACNgJ,MACAC,gBACAC,QAAS,CACL+tB,SAGZ,C6MAW+8C,CAAahrE,EAAKiuB,EAAOhf,EAAIhP,cACxC,EuBqHI,4BtBxHG,UAA6BD,EAAKiP,GACrC,MAAMgf,QAAc,QAAKK,GAAatuB,EAAKiP,EAAI/O,QAAQ+tB,OAKvD,aAJM,QAAIY,GAAcP,YAAY,CAChC28C,QAASh8D,EAAI/O,QAAQ+tB,MACrBz9B,IAAI,EAAAiM,EAAA,IAAewS,EAAI/O,QAAQ+tB,MAAMp5B,Q9MuBtC,SAAsBmL,EAAKkR,EAASjR,GACvC,MAAO,CACHjJ,KAAM,6BACNgJ,MACAC,gBACAC,QAAS,CACLgR,WAGZ,C8M9BWg6D,CAAalrE,EAAKiuB,EAAOhf,EAAIhP,cACxC,EsBkHI,6BpBvHG,UAA8BD,EAAKiP,GACtC,MACM2iC,E4DDH,SAAgCA,EAAQ3iC,EAAKjP,GAChD,MAAQE,SAAS,KAAEq2B,IAAYtnB,EAC/B,OAAOsnB,EAAKlmC,KAAKwE,IACb,MAAMo5B,EAAQ2jB,EAAOv5C,IAAIxD,GACzB,IAAKo5B,EACD,MAAMjtB,GAAyBhB,EAAKiP,EAAK,oCAAmC,QAAgBpa,OAEhG,OAAOo5B,CAAK,GAEpB,C5DRmBk9C,OADS,QAAOrQ,IACkB7rD,EAAKjP,GAChDu2B,EAAOqb,EAAOvhD,KAAK49B,GAAUA,EAAMp5B,YACnC,QAAK65B,GAAc1uB,EAAKu2B,GAC9B,MAAM60C,EAAMx5B,EAAOvhD,KAAK49B,IAAU,EAAAxxB,EAAA,IAAewxB,EAAMp5B,OAEvD,aADM,QAAIg6B,GAAcH,aAAa08C,IhNElC,SAAuBprE,EAAK4xC,EAAQ3xC,GACvC,MAAO,CACHjJ,KAAM,8BACNgJ,MACAC,gBACAC,QAAS,CACL0xC,UAGZ,CgNVWy5B,CAAcrrE,EAAK4xC,EAAQ3iC,EAAIhP,cAC1C,EoBgHI,sCnB5HG,UAAsCD,EAAKiP,GAE9C,OhNPG,SAA+BjP,EAAKm7D,EAAgBl7D,GACvD,MAAO,CACHjJ,KAAM,uCACNgJ,MACAC,gBACAC,QAAS,CACLi7D,kBAGZ,CgNFWmQ,CAAsBtrE,QADA,QAAKk7D,GAAsBl7D,EAAKiP,EAAI/O,QAAQi7D,eAAgBlsD,EAAI/O,QAAQ06B,eACnD3rB,EAAIhP,cAC1D,EmB0HI,oClBtHG,UAAoCD,EAAKiP,GAC5C,MAAM,eAAEksD,EAAc,iBAAErqB,GAAqB7hC,EAAI/O,QAEjD,aADM,QAAKm7D,GAAoBr7D,EAAKm7D,EAAgBrqB,GjNGjD,SAA6B9wC,EAAKC,GACrC,MAAO,CACHjJ,KAAM,qCACNgJ,MACAC,gBAER,CiNRWsrE,CAAoBvrE,EAAKiP,EAAIhP,cACxC,EkBmHI,qByCjIG,UAAuBD,EAAKiP,SACzB,Q3QAH,SAAwBjP,EAAKsvB,EAAYC,EAActvB,GAC1D,MAAO,CACHjJ,KAAM,+BACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAC,gBAGZ,C2QVci8C,CAAexrE,EAAKiP,EAAI/O,QAAQovB,WAAYrgB,EAAI/O,QAAQqvB,aAActgB,EAAIhP,gBAEpF,MAAMwrE,EAAwBh8C,GAAyBxgB,EAAI/O,QAAQovB,WAAW5e,iBAAkBzB,EAAI/O,QAAQovB,YAC5G,O3QkBG,SAAuBtvB,EAAKsvB,EAAYC,EAActvB,GACzD,MAAO,CACHjJ,KAAM,8BACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAC,gBAGZ,C2Q5BWm8C,CAAc1rE,EAAKhP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgW,EAAI/O,QAAQovB,YAAa,CAAE5e,iBAAkB+6D,IAA0Bx8D,EAAI/O,QAAQqvB,aAActgB,EAAIhP,cACnK,EzC6HI,gC0ClIG,UAA2BD,EAAKiP,GACnC,IAAIxY,EACJ,MAAM,gBAAEy5B,EAAe,WAAEZ,EAAU,QAAEhc,GAAYrE,EAAI/O,QAGrD,aAFM,Q5QwCH,SAA4BF,EAAKsT,EAAS4c,EAAiBZ,EAAYrvB,GAC1E,MAAO,CACHjJ,KAAM,0CACNgJ,MACAC,gBACAC,QAAS,CACLoT,UACAgc,aACAY,mBAGZ,C4QnDcy7C,CAAmB3rE,EAAKsT,EAAS4c,EAAiBZ,EAAYrgB,EAAIhP,gB5Q8DzE,SAA2BD,EAAKsT,EAAS4c,EAAiBZ,EAAYrvB,GACzE,MAAO,CACHjJ,KAAM,yCACNgJ,MACAC,gBACAC,QAAS,CACLoT,UACAgc,aACAY,mBAGZ,C4QvEW07C,CAAkB5rE,GADW,KAAA6rE,gCAA+Bv4D,EAASgc,EAAYY,EAAyE,QAAvDz5B,EAAKuJ,EAAI5O,QAAQI,aAAa4b,2BAAwC,IAAP3W,GAAgBA,GAC9HwY,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,cACxH,E1C6HI,sC2ClIG,UAAgCD,EAAKiP,GACxC,IAAIxY,EACJ,MAAM,gBAAEy5B,EAAe,WAAEZ,GAAergB,EAAI/O,QACtCoT,QAAgB,QAAOkvC,GAAmBtyB,EAAgBghB,SAGhE,aAFM,Q7QkFH,SAAiClxC,EAAKsT,EAAS4c,EAAiBZ,EAAYrvB,GAC/E,MAAO,CACHjJ,KAAM,gDACNgJ,MACAC,gBACAC,QAAS,CACLoT,UACAgc,aACAY,mBAGZ,C6Q7Fc47C,CAAwB9rE,EAAKsT,EAAS4c,EAAiBZ,EAAYrgB,EAAIhP,gB7QwG9E,SAAgCD,EAAKsT,EAAS4c,EAAiBZ,EAAYrvB,GAC9E,MAAO,CACHjJ,KAAM,+CACNgJ,MACAC,gBACAC,QAAS,CACLoT,UACAgc,aACAY,mBAGZ,C6QjHW67C,CAAuB/rE,GADG,SAAgCsT,EAASgc,EAAWC,aAAaC,aAAsE,QAAvD/4B,EAAKuJ,EAAI5O,QAAQI,aAAa4b,2BAAwC,IAAP3W,GAAgBA,GACnIwY,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,cAC1H,E3C4HI,wCjB3HG,UAAkCD,EAAKiP,GAC1C,IAAIxY,QAEE,QjNuHH,SAAmCuJ,EAAKkwB,EAAiBZ,EAAYrvB,GACxE,MAAO,CACHjJ,KAAM,kDACNgJ,MACAC,gBACAC,QAAS,CACLgwB,kBACAZ,cAGZ,CiNjIc08C,CAA0BhsE,EAAKiP,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,gBAElG,MAAMzJ,QAAe,QAAO4gD,GAA4BnoC,EAAI/O,QAAQovB,WAAW/e,YACzE+C,QAAgB,QAAOkvC,GAAmBhsD,EAAO8c,WAEvD,QAAUA,GACV,MACMrI,EADwBzU,EAAOud,cA8BzC,SAA8BT,GAC1B,MAAMlgB,GAAW,QAAgBkgB,GACjC,OAAO,IAAQlgB,IAETA,EAASu0B,OAAO0I,IACd,IAAI,SAAgBA,GAAU,CAC1B,MAAM92B,GAAU,SAAe82B,GAC/B,SAAU92B,aAAyC,EAASA,EAAQ6qB,KAAK,MAC7E,CACA,OAAO,CAAI,GAEvB,CAzCyD6nD,CAAqB34D,SAC3B,QAAOioD,GAA0B/kE,QAAUH,EAGpFkhD,GADmB,QAAgBv3C,EAAIwtB,aAAcve,EAAI/O,QAAQgwB,gBAAgBghB,cAGzE,QAAOuqB,UAEP,QAAKC,GAAgC17D,EAAKxJ,GAClD8E,QAAuB,QAAOguC,IAC9B4iC,GA8CqC18C,EA9C4BvgB,EAAI/O,QAAQovB,WAAWC,aAAaC,aA8ClD28C,EA9CgE7wE,EAAejL,KAAK+7E,GAAOA,EAAG97C,UAAUz7B,MA8C5Ew3E,EA9C0I,QAAvD51E,EAAKuJ,EAAI5O,QAAQI,aAAa4b,2BAAwC,IAAP3W,GAAgBA,EA+ChP+4B,EACFn/B,KAAKsI,GAAMA,EAAEkF,SACblG,QAAQgB,GATjB,SAA4B62B,EAAc28C,GACtC,IAAI11E,EAAIswB,EACR,MAAMulD,GAAgB,QAAiC98C,GAAgBA,OAAen5B,EAChFxB,EAAmK,QAA5JkyB,EAA4G,QAAtGtwB,EAAK61E,aAAqD,EAASA,EAAct7C,uBAAoC,IAAPv6B,OAAgB,EAASA,EAAGotD,cAA2B,IAAP98B,OAAgB,EAASA,EAAGlyB,IAC7M,QAAOA,IAAOs3E,EAA2B/nD,MAAMmoD,IAAW,QAAgBA,EAAQ13E,IACtF,CAIuB23E,CAAmB7zE,EAAGwzE,KACpCx0E,OAAO,MACPtH,KAAKo8E,GACFJ,GACO,SAA2BI,EAAEz7C,gBAAgBn8B,IAAK,CACrDkX,KAAM,CAAC0gE,EAAEnQ,oBAAoB/kE,QAI1B,SAA2Bk1E,EAAEz7C,gBAAgBn8B,IAAK,CACrDkX,KAAM,CAAC0gE,EAAEnQ,oBAAoB7uD,WAb7C,IAA+C+hB,EAAc28C,EAA4BE,EA1CrF,OjNwHG,SAAkCrsE,EAAKzG,EAAS22B,EAAiBZ,EAAYrvB,GAChF,MAAO,CACHjJ,KAAM,iDACNgJ,MACAC,gBACAC,QAAS,CACL3G,UACA22B,kBACAZ,cAGZ,CiNnIWo9C,CAAyB1sE,EAFP,KAAQ,CAACiL,KAAeihE,KAA6B30B,IAEvBtoC,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,cACpH,EiBoGI,4C4ClIG,UAAqCD,EAAKiP,SACvC,Q9QsNH,SAAsCjP,EAAKkwB,EAAiBZ,EAAYrvB,GAC3E,MAAO,CACHjJ,KAAM,sDACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAY,mBAGZ,C8QhOcy8C,CAA6B3sE,EAAKiP,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,gBACrG,MAAO2sE,EAAaC,SAAqB,QAAI,EACzC,QAAK1Q,GAA4BltD,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYtvB,IACtF,QAAK48D,GAAwC58D,EAAKiP,EAAI/O,QAAQovB,WAAW/e,cAEvE,UAAEA,GAActB,EAAI/O,QAAQovB,WAC5Bw9C,QAA+B,QAAOz1B,GAAmB9mC,IACzDw8D,GAAcx8C,GAAkBthB,EAAI/O,QAAQgwB,gBAAiB48C,GACnE,O9QmOG,SAAqC9sE,EAAK/K,EAAKi7B,EAAiBZ,EAAYu9C,EAAaE,EAAY9sE,GACxG,MAAO,CACHjJ,KAAM,qDACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAY,kBACAj7B,MACA43E,cACAE,cAGZ,C8QhPWC,CAA4BhtE,EAAK4sE,EAAa39D,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYu9C,EAAaE,EAAY99D,EAAIhP,cAC3I,E5CyHI,yC6CrIG,UAAkCD,EAAKiP,SACpC,Q/Q4KH,SAAmCjP,EAAKkwB,EAAiBZ,EAAYrvB,GACxE,MAAO,CACHjJ,KAAM,mDACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAY,mBAGZ,C+QtLc+8C,CAA0BjtE,EAAKiP,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,gBAClG,MAAO2sE,EAAaC,SAAqB,QAAI,EACzC,QAAKlN,GAAyB1wD,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAW/e,UAAWtB,EAAI/O,QAAQovB,WAAYtvB,EAAKiP,IAC1H,QAAK2tD,GAAwC58D,EAAKiP,EAAI/O,QAAQovB,WAAW/e,aAE7E,O/Q4LG,SAAkCvQ,EAAK/K,EAAKi7B,EAAiBZ,EAAYu9C,EAAa5sE,GACzF,MAAO,CACHjJ,KAAM,kDACNgJ,MACAC,gBACAC,QAAS,CACLjL,MACAq6B,aACAY,kBACA28C,eAGZ,C+QxMWK,CAAyBltE,EAAK4sE,EAAa39D,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYu9C,EAAa59D,EAAIhP,cAC5H,E7C+HI,+C8CxIG,UAAwCD,EAAKiP,GAEhD,aADM,QhRuQH,SAAyCjP,EAAKkwB,EAAiBZ,EAAYrvB,GAC9E,MAAO,CACHjJ,KAAM,yDACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAY,mBAGZ,CgRjRci9C,CAAgCntE,EAAKiP,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,gBhR4RrG,SAAwCD,EAAKkwB,EAAiBZ,EAAYrvB,GAC7E,MAAO,CACHjJ,KAAM,wDACNgJ,MACAC,gBACAC,QAAS,CACLovB,aACAY,mBAGZ,CgRrSWk9C,CAA+BptE,EAAKiP,EAAI/O,QAAQgwB,gBAAiBjhB,EAAI/O,QAAQovB,WAAYrgB,EAAIhP,cACxG,E9CsII,4C+CxIG,UAAsCD,EAAKiP,GAC9C,MAAM,eAAEkxD,GAAmBlxD,EAAI/O,QAE/B,aADM,QAAIogE,GAAaF,kBAAkBD,IjR+StC,SAA+BngE,EAAKmgE,EAAgBlgE,GACvD,MAAO,CACHjJ,KAAM,6CACNgJ,MACAC,gBACAC,QAAS,CACLigE,kBAGZ,CiRvTWkN,CAAsBrtE,EAAKmgE,EAAgBlxD,EAAIhP,cAC1D,E/CqII,iCgDlIG,UAAiCD,EAAKiP,GACzC,MAAQ/O,SAAS,sBAAEkG,GAAuB,cAAEnG,GAAmBgP,EACzD6zB,QAAgB,QAAOmU,IACvB+I,QAA6C,QAAOD,IACpDnhB,EAAgBo0B,GAA8BlwB,EAAS7zB,EAAKjP,GAC5DstE,ECbH,SAAyClnE,EAAuB45C,EAAsChgD,EAAKiP,GAC9G,MAAMrY,EAAQwP,EACRmnE,EAAiB32E,aAAqC,EAASA,EAAM3D,WAE3E,IAAK+sD,GAAwCutB,GAAkBA,EAAexxE,OAAS,EACnF,MAAMiF,GAAyBhB,EAAKiP,EAAK,sHAE7C,OAAOrY,CACX,CDKwB42E,CAAgCpnE,EAAuB45C,EAAsChgD,EAAKiP,IAChH,IAAEpa,EAAG,IAAE0C,EAAG,WAAE3C,GAAegqC,EAcjC,aAbM,QAAI8hC,GAAoBF,gBAAgB,CAC1C5rE,aACA2C,MACA1C,MACAuR,sBAAuBknE,YAIA,QAAOz0B,aAExB,QAAK6N,GAAgB1mD,EAAKiP,EAAK,CAAC2vB,UAChC,QAAKmoB,GAAgC,CAACnoB,KAEzCz4B,GAAkBnG,EAAKnL,EAAKuR,EAAuBnG,EAC9D,EhD8GI,oCkD5IG,SAAmCD,EAAKiP,GAC3C,MAAQ/O,SAAS,GAAE1P,GAAI,cAAEyP,GAAmBgP,EAC5C,OjRkBG,SAA8Bze,EAAIwP,EAAKC,GAC1C,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAD,MACAE,QAAS,CACL1P,MAGZ,CiR3BW+X,CAAqB/X,EAAIwP,EAAKC,EACzC,ElD0II,oCmD7IG,SAAmCD,EAAKiP,GAC3C,MAAQ/O,SAAS,GAAE1P,GAAI,cAAEyP,GAAmBgP,EAC5C,OlRsCG,SAA6Bze,EAAIwP,EAAKC,GACzC,MAAO,CACHjJ,KAAM,qCACNiJ,gBACAD,MACAE,QAAS,CACL1P,MAGZ,CkR/CWi9E,CAAoBj9E,EAAIwP,EAAKC,EACxC,GCGA,SAAUytE,GAAiB1tE,EAAKiP,SACtBiI,GAAuB7V,GAAgBrB,EAAKiP,EAAIhP,eAC1D,CAIO,MAAM0tE,GAA8B,MACpC,SAASC,GAAgB3sE,EAASwuD,GACrC,IAAIh5D,EAAIswB,EAAIK,EACZ,MAAO,CACHpwB,KAAM,GAAG22E,MAA+B1sE,EAAQjK,QAChDiK,UACA0uD,QAAwG,QAA9Fl5D,EAAKg5D,aAAqD,EAASA,EAAcE,eAA4B,IAAPl5D,EAAgBA,EAAK,IACrIm5D,QAAwG,QAA9F7oC,EAAK0oC,aAAqD,EAASA,EAAcG,eAA4B,IAAP7oC,EAAgBA,EAAK,IACrI8oC,UAA4G,QAAhGzoC,EAAKqoC,aAAqD,EAASA,EAAcI,iBAA8B,IAAPzoC,EAAgBA,EAAK,IAEjJ,CAsBA,SAAUymD,GAAe7tE,EAAKkwD,GAC1B,IAAIz5D,EACJ,MAAM,QAAEwK,EAASA,SAAS,KAAEjK,EAAI,cAAEiJ,IAAqBiwD,EACjDG,EAAsBpwD,QAAqDA,EAAgB,8BAC3F6tE,EAA0E,QAAxDr3E,EAAK6qE,GAAuBpR,EAASjvD,QAAQjK,aAA0B,IAAPP,EAAgBA,EAAKi3E,GAC7G,UACUx2D,G9RjDP,SAAiClX,EAAKiB,GACzC,MAAO,CACHjK,KAAM,+BACNgJ,MACAC,cAAegB,EAAQhB,cACvBC,QAAS,CACLe,WAGZ,C8RwCqC8sE,CAAwB/tE,EAAKkwD,EAASjvD,UACnE,IACIivD,EAASN,QAAQ3uD,EACrB,CACA,MAAOrQ,GACH4H,QAAQC,KAAK,qEAAqEzB,KAAQq5D,gBAAmCz/D,EACjI,CACA,MAAMkJ,QAAe,QAAKg0E,EAAgB9tE,EAAKiB,GAC3CvB,EAAiB5F,WACXod,GAAuBpd,IAEjC,IACIo2D,EAASL,UAAU/1D,EACvB,CACA,MAAOlJ,GACH4H,QAAQC,KAAK,uEAAuEzB,KAAQq5D,eAAkCz/D,EAClI,CACJ,CACA,MAAOA,GACH,IACIs/D,EAASP,QAAQ/+D,EACrB,CACA,MAAO6/D,GACHj4D,QAAQC,KAAK,qEAAqEzB,KAAQq5D,gBAAmCI,EACjI,CACIrvD,GAAyBxQ,SACnBsmB,GAAuBtmB,SAMvBsmB,G9RhEX,SAA+BlX,EAAKiB,EAASC,EAASlC,GACzD,MAAO,CACHhI,KAAM,8BACNgJ,MACAC,cAAegB,EAAQhB,cACvBC,QAAS,CACLiB,OAAQ,iBACRF,UACAC,UACAlC,SAGZ,C8RoDyCgvE,CAAsBhuE,EAAKiB,EAAS,8CAA8CjK,IAAQpG,GAE/H,CACJ,CAWO,SAAUq9E,KACb,MAAMC,QAAuB,SAAezjE,GAAWA,EAAOzT,OACzDyT,EAAOzT,KAAK2I,WAAWguE,KAAgCljE,EAAOzT,KAAK2I,WAAW,mBACnF,OAAa,CACT,MACMuwD,GA5D0BzlD,QA2DV,QAAKyjE,GA9DRl4E,YAIEyU,IAHTzU,EAAIgB,KAAK2I,WAAWguE,IAGDljE,EAASmjE,GAAgBnjE,IA4DlDzK,QAAY,QAAK+rC,UACjB,QAAK8hC,GAAgB7tE,EAAKkwD,EACpC,CA/DJ,IAAwCzlD,EAHbzU,CAmE3B,C,gBCxCO,SAASm4E,GAAyBC,EAAW7d,EAAW8d,GAC3D,MAAMC,EA9CV,SAA+BF,EAAW73D,GACtC,MAAMg4D,EAVH,SAAsCH,GACzC,MAAMI,EAAgBJ,EAAUl5E,MAAM,KAAK,IAC3C,QAAUs5E,EAAe,gFAAgFJ,sDAEzG,MAAMK,EAAWD,EAAct5E,MAAM,KAAK0f,MAAM,GAAGvkB,IAAI,MAGvD,OADAo+E,EAAS,GAAKA,EAAS,GAAGC,cACnB,GAAGD,EAASj5E,KAAK,UAC5B,CAEsBm5E,CAA6BP,GAEzCQ,GAAU,SAAoB,CAAEr4D,SADhBxB,GAAUwB,EAASxB,EAAMta,SAGzCkT,EAAW,CACb/E,IAAKgmE,EAAQC,OACbC,OAAQF,EAAQngD,UAChB2f,UAAWwgC,EAAQxgC,WAEjBx5B,GAAQ,SAAY,CACtBnH,KAAM8gE,EACN7gE,aAAckhE,EAAQn4D,kBACtB9I,aAEEohE,EAAiBH,EAAQxsB,cAAc53C,GAAUA,EAAMwkE,YAAYT,KAMnEU,EAAoB,MAASx0E,IAC/B,MAAMjK,EAAK+lB,EAAS9b,GACpB,OAAO,KAAAgtC,iBAAgBj9B,GAAUA,IAAQA,GAC9BukE,EAAe1V,WAAW7uD,EAAOha,IAC1C,IACFiK,GAAU8b,EAAS9b,KACvB,MAAO,CACHy0E,UAAWX,EACX1gE,QAAS+G,EAAM/G,QACfE,QAAS6G,EAAM7G,QACfkhE,oBACA5V,WAhBgB7oE,IACT,KAAAi3C,iBAAgBj9B,GAAUA,IAAQA,GAC9BukE,EAAe1V,WAAW7uD,EAAOha,KAgBpD,CAYuB2+E,CAAsBf,EAAWC,GA6BpD,MAAO,CACH5gE,KAAM2gE,EACN7d,UA9BJ,UAAkCvwD,EAAKvF,EAAOi1D,GAAU,GACpD,MAAM0f,EAAWf,EAAgB5zE,GAC3B40E,QAAqB,QAAOf,EAAWjV,WAAW+V,IACxD,IAAKC,aAAmD,EAASA,EAAav1E,UAAY41D,EACtF,OAAO2f,EAAav1E,OAExB,UACU,QAAIw0E,EAAWvgE,QAAQnF,IAAI,CAC7BnO,QACAsE,OAAQ,aAEZ,MAAMjF,QAAe,QAAKy2D,EAAWvwD,EAAKvF,GAM1C,aALM,QAAI6zE,EAAWvgE,QAAQnF,IAAI,CAC7BnO,QACAsE,OAAQ,UACRjF,YAEGA,CACX,CACA,MAAOlJ,GAMH,YALM,QAAI09E,EAAWvgE,QAAQnF,IAAI,CAC7BnO,QACAsE,OAAQ,QACRC,MAAOpO,EAAEsQ,WAEPtQ,CACV,CACJ,EAII0+E,MAAOhB,EAEf,CAOO,SAASiB,GAAmBnB,EAAW7d,GAC1C,MAAO,CACH9iD,KAAM2gE,EACN7d,YAER,CC3GO,SAASif,GAAwBp0E,EAAcq0E,GAClD,MAAMC,GANsBz+D,EAMmBw+D,EALxC,CAACllD,EAAGC,IACAvZ,EAAQsZ,EAAExxB,QAAQ8B,OAAO80E,cAAc1+D,EAAQuZ,EAAEzxB,QAAQ8B,SAFzC,IAACoW,EAO5B,OAAO7V,EAAawZ,QAAQg7D,MAAK,CAACrlD,EAAGC,IAC7BD,EAAEslD,YAAcrlD,EAAEqlD,UACXH,EAAgBnlD,EAAGC,GAVV,EAACD,EAAGC,IAAMA,EAAEqlD,UAAYtlD,EAAEslD,UAYvCC,CAAoBvlD,EAAGC,IAEtC,CACO,SAASulD,GAAyB9kC,GACrC,OAAOA,EAAQlyC,QAAQ8B,MAAMm1E,OAAO3lE,QAAQ,kBAAmB,KACnE,CCDO,SAAU4lE,GAA2BjwE,EAAKsT,GAC7C,IAAI7c,EAAIswB,EACR,MAAM,QAAE31B,EAAO,UAAEuB,GAAcqN,EACzBkoD,QAAqB,QAAOxK,IAS5BwyB,EAAgB9+E,EAAQuB,UAAUA,GAAWQ,UAsB7Cg9E,SArBgB,QAAK,CACvBD,EACAA,EAAc/0E,QAmB0Bi1E,iBAAiB9iD,YAAY,CACrEH,MAAO,CAAC,eACR7Z,QAASA,EACT2Z,aAA6D,QAA9Cx2B,EAAKyxD,EAAamoB,8BAA2C,IAAP55E,EAAgBA,EAAK,IAAIpG,KAAKigF,IAAQ,QAAMA,KACjHpjD,aAA6D,QAA9CnG,EAAKmhC,EAAaqoB,8BAA2C,IAAPxpD,EAAgBA,EAAK,IAAI12B,KAAKigF,IAAQ,QAAMA,OAOrH,aAL0C,QAAK,CAACH,EAA6BA,EAA4Bh1E,QAKtEq1E,uBACvC,CC9CO,MAAMC,GAAqCtC,GAAyB,wCAsF3E,UAAuBnuE,EAAKvF,GACxB,IAAIhE,EAAIswB,EACR,MAAQ7mB,SAAS,aAAE8uD,GAAc,cAAE/uD,GAAmBxF,EACtD,IAAI6Y,EACJ,IAAI,QAAS07C,IAET,GADA17C,QAAgB,QAAOkvC,GAAmBwM,KACrC17C,EACD,MAAM9R,GAAsBxB,EAAK,qBAAoB,EAAAvD,EAAA,IAAeuyD,qCAAiD/uD,QAIzHqT,EAAU07C,EAMd,MAAM5zD,QAAqB,QAAK60E,GAA4BjwE,EAAKsT,GAK3Do9D,QAAsB,QAAKC,GAAyBr9D,IACpD,kBAAEs9D,EAAiB,iBAAEC,EAAgB,uBAAEC,GAA2BJ,EAClEvhB,EAAuH,QAA3FpoC,EAAqC,QAA/BtwB,EAAKm6E,EAAkB,UAAuB,IAAPn6E,EAAgBA,EAAKo6E,EAAiB,UAAuB,IAAP9pD,EAAgBA,EAAK+pD,EAAuB,GAC3K/f,EAA2B,KAAO,IAAI31D,KAAiBw1E,KAAsBC,KAAqBC,GAAwBn5E,OAAO,OAAwBq4B,IAAM,QAAgBA,EAAEj3B,QAAQlE,OACzLk8E,EAA0B,KAAUhgB,EAAyB1gE,KAAK2/B,GAAM,CAACA,EAAEj3B,QAAQ8B,MAAOk1E,GAAyB//C,OACzH,MAAO,CACH50B,eACAg0D,oBAAqBogB,GAAwBp0E,EAAc21E,GAC3DH,oBACAC,mBACAC,yBACAC,0BACA5hB,2BACA4B,2BAER,IA3HkIt2D,IAC9H,MAAQyF,SAAS,aAAE8uD,IAAoBv0D,EACjC5F,GAAM,QAASm6D,GAAgBA,GAAe,QAAWA,GAC/D,OAAO,QAAgBn6D,EAAI,IAalBm8E,GAA+BP,GAAmCnB,MAAML,kBAgCrF,SAAUgC,GAAyC39D,EAAS49D,GACxD,MAAMC,QAA0B,QAAK12E,GAAO40D,GAA2B/7C,KAC/D89D,OAAO,aAAEC,EAAY,UAAEC,GAAW,aAAE3oC,GAAkBwoC,EAExDvrB,EAAkB5sD,EAAkB2vC,SADf,QAAOjB,KACmC+C,0BAC/D8mC,EAAiB18E,IACnB,IAAI4B,EACJ,MAAM8U,EAAcq6C,EAAgBvtD,IAAIxD,IAGxC,QAAU0W,GACV,MAAMw+B,EAAex+B,EAAY+kB,UACjC,OAAuD,QAA/C75B,EAAKy6E,EAAmB74E,IAAI0xC,UAAkC,IAAPtzC,OAAgB,EAASA,EAAGw0C,OAAO,EAEtG,MAAO,CACH4lC,iBAAkB,KAAQQ,EAAahhF,IAAIkhF,IAC3CT,uBAAwB,KAAQQ,EAAUjhF,IAAIkhF,IAEtD,CACA,SAAUZ,GAAwBr9D,GAQ9B,MAAMk+D,QAA4B,QAAOhnC,IACnCinC,QAAuC,QAAO1mC,IAC9C6lC,EAlDV,SAAyCt9D,EAAS3f,GAE9C,OADoB,QAAe2f,GAAS3b,OAAO,MAChCtH,KAAKsH,IACpB,MAAM+5E,GAAa,QAAa/5E,GAC1B48D,EAAc5gE,EAAS0E,IAAIq5E,GAGjC,OADA,QAAUnd,EAAa,0CAAyC,EAAA93D,EAAA,IAAei1E,MACxEnd,CAAW,GAE1B,CAyC8Bod,CAAgCr+D,EAASk+D,GAC7DI,QAAmC,QAAKX,GAA0C39D,EAASm+D,IAC3F,iBAAEZ,EAAgB,uBAAEC,GAA2Bc,EACrD,MAAO,CACHhB,oBACAC,mBACAC,yBAER,CC7FO,MAAMe,GAAoC1D,GAAyB,yCAwE1E,UAAuBnuE,EAAKvF,GACxB,MAAM,cAAEwF,EAAeC,SAAS,aAAE8uD,IAAoBv0D,EACtD,IAAI6Y,EACJ,IAAI,QAAS07C,IAET,GADA17C,QAAgB,QAAOkvC,GAAmBwM,KACrC17C,EACD,MAAM9R,GAAsBxB,EAAK,qBAAoB,EAAAvD,EAAA,IAAeuyD,qCAAiD/uD,QAIzHqT,EAAU07C,EAEd,MAAMoiB,GAAQ,QAAwB99D,GAChCg4B,QAA4B,QAAOZ,IACnCghB,QAA0B,QAAO/gB,IACvC,aAAa,QAAKmnC,GAA6B9xE,EAAKoxE,EAAO9lC,EAAqBogB,EACpF,IAxFkIjxD,IAC9H,MAAQyF,SAAS,aAAE8uD,IAAoBv0D,EACjC5F,GAAM,QAASm6D,GAAgBA,GAAe,QAAWA,GAC/D,OAAO,QAAgBn6D,EAAI,IAalBk9E,GAA8BF,GAAkCvC,MAAML,kBA4BnF/6E,eAAe49E,GAA4B9xE,EAAKoxE,EAAO9lC,EAAqBogB,GACxE,MAAMsmB,EAAc,IAAIZ,EAAMC,gBAAiBD,EAAME,aAAcF,EAAMa,kBACnEC,EAA0B,GAC1BC,EAAsB,GAC5BH,EAAYh6E,SAASnD,IACjB,MAAM42C,EAAqBH,EAAoBjzC,IAAIxD,GAC/C42C,EACAymC,EAAwBr8E,KAAK41C,GAG7B0mC,EAAoBt8E,KAAKhB,EAC7B,IAEJ,MAAMu9E,EAAwBF,EAAwB7hF,KAAK+a,IACvD,MAAMygD,EAAmBH,EAAkBrzD,IAAI+S,EAAGklB,WAKlD,OADA,QAAUu7B,EAAkB,2CACrBA,EAAiBv7B,SAAS,KAE/B,mBAAE+hD,EAAkB,iBAAEC,SA7ChCp+E,eAA6C8L,EAAKqR,GAC9C,MAAM,QAAEjgB,EAAO,UAAEuB,GAAcqN,EACzBqyE,QAA2BjhF,EAC5BuB,UAAUA,GACVM,aACAm4C,yBAAyB/5B,GACxBihE,QAAyBlhF,EAC1BuB,UAAUA,GACVM,aACAu4D,cAAc6mB,EAAmBhiF,KAAK+a,GAAOA,EAAGklB,aACrD,MAAO,CACH+hD,qBACAC,mBAER,CA+B2DC,CAA8BvyE,EAAKmyE,GAC1F,MAAO,CACHf,QACAn+E,WAAY,KAAO,IAAIm/E,KAA0BE,IAAoB/nD,IAAM,QAAgBA,EAAE11B,OAC7F8zC,aAAc,KAAO,IAAIupC,KAA4BG,IAAsBjnE,IAAO,QAAgBA,EAAGvW,OAE7G,CCpEO,MAAM29E,GAA4BjD,GAAmB,iCAyH5D,UAAuBvvE,EAAKvF,GACxB,MAAQyF,SAAS,UAAEqQ,EAAS,QAAE+C,GAAS,cAAErT,GAAmBxF,EACtDg4E,EAAiBv7B,GAAkB3mC,GACnC/Z,QAAe,QAAOi8E,GAC5B,IAAKj8E,EACD,MAAMgL,GAAsBxB,EAAK,oBAAmB,EAAAvD,EAAA,IAAe8T,qCAA8CtQ,GAErH,GAAIqT,EACA,aAAa,QAAKo/D,GAAkB1yE,EAAKxJ,EAAQ8c,GAGjD,IAAI,QAAgB9c,GAAS,CACzB,MAAM2c,EAAa3c,EAAO8c,QACpBq/D,EAAkBnwB,GAAmBrvC,GACrCy/D,QAAsB,QAAOD,GACnC,IAAKC,EACD,MAAMpxE,GAAsBxB,EAAK,qBAAoB,EAAAvD,EAAA,IAAe0W,qCAA+ClT,GAEvH,aAAa,QAAKyyE,GAAkB1yE,EAAKxJ,EAAQo8E,EACrD,CAEI,aAAa,QAAKC,GAAqB7yE,EAAKxJ,EAGxD,IAhJA,SAASs8E,GAAmBj+E,EAAKk+E,EAAU/7E,GACvC,OAAQ,QAAgBnC,EAAKk+E,EAASl+E,OAClC,QAAgBA,GAAK,QAAMk+E,EAASviF,GAAIwG,MACxC,QAAgBnC,GAAK,QAAOk+E,EAASx7E,KAC7C,CACA,SAAUy7E,GAAoChzE,EAAKzG,GAC/C,MAAMg9B,EAAOh9B,EAAQlJ,IAAI,MACnB4iF,QAAwB,QAAK5nC,GAA4BrrC,EAAK,KAAQu2B,IAG5E,OADA,QAAU,IAAQ08C,EAAgBtnC,UAC3BpyC,EAAQlJ,KAAKsH,IACT,CACHA,SACA4T,YAAa0nE,EAAgBx5E,SAASpB,KAAI,QAAaV,OAGnE,CAWA,SAAUu7E,GAAmClzE,EAAKxJ,EAAQ28E,EAA2BC,GAGjF,MAAO,UADgC,QAAKC,GAA6BrzE,EAAKxJ,EAAQ28E,MAC9CC,EAC5C,CACA,SAAUC,GAA4BrzE,EAAKxJ,EAAQkG,GAC/C,MACM42E,EAGV,SAAmC98E,EAAQ+8E,GACvC,OAAOA,EAAuC57E,QAAO,EAAG4T,kBACpD,IAAI9U,EAGJ,QAFgB8U,IAC8B,QAAxC9U,EAAKD,EAAO+a,8BAA2C,IAAP9a,OAAgB,EAASA,EAAGkB,OAAO,MAAqCysB,MAAMivC,GAAYyf,GAAmBzf,EAAQ9nD,YAAaA,EAAa,kBACtL,GAEvB,CAV8DioE,CAA0Bh9E,QADtC,QAAKw8E,GAAqChzE,EAAKtD,IAE7F,OAAO42E,EAAkDjjF,KAAK8G,GAASA,EAAKQ,QAChF,CAoBA,SAAS87E,GAAiCjpE,EAAO8I,EAASogE,EAAsBC,GAC5E,OALG,SAAgDrgE,GACnD,MAAMsgE,GAAiB,QAAgBtgE,EAAS,OAChD,OAAOsgE,EAAe73E,OAAS,GAAK63E,EAAejsD,OAAOmkB,IAAQ,IAAIr1C,EAAI,OAAoC,QAA5BA,GAAK,SAAeq1C,UAAuB,IAAPr1C,OAAgB,EAASA,EAAG2tB,KAAK,KAAa,GACxK,CAEQyvD,CAAuCvgE,GAChCqgE,EAEJG,GAA0BtpE,EAAO,IAAImpE,KAAuBD,GACvE,CACA,SAASI,GAA0BtpE,EAAOjO,GACtC,MAAMw3E,EA9CV,SAA0CvpE,EAAOjR,GAC7C,MAAMy6E,EAAcxpC,GAAgChgC,GACpD,OAAOjR,EAAQlJ,KAAKsH,IAET,CACH48D,YAFgByf,EAAY37E,KAAI,QAAaV,IAG7CA,YAGZ,CAqC0Cs8E,CAAiCzpE,EAAOjO,GAC9E,OAEJ,SAA4Bw3E,GAGxB,OAAOA,EACFp8E,QAAQR,KAAWA,EAAKo9D,cACxB2f,aAAY,CAAC/vC,EAAKgwC,KACIhwC,EAAI/f,MAAMjtB,GAAS27E,IAAmB,QAAa37E,GAAOg9E,EAAK5f,YAAYx7D,QAAS,cAEvGorC,EAAItuC,KAAKs+E,EAAKx8E,QAEXwsC,IACR,IACExsC,QAAQR,KAAU,QAAoBA,IAC/C,CAfWi9E,CAAmBL,EAC9B,CAeA,SAAUrB,GAAiB1yE,EAAKxJ,EAAQ8c,GACpC,MAAM+gE,EAAsC/8B,GAA+B9gD,EAAO3B,KAC5Ey/E,QAAoC,QAAOD,IAI5CC,EAA4B38E,OAAO,MAAcoE,QAAUvF,EAAOud,aACnEugE,EAA4Bz+E,MAAK,SAAiBW,EAAOud,cAE7D,MAAMwgE,GAA0B,QAAejhE,IACxC/W,EAAaG,SAA0B,QAAI,EAC9C,QAAO+2E,GAAkCngE,EAASghE,EAA4B38E,OAAO,MAAe48E,EAAwB58E,OAAO,QACnI,QAAKu7E,GAAoClzE,EAAKxJ,EAAQ89E,EAA4B38E,OAAO,MAAoB48E,EAAwB58E,OAAO,SAEhJ,MAAO,IACA4E,KACAG,KAUA63E,EAAwB58E,OAAO,SAE/B48E,EAAwB58E,OAAO,MAE1C,CACA,SAAUk7E,GAAoB7yE,EAAKxJ,GAC/B,MAAM69E,EAAsC/8B,GAA+B9gD,EAAO3B,KAC5Ey/E,QAAoC,QAAOD,IAC1C93E,EAAaG,SAA0B,QAAI,EAC9C,QAAOo3E,GAA2BQ,EAA4B38E,OAAO,QACrE,QAAK07E,GAA6BrzE,EAAKxJ,EAAQ89E,EAA4B38E,OAAO,SAEtF,MAAO,IAAI4E,KAAgBG,EAC/B,CC7GO,MAAM83E,GACTrjF,YAAYsjF,GACRnjF,KAAKuJ,MAASA,IACVvJ,KAAKgiB,QAAQzY,MAAQA,EACdvJ,MAEXA,KAAKojF,QAAWA,IACZpjF,KAAKgiB,QAAQohE,QAAUA,EAChBpjF,MAEXA,KAAKiI,QAAWA,IACZjI,KAAKgiB,QAAQ/Z,QAAUA,EAChBjI,MAEXA,KAAKqjF,MAASA,IACVrjF,KAAKgiB,QAAQqhE,MAAQA,EACdrjF,MAEXA,KAAK0hB,WAAcA,IACf1hB,KAAKgiB,QAAQN,WAAaA,EACnB1hB,MAEXA,KAAKouC,MAAQ,KACF,CACHpsB,QAAShiB,KAAKgiB,UAGtBhiB,KAAKgiB,QAAU,CACXmhE,mBACA55E,MAAO,WACP65E,QAAS,GACTn7E,QAAS,GACTo7E,MAAO,GACP3hE,WAAY,CAAC,EAErB,E,4BCjDG,MAAM4hE,GAAqCzG,GAAyB,wCAgB3E,UAAuBnuE,EAAKvF,GACxB,MAAQyF,SAAS,WAAEgU,IAAkBzZ,EAE/B41B,SADiB,QAAOwa,KACLxyC,IAAI6b,GAC7B,IAAKmc,EACD,MAAM7uB,GAAsBxB,EAAK,YAAW,EAAAvD,EAAA,IAAeyX,qBAA+BzZ,EAAMwF,eAEpG,MAAM40E,EDlBH,SAA8BJ,EAAkB70C,EAAgB,MAEnE,OAAOA,EADS,IAAI40C,GAAyBC,IACf/0C,OAClC,CCegCo1C,CAAqB,kBAAmBn8E,GAAMA,EAAE+7E,QAAQ,EAChF,SAAU,YAAY,SAAWrkD,EAAQA,QAAQx7B,KAAMi3C,GAAMA,EAAE6H,QAAQ,6CAErEv4C,QAAqB,QAAK60E,GAA4BjwE,EAAK60E,GAC3D9D,EAA0B,KAAU31E,EAAa/K,KAAK2/B,GAAM,CAACA,EAAEj3B,QAAQ8B,MAAOk1E,GAAyB//C,OAC7G,MAAO,CACH50B,eACAg0D,oBAAqBogB,GAAwBp0E,EAAc21E,GAC3DA,0BAER,IAjCkIt2E,IAAU,QAAgBA,EAAMyF,QAAQgU,cAY7J6gE,GAA+BH,GAAmCtF,MAAML,kBCP9E,MAAM+F,GAAgCzF,GAAmB,uCAChE,UAAuBvvE,EAAKvF,GACxB,IAAIhE,EACJ,MAAQyJ,SAAS,UAAEqQ,GAAW,cAAEtQ,GAAmBxF,GAC7C,MAAEwzB,EAAK,UAAEgR,SAAoB,QAAKg2C,GAAsB1kE,EAAWvQ,EAAKC,GACxEi1E,EAA4F,QAA5Ez+E,EAAKw3B,aAAqC,EAASA,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAEtI,IAAK00B,IAAUinD,EACX,MAAO,GAEX,MAAMtvB,QAAwB,QAAKuvB,GAAqBlnD,EAAOjuB,GAE/D,OCRG,SAAwCiuB,EAAO9Z,EAAKihE,EAAgBxvB,GACvE,IAAInvD,EAAIswB,EACR,MAAMmuD,EAA4F,QAA5Ez+E,EAAKw3B,aAAqC,EAASA,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAEtI,IAAK27E,EACD,MAAO,GAEX,MAAMp7E,EAAS,IACRu7E,EAAkBC,GAAyB,KAAUJ,EAAc,MAEpEK,EAA0BH,EAAez9E,OAAO,MACtD29E,EAAsBt9E,SAASiG,IAC3B,MAAMu3E,EAA6B5vB,EAAgBvtD,IAAI4F,EAAY8M,gBAAgBQ,cACnF,QAAUiqE,EAA4B,0CAA0Cv3E,EAAY8M,gBAAgBQ,eAE5G,MAAMkqE,GAiCoBj/E,EAjCiB2d,EAiCT5I,EAjCciqE,EAA2B3gF,IAkCxE2B,EAAO+a,uBAAuB6S,MAAMzsB,IAAW,QAAoCA,KAAW,QAAgBA,EAAO4T,YAAaA,MAD7I,IAAkC/U,EAAQ+U,EAhC9BkqE,EACA37E,EAAOjE,KAAK,CACRoI,cACAy3E,WAAY,aAKOH,EAAwBnxD,MAAM/B,IAAM,SAAgB,QAAaA,GAAImzD,EAA2B3gF,QAGvHiF,EAAOjE,KAAK,CACRoI,cACAy3E,WAAY,WAEpB,IAGJ,MAAMC,EAAkB,KAAKN,GAC7B,GAAIM,EAAiB,CACjB,MAAMC,EAed,SAAgCp/E,GAC5B,MAAMq/E,EAAiBr/E,EAAOud,YAExB+hE,IAAkBD,GAK5B,SAA6Br/E,EAAQ+U,GACjC,OAAO/U,EAAO+a,uBAAuB6S,MAAMzsB,IAAW,QAA+BA,KAAW,QAAgBA,EAAOoB,QAASwS,IACpI,CAP8CwqE,CAAoBv/E,EAAQq/E,GAGtE,OAD0BA,GACCC,CAC/B,CAtBgCE,CAAuB7hE,GAC3CyhE,GACA97E,EAAOjE,KAAK,CACRoI,YAAa,CACTgN,WAAYja,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG08E,EAAgB1qE,YAAa,CAAElS,QAAuD,QAA7CguB,EAAK4uD,EAAgB1qE,WAAWlS,eAA4B,IAAPguB,EAAgBA,EAAK5S,EAAIJ,eAEvK2hE,WAAY,WAGxB,CACA,OAAO57E,CACX,CDvCWm8E,CAA+BhoD,EAAOgR,QADhB,QAAKi3C,GAAqBj3C,GACiB2mB,EAC5E,IACA,SAAUqvB,GAAqB1kE,EAAWvQ,EAAKC,GAC3C,MAAMwyE,EAAiBr7B,GAA4B7mC,GAC7C0uB,QAAkB,QAAOwzC,GAC/B,IAAKxzC,EACD,MAAMz9B,GAAsBxB,EAAK,oBAAmB,EAAAvD,EAAA,IAAe8T,qCAA8CtQ,GAErH,KAAK,QAAYg/B,GACb,MAAMz9B,GAAsBxB,EAAK,oBAAmB,EAAAvD,EAAA,IAAe8T,gEAAyEtQ,GAEhJ,MAAMk2E,EAAgBtb,GAAuB57B,EAAUpqC,KAEvD,MAAO,CAAEo5B,YADW,QAAOkoD,GACXl3C,YACpB,CACA,SAAUk2C,GAAoBlnD,EAAOjuB,GACjC,MAAMymD,EAWV,SAAgCx4B,GAC5B,IAAIx3B,EAAIswB,EAER,OAD2G,QAArFA,EAAoC,QAA9BtwB,EAAKw3B,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,eAA4B,IAAPwtB,EAAgBA,EAAK,IACpHpvB,OAAO,KAA4BtH,KAAKsH,GACjDA,EAAOoT,gBAAgBQ,aAEtC,CAjB2B6qE,CAAuBnoD,GACxCn0B,QAAe,QAAKuxC,GAA4BrrC,EAAKymD,GAG3D,OADA,QAAU,IAAQ3sD,EAAO6xC,SAAU,sEAC5B7xC,EAAOL,QAClB,CACA,SAAUy8E,GAAoBj3C,GAC1B,MACMkuB,EAAavY,SADY,QAAOvB,IAC4CpU,GAClF,OAAOkuB,QAA+CA,EAAa,EACvE,CE5CO,MAAMkpB,GAA+B9G,GAAmB,qCAC/D,UAAuBvvE,EAAKvF,GACxB,MAAQyF,SAAS,UAAEqQ,GAAW,cAAEtQ,GAAmBxF,EAC7CjE,QAAe,QAAO0gD,GAAkB3mC,IAC9C,IAAK/Z,EACD,MAAMgL,GAAsBxB,EAAK,oBAAmB,EAAAvD,EAAA,IAAe8T,qCAA8CtQ,GAGrH,KAAK,QAAYzJ,IAAWumD,GAAoBvmD,GAC5C,OAAO,EAEX,MAAM8/E,EAAet2E,EAAI5O,QAAQuB,UAAUqN,EAAIrN,WAAWY,cACnDuG,SAAgB,QAAK,CAACw8E,EAAcA,EAAaC,gCAAiC,CAAChmE,IAC1F,OAAOzW,EAAO08E,UAClB,ICdaC,GAAmCtI,GAAyB,wCAyBzE,UAAuBnuE,EAAKvF,GACxB,MAAQyF,SAAS,KAAEq2B,GAAM,cAAEt2B,GAAmBxF,EACxCi8E,QAAsB,QAAKC,GAA6BpgD,GACxDqgD,EAAwB,KAAQF,EAAcrmF,KAAKwmF,GAAc,KAAQA,MAC/E,GAAItgD,EAAKx6B,SAAW66E,EAAsB76E,OACtC,MAAMyF,GAAsBxB,EAAK,gDAAiDC,GAEtF,MAAM62E,QAAiC,QAAKC,GAA0B/2E,EAAK42E,GAE3E,aADmC,QAAKI,GAA8Bh3E,EAAK82E,EAE/E,IAnCgIr8E,IAC5H,MAAQyF,SAAS,KAAEq2B,IAAY97B,EAE/B,OADuB87B,EAAK2G,SAAS3G,GAASA,IAAMlmC,IAAI,MAClCmF,KAAK,IAAI,IAEnCtB,eAAe6iF,GAAyB/2E,EAAK02E,GACzC,MAAM,QAAEtlF,EAAO,UAAEuB,GAAcqN,EAC/B,aAAa5O,EAAQuB,UAAUA,GAAWM,aAAaq7D,yBAAyBooB,EACpF,CACAxiF,eAAe8iF,GAA6Bh3E,EAAKi3E,GAC7C,MAAM,QAAE7lF,EAAO,UAAEuB,GAAcqN,EAE/B,aADmCnG,QAAQoC,IAAIg7E,EAAwB5mF,KAAKwmF,GAAch9E,QAAQoC,IAAI46E,EAAUxmF,KAAKwE,GAAQzD,EAAQuB,UAAUA,GAAWM,aAAa4tE,aAAahsE,UACxJxE,KAAK0kB,GACtBA,EAAM1kB,KAAK6mF,IACP,CACHr8E,MAAOq8E,EAAcr8E,MACrBhG,IAAKqiF,EAAcriF,SAInC,CACA,SAAU8hF,GAA4BpgD,GAClC,MAAMkd,QAAiC,QAAO,IAC9C,OAAOld,EAAKlmC,KAAK8mF,GAAyBA,EAAqB9mF,KAAK+mF,IAAqB,IAAI3gF,EAAI,OAA+D,QAAvDA,EAAKg9C,EAAyBp7C,IAAI++E,UAAoC,IAAP3gF,OAAgB,EAASA,EAAG65B,SAAS,KACjN,CCzBO,MAAM+mD,GAAqClJ,GAAyB,yCAoB3E,UAAuBnuE,EAAKvF,GACxB,MAAQyF,SAAS,aAAEyoC,GAAc,cAAE1oC,GAAmBxF,EAChDixD,QAA0B,QAAO7iB,IACjC51C,QAAmB,QAAKqkF,GAAgBt3E,EAAK0rD,EAAmB/iB,GACtE,IAAK11C,EACD,MAAMuO,GAAsBxB,EAAK,8CAA+CC,GAEpF,OAAOhN,CACX,IA5BmIwH,IAC/H,MAAQyF,SAAS,aAAEyoC,IAAoBluC,EACvC,OAAOkuC,EAAat4C,KAAK+a,IAAO,QAAgBA,KAAK5V,MAAM,IAe/DtB,eAAeojF,GAAet3E,EAAK0rD,EAAmB/iB,GAClD,OAAO9uC,QAAQoC,IAAI0sC,EAAat4C,KAAK+a,GATzClX,eAA0C8L,EAAK0rD,EAAmBngD,GAC9D,MAAM,QAAEna,EAAO,UAAEuB,GAAcqN,EACzBswB,EAAYo7B,EAAkB7zD,MAAMg0D,GAAqBA,EAAiBljB,aAAavkB,MAAMhZ,IAAO,QAAgBA,EAAIG,OAC9H,OAAI+kB,EACOA,EAAUA,UAEdl/B,EAAQuB,UAAUA,GAAWM,aAAaskF,0BAA0BhsE,EAC/E,CAEgDisE,CAA2Bx3E,EAAK0rD,EAAmBtgD,KACnG,CCpBO,MAAMqsE,GAA+BtJ,GAAyB,qCAQrE,UAAuBnuE,EAAKvF,GACxB,MAAQyF,SAAS,YAAEqL,GAAa,cAAEtL,GAAmBxF,EAC/Ci9E,QAAyB,QAAKC,GAA0B33E,EAAKuL,GACnE,IAAKmsE,EACD,MAAMl2E,GAAsBxB,EAAK,uDAAwDC,GAE7F,OAAOy3E,CACX,IAfyHj9E,IACrH,MAAQyF,SAAS,YAAEqL,IAAmB9Q,EACtC,OAAO,QAAgB8Q,EAAY,IAEvCrX,eAAeyjF,GAAyB33E,EAAKo3E,GACzC,MAAM,QAAEhmF,EAAO,UAAEuB,GAAcqN,EAC/B,OAAO5O,EAAQuB,UAAUA,GAAWM,aAAa2kF,wBAAwBR,EAC7E,CCPO,MAAMS,GAAgC1J,GAAyB,qCAYtE,UAAuBnuE,EAAKvF,GACxB,MAAQyF,SAAS,YAAEqL,EAAW,MAAE7P,GAAO,cAAEuE,GAAmBxF,EACtDqR,QAA0B,QAAKgsE,GAAuB93E,EAAKuL,EAAa7P,GAC9E,IAAKoQ,EACD,MAAMtK,GAAsBxB,EAAK,uDAAwDC,GAE7F,MAAO,CACHjG,SAAU8R,EAAkBlV,MAC5BgF,WAAYkQ,EAAkBlQ,WAEtC,IAtB0HnB,IACtH,MAAQyF,SAAS,YAAEqL,IAAmB9Q,EACtC,OAAO,QAAgB8Q,EAAY,IAEvCrX,eAAe4jF,GAAsB93E,EAAKo3E,EAAgB17E,GACtD,MAAM,QAAEtK,EAAO,UAAEuB,GAAcqN,EAC/B,IAAI+3E,EAAS3mF,EAAQuB,UAAUA,GAAWM,aAAa+G,WAAWkiE,eAAekb,GAIjF,OAHI17E,IACAq8E,EAASA,EAAOv9E,UAAUkB,IAEvBq8E,EAAOt9E,OAClB,CCLO,MAAMu9E,GAAmB,CAC5BvH,GACAoB,GACAW,GACAoC,GACAI,GACAqB,GACAI,GACAY,GACAI,GACAI,I,gBCqBJ,MAAMI,IAAuB,QAAc,OACrCC,GAAmC,CACrC,+BACA,8BACA,4BACA,sBACA,2BACA,qBAEA,wCACA,0CACA,uCAEA,6BAEA,qBACA,uCACA,+BACA,8BACA,gCACA,0CACA,yCACA,sCACA,gDACA,+CACA,wCACA,kDACA,iDACA,4CACA,sDACA,qDACA,yCACA,mDACA,kDACA,+CACA,yDACA,wDACA,4CACA,6CACA,yBACA,gCACA,yCACA,gCAEJ,SAAUC,GAASC,EAActK,EAAgBuK,EAAgBC,GAC7D,MAAMC,QAAyB,QAAKxsC,IACpC,UACU,QAAKqsC,SACL,QAAKtK,SACL,QAAKuK,GACX,IAAK,MAAMG,KAAUF,QACX,QAAKE,EAAQD,EAE3B,CACA,MAAO3nF,GACH4H,QAAQwG,MAAM,mBAAoBpO,EACtC,CACJ,CAWA,MAAM6nF,GAA8B,IAAO/9E,GAAU+P,IACjD,MAAMiuE,GAAgB,IAAIz/D,KAM1B,OALAxO,EAAOklC,KAAO3+C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGwR,EAAOklC,MAAO,CAAEgpC,kBAAmBD,IAC7EjuE,EAAOzT,KAAK2I,WAAW,mBAEvB8K,EAAOklC,KAAO3+C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGwR,EAAOklC,MAAO,CAAEgH,MAAM,YAEjEj8C,EAAK+P,EAAO,EAUhB,SAASmuE,GAAqBnnF,GACjC,IAAIgF,EAAIswB,EACR,MAAM8xD,E7GvCH,SAAqCC,GACxC,MAAMC,EAAiB,KAAMD,GAAgB1oB,GAAYA,EAAQ3iD,OAC3DurE,EAAkB,KAAU,KAAQF,EAAczoF,KAAK+/D,GACpDA,EAAQkf,MAGN,CAAClf,EAAQkf,MAAMJ,UAAW9e,EAAQkf,MAAMzhE,SAFpC,SAIf,MAAO,CACHorE,mBAAmB,KAAAC,iBAAgBF,GAKnCG,mBAAoB,YAChB,MAAMC,QAAqB,SAAe3uE,GAAWA,EAAOzT,OACvDyT,EAAOzT,KAAK2I,WAAW4vD,KACpB9kD,EAAOzT,KAAK2I,WAAW,sBAC/B,OAAa,CACT,MACMuwD,GA5BgBzlD,QA2BF,QAAK2uE,GA/FhBpjF,YAqEEyU,IApEPzU,EAAIgB,KAAK2I,WAAW4vD,IAoEH9kD,EAAS+kD,GAAc/kD,IA4BtC8tE,QAAyB,QAAKxsC,IAC9BqkB,EAAU2oB,EAAe7oB,EAASz1D,MAAMzD,MACzCo5D,QAIK,QAAMD,GAAcC,EAASmoB,EAAkBroB,SAH/Ch5C,IlMjDIlX,EkMiDiCu4E,ElMjD5Bt4E,EkMiD8CiwD,EAASz1D,MAAMwF,clMhDrF,CACHjJ,KAAM,8BACNgJ,MACAC,kBkMkDI,CArCZ,IAAsCwK,EApEbzU,ElMmDKgK,EAAKC,CkMuD3B,EAER,C6GO4Bo5E,CAV5B,SAA4BzyC,EAAU9pC,EAAS,IAC3C,OAAO,IAAO,KAAM,CAAC,EAAG,KAAM8pC,GAAWwpB,GAAYA,EAAQ3iD,OAAO,KAAM3Q,GAASszD,GAAYA,EAAQ3iD,QAC3G,CAQwD6rE,CAAmBtB,GAAkBvmF,EAAOqnF,gBAC1FS,EAAiBtB,GAAqB,CACxCuB,QAAS,CACLjB,iBAAkB9mF,EAAO8mF,iBACzBkB,eAAiD,QAAhChjF,EAAKhF,EAAOgoF,sBAAmC,IAAPhjF,EAAgBA,EAAK,CAAC,KAGjFijF,GAAc,KAAAR,iBAAgB,CAChCzjE,QAASI,GACTG,OAAQI,GACR4hB,oBAAqBE,GACrBzmC,OAAQw4B,GACRp3B,aAAcw3B,GACdz2B,YAAai5B,GACb+N,cAAehtB,GACfwB,OAAQkG,GACRsQ,iBAAkBO,GAClB7yB,SAAU0jB,GACV46B,OAAQhjB,GACR01B,aAAcmc,GACdttE,QAAS26B,GACTmB,KAAME,GACNwgB,KAAMlV,GACN5pB,MAAOwvD,GACPxuB,iBAAkBha,GAClBia,qBAAsBnD,GACtBoW,uBAAwBqC,GACxBpX,iBAAkBE,GAClB+oB,iBAAkB5qB,GAClBpX,WAAYI,GACZsiD,GAAI7iD,GACJyZ,qBAAsBE,GACtBu+B,YAAa6J,EAAgBI,oBAE3BW,GAAQ,SAAe,CACzB/rE,SAAS,SAAe6rE,GACxBG,WAAaC,GACFA,EAAqB,CACxBC,OAAO,EAQPC,kBAAmB,CACfC,eAAgB/B,GAMhBgC,mBAAoB,CAAC,MAAO,UAAW,UAAW,aAClDC,aAAc,CAEV,uBAEA,oBAGJC,UAAW,OAGdC,QAAQ5B,IACR/gF,UAAWjG,EAAO6oF,qBAAuB,CAAC7oF,EAAO6oF,sBAAwB,GAAKf,MAGrF,SAAEgB,EAAW,CAAC,GAAM9oF,EACtB8oF,EAASC,eACTZ,EAAMa,WAAU,KAAQ,IAAIhkF,EAAI,OAAyC,QAAjCA,EAAK8jF,EAASC,qBAAkC,IAAP/jF,OAAgB,EAASA,EAAGs2C,KAAKwtC,EAAUX,EAAMc,WAAYd,EAAMe,SAAS,IAEjK,MAAMC,EC7LH,SAAgCC,EAAkB,GAAIF,GACzD,IAAIlrB,EAAgB,IAAIorB,GACxB,MAAO,CACHx8E,gBAAkBy8E,IACdrrB,EAAc55D,KAAKilF,EAAQ,EAE/Bx8E,kBAAoBw8E,IAChBrrB,EAAgBA,EAAc93D,QAAQ80E,GAAMA,IAAMqO,GAAQ,EAE9DC,iBAAkB,YACd,MAAMC,QAAqB,QAAcn7E,IACzC,OAAa,CACT,MAAMuH,QAAc,QAAK4zE,GAEnBC,QAAsB,UACtBC,EAAqBj6C,GAAaA,EAASg6C,GACjD,IACIxrB,EAAcz3D,SAAS8iF,IACfA,EAAQK,KAAK/zE,IACb0zE,EAAQA,QAAQ1zE,EAAOuzE,EAAUO,EACrC,GAER,CACA,MAAOtqF,GACH4H,QAAQwG,MAAM,6CAA8CoI,EAAOxW,EACvE,CACJ,CACJ,EAER,CDgK6BwqF,CAAuBb,EAASc,qBAAsBzB,EAAMe,UAC3C,QAAzC5zD,EAAKwzD,EAASe,6BAA0C,IAAPv0D,GAAyBA,EAAGgmB,KAAKwtC,EAAUK,EAAiBv8E,gBAAiBu8E,EAAiBt8E,mBAChJ,MAAMi9E,EAAehC,EAAeiC,IAAIrD,GAAUyC,EAAiBG,iBAAkB9M,GAAoB4K,EAAgBM,mBAAoB1nF,EAAO6mF,mBACpJ,MAAO,CACHsB,QACA6B,qBAAsBb,EAAiBv8E,gBACvCq9E,uBAAwBd,EAAiBt8E,kBACzCi9E,eAER,CExMA,SAASI,GAAsBC,EAAgBC,GAC3C,MAAMruD,EAAehuB,EAAYq8E,EAAUvlF,WAAaulF,EAAUvlF,UAAUzB,IAAMgnF,EAAUvlF,UAC5FslF,SAAgEA,EAAehC,MAAMe,SlTW9E,CACH3jF,KAAM,6BACNgJ,IkTbiH,CACjH5O,QAASyqF,EAAUzqF,QACnBuB,UAAWkpF,EAAUlpF,UACrB66B,eACAsjB,iBAAkB+qC,EAAU/qC,iBAC5BkuB,SAAU6c,EAAU7c,SACpBC,cAAe4c,EAAU5c,elTQzBh/D,cAJ+CA,UAK/CC,QAAS,CACL5J,UkTTLk3B,IACP,CAuBO,MCnCMsuD,GAAwB,gBAAoB,MAI5CC,IAAuB,QAAmBD,IAqB1CE,IAAuB,QAAmBF,IAI1CG,GAA0B7pF,IACnC,MAAMwpF,EDKiC,CAACxpF,IACxC,IAAIqE,EAAIswB,EACR,MAAM,UAAEzwB,EAAS,mBAAEkT,GAAuBpX,EACpChB,GAAU,QAAiBgB,EAAMhB,SACjCuB,GAAY,QAAaP,EAAMO,WAC/B41B,GAAc,QAAuC,QAAvB9xB,EAAKrE,EAAMX,cAA2B,IAAPgF,OAAgB,EAASA,EAAG8xB,cACvF8mB,OAAQ2vB,EAAUkd,YAAajd,GAA6D,QAA1Cl4C,EAAK7nB,WAAoD,IAAP6nB,EAAgBA,EAAK,CAAC,GAC3H60D,EAAgBO,IAAqB,IAAAC,UAAS,MAC/C5uD,EAAehuB,EAAYlJ,GAAaA,EAAUzB,IAAMyB,EACxD+lF,EAAmB,CACrBjrF,UACAuB,YACA2D,YACAw6C,iBAAkB1+C,EAAM0+C,iBACxBkuB,WACAC,gBACAoc,qBAAsBjpF,EAAMq9D,eAE1B6sB,EAAoBn9E,EAAYk9E,GA2CtC,OAnFJ,SAAyCT,EAAgBC,GAGrD,MAAMU,GAAoB,IAAAl9E,QAAOu8E,GAC3BY,GAAe,IAAAn9E,QAAOw8E,IAC5B,IAAAv8E,YAAU,KACNi9E,EAAkBh9E,QAAUq8E,EAC5BY,EAAaj9E,QAAUs8E,CAAS,KAEpC,IAAAv8E,YAAU,IACC,KACHq8E,GAAsBY,EAAkBh9E,QAASi9E,EAAaj9E,QAAQ,GAE3E,GACP,CA2BIk9E,CAAgCb,EAAgBS,IAChD,IAAA/8E,YAAU,KACN,IAAI7I,EACJ,IE5DD,SAA6BimF,EAAMC,GACtC,GAAID,IAASC,EACT,OAAO,EAEX,IAAKD,IAASC,EACV,OAAO,EAEX,MAAMC,EAAQ5rF,OAAOD,KAAK2rF,GACpBG,EAAQ7rF,OAAOD,KAAK4rF,GACpBG,EAAMF,EAAM7gF,OAClB,GAAI8gF,EAAM9gF,SAAW+gF,EACjB,OAAO,EAEX,IAAK,IAAInkF,EAAI,EAAGA,EAAImkF,EAAKnkF,IAAK,CAC1B,MAAML,EAAMskF,EAAMjkF,GAClB,GAAI+jF,EAAKpkF,KAASqkF,EAAKrkF,KAAStH,OAAO+rF,UAAUC,eAAejwC,KAAK4vC,EAAMrkF,GACvE,OAAO,CAEf,CACA,OAAO,CACX,CFwCa,CAAgCgkF,EAAmBD,KAAsBT,EAAgB,CAC1F,GAAIA,EAAgB,CAGhBD,GAAsBC,EAAgBU,GAKtC,IACIV,EAAeL,aAAatyE,QAEhC,CACA,MAAO8d,GAAM,CACjB,CACA,MAAMuxD,EAAoB,CAAC7wE,MAErBw1E,EAAoBrE,GAAqB,CAC3CL,iBAAkB,CACdnnF,UACAuB,UAAWA,EACX66B,aAAcA,EACdsjB,iBAAkBurC,EAAiBvrC,iBACnCkuB,SAAUqd,EAAiBrd,SAC3BC,cAAeod,EAAiBpd,eAEpCsb,SAAU,CACNc,qBAAsBjpF,EAAMq9D,cAC5B+qB,cAAepoF,EAAMooF,cACrBc,sBAAuBlpF,EAAMkpF,uBAEjChD,oBACAmB,eAAgBzoF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG7G,EAAM8qF,kBAAmB,CAAEjwC,iBAAkB76C,EAAM66C,iBAAkB8D,mBAAoBvxC,EAAYlJ,GAAaA,OAAYD,IAC9KuzB,kBAAsD,QAAlCnzB,EAAKrE,EAAMw3B,yBAAsC,IAAPnzB,EAAgBA,EAAK,SAEvFwmF,EAAkBrD,MAAMe,SAASpxE,IAA0C,QAAkBnX,EAAMX,OAAQ82B,GAAcn2B,EAAMwB,YAAa4V,EAAoBH,KAChK8yE,EAAkBc,EACtB,KAEGrB,CAAc,EClEEuB,CAA4B/qF,IAC7C,uBAAEgrF,GAA2BhrF,EACnC,OAAKwpF,EAGyBvlF,MAA1B+mF,GAAuCA,IAA2BtB,GAY1D,gBAAoB,KAAU,CAAElC,MAAOgC,EAAehC,MAAOJ,QAASsC,IAC1E,gBAAoB,KAAU,CAAElC,MAAOgC,EAAehC,MAAOJ,QAAS4D,GAClE,gBAAoB1+E,EAAyB,CAAEL,gBAAiBu9E,EAAeH,qBAAsBn9E,kBAAmBs9E,EAAeF,wBAA0BtpF,EAAMuM,YAE3K,gBAAoB,KAAU,CAAEi7E,MAAOgC,EAAehC,MAAOJ,QAASsC,IAC1E,gBAAoBp9E,EAAyB,CAAEL,gBAAiBu9E,EAAeH,qBAAsBn9E,kBAAmBs9E,EAAeF,wBAA0BtpF,EAAMuM,WAnBhK,IAmB2K,EExC7K0+E,GAAsB,CAACC,EAAgB7tB,EAAe8tB,KAC/D,MAAM5C,EAAWoB,MACX,gBAAE19E,EAAe,kBAAEC,GAAsBE,IAC/C,OAAO,IAAAg/E,cAAY,IAAI3qC,KACnB,IAAIp8C,EACJ,IAAIwK,EAAUq8E,KAAkBzqC,GAChC,MAAM5yC,EAAiD,QAAhCxJ,EAAKwK,EAAQhB,qBAAkC,IAAPxJ,EAAgBA,GAAK,SAC/EwK,EAAQhB,gBACTgB,EAAUjQ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgI,GAAU,CAAEhB,mBAE1D,MAAMw9E,EAAyBhuB,EACzBz+D,OAAOD,KAAK0+D,GAAep/D,KAAK6W,IACA,CAC1Bi0E,KAAOuC,GAAOA,EAAG1mF,OAASkQ,EAC1B4zE,QAAU1zE,IACFA,EAAMnH,gBAAkBA,IAaxCw9E,EAAuBzlF,SAAS8iF,IAC5Bx8E,EAAkBw8E,EAAQ,IAZdrrB,EAAcvoD,GAAWE,GAC7B,MAKV,GACNq2E,EAAuBzlF,SAAS8iF,IAC5Bz8E,EAAgBy8E,EAAQ,IAO5ByC,SAA0DA,EAAYt8E,GACtE05E,EAAS15E,EAAQ,GAClB,GAAG,EChDG08E,GAAgC,EAAGL,iBAAgBM,eAAcC,aAAYhuB,YAAWF,UAAS4tB,kBAC1G,MAAOx+E,EAAQ++E,IAAa,IAAA1B,YAc5B,MAAO,CACHZ,IAdQ6B,GAAoBC,EAAgB,CAC5C,CAACM,GAAgBx2E,IACb02E,EAAU,WACVjuB,SAAsDA,EAAUzoD,EAAM,EAE1E,CAACy2E,GAAcz2E,IACX02E,EAAU,SACVnuB,SAAkDA,EAAQvoD,EAAM,IAEpE6H,IACA6uE,EAAU,WACVP,SAA0DA,EAAYtuE,EAAI,IAI1ElQ,SACH,EClBE,SAASg/E,GAAaxb,EAAWtiE,GACpC,MAAO,CACHjJ,KAAM,6BACNiJ,gBACAC,QAAS,CACLqiE,aAGZ,CCFO,MAAMyb,GAA4B,KACrC,MAAMrD,EAAWoB,KACjB,OAAO,IAAAyB,cAAajb,KAChB,QAAU1iE,GAAuC0iE,GAAY,iEAC7D,MAAMthE,EAAU88E,GAAaxb,GAC7BoY,EAAS15E,EAAQ,GAClB,CAAC05E,GAAU,ECRXzmF,eAAe+pF,GAAgBtD,EAAUlgF,GAC5C,MAAM,QAAEu1D,EAAO,SAAEE,GAAaJ,GAAyBr1D,GAEvD,OADAkgF,EAASzqB,GACFF,CACX,CCJO,MAAMkuB,GAA8B,EAAGC,eAActuB,YAAWF,UAASyuB,aAAYb,kBACxF,MAAO/yE,EAAO6zE,IAAY,IAAAjC,UAAS,CAC/Br9E,OAAQ,UACRC,WAAO3I,EACPyD,YAAQzD,IAENioF,GAAW,IAAAj/E,SAAO,GAClBs7E,EAAWoB,KACXP,GAAM,IAAAgC,cAAY,IAAI3qC,KACxB,GAAIyrC,EAAS/+E,QACT,OAEJ,IAAI9E,EAAQ0jF,KAAgBtrC,GACvBp4C,EAAMwF,gBACPxF,EAAQzJ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGwB,GAAQ,CAAEwF,eAAe,YAEhEq+E,EAAS/+E,SACV8+E,EAAS,CACLt/E,OAAQ,UACRjF,YAAQzD,EACR2I,WAAO3I,IAGfknF,SAA0DA,EAAY9iF,GACtEwjF,GAAgBtD,EAAUlgF,GACrByB,MAAMpC,IACFwkF,EAAS/+E,UACV8+E,EAAS,CAAEt/E,OAAQ,UAAWjF,SAAQkF,WAAO3I,IAC7Cw5D,SAAsDA,EAAU/1D,GACpE,IAEC8sB,OAAOh2B,IACH0tF,EAAS/+E,UACNkC,GAAuB7Q,IACvBytF,EAAS,CACLt/E,OAAQ,QACRjF,YAAQzD,EACR2I,MAAO,IAAI,MAAmBpO,EAAEsP,QAAQgB,QAAStQ,EAAEsP,QAAQlB,SAE/D2wD,SAAkDA,EAAQ/+D,IAErD2Q,GAAyB3Q,KAC9BytF,EAAS,CAAEt/E,OAAQ,WAAYjF,YAAQzD,EAAW2I,WAAO3I,IACzD+nF,SAAwDA,EAAWxtF,IAE3E,GACF,GACH,CAACutF,EAActuB,EAAWF,EAASyuB,EAAYb,IAQlD,OALA,IAAAj+E,YAAU,IACC,KACHg/E,EAAS/+E,SAAU,CAAI,GAE5B,IACIvO,OAAOiI,OAAO,CAAEuiF,OAAOhxE,EAAM,ECtD3B+zE,GAA8B,KACvC,MAAMC,EAAgBR,KAmBtB,MAAO,CACHS,wBAnB2B,IAAAjB,cAAY,KACvCgB,EAAcl4E,GAAyB,0BAA0B,GAClE,CAACk4E,IAkBAE,sBAjByB,IAAAlB,cAAY,KACrCgB,EAAcl4E,GAAyB,wBAAwB,GAChE,CAACk4E,IAgBAG,sBAfyB,IAAAnB,cAAaoB,IACtCJ,EAAcl4E,GAAyB,CAAEE,YAAa,uBAAwB6M,KAAM,CAAEurE,qBAAqB,GAC5G,CAACJ,IAcAK,0BAb6B,IAAArB,cAAasB,IAC1CN,EAAcl4E,GAAyB,CAAEE,YAAa,2BAA4B6M,KAAMyrE,IAAa,GACtG,CAACN,IAYAO,wBAX2B,IAAAvB,cAAasB,IACxCN,EAAcl4E,GAAyB,CAAEE,YAAa,yBAA0B6M,KAAMyrE,IAAa,GACpG,CAACN,IAUAQ,kCATqC,IAAAxB,cAAY,KACjDgB,EAAcl4E,GAAyB,oCAAoC,GAC5E,IAQF,ECZE,SAAS24E,GAAmBzuF,EAAIyP,GACnC,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACL1P,MAGZ,CAeO,SAAS0uF,GAAmB1uF,EAAIyP,GACnC,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACL1P,MAGZ,CCjCO,MAAM2uF,GAA+B7B,IACxC,MAAM3C,EAAWoB,KACjB,OAAO,IAAAyB,cAAY,IAAI3qC,KACnB,MAAM5xC,EAAUq8E,KAAkBzqC,GAClC8nC,EAAS15E,EAAQ,GAClB,CAACq8E,GAAgB,ECHX8B,GAA2B5uF,IACpC,MAAM6uF,EAA8BF,GAA4BF,IAC1DK,EAA8BH,GAA4BD,IAOhE,MAAO,CACHK,sBAPyB,IAAA/B,cAAY,KACrC6B,EAA4B7uF,EAAG,GAChC,CAACA,IAMAgvF,sBALyB,IAAAhC,cAAY,KACrC8B,EAA4B9uF,EAAG,GAChC,CAACA,IAIH,ECnCL,SAAS09C,GAAsB19C,EAAIivF,EAAcx/E,GAC7C,MAAO,CACHjJ,KAAM,uCACNiJ,gBACAC,QAASlP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGwmF,GAAe,CAAEjvF,GAAI,KAASA,GAAMA,GAAK,QAAgBA,KAE1G,CAMO,SAASkvF,GAA0BlvF,EAAIyP,GAC1C,OAAOiuC,GAAsB19C,EAAI,CAC7BulD,WAAW,EACX0jB,qBAAiBpjE,EACjB2I,WAAO3I,EACPspF,cAAUtpF,GACX4J,EACP,CAMO,SAAS2/E,GAAwBpvF,EAAIwO,EAAOiB,GAC/C,OAAOiuC,GAAsB19C,EAAI,CAC7BulD,WAAW,EACX/2C,QACA2gF,cAAUtpF,GACX4J,EACP,CAMO,SAAS4/E,GAAuBrvF,EAAIipE,EAAiBqmB,EAAmB7/E,GAC3E,OAAOiuC,GAAsB19C,EAAI,CAC7BulD,WAAW,EACX/2C,WAAO3I,EACPojE,kBACAkmB,SAAUG,GACX7/E,EACP,CCvCO,SAAS8/E,GAA2BxvE,GACvC,MAAMyvE,EAAeb,GAA4BO,IAC3CO,EAAUd,GAA4BU,IACtCK,EAAWf,GAA4BS,IACvCjwB,GAAU,IAAA6tB,cAAax+E,IACzBkhF,EAAS3vE,EAAWvR,EAAM,GAC3B,CAACkhF,EAAU3vE,IACRs/C,GAAY,IAAA2tB,cAAY,CAAC/jB,EAAiBkmB,KAC5CM,EAAQ1vE,EAAWkpD,EAAiBkmB,EAAS,GAC9C,CAACM,EAAS1vE,IACP4vE,GAAa,IAAA3C,cAAanqE,IACxBA,EAAK+sE,UACLvwB,EAAUx8C,EAAK+sE,SAAStmF,OAAQuZ,EAAK+sE,SAAST,SAClD,GACD,CAAC9vB,IAMJ,MAAO,CACHwwB,kBANqB,IAAA7C,cAAY,EAAGznC,gBAChCA,GACAiqC,EAAazvE,EACjB,GACD,CAACyvE,EAAczvE,IAGdo/C,UACAE,YACAswB,aAER,C,gBC7BO,MAAMG,IAAsB,IAAAliF,eAAc,CAC7C8a,SAAU,GACVqnE,cAAe,OAGfC,kBAAmB,OAGnBC,WAAY,IAED,KAGf,IAAIC,GAAY,EAChB,MAIaC,GAA8B,EAAGhiF,eAC1C,MAAOua,EAAU0nE,IAAe,IAAAxE,UAAS,IACnCmE,GAAgB,IAAA/C,cAAahtF,IAC/BowF,GAAaC,GAAiBA,EAAalpF,QAAQuJ,GAAYA,EAAQ1Q,KAAOA,KAAI,GACnF,IACGgwF,GAAoB,IAAAhD,cAAY,KAClCoD,EAAY,GAAG,GAChB,IACGH,GAAa,IAAAjD,cAAat8E,IAC5B,IAAIzK,EACJ,MAAMjG,KAAQkwF,IAAW5nD,SAAS,IAC5BgoD,EAAa9vF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGiI,GAAU,CAAE1Q,OAC/DowF,GAAaC,GAAiB,IAAIA,EAAcC,KAChD,MAAMC,EAAuC,QAA3BtqF,EAAKyK,EAAQ6/E,gBAA6B,IAAPtqF,EAAgBA,EAjBpD,KAuBjB,OALIsqF,GACAC,YAAW,KACPT,EAAcO,EAAWtwF,GAAG,GAC7BuwF,GAEAvwF,CAAE,GACV,CAAC+vF,IACJ,OAAQ,gBAAoBD,GAAoBzhF,SAAU,CAAExC,MAAO,CAAE6c,WAAUqnE,gBAAeC,oBAAmBC,eAAgB9hF,EAAU,ECrClIsiF,GAAkB,KAC3B,MAAM,WAAER,EAAU,cAAEF,EAAa,kBAAEC,IAAsB,IAAA/hF,YAAW6hF,IAC9DY,GAAO,EAAAC,GAAA,KACPC,EAAkBpqF,GAAS,CAACkK,EAAS0jB,KACnCA,aAAyC,EAASA,EAAQhsB,QACnD6nF,EAAWzvF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2rB,GAAU,CAAE5tB,OAAMqqF,KAAMH,EAAKj/D,cAAc/gB,EAAS0jB,EAAQhsB,WAE3G6nF,EAAWzvF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2rB,GAAU,CAAE5tB,OAAMrB,KAAMurF,EAAKj/D,cAAc/gB,MAMjG,MAAO,CACHogF,WALeF,EAAe,WAM9BG,YALgBH,EAAe,YAM/BI,WALeJ,EAAe,WAM9BK,SALaL,EAAe,SAM5Bb,gBACAC,oBACH,E,kDCnBL,MAAM,IAAa,KAAA/4C,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMmvE,KAIxD+H,IAAkC,KAAAj6C,gBAAe,IAAaj9B,GAAUA,EAAM4mB,oBAAoBC,OAIlGswD,IAA6C,KAAAl6C,gBAAe,IAAaj9B,IAAY,IAAI/T,EAAI,OAAiE,QAAzDA,EAAK+T,EAAM4mB,oBAAoBI,4BAAyC,IAAP/6B,EAAgBA,OAAKJ,CAAS,IAIpMurF,IAA4C,KAAAn6C,gBAAe,IAAaj9B,GAAUA,EAAMmnB,8BAA8BN,OAItHwwD,IAA2B,KAAAp6C,gBAAe,IAAaj9B,GAAUA,EAAMsnB,aAAaT,OAIpFywD,IAA0B,KAAAr6C,gBAAe,IAAaj9B,GAAUA,EAAMkoB,YAAYrB,OAIlF0wD,IAA2B,KAAAt6C,gBAAe,IAAaj9B,GAAUA,EAAMqoB,aAAaxB,OAIpF2wD,IAA8B,KAAAv6C,gBAAe,IAAaj9B,KAAYA,EAAMwoB,gBAAgBC,oBAI5FgvD,IAAmC,KAAAx6C,gBAAe,IAAaj9B,KAAYA,EAAMmqB,qBAAqBtD,OAItG6wD,IAAyC,KAAAz6C,gBAAe,IAAaj9B,GAAUA,EAAMwoB,gBAAgBC,oBAIrGkvD,IAA0B,KAAA16C,gBAAe,IAAaj9B,GAAUA,EAAMynB,UAAUC,WACvFkwD,IAAgC,KAAA36C,gBAAe,IAAaj9B,GAAUA,EAAM4nB,UAAUI,uBACtF6vD,IAA2B,KAAA56C,gBAAe,IAAaj9B,IAAY,IAAI/T,EAAI,OAAkD,QAA1CA,EAAK+T,EAAM4nB,UAAUC,uBAAoC,IAAP57B,EAAgBA,OAAKJ,CAAS,IAI5JisF,GAAoC1vC,IAAwB/9C,IAC9D,KAAA4yC,gBAAewP,GAAkBorC,IAA0B,CAACv/C,EAASzQ,KACxE,IAAKx9B,EACD,OAAO,EAEX,MAAM0tF,EAAelwD,GAAmByQ,EAAQzqC,IAAIg6B,GACpD,IAAKkwD,EACD,OAAO,EAEX,MAAMC,EAAe1/C,EAAQzqC,IAAIxD,GACjC,QAAK2tF,GAGEA,EAAa5tF,aAAe2tF,EAAa3tF,UAAU,MAMrD6tF,GAAyC7vC,IAAwB/9C,IACnE,KAAA4yC,gBAAewP,GAAkBmrC,IAA+B,CAACt/C,EAAStQ,KAC7E,IAAK39B,EACD,OAAO,EAEX,MAAM6tF,EAAoBlwD,GAAwBsQ,EAAQzqC,IAAIm6B,GAC9D,IAAKkwD,EACD,OAAO,EAEX,MAAMF,EAAe1/C,EAAQzqC,IAAIxD,GACjC,QAAK2tF,GAGEA,EAAa5tF,aAAe8tF,EAAkB9tF,UAAU,MAM1D+tF,IAAkC,KAAAl7C,gBAAe,IAAaj9B,IAAY,IAAI/T,EAAI,OAAmD,QAA3CA,EAAK+T,EAAM4oB,WAAWC,uBAAoC,IAAP58B,EAAgBA,EAAK,CAAC,CAAC,IAIpKmsF,IAA0B,KAAAn7C,gBAAe,IAAaj9B,GAAUA,EAAM+oB,oBAItEsvD,IAAiC,KAAAp7C,gBAAe,IAAaj9B,GAAUA,EAAMkpB,2BAI7EovD,IAAoC,KAAAr7C,gBAAe,IAAaj9B,GAAUA,EAAMopB,8BAIhFmvD,IAAuC,KAAAt7C,gBAAe,IAAaj9B,GAAUA,EAAMspB,iCAC1FkvD,IAAqC,KAAAv7C,gBAAe,IAAaj9B,GAAUA,EAAMwpB,+BAI1EivD,GAAiDrwC,IAAwB/9C,IAAQ,KAAA4yC,gBAAeu7C,IAAqCE,GACvIA,EAAe9+D,MAAM++D,IAAe,QAAgBA,EAAYtuF,SAK9DuuF,IAAuC,KAAA37C,gBAAe,IAAaj9B,GAAUA,EAAM2pB,+BAInFkvD,IAA4B,KAAA57C,gBAAe,IAAaj9B,GAAUA,EAAM6pB,sBAIxEivD,IAAyB,KAAA77C,gBAAe,IAAaj9B,QAAyCnU,IAA/BmU,EAAMyrB,uBAIrEstD,IAA2B,KAAA97C,gBAAe,IAAaj9B,GAAUA,EAAMgqB,qBAIvEgvD,IAA+B,KAAA/7C,gBAAe,IAAaj9B,GAAUA,EAAMsqB,wBAAwBC,yBAC1G0uD,IAA8C,KAAAh8C,gBAAe,IAAaj9B,GAAUA,EAAMsqB,wBAAwBG,wCAI3GyuD,IAA2C,KAAAj8C,gBAAeg8C,IAA8CxuD,GAA0CA,EAAsC5kC,KAAKsI,GAAMA,EAAE4X,cAIrMozE,IAA+C,KAAAl8C,gBAAeg8C,IAA8CxuD,GAA0CA,EAAsCt9B,QAAQR,GAASA,EAAKg+B,cAAa9kC,KAAKsI,GAAMA,EAAE4X,cACnPqzE,IAA2C,KAAAn8C,gBAAeg8C,IAA8CxuD,GAA0C,IAAIv+B,EAAU,CAClKY,UAAYqB,GAAMA,EAAE0E,SACpBjG,WAAauB,GAAMA,EAAE4X,UACrBlZ,WAAasB,GAAMA,EAAEi9B,UACrB3+B,iBAAiB,IAClBc,UAAUk9B,KAIA4uD,GAAyDjxC,IAAwB/9C,IAAQ,KAAA4yC,gBAAem8C,IAA2CE,IAAiC,IAAIrtF,EAAIswB,EAAI,OAAyI,QAAjIA,EAAoD,QAA9CtwB,EAAKqtF,EAA2BzrF,IAAIxD,UAAyB,IAAP4B,OAAgB,EAASA,EAAGi/B,2CAAwD,IAAP3O,EAAgBA,EAAK,EAAE,MAIxWg9D,IAA6B,KAAAt8C,gBAAe,IAAaj9B,GAAUA,EAAMyrB,uBAIzE+tD,IAA6B,KAAAv8C,gBAAe,IAAaj9B,GAAUA,EAAM4rB,uBAIzE6tD,IAAuB,KAAAx8C,gBAAe,IAAaj9B,GAAUA,EAAMuf,iBAInEm6D,GAA4BtxC,IAAwBrc,IAAS,KAAAkR,gBAAew8C,IAAuBE,GACrG5tD,EAAK5O,OAAO9yB,IACf,IAAI4B,EAAIswB,EACR,OAAqH,QAA7GA,EAAMlyB,IAAgD,QAAvC4B,EAAK0tF,GAAQ,EAAA1nF,EAAA,IAAe5H,WAA0B,IAAP4B,OAAgB,EAASA,EAAGggC,oBAAkC,IAAP1P,GAAgBA,CAAU,QAMlJq9D,GAA4BxxC,IAAwBrc,IAAS,KAAAkR,gBAAew8C,IAAuBE,GACrG5tD,EAAK57B,QAAO,CAAC0pF,EAAcxvF,KAC9B,MAAMsC,EAAOtC,GAAOsvF,GAAQ,EAAA1nF,EAAA,IAAe5H,IAC3C,OAAIsC,aAAmC,EAASA,EAAKktF,cAC1C,KAAMA,EAAc,CAACltF,EAAKktF,eAE9BA,CAAY,GACpB,QAKMC,GAA4B1xC,IAAwBrc,IAAS,KAAAkR,gBAAew8C,IAAuBE,IAC5G,MAAMvkD,EAAgBrJ,EAAKlmC,KAAKwE,IAC5B,MAAMsC,EAAOtC,GAAOsvF,GAAQ,EAAA1nF,EAAA,IAAe5H,IAC3C,OAAOsC,aAAmC,EAASA,EAAKktF,YAAY,IAElEE,EAAW,KAAO3kD,GAAgBrV,GAAY,qBAANA,IACxCi6D,EAAW,KAAO5kD,GAAgBrV,GAAY,qBAANA,IAC9C,MAAO,IACCg6D,EAASxoF,SAAWw6B,EAAKx6B,OAAS,CAAC,oBAAsB,MACzDyoF,EAASzoF,SAAWw6B,EAAKx6B,OAAS,CAAC,oBAAsB,GAChE,MAKQ0oF,GAAkC7xC,IAAwBrc,IAAS,KAAAkR,gBAAe68C,GAA0B/tD,IAGxHqJ,GAAkBA,EAAc7jC,OAAS,GAAK6jC,EAAcjY,OAAOmkB,GAAY,qBAANA,QC/M7D,IAAW,SAAe,CACnC44C,6BAA8B,CAAEl0F,GAAI,iCACpCm0F,4BAA6B,CAAEn0F,GAAI,gCACnCo0F,0BAA2B,CAAEp0F,GAAI,8BACjCq0F,4BAA6B,CAAEr0F,GAAI,gCACnCs0F,oCAAqC,CAAEt0F,GAAI,wCAC3Cu0F,0BAA2B,CAAEv0F,GAAI,8BACjCw0F,8BAA+B,CAAEx0F,GAAI,kCACrCy0F,4BAA6B,CAAEz0F,GAAI,wCACnC00F,2BAA4B,CAAE10F,GAAI,uCAClC20F,yBAA0B,CAAE30F,GAAI,uCAChC40F,2BAA4B,CAAE50F,GAAI,yCAClC60F,uBAAwB,CAAE70F,GAAI,qCAC9B80F,yBAA0B,CAAE90F,GAAI,uCAChC+0F,2BAA4B,CAAE/0F,GAAI,yCAClCg1F,4BAA6B,CAAEh1F,GAAI,0CACnCi1F,8BAA+B,CAAEj1F,GAAI,4CACrCk1F,0BAA2B,CAAEl1F,GAAI,wCACjCm1F,yBAA0B,CAAEn1F,GAAI,uCAChCo1F,8BAA+B,CAAEp1F,GAAI,2CACrCq1F,oCAAqC,CAAEr1F,GAAI,kDAC3Cs1F,gCAAiC,CAAEt1F,GAAI,8CACvCu1F,uBAAwB,CAAEv1F,GAAI,qCAC9Bw1F,uBAAwB,CAAEx1F,GAAI,qCAC9By1F,mCAAoC,CAAEz1F,GAAI,gDAC1C01F,2BAA4B,CAAE11F,GAAI,uCAClC21F,oCAAqC,CAAE31F,GAAI,iDAC3C41F,+CAAgD,CAC5C51F,GAAI,8DAER61F,OAAQ,CAAE71F,GAAI,iCACd81F,QAAS,CAAE91F,GAAI,kCACf+1F,wBAAyB,CAAE/1F,GAAI,6BAC/Bg2F,kCAAmC,CAAEh2F,GAAI,uCACzCi2F,kCAAmC,CAAEj2F,GAAI,uCACzCk2F,iCAAkC,CAAEl2F,GAAI,sCACxCm2F,sCAAuC,CAAEn2F,GAAI,yDAC7Co2F,kCAAmC,CAAEp2F,GAAI,qDACzCq2F,kCAAmC,CAAEr2F,GAAI,+CACzCs2F,iCAAkC,CAAEt2F,GAAI,8CACxCu2F,mCAAoC,CAAEv2F,GAAI,gDAC1Cw2F,kCAAmC,CAAEx2F,GAAI,+CACzCy2F,+CAAgD,CAC5Cz2F,GAAI,wDAER02F,8CAA+C,CAC3C12F,GAAI,uDAER22F,0CAA2C,CAAE32F,GAAI,kDACjD42F,4CAA6C,CAAE52F,GAAI,oDACnD62F,2CAA4C,CAAE72F,GAAI,qDCzCzC82F,GAA8B,KACvC,IAAI7wF,EACJ,MAAM,WAAE6qF,EAAU,SAAEG,GAAaR,KAC3BsG,EAA+BvL,GAAqB0F,IACpD8F,EAAyCxL,GAAqB4F,IAC9DjH,EAAWoB,KACXvuD,EAAewuD,GAAqB9hC,IACpCkG,EAAgC47B,GAAqB77B,IACrD/2B,EAAa4yD,GAAqBh+B,IAClCypC,EAAezL,GAAqBpjC,IACpCkf,EAAyBkkB,GAAqBnkB,IAC9C6vB,EAA6B1L,GAAqBv9B,IAClD/0B,EAA4BsyD,GAAqB2G,IACjDgF,EAA6B,IAAMhN,EAAS5jD,GAAU5F,2BACtDy2D,EAA8B,IAAMjN,EAAS5jD,GAAUzF,4BACvDu2D,EAAuC,IAAMznC,GAAiCu6B,EAAS5jD,GAAUrF,qCACjGo2D,EAAwC,IAAM1nC,GAAiCu6B,EAAS5jD,GAAUnF,sCAGlGm2D,EAAuC,IAAM3nC,GAAiCu6B,EAAS5jD,GAAUtF,8CAChGu2D,EAAsBC,IAA2B,IAAA7L,aACjDvoF,EAAOq0F,IAAY,IAAA9L,UAAS,IAC7B+L,EAA6BV,IAC9Br+D,GACD0uC,GACA4vB,IAC0D,QAAxDjxF,EAAKizB,EAA0B0+D,2BAAwC,IAAP3xF,GAAgBA,GAOhF4xF,GAA4B,IAAA7K,cAAY,KACrChwD,IAGD4yB,EACAynC,IAGAF,IACJ,GACD,CAACn6D,EAAc4yB,IACZkoC,GAAyB,IAAA9K,cAAa+K,IACxCZ,IACAY,GA7BuC,CAACA,IAAkBnoC,GAC1Du6B,EAAS5jD,GAAUxF,wCAAwCg3D,GAAe,EA4BzDC,CAAmCD,EAAc,GACnE,IACGE,GAAgC,IAAAjL,cAAY,KAC9CoK,IACAnG,EAAS,4BAAkC,GAC5C,IACGiH,GAAkC,IAAAlL,cAAY,KAChDoK,IACAtG,EAAW,+BACXyG,GAAsC,GACvC,IACGY,GAA8B,IAAAnL,cAAY,KAC5CoK,IACAnG,EAAS,2BACTwG,OAAwB5xF,EAAU,GACnC,IACGuyF,GAAgC,IAAApL,cAAY,KAC9CoK,IACAC,IACAvG,EAAW,6BACX2G,OAAwB5xF,EAAU,GACnC,IACGwyF,GAA2B,IAAArL,cAAY,KACzCoK,IACAC,IACAE,IACAE,OAAwB5xF,EAAU,GACnC,IACGyyF,GAA4C,IAAAtL,cAAY,KAC1D8D,EAAW,8BAAoC,GAChD,IACGyH,GAAkC,IAAAvL,cAAY,KAChDsK,IACAH,GAA4B,GAC7B,IACGqB,GAAmC,IAAAxL,cAAY,CAACyL,EAAUp1F,KAC5Di0F,IACAG,EAAwBgB,GACxBf,EAASr0F,GACT8zF,GAA4B,GAC7B,IACGuB,GAAoC,IAAA1L,cAAY,KAClDsK,GAAuC,GACxC,IACGqB,GAA2C,IAAA3L,cAAY,KACzDsK,IACArG,EAAS,+BAAqC,GAC/C,IACG2H,GAA0C,IAAA5L,cAAY,KACxDsK,IACArG,EAAS,iCAAuC,GACjD,IACH,MAAO,CACH0G,6BACA/nC,gCACAioC,4BACAd,+BACAC,yCACAc,yBACAU,mCACAhB,uBACAn0F,QACAg1F,2BACAJ,gCACAC,kCACAC,8BACAC,gCACAG,kCACAG,oCACAC,2CACAL,4CACAM,0CACH,ECzHE,SAASC,GAAmB94E,GAC/B,MAAMoqE,EAAWoB,KACXuN,EAAoBtN,GAAqB6G,IACzC0G,EAAevN,GAAqBnjC,IACpC2wC,EAAiBxN,GAAqB4G,IACtC6G,EAAaj5E,QAAQ+4E,GAAgBC,GAAkBj5E,IAAa,QAAgBi5E,EAAgBj5E,IACpGm5E,GAAmB,IAAAlM,cAAY,KACjC7C,EAAS5jD,GAAUtD,6BAA4B,GAAO,GACvD,CAACknD,IACEgP,GAAa,IAAAnM,cAAa5sF,IACxBA,IAMAA,EAAEg5F,6BAA8B,GAEhCL,GAAgBh5E,IAChBoqE,EAAS5jD,GAAUzD,aAAa/iB,IAChCoqE,EAAS5jD,GAAUtD,6BAA4B,IACnD,GACD,CAAC81D,EAAch5E,EAAWoqE,IACvBkP,GAAkB,IAAArM,cAAa5sF,MAC3BA,aAA6B,EAASA,EAAEg5F,8BAAgCJ,GAC1E7O,EAAS5jD,GAAUvD,uBACvB,GACD,CAACmnD,EAAU6O,IACd,MAAO,CACHD,eACAE,aACAE,aACAG,mBAAoBR,GAAqBG,EACzCC,mBACAG,kBAER,CCxBO,SAASE,GAA0B/yF,EAAMwE,EAAa9B,EAAME,EAAIqpE,EAAyBhjE,GAC5F,MAAO,CACHjJ,KAAM,2DACNiJ,gBACAC,QAAS,CACLlJ,OACAwE,cACA9B,OACAE,KACAqpE,2BAGZ,CAkBO,SAAS+mB,GAAgBryF,EAAQsI,GACpC,IAAI,QAAoBtI,GACpB,OAAOsyF,GAAyBhqF,GAEpC,IAAI,QAAqBtI,GAAS,CAC9B,MAAMiB,GAAS,QAAyBjB,GACxC,OAAOoyF,GAA0B,WAAYnxF,EAAO4C,YAAa5C,EAAOc,KAAMd,EAAOgB,QAAIvD,EAAW4J,EACxG,CACK,CACD,MAAMrH,GAAS,QAAyBjB,GACxC,OAAOoyF,GAA0B,WAAY,gBAAiBnxF,EAAOc,KAAMd,EAAOgB,QAAIvD,EAAW4J,EACrG,CACJ,CAUO,SAASgqF,GAAyBhqF,GACrC,MAAO,CACHjJ,KAAM,2DACNiJ,gBACAC,QAAS,CACLlJ,KAAM,WACNwE,YAAa,iBAGzB,CAiBO,SAAS,GAAmB+P,EAAaxW,EAAOkL,EAAe0L,GAClE,MAAO,CACH3U,KAAM,mDACNiJ,gBACAC,QAAS,CACLqL,cACAxW,QACA4W,iBAGZ,CAUO,SAAS,GAAsBY,EAAetM,GACjD,MAAO,CACHjJ,KAAM,sDACNiJ,gBACAC,QAAS,CACL4M,eAAgB,CAACP,IAG7B,CAUO,SAAS29E,GAAuBp9E,EAAgB7M,GACnD,MAAO,CACHjJ,KAAM,sDACNiJ,gBACAC,QAAS,CACL4M,kBAGZ,CAcO,SAAS,GAAoBP,EAAexX,EAAOkL,GACtD,MAAO,CACHjJ,KAAM,oDACNiJ,gBACAC,QAAS,CACLqM,gBACAxX,SAGZ,CAgCO,SAASo1F,GAA+B59E,EAAevS,EAAUkqE,EAAejkE,GACnF,MAAO,CACHjJ,KAAM,gEACNiJ,gBACAC,QAAS,CACLqM,gBACAvS,WACAkqE,iBAGZ,CAqBO,SAASkmB,GAAqB79E,EAAe5U,EAAQsI,GACxD,OAAOkqF,GAA+B59E,GAAe,QAAwB5U,IAAS,QAA0BA,GAAU,KAAO,SAAUsI,EAC/I,CAcO,SAASoqF,GAA8B99E,EAAetM,GACzD,MAAO,CACHjJ,KAAM,gEACNiJ,gBACAC,QAAS,CACLqM,gBACAvS,SAAU,CAAE+R,KAAM,IAClBm4D,cAAe,UAG3B,CAsBO,SAAS,GAA0B33D,EAAeb,EAAezL,GACpE,MAAO,CACHjJ,KAAM,2DACNiJ,gBACAC,QAAS,CACLqM,gBACAb,cAAeA,GAG3B,CAiBO,SAAS4+E,GAA6B/wF,EAAS0yD,GAAc,EAAOhsD,GACvE,MAAO,CACHjJ,KAAM,+CACNiJ,gBACAC,QAAS,CACL3G,UACA0yD,eAGZ,CAcO,SAASs+B,GAA8Bh+E,EAAehB,GACzD,MAAO,CACHvU,KAAM,gEACNkJ,QAAS,CACLqM,gBACAhB,eAGZ,CAeO,SAASi/E,GAAwBj+E,EAAe1R,EAAOoF,GAC1D,MAAO,CACHjJ,KAAM,yDACNiJ,gBACAC,QAAS,CACLqM,gBACA1R,SAGZ,CAcO,SAAS4vF,GAAgCl+E,EAAeZ,GAC3D,MAAO,CACH3U,KAAM,kEACNkJ,QAAS,CACLqM,gBACAZ,iBAGZ,CCxWO,SAAS++E,GAAiB31F,EAAOkwE,EAAeJ,EAAcK,EAA8BjlE,GAC/F,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACLnL,QACAkwE,gBACAJ,eACAK,gCAGZ,CAYO,SAASylB,GAAkBx6E,EAAcyB,EAAS3R,GACrD,MAAO,CACHjJ,KAAM,yCACNiJ,gBACAC,QAAS,CACLiQ,eACAyB,WAGZ,CAgBO,SAASg5E,GAAoB71F,EAAO6N,EAAiB3C,GACxD,MAAO,CACHjJ,KAAM,2CACNiJ,gBACAC,QAAS,CACLnL,QACA6N,mBAGZ,CAeO,SAASioF,GAA0B91F,EAAO8I,EAAQ4nE,EAAOxlE,GAC5D,MAAO,CACHjJ,KAAM,kDACNiJ,gBACAC,QAAS,CACLnL,QACA8I,SACA4nE,SAGZ,CAqBO,SAASqlB,GAAe36E,EAAchN,EAAWhM,EAAM+tE,EAA8BjlE,GACxF,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACAvM,MAAO,CAACO,GACR+tE,gCAGZ,CAiBO,SAAS,GAAmB/0D,EAAchN,EAAWhM,EAAMyL,EAAiBsiE,EAA8BjlE,GAC7G,MAAO,CACHjJ,KAAM,yCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACAhM,OACA+tE,+BACAtiE,mBAGZ,CAiBO,SAAS,GAAgBuN,EAAchN,EAAW+O,EAAgBC,EAAalS,GAClF,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACA+O,iBACAC,cACA60D,8BAA8B,GAG1C,CAiBO,SAAS+jB,GAA+C56E,EAAchN,EAAW+O,EAAgBC,EAAalS,GACjH,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACA+O,iBACAC,cACA60D,8BAA8B,GAG1C,CAgBO,SAASgkB,GAA4B76E,EAAchN,EAAW+O,EAAgBjS,GACjF,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACA+O,iBACA80D,8BAA8B,GAG1C,CAgBO,SAASikB,GAA2D96E,EAAchN,EAAW+O,EAAgBjS,GAChH,MAAO,CACHjJ,KAAM,qDACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACA+O,iBACA80D,8BAA8B,GAG1C,CAmBO,SAAS,GAAkB72D,EAAchN,EAAWP,EAAiB3C,GACxE,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACAP,kBACAgwD,OAAO,GAGnB,CAkBO,SAASs4B,GAAuB/6E,EAAchN,EAAWP,EAAiB3C,GAC7E,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACAP,kBACAgwD,OAAO,GAGnB,CAgBO,SAASu4B,GAA6B56E,EAAW3N,EAAiB3C,GACrE,MAAO,CACHjJ,KAAM,sDACNiJ,gBACAC,QAAS,CACLqQ,YACA3N,kBACAgwD,OAAO,GAGnB,CAiBO,SAASw4B,GAAkC76E,EAAW3N,EAAiB3C,GAC1E,MAAO,CACHjJ,KAAM,sDACNiJ,gBACAC,QAAS,CACLqQ,YACA3N,kBACAgwD,OAAO,GAGnB,CAiBO,SAASy4B,GAAkB1jB,EAAmB1nE,GACjD,MAAO,CACHjJ,KAAM,iCACNiJ,gBACAC,QAAS,CACLynE,qBAGZ,CAmBO,SAAS2jB,GAAuBrrF,GACnC,MAAO,CACHjJ,KAAM,iCACNiJ,gBACAC,QAAS,CAAC,EAElB,CAYO,SAASqrF,GAAap7E,EAAcgF,EAAa1B,EAAQxT,GAC5D,MAAO,CACHjJ,KAAM,0CACNiJ,gBACAC,QAAS,CACLiQ,eACAgF,cACA1B,UAGZ,CAYO,SAAS+3E,GAAYr7E,EAAchN,EAAWqQ,EAAOvT,GACxD,MAAO,CACHjJ,KAAM,yCACNiJ,gBACAC,QAAS,CACLiQ,eACAhN,YACAqQ,SAGZ,CCzdO,SAAS,GAAYya,EAAOhuB,GAC/B,MAAO,CACHjJ,KAAM,4BACNiJ,gBACAC,QAAS,CACL+tB,SAGZ,CAUO,SAAS,GAAYA,EAAOhuB,GAC/B,MAAO,CACHjJ,KAAM,4BACNiJ,gBACAC,QAAS,CACL+tB,SAGZ,CAUO,SAAS,GAAasI,EAAMt2B,GAC/B,MAAO,CACHjJ,KAAM,6BACNiJ,gBACAC,QAAS,CACLq2B,QAGZ,CCxCO,SAAS,GAAqB4kC,EAAgBvgC,EAAe36B,GAChE,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLi7D,iBACAvgC,iBAGZ,CAWO,SAAS,GAAmBugC,EAAgBrqB,EAAkB7wC,GACjE,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACLi7D,iBACArqB,oBAGZ,CCrBO,SAASjgC,GAAMye,EAAYC,EAActvB,GAC5C,MAAO,CACHjJ,KAAM,qBACNiJ,gBACAC,QAAS,CACLovB,aACAC,gBAGZ,CAgBO,SAASk8D,GAAUn4E,EAAS4c,EAAiBZ,EAAYrvB,GAC5D,MAAO,CACHjJ,KAAM,gCACNiJ,gBACAC,QAAS,CACLoT,UACA4c,kBACAZ,cAGZ,CAeO,SAASo8D,GAAex7D,EAAiBZ,EAAYrvB,GACxD,MAAO,CACHjJ,KAAM,sCACNiJ,gBACAC,QAAS,CACLgwB,kBACAZ,cAGZ,CAYO,SAASq8D,GAAiBz7D,EAAiBZ,EAAYrvB,GAC1D,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACLgwB,kBACAZ,cAGZ,CAgBO,SAASs8D,GAAiB17D,EAAiBZ,EAAYrvB,GAC1D,MAAO,CACHjJ,KAAM,yCACNiJ,gBACAC,QAAS,CACLgwB,kBACAZ,cAGZ,CAeO,SAASu8D,GAAoB37D,EAAiBZ,EAAYrvB,GAC7D,MAAO,CACHjJ,KAAM,4CACNiJ,gBACAC,QAAS,CACLgwB,kBACAZ,cAGZ,CAcO,SAASw8D,GAAuB57D,EAAiBZ,EAAYrvB,GAChE,MAAO,CACHjJ,KAAM,+CACNiJ,gBACAC,QAAS,CACLgwB,kBACAZ,cAGZ,CAUO,SAASy8D,GAAqB5rB,EAAgBlgE,GACjD,MAAO,CACHjJ,KAAM,4CACNiJ,gBACAC,QAAS,CACLigE,kBAGZ,CClLO,SAAS6rB,GAAsBn3F,EAAKgJ,EAAQoC,GAC/C,MAAO,CACHjJ,KAAM,wCACNiJ,gBACAC,QAAS,CACLrL,MACAgJ,UAGZ,CAYO,SAASouF,GAA2Bp3F,EAAK+d,EAAa3S,GACzD,MAAO,CACHjJ,KAAM,6CACNiJ,gBACAC,QAAS,CACLrL,MACA+d,eAGZ,CAiBO,SAASs5E,GAA6Br3F,EAAKpD,EAAQwO,GACtD,MAAO,CACHjJ,KAAM,+CACNiJ,gBACAC,QAAS,CACLrL,MACApD,UAGZ,CAaO,SAAS06F,GAAuBt3F,EAAKqf,EAAYrW,EAAQoC,GAC5D,MAAO,CACHjJ,KAAM,yCACNiJ,gBACAC,QAAS,CACLrL,MACAqf,aACArW,UAGZ,CAaO,SAASuuF,GAA+Bv3F,EAAKrB,EAAUyM,GAC1D,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAWrkE,OAAOiI,OAAO,CAAEjC,KAAM,WAAaxD,IAG1D,CAcO,SAAS64F,GAA0Bx3F,EAAK0/D,EAAat0D,GACxD,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,mBACNu9D,gBAIhB,CAaO,SAAS+3B,GAA2Bz3F,EAAKoL,GAC5C,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,sBAItB,CAcO,SAASu1F,GAA+B13F,EAAK8zC,EAAc1oC,GAC9D,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,0BACNqa,gBAAiBs3B,QAAmDA,EAAe,KAInG,CAmBO,SAAS6jD,GAAwB33F,EAAKihE,EAAuB71D,GAEhE,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,wBACNqa,iBARY,QAASykD,GAAyB,CAACA,GAAyBA,IAYxF,CAgBO,SAAS22B,GAA0B53F,EAAKihE,EAAuB71D,GAElE,MAAO,CACHjJ,KAAM,iDACNiJ,gBACAC,QAAS,CACLrL,MACAwgE,UAAW,CACPr+D,KAAM,0BACNqa,iBARY,QAASykD,GAAyB,CAACA,GAAyBA,IAYxF,CAcO,SAAS42B,GAA0B73F,EAAKwzE,EAAYpoE,GACvD,MAAO,CACHjJ,KAAM,4CACNiJ,gBACAC,QAAS,CACLrL,MACAwzE,cAGZ,CAUO,SAASskB,GAAiB93F,EAAKoL,GAClC,MAAO,CACHjJ,KAAM,kCACNiJ,gBACAC,QAAS,CACLrL,OAGZ,CAYO,SAAS+3F,GAAqB/3F,EAAK8zE,EAAoBD,EAA8BzoE,GACxF,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACLrL,MACA6zE,+BACAC,sBAGZ,CAUO,SAASkkB,GAAwBh4F,EAAKoL,GACzC,MAAO,CACHjJ,KAAM,uCACNiJ,gBACAC,QAAS,CACLrL,OAGZ,CCjUO,SAAS2rE,GAAgB3rE,EAAKuR,EAAuBnG,GACxD,MAAO,CACHjJ,KAAM,iCACNiJ,gBACAC,QAAS,CACLrL,MACAuR,yBAGZ,CCRO,SAAS0mF,GAA0Bv2D,EAAMt2B,GAC5C,MAAO,CACHjJ,KAAM,uCACNiJ,gBACAC,QAAS,CACLq2B,QAGZ,CCVO,SAASw2D,GAAsBxhF,EAAatL,GAC/C,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACLqL,eAGZ,CCPO,SAASyhF,GAAuBzhF,EAAa7P,EAAOuE,GACvD,MAAO,CACHjJ,KAAM,oCACNiJ,gBACAC,QAAS,CACLqL,cACA7P,SAGZ,CClBA,MAAM,IAAa,KAAA+rC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMiL,UAIxDw3E,GAAyB,GAIzBC,IAA2B,KAAAzlD,gBAAe,IAAaj9B,GAAUA,EAAMiL,UCR9E,IAAa,KAAAgyB,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMwL,SAIxDm3E,GAAwB,GAIxBC,IAA0B,KAAA3lD,gBAAe,IAAaj9B,GAAUA,EAAMwL,SCP7E,IAAa,KAAAyxB,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAM3X,eAUxDw6F,IAAqB,KAAA5lD,gBAAe,IAAaj9B,KAC1D,QAAUA,EAAM3X,aAAc,yDACvB2X,EAAM3X,gBAKJy6F,IAA6B,KAAA7lD,gBAAe4lD,IAAqBx6F,GACnEA,EAAagF,MAAM01F,GAAqC,eAArBA,EAAY9/E,SClBpD,IAAa,KAAAg6B,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAM+lC,uBAcxDi9C,IAA6B,KAAA/lD,gBAAe,IAAaj9B,KAClE,QAAUA,EAAM+lC,qBAAsB,kEAC/B/lC,EAAM+lC,wBAOJk9C,IAAmC,KAAAhmD,gBAAe+lD,IAA6BhjF,IACxF,IAAI/T,EACJ,OAAuF,QAA/EA,EAAK+T,aAAqC,EAASA,EAAM2nC,wBAAqC,IAAP17C,GAAgBA,CAAU,IAOhHi3F,IAAoC,KAAAjmD,gBAAe+lD,IAA6BhjF,IACzF,IAAI/T,EACJ,OAAwF,QAAhFA,EAAK+T,aAAqC,EAASA,EAAM4nC,yBAAsC,IAAP37C,GAAgBA,CAAU,IAOjHk3F,IAA0C,KAAAlmD,gBAAe+lD,IAA6BhjF,IAC/F,IAAI/T,EACJ,OAA8F,QAAtFA,EAAK+T,aAAqC,EAASA,EAAM6nC,+BAA4C,IAAP57C,GAAgBA,CAAU,IAOvHm3F,IAAmC,KAAAnmD,gBAAe+lD,IAA6BhjF,IACxF,IAAI/T,EACJ,OAAuF,QAA/EA,EAAK+T,aAAqC,EAASA,EAAM8nC,wBAAqC,IAAP77C,GAAgBA,CAAU,IAOhHo3F,IAAyC,KAAApmD,gBAAe+lD,IAA6BhjF,IAC9F,IAAI/T,EACJ,OAA6F,QAArFA,EAAK+T,aAAqC,EAASA,EAAM+nC,8BAA2C,IAAP97C,GAAgBA,CAAU,I,gBC9DnI,MAAM,IAAa,KAAAgxC,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMqG,QAMxDi9E,IAAuB,KAAArmD,gBAAe,IAAaj9B,GACrDA,EAAM21D,iBCMjB,SAAS4tB,GAA4Bl9E,GACjC,IAAIsf,EACJ,IAAI,SAAmBtf,EAAMsf,QACzBA,EAAStf,EAAMsf,OAAOE,YAErB,MAAI,SAAqBxf,EAAMsf,QAIhC,MAAM,IAAI,MAAgB,yBAH1BA,EAAStf,EAAMsf,OAAOG,SAI1B,CAEA,OAAO,KAAQ,EACX,QAAaH,IAAW,2BAAsCA,EAAOnlB,kBACrE,QAAgBmlB,IAAW,sBAAiCA,EAAOv7B,aACnE,QAASu7B,IAAW,eAA0BA,EAAO54B,MAE7D,CACA,SAASy2F,GAAsCC,EAA0BC,EAAoCC,GAGzG,OAFyCF,EAAyBt2F,QAAQo9D,IAAc,EAAAt4D,EAAA,IAAes4D,EAAUzkC,UAAUU,gBAAgB6yB,OAAOhvD,OAC9Iq5F,IACoChxD,SAASrsB,GACXq9E,GAAmC,EAAAzxF,EAAA,IAAeoU,EAAMyf,UAAUU,gBAAgB6yB,OAAOhvD,MAC1FxE,KAAK+9F,IAOlC,MAAMC,EAAkCF,EAAwB91F,IAAI+1F,GAC9DE,EAA4BD,EAC5B,CACEn9C,OAAQm9C,EAAgC5yF,mBAAmB5G,IAC3DgG,MAAOwzF,EAAgC/9D,UAAUz1B,OAEnD,CACEq2C,OAAQk9C,GAEhB,MAAO,CACHl+D,gBAAiBl/B,OAAOiI,OAAO,CAAEjC,KAAM,YAAam5B,QAAQ,QAAWtf,EAAMyf,UAAUU,gBAAgBhmB,kBAAoBsjF,GAC3HC,WAAY,CACR,2BAAsC19E,EAAMyf,UAAUU,gBAAgBhmB,kBAE7E,KAGb,CACA,SAASwjF,GAAuCP,EAA0BQ,GAItE,OAHyCR,EAAyBt2F,QAAQo9D,GAC/D05B,EAA8BrqE,MAAMslB,IAAS,QAAgBA,EAAKpZ,UAAUz7B,IAAKkgE,EAAUzkC,UAAUU,gBAAgB6yB,OAAOhvD,SAE/FxE,KAAKq+F,IACzC,MAAMC,EAA2BF,EAA8B52F,MAAM6xC,IAAS,QAAgBA,EAAKpZ,UAAUz7B,IAAK65F,EAAgBp+D,UAAUU,gBAAgB6yB,OAAOhvD,OAanK,MAAO,CACHq7B,gBAboB,CACpBl5B,KAAM,sBACN4xE,WAAY,aACZz4C,OAAQ,CACJn5B,KAAM,qBACNs5B,WAAW,QAAWo+D,EAAgBp+D,UAAUU,gBAAgBhmB,kBAEpEkmC,OAAQ,CACJ3lC,YAAamjF,EAAgBp+D,UAAUU,gBAAgBn8B,IACvDuvD,qBAAsBuqC,EAAyBr+D,UAAUia,uBAK7DgkD,WAAY,CAER,sBAAiCG,EAAgBp+D,UAAUU,gBAAgBp8B,YAC3E,eAA0B85F,EAAgBp+D,UAAUU,gBAAgBz5B,MAE3E,GAET,CAeO,MAAMq3F,GAAsCh8C,IAAwB/9C,IAAQ,KAAA4yC,gBAAekd,GAA8B9vD,GAAM+0C,GAA0Ce,GAA+BqX,IAA0B,CAAC57C,EAAuB8nF,EAAoCC,EAAyBU,KAC1T,IAAIp4F,EAAIswB,EACR,OAAI8nE,EAEOb,GADyN,QAA9LjnE,EAA0I,QAApItwB,EAAK2P,aAAqE,EAASA,EAAsBA,6BAA0C,IAAP3P,OAAgB,EAASA,EAAGxD,kBAA+B,IAAP8zB,EAAgBA,EAAK,GACtLmnE,EAAoCC,GAExG,EAAE,MAKAW,GAAuCl8C,IAAwB/9C,IAAQ,KAAA4yC,gBAAekd,GAA8B9vD,GAAMy1C,GAAqCiV,IAAmC,CAACn5C,EAAuB2oF,EAAoBC,KACvP,IAAIv4F,EAAIswB,EACR,OAAIioE,EAEOR,GADyN,QAA9LznE,EAA0I,QAApItwB,EAAK2P,aAAqE,EAASA,EAAsBA,6BAA0C,IAAP3P,OAAgB,EAASA,EAAGxD,kBAA+B,IAAP8zB,EAAgBA,EAAK,GACrLgoE,GAErE,EAAE,MAKAE,GAAoCr8C,IAAwB/9C,IAAQ,KAAA4yC,gBAAe4P,GAAmBxiD,GAAMupD,GAA4BmB,GAAmCE,GAAoCE,GAAwCR,GAA0Cc,GAA8BhC,IAAkB,CAACttC,EAAS,GAAI6Y,EAAsBg2B,EAA6BE,EAA8BE,EAAkCR,EAAoCc,EAAwB72B,KACvhB,GAAIG,EACA,MAAO,GAEX,MAAM0lE,EAAiB,IAAIv+E,GAAQhZ,QAAQkZ,IACvC,MAAMs+E,EAAYt+E,EAAM7Z,KACxB,OAAQm4F,GACJ,IAAK,sBACD,OAAO3vC,EAEX,IAAK,mBACD,OAAOE,EAEX,IAAK,mBACD,OAAON,EAEX,IAAK,iBACD,OAAOQ,EAEX,IAAK,yBACD,QAASv2B,GAAc62B,GAE3B,QAAS,CACL,MAAMkvC,EAAgBD,EACtB,MAAM,IAAI,MAAgB,gCAAgCC,IAC9D,EACJ,IAEJ,OAAyCF,EA/Dd7+F,KAAKwgB,IACrB,CACHqf,gBAAiBrf,EACjB09E,WAAYR,GAA4Bl9E,MA4DQ,MAK/Cw+E,GAAyCz8C,IAAwB/9C,IAAQ,KAAA4yC,gBAAewnD,GAAkCp6F,GAAM61C,GAAiCma,GAA+BtC,IAAmB,CAAC5xC,EAAS,GAAIi1C,EAAiB2B,EAAyB5B,IAC7Qh1C,EAAOhZ,QAAQkZ,IAClB,OAAQA,EAAMqf,gBAAgBl5B,MAC1B,IAAK,sBACD,OAAO4uD,EAAgBvtD,IAAIwY,EAAMqf,gBAAgBghB,OAAOkT,sBAE5D,IAAK,mBAWL,IAAK,yBAGL,IAAK,YACD,OAAO,EAZX,IAAK,mBAED,OAASvzC,EAAMqf,gBAAgBghB,QAC3BqW,EAAwBlvD,IAAIwY,EAAMqf,gBAAgBghB,QAE1D,IAAK,iBACD,OAAOyU,EAAYttD,IAAIwY,EAAMqf,gBAAgBghB,QAQjD,QAAS,CACL,MAAMk+C,EAAgBv+E,EAAMqf,gBAC5B,MAAM,IAAI,MAAgB,gCAAgCk/D,IAC9D,EACJ,QAGFE,GAAqC18C,IAAwB/9C,IAAQ,KAAA4yC,gBAAeqnD,GAAqCj6F,IAAO06F,GAC3H,KAAQA,GAAmB1+E,GAAUA,EAAM09E,iBAEhDiB,GAAoC58C,IAAwB/9C,IAAQ,KAAA4yC,gBAAemnD,GAAoC/5F,IAAO46F,GACzH,KAAQA,GAAkB5+E,GAAUA,EAAM09E,iBAE/CmB,GAAkC98C,IAAwB/9C,IAAQ,KAAA4yC,gBAAe4nD,GAAuCx6F,IAAM,CAAC27B,EAAmB,KAC7I,KAAQA,GAAmB3f,GAAUA,EAAM09E,iBAKzCoB,GAA+C/8C,IAAwB/9C,IAAQ,KAAA4yC,gBAAe4nD,GAAuCx6F,GAAM+5F,GAAoC/5F,GAAMi6F,GAAqCj6F,IAAM,CAAC27B,EAAkBo/D,EAAyBC,IAC9Q,IAAIr/D,KAAqBo/D,KAA4BC,OAKnDC,GAAkCl9C,IAAwB/9C,IAAQ,KAAA4yC,gBAAe2W,GAA4B0vC,GAAsB4B,GAAgC76F,GAAM26F,GAAkC36F,GAAMy6F,GAAmCz6F,IAAM,CAAC20B,EAAsB22C,EAAgB3vC,EAAkBo/D,EAAyBC,KACrV,MAAME,EAAyB,IAAI5vB,GAInC,OAHK32C,GACDumE,EAAuBl6F,QAAQ26B,KAAqBo/D,KAA4BC,GAE7EE,CAAsB,MAQpBC,GAA8Cp9C,IAAwBxsC,IAA0B,KAAAqhC,gBAAe6C,GAAqCV,GAA0Ce,GAA+BqX,IAA0B,CAAC+sC,EAAoBb,EAAoCC,EAAyBU,KAClV,IAAIp4F,EACJ,MAAMw3F,EAAqJ,QAAzHx3F,EAAK2P,aAAqE,EAASA,EAAsBnT,kBAA+B,IAAPwD,EAAgBA,EAAK,GAKxL,MAAO,IAJiBo4F,EAClBb,GAAsCC,EAA0BC,EAAoCC,GACpG,MACmBK,GAAuCP,EAA0Bc,GAC1C,MAKvCkB,GAA8Cr9C,IAAwBxsC,IAA0B,KAAAqhC,gBAAeuoD,GAA4C5pF,IAAyB8pF,GACtL,KAAQA,GAAqBC,GAAkBA,EAAc5B,iBCtOlE,IAAa,KAAA9mD,iBAAgBj9B,GAAUA,IAAQA,GAAUA,EAAMqnC,mBAOxDu+C,GANY34D,GAA8B2qB,aAAa,IAMbC,UAM1CguC,IAA4B,KAAA5oD,gBAAe2oD,IAAyB78F,GACtE4F,EAA4B5F,KCRhCW,eAAeo8F,GAAmB3V,EAAU15E,GAC/C,MAAM,QAAE+uD,EAAO,SAAEE,GzDgBd,SAAoCjvD,GACvC,MAAMsvF,EAA+B,CAAC,EAMtC,MAAO,CACHvgC,QANY,IAAIn2D,SAAQ,CAAC5I,EAASg/D,KAClCsgC,EAA6B1gC,UAAY5+D,EACzCs/F,EAA6B5gC,QAAUM,CAAM,IAK7CC,SAHa0d,GAAgB3sE,EAASsvF,GAK9C,CyD3BkCC,CAA2BvvF,GAEzD,OADA05E,EAASzqB,GACFF,CACX,CCOO,MAAMygC,GACTt/F,YAAY8vC,EAAU05C,GAIlBrpF,KAAKo/F,mBAAqB,MACtB,QAAUp/F,KAAK4pF,kBAAmB,+DAC3B5pF,KAAK4pF,mBAMhB5pF,KAAKq/F,YAAezV,IAChB5pF,KAAK4pF,kBAAoBA,CAAiB,EAK9C5pF,KAAKs/F,qBAAuB,MACxB,QAAUt/F,KAAKqpF,SAAU,sDAClBrpF,KAAKqpF,UAMhBrpF,KAAKu/F,YAAelW,IAChBrpF,KAAKqpF,SAAWA,CAAQ,EAK5BrpF,KAAKw/F,oCAAsC,MAC9Bx/F,KAAK4pF,qBAAuB5pF,KAAKqpF,SAU9CrpF,KAAKy/F,qBAAuB,CAACvmF,EAAOmwE,KAEhCrpF,KAAKq/F,aADoBK,GAAWA,EAAOxmF,KAE3ClZ,KAAKu/F,YAAYlW,EAAS,EAE9BrpF,KAAK4pF,kBAAoBj6C,EACzB3vC,KAAKqpF,SAAWA,CACpB,EC3BJ,MAAMsW,GACFj2D,iCAAiC1kC,GAC7B,MAAMk3B,EAAoC,iBAAdl3B,GAAyB,QAAMA,GAAaA,EACxE,OAAO,QAAgBk3B,EAC3B,CAMAwN,gCAAgC1kC,GAC5B,MAAM46F,EAAyBD,GAAiCE,0BAA0B76F,GACpF86F,EAAW9/F,KAAK+/F,UAAUh5F,IAAI64F,GAEpC,OADA,QAAUE,EAAU,uCAAuC96F,KACpD86F,CACX,CAMAp2D,sCAAsC1kC,GAClC,IAAIG,EACJ,MAAMy6F,EAAyBD,GAAiCE,0BAA0B76F,GACpF4kF,EAA0E,QAArDzkF,EAAKnF,KAAK+/F,UAAUh5F,IAAI64F,UAA4C,IAAPz6F,OAAgB,EAASA,EAAGi6F,qBAEpH,OADA,QAAUxV,EAAmB,uCAAuC5kF,KAC7D4kF,CACX,CAMAlgD,wCAAwC1kC,GACpC,IAAIG,EACJ,MAAMy6F,EAAyBD,GAAiCE,0BAA0B76F,GACpFg7F,EAA0E,QAArD76F,EAAKnF,KAAK+/F,UAAUh5F,IAAI64F,UAA4C,IAAPz6F,OAAgB,EAASA,EAAGm6F,uBAEpH,OADA,QAAUU,EAAmB,uCAAuCh7F,KAC7Dg7F,CACX,CAMAt2D,sCAAsC1kC,GAClC,MAAM46F,EAAyBD,GAAiCE,0BAA0B76F,GAC1F,MAAO,CAACkU,EAAOmwE,KAEXsW,GAAiCM,wBAAwBL,GADhCF,GAAWA,EAAOxmF,IACuDmwE,EAAS,CAEnH,CACA3/C,+BAA+Bk2D,EAAwBjwD,EAAU05C,GAC7DsW,GAAiCI,UAAUzoF,IAAIsoF,EAAwB,IAAIT,GAAuBxvD,EAAU05C,GAChH,CAMA3/C,iCAAiC1kC,GAC7B,MAAM46F,EAAyBD,GAAiCE,0BAA0B76F,GAC1F26F,GAAiCI,UAAUG,OAAON,EACtD,CAIAl2D,2BACIi2D,GAAiCI,UAAUI,OAC/C,CAMAz2D,yCAAyC1kC,GACrC,MAAM46F,EAAyB5/F,KAAK6/F,0BAA0B76F,GACxD86F,EAAWH,GAAiCI,UAAUh5F,IAAI64F,GAChE,SAAUE,aAA2C,EAASA,EAASN,sCAC3E,EAEJG,GAAiCI,UAAY,IAAIjpF,ICvHjD,MAAMspF,IAAY,SAAgB,QAAM,mDAWjC,MAAMC,GAIT32D,4BACI,OAAOi2D,GAAiCW,yBAAyBF,IAAWhB,oBAChF,CAIA11D,8BACI,OAAOi2D,GAAiCW,yBAAyBF,IAAWd,sBAChF,CAIA51D,4BACI,OAAOi2D,GAAiCY,+BAA+BH,GAC3E,CAIA12D,uBACIi2D,GAAiCa,0BAA0BJ,GAC/D,CAIA12D,+BACI,OAAOi2D,GAAiCc,kCAAkCL,GAC9E,ECzCG,SAASM,GAAgBlX,GAC5B,MAAO,CACHK,KAAM,KAAM,EACZL,UAER,CAOO,SAASmX,GAAyBnX,GACrC,MAAO,CACHK,KAAMz7E,EACNo7E,UAER,CAQO,SAASoX,GAAuBl7F,EAAM8jF,GACzC,MAAO,CACHK,KAAOvqF,GAAMA,EAAEoG,OAASA,EACxB8jF,UAER,CAQO,SAASqX,GAA2Bn7F,EAAM8jF,GAC7C,MAAO,CACHK,KAAOvqF,GAAMmQ,GAA0BnQ,IAAMA,EAAEsP,QAAQe,QAAQjK,OAASA,EACxE8jF,UAER,CAQO,SAASsX,GAA0Bp7F,EAAM8jF,GAC5C,MAAO,CACHK,KAAOvqF,GAAMwQ,GAAyBxQ,IAAMA,EAAEsP,QAAQe,QAAQjK,OAASA,EACvE8jF,UAER,CC9CO,MAAMuX,GAAkC7kE,IAAiB,CAC5D2tD,KAAMl0E,GAA2B,kDAAmDrW,IAAOA,EAAEsP,QAAQgwB,gBAAgBghB,SACjH,QAAgBtgD,EAAEsP,QAAQgwB,gBAAgBghB,OAAQ1jB,KACtDstD,QAAS,CAAC1zE,EAAOuzE,KACbA,EAAS2P,GAA6BljF,EAAMlH,QAAQ3G,SAAS,ICd9D,MAAM+4F,GACTnhG,YAAY6O,EAAKvO,GACbH,KAAKihG,iBAAmB,CAAC,EACzBjhG,KAAKkhG,gBAAkB,GACvBlhG,KAAKmhG,eAAiB,GACtBnhG,KAAKohG,2BAA8BC,IAC/B,MAAMC,EAAiBthG,KAAKihG,iBAAiBI,GAC7C,GAAIC,EACA,OAAOA,EAEX,MAAMC,EAAgB,CAClBC,MAAO,EACP7hG,QAAS,IACTg/D,OAAQ,KAEND,EAAU,IAAIn2D,SAAQ,CAAC5I,EAASg/D,KAClC4iC,EAAc5hG,QAAUA,EACxB4hG,EAAc5iC,OAASA,CAAM,IAE3B8iC,EAAY/hG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG45F,GAAgB,CAAE7iC,YAEpE,OADA1+D,KAAKihG,iBAAiBI,GAAcI,EAC7BA,CAAS,EAEpBzhG,KAAK0hG,iBAAoBvoF,IACrBnZ,KAAKkhG,gBAAgB38F,KAAK4U,GAC1B,MAAMwoF,EAAkB3hG,KAAKohG,2BAA2BjoF,EAAOzT,MAC/Di8F,EAAgBH,OAAS,EACzBG,EAAgBhiG,QAAQwZ,EAAO,EAEnCnZ,KAAK4hG,aAAgBC,IACjB7hG,KAAKmhG,eAAe58F,KAAKs9F,EAAI,EAEjC7hG,KAAK8hG,4BAA8B,IACT9hG,KAAKohG,2BAA2B,+BACjC1iC,QAAQ9zD,MAAMi3F,IAE/B,MADA36F,QAAQwG,MAAM,8BAA8Bm0F,EAAIjzF,QAAQiB,YAAYgyF,EAAIjzF,QAAQgB,WAC1EiyF,EAAIjzF,QAAQlB,KAAK,IAG/B1N,KAAK+hG,2BAA6B,IACN/hG,KAAKohG,2BAA2B,iCACjC1iC,QAAQ9zD,MAAMi3F,IAGjC,MAFA36F,QAAQwG,MAAM,iMAERm0F,CAAG,IAajB7hG,KAAKgiG,aAAe1a,GAAqB,CACrCL,iBAAkBv4E,EAClBs6E,qBAXsB,IAAO5/E,GAAU+P,IACnCA,EAAOzT,KAAK2I,WAAW,aAIvBrO,KAAK0hG,iBAAiBvoF,GAEnB/P,EAAK+P,IAKZ8vE,SAAU,CACNc,qBAAsB,CAClB,CACIF,KAAM,KAAM,EACZL,QAASxpF,KAAK4hG,gBAI1Bpa,cAAernF,aAAuC,EAASA,EAAOqnF,cACtER,mBAAoB7mF,aAAuC,EAASA,EAAO6mF,oBAAsB,GACjGmB,eAAgBhoF,aAAuC,EAASA,EAAOyrF,iBACvEtzD,kBAAmB,QAE3B,CACA+wD,SAASlwE,GAOLnZ,KAAKihG,iBAAmB,CAAC,EACzBjhG,KAAKgiG,aAAa1Z,MAAMe,SAASlwE,EACrC,CAQA6lF,mBAAmB7lF,EAAQkoF,EAAYtqF,EAAU,KAE7C,OADA/W,KAAKqpF,SAASlwE,GACPnZ,KAAKiiG,QAAQZ,EAAYtqF,EACpC,CAMA5N,MAAMgQ,GACF,MAAM,SAAEylD,EAAQ,QAAEF,GAAYF,GAAyBrlD,GAEvD,OADAnZ,KAAKgiG,aAAa1Z,MAAMe,SAASzqB,GAC1BF,CACX,CAOAujC,QAAQZ,EAAYtqF,EAAU,KAC1B,MAAMmrF,EAAqC,gCAAfb,EAC5B,OAAO94F,QAAQ45F,KAAK,CAChBniG,KAAKohG,2BAA2BC,GAAY3iC,WACxCwjC,EAAsB,CAACliG,KAAK8hG,+BAAiC,GACjE9hG,KAAK+hG,6BACL,IAAIx5F,SAAQ,CAACjC,EAAGq4D,KACZ+wB,YAAW,KACP/wB,EAAO,IAAIp/D,MAAM,oBAAoB8hG,sBAA+BtqF,OAAa,GAClFA,EAAQ,KAGvB,CAIA2oF,OAAO0C,GACH,OAAOA,EAAgBpiG,KAAKkZ,QAChC,CAIAA,QACI,OAAOlZ,KAAKgiG,aAAa1Z,MAAMc,UACnC,ECpIG,SAASiZ,GAAgBC,GAC5B,OAAO,SAAyBxhG,GAC5B,IAAIqE,EACJ,MAAMwgC,EAAa+kD,GAAqBrjC,IAClCk7C,EAA8C,QAAjCp9F,EAAKm9F,EAAW38D,UAAgC,IAAPxgC,EAAgBA,EAAKm9F,EAAiB,KAClG,OAAO,gBAAoBC,EAAW7iG,OAAOiI,OAAO,CAAC,EAAG7G,GAC5D,CACJ,C,4BCNO,MAAM0hG,GACT3iG,YAAY4iG,EAAgBC,MACxB1iG,KAAKyiG,cARgB,KASrBziG,KAAK2iG,SAAW,IAAI7rF,IACpB9W,KAAKyiG,cAAgBA,CACzB,CACA/4D,mBAAmB+4D,EAAgBC,MAC/B,OAAO,IAAIF,GAAkBC,EACjC,CAMAG,WAAWv9C,GACP,MAAMw9C,EAAW7iG,KAAK8iG,eACtB9iG,KAAK2iG,SAASrrF,IAAI+tC,EAAMw9C,EAvBX,EAwBjB,CAKAC,eACI,IAAID,EAAW,EAIf,OAHA7iG,KAAK2iG,SAASj8F,SAASqE,IACnB83F,EAAW95F,KAAKuZ,IAAIugF,EAAU93F,EAAM,IAEjC83F,GAAY7iG,KAAKyiG,aAC5B,CAUAM,UAAU19C,GACN,OAAOrlD,KAAK2iG,SAAS57F,IAAIs+C,IAASrlD,KAAKyiG,aAC3C,CAMAO,cAAc39C,GACVrlD,KAAK2iG,SAASzC,OAAO76C,EACzB,E,4BCxDJ,MAAM49C,IAAsB,IAAAn2F,eAAc,CACtCo2F,QAAQ,EACRC,aAAc,CAAC,EACfC,YAAa,IACbC,WAAY,MAKHC,GAAyB,KAC3B,IAAAn2F,YAAW81F,IAKTM,GAA8B,EAAGl2F,eAC1C,MAAO61F,EAAQM,IAAa,IAAA1Y,WAAS,IAC9BqY,EAAcM,IAAmB,IAAA3Y,UAAS,CAAC,GAC5CuY,GAAa,IAAAnX,cAAY,CAAC/rF,EAAS,CAAC,KACtCqjG,GAAU,GACVC,EAAgBtjG,EAAO,GACxB,IACGijG,GAAc,IAAAlX,cAAY,KAC5BsX,GAAU,EAAM,GACjB,IACGE,GAAe,IAAAp2F,UAAQ,KAAM,CAAG41F,SAAQC,eAAcE,aAAYD,iBAAgB,CAACF,EAAQC,EAAcE,EAAYD,IAC3H,OAAO,gBAAoBH,GAAoB11F,SAAU,CAAExC,MAAO24F,GAAgBr2F,EAAS,ECvBzFs2F,IAAiC,IAAA72F,eAAc,CAAC,GACtD62F,GAA+B12F,YAAc,iCAItC,MAAM22F,GAAqCC,IAC9C,MAAMC,GAAuB,IAAA32F,YAAWw2F,IACxC,OAAOjkG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGm8F,GAAuBD,EAA4B,EAKvF,SAASE,GAAgCjjG,GAC5C,MAAM,SAAEuM,GAAavM,EAAOwhG,GAAa,SAAOxhG,EAAO,CAAC,aACxD,OAAQ,gBAAoB6iG,GAA+Bp2F,SAAU,CAAExC,MAAOu3F,GAAcj1F,EAChG,CCjBA,MAAM22F,GAA8BnjG,GAAkB,KAClD,MAAM,IAAI,MAAmB,cAAcA,mDAA+D,EAKxGojG,IAA6B,IAAAn3F,eAAc,CAC7Co3F,eAAgBA,GAAA,EAChBC,iBAAkB,KAClBC,gBAAiBJ,GAA2B,mBAC5CK,yBAA0BL,GAA2B,oBACrDM,6BAA8BN,GAA2B,wBACzDO,mCAAoCP,GAA2B,8BAC/DQ,6BAA8BR,GAA2B,wBACzDS,kCAAmCT,GAA2B,6BAC9DU,qBAAsBV,GAA2B,gBACjDW,wBAAyBX,GAA2B,mBACpDY,mBAAoBZ,GAA2B,sBAC/Ca,oBAAqBb,GAA2B,uBAChDc,eAAgBd,GAA2B,kBAC3Ce,gBAAiBf,GAA2B,mBAC5CgB,iBAAkBhB,GAA2B,oBAC7CiB,8BAA+BjB,GAA2B,iCAC1DkB,wCAAyClB,GAA2B,2CACpEmB,qBAAsBnB,GAA2B,wBACjDoB,sBAAuBpB,GAA2B,yBAClDqB,0CAA2CrB,GAA2B,6CACtEsB,qCAAsCtB,GAA2B,wCACjEuB,mBAAoBvB,GAA2B,sBAC/CwB,iBAAkBxB,GAA2B,oBAC7CyB,0BAA2B,KAC3BC,sBAAuB,KACvBC,4BAA6B,KAC7BC,iCAAkC5B,GAA2B,oCAC7D6B,oBAAqB7B,GAA2B,yBAEpDC,GAA2Bh3F,YAAc,6BAIlC,MAAM64F,GAAiCC,IAC1C,MAAMC,GAAmB,IAAA74F,YAAW82F,IAEpC,OAAOvkG,OAAOD,KAAKumG,GAAkB38F,QAAO,CAACwpC,EAAK7rC,KAC9C,IAAI7B,EAEJ,OADA0tC,EAAI7rC,GAAiI,QAAzH7B,EAAK4gG,aAAyE,EAASA,EAAwB/+F,UAAyB,IAAP7B,EAAgBA,EAAK6gG,EAAiBh/F,GAC5K6rC,CAAG,GACX,CAAC,EAAE,EAKH,SAASozD,GAA4BnlG,GACxC,MAAM,SAAEuM,GAAavM,EAAOwhG,GAAa,SAAOxhG,EAAO,CAAC,aACxD,OAAQ,gBAAoBmjG,GAA2B12F,SAAU,CAAExC,MAAOu3F,GAAcj1F,EAC5F,CCxDA,MAAM64F,IAAyB,IAAAp5F,eAAc,CACzCq5F,iBAAkB,CAAC,IAEvBD,GAAuBj5F,YAAc,yBAK9B,MAMMm5F,GAA2BtlG,IACpC,MAAM,SAAEuM,GAAavM,EAAOwhG,GAAa,SAAOxhG,EAAO,CAAC,aACxD,OAAO,gBAAoBolG,GAAuB34F,SAAU,CAAExC,MAAOu3F,GAAcj1F,EAAS,E,2BClBzF,MAAMg5F,IAAwB,EAC9B,SAASC,IAAsB,OAAEC,GAAS,IAC7C,OAAKF,GAGEE,EACD,CAAEC,gBAAiB,wBACnB,CAAEA,gBAAiB,yBAJd,CAAC,CAKhB,CCNO,SAASC,GAA4B/gG,GACxC,MAAgB,2BAATA,GAA8C,4BAATA,CAChD,CAIO,SAASghG,GAA+B7gG,GAC3C,MAAqB,oBAAdA,EAAKH,IAChB,CAIO,SAASihG,GAA0B9gG,GACtC,IAAIV,EAAIswB,EACR,YAAgF1wB,KAAnD,QAApBI,EAAKU,EAAKR,YAAyB,IAAPF,OAAgB,EAASA,EAAGiH,iBAAsGrH,KAApD,QAApB0wB,EAAK5vB,EAAKR,YAAyB,IAAPowB,OAAgB,EAASA,EAAGpT,WAC3J,CAIO,SAASukF,GAA0B/gG,GACtC,OAAO8gG,GAA0B9gG,SAA+Bd,IAAtBc,EAAKgZ,mBAAiD9Z,IAAnBc,EAAKgM,SACtF,CAIO,SAASg1F,GAAuBhhG,GACnC,MAAqB,YAAdA,EAAKH,IAChB,CAIO,SAASohG,GAAmBjhG,GAC/B,MAAqB,QAAdA,EAAKH,IAChB,CAIO,SAASqhG,GAA0ClhG,GACtD,MAAqB,gCAAdA,EAAKH,IAChB,CAIO,SAASshG,GAA8BnhG,GAC1C,MAAqB,oBAAdA,EAAKH,IAChB,CAIO,SAASuhG,GAAkCphG,GAC9C,MAAqB,wBAAdA,EAAKH,IAChB,CAIO,SAASwhG,GAA2BrhG,GACvC,MAAqB,oBAAdA,EAAKH,IAChB,C,gBC1DA,MAAMyhG,GAAoBC,IAAY,CAClCb,OAAQa,EAAQb,SAChBc,QAASD,EAAQC,UACjBC,SAAUF,EAAQG,cAClB1hG,KAAMuhG,EAAQI,YAOX,SAASC,GAAiBC,EAAoBC,EAASC,GAC1D,OAAO,EAAAC,GAAA,GAAQ,CACXC,OAAQJ,EACRK,KAAMJ,EAAQI,KACdV,QAASM,EAAQN,QACjBW,QAASb,GACTc,MAAON,EAAQM,OAChBL,EACP,CCLO,SAASM,IAA4B,UAAEC,EAAY,SAAQ,aAAEC,EAAY,YAAEC,EAAW,kBAAEC,GAAoB,EAAI,0BAAEC,IACrH,MAAMlf,EAAWoB,KACX+d,EAXV,SAA0BL,EAAWM,EAAUJ,GAC3C,MAAkB,YAAdF,EACoB,SAAbM,EAAsB,CAACJ,GAAe,CAACA,EAAc,GAE/C,SAAbI,EACO,CAACJ,EAAaA,EAAc,GAEhC,CAACA,EAAaA,EAAc,EACvC,CAG4BK,CAAiBP,EAAWC,EAAcC,KAC3D,QAAEhB,EAAO,OAAEd,GAAUoC,GAAWlB,GAAiBa,EAAoB,CAAC,kBAAmB,+BAAiC,kBAAmB,CAChJjB,QAAUxhG,GACF6gG,GAA+B7gG,IACvB2iG,EAAgBp5E,SAASvpB,EAAK+iG,aAEnC7B,GAA0ClhG,GAErDkiG,KAAOliG,IACH,MAAMgjG,EAA8C,WAAdV,GAA2C,SAAjBC,EAA0B,EAAI,EAC9F,GAAI1B,GAA+B7gG,GAAO,CACtC,MAAMvC,EAAauC,EAAKQ,OAAOoT,gBAAgBC,gBACzC84D,EAAgB3sE,EAAK+iG,YAG3Bvf,EAAS,GAAoB/lF,EADf+kG,EAAcQ,GADOr2B,EAAgB61B,GAAe,EAAI,IAG1E,CACA,GAAItB,GAA0ClhG,IAAS0iG,EAEnD,OAAOA,EADOF,EAAcQ,EAEhC,GAEL,CAACL,EAAiBH,EAAaF,EAAWC,IACvCU,EAAWzB,GAAWd,EACtBh3C,GAAY83C,EACZ0B,EAAY,KAAG,uBAAwBX,EAAc,CACvDY,QAAuB,YAAdb,EACTc,OAAQ15C,IAEN25C,EAAa5C,GAAsB,CAAEC,WAC3C,OAAQ,gBAAoB,MAAO,CAAEwC,UAAWA,EAAWI,MAAOD,EAAY3lG,IAAKolG,GAAWG,EAAW,gBAAoB,MAAO,CAAEC,UAAW,cAAiB,KACtK,C,yEC/CA,MAcaK,GAA6B,MAAS,IAdpB,EAACrZ,EAAMsZ,EAAiB,CAAEC,cAAgBC,IAAW,MAChFF,EAAeC,cAAc,IAAIE,YAAY,iBAAkB,CAE3DC,SAAS,EACTC,OAAQ,CACJ3Z,UAEL,EAOkD4Z,CAAuBC,SAASC,KAAMC,SAAS,KCA3FC,GAAgB,KACzB,MAAMC,GATC,IAAA9d,cAAY,KACfkd,IAA4B,GAC7B,IAQH,OAAO,IAAAld,cAAY,KACf8d,GAAiB,GAClB,CAACA,GAAiB,ECdzB,SAASC,GAAiB7C,GACtB,MAAO,CACH8C,WAAY9C,EAAQ8C,aACpBrkG,KAAMuhG,EAAQI,UAEtB,CACO,SAAS2C,IAAiB,SAAEC,EAAQ,QAAEC,GAAU,EAAI,mBAAEC,GAAqB,EAAI,QAAEC,EAAO,UAAEC,GAAc5C,EAAO,IAClH,MAAO6C,EAAgBC,EAASC,IAAkB,EAAAC,GAAA,IAAQ,KAE/C,CACHllG,MAFS,KAAW0kG,GAAYA,IAAaA,GAElC1kG,KACXG,KAAMukG,EACNpC,QAASiC,GACTI,UACAQ,IAAKN,KAEV3C,GACGkD,EAAaf,KACbgB,GAAsB,IAAA7e,cAAarmF,IACrCilG,IACIN,GACAA,EAAU3kG,EACd,GACD,CAAC2kG,EAAWM,IACTE,GAAkB,IAAAj9F,SAAO,GAmB/B,OAlBA,IAAAC,YAAU,KACN,GAAIy8F,EAAeP,YACf,IAAKc,EAAgB/8F,QAAS,CAC1B,MAAMpI,EAAO,KAAWukG,GAAYA,IAAaA,EACjDY,EAAgB/8F,SAAU,EAC1B88F,EAAoBllG,EACxB,OAGAmlG,EAAgB/8F,SAAU,CAC9B,GACD,CAACw8F,EAAeP,WAAYa,EAAqBX,KACpD,IAAAp8F,YAAU,KACFs8F,GAEAK,GAAe,EAAAM,GAAA,KAAiB,CAAEC,sBAAsB,GAC5D,GACD,CAACP,EAAgBL,IACb,CAACG,EAAgBC,EAC5B,CC/BO,SAASS,GAAoD9kG,GAChE,OAAI,QAA2BA,EAAOoT,gBAAgBe,mBAC3CnU,EAEJ,CACHoT,gBAAiB/Z,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtB,EAAOoT,iBAAkB,CAAEe,kBAAmB,CACvFlT,OAAQjB,EAAOoT,gBAAgBe,kBAAkBC,QAGjE,CCrBO,SAAS2wF,IAAyB,gBAAEC,EAAe,OAAEhlG,EAAM,YAAEuiG,EAAW,SAAE0C,EAAQ,yBAAEC,EAAwB,uBAAEC,EAAsB,uBAAEC,IACzI,MAAMvjD,EAAewiC,GAAqBnjC,MACnC,WAAE2iD,GAAcQ,GAAWP,GAAiB,CAC/CC,SAAU,CACN1kG,KAAM,kBACNW,SACAuiG,eAEJyB,QAASniD,GACV,CAAC7hD,EAAQuiG,EAAa1gD,IACnBwjD,EAAqBhhB,GAAqB9zC,IAC1C+0D,EAA6BjhB,GAAqBtnC,IAClDwoD,GAAc,IAAAt+F,UAAQ,IACpBo+F,EACOrlG,EAEJ8kG,GAAoD9kG,IAC5D,CAACA,EAAQqlG,IACNG,GAAU,IAAA3f,cAAY,KACxBuf,GAAwB,GACzB,CAACA,IACEK,EAAgB5jD,IAAiBgiD,EACvC,OAAQ,gBAAoB,MAAO,CAAEnB,UAAW,8BAC5C+C,EAAiB,gBAAoB5D,GAA6B,CAAEE,aAAc,OAAQC,YAAaO,EAAaL,0BAA2BiD,EAAwBlD,kBAAmBqD,IAAiC,KAC3N,gBAAoB,MAAO,CAAE5C,UAAW,KAAW,uBAAwB,yBAA0B,CAC7F,2BAA4B7gD,EAC5B,cAAegiD,IACf3mG,IAAKmnG,GACT,gBAAoBW,EAAiB,CAAEhlG,OAAQulG,EAAaG,gBAAiBR,EAA0BS,YAAa9jD,EAAcojD,SAAUA,EAAUO,QAASA,KACnKC,EAAiB,gBAAoB5D,GAA6B,CAAEE,aAAc,OAAQC,YAAaO,EAAaL,0BAA2BiD,EAAwBlD,kBAAmBqD,IAAiC,KACnO,C,gEC5BO,SAASM,IAAwB,YAAE5D,EAAW,OAAE6D,IACnD,IAAI/mG,EAAIswB,EACR,MAAM02E,GAAQ,WACRC,EAAa1hB,GAAqBnjC,MACjC,QAAE8/C,EAAO,OAAEd,EAAM,SAAEe,GAAYqB,GAAWlB,GAAiB,CAAC,kBAAmB,+BAAgC,CAClHM,KAAM,IAAMmE,EAAO7D,IACpB,CAACA,IAEJ,IAAK+D,QADoCrnG,IAAbuiG,GAAuC,oBAAbA,EAElD,OAAO,KAEX,MAAMwB,EAAWzB,GAAWd,EACtB8F,EAAqB,KAAG,2BAA4B,8BAA+B,6BAA8B,CAAE,kCAAmCvD,GAAY,CAAE,gCAAiCvC,IACrM2C,EAAa5C,GAAsB,CAAEC,WAC3C,OAAQ,gBAAoB,MAAO,CAAEwC,UAAW,iCAAkCI,MAAOD,EAAY3lG,IAAKolG,GAAWG,EAAY,gBAAoB,MAAO,CAAEC,UAAWsD,GACrK,gBAAoB,MAAO,CAAEtD,UAAW,kCACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,4BAAiC,gBAAoBotG,GAAA,GAAoB,KACzH,gBAAoB,MAAO,CAAEvD,UAAWsD,GACpC,gBAAoB,MAAO,CAAEtD,UAAW,kCACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,wCAAyCoI,OAAQ,CACrFilG,KAAO,gBAAoBC,GAAA,kBAAsB,CAAEzD,UAAW,wBAAyB7mF,MAAO,GAAIC,OAAQ,GAAIsqF,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGm3E,UAE7S,gBAAoBC,GAAA,GAAQ,CAAEC,YAAa,CAAC,CAAEC,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,MAC7E,gBAAoB,KAAkB,CAAE9tG,GAAI,wCACxD,CC1BO,MAAM+tG,GAA4B,IAC9B,K,4SCMX,MAAMC,GAA6B,CAC/B,QAASC,GAAA,EAAgC,MACzC,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,UAAW,KACX,QAAS,MAKAC,GAAe,KAAM,CAAC,EAEnC,KAAmBF,IC1BbG,GAAU,CACZC,KAAM,CACFC,KAAM,CACFzlF,KAAM,UACND,OAAQ,YAGhBP,KAAM,CACFkmF,iBAAkB,CACdzlF,IAAK,UACLE,MAAO,SAEXwlF,cAAe,CACX1lF,IAAK,UACLE,MAAO,QACPE,KAAM,aAOLulF,GAAc,EAAGrgG,WAAU8jB,SAAS,UAC7C,MAAMw8E,GAAS,IAAAzhB,cAAa0hB,GAA0B,gBAAoB,KAAc,CAAEz8E,OAAQA,EAAQvJ,SAAUgmF,EAAsBP,QAASA,IAAWhgG,IAAY,CAAC8jB,EAAQ9jB,IACnL,OAAO,gBAAoBwgG,GAAA,EAAmC,CAAET,aAAcA,GAAaj8E,GAASw8E,OAAQA,GAAS,EC3B5GG,GAA+B,IAC/BC,GAAe,CACxBxvE,EAAG,EACHyuE,EAAG,EACH9iF,OAAQ,EACRD,IAAK,EACL+jF,KAAM,EACNC,MAAO,EACP9rF,OAAQ,EACRD,MAAO,GCPLgsF,GAAY,CACdC,gBAAiB,OACjBC,sBAAuB,GACvBC,mBAAoB,OACpBC,WAAY,KACZC,2BAA4BR,IAE1BS,IAA2B,IAAA1hG,eAAc,CAC3CqhG,gBAAiB,OACjBC,sBAAuB,GACvBC,mBAAoB,OACpBC,WAAY,KACZC,2BAA4BR,GAC5BU,YAAa,IACbC,UAAW,IACXC,oBAAqB,IACrBC,oBAAqB,KAAM,CAAGrwE,EAAG,EAAGyuE,EAAG,IACvC6B,cAAe,IACfC,yBAA0B,MAEvB,SAASC,IAA0B,SAAE1hG,IACxC,MAAM2hG,GAAyB,IAAAjhG,QAAO,CAAEwwB,EAAG,EAAGyuE,EAAG,KAC1CiC,EAAaC,IAAkB,IAAApkB,UAASojB,IACzCO,GAAc,IAAAviB,cAAY,CAACijB,EAAWC,EAAaC,KACrDH,EAAe,CACXb,mBAAoB,OACpBE,2BAA4Bc,EAAyBA,IAA2BtB,GAChFI,gBAAiBgB,EACjBf,sBAAuBgB,EACvBd,WAAY,MACd,GACH,IACGQ,GAA2B,IAAA5iB,cAAamiB,IAC1Ca,GAAgBh2F,GAAWxZ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,GAAQ,CAAEm1F,wBAAuB,GAC7F,IACGQ,GAAgB,IAAA3iB,cAAaoiB,IAC/BY,GAAgBh2F,GAAWxZ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,GAAQ,CAAEo1F,gBAAe,GACrF,IACGK,GAAsB,IAAAziB,cAAaojB,IACrCN,EAAuB/gG,QAAUqhG,CAAgB,GAClD,IACGV,GAAsB,IAAA1iB,cAAY,IAC7B8iB,EAAuB/gG,SAC/B,IACGygG,GAAY,IAAAxiB,cAAY,KAC1BgjB,EAAehB,GAAU,GAC1B,IACH,OAAQ,gBAAoBM,GAAyBjhG,SAAU,CAAExC,MAAOrL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGsnG,GAAc,CAAER,cAChHC,YACAC,sBACAC,sBACAC,gBACAC,8BAA+BzhG,EAC3C,CACO,SAASkiG,KACZ,OAAO,IAAApiG,YAAWqhG,GACtB,CACO,SAASgB,KACZ,MAAMtnB,EAAUqnB,KAChB,MAAO,CACHd,YAAavmB,EAAQumB,YACrBK,yBAA0B5mB,EAAQ4mB,yBAClCJ,UAAWxmB,EAAQwmB,UACnBG,cAAe3mB,EAAQ2mB,cACvBF,oBAAqBzmB,EAAQymB,oBAC7BC,oBAAqB1mB,EAAQ0mB,oBAErC,CCpEO,SAASa,IAAO,UAAEC,EAAS,UAAEnrD,EAAS,MAAE9gD,IAC3C,MAAMksG,EAAc,oCAAsClsG,EAC1D,OAAQ,gBAAoB,MAAO,CAAEslG,UAAW4G,GAC5C,gBAAoB,MAAO,CAAE5G,UAAW,yBACpC,gBAAoB,SAAU,CAAE6G,GAAI,IAAKC,GAAI,IAAKhgE,EAAG,IAAKk5D,UAAW,KAAW,CACxE+G,OAAQJ,EACRK,QAASxrD,EACTyrD,SAAUN,IAAcnrD,OAE5C,CCPA,MAAM0rD,GAAgB1mE,GAAsC,EACrD,SAAS2mE,KACZ,MAAMC,EFoFH,WACH,MAAMjoB,EAAUqnB,KAChB,OAAO7vG,OAAOiI,OAAO,CAAEyoG,gBAA6C,UAA5BloB,EAAQimB,iBAA+BjmB,EAAQomB,WAC3F,CEvFgC+B,GAC5B,OAAKF,EAAoBC,gBAGjB,gBAAoB,MAAO,CAAErH,UAAW,yBAA2B,IAAIvxF,MAAMy4F,KAAgBlxG,KAAI,CAACuH,EAAG7C,IAAW,gBAAoBgsG,GAAQ,CAAEzoG,IAAKvD,EAAOA,MAAOA,EAAO8gD,UAAW4rD,EAAoBG,eAAiB7sG,EAAOisG,UAAWS,EAAoBI,eAAiB9sG,OAF5Q,IAGf,CCTO,MAAM+sG,GAAuB,EAAGC,YAAWC,sBAAqBC,eACnE,IAAKF,EACD,OAAO,KAEX,MAAMlE,EAAOmE,EAAsB,qBAAuB,uBAC1D,OAAQ,gBAAoB,MAAO,CAAE3H,UAAW,YAC5C,gBAAoB,SAAU,CAAEA,UAAW,6BAA8B6H,UAAW,EAAGC,QAAS,IAAMF,GAAUD,IAC5G,gBAAoB,OAAQ,CAAE3H,UAAW,2BACrC2H,EAAuB,gBAAoB,KAAkB,CAAExxG,GAAI,uBAA4B,gBAAoB,KAAkB,CAAEA,GAAI,sBAC3I,gBAAoB,IAAK,CAAE6pG,UAAW,0BAA0BwD,QAAa,ECVhFuE,GAAwB,CAAEC,eAAgB,EAAGC,gBAAiB,EAAGC,KAAM,ICapF,MAAMC,IAAU,QAAc,MACxBC,GAAgC,EAAG9jG,eACrC,MAAM,KAAE4jG,EAAI,OAAE9uF,EAAM,oBAAEuuF,EAAmB,WAAEU,EAAU,qBAAE1wE,EAAoB,kBAAE2wE,GCT1E,WACH,MAAOC,EAAgBD,IAAqB,IAAAvmB,UAASgmB,KAC/C,eAAEC,EAAc,gBAAEC,EAAe,KAAEC,GAASK,EAC5CjoB,EAAWoB,KACXimB,EAAsBhmB,GAAqBmG,IAIjD,MAAO,CACHogB,OACAG,WAOR,SAAuBxwE,GACnB,MAAOwwE,EAAYG,IAAiB,IAAAzmB,WAAS,GAe7C,OAdA,IAAA98E,YAAU,KACN,IAAIwjG,EAAQ,KAOZ,OANI5wE,EACA4wE,EAAQ1H,OAAOpa,YAAW,IAAM6hB,GAAc,IAvBjC,KA0BbA,GAAc,GAEX,KACW,OAAVC,GACA1H,OAAO2H,aAAaD,EACxB,CACH,GACF,CAAC5wE,IACGwwE,CACX,CA7BuBM,CAAchB,GAM7BvuF,QAJgBuuF,EAAsBK,EAAiBC,GAV3C,EAeZN,sBACAW,oBACA3wE,qBAR0BixE,GAAetoB,EAAS5jD,GAAU/E,qBAAqBixE,IAUzF,CDPuGC,GAC7FjJ,EEfH,SAAyCkJ,EAAsBnB,EAAqBhwE,GACvF,MAAMoxE,GAAc,IAAA/jG,SAAO,GACrBgkG,GAAgB,IAAAhkG,SAAO,GACvBikG,GAA4B,IAAAjkG,SAAO,KAClC,QAAEs5F,GAAWsB,GAAWlB,GAAiB,CAAC,kBAAmB,+BAAgC,CAChGM,KAAM,CAACzhG,EAAG8gG,KACFA,EAAQ6K,YACRD,EAA0B/jG,SAAU,EACxC,GAEL,IAkBH,OAjBA,IAAAD,YAAU,KACN,MAAMkkG,EAAqB7K,IAAYyK,EAAY7jG,QAC7CkkG,EAAqBN,IAAyBE,EAAc9jG,QAC9DikG,GAAsBC,IAGtB9K,GAAWwK,GACXG,EAA0B/jG,QAAUyiG,EACpChwE,GAAqB,IAEhBsxE,EAA0B/jG,UAAYyiG,IAC3ChwE,EAAqBsxE,EAA0B/jG,SAC/C+jG,EAA0B/jG,SAAU,GAExC6jG,EAAY7jG,QAAUo5F,EACtB0K,EAAc9jG,QAAU4jG,EAAoB,GAC7C,CAACxK,EAASwK,EAAsBnB,EAAqBhwE,IACjDioE,CACX,CFdoByJ,CAAgCnB,EAAKxmG,OAAS,EAAGimG,EAAqBhwE,GACtF,OAAQ,gBAAoB,MAAO,CAAEqoE,UAAW,iDAAkDxlG,IAAKolG,GACnG,gBAAoB,MAAO,CAAEQ,MAAO,CAAEhnF,UAAU4mF,UAAW,KAAG,uBAAwB,CAC9EqI,WAAYA,EACZ,6BAA8BV,KAElC,gBAAoB2B,GAAqB,CAAEhB,kBAAmBA,GAAqBhkG,GACnF,gBAAoBilG,GAAa,CAAErB,KAAMA,KAC7C,gBAAoBT,GAAsB,CAAEE,oBAAqBA,EAAqBD,UAAWQ,EAAKxmG,OAAS,EAAGkmG,SAAWgB,GAAejxE,EAAqBixE,KACjK,gBAAoBzB,GAAY,MAAO,EAEzCmC,GAAsB,EAAGhB,oBAAmBhkG,eAC9C,MAAM9J,GAAM,IAAAwK,QAAO,MACbwkG,GD5BwBjpG,EC4BU/F,GD3BjC,IAAA2oF,cAAasmB,IAChB,MAAMvkG,EAAU3E,EAAQ2E,QAExB,IAAKA,IAAYukG,EAAWC,OACxB,OAAO3B,GAEX,MAAM,OAAE3uF,GAAWqwF,EAAWC,OACxBC,EAKd,SAAuBppG,GACnB,MAAM+D,EAAWmK,MAAMi0E,UAAUnoE,MAAMm4B,KAAKnyC,EAAQqpG,YACpD,IAAIC,EAAOnrE,OAAOorE,iBAClB,OAAOxlG,EAAShE,QAAO,CAAC4nG,EAAMprG,KAI1B,GAHiBqZ,QAAQrZ,EAAKitG,aAGhB,CACV,MAAMC,EAAU9B,EAAKA,EAAKxmG,OAAS,GAC/B5E,EAAKmtG,YAAcJ,EACnB3B,EAAK1sG,KAAK,CAACsB,IAGXktG,EAAQxuG,KAAKsB,GAEjB+sG,EAAO/sG,EAAKmtG,UAChB,CACA,OAAO/B,CAAI,GACZ,CAAC,IACR,CAxB+BgC,CAAchlG,GAC/BgjG,EAwBd,SAAoByB,GAChB,OAAOA,EAAe3zG,KAAKm0G,IACvB,MAAMC,EAAcD,EAAIn0G,KAAK8G,IAAW,IAAIV,EAAI,OAAoC,QAA5BA,EAAKU,EAAKutG,oBAAiC,IAAPjuG,EAAgBA,EAAK,CAAC,IAClH,OAAO4D,KAAKuZ,OAAO6wF,EAAY,GAEvC,CA7BqBE,CAAWX,GACxB,MAAO,CAAE3B,eAAgB5uF,EAAQ6uF,gBAAiBC,EAAK,GAAIA,OAAM,GAClE,CAAC3nG,KAXD,IAA2BA,EC6B9B,OAAQ,gBAAoB4nG,GAAS,CAAEuB,QAAQ,EAAMa,SAAWC,GAAQhwG,EAAI0K,QAAUslG,EAAKC,SAAWhB,GAAenB,EAAkBkB,EAAcC,MAAgB,EAAG5vF,gBAAkB,gBAAoB,MAAO,CAAEmmF,UAAW,mBAAoBxlG,IAAKqf,GAAcvV,IAAY,EAEnRilG,GAAc,EAAGrB,UACX,gBAAoB,WAAgB,KAAMA,EAAKxmG,OAAS,GAAM,gBAAoB,MAAO,CAAEs+F,UAAW,qBAAuBkI,EAAKlyG,KAAI,CAACojB,EAAQ1e,IAAW,gBAAoB,MAAO,CAAEslG,UAAW,mBAAoBI,MAAO,CAAEhnF,UAAUnb,IAAKvD,QAK7OgwG,GAA4B,EAAGpmG,eACxC,MAAM8jB,EAASu5D,GAAqBz+B,IACpC,OAAQ,gBAAoByhD,GAAa,CAAEv8E,OAAQA,GAC/C,gBAAoBggF,GAA+B,KAAM9jG,GAAW,EGrC/DqmG,GAAmBC,GACrB,KCSEC,GAAoB,KAC7B,MAAM3rG,EAAUyiF,GAAqB3oC,IAC/B2pD,EAAqBhhB,GAAqB9zC,IAC1CyyC,EAAWoB,KACX8gB,GAA2B,IAAArf,cAAa7lF,IAC1C,MAAMwtG,EAAkBnI,EAClBrlG,EhBhBP,SAA6DA,GAChE,OAAI,QAAyBA,EAAOoT,gBAAgBe,mBACzCnU,EAEJ,CACHoT,gBAAiB/Z,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtB,EAAOoT,iBAAkB,CAAEe,kBAAmB,CACvFC,KAAMpU,EAAOoT,gBAAgBe,kBAAkBlT,UAG/D,CgBQcwsG,CAAoDztG,IACpD,kBAAEmU,EAAiB,kBAAEE,EAAiB,gBAAEhB,GAAoBm6F,EAAgBp6F,gBAClF4vE,EAASwP,GAA+Bn/E,EAAiBc,EAAmBE,EAAoB,SAAW,MAAM,GAClH,CAAC2uE,EAAUqiB,IACRqI,GAAsB,IAAA7nB,cAAY,CAAC7lF,EAAQsrE,KAC7C,GAAKtrE,EAIA,CACD,MAAM,KAAEX,EAAI,YAAEwE,EAAW,KAAE9B,EAAI,GAAEE,GAAOjC,EAAOsT,WAC/C0vE,EAASoP,GAA0B/yF,EAAMwE,EAAa9B,EAAME,EAAIqpE,GACpE,MALI0X,EAASsP,KAKb,GACD,CAACtP,IACJ,MAAO,CAAEphF,UAASsjG,2BAA0BwI,sBAAqBC,oBAAkB,EAKhF,SAASA,GAAiBlzG,GAC7B,MAAM,QAAEmH,EAAO,yBAAEsjG,EAAwB,oBAAEwI,GAAwBjzG,IAC5D,WAAE6Y,EAAU,gCAAEs6F,EAA+B,sBAAEC,EAAqB,eAAEC,IAAkB,8BAAEC,EAA6B,wBAAEC,EAAuB,sBAAEC,EAAqB,uBAAEC,IC9B7K,SAAwCtsG,GAC3C,MAAMohF,EAAWoB,KACX1nD,EAAsB2nD,GAAqBqH,IAC3CyiB,EAAgB9pB,GAAqBnzC,MACnC59B,GAAavO,GAAoB,KAAUnD,EAAS,OACrDwsG,EAAqBC,IAA0B,IAAA5pB,aAC/CqpB,EAAgBQ,IAAqB,IAAA7pB,YACtC8pB,GAAuB,IAAAtnG,UAAQ,KACjC,QAA4BvI,IAAxBg+B,EACA,OAAI0xE,EACO/0G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG,CACnCjC,KAAM,6BACNkjG,YAAa7lE,IACb,CAAE0xE,wBAEH,CAAE/uG,KAAM,6BAA8BkjG,YAAa7lE,EAE9C,GACjB,CAACA,EAAqB0xE,IACnBL,GAAgC,IAAAloB,cAAY,SAAUzoF,GACxD4lF,EAAS5jD,GAAU3C,kBAAkBr/B,GACzC,GAAG,CAAC4lF,IACEwrB,GAAmB,IAAA3oB,cAAY,KACjCwoB,OAAuB3vG,GACvBskF,EAAS5jD,GAAUzC,4BAA4B,GAChD,CAACqmD,IACEgrB,GAA0B,IAAAnoB,cAAY,WAEpCuoB,GAGJI,GACJ,GAAG,CAACJ,EAAqBI,IACnBZ,GAAkC,IAAA3mG,UAAQ,KAC5C,MAAMwnG,EAAgB1pG,EAAiBrM,KAAI,CAACsH,EAAQuiG,KAAgB,CAChEviG,SACAuiG,kBAEEmM,EAAoCN,GACtCrpG,EAAiB0nB,MAAMrZ,IAAoB,QAAgBA,EAAgBA,gBAAgBQ,YAAaw6F,KAC5G,YAA6B1vG,IAAzB6vG,GAAsCG,GAG1CD,EAAc/5F,OAAO65F,EAAqBhM,YAAa,EAAGgM,GAF/CE,CAGS,GACrB,CAACF,EAAsBxpG,EAAkBqpG,IACtCH,GAAwB,IAAApoB,cAAY,SAAUjyE,GAChD,IAAK26F,EACD,OAEJ,MAAMI,EAAmBR,EAAcjuG,MAAM0uG,GAAQA,EAAI59D,aAAavkB,MAAMhZ,IAAO,QAAgBA,EAAGvW,IAAK0W,OACrGi7F,EAAkBF,aAA2D,EAASA,EAAiB39D,aAAa9wC,MAAMuT,GACrH1O,EAAiB7E,MAAMg4B,IAAM,QAAgBA,EAAE9kB,gBAAgBQ,YAAaH,OAGlFo7F,GAMDP,EAAkBO,GAClBL,MANAH,EAAuBz6F,GACvB06F,EAAkB16F,GAClB+kF,GAAmB3V,EAAU,GAAyBpvE,EAAa26F,EAAqBhM,cAAcuM,QAAQN,GAMtH,GAAG,CAACD,EAAsBxpG,EAAkBopG,EAAeK,EAAkBxrB,IACvEkrB,GAAyB,IAAAroB,cAAY,KACvCyoB,OAAkB5vG,EAAU,GAC7B,IACH,MAAO,CACH,CACI4U,aACAs6F,kCACAC,sBAAuB9oG,EAAiBX,OACxC0pG,kBAEJ,CACIC,gCACAE,wBACAD,0BACAE,0BAGZ,CDpDkNa,CAA+BntG,GACvOigD,EAAewiC,GAAqBnjC,IACpC8tD,EAAmB3qB,GAAqB5iC,IACxC51B,EAAyBw4D,GAAqB9iC,IAC9Cp5B,EAAoBk8D,GAAqB/iC,IACzC2tD,EAAiB5qB,GAAqBziC,IACtCjwB,EAAW0yD,GAAqB99B,KAChC,4BAAE+4C,EAA2B,qCAAEL,GAAyCQ,KACxE4F,EAAqBhhB,GAAqB9zC,IAC1C0d,EAAkBo2B,GAAqB,IACvCihB,EAA6BjhB,GAAqBtnC,IACxD,GAAIprB,EACA,OAAO,gBAAoB07E,GAAiBh0G,OAAOiI,OAAO,CAAC,EAAG7G,IAElE,MAAMy0G,EAA4B,CAC9BrjF,yBACA1D,oBACA6mF,oBAEEG,EAA4BlQ,EAAqC3rF,GACvE,OAAQ,gBAAoB85F,GAA2B,KACnD,gBAAoB,MAAO,CAAE1K,UAAW,KAAW,oBAAqB,CAChE,2BAA4B7gD,KACP,WAAnBotD,EAA+B,gBAAoBrI,GAA2B,MAAU,gBAAoB,WAAgB,KAClI,gBAAoBuI,EAA2B,CAAEnvG,OAAQsT,EAAYoyF,gBAAiBgI,EAAqB5zG,OAAQo1G,EAA2BE,SAA6B,aAAnBH,IACxJ,gBAAoBpN,GAA6B,CAAEC,UAAW,UAAWC,aAAc,OAAQC,YAAa,EAAGE,0BAA2B6L,EAA+B9L,kBAAmBqD,MAChMsI,EAAgCl1G,KAAK22G,IACjC,GC9De,+BD8D2BA,EC9DpChwG,KD8D0D,CAC5D,MAAMiwG,EAA+BhQ,EAA4BiQ,SAASD,6BAC1E,OAAQ,gBAAoBA,EAA8B,CAAE3uG,IAAK0uG,EAAoB9M,YAAaiD,QAASwI,EAAyBwB,SAAUvB,GAClJ,CACK,CACD,MAAM,OAAEjuG,EAAM,YAAEuiG,GAAgB8M,EAC1B7B,EAAkBnI,EAClBrlG,EACA8kG,GAAoD9kG,GACpDyvG,EAAiCnQ,EAA4BoQ,sBAAsBlC,GASnF55F,EAAcq6C,EAAgBvtD,IAAI8sG,EAAgBp6F,gBAAgBQ,aAExE,OADA,QAAUA,EAAa,+DACf,gBAAoBmxF,GAA0B,CAAEpkG,KAAK,EAAAmE,EAAA,IAAe8O,EAAY+kB,WAAYssE,UAAU,QAAgBjlG,EAAOoT,gBAAgBQ,YAAak6F,GAAiB9tG,OAAQA,EAAQuiG,YAAaA,EAAayC,gBAAiByK,EAAgCvK,yBAA0BA,EAA0BC,uBAAwB4I,EAA+B3I,uBAAwB8I,GACrZ,KAEJ5I,EAA8B,gBAAoBM,GAAyB,CAAE5D,YAAa6L,EAAuBhI,OAAQkI,IAAoC,KAC7J,gBAAoB,MAAO,CAAErL,UAAW,iCACpC,gBAAoBb,GAA6B,CAAEC,UAAW,UAAWC,aAAc,OAAQE,mBAAmB,EAAOD,YAAa6L,KAClJ,C,gBE7FO,SAAS8B,GAAqBnwG,GACjC,IAAIV,EACJ,MAAO,CACH0Z,aAAwC,QAAzB1Z,EAAKU,EAAKuL,iBAA8B,IAAPjM,OAAgB,EAASA,EAAG1B,QAC5EoO,UAAWhM,EAAKpC,QAExB,CCJO,SAASwyG,KACZ,MAAM5sB,EAAWoB,KACjB,OAAO,IAAAyB,cAAY,KACf7C,EAAS5jD,GAAUb,6BACnBykD,EAAS5jD,GAAUV,4BAA4B,GAChD,CAACskD,GACR,CCRA,MAAM,IAAW,SAAe,CAC5Bp0C,UAAW,CAAE/1C,GAAI,4BACjBo0C,UAAW,CAAEp0C,GAAI,4BACjB61C,SAAU,CAAE71C,GAAI,2BAChB81C,SAAU,CAAE91C,GAAI,6BAEpB,IAAIg3G,GAkCG,SAASC,GAAcr1G,GAC1B,MAAM2M,EAdV,UAAmB,sBAAE2oG,EAAqB,SAAEtN,EAAQ,kBAAEuN,EAAiB,mBAAEC,IACrE,IAAI7oG,EAASyoG,GAAoBK,KAUjC,OATIH,IACA3oG,EAASyoG,GAAoBM,KACzB1N,IACAr7F,EAASyoG,GAAoBO,OACH,SAAtBJ,GAAuD,SAAvBC,IAChC7oG,EAASyoG,GAAoB32G,SAIlCkO,CACX,CAEmBipG,CAAU51G,GACzB,GAAI2M,IAAWyoG,GAAoBK,KAC/B,OAAO,KAEX,MAAMI,EAAYlpG,IAAWyoG,GAAoB32G,MAC3CupG,EAAWr7F,IAAWyoG,GAAoBO,OAC1CG,EAAU,KAAG,oBAAqB,CACpC9G,OAAQhH,EACRp7F,MAAOipG,IAEL/mG,EAtCV,UAAoB,mBAAE0mG,EAAkB,kBAAED,IACtC,MAA2B,QAAvBC,EACO,GAASrhE,UAEO,QAAvBqhE,EACO,GAAShjE,UAEM,QAAtB+iE,EACO,GAASthE,SAEM,QAAtBshE,EACO,GAASrhE,cADpB,CAGJ,CAyBoB6hE,CAAW,CACvBP,mBAAoBx1G,EAAMw1G,mBAC1BD,kBAAmBv1G,EAAMu1G,oBAEvBS,EAAa,gBAAoB,MAAO,CAAE/N,UAAW,0BACvD,gBAAoB,KAAkBrpG,OAAOiI,OAAO,CAAC,EAAGiI,KAC5D,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAEmnG,KAAM,iBAAkBhO,UAAW6N,IAChED,EAAYG,EAAY,KAChC,CC1DO,SAASE,GAA8Bn4F,EAAchN,GACxD,MAAMw3E,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAC9Bk+B,IAAK+sB,GAAyB5qB,GAA8B,CAChEL,eAAgB5nB,GAChBmoB,WAAY,8BACZD,aAAc,sDACd/tB,UAAYzoD,IACRuzE,EAAS5jD,GAAU9C,sCAAsC7sB,EAAMlH,QAAQrL,KAAK,EAEhF86D,QAAUvoD,IACNuzE,EAAS5jD,GAAU9C,sCAAsC7sB,EAAMlH,QAAQe,QAAQf,QAAQrL,KAAK,KAG5F2mF,IAAKgtB,GAA6B7qB,GAA8B,CACpEL,eAAgB,GAChBO,WAAY,8BACZD,aAAc,0CACd/tB,UAAYzoD,IACR,MAAMvS,EAAMuS,EAAMlH,QAAQtJ,MAAM,GAAGJ,OAAO3B,IAC1C8lF,EAAS5jD,GAAUzD,aAAaz+B,IAChC8lF,EAAS5jD,GAAUtD,6BAA4B,IAC/CknD,EAAS5jD,GAAUpD,gCAA+B,IAClDgnD,EAAS5jD,GAAUhD,sCAAsCl/B,IACzD0zG,EAAqB1zG,EAAK,UAAU,IAG5C,OAAO,IAAA2oF,cAAalqE,IAChB,MAAMrT,EAAgB,4BAA4BkQ,KAAgBhN,IAC5DoQ,EAAW,GAAY/f,EAAU,UAAW8f,GAClDg9E,GAAmB3V,EAAUmQ,GAAe36E,EAAchN,EAAW,CACjEnM,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQ2/C,OACT,EAAOl2C,IAAgB/D,MAAK,KAC3BssG,EAAyBr4F,EAAchN,EAAW,CAC9CnM,KAAM,uBACNR,OAAQ,CACJQ,KAAM,UACNsc,SAAS,QAAWA,GACpB/B,uBAAwB,GACxBZ,OAAQ,GACR9V,OAAO,QAAayY,GACpBV,YAAa,IAEjBjc,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,gBAGnC9rC,GAAW,EAAO4J,EAAc,GACrC,GACH,CAACuoG,EAA0B7tB,EAAUx3E,EAAWgN,EAAc3c,GACrE,CC3DO,SAASi1G,GAAiCt4F,EAAchN,GAC3D,MAAMw3E,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAC9Bk+B,IAAKktB,GAAkC/qB,GAA8B,CACzEL,eAAgBwN,GAChBjN,WAAY,8BACZD,aAAc,wCACd/tB,UAAW,KACP8qB,EAAS5jD,GAAUzD,cAAa,QAAMmiB,MACtCklC,EAAS5jD,GAAUtD,6BAA4B,GAAM,IAG7D,OAAO,IAAA+pD,cAAY,KACf,MAAMjqE,EAAWkvB,GAA8BjvC,GAC/Ck1G,EAA8Bv4F,EAAchN,EAAW,CACnDnM,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQk/C,MACV,GACH,CAACvyC,EAAWulG,EAA+Bv4F,EAAc3c,GAChE,CCzBO,SAASm1G,GAA6Bx4F,EAAchN,GACvD,MAAMw3E,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAC9Bk+B,IAAKotB,GAAcjrB,GAA8B,CACrDL,eAAgBwN,GAChBjN,WAAY,8BACZD,aAAc,wCACd/tB,UAAYzoD,IACR,MAAMvS,EAAMuS,EAAMlH,QAAQumE,WAAW,GAAGjwE,OAAO3B,IAC/C8lF,EAAS5jD,GAAUzD,cAAa,QAAMgiB,MACtCqlC,EAAS5jD,GAAUtD,6BAA4B,IAC/CknD,EAAS5jD,GAAUpD,gCAA+B,IAClDgnD,EAAS5jD,GAAUhD,sCAAsCl/B,GAAK,IAGtE,OAAO,IAAA2oF,cAAY,KACf,MAAMjqE,EAAW,GAAY/f,EAAU,OACvCo1G,EAAUz4F,EAAchN,EAAW,CAC/BnM,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQ++C,MACV,GACH,CAACqzD,EAAWzlG,EAAWgN,EAAc3c,GAC5C,CC/BO,SAASq1G,GAAyB14F,EAAchN,GACnD,MAAMw3E,EAAWoB,KACjB,OAAO,IAAAyB,cAAarmF,IAChB,IAAIwiG,EAAcx2F,EACdhM,EAAKgZ,eAAiBA,IAElBhZ,EAAKgM,UAAYA,IACjBw2F,EAAcx2F,EAAY,GAE1BhM,EAAKgM,YAAcw2F,IAK3Bhf,EAASoQ,GAA+C5zF,EAAKgZ,aAAchZ,EAAKgM,UAAWgN,EAAcwpF,GAAa,GACvH,CAAChf,EAAUx3E,EAAWgN,GAC7B,CCbO,SAAS24F,KACZ,MAAMnuB,EAAWoB,KAOjB,MAAO,CAAEgtB,sBANoB,IAAAvrB,cAAawrB,IACtCruB,EAAS5jD,GAAUZ,wBAAwB6yE,GAAe,GAC3D,CAACruB,IAI2BsuB,oBAHJ,IAAAzrB,cAAY,KACnC7C,EAAS5jD,GAAUV,4BAA4B,GAChD,CAACskD,IAER,ELJA,SAAW6sB,GACPA,EAAoBA,EAA0B,KAAI,GAAK,OACvDA,EAAoBA,EAA0B,KAAI,GAAK,OACvDA,EAAoBA,EAA4B,OAAI,GAAK,SACzDA,EAAoBA,EAA2B,MAAI,GAAK,OAC3D,CALD,CAKGA,KAAwBA,GAAsB,CAAC,IML3C,MAAM0B,GAAW92G,IACpB,MAAM,UAAE+Q,EAAS,aAAEgN,EAAY,WAAEg5F,EAAU,aAAEC,EAAY,gBAAEC,GAAoBj3G,EACzEk3G,GAAkB,IAAAjqG,SAAO,GAEzBwnE,EAAmC,SAAjBuiC,EAA0BjmG,EAAY,EAAIA,EAC5DomG,EAA4BjB,GAA8Bn4F,EAAc02D,GACxE2iC,EAA+Bf,GAAiCt4F,EAAc02D,GAC9E4iC,EAA2Bd,GAA6Bx4F,EAAc02D,GACtE6iC,EAAmBb,GAAyB14F,EAAc02D,IAC1D,qBAAEkiC,GAAyBD,OAC1B,QAAEnQ,EAAO,OAAEd,EAAM,KAAE1gG,GAAQ8iG,GAAWlB,GAAiB,CAAC,kBAAmB,kBAAmB,sBAAuB,MAAO,WAAY,CAC3IM,KAAOliG,IACCqhG,GAA2BrhG,IAC3BoyG,EAA0BpyG,EAAKmc,SAE/BglF,GAA8BnhG,IAC9BsyG,IAEAlR,GAAkCphG,IAClCqyG,KAEArR,GAAuBhhG,IAASihG,GAAmBjhG,KACnDuyG,EAAiBvyG,EACrB,GAEL,CACC0vE,EACA12D,EACAo5F,EACAC,EACAC,EACAC,KAEJ,IAAApqG,YAAU,KACFu4F,IACAkR,EAAqB,CAAE54F,eAAchN,UAAW0jE,IAChDyiC,EAAgB/pG,QAAUs4F,EAC9B,GACD,CAACA,EAAQ1nF,EAAc02D,EAAiBkiC,IAC3C,MAAMvO,EAAa5C,GAAsB,CAAEC,WACrC8R,GAAc,IAAAnsB,cAAarmF,KACxBA,KAGDghG,GAAuBhhG,KAASihG,GAAmBjhG,IAC5CkyG,GAAmBlyG,EAAKgZ,eAAiBA,GAAgBhZ,EAAKgM,YAAcA,IAGxF,CAACkmG,EAAiBl5F,EAAchN,IACnC,OAAQ,gBAAoB,MAAO,CAAEk3F,UAAW,KAAG8O,EAAY,WAAYC,EAAc,CACjF7O,QAAS5B,IAAYgR,EAAYxyG,GACjCyyG,KAAMP,IACN5O,MAAOD,EAAY3lG,IAAKolG,GAAW,EC5DxC,SAAS4P,IAAa,OAAE9qG,IAC3B,MAAM+qG,EAAe,KAAG,iCAAkC,+BAAgC/qG,GACpFgrG,EAAgB,KAAG,qBAAsBhrG,GAC/C,OAAQ,gBAAoB,MAAO,CAAEs7F,UAAWyP,GAC5C,gBAAoB,MAAO,CAAEzP,UAAW0P,IAChD,CCFA,SAASC,GAAgBC,EAAeC,EAAaC,GAEjD,OADkBD,IAAgBD,EAI3BA,EAAgBE,EAAc,MAAQ,MAFlC,MAGf,CCqBO,SAASC,GAAkBjzG,EAAMkzG,EAA4BC,EAA8BC,GAC9F,MAAM,SAAEvkC,EAAQ,SAAEC,EAAQ,aAAE9/B,EAAY,wBAAEqkE,EAAuB,gBAAEC,GAAoBtzG,EACjFuzG,EAUH,SAA8BC,EAASF,GAC1C,OAAOpwG,KAAKuwG,MAAMD,EAAUF,EAChC,CAZsBI,CAAqBP,EAA+BC,EAAmBE,GACnFK,EDvBH,SAA6BC,EAAaZ,EAAaa,EAAcN,GACxE,MAAMT,EAAgBe,EAAeN,EAC/BR,EAAc,KAAMD,EAAec,EAAaZ,GACtD,MAAO,CACHD,cACAD,gBACAgB,UAAWf,IAAgBD,EAC3BiB,aAAclB,GAAgBC,EAAeC,EAAaC,GAElE,CCc2BgB,CAAoBnlC,EAAUC,EAAU9/B,EAAcukE,GACvEU,EAAmBN,EAAeZ,YAAc/jE,EAChDklE,EAAgBD,EAAmBX,EACnCa,EAAkBZ,EAAYD,EAC9B7I,EAAevnG,KAAKuwG,OAAOP,EAA6BG,EAAwBlL,MAAQmL,GACxF5I,EAAeD,EAAewJ,EACpC,OAAOp6G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG6xG,GAAiB,CAAES,SAAUlB,EAA6BgB,EAAeG,WAAYnB,EAA6BiB,EAAiB1J,eACtKC,gBACR,CCpCO,SAAS4J,IAAoB,KAAEt0G,EAAI,OAAEukC,EAAM,mBAAEgwE,EAAkB,wBAAEC,EAAuB,oBAAEC,IAC7F,MAAMjxB,EAAWoB,KACXp2B,EAAcq2B,GAAqBz5B,KACnC,YAAEw9C,EAAW,UAAEC,EAAS,oBAAEE,GAAwBY,KAClDtqG,GAAS,IAAAoI,UAAQ,IAAMzH,EAAKX,UAAU,CAACW,IACvC00G,EAAmBr1G,EAAO5B,YAC1B,gBAAEk3G,EAAe,SAAE1R,GvBqEtB,SAAkCxlG,GACrC,MAAM4kF,EAAUqnB,KAChB,MAAO,CACHiL,gBAA6C,UAA5BtyB,EAAQimB,gBACzBrF,SAAU5gB,EAAQkmB,sBAAsBh/E,SAAS9rB,GACjDgrG,WAAYpmB,EAAQomB,WAE5B,CuB5E0CmM,CAAyBF,IACxDG,EAAkBC,IAAwB,IAAA7vB,WAAS,GAGpDjsE,EAAehZ,EAAKuL,UAAU3N,QAC9BoO,EAAYhM,EAAKpC,QACjBoxC,EAAehvC,EAAKskC,cAAcC,GAAQh+B,UAC1CsoE,EAAW3iC,GAAY7sC,EAAQmvD,GAC/BsgB,EhRkOH,SAA4C9uE,EAAMukC,GACrD,IAAIjlC,EAAIswB,EACR,IAAImlF,EAAe,EACnB,MAAMC,EAAeh1G,EAAKuL,UAAU9L,QAAQqF,MAC5C,IAAK,MAAMmwG,KAAeD,EAAc,CACpC,MAAM7lC,EAAW8lC,EAAY3wE,cgRvOyB,MhRuOH/9B,UAAYwuG,EAC/D,GAAI5lC,GAAYzrC,GAAqC,CACjD,GAAIuxE,EAAYr3G,UAAYoC,EAAKpC,QAC7B,MAEJm3G,EAAe5lC,CACnB,KACK,CACD,GAAI8lC,EAAYr3G,UAAYoC,EAAKpC,QAC7B,OAAO8lC,GAGXqxE,EAAqH,QAArGnlF,EAAkD,QAA5CtwB,EAAK21G,EAAY3wE,cgRnPW,ahRmP+B,IAAPhlC,OAAgB,EAASA,EAAGiH,iBAA8B,IAAPqpB,EAAgBA,EAAK,CACtJ,CACJ,CACA,OAAO8T,GAAsCqxE,CACjD,CgRvPqBG,CAAmCl1G,KAC7C,WAAEqkG,GAAcQ,GAAWP,GAAiB,CAC/CC,SAAU,KACN,MAAM8O,EAA0BoB,IAChC,MAAO,CACH50G,KAAM,yBACNmZ,eACAhN,YACAmpG,qBAAsBX,IACtBlB,gBAAiBiB,IACjBlB,0BACArkE,eACA6/B,WACAC,WACH,EAEL41B,QAAS,CAACH,EAAUhD,KAChB,MAAMkI,EAAmBV,KACnB,YAAEgK,GAAgBE,GAAkB1O,EAAUhD,EAAQ6T,yBAAyB18E,EAAG6oE,EAAQ8T,iCAAiC38E,EAAG+wE,EAAiB/wE,GACrJ8qD,EAAS6Q,GAAYr7E,EAAchN,EAAW+mG,IAC9C+B,GAAqB,EAAM,GAEhC,CAACz1G,EAAQmvD,EAAax1C,EAAchN,EAAWgjC,EAAc6/B,EAAUC,KAC1E,IAAA3mE,YAAU,KACFk8F,EACAuE,EAAY,QAAS,CAAC8L,GAAmBD,GAGzC5L,GACJ,GACD,CAACxE,IACJ,MAEMiR,EAAcT,GAFGF,GAAmB1R,EAGpCr7F,EAASy8F,EAAa,QAAU,SACtC,OAHqBA,GAAcsQ,GAAmBE,EAM9C,gBAAoB,MAAO,CAAE3R,UAAW,gCAC5C,gBAAoB,MAAO,CAAEA,UAAW,0DAA2DqS,aA7ClF,IAAMT,GAAqB,GA6CmFU,aA5C9G,IAAMV,GAAqB,GA4C+Gp3G,IAAKmnG,GAAWyQ,EAAc,gBAAoB5C,GAAc,CAAE9qG,OAAQA,IAAY,OAH1O,IAIf,C,wCCzDA,MAAM6tG,WAA8B,MAChCz7G,YAAYI,EAAWs7G,GACnBzuE,MAAM7sC,GACND,KAAKu7G,UAAYA,EACjBv7G,KAAKw7G,QAAU,KACX,MAAM,cAAEC,EAAa,kBAAEC,EAAiB,cAAEC,GAAkB37G,KAAKu7G,UAC3DK,GAAc,SAEpB,OADAH,SAA8DA,EAAcz7G,KAAK0oD,WAAYkzD,GACtF9uE,MACF0uE,UACA5wG,MAAMpC,IACPkzG,SAAsEA,EAAkBlzG,EAAQozG,GACzF,IAAIC,GAA4BrzG,EAAQxI,KAAK87G,UAAW97G,KAAKu7G,UAAWK,MAE9EtmF,OAAO5nB,IAER,MADAiuG,SAA8DA,EAAcjuG,EAAOkuG,GAC7EluG,CAAK,GACb,EAEN1N,KAAK87G,UAAa77G,GACP,IAAIq7G,GAAsBr7G,EAAWD,KAAKu7G,UAEzD,EAEJ,MAAMM,WAAoC,MACtCh8G,YAAYI,EAAW87G,EAASR,EAAWK,GACvC9uE,MAAM7sC,EAAW87G,GACjB/7G,KAAKu7G,UAAYA,EACjBv7G,KAAK47G,YAAcA,EACnB57G,KAAKg8G,QAAU,KACX,MAAM,wBAAEC,EAAuB,oBAAEC,GAAwBl8G,KAAKu7G,UAE9D,OADyBzuE,MAAMkvE,UAE1BpxG,MAAMirB,IACPomF,SAAkFA,EAAwBpmF,EAAK71B,KAAK47G,aAC7G/lF,KAENP,OAAOh2B,IAER,MADA48G,SAA0EA,EAAoB58G,EAAGU,KAAK47G,aAChGt8G,CAAC,GACT,EAENU,KAAKm8G,WAAa,CAAC9xG,EAAQhF,KACvB,MAAM,2BAAE+2G,EAA0B,uBAAEC,GAA2Br8G,KAAKu7G,UAEpE,OADyBzuE,MAAMqvE,WAAW9xG,EAAQhF,GAE7CuF,MAAMirB,IACPumF,SAAwFA,EAA2B/xG,EAAQhF,EAAMwwB,EAAK71B,KAAK47G,aACpI/lF,KAENP,OAAOh2B,IAER,MADA+8G,SAAgFA,EAAuBhyG,EAAQhF,EAAM/F,EAAGU,KAAK47G,aACvHt8G,CAAC,GACT,CAEV,ECrDG,SAASg9G,GAAoB/4G,GAChC,OAAOA,GAAM,QAAgBA,GAAO,EACxC,CCJA,MAAMg5G,GAAgB,CAClBhqE,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJvmC,GAAI,aAEKqwG,GAAiBr3G,IAC1B,IAAI,UAAE4jG,EAAS,OAAE3+D,GAAWjlC,EAAIrE,GAAQ,SAAOqE,EAAI,CAAC,YAAa,WACjE,OAAO,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEioG,UAAW,KAAGA,EAAW,YAAa,cAAewT,GAAcnyE,MAAY,ECRnIqyE,GAAgB37G,IACzB,MAAM,sBAAE4kG,GAA0BI,MAC5B,UAAEn4D,GAAc7sC,EAChB47G,GAAe,IAAApvG,UAAQ,IAAMo4F,EAAsBqQ,sBAAsBpoE,EAAU9qB,IAAK8qB,IAAY,CAAC+3D,EAAuB/3D,IAClI,OAAO,gBAAoB+uE,EAAch9G,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECHzD67G,GAA6B77G,IACtC,MAAM,UAAE6sC,EAAS,QAAE0wB,EAAO,gBAAEu+C,EAAe,OAAExyE,EAAM,qBAAEyyE,GAAyB/7G,GACxE,WAAEq3F,GAAeJ,IAAmB,QAAUpqD,IAC9Ck3C,EAAgBtb,IAAuB,QAAU57B,IACjDhR,EAAQ+tD,GAAqB7F,GACnC,OAAQ,gBAAoB23B,GAAe,CAAEzT,UAAW,KAAG,WAAY8T,EAAsB,CAAE,cAAe1kB,IAAe/tD,OAAQA,GACjI,gBAAoBqyE,GAAc,CAAE9uE,UAAWA,EAAWhR,MAAOA,EAAOigF,gBAAiBA,EAAiBv+C,QAASA,IAAY,ECbjIy+C,GAA6B,CAC/BC,SAAU,oBACVC,KAAM,gBACN3xE,OAAQ,kBACR4xE,IAAK,eACLC,KAAM,gBACNC,KAAM,gBACNC,MAAO,iBACPC,OAAQ,kBACRC,QAAS,mBACTC,OAAQ,kBACRC,IAAK,eACLC,MAAO,iBACPC,QAAS,mBACTC,QAAS,mBACTC,MAAO,iBACPC,QAAS,oBAEN,SAASC,GAAmB9xG,EAAYtG,GAC3C,IAAIP,EACJ,MAAmB,QAAf6G,EACO,eAEwC,QAA3C7G,EAAK23G,GAA2Bp3G,UAA0B,IAAPP,EAAgBA,EAAK,EACpF,CCrBO,MAAM44G,IAAuB,IAAAC,aAAW,UAA8B,SAAE3wG,EAAQ,UAAE07F,EAAS,aAAE9Q,EAAY,WAAEE,EAAU,WAAEE,GAAc90F,GACxI,OAAQ,gBAAoB,MAAO,CAAEwlG,UAAW,KAAG,oBAAqBA,EAAW,CAC3E,gBAAiB9Q,EACjB,cAAeE,IACf50F,IAAKA,EAAKstG,QAASxY,GAAchrF,EAC7C,ICDM,IAAU,QAAc,MACjB4wG,GAA8B,EAAG5wG,cAClC,gBAAoB,GAAS,CAAE0wC,QAAQ,IAAQ,EAAGn7B,aAAYs7F,kBAClE,IAAI/4G,EAAIswB,EACR,OAAQ,gBAAoB,MAAO,CAAEszE,UAAW,4BAA6BxlG,IAAKqf,GAAcvV,EAAS,CACrG8wG,YAA2C,QAA7Bh5G,EAAK+4G,EAAYngE,cAA2B,IAAP54C,OAAgB,EAASA,EAAG+c,MAC/Ek8F,aAA4C,QAA7B3oF,EAAKyoF,EAAYngE,cAA2B,IAAPtoB,OAAgB,EAASA,EAAGtT,SAChF,ICVNk8F,GAAa,IAAM,KACZC,GAAoB,EAAGjxG,WAAUkxG,mBAAkBC,yBAAwBC,iBAAiBJ,GAAYK,4BAA4BL,GAAYM,2BAA2BN,GAAYO,sBAAsBP,GAAYQ,qBAAqBR,GAAYS,aAAY7mB,gBAAe,EAAOE,cAAa,EAAOE,gBACjT,gBAAoB4lB,GAA6B,MAAM,EAAGE,cAAaC,kBAAoB,gBAAoB,WAAgB,KACnIQ,IACA,gBAAoBb,GAAsB,CAAEhV,UAAWwV,EAAkBh7G,IAAKu7G,EAAY7mB,aAAcA,EAAcE,WAAYA,EAAYE,WAAYA,GACtJqmB,IACA,gBAAoB,MAAO,CAAE3V,UAAWyV,GACpCC,EAAeL,GACf/wG,EAAS,CAAE8wG,cAAaC,kBAC5BO,KACJE,OCTKE,GAA8B55G,IACvC,IAAI,uBAAEq5G,GAA2Br5G,EAAIrE,GAAQ,SAAOqE,EAAI,CAAC,2BACzD,OAAQ,gBAAoBm5G,GAAmB5+G,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAE09G,uBAAwB,KAAG,gBAAiBA,KAA4B,E,uCCLtJ,MAIMQ,GAAoB,CAAEC,SAAU,QAChCC,GAAsB,CAAEC,UAAW,GACnCC,GAAqB,CACvBj9F,OAAQ,OACRk9F,WAAY,QAEVC,GAAwC5/G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGy3G,IAAqB,CAAEF,yBACrG,SAASK,GAAoBnB,GACzB,YAAwBr5G,IAAjBq5G,GAA6BA,EAZT,GAa/B,CAEA,SAASoB,GAAcC,EAAiBC,GACpC,OAAIA,EACOD,EAAkBH,GAAwCF,GAEjEK,EACOP,QADX,CAGJ,CAEA,MAAMS,IAAsC,IAAAC,OAAK,UAA6C,gBAAEH,EAAe,oBAAEC,EAAmB,SAAEryG,IAClI,OAAQ,gBAAoB,MAAO,CAAE07F,UAAW,sBAAuBI,MAAOqW,GAAcC,EAAiBC,IACzG,gBAAoB,MAAO,CAAE3W,UAAW,gBAAiBI,MAAOuW,EAAsBV,QAAoBj6G,GAAasI,GAC/H,IACawyG,GAAiC,EAAGxyG,WAAU+wG,kBAC/C,gBAAoBuB,GAAqC,CAAEF,qBAAkC16G,IAAjBq5G,GAA6BA,GA5BzF,IA4BsIsB,oBAAqBH,GAAoBnB,IAAiB/wG,GC3BtNyyG,GAAqB,OAAgB,MAE9BC,GAAwB,EAAGx2G,QAAO60G,mBAE3C,MAAM4B,GAAqB,IAAA1yG,UAAQ,IACvB,gBAAoBwyG,GAAoB,CAAEG,QAAS,EAAGC,SAAU,MAAOnX,UAAW,iCAAkC1kG,KAAMkF,KACnI,CAACA,IACJ,OAAQ,gBAAoBs2G,GAAgC,CAAEzB,aAAcA,GAAgB4B,EAAoB,ECLvGG,GAAoBr/G,IAC7B,MAAM,QAAEkhB,EAAO,OAAE9c,GAAWpE,GACtB,0BAAE2kG,GAA8BK,KAChCsa,GAAmB,IAAA9yG,UAAQ,IAAMm4F,EAA0BsQ,sBAAsB/zF,EAAS9c,IAAS,CAACugG,EAA2BzjF,EAAS9c,IAC9I,OAAO,gBAAoBk7G,EAAkB1gH,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECV7Du/G,GAAgB,aACtB,SAASC,IAAa,UAAEC,EAAS,SAAEC,IACtC,MAAMC,EAAS7W,SAAS8W,cAAc,KACtCD,EAAOvhH,GAAKmhH,GACZI,EAAO5vC,KAAO0vC,EACdE,EAAOE,SAAWH,QAA2CA,EAAW,eACxE5W,SAASC,KAAK+W,YAAYH,GAC1BA,EAAOI,QACPjX,SAASC,KAAKiX,YAAYL,GACtBF,GACA3vC,IAAImwC,gBAAgBR,EAE5B,CCNO,MCEMS,GAAoB7gH,IAC7B,MAAM,MAAEoJ,EAAK,UAAE0V,EAAS,QAAE+C,GAAY7hB,GAC/B8gH,EAAaC,IAAkB,IAAAp2B,WAAS,GACzCzB,EAAWoB,KACX02B,GAAiB,IAAAj1B,cAAak1B,GAAgBpiB,GAAmB3V,EAAUnkB,GAAoBjmD,EAAWvf,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGy5G,GAAc,CAAEz6F,OAA+B,SAAvBy6F,EAAYz6F,OAAoB,OAAS,SAAU,WAAS/b,MAAMpC,GAAWA,EAAOoG,QAAQpG,UAAS,CAACyW,IACxQoiG,GAAsB,KAAAC,6BAA4Bt/F,GAASu/F,eAC3DC,EAAoB92B,GAAqBtiB,GAA4CnpD,IACrFwiG,EAAqB/2B,GAAqBhiB,GAA6CzpD,IACvF/c,EAAWwoF,GAAqB1+B,IAChC01D,EDXsB,MAC5B,MAAM,YAAEzxB,EAAW,WAAED,EAAU,SAAEG,EAAQ,cAAElB,GAAkBU,KACvDgyB,GAAsB,IAAA5zG,QAAO,IACnC,OAAO,IAAAm+E,cAAYtpF,MAAOu+G,EAAgBS,KACtC,IACID,EAAoB1zG,QAAUgiF,EAAY,6BAE1C,CAAER,SAAU,IACZ,MAAMoyB,QAAqBV,EAAeS,GACtCD,EAAoB1zG,SACpBghF,EAAc0yB,EAAoB1zG,SAEtC+hF,EAAW,gCACXswB,GAAauB,EACjB,CACA,MAAOhrG,GACC8qG,EAAoB1zG,SACpBghF,EAAc0yB,EAAoB1zG,UAElC,SAAqB4I,GACrBs5E,EAAS,wCAGTA,EAAS,6BAEjB,IACD,GAAG,ECfgB2xB,IAChB,WAAEze,EAAU,YAAED,GAAgBE,KAC9Bye,GAAc,IAAA71B,cAAY,KAC5Bg1B,GAAe,GACf,MAAMU,EAAe,CACjBj7F,OAAQ,MACRpd,UAGJ,QAAU43G,GACVO,EAAcP,EAAgBS,GAAch3G,MAAK,IAAMs2G,GAAe,IAAO,GAC9E,CAACC,EAAgB53G,IACdy4G,GAAe,IAAA91B,cAAY,KAC7B,IAAI/mF,EAAIswB,EAAIK,EACZutE,EAAW,CACP4e,SAAU,EAAGC,uBAAsB9tC,mBAC/B8sC,GAAe,IAEf,QAAUC,GACV/d,IACAse,EAAcP,EAAgB,CAC1Bx6F,OAAQ,OACRytD,eACA8tC,uBACAC,YAAaD,EACb34G,UACDqB,MAAK,IAAMs2G,GAAe,IAAO,EAExCgB,qBAAsBhjG,QAAuG,QAA9F/Z,EAAKjD,aAA2C,EAASA,EAASkgH,8BAA2C,IAAPj9G,GAAgBA,GACrJivE,aAAcl1D,QAAoG,QAA3FuW,EAAKvzB,aAA2C,EAASA,EAASmgH,2BAAwC,IAAP5sF,GAAgBA,GAC1I6sF,qBAAsBpjG,QAA0G,QAAjG4W,EAAK5zB,aAA2C,EAASA,EAASqgH,iCAA8C,IAAPzsF,GAAgBA,IAC1J,GACH,CAAC5zB,EAAUqH,EAAO43G,EAAgB/d,IAGrC,MAAO,CACHof,kBAHsBvB,GAAeI,GAAuBG,EAI5DiB,mBAHuBxB,GAAeI,GAAuBI,EAI7DM,cACAC,eACH,ECtDE,SAASU,GAAiC9yB,EAAMzvF,GACnD,MAAM,kBAAEwiH,EAAiB,mBAAEC,EAAkB,YAAEb,EAAW,aAAEC,EAAY,YAAE38C,GAAgBllE,EACpF0iH,EAAUx9C,EACVuqB,EAAKj/D,cAAc,CAAEzxB,GAAI,mCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,qCAC/B,MAAO,CACH,CACIwG,KAAM,SACNo9G,OAAQ,mBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,6BACnC8jH,SAAUJ,EACV/R,QAASmR,EACTa,UACA9Z,UAAW,uDAEf,CACIrjG,KAAM,SACNo9G,OAAQ,kBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,4BACnC8jH,SAAUL,EACV9R,QAASkR,EACTc,UACA9Z,UAAW,qDAGvB,CCxBO,SAASka,GAA2BrzB,EAAMzvF,GAC7C,MAAM,kBAAEwiH,EAAiB,mBAAEC,EAAkB,uBAAEM,EAAsB,YAAEnB,EAAW,aAAEC,EAAY,iBAAEmB,EAAgB,wBAAEC,EAAuB,YAAE/9C,GAAiBllE,EACxJ0iH,EAAUx9C,EACVuqB,EAAKj/D,cAAc,CAAEzxB,GAAI,mCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,qCAC/B,OAAO,KAAQ,CACX,CACIwG,KAAM,SACNo9G,OAAQ,mBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,qCACnC2xG,QAASmR,EACTgB,SAAUJ,EACVC,UACAtW,KAAM,mBACNxD,UAAW,8BAEf,CACIrjG,KAAM,SACNo9G,OAAQ,kBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,oCACnC2xG,QAASkR,EACTiB,SAAUL,EACVE,UACAtW,KAAM,mBACNxD,UAAW,6BAEfqa,GAA2B,CACvB19G,KAAM,SACNo9G,OAAQ,iBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,uCACnC2xG,QAASsS,EACTH,SAAUE,EACVL,UACAtW,KAAM,gBACNxD,UAAW,mCAGvB,CClCO,MCDMsa,GAA+BviH,IACxC,MAAM,OAAEoE,EAAM,UAAEq9F,GAAczhG,EAExBkhB,EADW0oE,GAAqBz5B,IACblqD,IAAI7B,EAAO8c,SACpC,OAAKA,EAKE,gBAAoBugF,EAAW7iG,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEkhB,QAASA,MAHtE9a,QAAQo8G,MAAM,2FACP,KAE0E,E,4BCXzF,MACMC,GAAc,GAiBPC,GAAgB1iH,IACzB,MAAM,KAAEuD,EAAI,SAAEo/G,EAAWF,IAAgBziH,GAClC4iH,EAAWC,IAAgB,IAAA74B,WAAS,GACrC8E,GAAO,EAAAC,GAAA,KACP+zB,GAAgB,IAAAt2G,UAAQ,KAC1B,MAAMu2G,EAvBM,GAuBMJ,EAClB,IAAIK,EAAsB,EAC1B,IAAK,IAAIz8G,EAAI,EAAGA,EAAIhD,EAAKoG,OAAQpD,IAS7B,GARgB,OAAZhD,EAAKgD,IAA2B,OAAZhD,EAAKgD,IAA2B,SAAZhD,EAAKgD,GAG7Cy8G,GA7BI,GA2ByBA,EA3BzB,GAgCJA,IAEAA,EAAsBD,EACtB,OAAOx8G,EAGf,OAAO,IAAI,GACZ,CAAChD,EAAMo/G,IACV,OAAQ,gBAAoB,MAAO,CAAE1a,UAAW,oBAC5C,gBAAoB,MAAO,CAAEA,UAAW,KAAG,2BAA4B,CAAE,yBAA0B6a,KAAoBA,GAAiBF,EAAa,gBAAoB,WAAgB,KACrL,gBAAoB,OAAQ,KAAMr/G,EAAKif,MAAM,EAAGsgG,EAAgB,IAChE,gBAAoB,OAAQ,CAAEza,MAAO,CAAE4a,WAAY,SAAY,MAAe,gBAAoB,OAAQ,KAAM1/G,IACpHu/G,EAAiB,gBAAoB,SAAU,CAAE7a,UAAW,0BAA2B8H,QAAS,IAAM8S,GAAcK,IAAiBA,KAAgBN,EAC/I9zB,EAAKj/D,cAAc,CAAEzxB,GAAI,iCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,kCAAsC,KAAM,E,gBCvC5E,MAAM+kH,GAAiC,CAC1C,CAAElX,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UAKAmX,GAAkC,CAC3C,QAAS,CAAC,EAAG,GACb,QAAS,CAAC,EAAG,GACb,QAAS,CAAC,EAAG,GACb,QAAS,CAAC,GAAI,GACd,QAAS,CAAC,GAAI,GACd,QAAS,CAAC,GAAI,GACd,QAAS,CAAC,EAAG,GACb,QAAS,CAAC,EAAG,GACb,QAAS,CAAC,EAAG,GACb,QAAS,EAAE,EAAG,GACd,QAAS,EAAE,EAAG,GACd,QAAS,EAAE,EAAG,IAKLC,GAAoBrjH,GAAW,gBAAoB,KAAa,CAAEqwB,OAAQrwB,EAAMqwB,QACzF,gBAAoBizF,GAAsB1kH,OAAOiI,OAAO,CAAC,EAAG7G,KAInDujH,GAA2BvjH,GAAW,gBAAoB,KAAa,CAAEqwB,OAAQrwB,EAAMqwB,QAChG,gBAAoBmzF,GAA6B5kH,OAAOiI,OAAO,CAAC,EAAG7G,KAI1DyjH,GAAkB,EAAGxb,gBAC9B,MAAMyb,GAAiB,EAAAC,GAAA,GAAc,gBACrC,OAAQ,gBAAoB,MAAO,CAAE1b,UAAW,KAAG,wBAAyB,CACpE,YAAayb,EACb,mCAAoCzb,GACrCA,IACH,gBAAoB,MAAO,CAAEA,UAAW,4BAA8B,EAExEqb,GAAwBtjH,IAC1B,MAAM,aAAE4jH,EAAeR,IAAoCpjH,EAC3D,OAAQ,gBAAoBwrG,GAAA,GAAoB,CAAEqY,aAAc7jH,EAAM6jH,aAAcC,UAAW,EAAGC,gBAAgB,GAC9G,gBAAoBN,GAAiB,CAAExb,UAAWjoG,EAAMioG,YACxD,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,2CAA4C+D,YAAamX,GAAgCS,aAAcA,EAAcI,WAAY,CAAEC,QAAS,SACjL,gBAAoBT,GAA6B5kH,OAAOiI,OAAO,CAAC,EAAG7G,KAAU,EAEnFwjH,GAA+BxjH,IACjC,MAAM,MAAEyI,EAAK,YAAE+X,GAAgBxgB,EAC/B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,gDAC3C,IAAQx/F,IAAU,gBAAoB,MAAO,CAAEw/F,UAAW,8BAAgCx/F,IAC1F,IAAQ+X,IAAiB,gBAAoB,MAAO,CAAEynF,UAAW,gCAC9D,gBAAoBya,GAAc,CAAEn/G,KAAMid,KAAkB,ECvElE,GAAiC,CACnC,CAAEyrF,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UAEAiY,GAA2BlkH,IACpC,MAAM,OAAEmkH,GAAWnkH,GACZoiG,EAAQM,IAAa,IAAA1Y,WAAS,GAC/Bo6B,GAAe,IAAAh5B,cAAY,KAC7BsX,GAAWN,KACFA,GAAU+hB,GACXA,KAEI/hB,IACV,GACH,CAACM,EAAWyhB,IACTE,EAAgB,KAAG,+BAAgC,CACrD,sCAAuCjiB,GACxCpiG,EAAMioG,WACT,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAEA,UAAWoc,EAAetU,QAASqU,GAC5D,gBAAoBX,GAAiB,CAAExb,UAAW,0CACtD7F,EAAU,gBAAoB2J,GAAA,GAAQ,CAAE9D,UAAW,2CAA4C+D,YAAa,GAAgC4X,aAAcR,GAAiCY,WAAY,CAAEC,QAAS,QAAUlZ,QAASqZ,EAAcE,qBAAqB,EAAMC,qBAAqB,EAAOC,QAAS,IAAIxkH,EAAMioG,aACzT,gBAAoBsb,GAAyB3kH,OAAOiI,OAAO,CAAC,EAAG7G,KAAY,KAAM,EC9BhFykH,GAAmCzkH,IAC5C,IAAIqE,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EAAIC,EAC5B,MAAM,OAAEnyB,EAAM,QAAE8c,GAAYlhB,EACtBylB,EAA4J,QAAjJuP,EAAgG,QAA1FL,EAAqC,QAA/BtwB,EAAKD,EAAOuyE,qBAAkC,IAAPtyE,OAAgB,EAASA,EAAGmc,mBAAgC,IAAPmU,OAAgB,EAASA,EAAGlP,eAA4B,IAAPuP,GAAgBA,EACpLxU,EAA0J,YAAhD,QAA1F6V,EAAqC,QAA/BD,EAAKhyB,EAAOuyE,qBAAkC,IAAPvgD,OAAgB,EAASA,EAAG5V,mBAAgC,IAAP6V,OAAgB,EAASA,EAAG0D,QAAuB31B,EAAOoc,YAAcU,EAAQA,QAAQwjG,QAC1MC,EAAqBnkG,aAAiD,EAASA,EAAYo9D,OAC3FgnC,GAAoB,EAAAv6G,EAAA,KAAe,QAAUjG,IAC7CygH,EAAkB14B,KAClB24B,EAAe,CACjBx9G,KAAM,SACN1C,KAAkJ,YAAhD,QAA1F2xB,EAAqC,QAA/BD,EAAKlyB,EAAOuyE,qBAAkC,IAAPrgD,OAAgB,EAASA,EAAG9V,mBAAgC,IAAP+V,OAAgB,EAASA,EAAGwD,QAAuB,SAAW,UACxKvZ,YAAamkG,GAEjB,OAAIl/F,GAAWk/F,GAA6C,KAAvBA,EACzB,gBAAoBT,GAAyB,CAAEjc,UAAW,sBAAsB8c,GAAA,GAAyBH,KAAsBpkG,YAAamkG,EAAoBR,OAAQ,IAAMU,EAAgBp4B,yBAAyBq4B,KAE5N,IAAI,ECHTE,GAAoC,EAAG5gH,SAAQ8c,UAASooB,SAAQi0B,UAAS0nD,gBAAeh3B,mBAAkB8tB,2BAC5G,MAAMjtB,GAAO,EAAAC,GAAA,KACPm2B,GAAU,QAAyBhkG,IACjCze,IAAK0b,GAAc/Z,GACrB,iBAAEs9G,EAAgB,kBAAEC,EAAiB,YAAEV,EAAW,aAAEC,GAAiBhB,GAAiB,CACxF/hG,YACA1V,OAAO,QAAYrE,IAAW0qF,EAAKj/D,cAAc,CAAEzxB,GAAI,wBACvD8iB,aAEE,2BAAE60E,EAA0B,8BAAE/nC,EAA6B,uBAAEkoC,GAA2BhB,KACxFlwB,EAAmB4kB,GAAqB7kB,IACxCs9C,GAAmB,IAAAj3B,cAAY,KACjC8K,EAAuB/3E,EAAU,GAClC,CAAC+3E,EAAwB/3E,IACtBgnG,GAAyBv6G,EAAexG,IACxC,UAAEghH,EAAS,WAAEC,EAAU,UAAEC,EAAS,SAAEC,GN3BhB,CAAClmH,IAC3B,MAAM,QAAE6hB,EAAO,OAAE9c,GAAW/E,GACrBgmH,EAAYG,IAAiB,IAAAx7B,WAAS,GACvCo7B,GAAY,IAAAh6B,cAAY,IAAMo6B,GAAc,IAAQ,IACpDD,GAAW,IAAAn6B,cAAY,IAAMo6B,GAAc,IAAO,KAClD,yBAAEC,GAA6B3iB,KAC/B4iB,EAQV,SAA6BrmH,EAAQomH,EAA0BD,GAC3D,MAAM,iBAAE9D,EAAgB,kBAAEC,EAAiB,sBAAEwD,EAAqB,YAAElE,EAAW,aAAEC,EAAY,iBAAEmB,EAAgB,wBAAEC,EAAuB,OAAEl+G,GAAY/E,EAChJyvF,GAAO,EAAAC,GAAA,KACPjuF,EAAY8oF,GAAqB1iB,GAA2B9iE,EAAO3B,MACzE,OAAO,IAAA+J,UAAQ,KACqBi5G,EAE1BtD,GADAP,IAEwB9yB,EAAM,CAChC+yB,mBAAoBH,EACpBI,oBAAqBH,EACrBS,wBAAyB+C,EACzBlE,YAAa,KACTuE,GAAc,GACdvE,GAAa,EAEjBC,aAAc,KACVsE,GAAc,GACdtE,GAAc,EAElBmB,iBAAkB,KACdmD,GAAc,GACdnD,GAAkB,EAEtBC,0BACA/9C,YAAaA,GAAYzjE,aAA6C,EAASA,EAAU8L,UAE9F,CACC64G,EACA3kH,EACA4gH,EACAC,EACAwD,EACAlE,EACAC,EACAmB,EACAC,EACAxzB,EACA02B,GAER,CAhD6BG,CAAoBtmH,EAAQomH,EAA0BD,GAM/E,MAAO,CAAEF,WALS,IAAA94G,UAAQ,IACfi5G,EACDA,EAAyBvkG,EAAS9c,EAAQshH,EAAkBN,EAAW,QACvEM,GACP,CAACD,EAA0BvkG,EAAS9c,EAAQshH,EAAkBN,IAC7CC,aAAYE,WAAUH,YAAW,EMeEQ,CAAe,CAClE1kG,UACA9c,SACAs9G,mBACAC,oBACAwD,wBACAlE,cACAC,eACAmB,mBACAC,wBAAyBvsB,GAA8B/wB,GAAoBhX,KAEzE,mCAAEy1C,EAAkC,6BAAEC,EAA4B,eAAEN,EAAc,iBAAEC,GAAsB2B,KAC1G6gB,GAA6B,IAAAr5G,UAAQ,IAAMi3F,EAAmCviF,EAAS9c,IAAS,CAACq/F,EAAoCviF,EAAS9c,IAC9I0hH,GAAuB,IAAAt5G,UAAQ,IAAMk3F,EAA6BxiF,EAAS9c,IAAS,CAACs/F,EAA8BxiF,EAAS9c,IAC5HhD,EAAWwoF,GAAqB1+B,IACtC,OAAQ,gBAAoBwwD,GAAe,CAAEzT,UAAW,KAAG8T,EAAsB,qBAAsB,2BAA4BiB,GAAmB54G,EAAOQ,KAAMsgH,IAAW57E,OAAQA,GAClL,gBAAoB20E,GAA4B,CAAEN,eAAiBL,IAC3D,IAAIj5G,EACJ,QAAyC,QAA/BA,EAAKD,EAAOuyE,qBAAkC,IAAPtyE,OAAgB,EAASA,EAAG0hH,YAAe,gBAAoB9G,GAAuB,CAAEx2G,MAAOrE,EAAOqE,MAAO60G,aAAcA,GAAgB,EAC7LM,0BAA2B,IAAO,gBAAoB,MAAO,CAAE3V,UAAW,oBACxE7mG,aAA2C,EAASA,EAAS4kH,oBAAuB,gBAAoBvB,GAAiC,CAAEvjG,QAASA,EAAS9c,OAAQA,EAAQklC,OAAQA,IAAa,KACnM,gBAAoBu8E,EAA4B,CAAE3kG,QAASA,EAAS9c,OAAQA,EAAQg+F,OAAQijB,EAAYtV,QAASwV,EAAU/gH,MAAO8gH,KAAgBvH,mBAAoB,IACjKsH,EAGG,gBAAoBS,EAAsB,CAAE5kG,QAASA,EAAS9c,OAAQA,EAAQg+F,OAAQijB,EAAYta,QAASqa,EAAW5gH,MAAO8gH,IAF1H,OAGV,EAAGhI,eAAcD,iBAAmB,gBAAoBgC,GAAkB,CAAE/B,aAAcA,EAAcD,YAAaA,EAAan8F,QAASA,EAAS9c,OAAQA,EAAQ6gH,cAAeA,EAAeh3B,iBAAkBA,EAAkB1wB,QAASA,EAAS6lC,eAAgBA,EAAgBC,iBAAkBA,MAAuB,EChDrU4iB,GAAgB,gBAHO,CAChCC,eAAgB,CAACC,EAAUC,EAAeC,KAA1B,ICMPC,GAAsB,MAAUr3B,GAdZ,EAACA,EAAMsZ,EAAiB,CAAEC,cAAgBC,IAAW,MAClFF,EAAeC,cAAc,IAAIE,YAAY,qBAAsB,CAE/DC,SAAS,EACTC,OAAQ,CACJ3Z,UAEL,EAO+Cs3B,CAAyBt3B,EAAM+Z,SAAS,KCVxFwd,GAAyB,CAACh+G,EAASi+G,EAAWC,KAChDD,EAAUE,UAAYn+G,EAAQo+G,UAAYH,EAAUG,UAAYF,CAAY,EAE1EG,GAAiC,CAACr+G,EAASi+G,KAC7C,GAAIj+G,GAAWi+G,EAAW,CACtB,MAAMl9G,EAASf,EAAQo+G,UAAYH,EAAUG,UACvCE,EAAat+G,EAAQ80G,aAE3B,OADqBmJ,EAAUnJ,aACT/zG,EAASu9G,CACnC,CACA,OAAO,CAAK,EAKHC,GAAkB,cAAiB,SAAyB/mH,EAAOyC,GAC5E,MAAQukH,QAASC,EAAU,MAAK,gBAAEC,EAAkBV,GAAsB,SAAEj6G,GAAavM,EAAOmnH,GAAW,SAAOnnH,EAAO,CAAC,UAAW,kBAAmB,aAClJonH,GAAe,IAAAn6G,WACrB,IAAAo6G,qBAAoB5kH,GAAK,IAAM2kH,EAAaj6G,UAC5C,MAAMm6G,GAAiB,IAAA96G,UAAQ,KACpB,CACH05G,eAAgB,CAAC19G,EAASk+G,EAtBR,EAsB8Ca,EAA0BV,MACtF,GAAIO,EAAaj6G,QAAS,CACtB,MAAMs5G,EAAYW,EAAaj6G,QAC3Bo6G,EAAwB/+G,EAASi+G,IACjCS,EAAgB1+G,EAASi+G,EAAWC,EAE5C,MAGT,CAACQ,EAAiBE,IACfI,GAAgB,IAAAp8B,cAAY,MAC1Bg8B,aAAmD,EAASA,EAAaj6G,UACzEm5G,GAAoBc,EAAaj6G,QACrC,GACD,IACH,OAAQ,gBAAoB84G,GAAcx5G,SAAU,CAAExC,MAAOq9G,GACzD,gBAAoBL,EAASroH,OAAOiI,OAAO,CAAC,EAAGsgH,EAAU,CAAE1kH,IAAK2kH,EAAcK,SAAUD,IAAkBj7G,GAClH,ICxCam7G,GAAoC,I,gBCD1C,SAASC,GAAwBC,EAAqBC,EAAqBC,GAC9E,GAAKD,IAAuBC,EAI5B,OADYF,EAAoB7tG,WAAW4H,IAAgB,QAAgBA,EAAYhb,QAAQlE,IAAKolH,EAAoBlhH,QAAQlE,OACnH,EAAIolH,OAAsB5jH,CAC3C,CAYO,SAAS8jH,GAAoBt/G,GAChC,OAAOA,EAAMm1E,OAAO3lE,QAAQ,kBAAmB,KACnD,CCjBO,MAAM+vG,GAAsBhoH,IAC/B,MAAM,kBAAEioH,EAAiB,gBAAEC,EAAe,kBAAEC,EAAiB,oBAAEC,EAAmB,0BAAEC,EAAyB,2BAAEC,EAA0B,oBAAEC,EAAmB,OAAEnkH,EAAM,2BAAEokH,GAAgCxoH,EAClMyoH,EAAuBF,GACzBZ,GAAwBY,EAAqBH,EAAqBC,GAEhEK,IAD4BH,aAAiE,EAASA,EAAoB5+G,UAE3H0+G,GACDF,IACCF,IACAK,EACCK,KAAeF,GAAwBC,KACxCT,IACAC,GACDC,IACCE,IACAC,EACCxS,EAAU,KAAG,wBAAyB,uBAAwB,iBAAkB,CAClF,oBAAqB6S,IAEnBC,GAAe,IAAAx9B,cAAa5sF,IAC9B,MAAM,QAAEqqH,GAAYrqH,EAAEsgD,OAChB2kC,EAAiB2kC,EAAsBA,EAAoBzhH,QAAQlE,SAAMwB,EAE/EukH,EAA2BK,EAASplC,EAAe,GACpD,CAAC+kC,EAA4BJ,IAChC,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,QAAS,CAAEngB,UAAW6N,EAASgT,QAAS,iCACxD,gBAAoB,QAAS,CAAE7gB,UAAW,wCAAyC7pG,GAAI,gCAAiCwG,KAAM,WAAYikH,SAAUP,GAA8BH,EAAmBjG,SAAUoG,EAA4BS,SAAUH,IACrP,gBAAoB,OAAQ,CAAE3gB,UAAW,0BACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,6BAChD8pH,EAAkB,gBAAoB,MAAO,CAAEjgB,UAAW,qBAAwB,OACrFigB,GAAmBQ,EAAqB,gBAAoB,MAAO,CAAEzgB,UAAW,uCAAwC,QAAgB7jG,GAAW,gBAAoB,KAAkB,CAAEhG,GAAI,+CAAoD,gBAAoB,KAAkB,CAAEA,GAAI,gDAAqD,KAAM,EC3BnW,SAAS4qH,GAAgBxgH,GACrB,OAAOP,KAAKyB,KAAKlB,EAAQygH,wBAAwB7nG,MACrD,CACO,SAAS8nG,GAAkBzgH,EAAOD,GACrC,MAAM2gH,EAAeH,GAAgBxgH,IAC/B,YAAE4gH,GAAgB5gH,EACxB,GAAI2gH,GAAgBC,EAChB,OAAO3gH,EAEX,MAAM4gH,EAAc5gH,EAAMkB,OACpB2/G,EAAWD,GAAeF,EAAeC,GACzCG,EAAoBthH,KAAKuhH,MAZV,IAYgBF,GAGrC,MAAO,GAFK7gH,EAAMghH,OAAO,EAAGF,MACf9gH,EAAMghH,OAAOJ,EAAcE,EAAmBF,IAE/D,CAcA,MAAMK,WAAsB,EAAAC,cACxB5qH,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAK0qH,QAAU,cACf1qH,KAAKkZ,MAAQ,CACT3P,MAAOzI,EAAMuM,SACbs9G,aAAa,EAErB,CACAC,oBACI5qH,KAAK6qH,YACT,CACAC,iCAAiCC,GACzB/qH,KAAKc,MAAMuM,WAAa09G,EAAU19G,UAClCrN,KAAK+sF,SAAS,CACVxjF,MAAOwhH,EAAU19G,SACjBs9G,aAAa,GAGzB,CACAK,qBACQhrH,KAAKkZ,MAAMyxG,aAGf3qH,KAAK6qH,YACT,CACAA,aACI,MAAMvhH,EAAUtJ,KAAKc,MAAMmqH,WAAWjrH,MAChCuJ,EAAQvJ,KAAKc,MAAMuM,SACnB48G,EAAeH,GAAgBxgH,GACjC2gH,EAAe,GAAKA,EAAe3gH,EAAQ4gH,aAC3ClqH,KAAK+sF,SAAS,CAAExjF,MAAOygH,GAAkBzgH,EAAOD,GAAUqhH,aAAa,GAE/E,CACAO,sBAEIlrH,KAAK+sF,SAAS,CACVxjF,MAAOvJ,KAAKc,MAAMuM,SAClBs9G,aAAa,GAErB,CACAQ,uBACI,OAAQ,gBAAoB7e,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,EAAGvG,eAAgB7kH,KAAKc,MAAMuqH,2BACrG,gBAAoBxe,GAAA,GAAQ,CAAEC,YAAa9sG,KAAKc,MAAMwqH,oBAAsBtrH,KAAKkZ,MAAMyxG,YAAc3qH,KAAKc,MAAMuM,SAAW,IAC3HrN,KAAKurH,aACb,CACAA,aACI,MAAMxD,EAAU/nH,KAAKc,MAAMgnH,QAC3B,OAAQ,gBAAoBC,EAAS,CAAExkH,IAAKvD,KAAK0qH,QAAS3hB,UAAW,KAAG/oG,KAAKc,MAAMioG,UAAW,YAAa,CACnG,eAAgB/oG,KAAKkZ,MAAMyxG,YAC3B,YAAa3qH,KAAKkZ,MAAMyxG,eACtB3qH,KAAKkZ,MAAM3P,MACzB,CACAokG,SACI,OAAI3tG,KAAKkZ,MAAMyxG,aAAe3qH,KAAKc,MAAM0qH,eAC9BxrH,KAAKmrH,uBAETnrH,KAAKurH,YAChB,EAEJf,GAAciB,aAAe,CACzB1iB,UAAW,GACX+e,QAAS,OACTwD,mBAAoB,CAAC,CAAEve,MAAO,UAC9Bse,2BAA2B,EAC3BJ,WAAW/iC,GAEAA,EAAQwiC,QAAQz8G,QAE3Bu9G,gBAAgB,G,2BCrGb,MAAME,GAAuBhnH,GACzBA,GAAoB,WAAbA,EAAIgB,KAEtB,SAASimH,GAAiB7hH,GAEtB,OAA0B,IADHpK,OAAOD,KAAK,KAAQqK,EAAc,cAAcW,MAE3E,CACA,MAAM,GAAsB,CAACwuB,EAAGC,IAAMA,EAAEqlD,UAAYtlD,EAAEslD,UAChDH,GAAkB,CAACnlD,EAAGC,IACjBD,EAAE1vB,MAAM80E,cAAcnlD,EAAE3vB,OAEnC,SAASqiH,GAAY9hH,GACjB,OAAOA,EAAawZ,QAAQg7D,KAAKF,GACrC,CACA,SAAS,GAAwBt0E,GAC7B,OAAOA,EAAawZ,QAAQg7D,MAAK,CAACrlD,EAAGC,IAC7BD,EAAEslD,YAAcrlD,EAAEqlD,UACXH,GAAgBnlD,EAAGC,GAEvB,GAAoBD,EAAGC,IAEtC,CACA,MAIa2yF,GAAoB,CAC7BtiH,MAAO,mCACP7D,KAAM,UAKGomH,GAAc,CACvBviH,MAAO,6BACP7D,KAAM,UAKGqmH,GAAgB,CACzBxiH,MAAO,+BACP7D,KAAM,UAKGsmH,GAAkB,CAC3BziH,MAAO,iCACP7D,KAAM,UAoDH,SAASumH,GAAiBniH,EAAcoiH,EAAkB,KAAMC,EAAgB,MACnF,IAAI7mH,EAAQ4mH,EAXT,SAA8BpiH,EAAcoiH,GAC/C,MAAME,EAAStiH,EAAazD,QAAQq4B,GAAMA,EAAEx/B,KAAOgtH,EAAgBhtH,KACnE,OAAIktH,EAAO3hH,OAAS,EARxB,SAA6ByhH,EAAiBE,GAC1C,MAAO,CAACP,GAAmBK,EAAiBJ,MAAgBF,GAAYQ,GAC5E,CAOeC,CAAoBH,EAAiBE,GAEzC,CAACF,EACZ,CAMUjV,CAAqBntG,EAAcoiH,GAlCtC,SAA4BpiH,GAC/B,IAAKA,EAAaW,OACd,MAAO,GAEX,MAAMnF,EAAQ,GAAwBwE,GACtC,IAAK6hH,GAAiBrmH,GAAQ,CAC1B,MAAMgnH,EAA6B,KAAUhnH,GAAQ+B,GAAMA,EAAEk3E,UAAY,IAAG9zE,OACtE8hH,EAAcxjH,KAAKC,IAtDH,EAsD8BsjH,GAC9CE,EAAmB,CAACX,MAAsBvmH,EAAMge,MAAM,EAAGipG,IAC/D,OAAIA,EAAcjnH,EAAMmF,OACb,IAAI+hH,EAAkBV,MAAgBF,GAAYtmH,EAAMge,MAAMipG,KAElEC,CACX,CACA,OAAOZ,GAAYtmH,EACvB,CAoBUmnH,CAAmB3iH,GAIzB,OAHIqiH,IACA7mH,EAvDR,SAAiCwE,EAAcy/G,GAC3C,OAAIoC,GAAiB7hH,GACV,CAACkiH,GAAiBzC,EAAsBwC,MAAkBjiH,GAE9D,CAACkiH,GAAiBzC,KAAyBz/G,EACtD,CAkDgB4iH,CAAwBpnH,EAAO6mH,IAEpC7mH,CACX,C,eC9GO,MAAMqnH,GAAkB7rH,IAC3B,MAAM+E,GAAO,IAAAkI,QAAO,MACd6+G,GRH4B,IAAAz/G,YAAW45G,KQIvC,eAAEC,EAAc,aAAEQ,EAAY,wBAAEa,EAAuB,UAAEtf,EAAS,SAAE17F,EAAQ,eAAEw/G,EAAgB/E,QAASC,EAAU,OAAWjnH,EAUlI,OATA,IAAAkN,YAAU,KACN,GAAIg5G,EAAgB,CAChB,MAAM19G,EAAUzD,EAAKoI,QACrB2+G,EAAO5F,eAAe19G,EAASk+G,EAAca,GACzCwE,GACAA,GAER,IACD,CAACrF,EAAca,EAAyBuE,EAAQ5F,EAAgBnhH,EAAMgnH,IACjE,gBAAoB9E,EAAS,CAAEhf,UAAWA,EAAWxlG,IAAKsC,GAAQwH,EAAU,E,4BCXxF,MACMy/F,GAAc,CAAC,CAAEC,MAAO,SAAW,CAAEA,MAAO,UAC5Cue,GAAqB,CACvB,CAAEve,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,IACvC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,GAAIyuE,EAAG,KAIpC8f,IAA4B,SAAe,CAC7C,mCAAoC,CAAE5tH,GAAI,oCAC1C,6BAA8B,CAAEA,GAAI,8BACpC,+BAAgC,CAAEA,GAAI,gCACtC,iCAAkC,CAAEA,GAAI,oCAEtC6tH,GAAuB,EAAG7tH,KAAIqK,QAAQ,GAAIyjH,WAAU70B,aAAY80B,cAAapc,cAC/E,GAAImc,EACA,OAAO,gBAAoB,MAAO,CAAEjkB,UAAW,oCAAsCx/F,GAEzF,MAAMsuG,EAAa,KAAG,eAAgB,yBAA0B,KAAK34G,IAAM,KAAK2mH,GAAA,GAAyBt8G,KAAU,CAC/G,cAAe4uF,EACf,eAAgB80B,IAEpB,OAAQ,gBAAoB,MAAO,CAAElkB,UAAW8O,EAAYhH,QAASA,GACjE,gBAAoB2Z,GAAe,CAAEc,mBAAoBA,IAAsB/hH,GAAQ,EAE/F,SAAS2jH,GAAgCC,GACrC,MAAO,CACHjuH,GAAIiuH,EAAG1lH,QAAQvI,GACfqK,MAAO4jH,EAAG1lH,QAAQ8B,MAClBg1E,UAAW4uC,EAAG5uC,UAEtB,CACO,MAAM6uC,GAAuBtsH,IAChC,MAAM,UAAEioG,EAAY,wBAAuB,UAAEtkD,GAAY,EAAK,SAAE6mD,GAAW,EAAK,oBAAE+hB,EAAmB,kBAAEC,EAAiB,qBAAE/D,EAAoB,MAAErnG,EAAK,sBAAEqrG,EAAqB,oBAAElE,EAAmB,UAAEpqG,GAAene,EAC5M8uF,GAAO,EAAAC,GAAA,MACP,aAAE29B,EAAY,oBAAEnI,GA2DnB,SAAuB/Z,GAC1B,MAAO+Z,EAAqBoI,IAA0B,IAAA3iC,WAAUwgB,IAChE,IAAAt9F,YAAU,KACNy/G,GAAwBniB,EAAS,GAClC,CAACA,IAMJ,MAAO,CACHkiB,cANiB,IAAAthC,cAAY,KAC7BwD,YAAW,KACP+9B,GAAuB,EAAK,GAC7B,IAAI,GACR,IAGCpI,sBAER,CAzEkDqI,CAAcpiB,GACtDqiB,EAAyBpE,EAAuBA,EAAqB9hH,QAAQvI,GAAK,KACxF,IAAI0uH,EAEAC,EADAC,EAtCoB,IAwCpBC,EAAyB,MACxBtpE,GAAa6oE,IACdM,EAAsBN,EAAkB7lH,QAAQvI,GAChD4uH,EAAyBR,EAAkB7lH,QAAQ8B,MACnDskH,EAAuBP,EAAkB7lH,QAAQxB,KAEjDsnH,IACAQ,EAAyB1E,EAAoB9iH,MAAMm4B,GAAMA,EAAEj3B,QAAQxB,MAAQsnH,EAAsB9lH,QAAQxB,OAE7G,MAAM+nH,EAAc/B,GAAiB5C,EAAoBtqH,IAAImuH,IAAkCa,EAAyBb,GAAgCa,QAA0BhpH,EAAWwkH,EAAuB2D,GAAgC3D,QAAwBxkH,GAC5Q,OAAQ,gBAAoBkpH,GAAA,EAG1B,CAGEjnH,IAAK,IAAG,EAAAmE,EAAA,IAAe8T,MAAcqsF,IAAY4iB,WAAY5iB,EAAU6iB,sBAAuB,CAAC,iBAAkBC,aAAc,EAAGlrB,SAAQmrB,qBACtI,MAAMC,EAAkB,KAAG,wBAAyBprB,EAAS,aAAe,cAAe,CACvF,aAAcz+C,EACd,gBAAiBA,GACb8kE,GACAA,EAAqB9hH,QAAQxB,MAAQ4nH,IAEvCU,EAAc9pE,EACdmrC,EAAKj/D,cAAc,CAAEzxB,GAAI,YACzB2pH,GAAoBiF,GAC1B,OAAQ,gBAAoBnB,GAAgB,CAAE3F,eAAgB1b,EAAUuhB,eAAgBW,GACpF,gBAAoBgB,GAAA,EAAgB,CAAEzlB,UAAWulB,EAAiBvjH,MAAOwjH,EAAarrB,OAAQA,EAAQ2N,QAASwd,EAAgBrL,SAAUv+D,IAAc,EAC5JskD,UAAWA,EAAWsc,oBAAqBA,EAAqBoJ,kBAAkB,EAAM3hB,YAAaA,GAAa4hB,WAAY,EAAGC,mBAC5HlqE,EACO,KAEH,gBAAoBmqE,GAAA,GAAc,CAAE7lB,UAAW,uCAAwC7mF,MAAOA,EAAO5c,MAAO0oH,EAAaa,WAAYb,EAAYvjH,OAAQqkH,WAAY,EAAGjpH,WACxK,MAAMmnH,EAAWtB,GAAoB7lH,GAC/BsyF,GAAcuzB,GAAoB7lH,IAAS+nH,IAAwB/nH,EAAK3G,GACxE+tH,GAAevB,GAAoB7lH,IAAS8nH,IAA2B9nH,EAAK3G,GAClF,OAAQ,gBAAoB6tH,GAAsB,CAAExjH,MAAOyjH,EACjDp9B,EAAKj/D,cAAcm8F,GAA0BjnH,EAAK0D,QAClDs/G,GAAoBhjH,EAAK0D,OAAQyjH,SAAUA,EAAU70B,WAAYA,EAAY80B,YAAaA,EAAapc,QAAUvxG,IACnHA,EAAEyvH,iBACErD,GAAoB7lH,KAGxB8oH,IACAtB,EAAoBxnH,EAAK3G,IAAG,GAC3B,KAEhB,ECpFP,IAAU,QAAc,MACjB8vH,GAAqBluH,IAC9B,MAAM,oBAAEuoH,EAAmB,oBAAEH,EAAmB,0BAAEC,EAAyB,OAAEjkH,EAAM,sBAAEqoH,EAAqB,SAAEjiB,EAAQ,UAAE7mD,EAAS,oBAAE4oE,GAAyBvsH,EACpJyoH,EAAuBF,GACzBZ,GAAwBY,EAAqBH,EAAqBC,GAGtE,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,MAAO,CAAEpgB,UAAW,6BACpC,gBAAoB,QAAS,CAAEA,UAAW,mDAAoD6gB,QAAS,0BACnG,gBAAoB,KAAkB,CAAE1qH,GAAI,+BAChD,gBAAoB,GAAS,MAAM,EAAG0jB,aAAYs7F,iBANpC,EAACt7F,EAAYV,IAAW,gBAAoB,MAAO,CAAE6mF,UAAW,uBAAwBxlG,IAAKqf,GAC/G,gBAAoBwqG,GAAqB,CAAE9hB,SAAUA,EAAUrsF,UAAW/Z,EAAO3B,IAAKwlG,UAAW,yBAA0BsgB,oBAAqBA,QAAiEA,EAAsB,GAAIiE,kBAAmBnE,OAA4BpkH,EAAYmkH,EAAqBK,qBAAsBA,EAAsBgE,sBAAuBA,EAAuBF,oBAAqBA,EAAqB5oE,UAAWA,EAAWviC,MAAOA,KAKpZ+sG,CAAcrsG,EAAYs7F,EAAYz6F,MAAMvB,OAAS,SAC1HqnG,GAAyB9kE,IAAe,gBAAoB,MAAO,CAAEskD,UAAW,sCAAuC,QAAgB7jG,GAAW,gBAAoB,KAAkB,CAAEhG,GAAI,0CAA2CoI,OAAQ,CAAEmb,YAAaomG,GAAoBU,EAAqB9hH,QAAQ8B,UAAgB,gBAAoB,KAAkB,CAAErK,GAAI,0CAA2CoI,OAAQ,CAAEmb,YAAaomG,GAAoBU,EAAqB9hH,QAAQ8B,WAAgB,ECtBpf,SAAS2lH,GAAiCplH,GAC7C,IAAI3E,EACJ,MAAMgqH,EAMG,QANyBhqH,EJiE9BwmH,GADkCrmH,EIhE2BwE,EAAa/K,KAAKouH,IACxE,CACHjuH,GAAIiuH,EAAG1lH,QAAQvI,GACfqK,MAAO4jH,EAAG1lH,QAAQ8B,MAClBg1E,UAAW4uC,EAAG5uC,eJ8DX,KAEJ,KAAM,GAAwBj5E,WI9Db,IAAPH,OAAgB,EAASA,EAAGjG,GJ0D1C,IAAmCoG,EIzDtC,OAAO6pH,EACDrlH,EAAavD,MAAM4mH,GAAOA,EAAG1lH,QAAQvI,KAAOiwH,SAC5CpqH,CACV,C,gBCLO,MAAMqqH,GAAqBtuH,IAC9B,MAAM,oBAAEuoH,EAAmB,OAAEnkH,EAAM,2BAAEkkH,EAA0B,sBAAEmE,EAAqB,kBAAE8B,EAAiB,sBAAEC,EAAqB,4BAAEC,EAA2B,qBAAEC,EAAoB,wBAAEC,GAA6B3uH,EAC5M4uH,EAAqBhlC,GAAqBxxC,IAC1CgwE,EAAsBhkH,EAAOud,aAAeitG,EAAmB3oH,IAAI7B,EAAOud,cAC1E,8CAAEktG,EAA+CliH,OAAQmiH,GCN5D,SAAoCC,GACvC,IAAI1qH,EAAIswB,EACR,MAAM31B,GAAU,UACVuB,GAAY,UACZyuH,EAAkBplC,GAAqB5yC,IACvCjgB,EAAqB6yD,GAAqBt+B,IAC1C2jE,MAAiF,QAApD5qH,EAAK0yB,EAAmBknD,8BAA2C,IAAP55E,OAAgB,EAASA,EAAGsF,WAAiE,QAApDgrB,EAAKoC,EAAmBonD,8BAA2C,IAAPxpD,OAAgB,EAASA,EAAGhrB,UACxNjC,OAAQwnH,EAAmB,OAAEviH,IAAW,QAAqB,CACjEixD,QAASqxD,EACHntH,UACE,IAAIuC,EAAIswB,EASR,aARsB31B,EACjBuB,UAAUA,GACVQ,UACA+H,YAAW,GACXqmH,SAAS,CAAC,gBACVt0F,aAAkE,QAApDx2B,EAAK0yB,EAAmBknD,8BAA2C,IAAP55E,EAAgBA,EAAK,IAAIpG,KAAKigF,IAAQ,QAAMA,MACtHpjD,aAAkE,QAApDnG,EAAKoC,EAAmBonD,8BAA2C,IAAPxpD,EAAgBA,EAAK,IAAI12B,KAAKigF,IAAQ,QAAMA,MACtHn1E,QACUC,cAAc,EAE/B,IAAMvB,QAAQ5I,QAAQmwH,IAC7B,CAAChwH,EAASuB,EAAWw2B,IAOxB,MAAO,CACH83F,+CAPkD,IAAAriH,UAAQ,OACrD0iH,IAAwBH,GAGrBG,EAAoBl9F,MAAMq6F,IAAO,QAAgB0C,EAAwB1C,EAAG1lH,QAAQlE,SAC7F,CAAC+4G,GAAoBuT,GAAyBG,IAG7CviH,SAER,CD3BiGyiH,CAA2BhH,aAAiE,EAASA,EAAoBzhH,QAAQlE,MACvN4sH,EAAqBC,IAA0B,IAAAtlC,YAAW5lF,EAAOud,aAAe6sG,GAAyBG,IACxGY,yBAA0BC,EAA4B,wBAAEC,EAAuB,OAAE9iH,GEPtF,SAA4CvI,EAAQmkH,EAAqBmH,GAC5E,MAAO/iH,EAAQ++E,IAAa,IAAA1B,UAAS,MAC/BvnF,GAAM,QAAU2B,IACdglF,IAAKumC,GAAyBpkC,GAA8B,CAChEL,eAAgBgP,GAChB1O,aAAc,kDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,EAAM,KAGvBtmC,IAAKwmC,GAAwBrkC,GAA8B,CAC/DL,eAAgB+O,GAChBzO,aAAc,kDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,GACjBhkC,EAAU,UAAU,EAExBnuB,QAAS,KACLmuB,EAAU,QAAQ,EAEtBjuB,UAAYoyD,IACRnkC,EAAU,KAAK,KAGftC,IAAK0mC,GAA6BvkC,GAA8B,CACpEL,eAAgB3nB,GAChBioB,aAAc,sDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,EAAM,KAGvBtmC,IAAK2mC,GAA4BxkC,GAA8B,CACnEL,eAAgB5nB,GAChBkoB,aAAc,sDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,GACjBhkC,EAAU,UAAU,EAExBnuB,QAAS,KACLmuB,EAAU,QAAQ,EAEtBjuB,UAAYoyD,IACRnkC,EAAU,KAAK,IAGjB+jC,GAA0B,IAAArkC,cAAY,CAAC4kC,EAASC,KAClD,MAWMC,GAAS,QAAgB9rH,GAAU2rH,EAA0BH,EAC7DO,GAAU,QAAgB/rH,GAAU0rH,EAA2BH,EACrE,GAAIK,EACA,GAAIC,EACAC,EAAOztH,EAAKwtH,OAEX,CACD,MAAMG,EAlBoB,MAC9B,KAAM7H,aAAiE,EAASA,EAAoB5+G,QAChG,OAAO,KAGX,MAAMsjH,EAAyBmB,GAAiC7F,GAC1D8H,EAAe,KAAM9H,GAC3B,OAAO0E,EACDA,EAAuBtmH,QAAQlE,IAC/B4tH,EAAa1pH,QAAQlE,GAAG,EASQ6tH,GAClCJ,EAAOztH,EAAK2tH,QAA6EA,EAA4B,UACzH,MAGAD,EAAQ1tH,EACZ,GACD,EACC,QAAgB2B,GAChBo3G,GAAoB/4G,GACpBstH,EACAD,EACAF,EACAD,EACApH,IAUJ,MAAO,CACH57G,SACA4iH,0BAV6B,IAAAnkC,cAAahtF,KACtC,QAAgBgG,GAChB2rH,EAAwBttH,GAAK,QAAMrE,EAAI,YAGvCwxH,EAAoBntH,GAAK,QAAMrE,EAAI,WACvC,GACD,EAAC,QAAgBgG,GAASo3G,GAAoB/4G,KAI7CgtH,0BAER,CF1FyGc,CAAmCnsH,EAAQmkH,EAAqB+G,GAC/JC,GAA2B,IAAAnkC,cAAahtF,IAC1CswH,SAA4EA,EAAqBtwH,GACjGoxH,EAA6BpxH,EAAG,GACjC,CAACoxH,EAA8Bd,IAC5BxG,EAA6B,YAAXv7G,EAClBs7G,EAAoBsG,GAAmD,YAA9BO,EACzC0B,GAAoClI,MACnC+G,GAAuBnH,MACxBK,aAAiE,EAASA,EAAoB5+G,SAAWs+G,GAAqB4G,GAC9HpG,EAAuBF,GACzBZ,GAAwBY,EAAqBH,EAAqByG,GACtE,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB7G,GAAoB,CAAEO,oBAAqBA,EAAqBnkH,OAAQA,EAAQkkH,2BAA4BA,EAA4BH,kBAAmBkH,EAAqBpH,kBAAmBA,EAAmBC,gBAAiBA,EAAiBE,oBAAqBA,EAAqBC,0BAA2BwG,EAA+CrG,2BAA4BiH,MAC1Ze,GAAqC,gBAAoBtC,GAAmB,CAAE3F,oBAAqBA,EAAqBkE,sBAAuBA,EAAuBroH,OAAQA,EAAQgkH,oBAAqBA,EAAqBC,0BAA2BwG,EAA+CpG,qBAAsBA,EAAsB8D,oBAAqBgD,EAA0B/kB,SAAUikB,EAA6B9qE,UAAWskE,IAAuB,EGxBjd,SAASwI,GAAqBznH,GACjC,MAAMu/E,EAAWoB,KACX+mC,EAAgC9mC,GAAqB8G,IAyB3D,OAxBA,IAAAxjF,YAAU,IACC,KAGHq7E,EAAS5jD,GAAUpD,gCAA+B,GAAO,GAE9D,CAACgnD,IAkBG,CAAEgnC,0BAjBwB,IAAAnkC,cAAY,KACzC7C,EAAS5jD,GAAUpD,gCAA+B,GAAO,GAC1D,CAACgnD,IAe+BkmC,4BAJCiC,GAChC1nH,GACAA,EAAaW,OAAS,IACrBykH,GAAiCplH,GAE1C,CCxBe,SAAS2nH,IAAyB,OAAEvsH,IAC/C,MAAM,OAAEuI,EAAQy8E,IAAKwnC,EAAiB,OAAElpH,GAAYokF,GAA4B,CAC5EC,aAAcpvB,KAEZgyD,EAA0B/kC,GAAqBiH,IAA+C,QAAUzsF,KACxG8c,EAAU0oE,GAAqBx5B,GAAmBhsD,EAAO8c,WAC/D,QAAUA,EAAS,mDACnB,IAAAhU,YAAU,KAEN0jH,EAAkB1vG,EAAQ,GAC3B,CAAC0vG,EAAmB1vG,IACvB,MAAM,yBAAEquG,EAAwB,4BAAEd,GAAgCgC,GAAqB/oH,aAAuC,EAASA,EAAOsB,cACxI6nH,GAAsB,IAAArkH,UAAQ,KAChC,MAAMxL,GAAW,QAAgBkgB,GACjC,OAAO,IAAQlgB,IAAoBA,EAASu0B,MAAM,GAAe,GAClE,CAACrU,IACJ,OAAQ,gBAAoBotG,GAAmB,CAAElqH,OAAQA,EAAQkkH,2BAA4BuI,EAAqBtC,kBAA8B,YAAX5hH,GAAmC,YAAXA,GAAwBgiH,EAAyBpG,oBAAqB7gH,aAAuC,EAASA,EAAOs1D,oBAAqB2xD,wBAAyBA,EAAyBF,4BAA6BA,EAA6BC,qBAAsBa,GACrb,CACA,SAAS,GAAetxF,GACpB,IAAI55B,EACJ,QAAI,SAAgB45B,KACmC,QAAlC55B,GAAK,SAAe45B,UAA6B,IAAP55B,EAAgBA,EAAK,IACjE2tB,KAAK,KAG5B,C,gBCvBA,MAAM,GAAqB,CAAC,CAAEi6E,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,KACtD4kB,GAAoC9wH,IAC7C,MAAM,OAAEoE,EAAM,eAAE4gF,EAAc,MAAEv8E,GAAUzI,EACpC+wH,EAAQnnC,GAAqB,KAC5BonC,EAAWC,IAAgB,IAAAjnC,WAAS,KAAO5lF,EAAO+a,uBAAuB6S,MAAMmvC,IAClF,KAAK,QAAoCA,GACrC,OAAO,EAEX,MAAMnoD,EAAK+3G,EAAM9qH,IAAIk7D,EAAUhoD,aAC/B,OAAO,QAAgBH,aAA+B,EAASA,EAAGvW,IAAKuiF,EAAe,MAEpFksC,ECjBH,SAA+B9sH,EAAQ4gF,GAC1C,MAAMmsC,EAAavnC,GAAqB1iB,IAA2B,QAAU9iE,KACvEgtH,EAAcD,aAA+C,EAASA,EAAW5jC,SAEjFv0E,EADQ4wE,GAAqB,IAClB3jF,IAAI++E,GACrB,OAAKhsE,MAGCo4G,aAAiD,EAASA,EAAYznH,SAGrEynH,EACF7rH,QAAQ8rH,GAbkB,sCAaNA,EAAQC,cAC5Bt/F,MAAMq/F,IAAc,IAAIhtH,EAAI,OAAqC,QAA7BA,EAAKgtH,EAAQE,kBAA+B,IAAPltH,OAAgB,EAASA,EAAG2tB,MAAM+/B,IAAU,QAASA,KAAU,QAAgBA,EAAO/4C,EAAGklB,YAAW,GACtL,CDG+BszF,CAAsBptH,EAAQ4gF,IACnD,oBAAEysC,EAAmB,OAAE9kH,GEjB1B,SAAiDvI,EAAQ4gF,EAAgB0qC,GAC5E,MAAO/iH,EAAQ++E,IAAa,IAAA1B,UAAS,MAC/BvnF,GAAM,QAAU2B,IACdglF,IAAKsoC,GAAoBnmC,GAA8B,CAC3DL,eAAgBkP,GAChB5O,aAAc,kDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,EAAM,KAGvBtmC,IAAKuoC,GAAsBpmC,GAA8B,CAC7DL,eAAgBmP,GAChB7O,aAAc,kDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,GACjBhkC,EAAU,UAAU,EAExBnuB,QAAS,KACLmuB,EAAU,QAAQ,EAEtBjuB,UAAW,KACPiuB,EAAU,KAAK,KAGftC,IAAKwoC,GAAwBrmC,GAA8B,CAC/DL,eAAgBznB,GAChB+nB,aAAc,sDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,EAAM,KAGvBtmC,IAAKyoC,GAA0BtmC,GAA8B,CACjEL,eAAgBvnB,GAChB6nB,aAAc,sDACdC,WAAY,8BACZN,YAAa,KACTukC,GAAiB,GACjBhkC,EAAU,UAAU,EAExBnuB,QAAS,KACLmuB,EAAU,QAAQ,EAEtBjuB,UAAW,KACPiuB,EAAU,KAAK,IAqBvB,MAAO,CACH/+E,SACA8kH,qBApBwB,IAAArmC,cAAanqB,IACrC,MAAM6wD,GAAS,QAAgB1tH,GAAUwtH,EAAsBF,EACzDK,GAAW,QAAgB3tH,GAAUytH,EAAwBF,EAC/D1wD,EACA8wD,EAAStvH,EAAKuiF,GAGd8sC,EAAOrvH,EAAKuiF,EAChB,GACD,EACC,QAAgB5gF,GAChBo3G,GAAoBx2B,GACpBw2B,GAAoB/4G,GACpBmvH,EACAF,EACAG,EACAF,IAMR,CFtD4CK,CAAwC5tH,EAAQ4gF,EAAgBisC,GAClGgB,EAAUjB,IAAyB,UAAXrkH,GAAsBukH,GAC9CvtE,EAAuB,YAAXh3C,EACZoqG,EAAa,KAAG,6BAA8B,KAAKgO,GAAA,GAAyBt8G,KAAU,uBAAwB,iBAAkB,2BAA4B,CAC9J,yBAA0BwpH,IAExBC,GAAY,EAAA7nH,EAAA,IAAe26E,GACjC,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,QAAS,CAAEijB,UAAW8O,EAAY+R,QAASoJ,GAC3D,gBAAoB,QAAS,CAAE9zH,GAAI8zH,EAAWttH,KAAM,WAAYqjG,UAAW,iBAAkB4gB,QAASmI,EAAWjI,SAAWvqH,GAAMizH,EAAoBjzH,EAAEsgD,OAAO+pE,WAC/J,gBAAoB,OAAQ,CAAE5gB,UAAW,oBACrC,gBAAoByhB,GAAe,CAAEc,mBAAoB,GAAoBxD,QAAS,OAAQ/e,UAAW,SAAWx/F,IACxHk7C,EAAY,gBAAoB,MAAO,CAAEskD,UAAW,qBAAwB,QAC9EgqB,GAAY,gBAAoB,MAAO,CAAEhqB,UAAW,oDAAqD,QAAgB7jG,GAAW,gBAAoB,KAAkB,CAAEhG,GAAI,kDAAmDoI,OAAQ,CAAE2rH,cAAe1pH,KAAe,gBAAoB,KAAkB,CAAErK,GAAI,kDAAmDoI,OAAQ,CAAE2rH,cAAe1pH,MAAe,EG7BrZ,SAAS2pH,GAAc77E,GAC1B,MAAQ6yC,IAAKhwB,EAAe1xD,OAAQ7G,EAAY8L,OAAQ0lH,EAAyBzlH,MAAO0lH,GAA4BxmC,GAA4B,CAC5IC,aAAcrd,KAQlB,OANA,IAAAxhE,YAAU,KACNksD,EAAc7iB,EAAa,GAC5B,CAACA,EAAc6iB,IAIX,CACHv4D,aACA0xH,mBALsB,IAAA/lH,UAAQ,IACK,YAA5B6lH,GAAqE,YAA5BA,GACjD,CAACA,IAIAC,yBAER,CCbO,MAAME,GAAgCxyH,IACzC,MAAM,OAAEoE,GAAWpE,EACbsK,EAAmBs/E,GAAqB1oC,IACxC6vE,EAAQnnC,GAAqB,IAC7B6oC,EAAU7oC,GAAqBrxC,IAC/BhC,GAAe,IAAA/pC,UAAQ,IAClBlC,EAAiBrM,KAAKsH,GAAWA,EAAOoT,gBAAgBQ,eAChE,CAAC7O,KACE,WAAEzJ,EAAU,kBAAE0xH,GAAsBH,GAAc77E,GACxD,OAAIg8E,EACO,gBAAoB,OAAQ,CAAEtqB,UAAW,8DAE/CpnG,EAGG,gBAAoB,MAAO,CAAEonG,UAAW,oCAAsC39F,EAAiBrM,KAAKsH,IACxG,IAAIlB,EACJ,MAAM8U,EAAc43G,EAAM9qH,IAAIV,EAAOoT,gBAAgBQ,cACrD,QAAUA,EAAa,sDACvB,MAAMu5G,EjBHP,SAAmC7xH,EAAYsY,GAClD,OAAOtY,EAAW4E,MAAMy4B,IAAc,QAAgBA,EAAUz7B,IAAK0W,IACzE,CiBCuCgsE,CAA0BtkF,EAAYsY,EAAY+kB,WAC3EA,EAAYu0F,EAAQxsH,IAAIkT,EAAY+kB,YAAcw0F,GACxD,QAAUx0F,EAAW,sDACrB,MAAMy0F,GAAiB,QAA0Bz0F,GAC3CA,EAAUz1B,MACVy1B,EAAUA,UAAUz1B,MAC1B,OAAQ,gBAAoBqoH,GAAkC,CAAE5qH,KAAK,EAAAmE,EAAA,IAAe8O,EAAY1W,KAAMuiF,eAAgB7rE,EAAY1W,IAAKgG,MAA+C,QAAvCpE,EAAKkB,EAAOoT,gBAAgBlQ,aAA0B,IAAPpE,EAAgBA,EAAKsuH,EAAgBvuH,OAAQA,GAAU,KAZ9O,IAaP,EC3BO,SAASwuH,IAAe,OAAExuH,IACrC,OAAQ,gBAAoB,MAAO,CAAE6jG,UAAW,8CAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,0BACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,kCAChD,QAAgBgG,GAAU,gBAAoBusH,GAA0B,CAAEvsH,OAAQA,IAAY,KAC9F,gBAAoBouH,GAA8B,CAAEpuH,OAAQA,IACpE,C,gBCTO,SAAS0uH,GAAmB9yH,GAC/B,MAAM,UAAE+lH,EAAS,OAAE3hH,EAAM,iCAAE2uH,EAAgC,6BAAEC,GAAiChzH,EACxF8uF,GAAO,EAAAC,GAAA,MACNkkC,EAAkBC,IAAuB,IAAAlpC,UAAS+7B,GAKzD,OAAQ,gBAAoB,WAAgB,KAAMiN,EAAgC,gBAAoB,MAAO,CAAE/qB,UAAW,qDACtH,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,wBACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,iDAChD,gBAAoB+0H,GAAA,EAAU,CAAEpK,SAPLqK,IAC3BF,EAAoBE,GACpBL,EAAiC3uH,EAAQgvH,EAAU,EAKcnpH,MAAOgpH,EAAkB1vH,KAAMurF,EAAKj/D,cAAc,CAAEzxB,GAAI,6CAA+Ci1H,UAAW,WAAe,KAC1M,C,gBCVA,MAAMC,WAA2B,EAAA7xB,UAC7B1iG,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKq0H,aAAe,EACpBr0H,KAAKs0H,gBAAmBh1H,IAChBU,KAAKu0H,uBAAuBj1H,EAAEsgD,SACT5/C,KAAKw0H,SAASvmH,QACtBwmH,MACjB,EAEJz0H,KAAK00H,UAAap1H,IACd,MAAMq1H,EAAqB,UAAVr1H,EAAE0H,MAAoB1H,EAAEs1H,SACnCC,EAAqB,WAAVv1H,EAAE0H,KACf2tH,GAAYE,KACZv1H,EAAEyvH,iBACFzvH,EAAEw1H,mBAEFH,GACA30H,KAAKiiH,WAEL4S,GACA70H,KAAK+0H,UACT,EAEJ/0H,KAAKiiH,SAAW,KACZ,MAAM+S,EAAWh1H,KAAKc,MAAMm0H,aACtBC,EAAkBl1H,KAAKkZ,MAAMnO,MAAM2zE,OACjB,KAApBw2C,GACAl1H,KAAK+sF,SAAS,CACVhiF,MAAO,KAGXiqH,IAAaE,EACbl1H,KAAKc,MAAMmhH,SAASiT,GAGpBl1H,KAAKc,MAAMi0H,SAASC,GAExBh1H,KAAK+sF,SAAS,CACVhiF,MAAOmqH,EACPC,WAAW,IAEfn1H,KAAKo1H,iBAAiB,EAE1Bp1H,KAAK+0H,SAAW,KACZ,MAAM,aAAEE,GAAiBj1H,KAAKc,MAC9Bd,KAAKc,MAAMi0H,SAASE,GACpBj1H,KAAK+sF,SAAS,CACVhiF,MAAOkqH,EACPE,WAAW,IAEfn1H,KAAKo1H,iBAAiB,EAE1Bp1H,KAAK6pH,SAAYvqH,IACb,MAAM,MAAEyL,GAAUzL,EAAEsgD,OACpB5/C,KAAK+sF,SAAS,CAAEhiF,UAAS,KACrB/K,KAAKc,MAAM+oH,SAAS9+G,EAAM,GAC5B,EAEN/K,KAAKq1H,KAAQl+F,IACJn3B,KAAKkZ,MAAMi8G,YACZn1H,KAAK+sF,SAAS,CACVooC,WAAW,IACZ,KACCn1H,KAAKs1H,iBACL1rB,SAAS2rB,iBAAiB,YAAav1H,KAAKs0H,gBAAgB,IAEhEt0H,KAAKc,MAAM00H,iBACf,EAEJx1H,KAAKs1H,eAAiB,KAClB,MAAMG,EAAmBz1H,KAAKw0H,SAASvmH,SACjC,0BAAEynH,GAA8B11H,KAAKc,MACvC20H,IACA3rB,OAAO2H,aAAazxG,KAAKq0H,cAEzBr0H,KAAKq0H,aAAevqB,OAAOpa,YAAW,KAClC+lC,EAAiBE,QACbD,GAA6B11H,KAAK41H,gBAClCH,EAAiBhO,UAAYgO,EAAiBI,cAElDJ,EAAiB/1B,QAAQ,GAC1B,GACP,EAEJ1/F,KAAKkZ,MAAQ,CACTnO,MAAOjK,EAAMm0H,aACbE,WAAW,GAEfn1H,KAAK81H,KAAO,cACZ91H,KAAKw0H,SAAW,aACpB,CACA5J,oBACI,MAAMmL,EAAW/1H,KAAK81H,KAAK7nH,QAC3B8nH,EAASR,iBAAiB,YAAav1H,KAAKg2H,eAC5CD,EAASR,iBAAiB,cAAev1H,KAAKg2H,eAC1Ch2H,KAAKc,MAAMm1H,WACXj2H,KAAKq1H,MAEb,CACAvK,iCAAiCoL,GACzBl2H,KAAKc,MAAMm0H,eAAiBiB,EAASjB,cACrCj1H,KAAK+sF,SAAS,CACVhiF,MAAOmrH,EAASjB,cAG5B,CACAkB,uBACI,MAAMJ,EAAW/1H,KAAK81H,KAAK7nH,QAC3B8nH,EAASK,oBAAoB,YAAap2H,KAAKg2H,eAC/CD,EAASK,oBAAoB,cAAep2H,KAAKg2H,eACjDh2H,KAAKo1H,kBACL3jB,aAAazxG,KAAKq0H,aACtB,CACA2B,cAAc12H,GACVA,EAAEw1H,iBACN,CACAP,uBAAuB8B,GACnB,OAAOr2H,KAAKw0H,SAASvmH,UAAYjO,KAAKw0H,SAASvmH,QAAQqoH,SAASD,EACpE,CACAT,cACI,OAAO51H,KAAKc,MAAMmwG,KAAO,CAC7B,CACAmkB,kBACIxrB,SAASwsB,oBAAoB,YAAap2H,KAAKs0H,gBACnD,CACAiC,eAAeptB,EAAQ,CAAC,GACpB,MAAM,KAAE8H,EAAI,SAAE+R,EAAQ,UAAEa,EAAS,YAAExgH,EAAW,UAAE0lG,GAAc/oG,KAAKc,OAC7D,MAAEiK,GAAU/K,KAAKkZ,MACvB,OAAQ,gBAAoB,WAAY,CAAE6vF,UAAWA,EAAWI,MAAOA,EAAO8H,KAAMA,EAAM4S,UAAWA,EAAW6Q,UAAW10H,KAAK00H,UAAW8B,OAAQx2H,KAAKiiH,SAAU4H,SAAU7pH,KAAK6pH,SAAU9+G,MAAOA,EAAO1H,YAAaA,EAAaE,IAAKvD,KAAKw0H,SAAUxR,SAAUA,GACrQ,CACAyT,+BACI,OAAOz2H,KAAKu2H,eAAe,CAAC,EAChC,CACA5oB,SACI,OAAQ,gBAAoB,MAAO,CAAEoJ,KAAM,iBAAkBlG,QAAS7wG,KAAKq1H,MACvE,gBAAoB,MAAO,CAAE9xH,IAAKvD,KAAK81H,MAAQ91H,KAAKy2H,gCAC5D,EC1IG,SAASC,GAAmB51H,GAC/B,MAAM,YAAEwgB,EAAW,eAAEq1G,EAAc,SAAEC,GAAW,GAAU91H,EACpD8uF,GAAO,EAAAC,GAAA,KAIb,OAAQ,gBAAoB,QAAS,CAAEkZ,UAAW,YAC9C,gBAAoBqrB,GAAoB,CAAErrB,UAAW,KAAG,0DAA2DkI,KAAM,EAAGgkB,cAAe3zG,GAAe,IAAIo9D,OAAQmlC,UAAW,IAAMxgH,YAAauzH,OAC1L7xH,EACA6qF,EAAKj/D,cAAc,CACjBzxB,GAAI,0DACJ+iH,SAREl3G,IACd4rH,EAAe5rH,EAAM2zE,OAAO,EAOIskC,SAAU4T,IAClD,CDgIAxC,GAAmB3I,aAAe,CAC9B1iB,UAAW,GACX8a,UAAW,IACX5S,KAAM,EACN8jB,SAAU,KACVS,eAAgB,KAChB3L,SAAU,KACVxmH,YAAa,GACbqyH,2BAA2B,EAC3BO,WAAW,EACXjT,UAAU,GEpJd,MAAM6T,GAAqB,CAACC,EAAmBC,EAAmBC,KAC9D,IAAI7xH,EACJ,IAAK2xH,EAAkBvwG,QACnB,MAAO,CACHpmB,OAAQ,OACRmhB,YAAa,GACb21G,gBAAgB,GAGxB,MAAMC,EAAqD,YAA7BJ,EAAkBj8F,OAChD,MAAO,CACH16B,OAAQ22H,EAAkBj8F,OAC1BvZ,YAAa41G,EAAwBF,EAAqBD,EAC1DE,eAA4D,QAA3C9xH,EAAK2xH,EAAkBG,sBAAmC,IAAP9xH,GAAgBA,EACvF,EAEE,SAASgyH,GAAyBr2H,GACrC,IAAIqE,EAAIswB,EACR,MAAM,kBAAEqhG,EAAiB,OAAE5xH,EAAM,4BAAEkyH,EAA2B,2BAAEC,EAA0B,qBAAEC,GAA0Bx2H,EAChH8uF,GAAO,EAAAC,GAAA,KACP0nC,GAAgB,IAAAjqH,UAAQ,IAAM,CAChC,CACIpO,GAAI,UACJqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,sDAChCs4H,KAAM5nC,EAAKj/D,cAAc,CAAEzxB,GAAI,2DAEnC,CACIA,GAAI,SACJqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,qDAChCs4H,KAAM5nC,EAAKj/D,cAAc,CAAEzxB,GAAI,0DAEnC,CACIA,GAAI,OACJqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,sDAErC,CAAC0wF,IACE5tE,EAAU0oE,GAAqBx5B,GAAmBhsD,EAAO8c,WACxDy1G,EAAwBC,IAA6B,IAAA5sC,UAAS+rC,GAAmBC,EAAmB5xH,EAAOoc,YAA0F,QAA5Enc,EAAK6c,aAAyC,EAASA,EAAQA,eAA4B,IAAP7c,OAAgB,EAASA,EAAGqgH,WACzOmS,EAA6BC,IAAkC,IAAA9sC,UAAS5lF,EAAOoc,aAChFu2G,GAA0B,IAAA3rC,cAAa4rC,IACzCR,EAAqBpyH,EAAQ4yH,GAC7BJ,GAA2BK,GAAer4H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGowH,GAAY,CAAEz2G,YAAaw2G,MACrGF,EAA+BE,EAAe,GAC/C,CAAC5yH,EAAQoyH,EAAsBI,IAC5BM,GAAgC,IAAA9rC,cAAa/rF,IAC/C,IAAIgF,EACJ,IAAI4yE,EACJ,MAAMi/C,EAAkG,QAA5E7xH,EAAK6c,aAAyC,EAASA,EAAQA,eAA4B,IAAP7c,OAAgB,EAASA,EAAGqgH,QAC7H,SAAXrlH,GACA43E,EAAY,CACRk/C,gBAAgB,EAChB1wG,SAAS,EACTsU,OAAQ,WAEZ68F,EAA0Bb,GAAmB9+C,EAAW,GAAI,OAG5DA,EAAY,CACRk/C,eAAgBQ,EAAuBR,eACvC1wG,SAAS,EACTsU,OAAQ16B,GAEZu3H,EAA0Bb,GAAmB9+C,EAAsB,WAAX53E,EAAsBw3H,EAA8B,GAAIX,KAEpHI,EAA4BlyH,EAAQ6yE,GACrB,WAAX53E,GACAm3H,EAAqBpyH,EAAQyyH,QAAiFA,EAA8B,IAEjI,SAAXx3H,GAAgC,YAAXA,GACrBm3H,EAAqBpyH,EAAQ,GACjC,GACD,CACCA,EACA8c,EACAo1G,EACAE,EACAG,EAAuBR,eACvBU,IAOJ,OALkC,IAAAzrC,cAAa+qC,IAC3C,MAAMgB,EAAiBv4H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8vH,GAAyB,CAAER,mBAClFS,EAA0BO,GAC1Bb,EAA4BlyH,EAAQxF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmvH,GAAoB,CAAEG,mBAAkB,GAC7G,CAACH,EAAmBM,EAA6BlyH,EAAQuyH,IACpD,gBAAoB,WAAgB,KAAMJ,EAA8B,gBAAoB,MAAO,CAAEtuB,UAAW,wFACpH,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,uDAChD,gBAAoB+uH,GAAA,EAAU,CAAE5I,qBAAqB,EAAMqJ,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAEtpH,MAAOiyH,EAAezI,WAAY,EAAGjpH,UACpJ,gBAAoB,KAAsB,CAAE0D,MAAO1D,EAAK0D,MAAOiuH,KAAM3xH,EAAK2xH,KAAMr/B,WAAYtyF,EAAK3G,KAAOu4H,EAAuBt3H,OAAQ0wG,QAAS,KAChJmnB,EAA8BnyH,EAAK3G,IACnCyvH,GAAe,MAEpBP,aAAc,EAAG8J,eAAch1B,aACtC,IAAI/9F,EACJ,OAAQ,gBAAoBqpH,GAAA,EAAgB,CAAEzjH,MAA0F,QAAlF5F,EAAKoyH,EAAchxH,MAAMV,GAASA,EAAK3G,KAAOu4H,EAAuBt3H,gBAA4B,IAAPgF,OAAgB,EAASA,EAAGoE,MAAO25F,OAAQA,EAAQ2N,QAASqnB,EAAcnvB,UAAW,2EAA6E,IAExR,WAAlC0uB,EAAuBt3H,QACe,YAAlCs3H,EAAuBt3H,OAAwB,gBAAoBu2H,GAAoB,CAAEp1G,YAA2D,QAA7CmU,EAAKgiG,EAAuBn2G,mBAAgC,IAAPmU,EAAgBA,EAAK,GAAIkhG,eAAgBkB,EAAyBjB,SAA4C,YAAlCa,EAAuBt3H,SAA2B,KAG3G,MAAS,KACpM,CCjGA,MAAMg4H,GAAoB31B,GAAkB41B,YAAY5P,IAC3C6P,GAAuB,EAAGnzH,aACnC,IAAIC,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EACxB,MAAMkhG,GAAkB,QAAgBpzH,GAClC2gH,GAAA,IAAyB,EAAA16G,EAAA,IAAejG,EAAO3B,MAC/C,GACArB,EAAWwoF,GAAqB1+B,IAChCq9B,EAAWoB,KACXmsB,EAAU,KAAG,iCAAkC,mCAAoC,mBAAmB0hB,KAM5G,OAAQ,gBAAoBzQ,GAAiB,CAAE9e,UAAW6N,GACtD,gBAAoB,MAA2B,CAAEuhB,kBAAmBA,IAChE,gBAAoBvE,GAAoB,CAAE1uH,OAAQA,EAAQ4uH,6BAA4E,QAA7C3uH,EAAKjD,EAASq2H,iCAA8C,IAAPpzH,GAAgBA,EAAY0hH,UAAoG,QAAxF/wF,EAAqC,QAA/BL,EAAKvwB,EAAOuyE,qBAAkC,IAAPhiD,OAAgB,EAASA,EAAGoxF,iBAA8B,IAAP/wF,GAAgBA,EAAY+9F,iCAAkC,CAAC3uH,EAAQ2hH,KACrVx9B,EAAS1kB,GAAoCz/D,EAAO3B,IAAK7D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzC,EAAOuyE,eAAgB,CAAEovC,eAAc,IAExI,gBAAoBsQ,GAA0B,CAAEjyH,OAAQA,EAAQmyH,2BAAmE,QAAtCngG,EAAKh1B,EAAS4kH,0BAAuC,IAAP5vF,GAAgBA,EAAY4/F,kBAA8G,QAA1F1/F,EAAqC,QAA/BD,EAAKjyB,EAAOuyE,qBAAkC,IAAPtgD,OAAgB,EAASA,EAAG7V,mBAAgC,IAAP8V,EAAgBA,EAVpR,CAC7ByD,OAAQ,UACRo8F,gBAAgB,EAChB1wG,SAAS,GAOuU6wG,4BAA6B,CAAClyH,EAAQ/E,KAC1WkpF,EAAS1kB,GAAoCz/D,EAAO3B,IAAK7D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAEk/G,WAAW,GAAS3hH,EAAOuyE,eAAgB,CAAEn2D,YAAanhB,KAAW,EAC7Jm3H,qBAAsB,CAACpyH,EAAQoc,KAC9B+nE,EAASlkB,GAA+BjgE,EAAO3B,IAAK,CAChD+d,gBACD,IAEX,gBAAoBoyG,GAAgB,CAAExuH,OAAQA,KAAY,ECnC/D,SAASszH,GAAa55F,GACzB,OAAO,SAAmBA,KAAoB,SAAsBA,EACxE,CACO,IAAI65F,GAsBAC,GAhBJ,SAASC,GAAyB9yH,GACrC,OAAQ,IAAQA,SAA4Bd,IAAnBc,EAAKb,SAClC,CACO,SAAS4zH,GAAuB/yH,GACnC,OAAQ,IAAQA,SAA6Bd,IAApBc,EAAKgc,UAClC,CACO,SAASg3G,GAAyBhzH,GACrC,OAAQ,IAAQA,SAA4Bd,IAAnBc,EAAK4nE,SAClC,CACO,SAASqrD,GAA4BjzH,GACxC,OAAQ,IAAQA,SAA8Cd,IAArCc,EAAKkzH,2BAClC,CACO,SAASC,GAAmBnzH,GAC/B,OAAQ,IAAQA,SAAiCd,IAAxBc,EAAKozH,cAClC,CCpBA,SAASC,GAAkC5zH,EAAOw9G,GAC9C,MACMqW,GADe7zH,EAAMxD,UAAY,IACJyE,MAAM4yH,GAAkBA,EAAcp6F,QAAQQ,kBAAkB7lB,kBAAoBopG,IACvH,GAAIqW,EACA,OAAOA,EAAcp6F,QAAQQ,kBAAkBpjB,KAEnD,MACMi9G,GADiB9zH,EAAM3D,YAAc,IACJ4E,MAAMy0E,GAAkBA,EAAch8C,UAAUU,gBAAgBhmB,kBAAoBopG,IAC3H,OAAOsW,EAAkBA,EAAgBp6F,UAAUU,gBAAgB6yB,OAAOp2C,KAAO,EACrF,EDRA,SAAWs8G,GACPA,EAAsC,mBAAI,mBAC1CA,EAAoC,iBAAI,iBACxCA,EAAgC,aAAI,YACvC,CAJD,CAIGA,GAAoBA,KAAsBA,GAAoB,CAAC,IAkBlE,SAAWC,GACPA,EAAoC,UAAI,WACxCA,EAAsC,YAAI,cAC1CA,EAA+C,qBAAI,uBACnDA,EAAgD,sBAAI,uBACvD,CALD,CAKGA,GAA2BA,KAA6BA,GAA2B,CAAC,IClBvF,MAAMW,GAAuBC,IACzB,IAAI,SAAmBA,GAEnB,MAAO,CACH7rD,UAFc6rD,EAAU15E,OAAOj8C,KAKvC,IAAI,SAAsB21H,GAAY,CAClC,MAAQr/G,YAAa8+G,EAA6BjmE,qBAAsBymE,GAAiCD,EAAU15E,OACnH,MAAO,CACHm5E,8BACAQ,8BAER,CACA,MAAM,IAAIh6H,MAAM,8BAA8B,EAgC5Ci6H,IAAoB,SAAc,CACpCt6H,GAAI,iECrDF,IAAW,SAAe,CAC5B8yE,MAAO,CAAE9yE,GAAI,+CACbg0F,SAAU,CAAEh0F,GAAI,8CA+BPu6H,GAA8B34H,IACvC,MAAM,UAAEme,GAAcne,EAChBoE,EAASwlF,GAAqB9kC,GAAkB3mC,KACtD,SAAU,QAAgB/Z,GAAS,0BACnC,MAAQma,OAAQq6G,GAAiBx0H,GAC3B,gBAAEy0H,EAAe,qBAAEC,EAAoB,aAAEC,EAAY,eAAEC,EAAc,aAAEC,EAAY,UAAEC,GC3B7D,CAACl5H,IAC/B,MAAM,aAAE44H,GAAiB54H,GAClB64H,EAAiBM,IAAyB,IAAAnvC,UAAS,IACpDovC,EAAmBrsH,EAAY6rH,IACrC,IAAA1rH,YAAU,KAEN,IAAK,KAAQ0rH,EAAcQ,GAAmB,CAC1C,MAAMC,EAAyBR,EAAgBtzH,QAAQ+zH,IAAoBA,EAAeC,WACtFF,EAAuB1vH,SAAWkvH,EAAgBlvH,QAClDwvH,EAAsBE,EAE9B,IACD,CAACT,EAAcQ,EAAkBP,IACpC,MAAMW,GAAoB,IAAApuC,cAAarmF,IACnCo0H,EA7B2B,EAACM,EAAkBC,KAClD,MAAMC,EAAQF,EAAiB1/G,WAAW6/G,GAAoBA,EAAgBhhH,kBAAoB8gH,EAAQ9gH,kBAC1G,IAAe,IAAX+gH,EAAc,CACd,MAAMN,EAAyB,IAAII,GAEnC,OADAJ,EAAuBM,GAASD,EACzBL,CACX,CAEI,MAAO,IAAII,EAAkBC,EACjC,EAoB0BG,CAA2BhB,EAAiB9zH,GAAM,GACzE,CAAC8zH,IACEC,GAAuB,IAAA1tC,cAAarmF,IACtC,MAAMs0H,EAAyBR,EAAgBtzH,QAAQ+zH,GAAmBA,EAAe1gH,kBAAoB7T,EAAK6T,kBAClHugH,EAAsBE,EAAuB,GAC9C,CAACR,IACEI,GAAe,IAAA7tC,cAAarmF,IAC9B,MAAMs0H,EAAyBR,EAAgB56H,KAAKq7H,GAC5CA,EAAe1gH,kBAAoB7T,EAAK6T,gBACjCha,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGyyH,GAAiB,CAAEC,UAAU,IAEjED,IAEXH,EAAsBE,EAAuB,GAC9C,CAACR,IACEE,GAAe,IAAA3tC,cAAa0uC,IAC9B,MAAMR,EAAiB16H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGizH,GAAc,CAAEP,UAAU,IACjFC,EAAkBF,EAAe,GAClC,CAACE,IACER,GAAiB,IAAA5tC,cAAa2uC,IAChC,GHpBsCn2H,EGoBJm2H,EHnB9B,IAAQn2H,SAAwBK,IAAhBL,EAAIq6B,QG8BnB,CACD,MAAM+7F,EAA0B,CAC5Bp1H,KAAM,YACNgU,gBAAiBmhH,EAAa77F,UAAUU,gBAAgBhmB,gBACxDnQ,MAAOsxH,EAAa77F,UAAUU,gBAAgB6yB,OAAOp2C,KACrDxa,WAAYk5H,EAAal7F,uBACzBo7F,qBAAiBh2H,EACjBs1H,UAAU,GAEdC,EAAkBQ,EACtB,KArBiD,CAC7C,MAAME,EAAwB,CAC1Bt1H,KAAM,UACNgU,gBAAiBmhH,EAAa97F,QAAQQ,kBAAkB7lB,gBACxDnQ,MAAOsxH,EAAa97F,QAAQQ,kBAAkBpjB,KAC9Cxa,WAAYk5H,EAAal5H,WACzBo5H,qBAAiBh2H,EACjBs1H,UAAU,GAEdC,EAAkBU,EACtB,CH9BD,IAAuCt2H,CGyCtC,GACD,CAAC41H,IACEN,GAAY,IAAA9tC,cAAa0uC,GAEpBjB,EAAgB7mG,MAAMsnG,GAAmBA,EAAe1gH,kBAAoBkhH,EAAYlhH,kBAC1F0gH,EAAeC,YACrB,CAACV,IACJ,MAAO,CACHA,kBACAK,YACAD,eACAH,uBACAC,eACAC,iBACH,ED1CwGmB,CAAmB,CAAEvB,kBACxH,WAAE1pC,GAAeL,KACjBtG,EAAWoB,KACXywC,EAAcxwC,GAAqBr3B,GAA8Bp0C,IACjEk8G,EAAgCzwC,GAAqB6H,GAAuDtzE,IAC5G/c,EAAWwoF,GAAqB1+B,KAChC,gBAAEovE,GAAoBl5H,EACtB4S,EAAwBomH,aAAiD,EAASA,EAAYpmH,sBAC9FumH,GAAa,IAAA/tH,UAAQ,IAChBwH,EDwCyB,EAACwmH,EAAiBj8F,EAAyB87F,IACxEG,EAAgBv8H,KAAK8G,GAhBX,EAACyzH,EAAWj6F,EAAyB87F,KAClD,SAAiB7B,GAnDG,EAACA,EAAWj6F,KACpC,IAAIl6B,EAAIswB,EACR,MAAM/b,GAAkB,SAAqB4/G,EAAUz6F,QACjDC,GAAoD,QAA3B35B,EAAKm0H,EAAUz6F,cAA2B,IAAP15B,OAAgB,EAASA,EAAG65B,WACxFF,GAAoD,QAA3BrJ,EAAK6jG,EAAUz6F,cAA2B,IAAPpJ,OAAgB,EAASA,EAAGsJ,SAC9F,MAAO,CACHr5B,MAAM,SAAqB4zH,EAAUz6F,QAAU,YAAc,UAC7DnlB,kBACAnQ,MAAO2vH,GAAkC75F,EAAyB3lB,GAClE/X,WAAYy9B,GAA8BC,EAAyB3lB,GACnEqhH,gBAAiBtC,GAAkB8C,iBACnC15G,WAAYy3G,EAAU15E,OACtBy6E,UAAU,EACb,EAuCUmB,CAAoBlC,EAAWj6F,IAEtC,SAAmBi6F,GAvCG,EAACA,EAAWj6F,KACtC,IAAIl6B,EAAIswB,EACR,MAAM/b,GAAkB,SAAqB4/G,EAAUz6F,QACjDC,GAAoD,QAA3B35B,EAAKm0H,EAAUz6F,cAA2B,IAAP15B,OAAgB,EAASA,EAAG65B,WACxFF,GAAoD,QAA3BrJ,EAAK6jG,EAAUz6F,cAA2B,IAAPpJ,OAAgB,EAASA,EAAGsJ,SAC9F,MAAO,CACHr5B,MAAM,SAAqB4zH,EAAUz6F,QAAU,YAAc,UAC7DnlB,kBACAnQ,MAAO2vH,GAAkC75F,EAAyB3lB,GAClE/X,WAAYy9B,GAA8BC,EAAyB3lB,GACnEqhH,gBAAiBtC,GAAkBgD,mBACnCz2H,UAAWs0H,EAAU15E,OACrBy6E,UAAU,EACb,EA2BUqB,CAAsBpC,EAAWj6F,GAExCm5F,GAAac,GAxBG,EAACA,EAAWj6F,EAAyB87F,KACzD,MAAMzhH,EAAkBilB,GAA8B26F,GAChDqC,EAAaR,EAA8B/rG,SAAS1V,GAC1D,MAAO,CACHhU,MAAM,SAAqB4zH,EAAUz6F,QAAU,YAAc,UAC7DnlB,kBACAnQ,MAAO2vH,GAAkC75F,EAAyB3lB,GAClE/X,WAAYy9B,GAA8BC,EAAyB3lB,GACnEqhH,gBAAiBtC,GAAkBmD,aACnC3C,eAAgBI,GAAoBC,GACpCe,UAAU,EACVlI,QAASwJ,EAAanC,GAAkBt6H,QAAK6F,EAChD,EAaU82H,CAAgBvC,EAAWj6F,EAAyB87F,GAVxD,KAkB8BW,CAAaj2H,EAAMw5B,EAAyB87F,KCxCvEY,CAAyBrC,EAAc5kH,EAAuBqmH,GAC9D,IACP,CAACrmH,EAAuB4kH,EAAcyB,IACnCa,GAAc,IAAA1uH,UAAQ,IA/CF,EAACitH,EAAkBZ,IACtCA,EAAgBtwH,QAAO,CAACwpC,EAAKunF,KAChC,MAAMK,EAAQ5nF,EAAIh4B,WAAWhV,GAASA,EAAK6T,kBAAoB0gH,EAAe1gH,kBAS9E,OARe,IAAX+gH,EACKL,EAAeC,WAChBxnF,EAAI4nF,GAASL,GAIjBvnF,EAAItuC,KAAK61H,GAENvnF,CAAG,GACX,IAAI0nF,IAmC2B0B,CAAsBZ,EAAY1B,IAAkB,CAAC0B,EAAY1B,IAC7FuC,GAAsB,IAAA5uH,UAAQ,IAlCV,EAACwH,EAAuBknH,KAClD,IAAI72H,EAAIswB,EACR,MAAM0mG,EAAuJ,QAAvHh3H,EAAK2P,aAAqE,EAASA,EAAsBhT,gBAA6B,IAAPqD,OAAgB,EAASA,EAAGkB,QAAQ04B,IAAai9F,EAAYlpG,MAAMjtB,GAAuB,YAAdA,EAAKH,MAClPG,EAAK6T,kBAAoBqlB,EAAQA,QAAQQ,kBAAkB7lB,oBACzD0iH,EAA2J,QAAzH3mG,EAAK3gB,aAAqE,EAASA,EAAsBnT,kBAA+B,IAAP8zB,OAAgB,EAASA,EAAGpvB,QAAQ24B,IAAeg9F,EAAYlpG,MAAMjtB,GAAuB,cAAdA,EAAKH,MACxPG,EAAK6T,kBAAoBslB,EAAUA,UAAUU,gBAAgBhmB,oBACjE,MAAO,CACH5X,SAAUq6H,EACVx6H,WAAYy6H,EACf,EAyByCC,CAAsBvnH,EAAuBknH,IAAc,CAAClnH,EAAuBknH,IACvHM,GAAc,IAAApwC,cAAY,CAAC3sE,EAAOq7G,KACpC,MAAM5vE,EAAQgvE,EAAUY,GACxBvxC,EAASvkB,GAA6B7lD,EAAW,CAACM,KAIlDw6G,EAAaa,GACb5qC,EAAWhlC,EAAQ,GAASgnB,MAAQ,GAASkhB,SAAU,CAAEzD,SAAU,KAAO,GAC3E,CAACxwE,EAAW86G,EAAc/pC,EAAYgqC,EAAW3wC,IAC9CkzC,GAAe,IAAArwC,cAAarmF,IAC1BA,EAAKw0H,UACLhxC,EAAStkB,GAA6B9lD,EAAW,CAACpZ,KAEtD+zH,EAAqB/zH,EAAK,GAC3B,CAACoZ,EAAWoqE,EAAUuwC,IACzB,MAAO,CACH10H,SACAk2H,kBACAb,iBAAkByB,EAClBE,sBACAM,2BAA4BtB,aAAiD,EAASA,EAAYpmH,uBAClG2nH,WAAYvB,EACZrB,eACAC,iBACAwC,cACAC,eACH,E,eEpFE,MAAMG,GAAkB,EAAGhjH,kBAAiBijH,WAAUpzH,QAAO7D,OAAMk3H,sBACtE,MAGMC,EAA8BnyC,GAAqBt7B,IAMnD+1D,EAAgB,iCALLyX,EACX,OACAC,GAAwC,YAATn3H,EAC3B,SACAA,IAEV,OAAQ,gBAAoB,MAAO,CAAEqjG,UAAW,gCAC5C,gBAAoB,MAAO,CAAEA,UAAWoc,IACxC,gBAAoB,MAAO,CAAEpc,UAAW,4CAA6Cx/F,MAAOA,GAASA,GACrG,gBAAoB,MAAO,CAAEw/F,UAAW,4BACpC,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,uGAAwG8H,QAdzI,KACZ8rB,EAASjjH,EAAgB,KAakJ,EChBtKqjH,GAAkBj8H,GACnB,gBAAoB0tH,GAAA,EAAgB,CAAEzjH,MAAOjK,EAAMiK,MAAOiyH,SAAS,EAAOj0B,UAAW,mBAAmBjoG,EAAMioG,YAAak0B,SAAUn8H,EAAMyrG,KAAMrJ,OAAQpiG,EAAMoiG,OAAQ2N,QAAS/vG,EAAM+vG,UCO5LqsB,GAA+BC,IACjC,MAAMC,EAAQ,CACV,CAAC3E,GAAkBgD,oBAAqB,6BACxC,CAAChD,GAAkB8C,kBAAmB,2BACtC,CAAC9C,GAAkBmD,cAAe,8BAEtC,OAAOuB,EAAYC,EAAMD,QAAap4H,CAAS,EAEtCs4H,GAAmBv8H,IAC5B,MAAM,UAAEq8H,EAAS,4BAAEG,GAAgCx8H,EAC7C8uF,GAAO,EAAAC,GAAA,KACP0tC,EAdmB,EAACJ,EAAWjqE,IAC9BA,EAAQ3sD,MAAMq5C,GAAWA,EAAO1gD,KAAOi+H,IAapBK,CAAqBL,EAAWG,GACpD/O,EAAcgP,EACdA,EAAkBh0H,MAClBqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,0CAI/B,OAAQ,gBAAoB+uH,GAAA,EAAU,CAAE5I,qBAAqB,EAAMoJ,kBAAkB,EAAOrJ,qBAAqB,EAAMtY,YAAa,CAC5H,CACIC,MAAO,SAEX,CACIA,MAAO,UAEZqhB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoB0O,GAAgB,CAAEh0B,UAAW,qCAAsCh+F,MAAOwjH,EAAahiB,KAAM2wB,GAA4BC,GAAYj6B,OAAQA,EAAQ2N,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE1sG,MA7B5S,IA6BwU0lG,WA9BhV,GA8ByWtiH,MAAOg4H,EAA6Bv0B,UAAW,qEAAsE+lB,WAAY,EAAGjpH,WACjf,MAAMsyF,EAAaolC,GAAqBA,EAAkBr+H,KAAO2G,EAAK3G,GAChEu+H,EAAqBP,GAA4Br3H,EAAK3G,IAC5D,OAAQ,gBAAoB,KAAsB,CAAE6pG,UAAW00B,EAAoBl0H,MAAO1D,EAAK0D,MAAO4uF,WAAYA,EAAY0Y,QAAS,KAblI,IAACjxD,IAcW/5C,EAbzB/E,EAAM+0G,SAASj2D,EAAO1gD,IAcNyvH,GAAe,GACd,KACJ,E,6DCnCd,MAAM+O,GACT79H,YAAY2pF,EAASm0C,EAAc3gH,KAAKE,WACpCld,KAAKwpF,QAAUA,EACfxpF,KAAK29H,YAAcA,EACnB39H,KAAKkI,SAAW,CAAC,EACjBlI,KAAK49H,OAAS,CAAC,EACf59H,KAAK69H,QAAU,CAAC,EAChB79H,KAAKutB,OAAS,CAAC,EACfvtB,KAAK89H,UAAaF,IACd,MAAM9/C,EAAW99E,KAAK29H,YAAYC,GAClC,OAAO59H,KAAK69H,QAAQ//C,EAAS,EAEjC99E,KAAK+9H,SAAYH,IACb,MAAM9/C,EAAW99E,KAAK29H,YAAYC,GAClC,OAAO59H,KAAKutB,OAAOuwD,EAAS,EAEhC99E,KAAKg+H,WAAcJ,IACf,MAAM9/C,EAAW99E,KAAK29H,YAAYC,GAC5BK,EAAgBj+H,KAAKkI,SAAS41E,GAC9BogD,EAAqBl+H,KAAKutB,OAAOuwD,GACvC,GAAImgD,IAAkBC,EAClB,OAAOD,EAAcv/D,OACzB,EAEJ1+D,KAAK6xD,MAAQ,KACT,IAAO7xD,KAAK49H,QAAQl3H,QAAQ1G,KAAK2X,QACjC3X,KAAK49H,OAAS,CAAC,EACf59H,KAAKkI,SAAW,CAAC,EACjBlI,KAAK69H,QAAU,CAAC,EAChB79H,KAAKutB,OAAS,CAAC,CAAC,EAEpBvtB,KAAK2X,OAAUimH,IACX,MAAM9/C,EAAW99E,KAAK29H,YAAYC,GAC5BO,EAAoBn+H,KAAKkI,SAAS41E,GACpCqgD,GACAA,EAAkBxmH,QACtB,EAEJ3X,KAAK6J,KAAQ+zH,IACT,MAAM9/C,EAAW99E,KAAK29H,YAAYC,GAC5BK,EAAgBj+H,KAAKkI,SAAS41E,GACpC,GAAImgD,EACA,OAAOA,EAAcv/D,QAEzB,MAAMy/D,GAAoB,SAAen+H,KAAKwpF,QAAQo0C,IAKtD,OAJAO,EAAkBz/D,QACb9zD,MAAMpC,GAAYxI,KAAK69H,QAAQ//C,GAAYt1E,IAC3C8sB,OAAO5nB,GAAW1N,KAAKutB,OAAOuwD,GAAYpwE,IAC/C1N,KAAKkI,SAAS41E,GAAYqgD,EACnBA,EAAkBz/D,OAAO,CAExC,ECxDJ,MAAMtiD,GAAe,CACjBqoC,WAAW,EACXo5E,QAAS,GACTtwG,OAAQ,IAQL,SAAS6wG,GAAgBC,EAAgBC,EAAaC,EAAWC,EAAWb,EAAac,GAC5F,MAAMC,GAAkB,IAAA3wH,QAAO,IAAI2vH,GAAaW,EAAgBV,KACzDzkH,EAAO6zE,IAAY,IAAAjC,UAAS1uE,IAI7BuiH,EAAcl6E,GAAcsoC,GAAU7zE,GAAWxZ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,GAAQ,CAAEurC,gBAC3Fm6E,GAA0B,IAAA7wH,SAAO,GA6CvC,OA5CA,IAAAC,YAAU,IACC,KACE4wH,EAAwB3wH,UACzBywH,EAAgBzwH,QAAQ4jD,QARNk7B,EAAS3wE,KAW/BwiH,EAAwB3wH,SAAU,CAAK,GAE5CuwH,IACH,IAAAxwH,YAAU,KACN,MAAM6wH,EAAYP,EAAYj4H,QAAQu3H,IAAYc,EAAgBzwH,QAAQ6vH,UAAUF,KAC9EkB,EAAcD,EAAU9/H,IAAI2/H,EAAgBzwH,QAAQpE,MAC1D,GAA2B,IAAvBi1H,EAAYr0H,OACZ,OAOJ,MAAMs0H,EAAmBL,EAAgBzwH,QAmBzC,OAlBA0wH,GAAW,GACXp2H,QAAQoC,IAAIm0H,GACPl0H,MAAMizH,IACPc,GAAW,GACPI,IAAqBL,EAAgBzwH,UA7B9B,CAAC4vH,IAAY9wC,GAAU7zE,GAAWxZ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,GAAQ,CAAE2kH,aAAY,EA8B/FmB,CAAWnB,GACXe,EAAwB3wH,SAAU,EACtC,IAECqnB,OAAO/H,IACiE,cAApEA,aAAuC,EAASA,EAAO3d,WAG5D+uH,GAAW,GACPI,IAAqBL,EAAgBzwH,SAtC/B,CAACsf,IAAWw/D,GAAU7zE,GAAWxZ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,GAAQ,CAAEqU,YAAW,EAuC5F0xG,CAAU1xG,GACd,IAEG,KACHqxG,EAAwB3wH,UAAYwwH,EACpCM,EAAiBpnH,OAAOknH,EAAU,GAAG,CACxC,GACFN,GACIrlH,CACX,C,+FCzDO,MAAMgmH,GAAsB,EAAG/+H,aAClC,MAAMg/H,EAAeh/H,EAAOi/H,QAAU,gBAAkB,oBACxD,OAAIj/H,EAAOi/H,SAAWj/H,EAAOk/H,YACjB,gBAAoB,OAAQ,KAChC,gBAAoB,KAAkB,CAAEngI,GAAIigI,IAC5C,IACA,gBAAoB,KAAkB,CAAEjgI,GAAI,eAC5C,IACA,gBAAoB,MAAe,CAAE6L,MAAO5K,EAAOmnB,KAAMX,OAAQ,UAEhExmB,EAAOm/H,cACL,gBAAoB,MAAe,CAAEv0H,MAAO5K,EAAOmnB,KAAMX,OAAQ,qBAErE,gBAAoB,MAAe,CAAE5b,MAAO5K,EAAOmnB,KAAMX,OAAQ,iBAAkB,EAEjF44G,GAAqB,gBChB5BC,GAA6B,UAG7B,GAAqB,CACvB,CACIzyB,MAAO,SAEX,CACIA,MAAO,QACP1iG,OAAQ,CACJk0B,GAR6B,GAS7ByuE,EAAG,KAITyyB,GAAuB//H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGu8G,IAAkC,CAAE,QAAS,CAAC,GAAI,KAIxG,MAAMwb,WAA4B,EAAAn9B,UACrC1iG,cACIitC,SAASC,WACT/sC,KAAK2/H,kBAAmB,IAAAC,aACxB5/H,KAAK6/H,kBAAqBvgI,IACtBA,EAAEw1H,kBACF,MAAM,SAAE6H,GAAa38H,KAAKc,MACtB67H,GACA38H,KAAKc,MAAM67H,UACf,EAEJ38H,KAAK8/H,WAAa,MACV9/H,KAAKc,MAAMkoC,UACJ,gBAAoB,IAAK,CAAE+/D,UAAW,iBAIrD/oG,KAAK+/H,sBAAyBz4G,IAC1B,MAAM,KAAE5hB,EAAI,iBAAEs6H,GAAqBhgI,KAAKc,MACxC,IAAKwmB,EACD,OAAO,EAEX,GAxCY,QAwCR5hB,EACA,OAAO,gBAAoB,OAAQ,MAEvC,MAAMu6H,EDlBX,SAA2B34G,EAAMgM,EAAU,CAAC,GAC/C,MAAM,aAAE4sG,EAAeX,GAAkB,IAAEY,EAAM,IAAIx4G,MAAW2L,EAC1D8sG,GAAsB,EAAA3wG,GAAA,GAAOnI,EAAM,CAAE+4G,SAAUH,IAC/CI,EAAY,KAAQH,EAAK,GAI/B,MAAO,CACH74G,KAAM84G,EACNhB,QALY,KAAUgB,EAAqBD,GAM3Cd,YALgB,KAAUe,EAAqBE,GAM/ChB,cALkB,KAAWc,EAAqBD,GAO1D,CCKmCI,CAAkBj5G,EAAM,CAAE44G,aAAcF,IAC/D,OAAO,gBAAoBd,GAAqB,CAAE/+H,OAAQ8/H,GAAiB,EAE/EjgI,KAAKwgI,oBAAsB,MAAQxgI,KAAKc,MAAM67H,SAC9C38H,KAAKygI,cAAgB,IACTzgI,KAAKwgI,uBAA0B,gBAAoB,MAAO,CAAEz3B,UAAW,uCAC3E,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,oJAAqJ8H,QAAS7wG,KAAK6/H,oBAExN,CACAlyB,SACI,MAAM,MAAEpkG,EAAK,YAAE+X,EAAW,QAAE1B,EAAO,KAAEla,EAAO85H,GAA0B,WAAErnC,EAAU,UAAE1zC,EAAS,QAAEosD,EAAO,uBAAE6vB,EAAsB,qBAAEC,GAAuB,GAAW3gI,KAAKc,MACjKqkH,EAAgB,KAAG,cAAe,eAAez/G,KACjDk7H,EAAiC,KAAG,8BAA+B,KAAK/a,GAAA,GAAyBt8G,KAAU,CAC7G,cAAe4uF,IAEnB,OAAQ,gBAAoB,MAAO,CAAE4Q,UAAW63B,EAAgC/vB,QAASA,GACrF7wG,KAAKygI,gBACLE,EAAwB,gBAAoB,MAAO,CAAE53B,UAAW,2CAC5D,gBAAoBob,GAAkB,CAAEQ,aAAc+b,EAAwBn3H,MAAOA,EAAO+X,YAAaA,EAAaojG,aAAc1kH,KAAKwgI,sBAAwBf,QAAuB16H,KAAiB,KAC7M,gBAAoB,MAAO,CAAEgkG,UAAW,uCACpC,gBAAoB,MAAO,CAAEA,UAAW,4CACpC/oG,KAAK8/H,aACL,gBAAoBtV,GAAe,CAAEjnH,IAAKvD,KAAK2/H,iBAAkBrU,mBAAoB,GAAoBE,gBAAiBmV,GAAwBl8E,EAC5IzkD,KAAKc,MAAM8uF,KAAKj/D,cAAc,CAAEzxB,GAAI,kCACpCqK,IACV,gBAAoB,MAAO,CAAEw/F,UAAW,4CAA8C/oG,KAAK+/H,sBAAsBngH,KACrH,gBAAoB,MAAO,CAAEmpF,UAAW,yBACpC,gBAAoB,MAAO,CAAEA,UAAWoc,KACpD,CACA6F,mBAAmB6V,GACXA,EAAU3+G,QAAUliB,KAAKc,MAAMohB,OAASliB,KAAK2/H,iBAAiB1xH,SAC9DjO,KAAK2/H,iBAAiB1xH,QAAQi9G,qBAEtC,EAKG,MAAM4V,IAAkB,EAAAC,GAAA,IAAWrB,ICtF7BsB,GAAoB,EAAGC,oBAAmBC,iBAAgBC,yBAAwBC,yBACnF,gBAAoB,MAAO,CAAEr4B,UAAW,KAAG,iCAAkC,aAAc,CAC3F,kCAAmCk4B,KACjCA,EAAqB,gBAAoB,OAAQ,CAAEl4B,UAAW,wCACpE,gBAAoB,KAAkB,CAAE7pG,GAAI,8CAAmD,gBAAoB,WAAgB,KACnI,gBAAoB,OAAQ,CAAE6pG,UAAW,wCAA0Cm4B,EAAkB,gBAAoB,KAAkB,CAAEhiI,GAAI,sCAA2C,gBAAoB,KAAkB,CAAEA,GAAI,mCACxO,IACAiiI,EAA0B,gBAAoBrE,GAAA,EAAQ,CAAE/zB,UAAW,sCAAuC+e,QAAS,IAAKjX,QAASuwB,EAAqBr2H,MAAO,gBAAoB,KAAkB,CAAE7L,GAAI,gCAAqC,OCShPmiI,GAA6B,CAAC,UAAiB,YAWxCC,GAAc,EAAGn/G,SAAQD,QAnBnB,IAmBuCq/G,kBAAiBzS,aAAY0S,cAAa3rB,eAChG,MAAMjmB,GAAO,EAAAC,GAAA,KACP/vF,GAAU,UACV2hI,GAAc,WACbC,EAAsBC,IAA2B,IAAA72C,WAAS,IAC1D82C,EAAaC,IAAkB,IAAA/2C,UAAS,CAAC,KACzCg3C,EAAQC,IAAa,IAAAj3C,UAAS,KAC9Bk3C,EAAeC,IAAoB,IAAAn3C,UAAS,cAC7Co3C,EAlBQ,MACd,MAAMC,EAAwBz3C,GAAqBzzC,IAC7CtZ,EAAO+sD,GAAqB3yB,IAC5BqqE,GAAU,QAASzkG,EAAKp6B,KAAOo6B,EAAKp6B,IAAI0C,SAAMlB,EAEpD,OAAOo9H,EAAwBC,EAAUzkG,EAAK0kG,KAAK,EAapCC,GACT9/F,EAAiCkoD,GAAqB+G,IACtDzqB,EAAyB0jB,GAAqB3jB,IAC9C1uC,EAA4BqyD,GAAqB56B,IACjD5tD,EAAWwoF,GAAqB1+B,IAChC4xE,EAASgE,EAAY7iI,KAAKwjI,IAAe,CAC3Cn4H,MAnCe,GAoCfC,OApCe,GAoCPk4H,EACRh5H,MAAOu4H,EACPI,OAAQF,IAAkB,cAAuBF,OAAkB/8H,EAATm9H,OAEtD58H,MAAOtD,EAAUwgI,gBAAiBC,EAAkB,UAAEh+E,GC5C3D,SAA0Bi+E,EAAiBpE,EAAaC,EAAWC,EAAWb,EAAavhH,EAAe,CAC7GomH,qBAAiBz9H,EACjBO,MAAO,IACRm5H,GACC,MAAOvlH,EAAO6zE,IAAY,IAAAjC,UAAS1uE,GAE7BumH,EAAen6H,GAAWukF,GAAU7zE,IACtC,MACM5T,OADiD,IAA1B4T,EAAMspH,gBACL,IAAIhrH,MAAMhP,EAAO8B,YAAc,IAAI4O,EAAM5T,OAEvE,OADAA,EAAMyV,OAAOvS,EAAO6B,OAAQ7B,EAAO4B,SAAU5B,EAAOlD,OAC7C,CACHk9H,gBAAiBh6H,EAAO8B,WACxBhF,QACH,KAEC,UAAEm/C,EAAS,QAAEo5E,GAAYO,GAAgBsE,EAAiBpE,EAAaC,EAAWC,EAAWb,EAAac,IAChH,IAAAzwH,YAAU,IAEC,KAbS++E,EAAS3wE,EAcd,GAEZoiH,IACH,IAAAxwH,YAAU,KACN6vH,EAAQn3H,QAAQi8H,EAAY,GAC7B,CAAC9E,IACJ,MAAM,MAAEv4H,EAAK,gBAAEk9H,GAAoBtpH,EACnC,MAAO,CACHurC,YACAn/C,QACAk9H,kBAER,CDaiFI,EAAiB,EAAGx4H,QAAOC,SAAQd,QAAO24H,aACnH,MAAM5uG,EAAU,CACZlpB,QACAC,SACA63H,SACA34H,QACAs5H,QAAS,WAEb,OAAO/iI,EAAQuB,UAAUogI,GAAaz/H,WAAW8gI,YAAYxvG,EAAQ,GACtEsqG,EAAQ,CAAC99H,EAAS8hI,EAAaE,EAAQE,EAAex/F,GAAiC,CAACs/F,EAAQE,EAAsC,IAAvBJ,EAAYn3H,OAAc+3B,QAAiCz9B,OAAWA,GAAW,IACnM,IAAAiJ,YAAU,KACD0zH,QAAsD,IAAvBe,IAChCd,GAAwB,GACG,IAAvBc,GAEAR,EAAiB,eAEzB,GACD,CAACP,EAAsBe,IAC1B,MAAMM,GAAW,IAAA72C,aAAY,MAAU82C,IACnCnB,EAAe,CAAC,IAChBE,EAAUiB,EAAa,GACxB,KAAM,IASH91C,EAAgBR,KAChBu2C,GAA8B,IAAA/2C,cAAa5sF,IAC7CA,EAAEyvH,iBACFzvH,EAAEw1H,kBACF5nC,EAAcz3E,KAAyB,GACxC,IAKGytH,EAAqB/gH,GAAUA,GADd2/G,EAFI,GADS,IAK9BqB,EAAsB1+E,GAAiC,IAApBziD,EAASyI,OAC5C24H,EAAuB1B,IAAyBI,EAChDX,EAAyB9oG,GAA6B2uC,EAC5D,OAAQ,gBAAoB4nD,GAAA,GAAc,CAAE1sG,MAAOA,EAAOC,OAAQ+gH,EAAoBG,UAAU,EAAO5+E,UAAW0+E,EAAqBG,WAAY5B,EAAsBsB,aAAclB,EAAQyB,gBAAiB,QAASC,kBAAmB5zC,EAAKj/D,cAAc,CAAEzxB,GAAI,oBAAsB6jI,SAAUA,EAAUU,kBAAmBlC,EAAiBmC,SAAUN,EAAsB7kF,KAAMz+C,EAAQI,aAAayjI,gBAAkBzB,EAASb,QAA6Bt8H,EAAWi9H,cAAeA,EAAe4B,YAAa,EAAG1kI,SACvf2iI,EAAe,CAAC,IAChBI,EAAiB/iI,EAAG,EACrB0oH,WAvFS,GAuFgBic,iBAzBNpgI,IAKAg/H,GAA+B,IAAVh/H,GAAeA,IAAUg/H,EAAqB,EAnE7E,GAoEW,GAmByCn9H,MAAOtD,EAAU6sH,WAAY4T,EAAoB3T,WAAYA,QAA+CA,EAAa,EAAIjpH,KAAMmc,EAASE,YACxM,IAAI/c,EAAIswB,EACR,IAAKzT,EACD,OAAO,gBAAoB8+G,GAAiB,CAAEr8E,WAAW,IAE7D,MAAMl7C,GAAQ,QAAayY,GACrBV,EAAiD,QAAlCnc,GAAK,QAAe6c,UAA6B,IAAP7c,OAAgB,EAASA,EAAGu5E,OACrFolD,EA5FX,SAAkC9hH,GAErC,MAAO,CACHA,UACA+hH,aAHgB,QAAyB/hH,GAKjD,CAsF0CgiH,CAAyBhiH,GACjDm2E,GAAa,QAAgBn2E,EAAQA,QAAQze,IAAKi+H,GACxD,OAAQ,gBAAoBV,GAAiB,CAAEv3H,MAAOA,EAAO+X,YAAaA,EAAaq/G,qBAAsBz+H,aAA2C,EAASA,EAAS4kH,mBAAoBphH,KAAMo+H,EAAsBC,YAAa7hH,MAAOA,EAAOi2E,WAAYA,EAAYv4E,QAAkE,QAAxD6V,GAAK,QAAequG,EAAsB9hH,gBAA6B,IAAPyT,EAAgBA,GAAK,OAAequG,EAAsB9hH,SAAUgnB,UAAU,QAAgB86F,EAAsB9hH,SAAU6uF,QAAS,IAAMgF,aAA2C,EAASA,EAAS7zF,GAAUg+G,iBAAkB99H,aAA2C,EAASA,EAAS89H,kBAC7nB,EAAGiE,aAAc,EAAGhD,uBAAyB,gBAAoBD,GAAmB,CAAEE,eAAgBc,IAAkB,aAAoBf,kBAAmBA,EAAmBE,uBAAwBA,EAAwBC,oBAAqB6B,IAAiCiB,YAAa,CAAChvD,EAAYivD,KAC/S,MAAMC,EAAYr7H,KAAKuhH,MAAMp1C,EAnGlB,IAoGLmvD,EAAUt7H,KAAKuhH,MAAM6Z,EApGhB,IAqGLvC,EAAc,KAAMwC,EAAWC,EAAU,GAC/CxC,EAAeD,EAAY,GAC1B,EE1GP0C,GAAwB,CAC1B,CACIv3B,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,KAUHu3B,GAAkB,EAAGC,gBAAe3uB,eAC7C,IAAI1wG,EACJ,MAAMyqF,GAAO,EAAAC,GAAA,MACP,QAAE7tE,EAAO,YAAE+hH,EAAW,WAAEliH,GAUlC,SAA+B2iH,GAC3B,MAAMxiI,EAAW0oF,GAAqBz5B,IACtC,OAAO,IAAA3jD,UAAQ,KACX,GAAIsrH,GAAuB4L,IAAkBA,EAAc3iH,WAAY,CACnE,MAAMG,EAAUhgB,EAAS+E,IAAIy9H,EAAc3iH,YAC3C,IAAI,QAAUG,GAAU,CACpB,MAAM+hH,GAAc,QAAyB/hH,GAC7C,MAAO,CACHA,UACAH,WAAY2iH,EAAc3iH,WAC1BkiH,YAAaA,EAErB,CACJ,CACA,MAAO,CAAC,CAAC,GACV,CAACS,EAAexiI,GACvB,CA1BiDyiI,CAAsBD,GAC7DE,EAVV,SAAwBn7H,EAAOqmF,EAAMrsF,GACjC,OAAKA,EAGEgG,GAASqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,YAF9B0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,gDAGxC,CAKuBylI,CAAkG,QAAlFx/H,EAAK6c,aAAyC,EAASA,EAAQA,QAAQzY,aAA0B,IAAPpE,EAAgBA,EAAK,GAAIyqF,EAAM/tE,GAC5J,OAAQ,gBAAoBosG,GAAA,EAAU,CAAEllB,UAAW,gCAAiC0lB,kBAAkB,EAAMpJ,qBAAqB,EAAMvY,YAAaw3B,GAAuBlW,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzjH,MAAO25H,EAAY7zB,QAASwd,EAAgBnrB,OAAQA,EAAQ85B,SAAS,EAAOC,SAAU8G,EAAc,eAAeA,SAAgBh/H,EAAWgkG,UAAW,0DAA6D2lB,WAAY,EAAGC,mBACrd,gBAAoB,MAAO,CAAE5lB,UAAW,6CAC5C,gBAAoBu4B,GAAa,CAAEE,YAAa5I,GAAuB4L,GAAiBA,EAAc3iH,gBAAa9c,EAAWod,OAAQ,IAAKD,MAAO,IAAKq/G,iBAAiB,EAAM1rB,SAAW7zF,IACjL6zF,EAAS7zF,GACT2sG,GAAe,MAE1B,ECtCAiW,GAAyB,EAAG5iH,UAAS6zF,cACvC,gBAAoB0uB,GAAiB,CAAEC,cAAexiH,EAAS6zF,SAAUA,ICAvEgvB,GAAwB,EAAG97B,YAAW17F,cAAgB,gBAAoBsmH,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,KAAG,iEAAkEA,IAChM,gBAAoB,OAAQ,KAAM17F,ICChCy3H,GAAoB,EAAGC,WAAUpW,mBAAsB,gBAAoB,MAAO,CAAE9d,QAAS8d,EAAe5lB,UAAW,+HACzH,gBAAoB,OAAQ,KAAMg8B,EAASt6H,OAAS,GAAK,GAAGs6H,EAASC,UAAU,EAAG,SAAWD,IAC3FE,GAAa,EAAGF,WAAUG,kBAC5B,MAAMt1C,GAAO,EAAAC,GAAA,KACPs1C,EAAcJ,EACdn1C,EAAKj/D,cAAc,CACjBzxB,GAAI,6DAEN0wF,EAAKj/D,cAAc,CACjBzxB,GAAI,4DAENkmI,EAAiBL,OAAWhgI,EAAY,cAC9C,OAAQ,gBAAoB+3H,GAAA,EAAQ,CAAE/zB,UAAW,6EAA8Ek0B,SAAUmI,EAAgBv0B,QAASq0B,EAAan6H,MAAOo6H,GAAe,EAE5LE,GAAoBvkI,IAC7B,MAAM,eAAEm4H,EAAc,cAAEtK,GAAkB7tH,EACpCikI,EAAWlM,GAAyBI,GAAkBA,EAAexrD,eAAY1oE,EACvF,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB8/H,GAAuB,KACvC,gBAAoB,KAAkB,CAAE3lI,GAAI,6DAC9C6lI,GAAY,gBAAoBD,GAAmB,CAAEC,SAAUA,EAAUpW,cAAeA,IAC1F,gBAAoB,MAAO,CAAE5lB,UAAW,yCACpC,gBAAoBk8B,GAAYvlI,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEikI,SAAUA,MAAe,E,gECtBhG,MACaO,GAAmBxkI,IAC5B,MAAM,MAAEyI,EAAK,SAAEg8H,EAAQ,MAAEC,EAAK,UAAE/gF,EAAS,YAAEghF,EAAW,OAAEn+H,EAAM,iBAAEo+H,GAAqB5kI,EACrF,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,8DAC5C,gBAAoB,MAAO,CAAEA,UAAW,6BAA+Bx/F,GACvE,gBAAoBo8H,GAAsB,CAAEJ,SAAUA,IACtDC,EAAQ,gBAAoBI,GAAuB,CAAEJ,MAAOA,IAAW,MACtE,IAAQl+H,IAAY,gBAAoBu+H,GAAwB,CAAEphF,UAAWA,EAAWghF,YAAaA,EAAan+H,OAAQA,EAAQo+H,iBAAkBA,IAAsB,EAE7KC,GAAuB,EAAGJ,cACpB,gBAAoB,MAAO,CAAEx8B,UAAW,+BAC5C,gBAAoB,MAAO,CAAEA,UAAW,gCACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,gEAChD,gBAAoB,MAAO,KAAMqmI,IAEnCK,GAAwB,EAAGJ,WACrB,gBAAoB,MAAO,CAAEz8B,UAAW,+BAC5C,gBAAoB,MAAO,CAAEA,UAAW,gCACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,iEAChD,gBAAoB,MAAO,KAAMsmI,IAEnCK,GAAyB,EAAGphF,YAAWghF,cAAan+H,SAAQo+H,sBACvDjhF,EAAa,gBAAoBqhF,GAAA,EAAa,CAAE/8B,UAAW,6BAA8B5mF,OAtBxE,KAsB2G,gBAAoB4jH,GAAQ,CAAEN,YAAaA,EAAan+H,OAAQA,EAAQo+H,iBAAkBA,IAE3NK,GAAS,EAAGN,cAAan+H,SAAQo+H,uBACnC,MAAMM,EAAiB,KAAW,2BAA4B,CAC1D,mCAAoCP,IAExC,OAAQn+H,GAAW,gBAAoB,MAAO,CAAEyhG,UAAW,+BACvD,gBAAoB,MAAO,CAAEA,UAAW,gCACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,+DAAgEoI,OAAQ,CAAE2+H,eAAgB3+H,EAAOmD,WACjJ,gBAAoB,MAAO,KACvBnD,EAAOvI,KAAI,CAAC8G,EAAMwB,IAAO,gBAAoB,MAAO,CAAE0hG,UAAWi9B,EAAgBh/H,IAAKK,GAAKxB,KAC3F6/H,EAAoB,gBAAoB,MAAO,CAAE38B,UAAW,4BACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,mEAAoEoI,OAAQ,CAAEyiC,MAAO27F,MAA0B,MAAQ,ECnCtKQ,GAA2B,EAAG38H,YACvC,MAAMwB,GAAQ,UACR6kF,GAAO,EAAAC,GAAA,KACb,OAAQ,gBAAoBy1C,GAAiB,CAAE/7H,MAAOA,EAAOg8H,SAAU31C,EAAKj/D,cAAc,CAClFzxB,GAAI,+DACJumI,aAAa,EAAOn+H,OAAQ,CAACyD,IAAU,ECLtCo7H,GAA6B,EAAG58H,YACzC,MAAMwB,EAAQ2/E,GAAqB7hC,IAC7B+mC,GAAO,EAAAC,GAAA,KACb,OAAQ,gBAAoBy1C,GAAiB,CAAE/7H,MAAOA,EAAOg8H,SAAU31C,EAAKj/D,cAAc,CAClFzxB,GAAI,+DACJumI,aAAa,EAAOn+H,OAAQyD,EAAQ,CAACA,GAAS,IAAM,ECJnDq7H,GAA0B,EAAG78H,YACtC,MAAMqmF,GAAO,EAAAC,GAAA,KACP5wE,EAAYyrE,GAAqB4G,IACjCpsF,EAASwlF,GAAqB9kC,GAAkB3mC,IACtD,IAAI3X,EAAS,GAIb,OAHI,QAAgBpC,KAAYumD,GAAoBvmD,KAChDoC,EAAS,CAACpC,EAAO5B,aAEb,gBAAoBgiI,GAAiB,CAAE/7H,MAAOA,EAAOg8H,SAAU31C,EAAKj/D,cAAc,CAClFzxB,GAAI,+DACJumI,aAAa,EAAOn+H,OAAQA,GAAU,ECTrC++H,GAA2B,EAAG98H,YACvC,MAAMqmF,GAAO,EAAAC,GAAA,KACP5wE,EAAYyrE,GAAqB4G,IACjCpsF,EAASwlF,GAAqB9kC,GAAkB3mC,KACtD,SAAU,QAAgB/Z,GAAS,mCACnC,MAAM8c,EAAU0oE,GAAqBx5B,GAAmBhsD,EAAO8c,UAC/D,OAAQ,gBAAoBsjH,GAAiB,CAAE/7H,MAAOA,EAAOg8H,SAAU31C,EAAKj/D,cAAc,CAClFzxB,GAAI,+DACJumI,aAAa,EAAOn+H,QAAS0a,aAAyC,EAASA,EAAQA,QAAQ1e,YAAc,CAAC0e,EAAQA,QAAQ1e,YAAc,IAAM,ECVjJgjI,GAA0B,EAAG/8H,YACtC,MAAMqmF,GAAO,EAAAC,GAAA,MACP,OAAE9xC,GAAWnwC,IACnB,OAAQ,gBAAoB03H,GAAiB,CAAE/7H,MAAOA,EAAOg8H,SAAU31C,EAAKj/D,cAAc,CAClFzxB,GAAI,+DACJumI,aAAa,EAAOn+H,OAAQy2C,EAAS,CAACA,GAAU,IAAM,ECLrDwoF,GAA+B,EAAGh9H,YAC3C,MAAMqmF,GAAO,EAAAC,GAAA,MACP,YAAEjF,GAAgBh9E,IACxB,OAAQ,gBAAoB03H,GAAiB,CAAE/7H,MAAOA,EAAOg8H,SAAU31C,EAAKj/D,cAAc,CAClFzxB,GAAI,+DACJumI,aAAa,EAAOn+H,OAAQsjF,EAAc,CAACA,GAAe,IAAM,ECJ/D47C,GAAa1lI,IACtB,MAAM,KAAEqb,EAAI,YAAEmF,EAAW,cAAEmlH,EAAa,cAAEthB,EAAa,MAAEuhB,EAAK,KAAE92C,GAAS9uF,GAClE6lI,EAAaC,IAAkB,IAAA97C,WAAS,GACzCqhB,GAAQ,WACR06B,EAAS16B,IAAS,QAAYA,GAC9BjtG,EAAK,GAAG2mH,GAAA,GAAyB1pG,KAAQmF,EAAcukG,GAAA,GAAyB,IAAIvkG,KAAiB,KACrGwlH,EAAiB,KAAW,4BAA6B,eAAe5nI,IAAMimH,GAC9E4hB,EAAiBn3C,EAAKj/D,cAAc,CACtCzxB,GAAI,mEAER,OAAQ,gBAAoB,MAAO,CAAEA,GAAIA,EAAI6pG,UAAW+9B,EAAgBj2B,QAAS,IAAM61B,KACnF,gBAAoB,OAAQ,CAAE39B,UAAW,sBAAwB5sF,GACjEmF,EAAc,gBAAoB,OAAQ,CAAEynF,UAAW,iCACnD,IACAznF,EACA,KAAO,KACX,gBAAoBw7G,GAAA,EAAQ,CAAE/zB,UAAW,kDAAmDh+F,MAAOg8H,IACnG,gBAAoB,MAAO,CAAEh+B,UAAW,wBACpC,gBAAoB,OAAQ,CAAEA,UAAW,0EAA2EqS,aAAc,IAAMwrB,GAAe,GAAOvrB,aAAc,IAAMurB,GAAe,KACjMD,EAAe,gBAAoB95B,GAAA,GAAQ,CAAE9D,UAAW,kBAAiB89B,EAAS,iBAAmB,gBAAkBvhB,QAAS,IAAIpmH,IAAM4tG,YAAa,CAAC,CAAEC,MAAO,WAAc05B,GAAkB,MAAO,ECb9MO,IAA+B,SAAe,CAChDC,wBAAyB,CAAE/nI,GAAI,kEAC/BgoI,uBAAwB,CAAEhoI,GAAI,iEAC9BioI,0BAA2B,CAAEjoI,GAAI,oEACjCkoI,wBAAyB,CAAEloI,GAAI,kEAC/BmoI,0BAA2B,CAAEnoI,GAAI,oEACjCooI,uBAAwB,CAAEpoI,GAAI,iEAC9BqoI,4BAA6B,CAAEroI,GAAI,wEAEjCsoI,GAA8B,CAChC,CACIC,aAAcT,GAA6BC,wBAAwB/nI,GACnEmE,YAAaoJ,EAAyB0hE,YAE1C,CACIs5D,aAAcT,GAA6BE,uBAAuBhoI,GAClEmE,YAAaoJ,EAAyB2hE,WAE1C,CACIq5D,aAAcT,GAA6BG,0BAA0BjoI,GACrEmE,YAAaoJ,EAAyBuhE,cAE1C,CACIy5D,aAAcT,GAA6BI,wBAAwBloI,GACnEmE,YAAaoJ,EAAyBqhE,YAE1C,CACI25D,aAAcT,GAA6BK,0BAA0BnoI,GACrEmE,YAAaoJ,EAAyBshE,cAE1C,CACI05D,aAAcT,GAA6BM,uBAAuBpoI,GAClEmE,YAAaoJ,EAAyBwhE,WAE1C,CACIw5D,aAAcT,GAA6BO,4BAA4BroI,GACvEmE,YAAaoJ,EAAyByhE,kBAGxCw5D,GAAmB,CAAChiI,EAAM6D,KAC5B,OAAQ7D,GACJ,KAAK+G,EAAyBqhE,WAC9B,KAAKrhE,EAAyBshE,aAC1B,OAAO,gBAAoBm4D,GAA0B,CAAE38H,MAAOA,IAClE,KAAKkD,EAAyBuhE,aAC1B,OAAO,gBAAoBm4D,GAA4B,CAAE58H,MAAOA,IACpE,KAAKkD,EAAyB2hE,UAC1B,OAAO,gBAAoBg4D,GAAyB,CAAE78H,MAAOA,IACjE,KAAKkD,EAAyB0hE,WAC1B,OAAO,gBAAoBk4D,GAA0B,CAAE98H,MAAOA,IAClE,KAAKkD,EAAyBwhE,UAC1B,OAAO,gBAAoBq4D,GAAyB,CAAE/8H,MAAOA,IACjE,KAAKkD,EAAyByhE,gBAC1B,OAAO,gBAAoBq4D,GAA8B,CAAEh9H,MAAOA,IACtE,QACI,OAAO,gBAAoB,WAAgB,MACnD,EAESo+H,GAA8B,EAAGC,0BAAyBC,+BAA8BC,0BAAyBpB,QAAO92C,WACjI,MAAMzgC,EAAmCu7B,GAAqBx7B,IAC9D,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB21E,GAAuB,KACvC,gBAAoB,KAAkB,CAAE3lI,GAAI,6EAChDsoI,GACKnhI,QAAO,EAAGhD,iBAAkBA,IAAgBoJ,EAAyBwhE,WAAa25D,IAClFvhI,QAAO,EAAGhD,iBAAkBA,IAAgBoJ,EAAyB2hE,WAAa05D,IAClFzhI,QAAO,EAAGhD,iBAAkBA,IAAgBoJ,EAAyByhE,iBACtE25D,IACCxhI,QAAO,EAAGhD,iBAAkBA,KAC5B8rD,EACK1iD,EAAyBqhE,WACzBrhE,EAAyBshE,gBAC9BhvE,KAAI,EAAGsE,cAAaokI,mBACrB,MAAMl+H,EAAQqmF,EAAKj/D,cAAc,CAAEzxB,GAAIuoI,IACvC,OAAQ,gBAAoBjB,GAAW,CAAEx/H,IAAK3D,EAAa8Y,KAAM5S,EAAOk9H,cAAeiB,GAAiBrkI,EAAakG,GAAQ47G,cAAe,gBAAiBuhB,MAAO,IAAMA,EAAMrjI,GAAcusF,KAAMA,GAAQ,IAC5M,EC1ENm4C,GAAe,IAAI,KAAS,CAAEzlH,IAHR,KAItB0lH,GAAuBtiI,IACzB,MAAMkiB,GAAW,SAAe,CAC5BqgH,UAAW,CAAE/oI,GAAI,kEACjB2+G,QAAS,CAAE3+G,GAAI,kEACf2xC,QAAS,CAAE3xC,GAAI,wEAEnB,OAAQwG,GACJ,IAAK,WACD,OAAOkiB,EAASqgH,UACpB,IAAK,cACL,IAAK,uBACL,IAAK,wBACD,OAAOrgH,EAASi2F,QACpB,QACI,OAAOj2F,EAASipB,QACxB,EAyCSq3F,GAAuCpnI,IAChD,MAAM,MAAEyI,EAAK,MAAEi8H,EAAK,KAAE9/H,EAAI,eAAEogF,EAAc,UAAEvb,EAAS,WAAE49D,GAAernI,EAChE8uF,GAAO,EAAAC,GAAA,KACP/vF,GAAU,WACT2kD,EAAW2jF,IAAgB,IAAAt9C,WAAS,IACpCxjF,EAAQ+gI,IAAa,IAAAv9C,UAAS,KAC9B46C,EAAkB4C,IAAuB,IAAAx9C,UAAS,GACnDy9C,EApBqB,CAACziD,IAC5B,MAAMh8E,EAAe4gF,GAAqB5yC,KACpC,yBAAEqB,EAAwB,sCAAEqvF,GAA0C99C,GAAqBt0C,IACjG,GAAIoyF,EACA,OAAO,EAEX,MAAMx+H,EAAiB,KAAQF,GAAem5D,GAAgBA,EAAYj5D,iBAEpEy+H,EAAiB/gI,EADF,KAAQsC,GAAiB0+H,GAAkBA,EAAc1pG,UAAUqY,eACjC8B,GAGvD,OAFwBj6B,QAAQupH,EAAe1hI,IAAI++E,GAE5B,EASK6iD,CAAuB7iD,GAwBnD,OAvBA,IAAA93E,YAAU,KACN,IAAI46H,GAAY,EAkBhB,OANIT,GAAcI,EAXA3lI,WACd,MAAMimI,OAlCQjmI,OAAO9C,EAASyqE,EAAWub,KACjD,MAAMhI,GAAW,EAAA3yE,EAAA,IAAe26E,GAC1BgjD,EAAiBf,GAAahhI,IAAI+2E,GACxC,GAAIgrD,EACA,OAAOA,EAEX,MAAMD,QAfV,SAAqB/oI,EAASyqE,EAAWub,EAAgB17E,EAAQ,GAC7D,OAAOtK,EACFuB,UAAUkpE,GACV5oE,aACA+G,WACAkiE,eAAekb,GACf58E,UAAUkB,GACVjB,OACT,CAO2B4/H,CAAYjpI,EAASyqE,EAAWub,EAzCvB,GA2ChC,OADAiiD,GAAazwH,IAAIwmE,EAAU+qD,GACpBA,CAAQ,EA0BgBG,CAAkBlpI,EAASyqE,EAAWub,GAC7D,GAAI8iD,EAAW,CACX,MAAMK,EAAaJ,EAASv+H,WAvER,EAwEhB2+H,EAAa,GACbX,EAAoBW,GAExBZ,EAxDU,EAAC/gI,EAAQsoF,IAAStoF,EAAOvI,KAAKgM,GAAWA,GAA0B,IAAjBA,EAAMN,OAAgDM,GAAjC,SAAyB6kF,KAwDhGs5C,CAvDJ,EAACxgI,EAAUhD,IAChB,aAATA,EACOgD,EAAS3J,KAAI,EAAGwK,WAAYA,IAEhCb,EAAS3J,KAAI,EAAGwK,WAAYA,GAASA,EAAMkB,OAzB/B,IAyByD,GAAGlB,EAAMghH,OAAO,EAzBzE,UAyBmGhhH,IAmD9E4/H,CAAcN,EAASvjI,MAAOI,GAAOkqF,IACjEw4C,GAAa,EACjB,GAGAgB,GAGAhB,GAAa,GAEV,KACHQ,GAAY,CAAK,CACpB,GACF,CAAC9iD,EAAgBpgF,EAAMkqF,EAAMrlB,EAAW49D,EAAYroI,EAASyoI,IACxD,gBAAoBjD,GAAiB,CAAE/7H,MAAOA,EAAOi8H,MAAOA,EAAOD,SAAU31C,EAAKj/D,cAAcq3G,GAAoBtiI,IAAQ++C,UAAWA,EAAWghF,YAAsB,aAAT//H,EAAqB4B,OAAQA,GAAkB,GAAIo+H,iBAAkBA,GAAoB,EC7F9P2D,GAAa,EAAGxjI,OAAM6gI,YACxB,MACM15B,EADItiB,GAAqBrxC,IACnBtyC,IAAIlB,EAAKm5B,WACf4wD,GAAO,EAAAC,GAAA,KACPtlB,GAAY,UAClB,OAAQ,gBAAoBi8D,GAAW,CAAEx/H,IAAKnB,EAAK3G,GAAIid,MAAO6wF,aAA6B,EAASA,EAAEhuE,UAAUz1B,QAAU,GAAI+X,YAAazb,EAAK0D,MAAOk9H,cAAe,gBAAoByB,GAAqC,CAAE3+H,OAAQyjG,aAA6B,EAASA,EAAEhuE,UAAUz1B,QAAU,GAAIi8H,MAAO3/H,EAAK0D,MAAO7D,KAAMG,EAAKgvD,gBAAiB0V,UAAWA,EAAWub,eAAgBjgF,EAAKtC,IAAK4kI,YAAY,IAAShjB,cAAemkB,GAAmBzjI,EAAKgvD,iBAAkB6xE,MAAO,IAAMA,EAAM,oBAAoB7gI,EAAK3G,QAAS0wF,KAAMA,GAAQ,EAEvhB05C,GAAsB5jI,IACxB,OAAQA,GACJ,IAAK,WACD,MAAO,4BACX,IAAK,cACL,IAAK,uBACL,IAAK,wBACD,MAAO,gBACX,QACI,MAAO,wBACf,EAES6jI,GAA2B,EAAGC,wBAAuBC,+BAA8B/C,WACpF,gBAAoB,WAAgB,KAAO8C,GAAyBA,EAAsB/+H,OAAS,GAAMg/H,EAAgC,gBAAoB,WAAgB,KACjL,gBAAoB5E,GAAuB,KACvC,gBAAoB,KAAkB,CAAE3lI,GAAI,0EAChDuqI,EAAgC,gBAAoB,MAAO,CAAE1gC,UAAW,8EACpE,gBAAoB,MAAO,CAAEA,UAAW,sBAA2BygC,aAAqE,EAASA,EAAsBzqI,KAAK8G,GAAU,gBAAoBwjI,GAAY,CAAEriI,IAAKnB,EAAKoU,YAAY/a,GAAI2G,KAAMA,EAAKoU,YAAaysH,MAAOA,OAAgB,MC1BhSgD,GAAkB,EAAGF,wBAAuBC,+BAA8B7B,0BAAyBC,+BAA8BC,0BAAyBpB,QAAO92C,UAAa,gBAAoB,MAAO,KAClN,gBAAoB,QAAS,CAAEmZ,UAAW,YACtC,gBAAoB,KAAkB,CAAE7pG,GAAI,gEAC5C,gBAAoBotG,GAAA,GAAoB,CAAEvD,UAAW,uBAAwB6b,UAAW,EAAGwG,UAAW,GAClG,gBAAoB,OAAQ,CAAEriB,UAAW,sDACzC,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,CAAC,CAAEC,MAAO,WAC9E,gBAAoB,KAAkB,CAAE7tG,GAAI,qEACxD,gBAAoB,MAAO,CAAE6pG,UAAW,mDACpC,gBAAoBwgC,GAA0B,CAAEC,sBAAuBA,EAAuBC,6BAA8BA,EAA8B/C,MAAOA,EAAO92C,KAAMA,IAC9K,gBAAoB+3C,GAA6B,CAAEC,wBAAyBA,EAAyBC,6BAA8BA,EAA8BC,wBAAyBA,EAAyBpB,MAAOA,EAAO92C,KAAMA,MCPlO+5C,GAAY7oI,IACrB,MAAM,SAAE+oH,EAAQ,SAAE+f,EAAQ,gBAAEC,EAAe,KAAEj6C,EAAI,wBAAEk6C,GAA4BhpI,EACzEuC,EAAcusF,EAAKj/D,cAAc,CACnCzxB,GAAI,+DAER,OAAQ,gBAAoB6qI,GAAA,EAAyB,CAAElgB,SAAUA,EAAU+f,SAAUA,EAAU7+H,MAAO8+H,EAAiBG,cAAe,CAAE3mI,eAAe0lG,UAAW,qCAAsCkhC,WAAYH,GAA2B,EAE7OI,GAAW,EAAGC,UACR,gBAAoB,IAAK,CAAEphC,UAAW,6CAA8CnpD,OAAQ,SAAUixB,KAAMs5D,EAAMC,IAAK,uBAC3H,gBAAoB,OAAQ,CAAErhC,UAAW,4BACzC,gBAAoB,OAAQ,CAAEA,UAAW,uBACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,6DAoBlDmrI,GAAgB,CAJa,CAC/BjmI,MAAO,6BACPkmI,MAAO,qBAPa,CACpBlmI,MAAO,kHACPkmI,MAAO,cAEqB,CAAElmI,MAAO,aAAckmI,MAAO,uBAgBxDC,GAAiBzpI,IACnB,MAAM,gBAAE+oI,EAAe,SAAEhgB,EAAQ,SAAE+f,EAAQ,kBAAEY,EAAiB,sBAAEhB,EAAqB,KAAE55C,GAAS9uF,EAC1Fm3B,EAAiByyD,GAAqB79B,IACtCi9E,GAA0B,IAAAx8H,UAAQ,IAAMk8H,GATrB,CAACA,IAC1B,MAAMiB,EAxBmC,CAACjB,IAC1C,GAAqC,IAAjCA,EAAsB/+H,OACtB,OAEJ,MAAMigI,EAA6BlB,EAC9BzqI,KAAI,EAAGkb,iBAAkB,sBAAsBA,EAAY/a,WAC3DgF,KAAK,KACV,MAAO,CAAEE,MAAO,IAAIsqE,OAAOg8D,GAA6BJ,MAAO,YAAa,EAiB9CK,CAAqCnB,GACnE,MAAO,CACHoB,MAAOH,EAAwB,CAACA,KAA0BJ,IAAiBA,GAC9E,EAKsEQ,CAAqBrB,IAAwB,CAACA,IACrH,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,QAAS,CAAEzgC,UAAW,YACtC,gBAAoB,KAAkB,CAAE7pG,GAAI,0DAChD,gBAAoByqI,GAAU,CAAE9f,SAAUA,EAAU+f,SAAUA,EAAUC,gBAAiBA,EAAiBC,wBAAyBA,EAAyBl6C,KAAMA,KACjK33D,GAAkBuyG,EAAoB,gBAAoBN,GAAU,CAAEC,KAAMK,IAAuB,KAAM,EAE5GM,GAAwB,CAC1B1iI,KAAM,EACNE,GAAI,GAQFyiI,GAAyBjqI,IAC3B,MAAM,eAAEm4H,EAAc,kBAAEuR,EAAiB,SAAE30B,EAAQ,QAAEhK,EAAO,sBAAE29B,EAAqB,6BAAEC,GAA+B,EAAK,uCAAEuB,EAAsC,wBAAEpD,EAAuB,6BAAEC,EAA4B,wBAAEC,GAA6BhnI,EACjP8uF,GAAO,EAAAC,GAAA,KACPo7C,EAAgBhS,GACfJ,GAAyBI,IAAmBA,EAAexrD,WAC5D,IACCy9D,EAAcC,IAAmB,IAAArgD,UAASmgD,GAG3CG,EAAiBF,GAA8D,IAA9CA,EAAa7sD,cAAc4sD,IAC3DI,EAAgBC,IAAqB,IAAAxgD,UAASggD,IAG/CS,EAAoBP,EAAuCvgI,OAAS,EAjBnC,CAAC4nH,IACxC,MAAMmZ,EAAoBnZ,EAAWtzH,KAAKguE,GAAc,IAAIA,OAAc7oE,KAAK,MAC/E,OAAQ,gBAAoB,KAAkB,CAAEhF,GAAI,sEAAuEoI,OAAQ,CAAEkkI,sBAAuB,EAgBtJC,CAAmCT,QACnCjmI,EACN,OAAQ,gBAAoB2mI,GAAA,EAAmB,CAAE3iC,UAAW,0DAA2D4iC,YAAY,EAAM5uB,SAAUkuB,EACzIr7C,EAAKj/D,cAAc,CAAEzxB,GAAI,wDACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,uDAAyD0sI,iBAAkBh8C,EAAKj/D,cAAc,CACzHzxB,GAAI,6DACJ2sI,iBAAkBj8C,EAAKj/D,cAAc,CACrCzxB,GAAI,4DACJ4sI,kBAAmBV,EAAgBW,kBAAkB,EAAOhX,SAAUlpB,EAASoW,SAfzE,KAAMpM,SAZQ,0CAA0CtrE,KAAlD5mC,EAYwBunI,GAZsCvnI,EAAM,WAAWA,KAAhF,IAACA,CAYsC,EAe8CwuH,QAASoZ,GAC7G,gBAAoBhB,GAAe,CAAE1gB,SAfjB9+G,GAAUogI,EAAgBpgI,EAAM2zE,QAeWkrD,SAZtC,CAACxhI,EAAME,IAAOgjI,EAAkB,CAAEljI,OAAME,OAY8BkiI,kBAAmBA,EAAmBX,gBAAiBqB,EAAc1B,sBAAuBA,EAAuB55C,KAAMA,IACxN,gBAAoB85C,GAAiB,CAAEF,sBAAuBA,EAAuBC,6BAA8BA,EAA8B7B,wBAAyBA,EAAyBC,6BAA8BA,EAA8BC,wBAAyBA,EAAyBpB,MAZhSsF,IAAyBb,UAlBT9nI,EAkBiE2oI,EAlBpDC,EAkB0EZ,EAlB/D,IAA9BhnI,EAkByD6mI,GAlBnBlG,UAAU,EAAGiH,EAAO7jI,QAAQ/E,IAAcgB,EAAK2gI,UAAUiH,EAAO3jI,QAAvG,IAACjE,EAAMhB,EAAa4oI,CAkB0F,EAY6Lr8C,KAAMA,IAAS,EAEtV,GAAoB4S,GAAkB41B,YAAY5P,IAC3C0jB,GAAmBprI,IAC5B,MACMqrI,GADiB,EAAA1nB,GAAA,GAAc,gBACI2nB,GAAA,EAAoBC,GAAA,EAC7D,OAAQ,gBAAoB,MAA2B,CAAElU,kBAAmB,IACxE,gBAAoBgU,EAAiB,CAAEtgC,QAAS/qG,EAAM+qG,QAASygC,SAAS,EAAMlnB,qBAAqB,EAAOmnB,eAAe,EAAMC,aAAc,QAASzjC,UAAW,oBAC7J,gBAAoBgiC,GAAuBrrI,OAAOiI,OAAO,CAAC,EAAG7G,KAAU,ECnGtE2rI,GAA0B,EAAG5mI,OAAM6mI,iBAAgBv0C,iBAC5D,MAAM4Q,EAAY,KAAG,uHAAwH,CACzI,cAAe5Q,IAEb0Y,GAAU,IAAA3kB,cAAY,KACnBwgD,GAGLA,EAAe7mI,EAAK,GACrB,CAACA,EAAM6mI,IACV,OAAQ,gBAAoB,MAAO,CAAE3jC,UAAWA,EAAW8H,QAASA,GAChE,gBAAoB,OAAQ,CAAE9H,UAAW,sBAAwBljG,EAAKm5B,UAAUz1B,OAChF,gBAAoB,OAAQ,CAAEw/F,UAAW,SACrC,IACAljG,EAAKoU,YAAY1Q,MACjB,KAAM,ECZLojI,GAAuB7rI,IAChC,MAAM,sBAAE0oI,EAAqB,QAAErlH,GAAU,EAAK,SAAEyoH,EAAQ,SAAE/2B,GAAa/0G,EACjE4rI,GAAiB,IAAAxgD,cAAatsC,IAChCi2D,EAASj2D,EAAOitF,wBAAyBjtF,EAAO3lC,YAAY1W,IAAI,GACjE,CAACsyG,IACJ,OAAK1xF,GAA4C,IAAjCqlH,EAAsB/+H,OAG9B,gBAAoB,WAAgB,KACxC,gBAAoBo6H,GAAuB,CAAE97B,UAAW,0CACpD,gBAAoB,KAAkB,CAAE7pG,GAAI,8DAChDilB,EAAW,gBAAoB,MAAO,CAAE4kF,UAAW,4EAC/C,gBAAoB,MAAO,CAAEA,UAAW,sBAA2B,gBAAoB,MAAO,CAAEA,UAAW,iCAAmCygC,EAAsBzqI,KAAK8G,GAAU,gBAAoB4mI,GAAyB,CAAEzlI,KAAK,EAAAmE,EAAA,IAAetF,EAAKoU,YAAY1W,KAAMsC,KAAMA,EAAMsyF,YAAY,QAAgBtyF,EAAKoU,YAAY1W,IAAKqpI,QAAY7nI,GAAY2nI,eAAgBA,QANhX,IAMuY,ECbtZ,SAASI,GAAmC7zG,EAAGC,GAC3C,OAAO,QAAgBD,EAAEhf,YAAY1W,IAAK21B,EAAEjf,YAAY1W,IAC5D,CCsBA,MAAMwpI,GAAsB,CAAC,CAAEhgC,MAAO,SAAW,CAAEA,MAAO,UAC7CigC,GAAsBlsI,IAC/B,MAAM,SAAE+0G,EAAQ,eAAEojB,EAAc,WAAEt3H,GAAeb,EAC3CZ,EAAewqF,GAAqBt0C,IACpCl0C,EAAWwoF,GAAqB1+B,KAC9BihF,gBAAiBC,EAA0BC,iBAAkBC,GD1BlE,SAAuCzrI,GAC1C,MAAMsd,EAAYyrE,GAAqB4G,KACvC,QAAUryE,EAAW,6BACrB,MAAMu1F,EAAgB9pB,GAAqBrxC,IACrC4zF,EAAkBviD,GAAqBtxC,IAEvC5wC,EAD0B7G,EAAW5C,KAAKk6B,GAAMA,EAAEyG,gBAAgBn8B,MACjC8F,QAAO,CAACb,EAAQjF,KACnD,MAAM0W,EAAcgzH,EAAgBlmI,IAAIxD,GACxC,IAAK0W,EACD,OAAOzR,EAEX,MAAMw2B,EAAYw1E,EAAcztG,IAAIkT,EAAY+kB,WAChD,IAAKA,EACD,OAAOx2B,EAEX,MAAM2kI,EAAmBnuG,EAAUA,UAAUqY,aAAahxC,QAAQyT,GAA8B,aAAvBA,EAAG+6C,kBAW5E,OAVArsD,EAAO2kI,iBAAiB5oI,QAAQ4oI,EAAiBpuI,KAAK+a,IAAO,CACzDklB,UAAWA,EAAUA,UACrB6tG,wBAAyBtpI,EACzB0W,YAAaH,OAEjBtR,EAAOykI,gBAAgB1oI,QAAQy6B,EAAUA,UAAUqY,aAAat4C,KAAK+a,IAAO,CACxEklB,UAAWA,EAAUA,UACrB6tG,wBAAyBtpI,EACzB0W,YAAaH,OAEVtR,CAAM,GACd,CACC2kI,iBAAkB,GAClBF,gBAAiB,KAErB,MAAO,CACHA,gBAAiB,KAASzkI,EAAOykI,gBAAiBH,IAClDK,iBAAkB,KAAS3kI,EAAO2kI,iBAAkBL,IAE5D,CCT4GO,CAA8B1rI,GAChIqpI,EC7BH,SAAmD/R,EAAgBt3H,GACtE,MAAM01C,EAAeqzC,GAAqBtxC,IAC1C,OAAO,IAAA9rC,UAAQ,IACPurH,GAAyBI,IACN,SAA2CA,EAAexrD,WAExEpnE,QAAO,EAAG/C,iBAEX,MAAMgqI,EAAaj2F,EAAatwC,KAAI,QAAMzD,EAAY,gBACtD,QAAKgqI,IAIG3rI,EAAWmxB,MAAMkM,IAAc,QAAgBsuG,EAAWtuG,UAAWA,EAAUU,gBAAgB6yB,SAAQ,IAE9GxzD,KAAI,EAAGuE,gBAAiBA,IAE1B,IACR,CAAC+zC,EAAc4hF,EAAgBt3H,GACtC,CDUmD4rI,CAA0CtU,EAAgBt3H,IAClG6rI,EAAWC,IAAgB,IAAA3iD,WAAS,GACrCo6C,EAAc,IAAMuI,GAAcD,IAWlC,OAAEzvF,EAAM,YAAE6sC,GAAgBh9E,IAC1B2gH,EApCV,SAAwB0K,GACpB,MAAMrpC,GAAO,EAAAC,GAAA,KACPx4C,EAAeqzC,GAAqBtxC,IACpCz3C,EAAa+oF,GAAqBrxC,IACxC,GAAIw/E,GAAyBI,IAAmBA,EAAexrD,UAC3D,OAAOwrD,EAAexrD,UAE1B,GAAIqrD,GAA4BG,IAAmBA,EAAeM,4BAA6B,CAC3F,MAAMt/G,EAAco9B,EAAatwC,IAAIkyH,EAAeM,8BACpD,QAAUt/G,EAAa,6CACvB,MAAM+kB,EAAYr9B,EAAWoF,IAAIkT,EAAY+kB,WAE7C,OADA,QAAUA,EAAW,6CACd,GAAGA,EAAUA,UAAUz1B,UAAU0Q,EAAY1Q,QACxD,CACA,OAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,sDACpC,CAqBwBwuI,CAAezU,GACnC,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBhL,GAAA,EAAU,CAAE5I,qBAAqB,EAAMvY,YAAaigC,GAAqB3e,aAAc,EAAGC,iBAAgBnrB,YAAc,gBAAoB45B,GAAA,EAAQ,CAAEjsB,QAASwd,EAAgBtlB,UAAW,oGAAqG4kC,UAAWzqC,EAAS,qBAAuB,uBAAwBn4F,MAAOwjH,IAAiBG,WAAY,EAAGC,mBAAqB,gBAAoB,MAAO,CAAE5lB,UAAW,oFACld7oG,EAAa0tI,iCAAoC,gBAAoBjB,GAAqB,CAAEnD,sBAAuB4D,EAAgCv3B,SAAU,CAACkjB,EAA6BQ,KAVzK,EAACR,EAA6BQ,KACxD1jB,EAAS,CACLkjB,8BACAQ,+BACF,EAOcsU,CAAsB9U,EAA6BQ,GACnD5K,GAAe,EAChBie,SAAU9T,GAA4BG,IACrCA,EAAeM,8BAAkC,KACzD,gBAAoB8L,GAAkB3lI,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEm4H,eAAgBA,EAAgBiM,YAAaA,EAAavW,cAAeA,KAC1I6e,EAAa,gBAAoBtB,GAAiB,CAAEjT,eAAgBA,EAAgBuQ,sBAAuB0D,EAA0BlC,uCAAwCA,EAAwCR,kBAAmBsD,OAAO5rI,EAAS6rI,+BAAiC,IAAKnG,0BAA2B7pF,EAAQ8pF,+BAAgCj9C,EAAak9C,0BAA2B5nI,EAAa8tI,qBAAsBn4B,SAAWpoC,IApBxa,CAACA,IACxBggE,GAAa,GACb53B,EAAS,CAAEpoC,aAAY,EAmBPwgE,CAAmBxgE,GACnBkhD,GAAe,EAChB9iB,QAASq5B,IAAkB,QAAW,E,2BEvD7D,MAAM,GAAqB,CACvB,CAAEn4B,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,IACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,MAE5BkhC,GAAa,CAACt+C,EAAMv5B,KAC7B,OAAQA,GACJ,IAAK,YACD,OAAOu5B,EAAKj/D,cAAc,CAAEzxB,GAAI,8DACpC,IAAK,YACD,OAAO0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,8DACpC,QACI,OACR,EAEEivI,GAAgBrtI,IAClB,MAAM,QAAE+vG,EAAO,wBAAEx6C,EAAuB,MAAE9sD,EAAK,WAAE4uF,GAAa,GAAUr3F,EAClEyrG,OAAmCxnG,IAA5BsxD,OAAwCtxD,EAAY,6BAC3DqpI,EAAqB,sBAAsBvoB,GAAA,GAAyBt8G,KACpEsuG,EAAa,KAAG,uCAAwCu2B,EAAoB,CAC9E,cAAej2C,IAEnB,OAAQ,gBAAoB,MAAO,CAAE4Q,UAAW8O,EAAYhH,QAASA,EAAStnG,MAAOA,GACjFgjG,EAAO,gBAAoB,OAAQ,CAAExD,UAAW,KAAG,eAAgBwD,KAAW,KAC9E,gBAAoB,OAAQ,KAAMhjG,GAAQ,EAErC8kI,GAAqBvtI,IAC9B,MAAM,wBAAEu1D,GAA4Bv1D,EAC9B8uF,GAAO,EAAAC,GAAA,KACPgzB,EAAUqrB,GAAWt+C,EAAMv5B,GACjC,OAAKwsD,EAGG,gBAAoBvW,GAAA,GAAoB,CAAEwb,QAAS,MAAOlD,UAAW,IAAKwG,UAAW,GACzF,gBAAoB+iB,GAAczuI,OAAOiI,OAAO,CAAC,EAAG7G,IACpD,gBAAoB+rG,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IAAsB+V,IAJvF,gBAAoBsrB,GAAczuI,OAAOiI,OAAO,CAAC,EAAG7G,GAI6C,ECnC1G,GAAqB,CACvB,CAAEisG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,IACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,MAEnC,GAAUlsG,IACZ,MAAM,wBAAEu1D,EAAuB,eAAEg4D,EAAc,OAAEnrB,EAAM,MAAEsiC,GAAU1kI,EAC7DyrG,OAAmCxnG,IAA5BsxD,OAAwCtxD,EAAY,6BACjE,OAAQ,gBAAoBypH,GAAA,EAAgB,CAAEzlB,UAAW,yDAA0Dh+F,MAAOy6H,EAAOtiC,OAAQA,EAAQ2N,QAASwd,EAAgB4O,SAAU1wB,GAAQ,EAEnL+hC,GAAuBxtI,IAChC,MAAM,wBAAEu1D,GAA4Bv1D,EAC9B8uF,GAAO,EAAAC,GAAA,KACPgzB,EAAUqrB,GAAWt+C,EAAMv5B,GACjC,OAAKwsD,EAGG,gBAAoBvW,GAAA,GAAoB,CAAEwb,QAAS,MAAOlD,UAAW,IAAKwG,UAAW,GACzF,gBAAoB,GAAQ1rH,OAAOiI,OAAO,CAAC,EAAG7G,IAC9C,gBAAoB+rG,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,GAAoB4X,aAAc,CAAE,QAAS,CAAC,GAAI,KAAQ7B,IAJ3H,gBAAoB,GAAQnjH,OAAOiI,OAAO,CAAC,EAAG7G,GAIuF,ECH7I,SAASytI,GAAejrI,EAAYC,EAAKirI,GAC5C,OAAO,QAAgBjrI,EAAKirI,KAAa,SAAgB,QAAMlrI,GAAakrI,EAChF,CCdA,MAAM,GAAc,CAChB,CACIzhC,MAAO,SAEX,CACIA,MAAO,UAMF0hC,GAAgB,EAAG7B,WAAU3qI,aAAY4zG,eAClD,MAAM64B,GAAoB,IAAAphI,UAAQ,IACvBs/H,GAAY3qI,EAAWsE,MAAMm4B,GAAM6vG,GAAe7vG,EAAEp7B,WAAYo7B,EAAEn7B,IAAKqpI,MAC/E,CAACA,EAAU3qI,IACR2tF,GAAO,EAAAC,GAAA,KACP8+C,EAAgBD,EAChBA,EAAkBnlI,MAClBqmF,EAAKj/D,cAAc,CACjBzxB,GAAI,oDAEL8jI,EAAc4L,IAAmB,IAAA9jD,UAAS,IAC3CxlF,GAAQ,IAAAgI,UAAQ,KAClB,IAAIhI,EAAQrD,EAAWoE,QAAO,EAAGkD,WAAYA,EAAM6zE,cAAchuD,SAAS4zG,EAAa5lD,iBAIvF,OAHIsxD,IACAppI,EAAQA,EAAMvG,KAAK8G,GAASA,EAAKvC,aAAeorI,EAAkBprI,WAAa5D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAE+mI,UAAU,IAAU/mI,KAEzI,KAAOP,GAAQN,GAAcA,EAAUuE,MAAM6zE,eAAc,GACnE,CAACn7E,EAAY+gI,EAAc0L,IACxBlL,EAAoB5zC,EAAKj/D,cAAc,CACzCzxB,GAAI,wEAER,OAAQ,gBAAoB+uH,GAAA,EAAU,CAAEllB,UAAW,wBAAyBsc,qBAAqB,EAAMoJ,kBAAkB,EAAOrJ,qBAAqB,EAAMtY,YAAa,GAAa4hB,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,sDAAuD7mF,MAvBvS,IAuBmUC,OAtBlU,IAsBgW6gH,aAAcA,EAAcQ,kBAAmBA,EAAmB5b,WAxB3a,GAwBoc0b,YAAY,EAAMh+H,MAAOA,EAAOupI,aAAcH,EAAmB3L,SAAU6L,EAAiB9f,WAAY,EAAGjpH,WACnjB,MAAMsyF,EAAau2C,GAAqB7oI,EAAK+mI,SAC7C,OAAQ,gBAAoByB,GAAmB,CAAEl2C,WAAYA,EAAY5uF,MAAO1D,EAAK0D,MAAOsnG,QAAS,KAC7FgF,EAAShwG,GACT8oH,GAAe,EAChBt4D,wBAAyBxwD,EAAKwwD,yBAA2B,IAC7Dy4E,mBAAoB,KAC3BF,EAAgB,GAAG,EACpBxgB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBigB,GAAqB,CAAEj4E,wBAAyBq4E,aAA6D,EAASA,EAAkBr4E,wBAAyBmvE,MAAOmJ,EAAezrC,OAAQA,EAAQmrB,eAAgBA,KAAsB,EC3B9S0gB,GAA4BjuI,IACrC,MAAM,SAAE+0G,EAAQ,SAAE+2B,GAAa9rI,EACzB8uF,GAAO,EAAAC,GAAA,KACP5tF,EAAayoF,GAAqBp3B,IAClCG,EAAyBi3B,GAAqBh3B,IAC9Cs7E,GAAiB,IAAA1hI,UAAQ,IApBP,EAACrL,EAAYgtI,EAAqBr/C,EAAMg9C,KAChE,MAAMsC,EAA+BjtI,EAAW6wB,MAAM9tB,IAAc,QAAgBA,EAAUzB,IAAKqpI,KACnG,IAAKA,GAAYsC,EACb,OAAOjtI,EAEX,MAAMktI,EAAwBF,EAAoB1oI,MAAK,EAAGhD,UAAU,QAAgBA,EAAKqpI,KACzF,QAA8B7nI,IAA1BoqI,EACA,OAAOltI,EAEX,MAAM,MAAEsH,EAAK,wBAAE8sD,GAA4B84E,EAI3C,MAAO,CAHezvI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGwnI,GAAwB,CAAE5lI,MAAmC,cAA5B8sD,EAC7Eu5B,EAAKj/D,cAAc,CAAEzxB,GAAI,sDACzBqK,OACgBtH,EAAW,EAQ1BmtI,CAAoBntI,EAAYwxD,EAAwBm8B,EAAMg9C,IACtE,CAAC3qI,EAAYwxD,EAAwBm8B,EAAMg9C,IAC9C,OAAO,gBAAoB6B,GAAe,CAAE54B,SAAUA,EAAU5zG,WAAY+sI,EAAgBpC,SAAUA,GAAW,ECtBxGyC,GAAgBvuI,IACzB,MAAM,KAAE+E,GAAS/E,EACXwuI,EAAyBC,IAC3B,MAAM7U,EAAkB,CACpBpjD,WAAY,SACZz4C,OAAQ2wG,GAAU3pI,GAClBH,KAAM,iBACNk6C,OAAQ2vF,EAAWvtH,QAAQze,KAE/BzC,EAAM2uI,QAAQ/U,EAAiBh7H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEgc,WAAY0tH,EAAWvtH,QAAQze,MAAO,EAE5GmsI,EAA2BH,IAC7B,MAAMvqI,GAAY,QAAMuqI,EAAWjsI,WAAY,uBACzCo3H,EAAkB,CACpBpjD,WAAY,WACZz4C,OAAQ2wG,GAAU3pI,GAClBH,KAAM,mBACNk6C,OAAQ56C,GAEZlE,EAAM2uI,QAAQ/U,EAAiBh7H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEb,cAAa,EAEnF2qI,EAA2B1W,IAC7B,GAAIJ,GAAyBI,GAAiB,CAC1C,MAAMyB,EAAkB,CACpBpjD,WAAY,aACZz4C,OAAQ2wG,GAAU3pI,GAClBH,KAAM,mBACNk6C,OAAQ,CACJj8C,IAAKs1H,EAAexrD,YAG5B3sE,EAAM2uI,QAAQ/U,EAAiBh7H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEozH,mBAC5E,CACA,GAAIH,GAA4BG,GAAiB,CAC7C,MAAMyB,EAAkB,CACpBpjD,WAAY,aACZz4C,OAAQ2wG,GAAU3pI,GAClBH,KAAM,sBACNk6C,OAAQ,CACJkT,qBAAsBmmE,EAAeM,4BACrCt/G,YAAag/G,EAAeF,8BAGpCj4H,EAAM2uI,QAAQ/U,EAAiBh7H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEozH,mBAC5E,GAEJ,OAAQn4H,EAAM+E,KAAKk1H,iBACf,KAAKtC,GAAkBgD,mBACnB,OAAQ,gBAAoBsT,GAA0B,CAAEnC,SAAUjU,GAAyB9yH,GAAQA,EAAKb,eAAYD,EAAW8wG,SAAU65B,IAC7I,KAAKjX,GAAkB8C,iBACnB,OAAO,gBAAoBqJ,GAAwB,CAAE5iH,QAASnc,EAAMgwG,SAAUy5B,IAClF,KAAK7W,GAAkBmD,aACnB,OAAQ,gBAAoBoR,GAAoB,CAAE/T,eAAgBD,GAAmBnzH,GAAQA,EAAKozH,oBAAiBl0H,EAAWpD,WAAYkE,EAAKlE,WAAYk0G,SAAU85B,IACzK,UAAK5qI,EACD,OAAO,KACX,SAGJ,SAAwC6qI,GACpC,MAAM,IAAIrwI,MAAM,8BAA8BqwI,IAClD,CAJQC,CAA+B/uI,EAAM+E,KAAKk1H,iBAKlD,OAAO,IAAI,EAEf,SAASyU,GAAU3pI,GACf,MAAqB,cAAdA,EAAKH,KACN,CACEA,KAAM,qBACNs5B,UAAW,CAAEtlB,gBAAiB7T,EAAK6T,kBAErC,CACEhU,KAAM,mBACNq5B,QAAS,CAAErlB,gBAAiB7T,EAAK6T,iBAE7C,CCJA,SAhEwB,EAAG7T,OAAMy3H,8BAA6BwS,qBAAoBL,UAAS9S,eACvF,MAMM9kB,EAAa,KAAG,sBAAuB,uBAAuBgO,GAAA,GAAyBhgH,EAAK0D,SAAU,CACxG,kCAAmC1D,EAAKw0H,WAEtC0V,EAAmB,KAAG,wBAAyB,sBAAuB,CACxE,qCAAsClqI,EAAKssH,UAEzClzG,EAAYyrE,GAAqB4G,KACvC,QAAUryE,EAAW,6BACrB,MAAM,oBAAE+wH,EAAmB,8BAAEC,GAqBjC,SAAiCpqI,EAAMoZ,GACnC,IAAI9Z,EACJ,MAAM6E,EAAiB0gF,GAAqB5yC,IACtCkb,EAAe03B,GAAqBr3B,GAA8Bp0C,IACxE,OAAO,IAAA3R,UAAQ,KACX,IAAInI,EAAIswB,EACR,MAAMy6G,EAAsL,QAAnKz6G,EAA+G,QAAzGtwB,EAAK6tD,aAAmD,EAASA,EAAal+C,6BAA0C,IAAP3P,OAAgB,EAASA,EAAGxD,kBAA+B,IAAP8zB,OAAgB,EAASA,EAAGlvB,MAAMy4B,GAAcA,EAAUA,UAAUU,gBAAgBhmB,kBAAoB7T,EAAK6T,kBAC3Ss2H,KAAyBE,IAC3B,SAAsBA,EAAgBlxG,YACtCh1B,EAAe8oB,MAAMkM,GAAcA,EAAUh1B,eAAe8oB,MAAM41G,IAAkB,QAAgBA,EAAc1pG,UAAUz7B,IAAK2sI,EAAgBlxG,UAAUU,gBAAgB6yB,OAAOhvD,UAChL4sI,EAA8C,YAAdtqI,EAAKH,MACvCG,EAAKlE,WAAWmxB,MAAMslB,GAASpuC,EAAe8oB,MAAMyL,GAAMA,EAAEv0B,eAAe8oB,MAAM4L,IAAM,QAAgBA,EAAEM,UAAUz7B,IAAK60C,EAAK1Y,gBAAgBn8B,WAGjJ,MAAO,CACHysI,sBACAG,gCACAF,8BALkCpqI,EAAKk1H,kBAAoBtC,GAAkBgD,qBAC5EuU,GAAuBG,GAK3B,GACF,CAC2G,QAAzGhrI,EAAK6tD,aAAmD,EAASA,EAAal+C,6BAA0C,IAAP3P,OAAgB,EAASA,EAAGxD,WAC9IqI,EACAnE,EAAKH,KACLG,EAAKlE,WACLkE,EAAKk1H,gBACLl1H,EAAK6T,iBAEb,CAhDmE02H,CAAwBvqI,EAAMoZ,GAC7F,OAAQ,gBAAoB,MAAO,CAAE8pF,UAAW8O,GAC5C,gBAAoB,MAAO,CAAE9O,UAAW,2BACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,+CAAgDoI,OAAQ,CAC5F+oI,MAAQC,GAAW,gBAAoB,OAAQ,CAAEvnC,UAAW,SAAWunC,OAEnF,gBAAoB5T,GAAiB,CAAEh3H,KAAMG,EAAKH,KAAM6D,MAAO1D,EAAK0D,MAAOmQ,gBAAiB7T,EAAK6T,gBAAiBijH,SApBhG,KAClBA,EAAS92H,EAAK,EAmB6H+2H,gBAAiBoT,IAC5J,gBAAoB,MAAO,CAAEjnC,UAAWgnC,GACpC,gBAAoB,MAAO,CAAEhnC,UAAW,2BACpC,gBAAoB,MAAO,CAAEA,UAAW,4BACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,iDAChD,gBAAoBm+H,GAAiB,CAAExnB,SAtBlBj2D,IAC7BkwF,EAAmBpwI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,GAAO,CAAEk1H,gBAAiBn7E,IAAU,EAqBLu9E,UAAWt3H,EAAKk1H,gBAAiBuC,4BAA6BA,IACxI,gBAAoB+R,GAAc,CAAExpI,KAAMA,EAAM4pI,QAASA,MACvD5pI,EAAKssH,SAAY,gBAAoB,MAAO,CAAEppB,UAAW,6DACvD,gBAAoB,OAAQ,CAAEA,UAAW,oBACzC,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE7pG,GAAI2G,EAAKssH,cACvD8d,GAAkC,gBAAoB,MAAO,CAAElnC,UAAW,uEACxE,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE7pG,GAAI,4EAA+E,ECzCtIqxI,GAA0BzvI,IACnC,MAAM,iBAAEy5H,EAAmB,GAAE,SAAEoC,EAAQ,QAAE8S,EAAO,mBAAEK,GAAuBhvI,EACnEw8H,ECH6B,MACnC,MAAM/F,EAAgB,GAChB3nC,GAAO,EAAAC,GAAA,KACP/hC,EAAqC48B,GAAqB78B,IAC1DS,EAAmCo8B,GAAqBr8B,IACxDD,EAA+Bs8B,GAAqBv8B,IAmB1D,OAlBIL,GACAypE,EAAchzH,KAAK,CACfrF,GAAIu5H,GAAkBgD,mBACtBlyH,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,wDAGpCovD,GACAipE,EAAchzH,KAAK,CACfrF,GAAIu5H,GAAkB8C,iBACtBhyH,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,sDAGpCkvD,GACAmpE,EAAchzH,KAAK,CACfrF,GAAIu5H,GAAkBmD,aACtBryH,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,kDAGjCq4H,CAAa,EDrBgBiZ,GAOpC,OAAQ,gBAAoB,MAAO,CAAEznC,UAAW,uBAAyBwxB,EAAiBx7H,KAAI,CAAC8G,EAAMpC,KACjG,MAAMgtI,EAPsB,EAAC5qI,EAAMikC,KAC3BjkC,EAAKw0H,UAAYvwF,EAMJ4mG,CAAwB7qI,EAJlC,CAACpC,GACLA,IAAU82H,EAAiB9vH,OAAS,EAGQq/B,CAAOrmC,IAC1D,OAAQ,gBAAoBkpH,GAAgB,CAAE3F,eAAgBypB,EAAczpI,IAAKnB,EAAK6T,gBAAkB7T,EAAKk1H,iBACzG,gBAAoB4V,GAAwB,CAAE9qI,KAAMA,EAAMmB,IAAKnB,EAAK6T,gBAAkB7T,EAAKk1H,gBAAiB4B,SAAUA,EAAU8S,QAASA,EAASK,mBAAoBA,EAAoBxS,4BAA6BA,IAAgC,IAC3P,EETR,GARkCx8H,IAC9B,MAIMqb,EAAOrb,EAAM+E,KAAKk5B,QAAQQ,kBAAkBpjB,KAClD,OAAQ,gBAAoB,IAAK,CAAE00F,QALnB,KACZ/vG,EAAM+vG,QAAQ/vG,EAAM+E,MACpB/E,EAAM8vI,iBAAiB,EAG0B7nC,UAAW,oEAAqEx/F,MAAO4S,GAAQA,EAAM,ECF9J,GAHkCrb,GACtB,gBAAoB,MAAO,CAAEioG,UAAW,kCAAoCjoG,EAAM+vI,eAAe9xI,KAAK8G,GAAU,gBAAoB,GAA0B,CAAEmB,IAAKnB,EAAKk5B,QAAQQ,kBAAkB7lB,gBAAiB7T,KAAMA,EAAMgrG,QAAS/vG,EAAM+0G,SAAU+6B,gBAAiB9vI,EAAM8vI,qBCEhRE,GAA8BhwI,IACvC,MAAM,KAAE+E,GAAS/E,EAKXqb,EAAOtW,EAAKm5B,UAAUU,gBAAgB6yB,OAAOp2C,KAE7C6zH,EADiBtlD,GAAqB5yC,IACDhlB,MAAMkM,GAAcA,EAAUh1B,eAAe8oB,MAAM41G,IAAkB,QAAgBA,EAAc1pG,UAAUz7B,IAAKsC,EAAKm5B,UAAUU,gBAAgB6yB,OAAOhvD,SACnM,OAAQ,gBAAoB,IAAK,CAAEstG,QAPnB,KACZ/vG,EAAM+vG,QAAQhrG,GACd/E,EAAM8vI,iBAAiB,EAK0B7nC,UAAW,KAAG,kCAAmC,CAC9F,yCAA0CinC,EAC1C,6CAA8CA,IAC9CzmI,MAAO4S,GAAQA,EAAM,ECZjC,GAHoCrb,GACxB,gBAAoB,MAAO,CAAEioG,UAAW,oCAAsCjoG,EAAM+vI,eAAe9xI,KAAK8G,GAAU,gBAAoBirI,GAA4B,CAAE9pI,IAAKnB,EAAKm5B,UAAUU,gBAAgBhmB,gBAAiB7T,KAAMA,EAAMgrG,QAAS/vG,EAAM+0G,SAAU+6B,gBAAiB9vI,EAAM8vI,qBCe3RG,GAA4BjwI,IAC9B,IAAIqE,EACJ,MAAM,eAAE0rI,EAAc,SAAEh7B,EAAQ,gBAAE+6B,GAAoB9vI,EACtD,OAA2C,QAAlCqE,EAAK0rI,EAAe/uI,gBAA6B,IAAPqD,OAAgB,EAASA,EAAGsF,QAAW,gBAAoB,WAAgB,KAC1H,gBAAoB,MAAO,CAAEs+F,UAAW,sCACpC,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE7pG,GAAI,kDACpD,gBAAoB,GAA0B,CAAE2xI,eAAgBA,EAAe/uI,SAAU+zG,SAAUA,EAAU+6B,gBAAiBA,KAAuB,IAAI,EAE3JI,GAA8BlwI,IAChC,IAAIqE,EACJ,MAAM,eAAE0rI,EAAc,SAAEh7B,EAAQ,gBAAE+6B,GAAoB9vI,EACtD,OAA6C,QAApCqE,EAAK0rI,EAAelvI,kBAA+B,IAAPwD,OAAgB,EAASA,EAAGsF,QAAW,gBAAoB,WAAgB,KAC5H,gBAAoB,MAAO,CAAEs+F,UAAW,sCACpC,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE7pG,GAAI,oDACpD,gBAAoB,GAA4B,CAAE2xI,eAAgBA,EAAelvI,WAAYk0G,SAAUA,EAAU+6B,gBAAiBA,KAAuB,IAAI,EAErK,GA/BiC9vI,IAC7B,MAAM,gBAAE8vI,EAAe,SAAE/6B,EAAQ,eAAEg7B,GAAmB/vI,EAItD,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,iEAAkEwf,SAHzFjpH,IACrBA,EAAEw1H,iBAAiB,GAGnB,gBAAoB,MAAO,CAAE/rB,UAAW,iCACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,6CAC5C,gBAAoB,SAAU,CAAE6pG,UAAW,mDAAoD8H,QAAS+/B,KAC5G,gBAAoB,MAAO,CAAE7nC,UAAW,+BACpC,gBAAoBgoC,GAA0B,CAAEF,eAAgBA,EAAgBh7B,SAAUA,EAAU+6B,gBAAiBA,IACrH,gBAAoBI,GAA4B,CAAEH,eAAgBA,EAAgBh7B,SAAUA,EAAU+6B,gBAAiBA,KAAqB,ECXlJ,GAAwB,CAC1B,CACI7jC,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,KAIHikC,GAAuBnwI,IAChC,IAAIqE,EAAIswB,EACR,MAAM,MAAEnwB,GAAUxE,EACZ+0G,EAAY+2B,IACd9rI,EAAM+0G,SAAS+2B,EAAS,EAEtBh9C,GAAO,EAAAC,GAAA,KACb,OAAgC,QAAzB1qF,EAAKG,EAAMxD,gBAA6B,IAAPqD,OAAgB,EAASA,EAAGsF,UAAyC,QAA3BgrB,EAAKnwB,EAAM3D,kBAA+B,IAAP8zB,OAAgB,EAASA,EAAGhrB,QAGzI,gBAAoBwjH,GAAA,EAAU,CAAEllB,UAAW,2BAA4Bsc,qBAAqB,EAAMoJ,kBAAkB,EAAOrJ,qBAAqB,EAAMtY,YAAa,GAAuBshB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzjH,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,kDAAoD+9H,SAAU,cAAel0B,UAAW,qCAAsC7F,OAAQA,EAAQ2N,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoB,GAAyB,CAAEkiB,eAAgBvrI,EAAOuwG,SAAUA,EAAU+6B,gBAAiBjiB,MAFtmB,IAE2nB,E,gBC1BnoB,SAASuiB,GAAyBpwI,GACrC,IAAIqE,EAAIswB,EACR,MAAM,OAAEvwB,GAAWpE,EACb8uF,GAAO,EAAAC,GAAA,MAENshD,EAAkBC,IAAwB,IAAAtmD,UAA8F,QAApFr1D,EAAkC,QAA5BtwB,EAAKD,EAAOwc,kBAA+B,IAAPvc,OAAgB,EAASA,EAAGksI,gBAA6B,IAAP57G,OAAgB,EAASA,EAAG67G,aAC7KjoD,EAAWoB,KACXzoE,EAAU0oE,GAAqBx5B,GAAmBhsD,EAAO8c,UAC/D,OAAKA,IAGqB,KAAAs/F,6BAA4Bt/F,GAC/BuvH,gBAQf,gBAAoB,MAAO,CAAExoC,UAAW,8DAC5C,gBAAoBkrB,GAAA,EAAU,CAAEpK,SANNqK,IAC1B,IAAI/uH,EACJisI,EAAqBld,GACrB7qC,EAAS3kB,GAAiCx/D,EAAO3B,IAAK7D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzC,EAAOwc,YAAa,CAAE2vH,SAAU3xI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAgC,QAA5BxC,EAAKD,EAAOwc,kBAA+B,IAAPvc,OAAgB,EAASA,EAAGksI,UAAW,CAAEC,YAAapd,OAAiB,EAGlMnpH,MAAOomI,EAAkB9sI,KAAMurF,EAAKj/D,cAAc,CAAEzxB,GAAI,qCACxH,gBAAoBotG,GAAA,GAAoB,CAAEwb,QAAS,OAAQsD,UAAW,IAAMxG,UAAW,KACnF,gBAAoB,IAAK,CAAE7b,UAAW,uEACtC,gBAAoB8D,GAAA,GAAQ,CAAEyY,QAAS,2BAA4BxY,YAAa,CAAC,CAAEC,MAAO,WAAcnd,EAAKj/D,cAAc,CAAEzxB,GAAI,0CACrIiyI,EAAoB,gBAAoBK,GAAA,EAAS,CAAE9rI,KAAM,YAAckqF,EAAKj/D,cAAc,CAAEzxB,GAAI,2CAA+C,MAhBxI,IAiBf,CCpBO,MAAMuyI,GAA0B,EAAGxyH,gBACtC,MAAM,OAAE/Z,EAAM,gBAAEk2H,EAAe,iBAAEb,EAAgB,oBAAE2B,EAAmB,wBAAEM,EAAuB,SAAEC,EAAQ,aAAE5C,EAAY,eAAEC,EAAc,YAAEwC,EAAW,aAAEC,GAAkB9C,GAA2B,CAAEx6G,cACrM,OAAQ,gBAAoB,WAAgB,OACtCm8G,GAAmB,gBAAoB8V,GAA0B,CAAEhsI,OAAQA,IAC7E,gBAAoB,MAAO,CAAE6jG,UAAW,+CACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE5oH,GAAI,kDACpD,gBAAoBqxI,GAAwB,CAAEhW,iBAAkBA,EAAkBoC,SAAUJ,EAAckT,QAASnT,EAAawT,mBAAoBjW,IACpJ2C,EAA2B,gBAAoByU,GAAqB,CAAE3rI,MAAO42H,EAAqBrmB,SAAUikB,IAAsB2C,EAA6E,KAAjE,gBAAoB,MAAO,CAAE1zB,UAAW,sBAAgC,ECZ5N,GAAoBvG,GAAkB41B,YAAY5P,IAC3CkpB,GAAsB,EAAGxsI,aAClC,MAAMozH,GAAkB,QAAgBpzH,GAClC2gH,GAAA,IAAyB,EAAA16G,EAAA,IAAejG,EAAO3B,MAC/C,GACAqzG,EAAU,KAAG,iCAAkC,mCAAoC,mBAAmB0hB,KAC5G,OAAQ,gBAAoBzQ,GAAiB,CAAE9e,UAAW6N,GACtD,gBAAoB,MAA2B,CAAEuhB,kBAAmB,IAChE,gBAAoBsZ,GAAyB,CAAExyH,UAAW/Z,EAAO3B,OAAS,ECN/E,SAASouI,GAA+BzsI,GAAQ,KAAE0qF,EAAI,SAAEvG,EAAQ,oBAAEuoD,GAAsB,IAC3F,OAAO,KAAQ,CACX,CACIlsI,KAAM,UACNo9G,OAAQ,4BACRD,QAAS,GACTE,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,6BACnCqtG,KAAM,mBACNyW,UAAU,EACVja,UAAW,gCACX8oC,iBAAkBxZ,IAEtBuZ,GAAuB,CACnBlsI,KAAM,UACNo9G,OAAQ,0BACRD,QAAS,GACTE,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,oCACnCqtG,KAAM,gBAAoBC,GAAA,cAAkB,CAAEzD,UAAW,cACzDia,UAAU,EACVja,UAAW,gCACX8oC,iBAAkBH,IAEtB,CACIhsI,KAAM,YACNo9G,OAAQ,mCAEZ,CACIp9G,KAAM,SACNo9G,OAAQ,yBACRD,QAAS,GACTE,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,6CACnCqtG,KAAM,gBACNyW,UAAU,EACVja,UAAW,wBACX8H,QAAS,IAAMxnB,EAASyQ,GAAkC50F,EAAO3B,QAG7E,C,4BCnCA,MAAMuuI,IAAmB,QAAc,MAIvC,MAAMC,WAA2B,EAAAxvC,UAC7B1iG,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKq0H,aAAe,EACpBr0H,KAAKs0H,gBAAmBh1H,IAChBU,KAAKu0H,uBAAuBj1H,EAAEsgD,SACT5/C,KAAKw0H,SAASvmH,QACtBwmH,MACjB,EAEJz0H,KAAK00H,UAAap1H,IACd,MAAMq1H,EAAWr1H,EAAE0yI,UAAY,oBACzBnd,EAAWv1H,EAAE0yI,UAAY,sBAC3Brd,GAAYE,KACZv1H,EAAEyvH,iBACFzvH,EAAEw1H,mBAEFH,GACA30H,KAAKiiH,WAEL4S,GACA70H,KAAK+0H,UACT,EAEJ/0H,KAAKiiH,SAAW,KACZ,MAAM+S,EAAWh1H,KAAKc,MAAMiK,MACtBmqH,EAAkBl1H,KAAKkZ,MAAMnO,MAAM2zE,OACjB,KAApBw2C,GACAl1H,KAAK+sF,SAAS,CACVhiF,MAAO,KAGXiqH,IAAaE,EACbl1H,KAAKc,MAAMmhH,SAASiT,GAGpBl1H,KAAKc,MAAMi0H,SAASC,GAExBh1H,KAAK+sF,SAAS,CACVhiF,MAAOmqH,EACPC,WAAW,IAEfn1H,KAAKo1H,iBAAiB,EAE1Bp1H,KAAK+0H,SAAW,KACZ,MAAM,MAAEhqH,GAAU/K,KAAKc,MACvBd,KAAKc,MAAMi0H,SAAShqH,GACpB/K,KAAK+sF,SAAS,CACVhiF,QACAoqH,WAAW,IAEfn1H,KAAKo1H,iBAAiB,EAE1Bp1H,KAAK6pH,SAAYvqH,IACb,MAAM,MAAEyL,GAAUzL,EAAEsgD,OACpB5/C,KAAK+sF,SAAS,CAAEhiF,UAAS,KACrB/K,KAAKc,MAAM+oH,SAAS9+G,EAAM,GAC5B,EAEN/K,KAAKq1H,KAAQl+F,IACJn3B,KAAKkZ,MAAMi8G,YACZn1H,KAAK+sF,SAAS,CACVooC,WAAW,IACZ,KACCn1H,KAAKs1H,iBACL1rB,SAAS2rB,iBAAiB,YAAav1H,KAAKs0H,gBAAgB,IAEhEt0H,KAAKc,MAAM00H,iBACf,EAEJx1H,KAAKs1H,eAAiB,KAClB,MAAMG,EAAmBz1H,KAAKw0H,SAASvmH,SACjC,0BAAEynH,EAAyB,kBAAEuc,GAAsBjyI,KAAKc,MAC1D20H,IACA3rB,OAAO2H,aAAazxG,KAAKq0H,cAEzBr0H,KAAKq0H,aAAevqB,OAAOpa,YAAW,KAClC+lC,EAAiBE,QACbD,GAA6B11H,KAAK41H,gBAClCH,EAAiBhO,UAAYgO,EAAiBI,cAElDJ,EAAiB/1B,SACbuyC,GACAjyI,KAAKkyI,uBACT,GACD,GACP,EAEJlyI,KAAKkZ,MAAQ,CACTnO,MAAOjK,EAAMiK,MACboqH,WAAW,EACXgd,cAAe,KAEnBnyI,KAAK81H,KAAO,cACZ91H,KAAKw0H,SAAW,aACpB,CACA5J,oBACI,MAAMmL,EAAW/1H,KAAK81H,KAAK7nH,QAC3B8nH,EAASR,iBAAiB,YAAav1H,KAAKg2H,eAC5CD,EAASR,iBAAiB,cAAev1H,KAAKg2H,eAC1Ch2H,KAAKc,MAAMm1H,WACXj2H,KAAKq1H,MAEb,CACAvK,iCAAiCoL,GACzBl2H,KAAKc,MAAMiK,QAAUmrH,EAASnrH,OAC9B/K,KAAK+sF,SAAS,CACVhiF,MAAOmrH,EAASnrH,OAG5B,CACAorH,uBACI,MAAMJ,EAAW/1H,KAAK81H,KAAK7nH,QAC3B8nH,EAASK,oBAAoB,YAAap2H,KAAKg2H,eAC/CD,EAASK,oBAAoB,cAAep2H,KAAKg2H,eACjDh2H,KAAKo1H,kBACL3jB,aAAazxG,KAAKq0H,aACtB,CACA2B,cAAc12H,GACVA,EAAEw1H,iBACN,CACAP,uBAAuB8B,GACnB,OAAOr2H,KAAKw0H,SAASvmH,UAAYjO,KAAKw0H,SAASvmH,QAAQqoH,SAASD,EACpE,CACAT,cACI,OAAO51H,KAAKc,MAAMsxI,QAAU,CAChC,CACAhd,kBACIxrB,SAASwsB,oBAAoB,YAAap2H,KAAKs0H,gBACnD,CACA4d,wBACI,MAAMG,EAAcryI,KAAK81H,KAAK7nH,QACxBqkI,EAAsBC,iBAAiBF,GAAapzB,SAC1Dj/G,KAAK+sF,SAAS,CACVolD,cAAeE,EAAYv/B,YAC3B0/B,iBAAkBzpI,KAAKuhH,MAAM5iF,SAAS4qG,EAAqB,MAEnE,CACAG,0BACI,MAAMC,EAAU,sBAAqB,WAC/BvpC,EAAQ,CACVjnF,MAAOliB,KAAKkZ,MAAMi5H,cAClBlzB,SAAU,GAAGj/G,KAAKkZ,MAAMs5H,qBAExBnzB,WAA6C,KAA9Br/G,KAAKkZ,MAAMs5H,iBAAd,MAEhB,OAAQ,gBAAoB,MAAO,CAAEz7B,KAAM,mBAAoBhO,UAAW,GAAG2pC,wCACzE,gBAAoBrG,GAAA,EAAS,CAAE/mB,QAAS,IAAIotB,IAAW5lC,YAAa,CAC5D,CACIC,MAAO,WAGf,gBAAoB,MAAO,CAAEhE,UAAW,6BAA+B/oG,KAAKu2H,eAAeptB,KACvG,CACAotB,eAAeptB,EAAQ,CAAC,GACpB,OAAQ,gBAAoB2oC,GAAkB,CAAE3oC,MAAOA,EAAO8H,KAAM,EAAGmhC,QAASpyI,KAAKc,MAAMsxI,QAASvuB,UAAW7jH,KAAKc,MAAM+iH,UAAW6Q,UAAW10H,KAAK00H,UAAW8B,OAAQx2H,KAAKiiH,SAAU4H,SAAU7pH,KAAK6pH,SAAUoL,aAAcj1H,KAAKc,MAAMiK,MAAO1H,YAAarD,KAAKc,MAAMuC,YAAaE,IAAKvD,KAAKw0H,UACnS,CACAme,0BACI,OAAO3yI,KAAKc,MAAMmxI,kBACZjyI,KAAKyyI,0BACLzyI,KAAKu2H,eAAev2H,KAAK81H,KAAK7nH,SAAWjO,KAAKc,MAAM8xI,gCAChD,CAAE1wH,MAAOliB,KAAK81H,KAAK7nH,QAAQ87G,wBAAwB7nG,OACnD,CAAC,EACf,CACAyrF,SACI,MAAMklC,EAAuB,KAAG,CAC5B,qBAAqB,EACrB,oBAAoB,EACpB,aAAc7yI,KAAKkZ,MAAMi8G,UACzB9xH,YAAkC,KAArBrD,KAAKkZ,MAAMnO,OACzB/K,KAAKc,MAAMioG,WACR+pC,EAAe9yI,KAAKc,MAAMuM,UAAYrN,KAAKkZ,MAAMnO,OAAS/K,KAAKc,MAAMuC,YAC3E,OAAQ,gBAAoB,MAAO,CAAE0zG,KAAM,iBAAkBxzG,IAAKvD,KAAKc,MAAMwyG,SAAUvK,UAAW8pC,EAAsBhiC,QAAS7wG,KAAKq1H,MAClI,gBAAoB,MAAO,CAAEtsB,UAAW,0BAA2BxlG,IAAKvD,KAAK81H,MAAQ91H,KAAKkZ,MAAMi8G,UAAYn1H,KAAK2yI,0BAA4BG,GACrJ,EAEJf,GAAmBtmB,aAAe,CAC9Bp+G,UAAU,EACV07F,UAAW,GACX8a,UAAW,IACXuuB,QAAS,EACTrd,SAAU,KACVS,eAAgB,KAChB3L,SAAU,KACVxmH,YAAa,GACbqyH,2BAA2B,EAC3Buc,mBAAmB,EACnBhc,WAAW,EACX2c,iCAAiC,GAM9B,MAAMG,GAAgB,cAAiB,CAACjyI,EAAOyC,IAC3C,gBAAoBwuI,GAAoBryI,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEwyG,SAAU/vG,OC/M3EyvI,GAAmB,EAAGnvB,YAAWovB,gBAAe5uI,OAAM6uI,gBAAeC,uBAAuB,IAAMC,sBAAsB,OAAa,gBAAoBL,GAAe,CAAEhqC,UAAW,8BAA+BqpC,QAAS,EAAGrnI,MAAO1G,EAAMw/G,UAAWA,EAAWxgH,YAAa4vI,EAAezd,eAAgB4d,EAAqBnxB,SAAUixB,EAAene,SAAUoe,GAChX,gBAAoB,OAAQ,KAAM9uI,ICEzBgvI,GAAuC,EAAGnuI,SAAQ8c,UAASo8F,mBACpE,MAAM/0B,EAAWoB,KACX6oD,GAAuB,IAAApnD,cAAa1zE,IAClCA,EACA6wE,EAASnlB,GAA0Bh/D,EAAO3B,IAAK,CAAEgG,MAAOiP,KAEnDwJ,GACLqnE,EAASnlB,GAA0Bh/D,EAAO3B,IAAK,CAAEgG,OAAO,QAAayY,KACzE,GACD,CAACqnE,EAAUrnE,EAAS9c,EAAO3B,MACxBsgH,EAAY96G,KAAKuZ,IAAIpd,EAAOqE,MAAMkB,OAXL,KAYnC,OAAQ,gBAAoBo1G,GAAgC,CAAEzB,aAAcA,GACxE,gBAAoB40B,GAAkB,CAAE3uI,KAAMa,EAAOqE,MAAO0pI,cAAe/tI,EAAOqE,MAAOs6G,UAAWA,EAAWqvB,cAAeI,IAAyB,ECFzJC,GAAqC,EAAGruI,SAAQ8c,UAASooB,SAAQi0B,UAAS0nD,gBAAeh3B,mBAAkB8tB,2BAC7G,MAAMmJ,GAAU,QAAyBhkG,IACnC,aAAEi2E,EAAY,WAAEE,EAAU,WAAEE,EAAU,iBAAED,EAAgB,mBAAEI,GAAuBT,IAAmB,QAAU7yF,KAC9G,UAAEkhH,GCd0B,CAACjmH,IACnC,IAAIgF,EAAIswB,EACR,MAAM,QAAEzT,EAAO,OAAE9c,EAAM,UAAEghH,GAAc/lH,EACjCyvF,GAAO,EAAAC,GAAA,KACPxG,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAChC,6BAAEoC,EAA4B,mCAAEN,EAAkC,iCAAEQ,GAAsCpsD,EAC1Gg5H,EAAcxwC,GAAqBr3B,GAA8BnuD,EAAO3B,MACxEiwI,EAAsBplF,GACxBN,GACAQ,EACEx5C,EAAwBomH,aAAiD,EAASA,EAAYpmH,sBAC9F2+H,KAA8J,QAAzHtuI,EAAK2P,aAAqE,EAASA,EAAsBnT,kBAA+B,IAAPwD,OAAgB,EAASA,EAAGsF,YAAsI,QAAvHgrB,EAAK3gB,aAAqE,EAASA,EAAsBhT,gBAA6B,IAAP2zB,OAAgB,EAASA,EAAGhrB,QAC5WmnI,EAAsB4B,GAAuBC,GAC7C,yBAAEltB,GAA6B3iB,KAC/B4iB,GAAmB,IAAAl5G,UAAQ,IACtBqkI,GAA+BzsI,EAAQ,CAAE0qF,OAAMvG,WAAUuoD,yBACjE,CAACvoD,EAAUuG,EAAM1qF,EAAQ0sI,IAM5B,MAAO,CAAExrB,WALS,IAAA94G,UAAQ,IACfi5G,EACDA,EAAyBvkG,EAAS9c,EAAQshH,EAAkBN,EAAW,QACvEM,GACP,CAACD,EAA0BvkG,EAAS9c,EAAQshH,EAAkBN,IAC7C,EDTEwtB,CAAuB,CAAExtB,UAAW9tB,EAAkBp2E,UAAS9c,YAC/E,6BAAEs/F,EAA4B,eAAEN,EAAc,iBAAEC,GAAqB2B,KACrE8gB,GAAuB,IAAAt5G,UAAQ,IAAMk3F,EAA6BxiF,EAAS9c,IAAS,CAACs/F,EAA8BxiF,EAAS9c,IAE5HyuI,GADWjpD,GAAqBoR,IAEtC,OAAQ,gBAAoB0gB,GAAe,CAAEzT,UAAW,KAAG8T,EAAsB,qBAAsB,2BAA4B,eAAgBiB,GAAmB54G,EAAOQ,KAAMsgH,GAAU,CAAE,cAAe7tB,IAAe/tD,OAAQA,GACjO,gBAAoB20E,GAA4B,CAAE9mB,aAAcA,EAAcE,WAAYA,EAAYE,WAAYA,EAAYomB,eAAiBL,IACvI,IAAIj5G,EACJ,QAAyC,QAA/BA,EAAKD,EAAOuyE,qBAAkC,IAAPtyE,OAAgB,EAASA,EAAG0hH,YAAe,gBAAoBwsB,GAAsC,CAAEj1B,aAAcA,EAAcl5G,OAAQA,EAAQ8c,QAASA,GAAW,EACzN68F,mBAAoB,IACX,gBAAoB,WAAgB,OACtC1mB,GAAe,gBAAoB,MAAO,CAAE4Q,UAAW,+CAAgD8H,QAASxY,MAChHG,GAAuB,gBAAoBouB,EAAsB,CAAE5kG,QAASA,EAAS9c,OAAQA,EAAQg+F,OAAQ1K,EAAoBqT,QAASzT,EAAkB9yF,MAAO8gH,KAC1K7H,iBAAkB,KAAG,CAAE,cAAeo1B,IAAen1B,uBAAwB,KAAG,CAAE,cAAem1B,MAAiB,EAAGv1B,eAAcD,iBAAmB,gBAAoBgC,GAAkB,CAAE/B,aAAcA,EAAcD,YAAaA,EAAan8F,QAASA,EAAS9c,OAAQA,EAAQ6gH,cAAeA,EAAeh3B,iBAAkBA,EAAkB1wB,QAASA,EAAS6lC,eAAgBA,EAAgBC,iBAAkBA,MAAuB,EE1BrbyvC,GAAwCvxC,GAAgB,CACjEwxC,KzFK0C/yI,GACnC,gBAAoBuiH,GAA6B3jH,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEyhG,UAAWujB,MyFL9FuP,KFE2Cv0H,GACpC,gBAAoBuiH,GAA6B3jH,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEyhG,UAAWgxC,QGErFO,GAAyB,QAAW,SAAgChzI,GAC7E,MAAM,QAAEu9D,EAAO,gBAAEu+C,EAAe,OAAExyE,EAAM,OAAEllC,EAAM,QAAEpF,EAAO,MAEzD2D,GAAW3C,EACX,KAAK,SAAkBoE,GACnB,MAAM,IAAI,MAAgB,yHAE9B,MAAM3B,GAAM,QAAU2B,GAChBokG,EAAgB5c,KAChBqnD,GAAmB,QAAiBj0I,GACpCk0I,GAAsB,IAAA1mI,UAAQ,KAEhC,IAAI2mI,GAAoB,EACxB,MAAM11E,EAAY,CAACuwB,EAAU8sB,KACpBq4B,IACD3qC,EvfgBT,SAAkCrqF,EAAW6vE,EAAUngF,GAC1D,MAAO,CACHjJ,KAAM,0CACNiJ,gBACAC,QAAS,CACLkgF,WACA7vE,aAGZ,CufzB8Bi1H,CAAyB3wI,EAAKurF,EAAU8sB,IACtDq4B,GAAoB,EACxB,EAEE51E,EAAU,CAAC3wD,EAAOkuG,KACfq4B,IACD3qC,EvfVT,SAA+BrqF,EAAWvR,EAAOiB,GACpD,MAAO,CACHjJ,KAAM,uCACNiJ,gBACAC,QAAS,CACLqQ,YACAvR,SAGZ,CufC8BymI,CAAsB5wI,GAAK,SAAamK,GAAQkuG,IAC9Dq4B,GAAoB,EACxB,EAEJ,OlH+BqBG,EkH/BDL,ElH+Bcx4B,EkH/BI,CAClCE,cAAe,CAAC44B,EAAKz4B,KACjBq4B,GAAoB,EACpB3qC,EvfpCL,CACH5jG,KAAM,wCACNiJ,cufkCuDitG,EvfjCvDhtG,QAAS,CACLqQ,UufgCyC1b,Evf/BzC+wI,oBuf+B8CD,IAAkB,EAEhEp4B,wBAAyB19C,EACzB69C,2BAA4B,CAACm4B,EAASC,EAAQ1lD,EAAU8sB,KACpDr9C,EAAUuwB,EAAU8sB,EAAY,EAEpCD,cAAet9C,EACf69C,oBAAqB79C,EACrBg+C,uBAAwB,CAACk4B,EAASC,EAAQ9mI,EAAOkuG,KAC7Cv9C,EAAQ3wD,EAAOkuG,EAAY,GlHoBnC,IAAQL,GACD64B,GAEJ,EAAArxI,GAAA,GAAiBqxI,EAAa,CACjCxyI,UAAY0zC,GAAa,IAAI,MAA0BA,GAAW1zC,GAAc,IAAI05G,GAAsB15G,EAAW25G,OALtH,IAAsB64B,EAAa74B,CkHjBhC,GACH,CAACw4B,EAAkBzqC,EAAegT,GAAoB/4G,KACnDs5G,EAAuB,eAAep5G,IAC5C,OAAI,QAASyB,GACD,gBAAoB,KAAiB,CAAEpF,QAASk0I,IAAuB,QAAgB9uI,GAAW,gBAAoB0uI,GAAuC,CAAE1uI,OAAQA,EAAQklC,OAAQA,EAAQyyE,qBAAsBA,IAA4B,gBAAoBF,GAA2B,CAAEhvE,UAAWzoC,EAAQklC,OAAQA,EAAQyyE,qBAAsBA,EAAsBD,gBAAiBA,EAAiBv+C,QAASA,KAEja,gBAAoB,MAAO,KAAM,iBAC5C,I,gBCtDO,SAASo2E,GAAwC51H,GACpD,MAAMwqE,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAC9Bk+B,IAAK+sB,GAAyB5qB,GAA8B,CAChEL,eAAgB5nB,GAChBmoB,WAAY,8BACZD,aAAc,sDACd/tB,UAAYzoD,IACRuzE,EAAS5jD,GAAU9C,sCAAsC7sB,EAAMlH,QAAQrL,KAAK,EAEhF86D,QAAUvoD,IACNuzE,EAAS5jD,GAAU9C,sCAAsC7sB,EAAMlH,QAAQe,QAAQf,QAAQrL,KAAK,KAG5F2mF,IAAKgtB,GAA6B7qB,GAA8B,CACpEL,eAAgB,GAChBO,WAAY,8BACZD,aAAc,0CACd/tB,UAAYzoD,IACR,MAAMvS,EAAMuS,EAAMlH,QAAQtJ,MAAM,GAAGJ,OAAO3B,IAC1C8lF,EAAS5jD,GAAUzD,aAAaz+B,IAChC8lF,EAAS5jD,GAAUtD,6BAA4B,IAC/CknD,EAAS5jD,GAAUpD,gCAA+B,IAClDgnD,EAAS5jD,GAAUhD,sCAAsCl/B,IACzD0zG,EAAqB1zG,EAAK,UAAU,IAG5C,OAAO,IAAA2oF,cAAalqE,IAChB,MAAMrT,EAAgB,4BAA4BkQ,IAE5CoD,EAAW,GAAY/f,EAAU,UAAW8f,GAClDg9E,GAAmB3V,EAAU+P,GAAiBv6E,EAAc,CAAC,EAAG,CAC5D,CACInZ,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQ2/C,QAEb,EAAOl2C,IAAgB/D,MAAK,KAC3BssG,EAAyBr4F,EAdX,EAcoC,CAC9CnZ,KAAM,uBACNR,OAAQ,CACJQ,KAAM,UACNsc,SAAS,QAAWA,GACpB/B,uBAAwB,GACxBZ,OAAQ,GACR9V,OAAO,QAAayY,GACpBV,YAAa,IAEjBjc,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,gBAGnC9rC,GAAW,EAAO4J,EAAc,GACrC,GACH,CAAC06E,EAAU6tB,EAA0Br4F,EAAc3c,GAC1D,CC9DO,SAASwyI,GAAuC71H,GACnD,MAAMwqE,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAC9Bk+B,IAAKyqD,GAAoCtoD,GAA8B,CAC3EL,eAAgBoN,GAChB7M,WAAY,8BACZD,aAAc,0CACd/tB,UAAYzoD,IACR,MAAMvS,EAAMuS,EAAMlH,QAAQwC,QAAQ9L,MAAM,GAAGJ,OAAO3B,IAClD8lF,EAAS5jD,GAAUzD,cAAa,QAAMgiB,MACtCqlC,EAAS5jD,GAAUtD,6BAA4B,IAC/CknD,EAAS5jD,GAAUpD,gCAA+B,IAClDgnD,EAAS5jD,GAAUhD,sCAAsCl/B,GAAK,IAGtE,OAAO,IAAA2oF,cAAY,KACf,MAAMjqE,EAAW,GAAY/f,EAAU,OACvCyyI,EAAgC91H,EAAc,CAAC,EAAG,CAC9C,CACInZ,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQ++C,OAEd,GACH,CAAC0wF,EAAiC91H,EAAc3c,GACvD,CC9BO,SAAS0yI,GAA2C/1H,GACvD,MAAMwqE,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,KAC9Bk+B,IAAK2qD,GAAwCxoD,GAA8B,CAC/EL,eAAgBoN,GAChB7M,WAAY,8BACZD,aAAc,0CACd/tB,UAAW,KACP8qB,EAAS5jD,GAAUzD,cAAa,QAAMmiB,MACtCklC,EAAS5jD,GAAUtD,6BAA4B,GAAM,IAG7D,OAAO,IAAA+pD,cAAY,KACf,MAAMjqE,EAAWkvB,GAA8BjvC,GAC/C2yI,EAAoCh2H,EAAc,CAAC,EAAG,CAClD,CACInZ,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQk/C,OAEd,GACH,CAACywF,EAAqCh2H,EAAc3c,GAC3D,CCnBA,MAAM4yI,GAAwB,CAC1B,sBAAuB,UACvBC,gBAAiB,gBACjB,kBAAmB,OAEVC,GAAyB,KAClC,MAAM3rD,EAAWoB,KACXzjC,EAAoB0jC,GAAqB7jC,KACzC,iCAAE++C,GAAqCE,KACvCmS,EAA4Bw8B,GAAwC,GACpEt8B,EAA2Bu8B,GAAuC,GAClEx8B,EAA+B08B,GAA2C,KACzE,QAAEvtC,EAAO,OAAEd,EAAM,SAAEe,EAAQ,KAAEzhG,GAAQ8iG,GAAWlB,GAAiB,CAAC,kBAAmB,kBAAmB,uBAAwB,CACnIM,KAAOliG,IACCqhG,GAA2BrhG,IAC3BoyG,EAA0BpyG,EAAKmc,SAE/BglF,GAA8BnhG,IAC9BsyG,IAEAlR,GAAkCphG,IAClCqyG,GACJ,GAEL,CACC7uB,EACAriC,EACAixD,EACAE,EACAD,KAEE,UAAE9rG,EAAY,GAAE,WAAEiW,IAAgBxc,aAAmC,EAASA,EAAKR,OAAS,CAAC,EAC7FuK,EAAU,gBAAoB,KAAkB,CAAE1Q,GAAI,6BACtD+1I,EAAiBH,GAAsBxtC,GAC7C,OAAQ,gBAAoB,MAAK,CAAEn7F,GAAIC,EAAWsmC,GAAItmC,EAAWqmC,GAAIrmC,EAAWomC,GAAIpmC,EAAWmmC,GAAInmC,EAAW+8F,MAAO,CAC7Gl0D,UAAW5yB,EAAa+vB,GAAoC/vB,QAActd,GAC3EgkG,UAAW,KAAG,wBAAyB,YAAa,CACnD,CAAC,QAAQksC,OAAqBA,EAC9B,aAAcA,EACd,uBAAwB5tC,KAE5B,gBAAoB,MAAO,CAAE0B,UAAW,KAAG,8BAA+B,CAAE,WAAY1B,EAAS,UAAWd,IAAWhjG,IAAKolG,GACxH,gBAAoB/C,EAAkC,MACtD,gBAAoB,MAAO,CAAEmD,UAAW,yEACpC,gBAAoB,MAAO,CAAEA,UAAW,qBACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,uCAAyCn5F,GACpG,gBAAoB+jH,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,iDAAmDn5F,MAAa,ECpDlIslI,GAAc,EAAGnsC,eAClB,gBAAoB,MAAO,CAAEA,UAAW,KAAG,kBAAmBA,IAAc,KAAM,EAAGosC,GAAep2I,KAAK0E,GAAW,gBAAoB,MAAO,CAAEuD,IAAKvD,EAAOslG,UAAW,mBAAmBtlG,SCL1L2xI,GAAoC,IACrC,gBAAoB,MAAO,CAAErsC,UAAW,KAAG,wBAAyB,YAAa,iBACrF,gBAAoBmsC,GAAa,OCEnCG,GAAgB,IACX,gBAAoB,MAAO,KAAM,oBAEtCC,GAAgB,IACX,gBAAoB,MAAO,KAAM,kBAK/BC,GAAmBz0I,IAC5B,MAAM,wBAAE6jG,EAAuB,sBAAEe,EAAqB,0BAAED,GAA8BK,MAChF,OAAE5gG,EAAM,MAEdzB,GAAW3C,EACL00I,GAAkB,IAAAloI,UAAQ,KAI5B,IAAKpI,EAED,OADAgC,QAAQC,KAAK,0CACNmuI,GAEX,MAAM/yC,EAAYoC,EAAwBz/F,GAE1C,OAAIq9F,GAAaA,IAAcuxC,GACpBvxC,EAEPj+C,GAA2Bp/C,GACpB8vI,GAEPxwF,GAA2Bt/C,GACpBkwI,GAEPrxF,GAAuB7+C,IAAWwgG,EAAsBkQ,SACjDlQ,EAAsBkQ,SAASD,6BAEtCzxD,GAA2Bh/C,IAAWugG,EAA0BmQ,SACzDnQ,EAA0BmQ,SAASD,8BAE1C,SAAkBzwG,GACX4uI,IAEX5sI,QAAQC,KAAK,2BAA2B2E,EAAuB5G,MACxDmwI,GAAa,GACrB,CAACnwI,IACJ,OAAQ,gBAAoBswI,EAAiB91I,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAElE2C,MAAOA,IAAU,EC5CnB,IAAU,QAAc,MACjBgyI,GAAuB,EAAG9nC,SAAQjoG,OAAM4oC,gBAAeonG,aAChE,MAAM9lD,GAAO,EAAAC,GAAA,KACP7d,EAAQ1jC,EAAclf,SAAS,oBAC/B8jE,EAAW5kD,EAAclf,SAAS,oBAClC+8E,GAAQ,YACP9mG,EAAMswI,IAAW,IAAA7qD,UAAS,SAC1B3oE,EAAQyzH,IAAa,IAAA9qD,UAAS,GAC/B8rB,EAAU,KAAW,8BAA+B,CACtD,CAAClxG,IAAO,EACR,CAACL,IAAO,EACR2sE,MAAOA,EACPkhB,SAAUA,IAGd,OADaya,IAAW37B,GAASkhB,GAClB,gBAAoB,GAAS,CAAEn1C,QAAQ,EAAMy1D,SAAWzxF,IAC3DA,EAAKg8B,SACL43F,EAAQ5zH,EAAKg8B,OAAO57B,OAAS,IAAM,QAAU,OAC7CyzH,EAAU7zH,EAAKg8B,OAAO57B,QAC1B,IACC,EAAGS,iBACR,IAAIzd,EAAIswB,EACR,OAAQ,gBAAoB,MAAO,CAAEszE,UAAW6N,EAASrzG,IAAKqf,GAC1D,gBAAoB,MAAO,CAAEmmF,UAAW,uCACpC,gBAAoB,MAAO,CAAEA,UAAW,mCAAoCI,MAAOhnF,EAAS,CAAEA,UAAW,CAAC,GACtG,gBAAoB0zH,GAAY,CAAEppC,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGqgH,MACrN,gBAAoB,MAAO,CAAE/sC,UAAW,oCACpC,gBAAoBgtC,GAA0B,CAAE/jE,MAAOA,EAAOkhB,SAAUA,KAC5E,gBAAoB4pC,GAAA,EAAQ,CAAE/zB,UAAW,2BAA4Bh+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,8BAAgC2xG,QAAS6kC,KAAY,IAChK,IAAI,EAERK,GAA2B,EAAG/jE,QAAOkhB,cACnClhB,EACO,gBAAoB,KAAkB,CAAE9yE,GAAI,gCAEnDg0F,EACO,gBAAoB,KAAkB,CAAEh0F,GAAI,mCAEhD,KAEL22I,GAAa,EAAGppC,WACV,gBAAoB,MAAO,CAAEvqF,MAAO,KAAMC,OAAQ,KAAM6zH,QAAS,YAAaC,KAAM,OAAQC,MAAO,8BACvG,gBAAoB,OAAQ,CAAEx3G,EAAG,wrDAAyrDu3G,KAAMxpC,QAAqCA,EAAQ,aCrD9wD,SAAS0pC,GAAkB/kI,GAC9B,OAAOA,EAAQ9L,QAAQvG,KAAK8G,GAASA,EAAKtC,OAC9C,CC0CO,MAAM6yI,GAAyBt1I,IAClC,MAAM,KAAE+E,EAAI,OAAEukC,EAAM,sBAAEisG,EAAqB,QAAEC,EAAO,gBAAE15B,EAAe,QAAEv+C,EAAO,oBAAEi8C,GAAwBx5G,EAClGuoF,EAAWoB,KACXzoF,EAAW0oF,GAAqBz5B,IAChC/uD,EAAWwoF,GAAqB1+B,IAChC9D,EAAewiC,GAAqBnjC,IACpCvvB,EAAW0yD,GAAqB99B,IAChC2pF,EAA2B7rD,GAAqBz7B,IAChDunF,EAAgBvgC,KAGhB/wG,EAASW,EAAKX,SACduxI,EAAW/qI,EAAexG,GAC1BwxI,IAA0BryF,GAAoBn/C,IAAWuxI,KACxD,WAAEvsC,GAAcQ,GAAWP,GAAiB,CAC/CC,SAAU,IAyElB,SAA6BvkG,EAAM7D,EAAUE,GACzC,MAAMgD,EAASW,EAAKX,UACd,aAAE2Z,EAAY,UAAEhN,GAAcmkG,GAAqBnwG,GACnDR,EAAOQ,EAAKR,OACZsxI,EAAyD,IAAnC9wI,EAAKuL,UAAU9L,QAAQykC,QACnD,IAAI,QAAY7kC,GAAS,CACrB,MAAM+c,EAAW,GAAY/f,EAAU,MAAOgD,EAAO2d,KACrD,MAAO,CACHnd,KAAM,MACNmd,IAAK3d,EAAO2d,IACZtZ,MAAOrE,EAAOqE,MACdsV,eACAhN,YACA8kI,sBACAtxI,KAAMuxI,GAAcvxI,EAAM4c,GAElC,CACK,IAAI,QAAgB/c,GAAS,CAC9B,MAAM8c,EAAUhgB,EAAS+E,IAAI7B,EAAO8c,SAC9BC,EAAW,GAAY/f,EAAU,MAAO8f,GAC9C,MAAO,CACHtc,KAAM,UACNsc,UACAnD,eACAhN,YACAtI,MAAOrE,EAAOqE,MACdotI,sBACAtxI,KAAMuxI,GAAcvxI,EAAM4c,GAElC,CAEI,MAAO,CACHvc,KAAMR,EAAOQ,KACbR,SACA2Z,eACAhN,YACAtI,MAAO,GACPotI,sBACAtxI,KAAMuxI,GAAcvxI,GAGhC,CAjHmBwxI,CAAoBhxI,EAAM7D,EAAUE,GAE/CmoG,QAASniD,GAAgBwuF,EACzBlsC,UAAY3kG,IACRwjF,EAAS5jD,GAAUf,wBAAwB7+B,GAAM,EAErD0kG,QAASisC,GACV,CAAC3wI,EAAM7D,EAAUkmD,KACd,eAAEg8C,EAAc,iBAAEC,GAAqB2B,KACvC7zD,EAAcpsC,EAAKR,OAAO+kC,GAC1B6K,EAAYjD,GAAyB9sC,EAAQ+sC,EAAajwC,EAAUE,GACpEigB,EAAS8vB,EAAY7vB,gBAAkB6vB,EAAY5vB,W7Y0KA,EAAChd,EAAM+kC,KAEhE,MAAM,UAAEh+B,EAAS,cAAEgW,EAAgB,GAAM/c,EAGzC,OAFoBitC,GAAkClI,GACVb,GACbn9B,GAAagW,EAAgB,IAAI,E6Y9K1D00H,CAA8C7kG,EAAa7H,QAC3DrlC,EACAgyI,IAAkB9kG,EAAY7vB,cAC9B2mF,EAAYwtC,EAA2B,qBAAkBxxI,EACzDtB,EAvDV,SAAwBoC,GACpB,IAAIV,EAAIswB,EACR,MAAM5W,EAAehZ,EAAKuL,UAAU3N,QAC9BuzI,EAAuB9xI,IACjBA,GAAU4/C,GAAuB5/C,GAE7C,IAAI+xI,EAAwB,EAC5B,IAAK,IAAI5vI,EAAI,EAAGA,EAAIwX,EAAcxX,GAAK,EACnC4vI,GAIiI,QAH5HxhH,EAGoB,QAHdtwB,EAAKU,EACPuL,UACA0M,SACA1M,QAAQ/J,UAAuB,IAAPlC,OAAgB,EAASA,EAAGG,QAAQe,QAAQgB,IAAO2vI,EAAoB3vI,EAAEnC,YAAWuF,cAA2B,IAAPgrB,EAAgBA,EAAK,EAElK,MAAMyhH,EAAgCrxI,EACjCuL,UACA9L,QACAe,QAAQgB,GAAMA,EAAE5D,QAAUoC,EAAKpC,SAAWuzI,EAAoB3vI,EAAEnC,YAAWuF,OAChF,OAAOwsI,EAAwBpxI,EAAKpC,QAAUyzI,CAClD,CAoCkBC,CAAetxI,GACvBo/B,ED1EH,SAAwBp/B,GAC3B,MAAO,CAACA,EAAKtC,MACjB,CCwEiB6zI,CAAevxI,GACtBwxI,EAAuB3sD,GAAqBsI,GAA0BmjD,GAAkBtwI,EAAKuL,aAC7FkmI,EAAoB5sD,GAAqBoI,GAA0B7tD,IACnEsyG,EAAc7sD,GAAqBkI,GAA0B3tD,KAC7D,SAAE6jE,EAAQ,sBAAEsN,EAAqB,mBAAE/H,EAAkB,kBAAEmpC,GpJT1D,SAA6Bl0I,GAChC,IAAI6B,EAAIswB,EACR,MAAMyyD,EAAUqnB,KAChB,MAAO,CACHzG,SAAU5gB,EAAQkmB,sBAAsBh/E,SAAS9rB,GACjD8yG,sBAAmD,SAA5BluB,EAAQimB,gBAC/BE,mBAAoBnmB,EAAQmmB,mBAC5BmpC,kBAA6G,QAAzF/hH,EAAmC,QAA7BtwB,EAAK+iF,EAAQomB,kBAA+B,IAAPnpG,OAAgB,EAASA,EAAGy0G,oBAAiC,IAAPnkF,EAAgBA,EAAK,OAC1I84E,2BAA4BrmB,EAAQqmB,2BAE5C,CoJDuFkpC,CAAoBvyI,EAAO5B,YACxGw7G,GAAa,IAAA/wG,QAAO,MAiBpB2pI,EAAiBxvF,IAAiBgiD,EACxC,OAAQ,gBAAoBmsC,EAAuB,CAAEA,sBAAuBA,EAAuBxwI,KAAMA,EAAMukC,OAAQA,EAAQ2sG,cAAeA,EAAe50H,OAAQA,EAAQ8yB,UAAWA,EAAW8zD,UAAWA,EAAW+V,WAAYA,EAAYxE,oBAAqBA,GAClQ,gBAAoB,MAAO,CAAE/2G,IAAKmnG,EAAS3B,UAAW,KAAG,CACjD,qCACA,CAAE,0BAA2B0tC,GAAYz+G,MAE7C,gBAAoBu9G,GAElB,CAEE9xI,MAAOA,EAAO2mC,OAAQA,EAAQksG,QAASA,EAASj4E,QAASA,EAASu+C,gBAAiBA,EAAiB13G,OAAQA,EAAQg/F,eAAgBA,EAAgBC,iBAAkBA,KAC9KuzC,IAAmB5yF,GAAuB5/C,GAAW,gBAAoB,WAAgB,KACrF,gBAAoBixG,GAAe,CAAErN,SAAUA,EAAUsN,sBAAuBA,EAAuBC,kBAAmBmhC,EAAmBlhC,mBAAoBjI,IAChK3iG,EAAexG,GAG2L,KAHhL,gBAAoB,WAAgB,KAC3D,gBAAoB0yG,GAAS,CAAEE,aAAc,OAAQjmG,UAAWhM,EAAKpC,QAASob,aAAchZ,EAAKuL,UAAU3N,QAASk0I,iBAAiB,IACrI,gBAAoB//B,GAAS,CAAEE,aAAc,OAAQjmG,UAAWhM,EAAKpC,QAASob,aAAchZ,EAAKuL,UAAU3N,QAASk0I,gBAAiB9xI,EAAKikC,WAC1I,gBAAoBqwE,GAAqB,CAAEt0G,KAAMA,EAAMukC,OAAQA,EAAQiwE,wBA3BnF,WACI,OAAQyE,aAA+C,EAASA,EAAW7wG,SACrE6wG,EAAW7wG,QAAQ87G,wBAAwB5nG,OAC3C2rF,EACV,EAuB2HsM,mBAtB3H,WACI,IAAIj1G,EACJ,MAAMyyI,EAAwD,QAArCzyI,EAAKU,EAAKskC,cAAcC,UAA4B,IAAPjlC,OAAgB,EAASA,EAAGiH,UAElG,QAbQ0yG,aAA+C,EAASA,EAAW7wG,SACrE6wG,EAAW7wG,QAAQ87G,wBAAwB7nG,MrJpFd,KqJgGV01H,CAC7B,EAiBmKt9B,oBAAqBA,MAAoC,KACxN,gBAAoBm7B,GAAsB,CAAE/vI,KAAM,SAAUgwI,OAAQ,IAAMrsD,EAAS5jD,GAAUT,qBAAqB,CAC1GC,KAAM,CAACp/B,EAAKtC,OACZgjB,SAAS,KACRonF,OAAQzuF,QAAQgpC,GAAgBqvF,KAAiBF,EAAqBjoH,SAAS,oBAAqBkf,cAAegpG,IAAsB,EAE1J,SAASV,GAAcjrG,EAAU1pB,GAC7B,IAAI9c,EAAIswB,EACR,MAAO,CACHrpB,WAAmC,QAAtBjH,EAAKwmC,EAASx/B,UAAuB,IAAPhH,OAAgB,EAASA,EAAGiH,aAClE6V,aAA2C,EAASA,EAASC,MAAM2uB,UACpE,oBACJxuB,YAAoC,QAAtBoT,EAAKkW,EAASx/B,UAAuB,IAAPspB,OAAgB,EAASA,EAAGpT,cACnEJ,aAA2C,EAASA,EAASE,OAAO0uB,UACrE,qBAEZ,CC9HO,MAAMgnG,GAAqB/2I,IAC9B,MAAM,OAAEgpC,GAAWhpC,EACnB,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,KAAG,wBAAyB,sBAAuB,uBAAwB,aACvH,gBAAoB,MAAO,CAAEA,UAAW,KAAG,8BAA+B,WAAY,YAClF,gBAAoB,MAAO,CAAEA,UAAW,qCACpC,gBAAoB,MAAO,CAAEA,UAAW,qBACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,uCAAyCj/D,EAAU,gBAAoB,KAAkB,CAAE5qC,GAAI,mCAAoCoI,OAAQ,CAAE4xB,EAAIo3G,GAAW,gBAAoB,IAAK,KAAMA,MAAiB,gBAAoB,KAAkB,CAAEpxI,GAAI,uBAAwBoI,OAAQ,CAAE4xB,EAAIo3G,GAAW,gBAAoB,IAAK,KAAMA,UAAmB,ECR7ZwH,GAAkBh3I,IAC3B,MAAM,gBAAE62I,EAAe,QAAEhvC,GAAY7nG,EACrC,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,kBAAmBxlG,IAAKolG,GACpE,gBAAoBkvC,GAAmB,CAAE/tG,OAAQ6tG,IAAoB,ECMhEI,GAAwBj3I,IACjC,MAAM,aAAE+d,EAAY,UAAEhN,EAAS,gBAAE8lI,GAAkB,GAAU72I,EACvDk3I,EAAsBttD,GAAqBgI,IAC3CulB,EAA4BjB,GAA8Bn4F,EAAchN,GACxEqmG,EAA+Bf,GAAiCt4F,EAAchN,GAC9EsmG,EAA2Bd,GAA6Bx4F,EAAchN,GACtEumG,EAAmBb,GAAyB14F,EAAchN,GAC1Dw3E,EAAWoB,MACVggB,EAAgB9B,GAAWlB,GAAiB,CAAC,kBAAmB,kBAAmB,sBAAuB,MAAO,WAAY,CAChIM,KAAOliG,IACCqhG,GAA2BrhG,IAC3BoyG,EAA0BpyG,EAAKmc,SAE/BglF,GAA8BnhG,IAC9BsyG,IAEAlR,GAAkCphG,IAClCqyG,KAEArR,GAAuBhhG,IAASihG,GAAmBjhG,KACnDuyG,EAAiBvyG,EACrB,GAEL,CAACwjF,EAAU4uB,EAA2BC,EAA8BC,IAGvE,KAFqB,IAAA7qG,UAAQ,KAAO0qI,aAAiE,EAASA,EAAoBn5H,gBAAkBA,IAC/Im5H,aAAiE,EAASA,EAAoBnmI,aAAeA,GAAW,CAACmmI,aAAiE,EAASA,EAAoBnmI,UAAWmmI,aAAiE,EAASA,EAAoBn5H,aAAchN,EAAWgN,IAE1V,OAAO,KAEX,MAAMxZ,EAAOolG,EAAe5kG,KAAKR,KACjC,OAAQ,gBAAoB,MAAK,CAAE8G,GAAI9G,EAAK+G,UAAWsmC,GAAIrtC,EAAK+G,UAAWqmC,GAAIptC,EAAK+G,UAAWomC,GAAIntC,EAAK+G,UAAWmmC,GAAIltC,EAAK+G,UAAW28F,UAAW,KAAG,wBAAyB,iCAAkC,yBAA0BI,MAAO,CACzOl0D,UAAW7C,GAAoC/sC,EAAKgd,cAExD,gBAAoBy1H,GAAgB,CAAEH,gBAAiBA,EAAiB94H,aAAcA,EAAchN,UAAWA,EAAW82F,QAASA,IAAY,ECvC1IsvC,GAAiBn3I,IAC1B,MAAM,KAAE+E,EAAI,OAAEukC,GAAWtpC,EACnBonD,EAAewiC,GAAqBnjC,KACpC,aAAE1oC,EAAY,UAAEhN,GAAcmkG,GAAqBnwG,GAGzD,OAFwBA,EAAKikC,UACgBoe,EAIrC,gBAAoB,WAAgB,KACxC,gBAAoB6vF,GAAsB,CAAE3tG,OAAQA,EAAQvrB,aAAcA,EAAchN,UAAWA,EAAY,EAAG8lI,iBAAiB,IACnI,gBAAoB,MAAO,CAAE5uC,UAAW,KAAG,wBAAyB,wCAAyC,wBAAyB,yBAAyB3+D,MAC3J,gBAAoBwtE,GAAS,CAAEE,aAAc,OAAQC,iBAAiB,EAAMlmG,UAAWA,EAAWgN,aAAcA,EAAc84H,gBAAiB9xI,EAAKikC,aALjJ,IAK+J,ECdxKouG,GAAgB,CAAE/1H,OAAQ,EAAGD,MAAO,EAAGi2H,SAAU,SAAUC,KAAM,GAC1DC,GAAmCv3I,IAC5C,IAAIqE,EAAIswB,EAAIK,EAAIoB,EAAIC,EACpB,MAAM,KAAEtxB,EAAI,OAAEukC,EAAM,SAAE/8B,EAAQ,UAAE07F,EAAS,UAAE9zD,EAAY,EAAC,SAAEsa,GAAazuD,GACjE,KAAEuE,EAAI,MAAEsuC,EAAK,MAAEzxB,EAAK,OAAEC,GAehC,SAAwBtc,EAAMukC,GAC1B,MAAM/kC,EAAOQ,EAAKR,OACZizI,EAAiCzyI,EAAKskC,cAAcC,GACpDuJ,EAAQ2kG,aAAuF,EAASA,EAA+Bl2H,cAG7I,MAAO,CACHD,OAHWm2H,aAAuF,EAASA,EAA+Bj2H,WAI1IH,MAHUo2H,aAAuF,EAASA,EAA+BlsI,UAIzIunC,QACAtuC,OAER,CA3B2CkzI,CAAe1yI,EAAMukC,GACtD++D,GAAQ,IAAA77F,UAAQ,KAClB,IAAIkrI,EAAgB,CAChBvjG,aAKJ,OAHIsa,IACAipF,EAAgB94I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG6wI,GAAgBN,KAE7DM,CAAa,GACrB,CAACvjG,EAAWsa,IACf,OAAQ,gBAAoB,MAAK,CAAEpjD,GAAmE,QAA9DhH,EAAKE,aAAmC,EAASA,EAAK8G,UAAuB,IAAPhH,OAAgB,EAASA,EAAGiH,UAAWsmC,GAAmE,QAA9Djd,EAAKpwB,aAAmC,EAASA,EAAKqtC,UAAuB,IAAPjd,OAAgB,EAASA,EAAGrpB,UAAWqmC,GAAmE,QAA9D3c,EAAKzwB,aAAmC,EAASA,EAAKotC,UAAuB,IAAP3c,OAAgB,EAASA,EAAG1pB,UAAWomC,GAAmE,QAA9Dtb,EAAK7xB,aAAmC,EAASA,EAAKmtC,UAAuB,IAAPtb,OAAgB,EAASA,EAAG9qB,UAAWmmC,GAAmE,QAA9Dpb,EAAK9xB,aAAmC,EAASA,EAAKktC,UAAuB,IAAPpb,OAAgB,EAASA,EAAG/qB,UAAW28F,UAAW,KAAG,wBAAyB,wBAAyB,yBAAyB3+D,IAAU,+BAA+BloB,IAAS,CAChuB,CAAC,+BAA+ByxB,MAAW,KAAMA,GACjD,CAAC,gCAAgCxxB,MAAY,KAAMA,IACpD4mF,GAAYI,MAAOA,GAAS97F,EAAU,ECQpCorI,GAA8Bp2C,GAAgB,CACvDwxC,KAAMwE,GACNhjB,KAjBqCv0H,IACrC,MAAM,KAAE+E,EAAI,OAAEukC,EAAM,SAAE/8B,GAAavM,GAC7B,aAAE+d,EAAY,UAAEhN,GAT1B,SAA8BhM,GAC1B,IAAIV,EACJ,MAAO,CACH0Z,aAAwC,QAAzB1Z,EAAKU,EAAKuL,iBAA8B,IAAPjM,OAAgB,EAASA,EAAG1B,QAC5EoO,UAAWhM,EAAKpC,QAExB,CAGwC,CAAqBoC,GACnD6yI,ECdH,SAAkC75H,EAAchN,GACnD,MAAMu4F,EAAW1f,GAAqB+H,IACtC,OAAO,IAAAnlF,UAAQ,MACN88F,GAGEA,EAASvrF,eAAiBA,GAAgBurF,EAASv4F,YAAcA,GACzE,CAACu4F,EAAUvrF,EAAchN,GAChC,CDMkC8mI,CAAyB95H,EAAchN,GAC/DnG,EAAiBG,EAAmBhG,EAAKX,UAC/C,OAAQ,gBAAoB,WAAgB,KACxCwG,EAAiB,KAAQ,gBAAoBqsI,GAAsB,CAAE3tG,OAAQA,EAAQvrB,aAAcA,EAAchN,UAAWA,IAC5H,gBAAoBwmI,GAAiC34I,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEioG,UAAW,KAAG,CACtF,wBAAyB2vC,MACtBrrI,GACX3B,EAAiB,KAAO,gBAAoBusI,GAAe,CAAEpyI,KAAMA,EAAMukC,OAAQA,IAAW,IErB7F,SAASwuG,GAA8B93I,GAC1C,MAAM,KAAE+E,EAAI,OAAEukC,EAAM,MAAEk5E,EAAK,UAAEva,EAAS,WAAE+V,EAAU,gCAAE+5B,EAA+B,UAAE5jG,EAAS,OAAE9yB,EAAM,cAAE40H,EAAa,SAAE1pI,GAAcvM,GAC/H,cAAEshB,EAAa,WAAEC,GAAexc,EAAKR,OAAO+kC,GAC5C++D,GAAQ,IAAA77F,UAAQ,KAClB,MAAMkrI,EAAgB,CAClBvjG,YACA9yB,UAgBJ,OAdI40H,IACAyB,EAAcM,UAAY,SAC1BN,EAAcO,UAAY,QAE1Bz1B,IACKlhG,EAIDo2H,EAAcQ,OAASH,EACjB,qBACA,kBALNL,EAAcS,QAAU,oBAQzBT,CAAa,GACrB,CAACvjG,EAAW9yB,EAAQ40H,EAAezzB,EAAOlhG,EAAey2H,IAC5D,OAAQ,gBAAoB,MAAO,CAAEt1I,IAAKu7G,EAAY/V,UAAW,KAAG,kCAAmCA,EAAW,CAC1G,kBAAmB1mF,IACnB8mF,MAAOA,GAAS97F,EAC5B,CC1BA,MAAM6rI,GAAuBp4I,GAAW,gBAAoB23I,GAA6B/4I,OAAOiI,OAAO,CAAC,EAAG7G,IACpG,SAASq4I,GAAoBr4I,GAChC,MAAM,KAAE+E,EAAI,aAAEuzI,EAAeF,GAAmB,eAAEG,EAAc,OAAEjvG,GAAWtpC,EACvEw4I,EAAc,CAChBzzI,OACAukC,SACAisG,sBAAuBuC,IAE3B,OAAOQ,EAAa15I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG7G,GAAQ,CAAEy4I,oBAAqBd,GAA6BprI,SAAUgsI,EAAeC,KAC7I,CCVA,MAAME,GAAuB,EAAG3zI,UAAWA,EAAKpC,QAAQ+jC,WACjD,SAASiyG,GAAuB34I,GACnC,MAAM,QAAEsQ,EAAO,cAAEsoI,EAAgBF,GAAoB,gBAAEG,EAAe,aAAEP,EAAY,eAAEC,EAAc,OAAEjvG,EAAM,MAAE9kC,EAAK,WAAEqgC,GAAgB7kC,EAC/H84I,EAAWt0I,EAAMvG,KAAK8G,GAAU,gBAAoBszI,GAAqB,CAAEnyI,IAAK0yI,EAAc,CAAE7zI,OAAMukC,WAAWvkC,KAAMA,EAAMuzI,aAAcA,EAAcC,eAAgBA,EAAgBjvG,OAAQA,MACvM,OAAQ,gBAAoB,MAAK,CAAE2+D,UAAW,4CAA8C4wC,EACtFA,EAAgB,CACdtsI,SAAUusI,EACVxvG,SACAh5B,UACA9L,QACAqgC,eAEFi0G,EACV,CCbO,MAAMC,GAA2C/4I,IACpD,MAAM,YAAEwgB,GAAgBxgB,EAClBioG,EAAY,KAAG,eAAgB,cAAe,kCACpD,OAAO,gBAAoB,MAAO,CAAEA,UAAWA,GAAaznF,EAAY,ECF/Dw4H,GAAgCh5I,IACzC,MAAM,MAAEyI,EAAK,YAAE+X,EAAW,mBAAEy4H,EAAkB,aAAEC,GAAiBl5I,EACjE,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,wDAC5CgxC,EACA,gBAAoB,MAAO,CAAEhxC,UAAW,wCAA0CixC,QAAmDA,EAAgB,gBAAoB,MAAO,CAAEjxC,UAAW,sBACzLx/F,EAAS,gBAAoB,MAAO,CAAEw/F,UAAW,+BAC7C,gBAAoB,OAAQ,CAAEA,UAAW,SACrC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,4BAA8Bx/F,KAAY,KAC9G+X,EAAe,gBAAoBu4H,GAAyC,CAAEv4H,YAAaA,IAAkB,OAAS,ECXrH24H,GAA8B,CACvCx2I,MAAO,IAAM,EACbkmC,IAAK,IAAM,KACXzkC,OAAQ,IAAM,KACd3B,IAAK,KAAe,EACpB6N,QAAS,KAAe,EACxB/L,KAAM,KAAM,CAAG8G,GAAI,CAAEC,UAAW,MAChC+9B,cAAe,KAAM,CAAG/9B,UAAW,KACnC09B,OAAQ,KAAM,EACdE,aAAc,KAAM,EACpBC,SAAU,KAAM,EAChBI,iBAAkB,KAAM,EACxBT,QAAS,KAAM,EACfC,QAAS,KAAM,EACfU,KAAM,KAAM,EACZD,QAAS,KAAM,EACfS,aAAc,KAAM,EACpBH,oBAAqB,KAAM,EAC3BC,8BAA+B,KAAM,EACrCH,gBAAiB,KAAM,EACvBC,0BAA2B,KAAM,EACjCG,aAAc,KAAM,EACpBN,aAAc,KAAM,EACpBC,uBAAwB,KAAM,EAC9BQ,2BAA4B,KAAM,EAClCC,uBAAwB,KAAM,EAC9BF,oBAAqB,KAAM,EAC3Bd,QAAS,KAAM,GCvBZ,SAASgwG,GAAqCp5I,GACjD,MAAM,QAAEsQ,EAAO,OAAEg5B,GAAWtpC,EACtBq5I,EAAgB/oI,EAAQ7E,SAC9B,OAAO4tI,EAAiB,gBAAoB9B,GAAiC,CAAEkB,oBAAqBlB,GAAiCxyI,KAAMo0I,GAA6B7vG,OAAQA,GAC5K,gBAAoB0vG,GAA8B,CAAEvwI,MAAO4wI,EAAc5wI,MAAO+X,YAAa64H,EAAc74H,eAAmB,IACtI,CCPA,MAAM,GAAgB,CAAEa,OAAQ,EAAGD,MAAO,EAAGi2H,SAAU,SAAUC,KAAM,GACjEgC,GAAe,CAAC,EACTC,GAAkCv5I,IAC3C,MAAM,SAAEuM,EAAQ,UAAE07F,EAAS,MAAEua,EAAK,SAAE/zD,GAAazuD,EAC3CqoG,EAAQ55C,EAAW,GAAgB6qF,GACzC,OAAQ,gBAAoB,MAAO,CAAErxC,UAAW,KAAG,CAAC,qBAAsB,qBAAsBA,GAAY,CACpG,2BAA4Bua,IAC5Bna,MAAOA,GAAS97F,EAAU,ECLzBitI,GAA2Cx5I,IACpD,MAAM,QAAEsQ,GAAYtQ,EACduoF,EAAWoB,KACXxlD,EAAOkxG,GAAkB/kI,GACzBmmI,EAAc7sD,GAAqBkI,GAA0B3tD,IAC7DoyG,EAAuB3sD,GAAqBsI,GAA0B/tD,IAC5E,OAAQ,gBAAoBwwG,GAAsB,CAAE/vI,KAAM,SAAUgwI,OAAQ,IAAMrsD,EAAS5jD,GAAUT,qBAAqB,CAClHC,KAAM7zB,EAAQ9L,QAAQvG,KAAK8G,GAASA,EAAKtC,QACzCgjB,SAAS,KACRonF,OAAQ4pC,EAAajpG,cAAe+oG,GAAwB,E,0BCZlE,SAASkD,KACZ,OAASlzC,QAASmzC,IAAsB/yC,GAAiB,CAAC,kBAAmB,kBAAmB,sBAAuB,MAAO,WAAY,CAAC,EAAG,IAC9I,OAAO+yC,CACX,C,2BCFO,MAAMC,GAAiB35I,IAC1B,MAAM,OAAE2M,GAAW3M,EACb03G,EAAe,KAAG,kCAAmC,gCAAiC/qG,GACtFgrG,EAAgB,KAAG,sBAAuBhrG,GAChD,OAAQ,gBAAoB,MAAO,CAAEs7F,UAAWyP,GAC5C,gBAAoB,MAAO,CAAEzP,UAAW0P,IAAkB,ECG3D,SAASiiC,IAAqB,QAAEtpI,EAAO,MAAE9L,EAAK,OAAE8kC,EAAM,oBAAEkwE,IAC3D,MAAMjxB,EAAWoB,KACXp2B,EAAcq2B,GAAqBz5B,IACnC/uD,EAAWwoF,GAAqB1+B,KAChC,gBAAEmiD,EAAe,sBAAEC,EAAqB,YAAEK,EAAW,UAAEC,EAAS,oBAAEE,GAAwBW,KAC1F/9D,GAAU,IAAAlkC,UAAQ,IAAMhI,EAAMvG,KAAK8G,GAASA,EAAKX,YAAW,CAACI,IAC7Dq1I,GAAoB,IAAArtI,UAAQ,IAAMkkC,EAAQzyC,KAAKmG,GAAWA,EAAO5B,cAAa,CAACkuC,IAC/EopG,GAA4B,IAAAttI,UAAQ,IA2D9C,SAAqChI,GACjC,MAAMu1I,EAAoBv1I,EAAMe,QAAQR,GAASgG,EAAmBhG,EAAKX,YACnE41I,EAAcD,EAAkBxxI,QAAO,CAAC0xI,EAAuBl1I,KACjE,IAAIV,EACJ,MAAQgH,IAAI,WAAEkW,EAAa,uBAA8E,QAAtBld,EAAKU,EAAKR,cAA2B,IAAPF,EAAgBA,EAAK,CAAEgH,GAAI,CAAC,GAC7I,OAAOpD,KAAKuZ,IAAIy4H,EAAuB14H,EAAW,GACnD,GACH,MAAO,CACH24H,kBAAmBH,EAAkBpwI,OAASnF,EAAMmF,OACpDqwI,YAAaD,EAAkBpwI,OAAS,EAAIqwI,EAAc,EAElE,CAtEoDG,CAA4B31I,IAAQ,CAACA,MAC9E,WAAE4kG,GAAcQ,GAAWP,GAAiB,CAC/CC,SAAU,KACN,MAAM8O,EAA0BoB,IAC1B5lC,EAAWnjC,GAAaC,EAAS6iB,EAAaumF,EAA0BE,aACxEnmE,EAAW/iC,GAAaJ,EAAS6iB,GACjC6mF,EAsCX,SAAsB51I,EAAOmsC,EAAYrH,EAAQloC,GACpD,OAAOoD,EAAM+D,QAAO,CAACwpC,EAAKhtC,KACtB,IAAIV,EAAIswB,EAAIK,EACZ,MAAMmc,EAAcpsC,EAAKskC,cAAcC,GACjC+wG,EAA0G,QAArFh2I,EAAK6sC,GAAyBnsC,EAAKX,SAAU+sC,EAAaR,EAAYvvC,UAA8B,IAAPiD,EAAgBA,EAAK2oG,GACvIstC,EAAc,kBAAmCD,GAEvD,MAAO,IAAItoG,EADwG,QAA/F/c,EAA2C,QAArCL,EAAK5vB,EAAKskC,cAAcC,UAA4B,IAAP3U,OAAgB,EAASA,EAAGpT,kBAA+B,IAAPyT,EAAgBA,EAAKslH,EACrH,GAC5B,GACP,CA/C8BC,CAAa/1I,EAAO+uD,EAAajqB,EAAQloC,GAC3D,MAAO,CACHwD,KAAM,0BACNmZ,aAAczN,EAAQ3N,QACtBogB,YAAave,EAAMvG,KAAK8G,GAASA,EAAKpC,UACtCy1G,0BACAoiC,cAAeJ,EACfxmE,WACAC,WACH,EAEL41B,QAAS,CAAC1kG,EAAMuhG,KACZ,IAAIjiG,EACJ,MAAMmqG,EAAmBV,KACnB,aAAE/vF,EAAY,YAAEgF,EAAW,cAAEy3H,GAAkBz1I,EAC/C6uE,EAAWnjC,GAAaC,EAAS6iB,EAAaumF,EAA0BE,aACxEnmE,EAAW/iC,GAAaJ,EAAS6iB,GACjCknF,EA+BX,SAAwBD,EAAeE,EAAWC,EAAmB/mE,EAAUC,GAClF,MAAM9/B,EAAe9rC,KAAKuZ,OAAOg5H,GAC3BI,EAAgB,kBAAmCF,EAAYC,GACrE,OAAO1yI,KAAKC,IAAI2rE,EAAU5rE,KAAKuZ,IAAIoyD,EAAU7/B,EAAe6mG,GAChE,CAnCgCC,CAAeL,GAAoE,QAAnDn2I,EAAKiiG,EAAQ8T,wCAAqD,IAAP/1G,OAAgB,EAASA,EAAG6nG,IAAM,EAAGsC,EAAiBtC,EAAGt4B,EAAUC,GAClL0U,EAAS4Q,GAAap7E,EAAcgF,EAAa03H,IACjD7sC,GAAW,GAEhB,CAACl9D,EAAS6iB,EAAaumF,EAA0BE,eACpD,IAAA9sI,YAAU,KACFk8F,GACAuE,EAAY,SAAUksC,EAC1B,GAED,CAACzwC,IACJ,MAAM0xC,EAAyC,SAApBztC,EACrB0tC,EAAuC,UAApB1tC,EACnB2tC,GAAsB,IAAQ1tC,KAA2B,KAAQA,EAAuBusC,IACvFjgC,EAAkBC,IAAwB,IAAA7vB,WAAS,GAGpDixD,GAAuBH,GAAsBlhC,KAAsBmhC,IAAqBC,EACxFruI,EAASy8F,EAAa,QAAU,SACtC,OAAQ,gBAAoB,MAAO,CAAEnB,UAAW,iEAAmE6xC,EAA0BI,kBAAqB,gBAAoB,MAAO,CAAEz3I,IAAKmnG,EAAS3B,UAAW,4DAA6DqS,aAJhQ,IAAMT,GAAqB,GAIiQU,aAH5R,IAAMV,GAAqB,IAG+RohC,EAAsB,gBAAoBtB,GAAe,CAAEhtI,OAAQA,IAAY,MAAS,KAC3a,CCvDA,MAAM,GAAuB,EAAG5H,UAAWA,EAAKpC,QAAQ+jC,WACjD,SAASw0G,GAA2Bl7I,GACvC,MAAM,QAAEsQ,EAAO,cAAEsoI,EAAgB,GAAoB,gBAAEC,EAAe,aAAEP,EAAY,eAAEC,EAAc,oBAAE/+B,EAAmB,OAAElwE,EAAM,MAAE9kC,EAAK,WAAEqgC,EAAU,mBAAEs2G,GAAwBn7I,EACxK05I,EAAmBD,KACnBX,GAAW,IAAAtsI,UAAQ,IAAMhI,EAAMvG,KAAK8G,GAAU,gBAAoBszI,GAAqB,CAAEnyI,IAAK0yI,EAAc,CAAE7zI,OAAMukC,WAAWvkC,KAAMA,EAAMuzI,aAAcA,EAAcC,eAAgBA,EAAgBjvG,OAAQA,OAAa,CAACsvG,EAAeN,EAAc9zI,EAAO8kC,EAAQivG,IACzQ6C,GAAe,IAAA5uI,UAAQ,IAAMktI,EAC7BZ,EACA,KAAQqC,GAAoB5yI,QAAO,CAACwpC,GAAMpvC,EAAO04I,KAc3D,SAAgBl+H,EAAK2sH,EAAOwR,KAAgBx2I,GACxC,MAAM4C,EAAS,GACXoiI,EAAQ,GACRpiI,EAAOjE,QAAQ0Z,EAAIqF,MAAM,EAAGsnH,IAEhCpiI,EAAOjE,QAAQqB,GACf,MAAM4lF,EAAMhjF,EAAOiC,OAAS7E,EAAQ6E,OAC9Bs/B,EAAQqyG,GAAe,EAAI5wD,EAAMA,EAAM4wD,EAI7C,OAHIn+H,EAAI8rB,IACJvhC,EAAOjE,QAAQ0Z,EAAIqF,MAAMymB,IAEtBvhC,CACX,CAzBmBuS,CAAO83B,EAAKpvC,EAAQ,EAAG,EAAG,gBAAoB,MAAK,CAAE0I,GAAI,GAAInF,IAAK,wBAAwBvD,IAAS0lG,MAAO,CAAEl0D,UAAW,IAC1H,gBAAoBylG,GAAsB,CAAE1zI,IAAK,wBAAwBvD,IAAS2mC,OAAQA,EAAQkwE,oBAAqBA,EAAqBlpG,QAASA,EAAS9L,MAAO62I,OAC1KvC,IAAW,CAACY,EAAkBZ,EAAUqC,EAAoB7xG,EAAQkwE,EAAqBlpG,IAChG,OAAQ,gBAAoB,MAAK,CAAE23F,UAAW,4CAA8C4wC,EACtFA,EAAgB,CACdtsI,SAAU6uI,EACV9xG,SACAh5B,UACA9L,QACAqgC,eAEFu2G,EACV,CClBA,MAAMG,GAA0Bv7I,GAAW,gBAAoBu5I,GAAgC36I,OAAOiI,OAAO,CAAC,EAAG7G,IAC3Gw7I,GAAyBx7I,GAAW,gBAAoBo5I,GAAsCx6I,OAAOiI,OAAO,CAAC,EAAG7G,IAChH,GAAuB,EAAG+E,UAAWA,EAAKpC,QAAQ+jC,WACjD,SAAS+0G,GAAuBz7I,GACnC,MAAM,QAAEsQ,EAAO,gBAAEorI,EAAkBH,GAAsB,sBAAEI,EAAwBH,GAAqB,cAAE5C,EAAgB,GAAoB,gBAAEC,EAAe,aAAEP,EAAY,eAAEC,EAAc,oBAAE/+B,EAAmB,OAAElwE,EAAM,WAAEzE,GAAgB7kC,EACtOw4I,EAAc,CAAEloI,UAASg5B,SAAQzE,cACjCrgC,GAAQ,IAAAgI,UAAQ,KAClB,GAAmB,SAAfq4B,EAAuB,CACvB,MAAMs2G,EAAqB7qI,EACtB9L,QACAgmC,WAAWlB,GACXrrC,KAAKo9I,GAAe,CAAC,KAAKA,GAAY14I,QAAS04I,KAC9CA,EAAa/qI,EAAQ9L,QAAQqF,MACnC,OAAQ,gBAAoBqxI,GAA4B,CAAE5xG,OAAQA,EAAQ6xG,mBAAoBA,EAAoB7qI,QAASA,EAAS9L,MAAO62I,EAAYxC,gBAAiBA,EAAiBD,cAAeA,EAAeN,aAAcA,EAAcC,eAAgBA,EAAgB1zG,WAAYA,EAAY20E,oBAAqBA,GACpU,CACA,OAAO,KAAQlpG,EAAQ9L,QAAQgmC,WAAWlB,IAAS,CAAC+xG,EAAY14I,IACpD,gBAAoBg2I,GAAwB,CAAEzyI,IAAKvD,EAAM+jC,WAAY4C,OAAQA,EAAQh5B,QAASA,EAAS9L,MAAO62I,EAAYxC,gBAAiBA,EAAiBD,cAAeA,EAAeN,aAAcA,EAAcC,eAAgBA,EAAgB1zG,WAAYA,EAAY20E,oBAAqBA,KAC7S,GACH,CACCA,EACAq/B,EACAD,EACAN,EACAzzG,EACAyE,EACAh5B,EACAioI,IAEJ,OAAOmD,EAAgB98I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2xI,GAAc,CAAEoD,uBAAwBrC,GAAgChtI,SAAW,gBAAoB,WAAgB,KACtKovI,EAAsB,CAClBrrI,UACAg5B,SACAuyG,6BAA8BzC,KAElC50I,EACe,SAAfqgC,EAAwB,gBAAoB20G,GAAyC,CAAElpI,QAASA,IAAa,QACzH,ECnCA,SpaUmD,CAE/CwrI,eAAgB,KAChBC,wBAAoB93I,EACpB+3I,YAfkC,EAgBlCC,YAXkC,CAJCC,IACAC,IACAC,KACAC,QoaFvC,MAMMC,GAA0B,EAAGhsI,aAAcA,EAAQ3N,QAAQ+jC,WAM1D,SAAS61G,GAAgBv8I,GAC5B,MAAM,OAAEgd,EAAM,iBAAEw/H,EAAmBF,GAAuB,gBAAEZ,EAAe,sBAAEC,EAAqB,cAAE/C,EAAa,aAAEN,EAAY,eAAEC,EAAc,gBAAEM,EAAe,UAAE5wC,EAAS,MAAEua,EAAK,aAAEjI,EAAY,mBAAEkiC,EAAkB,WAAE53G,EAAa,QAAY7kC,EACzO08I,EAAY,SAAa,OACzB,aAAExxG,EAAY,qBAAEyxG,IAAyB,IAAAnwI,UAAQ,KACnD,MAAMqjC,EAhBQ,EAAC7yB,EAAQy/H,IACvBA,EACOz/H,EAEJy2B,GAA4Bz2B,GAYT4/H,CAAc5/H,IAAUy/H,GACxCvxG,EAAeU,GAAA,IAA0BiG,GAAgChC,IACzE8sG,EAAuB1pG,GAAwBj2B,EAAQkuB,EAAarC,OAC1E,MAAO,CAAEqC,eAAcyxG,uBAAsB,GAC9C,CAAC3/H,EAAQy/H,IACNI,GAAyB,IAAAzxD,cAAaotD,GAAgBkD,EAAmBA,EAAgB98I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2xI,GAAc,CAAEh2B,WAAc,gBAAoBg2B,EAAYoD,uBAAwBh9I,OAAOiI,OAAO,CAAC,EAAG2xI,EAAa,CAAEh2B,MAAOA,MAAY,CAACA,EAAOk5B,IAC3QliC,GAAsB,IAAApuB,cAAY,WACpC,OAAQsxD,aAA6C,EAASA,EAAUvvI,SAAWuvI,EAAUvvI,QAAQ87G,wBAA0Bhc,EACnI,GAAG,IACG6vC,GAAwB,IAAA1xD,cAAaotD,IACvC,MAAMT,EAAkC4E,EAAqB3qH,MAAM21E,GAAa,KAAQA,EAAU,CAAC6wC,EAAYzzI,KAAKuL,UAAU3N,QAAS61I,EAAYzzI,KAAKpC,YACxJ,OAAO41I,EAAkBA,EAAe35I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2xI,GAAc,CAAET,kCACpFv1B,QAAOhJ,oBAAqBA,KAA4B,gBAAoBg/B,EAAYjD,sBAAuB32I,OAAOiI,OAAO,CAAC,EAAG2xI,EAAa,CAAEh2B,MAAOA,EAAOu1B,gCAAiCA,EAAiCv+B,oBAAqBA,IAAwB,GAClR,CAACgJ,EAAOm6B,EAAsBpE,IACjC,OAAQ,gBAAoB,MAAO,CAAEtwC,UAAW,KAAG,2BAA4B,2BAA4B,gBAAiBA,GAAYsS,aAAcA,EAAc93G,IAAKi6I,GACrK,gBAAoB,MAAqB,CAAEK,aAAa,GACpD,gBAAoB,MAAmB,CAAElwC,OAASmwC,IAC1C,MAAM1zG,EAAS0zG,EACf,OAAO1zG,EAAU,gBAAoB,MAAW,CAAE2zG,OAAO,EAAMh1C,UAAW,wCAA0C/8D,EAAaltB,WAAW/f,KAAKqS,GACrI,gBAAoBmrI,GAAwB,CAAEv1I,IAAKs2I,EAAiB,CAAElsI,UAASg5B,WAAWh5B,QAASA,EAASorI,gBAAiBmB,EAAwBlB,sBAAuBA,EAAuB/C,cAAeA,EAAeN,aAAcA,EAAcO,gBAAiBA,EAAiBN,eAAgBuE,EAAuBxzG,OAAQA,EAAQzE,WAAYA,EAAY20E,oBAAqBA,OACxY,IAAI,KAE/B,C,gBC7CO,MAAM0jC,GAAsCl9I,IAC/C,MAAM,OAAEgvG,EAAM,UAAE/G,GAAcjoG,EACxBm9I,EAAanuC,EAAS,kCAAkC,SAAwB,UAChFrD,EAAQqD,EAAS,MAAiB,MACxC,OAAQ,gBAAoB,MAAO,CAAE5tF,MAAO,KAAMC,OAAQ,KAAM+zH,MAAO,6BAA8BgI,WAAY,+BAAgCn1C,UAAWA,GACxJ,gBAAoB,IAAK,CAAEktC,KAAM,OAAQkI,SAAU,WAC/C,gBAAoB,SAAU,CAAEvuC,GAAI,KAAMC,GAAI,KAAMhgE,EAAG,KAAMomG,KAAMgI,IACnE,gBAAoB,OAAQ,CAAEv/G,EAAG,oMAAqMu3G,KAAMxpC,EAAO0xC,SAAU,aAAe,ECN3QC,GAAoCt9I,IAC7C,MAAM,SAAE2nG,EAAQ,OAAEh7F,GAAW3M,EAC7B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,KAAG,+BAAgC,8BAA+BN,EAAUh7F,IACxH,gBAAoBuwI,GAAoC,CAAEj1C,UAAW,2EAA4E+G,OAAyB,WAAjBhvG,EAAM2M,SAC/J,gBAAoBuwI,GAAoC,CAAEj1C,UAAW,4EAA6E+G,OAAyB,WAAjBhvG,EAAM2M,SAAwB,ECLnL4wI,GAAgCv9I,GAAW,gBAAoB,WAAgB,KACxF,gBAAoBs9I,GAAkC,CAAE31C,SAAU,MAAOh7F,OAAQ3M,EAAM2M,SACvF3M,EAAMuM,SACN,gBAAoB+wI,GAAkC,CAAE31C,SAAU,SAAUh7F,OAAQ3M,EAAM2M,UCDxF,GAAgB,CAAE0U,OAAQ,EAAGD,MAAO,EAAGi2H,SAAU,SAAUC,KAAM,GACjE,GAAe,CAAC,ECGTkG,GAAgDj8C,GAAgB,CACzEwxC,KAAMwG,GACNhlB,KDKmDv0H,IACnD,MAAM,SAAEuM,EAAQ,UAAE07F,EAAS,MAAEua,EAAK,SAAE/zD,EAAQ,QAAEn+C,GAAYtQ,EACpDqoG,EAAQ55C,EAAW,GAAgB,GACnC9hD,EAZV,SAAyBoR,GACrB,MAAMqkB,EAAqBwnD,GAAqBuH,IAEhD,OADyBsoD,MAIRr3G,IAAuBrkB,EAF7B,QAGQ,WACvB,CAImB0/H,CAAgBntI,EAAQ3N,SACvC,OAAQ,gBAAoB,MAAO,CAAEslG,UAAW,KAAG,CAAC,qBAAsB,qBAAsBA,GAAY,CACpG,2BAA4Bua,IAC5Bna,MAAOA,GACX,gBAAoBk1C,GAA8B,CAAE5wI,OAAQA,GAAUJ,GAAW,IEnBnFmxI,GAAsB,CAAC,CAAEzxC,MAAO,UAChC0xC,GAAgB,CAAE,QAAS,CAAC,EAAG,IAC/BC,GAAe,iBACd,SAASC,IAAwB,eAAEnpB,EAAc,UAAE3R,EAAS,MAAE94G,EAAK,aAAE6zI,EAAY,SAAE7pB,EAAQ,QAAEzP,EAAO,UAAEvc,EAAS,QAAEqpC,EAAO,mBAAEyM,EAAkB,SAAExxI,EAAQ,SAAE40G,IAC3J,MAAMryB,GAAO,EAAAC,GAAA,MACNq7C,EAAcC,IAAmB,IAAArgD,UAAS//E,IAC1C+zI,EAASC,IAAc,IAAAj0D,WAAS,GACjCk0D,EAAsBn7B,EAAYqnB,EAAazgI,OAC/Cw0I,EAAyBp7B,EACzBq7B,EAAgBtvD,EAAKj/D,cAAc,CAAEzxB,GAAI,iCAAmC,CAAEigJ,uBAAwBH,EAAqBC,2BAC3HG,EAAqBlU,EAAazgI,OAClC40I,EAAkBP,GAAWj7B,EAAYu7B,GAAsBR,EAC/DtgF,GAAU,IAAA4tB,cAAY,KACxB6yD,GAAW,GACXvpB,SAAgEA,GAAgB,GACjF,CAACA,IACE8pB,GAAmB,IAAApzD,cAAY,KACjC6yD,GAAW,GACX5T,EAAgBpgI,GAChBgqH,SAAoDA,GAAU,GAC/D,CAACA,EAAUhqH,IACRw0I,GAAmB,IAAArzD,cAAaszD,IAClCT,GAAW,GACX5T,EAAgBqU,GAChBv9B,EAASu9B,EAAS,GACnB,CAACv9B,IACE4H,GAAW,IAAA39B,cAAaszD,IAC1BrU,EAAgBqU,EAAS,GAC1B,IACH,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBzM,GAAe,CAAEhqC,UAAWA,EAAWqpC,QAASA,EAASrnI,MAAOA,EAAO84G,UAAWA,EAAWxgH,YAAaw7I,EAAoBrpB,eAAgBl3D,EAASy2D,SAAUuqB,EAAkBz1B,SAAUA,EAAU5H,SAAUs9B,GAAoBlyI,GACzPgyI,EAAmB,gBAAoBxyC,GAAA,GAAQ,CAAEyY,QAASA,EAASvc,UAAW21C,GAAc5xC,YAAa0xC,GAAqB95B,aAAc+5B,IAAiBS,GAAkB,KACvL,CCnCO,MACMO,GAAyB,KCI/B,SAASC,GAAsB5+I,GAClC,MAAMwgB,EDIH,SAAwBA,GAC3B,OAAIA,GAAeA,EAAY7W,OAASg1I,GAC7Bn+H,EAAY0jH,UAAU,EAAGya,IAA0B,MAEvDn+H,CACX,CCTwBq+H,CAAe7+I,EAAMwgB,aACnC/X,EDHH,SAAkBA,GACrB,OAAIA,GAASA,EAAMkB,OALS,IAMjBlB,EAAMy7H,UAAU,EANC,KAMsB,MAE3Cz7H,CACX,CCFkBq2I,CAAS9+I,EAAMyI,QACvB,MAAE9F,GAAU3C,EACZ8uF,GAAO,EAAAC,GAAA,KACPxG,EAAWoB,KACXo1D,GAAc,IAAA3zD,cAAa3iF,GAAU8/E,EAASkQ,GAA0B91F,EAAO,CAAE8F,UAAS,KAAQ,CAAC8/E,EAAU5lF,IAC7Gq8I,GAAoB,IAAA5zD,cAAa5qE,GAAgB+nE,EAASkQ,GAA0B91F,EAAO,CAAE6d,gBAAe,KAAQ,CAAC+nE,EAAU5lF,IAC/H+xH,GAAiB,IAAAtpC,cAAY,KAC/B7C,EAAS5jD,GAAUxC,sBAAsBx/B,GAAO,GACjD,CAAC4lF,EAAU5lF,IACRs8I,GAAe,IAAA7zD,cAAY,KAC7B7C,EAAS5jD,GAAUtC,0BAA0B,GAC9C,CAACkmD,IACE22D,GAAgB,IAAA9zD,cAAa3iF,IAC/Bs2I,EAAYt2I,GACZw2I,GAAc,GACf,CAACF,EAAaE,IACXE,GAAsB,IAAA/zD,cAAa5qE,IACrCw+H,EAAkBx+H,GAClBy+H,GAAc,GACf,CAACD,EAAmBC,IACvB,OAAQ,gBAAoB,MAAO,CAAEh3C,UAAW,sBAC5C,gBAAoB,MAAO,CAAEA,UAAW,2DACpC,gBAAoB41C,GAAyB,CAAE51C,UAAW,gBAAgBtlG,sDAA2D2uI,QAAS,GAAIrnI,MAAOxB,GAAS,GAAIs6G,UD7BlJ,IC6B+K+6B,aD3BrK,IC2B+MC,mBAAoBjvD,EAAKj/D,cAAc,CAAEzxB,GAAI,wCAA0ComH,QAAS,iBAAiB7hH,IAASw+G,SAAU+9B,EAAexqB,eAAgBA,EAAgBT,SAAUgrB,KAC9a,gBAAoB,MAAO,CAAEh3C,UAAW,iEACpC,gBAAoB41C,GAAyB,CAAE51C,UAAW,sBAAsBtlG,qDAA0D6hH,QAAS,uBAAuB7hH,IAAS2uI,QAAS,GAAIrnI,MAAOuW,GAAe,GAAIuiG,UAAW47B,GAAwBb,aD5BzN,IC4ByQC,mBAAoBjvD,EAAKj/D,cAAc,CAC5UzxB,GAAI,8CACJ+iH,SAAUg+B,EAAqBzqB,eAAgBA,EAAgBT,SAAUgrB,KAC7F,CC7BO,MAAMG,GAAsBp/I,IAC/B,MAAM,OAAEylG,GAAWzlG,EACnB,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,oBAC5C,gBAAoBs1C,GAA8B,CAAE5wI,OAAQ84F,EAAS,SAAW,SAC5E,gBAAoB,MAAO,CAAEwC,UAAW,KAAG,wBAAyB,sBAAuB,uBAAwB,aAC/G,gBAAoB,MAAO,CAAEA,UAAW,KAAG,8BAA+B,WAAY,CAAE,UAAWxC,KAC/F,gBAAoB,MAAO,CAAEwC,UAAW,qCACpC,gBAAoB,MAAO,CAAEA,UAAW,qBACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,uCACvD,gBAAoB,KAAkB,CAAE7pG,GAAI,wBAAyBoI,OAAQ,CACrE4xB,EAAIo3G,GAAW,gBAAoB,IAAK,KAAMA,GAC9C6P,KAAM,gBAAoB,WAAgB,KAAM,cACxC,ECLnCC,GAAkBt/I,IAC3B,MAAM,MAAE2C,EAAK,eAAE48I,GAAmBv/I,EAC5BuoF,EAAWoB,KACXwtB,EAA4Bw8B,GAAwChxI,GACpE00G,EAA2Bu8B,GAAuCjxI,GAClEy0G,EAA+B08B,GAA2CnxI,GAC1E68I,EChBH,SAA8CC,GACjD,MAAMl3D,EAAWoB,KACjB,OAAO,IAAAyB,cAAarmF,GAASwjF,EAASsQ,GAA2D9zF,EAAKgZ,aAAchZ,EAAKgM,UAAW0uI,KAAmB,CAACl3D,EAAUk3D,GACtK,CDamCC,CAAqC/8I,IAC9D,mBAAEk0G,GAAuBH,OACxB,QAAEnQ,EAAO,OAAEd,GAAUoC,GAAWlB,GAAiB,CAAC,kBAAmB,kBAAmB,sBAAuB,MAAO,WAAY,CACrIM,KAAOliG,IACCqhG,GAA2BrhG,IAC3BoyG,EAA0BpyG,EAAKmc,SAE/B6kF,GAAuBhhG,IACvBy6I,EAAuBz6I,GAEvBohG,GAAkCphG,IAClCqyG,IAEApR,GAAmBjhG,IACnBy6I,EAAuBz6I,GAEvBmhG,GAA8BnhG,IAC9BsyG,GACJ,EAEJ9Q,QAAUxhG,IACN,GAAI+gG,GAA0B/gG,GAAO,CACjC,MAAM46I,EAAoBh9I,IAAUoC,EAAKgZ,cAAgBpb,IAAUoC,EAAKgZ,aAAe,EACvF,QAAShZ,EAAK8wI,qBAAuB8J,EACzC,CACA,OAAO,CAAI,GAEhB,CAACp3D,EAAU5lF,EAAOw0G,EAA2BE,EAA0BD,IAM1E,IALA,IAAAlqG,YAAU,KACFu4F,GACAoR,GACJ,GACD,CAACA,EAAoBpR,KACnBc,EACD,OAAO,KAEX,MAAMv9D,EAA4B,UAAnBu2G,EACTn3C,EAAa5C,GAAsB,CAAEC,WAC3C,OAAQ,gBAAoB,MAAO,CAAEwC,UAAW,KAAG,wBAAyB,CACpE6J,KAAM9oE,GAAUu9D,EAChB,uBAAwBv9D,GAAUu9D,EAClC4B,QAAS5B,KAEb,gBAAoB,MAAO,CAAE0B,UAAW,KAAG,cAAe,CAAEE,QAAS5B,IAAY8B,MAAOzpG,OAAOiI,OAAO,CAAC,EAAGuhG,GAAa3lG,IAAKolG,KAAapC,GAAU,gBAAoB25C,GAAoB,CAAE35C,OAAQA,KAAY,EErD5Mm6C,GAAsDr+C,GAAgB,CAC/EwxC,KAAMqG,GACN7kB,KCDG,SAAkDv0H,GACrD,MAAM,QAAEsQ,EAAO,OAAEg5B,GAAWtpC,EACtBq5I,EAAgB/oI,EAAQ7E,SACxBo0I,EAAwC,IAApBvvI,EAAQ3N,SAAiB2N,EAAQ9L,QAAQ+wB,OAAOhvB,GAAMi9C,GAA2Bj9C,EAAEnC,YACvG+/B,EAAOkxG,GAAkB/kI,GACzBwvI,EAAoBl2D,GAAqByI,GAAgCluD,IAC/E,OAAQ,gBAAoBozG,GAAiC,CAAEkB,oBAAqBlB,GAAiCxyI,KAAMo0I,GAA6B7vG,OAAQA,GAC5J,gBAAoB0vG,GAA8B,CAAEvwI,MAAO4wI,aAAqD,EAASA,EAAc5wI,MAAO+X,YAAa64H,aAAqD,EAASA,EAAc74H,YAAay4H,oBAAqB4G,GAAqB,gBAAoBP,GAAgB,CAAE38I,MAAO2N,EAAQ3N,QAAS48I,eAAgB,UAAYrG,aAAe2G,GAAsBC,OAA+S77I,EAA1R,gBAAoB26I,GAAuB,CAAEn2I,OAAQ4wI,aAAqD,EAASA,EAAc5wI,QAAU,GAAI+X,aAAc64H,aAAqD,EAASA,EAAc74H,cAAgB,GAAI7d,MAAO2N,EAAQ3N,YACtsB,ICda,GAAuB4+F,GAAgB,CAChDwxC,KCD+B,KAC/B,MAAMjkD,GAAO,EAAAC,GAAA,MACP,eAAEqU,GAAmB4B,KAC3B,OAAQ,gBAAoB5B,EAAgB,CAAE6E,UAAW,iBAAkBn5F,QAASggF,EAAKj/D,cAAc,CAAEzxB,GAAI,kCAAoCoiB,YAAasuE,EAAKj/D,cAAc,CAAEzxB,GAAI,gCAAmC,EDD1Nm2H,KAAM2f,KE8CJ0E,GAAiBmH,IACnB,MAAM37I,EAAS27I,EAAeh7I,KAAKX,SACnC,OAAI,QAASA,IACF,EAAAiG,EAAA,IAAejG,EAAO3B,KAE1Bs9I,EAAeh7I,KAAKpC,QAAQ+jC,UAAU,EAKpCs5G,GAA0BhgJ,IACnC,MAAM,gBAAE87G,EAAe,QAAE05B,EAAO,QAAEj4E,GAAYv9D,EACxCgd,EAAS4sE,GAAqBllC,IAC9Bu7F,EAAgBr2D,GAAqBvkC,IACrCowF,EAA2B7rD,GAAqBz7B,IAChDjtD,EAAW0oF,GAAqBz5B,IAChCj5B,EAAW0yD,GAAqB99B,IAChCjnB,EAAa+kD,GAAqBrjC,IAClC25F,GAAkB,IAAA90D,cAAarqE,GAC1B7f,EAAS+E,IAAI8a,IACrB,CAAC7f,IACEi/I,GAAkB,IAAA3zI,UAAQ,IC/DM,CAAC0wE,GAAU,CAACgjE,EAAiBhwG,IAC3DnrC,IACJ,MAAMX,EAASW,EAAKooC,SAAS/oC,SACvBg8I,GAAmB,QAAgBh8I,MAAa87I,EAAgB97I,EAAO8c,SAGvE87D,EAAW,GAAG,KAAUj4E,EAAKooC,SAAStE,MAAO,CAAE6X,MAAO,QAAS0/F,IACrE,IAAKljE,EAAM52E,IAAI02E,GAAW,CACtB,MAAMqjE,EAAgB,KAY3B,SAA2CH,GAC9C,OAAQn7I,GAASA,EAAKX,QAAQwqC,IAC1B,IAAI4E,EAAiB5E,EAIrB,IAHI,QAAS4E,KACTA,EAAiB50C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2sC,GAAiB,CAAE/wC,IAAK7D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2sC,EAAe/wC,KAAM,CAAE0C,KAAK,QAAUquC,GAAiBhxC,YAAY,QAASgxC,SAErL,QAAgBA,GAAiB,CACjC,MAAMtyB,EAAUg/H,EAAgB1sG,EAAetyB,SAG3CA,IACAsyB,EAAiB50C,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2sC,GAAiB,CAAEtyB,QAAStiB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2sC,EAAetyB,SAAU,CAAE/b,KAAK,OAAW+b,GAAU1e,YAAY,QAAU0e,OAEhM,CACA,OAAOsyB,CAAc,GAE7B,CA5BuC8sG,CAAkCJ,GAkClE,SAA2BA,EAAiBhwG,GAC/C,OAAQnrC,IACJ,MAAMX,EAASW,EAAKooC,SAAS/oC,SAC7B,IAAI,QAAgBA,GAAS,CACzB,MAAM8c,EAAUg/H,EAAgB97I,EAAO8c,UACvC,QAAUA,EAAS,8BACnB,MAAMiwB,EAAcpsC,EAAKooC,SAAS5oC,OAAO8G,IACjCC,UAAWyoC,EAAcxyB,WAAYyyB,GAAkB7C,GACzD,WAAEiD,EAAU,YAAEC,GAAgBP,GAAkCC,EAAcC,EAAe,UAAW9yB,EAAS,CAAEgvB,+BACzH,GAAI6D,IAAiBK,GAAcJ,IAAkBK,EAAa,CAC9D,MAAMksG,EAAgBxsG,IAAiBK,EAAa,CAAE9oC,UAAW8oC,GAAe,CAAC,EAC3EosG,EAAiBxsG,IAAkBK,EAAc,CAAE9yB,WAAY8yB,GAAgB,CAAC,EACtF,OAAOtvC,EAAKR,KAAK,CACb8G,GAAIzM,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGsqC,GAAcovG,GAAgBC,IAExF,CACJ,CACA,OAAOz7I,CAAI,CAEnB,CArD2F07I,CAAkBP,EAAiBhwG,GAA5F,CAAyHnrC,GAC/Im4E,EAAM1mE,IAAIwmE,EAAUqjE,EAAc/yG,QACtC,CACA,OAAOvoC,EAAKqoC,QAAQ8vC,EAAMj3E,IAAI+2E,GAAU,EDuDjC0jE,CADO,IAAI,KAAS,CAAEl/H,IAAK,QAEnC,IACGm/H,GAAoB,IAAAn0I,UAAQ,IAC1B0qB,EAzDZ,SAAqCla,GACjC,MAAM4jI,EAAazxG,GAAA,IAA2BnyB,GAGxC6jI,EAFeD,EAAWzzG,SACFnvB,WACO/f,KAAKqS,IAAY,CAClD9L,MAAO8L,EAAQ9L,QAAQgmC,WAAW,MAClC/+B,OAAQ6E,EAAQ7E,aAsBpB,OApBAm1I,EAAWpxG,iBACXqxG,EAAoBj7I,SAASk7I,IACzBA,EAAet8I,MAAMoB,SAAQ,CAACm7I,EAAYp+I,KAKtC,MAAMq+I,EAA0BD,EAAW9iJ,KAAK8G,GAASA,EAAKR,OAAO8G,GAAGkW,aAClE0/H,EAAgB,KAAID,GAC1BJ,EAAWvxG,eAAe/+B,IACtBywI,EAAWn7I,SAASb,IACF,IAAVpC,GACA2N,EAAQ7E,OAAOq1I,EAAer1I,QAElC6E,EAAQ+9B,WAAWzvC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG9B,EAAKR,OAAO8G,IAAK,CAAEkW,WAAY0/H,KAAmB16I,GAAMA,EAAEnC,OAAOW,EAAKX,WAAU,IAEhIkM,IACT,GACJ,IAECswI,EAAWtzG,OACtB,CA6BmB4zG,CAA4BlkI,GAEhCmyB,GAAA,IAA2BnyB,GAC7B2yB,gBAAgBr/B,GAAYA,EAAQ0+B,YAAYmxG,EAAgBD,EAAiBzK,MACjFnoG,SACN,CAACtwB,EAAQka,EAAUgpH,EAAiBzK,EAA0B0K,IAC3D5H,GAAiB,IAAAntD,cAAaotD,GACxB,gBAAoBlD,GAAuB12I,OAAOiI,OAAO,CAAE02D,QAASA,EAASi4E,QAASA,EAAS15B,gBAAiBA,GAAmB08B,KAC5I,CAACj7E,EAASi4E,EAAS15B,IACtB,GAAImkC,EACA,OAAO,gBAAoB,GAAsB,MAGrD,MAAMkB,EAA6BR,EAAkB3iI,SAASrU,OAAS,GACnEg3I,EAAkB3iI,SAAS,GAAGxZ,MAAMwtB,MAAMzrB,IAAOi9C,GAA2Bj9C,EAAEnC,UAClF,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBm4I,GAAiB,CAAEt0C,UAAW/wE,EAAW,cAAgB,GAAIla,OAAQ2jI,EAAmB/H,cAAeA,GAAeL,eAAgBA,EAAgBkE,mBAAoBhH,EAA0BiG,gBAAiB8B,GAA+C7B,sBAAuBiE,GAAqD/6G,WAAYA,MAC9Ws8G,GAA+B,gBAAoB7B,GAAgB,CAAE38I,MAAOg+I,EAAkB3iI,SAASrU,OAAQ41I,eAAgB,UAAa,EEzF/I,MAAM6B,WAAsB,EAAAz3B,cAC/B9c,SACI,MAAMxoG,EAAKnF,KAAKc,OAAO,mBAAEqhJ,GAAuBh9I,EAAIi9I,GAAc,SAAOj9I,EAAI,CAAC,uBAC9E,OAAQ,gBAAoBknI,GAAA,EAAS,CAAEv/B,YAAa,CAC5C,CACIC,MAAO,UAEZu/B,SAAS,EAAME,aAAc,QAAS2V,mBAAoBA,GAC7D,gBAAoBzW,GAAA,EAAmBhsI,OAAOiI,OAAO,CAAC,EAAGy6I,IACjE,E,gBCJG,MAAMC,WAAiC,gBAC1CxiJ,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKsiJ,iBAAoBhjJ,IACrBA,EAAEsgD,OAAO8/C,QAAQ,EAErB1/F,KAAKuiJ,gBAAmBjjJ,IACpB,MAAMkjJ,EAAiBljJ,EAAEsgD,OAAO70C,MAAM2zE,OACtC1+E,KAAK+sF,SAAS,CACVy1D,eAAmC,KAAnBA,EAAwBxiJ,KAAKyiJ,2BAA6BD,GAC5E,EAENxiJ,KAAK0iJ,kBAAqB33I,IACtB/K,KAAK+sF,SAAS,CACVy1D,eAAgBz3I,GAClB,EAEN/K,KAAKiiH,SAAW,KACZ,MAAM14G,EAAQvJ,KAAKkZ,MAAMspI,eAAe9jE,OACpC1+E,KAAK2iJ,sBAAkC,KAAVp5I,GAC7BvJ,KAAKc,MAAMmhH,SAAS14G,GAAO,GAG1BvJ,KAAKc,MAAMonD,aAChB,EAEJloD,KAAK4iJ,YAAc,KACf,MAAM,mBAAEC,EAAkB,wBAAEC,EAAuB,KAAElzD,GAAS5vF,KAAKc,MAC7DiiJ,EAAY,KAAM,KAAQ,CAC5BF,GAAsBC,GAA2B,sCACjDD,IAAuBC,GAA2B,8BACjDD,GAAsBC,GAA2B,gCAEtD,OAAOC,EAAYnzD,EAAKj/D,cAAc,CAAEzxB,GAAI6jJ,IAAe,EAAE,EAEjE,MAAMC,EAAwBhjJ,KAAKyiJ,2BACnCziJ,KAAKkZ,MAAQ,CACTspI,eAAgBQ,EAExB,CACAP,2BACI,OAAOziJ,KAAKc,MAAM8uF,KAAKj/D,cAAc,CAAEzxB,GAAI,qCAAuC,CAC9EqK,MAAOvJ,KAAKc,MAAM0hJ,gBAE1B,CACAG,qBACI,MAAM,kBAAEM,EAAiB,kBAAEC,GAAsBljJ,KAAKc,MACtD,OAAOmiJ,IAAsBC,CACjC,CACAv1C,SACI,MAAQ/d,MAAM,cAAEj/D,GAAe,SAAEokG,EAAW,IAAI,kBAAEmuB,GAAuBljJ,KAAKc,OACxE,eAAE0hJ,GAAmBxiJ,KAAKkZ,MAC1BiqI,EAAWnjJ,KAAK4iJ,cACtB,OAAQ,gBAAoBV,GAAe,CAAEntB,SAAUA,EAAU9S,SAAUjiH,KAAKiiH,SAAU0pB,YAAY,EAAM5iC,UAAW,8BAA+BgU,SAAUpsF,EAAc,CAAEzxB,GAAI,8BAAgC0sI,iBAAkBj7G,EAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkBl7G,EAAc,CAAEzxB,GAAI,qBAAuB4sI,iBAAkBoX,GAA+C,KAA1BV,EAAe9jE,QACtX,gBAAoBi1C,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,kBAAoBp4E,EAAc,CAAEzxB,GAAI,8BACnG,gBAAoB,MAAO,CAAE6pG,UAAW,mBACpC,gBAAoBq6C,GAAAC,EAAO,CAAEptB,WAAW,EAAMqtB,UCpEpB,IDoE2DC,QAASvjJ,KAAKsiJ,iBAAkB9rB,OAAQx2H,KAAKuiJ,gBAAiBx3I,MAAOy3I,EAAgBn/I,YAAarD,KAAKyiJ,2BAA4B54B,SAAU7pH,KAAK0iJ,qBAC3OS,EAAW,gBAAoB3R,GAAA,EAAS,CAAE9rI,KAAM,YAAcy9I,GAAY,KAClF,EAEG,MAAMK,IAA2B,EAAAziB,GAAA,IAAWshB,IACtCoB,GAAwB3iJ,GAAW,gBAAoB4sG,GAAa,CAAEv8E,OAAQrwB,EAAMqwB,QAC7F,gBAAoBqyH,GAA0B9jJ,OAAOiI,OAAO,CAAC,EAAG7G,KEjE7D,SAAS4iJ,KACZ,MAAM,WAAE1zD,EAAU,SAAEG,GAAaR,KAC3BtG,EAAWoB,KACXhqD,GAAoB,IAAAyrD,cAAY,IAAM7C,EAAS5jD,GAAUhF,sBAAsB,CAAC4oD,IAChFs6D,EAAqBj5D,GAAqB6F,IAC1CqzD,GAAgB,IAAA13D,cAAY,KAC9BzrD,IACA0vD,EAAS,+BAAqC,GAC/C,CAAC1vD,EAAmB0vD,IACjB0zD,GAAkB,IAAA33D,cAAY,KAChCzrD,IACAuvD,EAAW,gCAAsC,GAClD,CAACvvD,EAAmBuvD,IAIvB,MAAO,CACHygB,UAAWkzC,EACX5uB,UALmB,IAAA7oC,cAAY,KAC/BzrD,GAAmB,GACpB,CAACA,IAIA49B,QAASulF,EACTrlF,UAAWslF,EAEnB,CAIO,MAAMC,GAAuBhjJ,IAChC,MAAM,SAAEmhH,EAAQ,SAAE8S,EAAQ,QAAE12D,EAAO,UAAEoyC,EAAS,UAAElyC,GAAcz9D,GACxD,OAAEqwB,EAAM,eAAEqxH,EAAc,mBAAEK,EAAkB,wBAAEC,EAAuB,kBAAEI,EAAiB,kBAAED,EAAiB,aAAEc,EAAY,aAAE77F,GCnC5G,CAACpnD,IACtB,IAAIqE,EACJ,MAAM,SAAE88G,EAAQ,gBAAE+hC,EAAe,cAAEC,GAAkBnjJ,EAC/CqwB,EAASu5D,GAAqBz+B,IAC9Bu2F,EAAiB93D,GAAqBxhC,IACtC45F,EAA0Bp4D,GAAqBv9B,IAC/CjtD,EAAewqF,GAAqBt0C,IACpC8sG,EAAoBx4D,GAAqBoR,IACzC5zC,EAAewiC,GAAqBnjC,IACpC28F,EAA0B73D,GAA8B,CAC1DL,eAAgB5zE,GAChBm0E,WAAY,8BACZD,aAAc,0BACdjuB,QAAUvoD,IACNmuI,SAA8DA,EAAcnuI,EAAMlH,QAAQlB,MAAM,EAEpG6wD,UAAYzoD,IACRkuI,SAAkEA,EAAgBluI,EAAMlH,QAAQ5J,UAAU,EAE9GinF,YAActuE,IACVskG,SAAoDA,EAAStkG,EAAI/O,QAAQrF,MAAOoU,EAAI/O,QAAQyJ,aAAa,IAG3G0rI,GAAe,IAAA73D,cAAY,CAAC3iF,EAAO46I,GAAoB,EAAO7rI,GAA2B,KAC3F4rI,EAAwBh6D,IAAI3gF,EAAO46I,EAAmB7rI,EAAyB,GAChF,IACH,MAAO,CACH6Y,SACAqxH,iBACAM,0BACAD,mBAA8D,QAAzC19I,EAAKjF,EAAai8B,yBAAsC,IAAPh3B,GAAgBA,EACtF89I,mBAAmB,EACnBC,oBACAh7F,eACA67F,eACAK,aAAcF,EAAwBz2I,OACzC,EDDkJ42I,CAAU,CAAEpiC,WAAU+hC,gBAAiBzlF,EAAW0lF,cAAe5lF,IACpN,OAAKoyC,EAGG,gBAAoBgzC,GAAsB,CAAEtyH,OAAQA,EAAQqxH,eAAgBA,EAAgBK,mBAAoBA,EAAoBI,kBAAmBA,EAAmBC,kBAAmBA,EAAmBJ,wBAAyBA,EAAyB56F,aAAcA,EAAc+5D,SAAU8hC,EAAchvB,SAAUA,IAF7T,IAEyU,E,kDElCjV,SAASuvB,GAAWnpE,EAAG3gC,EAAG7zB,GAC7B,OAAO,OACF49H,MAAMppE,GACNqpE,QAAQhqG,GACR7zB,OAAOA,GARI,UASpB,CACO,SAAS89H,GAAWtpE,EAAG3gC,GAC1B,MAAMkqG,EAAe,IAAI/8H,KAKzB,OAJA+8H,EAAaC,SAASxpE,GACtBupE,EAAaE,WAAWpqG,GACxBkqG,EAAaG,WAAW,GACxBH,EAAaI,gBAAgB,GACtBJ,CACX,CAQO,SAASK,GAAcz3C,GAC1B,IAAInyB,EACA3gC,EACJ,MAAM+pG,EAAQj3C,EAAKz9E,WASnB,OARIy9E,EAAKx9E,aA9Bc,IA+BnBqrD,EAAIopE,EACJ/pG,EAhCmB,KAmCnB2gC,GAAKopE,EAAQ,GApCO,GAqCpB/pG,EAAI,GAEDiqG,GAAWtpE,EAAG3gC,EACzB,C,4BCzCO,MAAM,GAAuB,aACvBwqG,GAAgC,CACzC,CACIj4C,MAAO,SAEX,CACIA,MAAO,UAGFk4C,GAA0B,KAE1BC,GAAe,CACxBC,OAAQ,SACRC,MAAO,QACPC,QAAS,UACTC,OAAQ,UAECC,GAAqB,CAC9BC,IAAK,MACLC,MAAO,QACPC,KAAM,QAEGC,GAAiB,CAACJ,GAAmBC,IAAKD,GAAmBG,KAAMH,GAAmBE,OACtFG,GAAoB,CAC7BC,aAAc,aACdC,YAAa,aCrBJC,GAAoCrhJ,IAAS,IAAQA,IAA6B,iBAAdA,EAAIshJ,MAIxEC,GAAoCvhJ,IAAS,IAAQA,IAA4B,iBAAbA,EAAIi5B,KCU9E,SAASuoH,GAAQ5+H,GACpB,OAAOA,EAAK4+H,SAChB,CACO,SAASC,GAAW7+H,GACvB,OAAO,KAAOA,EAAM,OACxB,CACO,SAAS8+H,GAAex2D,EAAMy2D,GACjC,OAAO,KAAWz2D,EAAK02D,WAAWD,EAAW,CAAEE,QAAS,SAC5D,CAIO,SAASC,GAAOl/H,GACnB,OAHoB,KADcm/H,EAILn/H,EAAKk/H,UAHV,EAAIC,EADzB,IAA+BA,CAKtC,CACO,SAASC,GAAQp/H,GACpB,OAAOve,KAAKyB,KAAK8c,EAAK4+H,UAAY,EACtC,CC/BO,MAMDS,GAA8B,CAAC,OAAQ,SAAU,UAAW,SAAU,SAEtEC,GAAoB,CAAC,OAAQ,QAAS,OAAQ,MAAO,OAAQ,SAAU,UAE7E,SAASC,GAAcC,EAAWC,GAC9B,IAAK,MAAM5qI,KAAQ4qI,EAEVA,EAAQr7D,eAAevvE,KAI5B2qI,EADcF,GAAkB7qG,QAAQ5/B,IACrB4qI,EAAQ5qI,GAEnC,CAgBO,SAAS6qI,GAAqBC,GACjC,IAAI9hJ,EAAIswB,EACR,MAAM,WAAEyxH,EAAU,gBAAEC,EAAe,aAAEC,EAAY,KAAE95C,GAAS25C,EACtDH,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BO,EAnBV,SAAuBH,EAAYC,GAC/B,OAAID,IAAehC,GAAaI,OACrB4B,EAGPC,EAAgBz7D,eAAe,OACxBw5D,GAAaE,MAGpB+B,EAAgBz7D,eAAe,QACxBw5D,GAAaC,OAEjBD,GAAaG,OACxB,CAMuBiC,CAAcJ,EAAYC,GACvCI,EAAuBZ,GAA4B5qG,QAAQsrG,GAEjE,GAAIA,IAAenC,GAAaG,QAAS,CACrC,MAAMmC,EAAML,EAAgBl/H,OAEU,QAAhC9iB,EAAKgiJ,EAAgBl/H,aAA0B,IAAP9iB,OAAgB,EAASA,EAAGO,QAAUkgJ,GAAkBE,YAGlGe,GAAcC,EAAW,CAAE/+H,IAFfy/H,EAAIC,UAAU1/H,IAEMC,KADnBw/H,EAAIC,UAAUz/H,QAIY,QAAhCyN,EAAK0xH,EAAgBl/H,aAA0B,IAAPwN,OAAgB,EAASA,EAAG/vB,QAAUkgJ,GAAkBC,cAEvGgB,GAAcC,EAAW,CAAE/+H,IADfy/H,EAAIE,YAGxB,MAESL,IAAenC,GAAaC,OAEjC0B,GAAcC,EAAW,CAAE/+H,IADdo/H,EAAgBn/H,KAAK2/H,KACGzjJ,KAvDnB,OA0DEghJ,GAAaE,MAarC,OATA0B,EAAUS,EAAuB,GAAKH,EAEtCP,GAAcC,EAAWx5C,GAEP,CACdw5C,EAAUxjI,MAAM,EAAGikI,GACnBT,EAAUxjI,MAAMikI,EAAsBT,EAAUr8I,SAGnC1L,KAAK6oJ,GAAMA,EAAE1jJ,KAzEJ,OAyE0BA,KA3E5B,IA4E5B,CACO,SAAS2jJ,GAAeC,GAC3BA,EAAWX,gBAAkB,CACzBp/H,KAAK,EAEb,CACO,SAASggI,GAAiBD,EAAYE,EAAiB3B,GAC1D,IAAI4B,EACAD,IAAoBpC,GAAkBC,aACtCoC,EAAsB/B,GAAQG,GAEzB2B,IAAoBpC,GAAkBE,cAC3CmC,EAAsB,CAClBlgI,IAAKy+H,GAAOH,GACZr+H,KAAM0+H,GAAQL,KAGtByB,EAAWX,gBAAkB,CACzBl/H,MAAO,CACHviB,KAAMsiJ,EACN,CAACA,GAAkBC,GAG/B,CACO,SAASC,GAAgBJ,EAAYzB,GACxCyB,EAAWX,gBAAkB,CACzBn/H,KAAM,CACF2/H,KAAM,CAACnB,GAAOH,KAG1B,CAcO,SAAS8B,GAAkBlB,GAC9B,MACMH,EADmBG,EAAOluI,QAzHR,IAEE,KAuH4CnV,MAvH5C,KAwHS7E,KAAK0tC,IACpC,IAA+B,IAA3BA,EAAEsP,QAvHY,KAwHd,MAAM,IAAIx8C,MAAM,6DAEpB,OAAOmoC,SAAS+E,EAAE,IAEhB27G,EAfV,SAAmCtB,GAC/B,MAAMsB,EAAqBtB,EAAUjsI,UAAU,MAC/C,IAA4B,IAAxButI,EACA,MAAM,IAAI7oJ,MAAM,6BAEpB,OAAO6oJ,CACX,CAS+BC,CAA0BvB,GAC/CwB,EAAqBxB,EAAUsB,GACrC,IAAIlB,EAAahC,GAAaI,OAC1B6B,EAAkB,CAAC,EACvB,MAAMoB,EAA4C,IAAvBD,EAoC3B,OA7DgB,IA0BZF,IAC8B,IAA1BtB,EA1BO,IA2BPI,EAAahC,GAAaI,OAC1B6B,EAAkB,CACdl/H,MAAO,CACHviB,KAAMkgJ,GAAkBC,aACxB6B,WAAYZ,EA9Bd,OAmCNI,EAAaqB,EAAqBrD,GAAaI,OAASJ,GAAaG,QACrE8B,EAAkB,CACdl/H,MAAO,CACHviB,KAAMkgJ,GAAkBE,YACxB2B,UAAW,CACP1/H,IAAK++H,EAxCX,GAyCM9+H,KAAM8+H,EA1CX,YAgDXsB,IACAlB,EAAaqB,EAAqBrD,GAAaI,OAASJ,GAAaC,OACrEgC,EAAkB,CACdn/H,KAAM,CACF2/H,KAAM,CAACb,EAAU,OAnDf,IAuDVsB,IACAlB,EAAaqB,EAAqBrD,GAAaI,OAASJ,GAAaE,MACrE+B,EAAkB,CAAEp/H,KAAK,IAEtB,CACHm/H,aACAC,kBACAC,aAAckB,EACdh7C,KAAM,CACFxlF,KAAMg/H,EA/DC,GAgEPj/H,OAAQi/H,EA/DC,GAgET0B,OAAQ1B,EA/DC,IAkErB,CClLO,MAAM2B,GAA8CC,GAAczC,GAAiCyC,GAAaA,EAAU/qH,KAAK0kG,MAAQqmB,EAAU1C,MAC3I2C,GAAmCD,GAAczC,GAAiCyC,GAAaA,EAAU/qH,KAAKqoH,MAAQ0C,EAAU1C,MAChI4C,GAAyCF,IAAczC,UAAiCyC,ICExE/qH,EDFkG+qH,EAAU/qH,MCGrI,QAAUA,EAAM,8CACTA,EAAKkrH,UDJiIH,EAAU1C,MCEpJ,IAAsBroH,CDFmI,EAC1JmrH,GAAkC,SAyBlCC,GAAkD,CAACL,EAAWM,IACzDN,EAAU1C,MACZpiJ,MAAMolJ,GACNjqJ,KAAKkqJ,GAAQA,EAAIvqE,SACjBr4E,QAAQ4iJ,IAAS,IAAQA,KACzBlqJ,KAAKinJ,IAAU,CAAGA,YErCrBkD,IAAkB,IAAIvhI,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGwhI,oBACnDC,IAAe,IAAIzhI,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGwhI,oBA8HhDE,GA7He,CACjB,CAAC,iBAAkB,0CAA2C,KAAM,KACpE,CAAC,oBAAqB,mBAAoB,KAAM,KAChD,CAAC,mBAAoB,oBAAqB,KAAM,KAChD,CAAC,iBAAkB,oBAAqB,KAAM,KAC9C,CAAC,sBAAuB,wCAAyC,KAAM,KACvE,CAAC,kBAAmB,qBAAsB,KAAM,KAChD,CAAC,kBAAmB,qBAAsB,KAAM,KAChD,CAAC,oBAAqB,uBAAwB,KAAM,KACpD,CAAC,mBAAoB,sBAAuB,KAAM,KAClD,CAAC,iBAAkB,yCAA0C,KAAM,KACnE,CAAC,oBAAqB,6BAA8B,KAAM,KAC1D,CAAC,kBAAmB,wCAAyC,KAAM,KACnE,CAAC,sBAAuB,yBAA0B,KAAM,KACxD,CAAC,oBAAqB,uBAAwB,KAAM,KACpD,CAAC,iBAAkB,0BAA2B,KAAM,KACpD,CAAC,iBAAkB,oBAAqB,KAAM,KAC9C,CAAC,mBAAoB,wCAAyC,KAAM,KACpE,CAAC,+BAAgC,4BAA6B,KAAM,KACpE,CAAC,eAAgB,kBAAmB,KAAM,KAC1C,CAAC,kBAAmB,qBAAsB,KAAM,KAChD,CAAC,kBAAmB,oCAAqC,KAAM,KAC/D,CAAC,iBAAkB,wBAAyB,KAAM,KAClD,CAAC,iBAAkB,oBAAqB,KAAM,KAC9C,CAAC,mBAAoB,sBAAuB,KAAM,KAClD,CAAC,mBAAoB,0BAA2B,KAAM,KACtD,CAAC,oBAAqB,sBAAuB,KAAM,KACnD,CAAC,iCAAkC,0BAA2B,KAAM,KACpE,CAAC,kBAAmB,uBAAwB,KAAM,KAClD,CAAC,yBAA0B,0BAA2B,KAAM,KAC5D,CAAC,kBAAmB,oBAAqB,GAAI,GAC7C,CAAC,sBAAuB,4BAA6B,IAAK,IAC1D,CAAC,oBAAqB,uBAAwB,EAAG,GACjD,CAAC,gBAAiB,mBAAoB,EAAG,IACzC,CAAC,gBAAiB,mBAAoB,EAAG,IACzC,CAAC,gBAAiB,mBAAoB,EAAG,IACzC,CAAC,kBAAmB,qBAAsB,EAAG,GAC7C,CAAC,UAAW,gBAAiB,EAAG,GAChC,CAAC,mBAAoB,sBAAuB,GAAI,KAChD,CAAC,kBAAmB,qBAAsB,GAAI,KAC9C,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,oBAAqB,uBAAwB,GAAI,KAClD,CAAC,kBAAmB,qBAAsB,GAAI,KAC9C,CAAC,kBAAmB,qBAAsB,GAAI,KAC9C,CAAC,oBAAqB,uBAAwB,GAAI,KAClD,CAAC,mBAAoB,sBAAuB,GAAI,KAChD,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,eAAgB,kBAAmB,GAAI,KACxC,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,cAAe,iBAAkB,GAAI,KACtC,CAAC,kBAAmB,qBAAsB,GAAI,KAC9C,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,mBAAoB,sBAAuB,GAAI,KAChD,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,iBAAkB,gCAAiC,GAAI,IACxD,CAAC,gBAAiB,mBAAoB,GAAI,KAC1C,CAAC,gBAAiB,mBAAoB,IAAK,KAC3C,CAAC,mBAAoB,sBAAuB,IAAK,KACjD,CAAC,eAAgB,kBAAmB,IAAK,KACzC,CAAC,gBAAiB,mBAAoB,IAAK,KAC3C,CAAC,kBAAmB,qBAAsB,IAAK,KAC/C,CAAC,kBAAmB,qBAAsB,IAAK,KAC/C,CAAC,iBAAkB,sBAAuB,IAAK,KAC/C,CAAC,cAAe,iBAAkB,IAAK,KACvC,CAAC,eAAgB,kBAAmB,IAAK,KACzC,CAAC,sBAAuB,qBAAsB,IAAK,KACnD,CAAC,cAAe,iBAAkB,IAAK,KACvC,CAAC,eAAgB,kBAAmB,IAAK,KACzC,CAAC,iBAAkB,oBAAqB,IAAK,KAC7C,CAAC,iBAAkB,oBAAqB,IAAK,KAC7C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,gBAAiB,mBAAoB,IAAK,KAC3C,CAAC,iBAAkB,oBAAqB,IAAK,KAC7C,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,YAAa,iBAAkB,IAAK,KACrC,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,aAAc,kBAAmB,IAAK,KACvC,CAAC,qBAAsB,yBAA0B,IAAK,KACtD,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,gBAAiB,qBAAsB,IAAK,KAC7C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,eAAgB,gCAAiC,IAAK,KACvD,CAAC,iBAAkB,sBAAuB,IAAK,KAC/C,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,aAAc,kBAAmB,IAAK,KACvC,CAAC,mBAAoB,wBAAyB,IAAK,KACnD,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,mBAAoB,wBAAyB,IAAK,KACnD,CAAC,gBAAiB,oBAAqB,IAAK,KAC5C,CAAC,iBAAkB,sBAAuB,IAAK,KAC/C,CAAC,iBAAkB,sBAAuB,IAAK,KAC/C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,oBAAqB,yBAA0B,IAAK,KACrD,CAAC,kBAAmB,kBAAmB,IAAK,KAC5C,CAAC,iBAAkB,sBAAuB,IAAK,KAC/C,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,mBAAoB,yBAA0B,IAAK,KACpD,CAAC,cAAe,mBAAoB,IAAK,KACzC,CAAC,aAAc,kBAAmB,IAAK,KACvC,CAAC,aAAc,kBAAmB,IAAK,KACvC,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,qBAAsB,qBAAsB,IAAK,KAClD,CAAC,mBAAoB,mBAAoB,IAAK,KAC9C,CAAC,qBAAsB,qBAAsB,IAAK,KAClD,CAAC,eAAgB,iBAAkB,IAAK,KACxC,CAAC,mBAAoB,mBAAoB,IAAK,KAC9C,CAAC,sBAAuB,sBAAuB,IAAK,KACpD,CAAC,uBAAwB,yBAA0B,IAAK,KACxD,CAAC,mBAAoB,mBAAoB,IAAK,KAC9C,CAAC,mBAAoB,wBAAyB,IAAK,KACnD,CAAC,iBAAkB,sBAAuB,IAAK,KAC/C,CAAC,eAAgB,oBAAqB,IAAK,KAC3C,CAAC,iBAAkB,0BAA2B,IAAK,KACnD,CAAC,mBAAoB,qBAAsB,IAAK,KAChD,CAAC,eAAgB,iBAAkB,IAAK,KACxC,CAAC,iBAAkB,yBAA0B,IAAK,KAClD,CAAC,oBAAqB,uBAAwB,IAAK,MAExBtqJ,KAAKuqJ,IAAM,CACtChmJ,WAAYgmJ,EAAE,GACd//I,MAAO+/I,EAAE,GACTC,cAAeD,EAAE,GACjBE,WAAYF,EAAE,OAEZG,GAAsBJ,GAAU9iJ,MAAMmjJ,GAAOA,EAAGH,gBAAkBL,IAAkBQ,EAAGF,aAAeJ,KAC/FO,GAAmBC,GAAwB,WAIjD,SAASA,GAAwBrgJ,GACpC,OAAO8/I,GAAU9iJ,MAAMmjJ,GAAOA,EAAGpmJ,aAAeiG,GACpD,CC5IA,MAAMsgJ,GAGN,yJACO,SAASC,GAAQ/+I,GACpB,OAAO8+I,GAAYt/G,KAAKx/B,EAC5B,CCNA,MAEag/I,GAAe,IAAMjgD,OAAOkgD,YAFZ,ICG7B,MAAMC,WAAiB,gBACnBpqJ,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKkqJ,sBAAwB,KACzB,MAAM,SAAEC,EAAQ,WAAExuB,GAAe37H,KAAKc,MACtC,OAAO,KAAG,iBAAkB,CACxB,YAAaqpJ,EACb,cAAexuB,GACjB,EAEN37H,KAAKw2H,OAAUr/F,IACP4yH,MACA/pJ,KAAK+sF,SAAS,CAAEkkB,KAAM,GAC1B,EAEJjxG,KAAK6pH,SAAYvqH,IACbU,KAAKc,MAAM+oH,SAASvqH,EAAEsgD,OAAO70C,MAAM,EAEvC/K,KAAKujJ,QAAWpsH,IACR4yH,MACA/pJ,KAAK+sF,SAAS,CAAEkkB,KAAMjxG,KAAKc,MAAMmwG,MACrC,EAEJjxG,KAAKoqJ,wBAA0B,IACpB,gBAAoB,OAAQ,CAAErhD,UAAW,gCAAkC,KAEtF/oG,KAAKkZ,MAAQ,CACT+3F,KAAM84C,KAAiB,EAAIjpJ,EAAMmwG,KAEzC,CACAtD,SACI,MAAM,UAAE5E,EAAS,MAAEy8B,EAAK,UAAE8d,EAAS,YAAEjgJ,EAAW,MAAE0H,GAAU/K,KAAKc,OAC3D,KAAEmwG,GAASjxG,KAAKkZ,MAChB2+F,EAAa,KAAG,4CAA4C9O,IAAa,CAC3E,kCAA4C,IAATkI,IAEvC,OAAQ,gBAAoB,MAAO,CAAElI,UAAW8O,GAC5C,gBAAoB,QAAS,CAAE9O,UAAW,YAAcy8B,GACxD,gBAAoB,QAAS,CAAEz8B,UAAW,YACtC,gBAAoB,WAAY,CAAEA,UAAW/oG,KAAKkqJ,wBAAyBrmC,UAAWy/B,EAAWjgJ,YAAaA,EAAa0H,MAAOA,EAAOkmG,KAAMA,EAAMulB,OAAQx2H,KAAKw2H,OAAQ3M,SAAU7pH,KAAK6pH,SAAU05B,QAASvjJ,KAAKujJ,UACxM,IAATtyC,EAAajxG,KAAKoqJ,0BAA4B,MAC1D,EAEJH,GAASx+B,aAAe,CACpB1iB,UAAW,GACXohD,UAAU,EACVxuB,YAAY,GC1ChB,MAWa0uB,GAAyBvpJ,IAClC,MAAM,SAAE+oH,EAAQ,gBAAEm+B,EAAe,UAAE3B,GAAcvlJ,EAC3C8uF,GAAO,EAAAC,GAAA,KACPy6D,GAAuB,IAAAh9I,UAAQ,IAC1B,CAACs4I,GAAkBC,aAAcD,GAAkBE,aAAa/mJ,KAAKG,IACxE,MAAMqrJ,EAfS,CAACrrJ,IACxB,OAAQA,GACJ,KAAK0mJ,GAAkBC,aACnB,OAAO,kDACX,KAAKD,GAAkBE,YACnB,OAAO,iDACX,QACI,MAAM,IAAIvmJ,MAAM,2CACxB,EAOgCirJ,CAAmBtrJ,GAC3C,MAAO,CACHA,KACAqK,MAAOqmF,EAAKj/D,cAAc45H,EAAiB,CACvCjjI,KAAM4+H,GAAQG,GACdt+H,IAAKq+H,GAAex2D,EAAMy2D,GAC1Br+H,KAAM0+H,GAAQL,KAErB,KAEN,CAACz2D,EAAMy2D,IACJoE,EAAsBH,EAAqB/jJ,MAAMV,GAASA,EAAK3G,KAAO8oJ,IAE5E,OADA,QAAUyC,EAAqB,+CACvB,gBAAoBx8B,GAAA,EAAU,CAAEnhB,YAAak4C,GAA+Bj8C,UAAW,0FAA2F2lB,WAAY,EAAGC,gBAAe0U,cAAgB,gBAAoBzU,GAAA,GAAc,CAAE1sG,MA7BzP,IA6BgR5c,MAAOglJ,EAAsBjnB,SAAUA,EAAUvU,WAAY,EAAGjpH,UAAY,gBAAoB,KAAsB,CAAE0D,MAAO1D,EAAK0D,MAAOsnG,QAAS,KACvagZ,EAAShkH,EAAK3G,IACdyvH,GAAe,EAChBx2B,WAAYsyD,EAAoBvrJ,KAAO2G,EAAK3G,OAAYkvH,aAAc,EAAGC,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzjH,MAAO0/I,EAAoBlhJ,MAAOsnG,QAASwd,IAAoBq8B,oBAAqB,eAAgBC,cAAe1F,IAA2B,ECpBzR2F,GAAyB9pJ,IAClC,MAAM,SAAE+oH,EAAQ,gBAAEs9B,EAAe,aAAEC,GAAiBtmJ,EAC9C8uF,GAAO,EAAAC,GAAA,KACPg7D,GAAuB,IAAAv9I,UAAQ,IAC1Bq4I,GAAe5mJ,KAAKG,IACvB,MAAMqrJ,EAjBS,CAACrrJ,IACxB,OAAQA,GACJ,KAAKqmJ,GAAmBC,IACpB,OAAO,6CACX,KAAKD,GAAmBE,MACpB,OAAO,+CACX,KAAKF,GAAmBG,KACpB,OAAO,8CACX,QACI,MAAM,IAAInmJ,MAAM,2CACxB,EAOgC,CAAmBL,GAC3C,MAAO,CACHA,KACAqK,MAAOqmF,EAAKj/D,cAAc45H,EAAiB,CACvC35H,EAAGw2H,IAEV,KAEN,CAACx3D,EAAMw3D,IACJ0D,EAAsBD,EAAqBtkJ,MAAMV,GAASA,EAAK3G,KAAOioJ,IAE5E,OADA,QAAU2D,EAAqB,+CACvB,gBAAoB78B,GAAA,EAAU,CAAEnhB,YAAak4C,GAA+Bj8C,UAAW,wFAAyFqlB,aAAc,EAAGC,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzjH,MAAO+/I,EAAoBvhJ,MAAOsnG,QAASwd,IAAoBK,WAAY,EAAGC,gBAAe0U,cAAgB,gBAAoBzU,GAAA,GAAc,CAAE1sG,MA7BnY,IA6B0Z5c,MAAOulJ,EAAsBxnB,SAAUA,EAAUvU,WAAY,EAAGjpH,UAAY,gBAAoB,KAAsB,CAAE0D,MAAO1D,EAAK0D,MAAOsnG,QAAS,KACjjBgZ,EAAShkH,EAAK3G,IACdyvH,GAAe,EAChBx2B,WAAY2yD,EAAoB5rJ,KAAO2G,EAAK3G,OAAYwrJ,oBAAqB,eAAgBC,cAAe1F,IAA2B,ECrCnJ,MAAM8F,WAA2B,gBACpClrJ,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKgrJ,eAAiB,CAACjgJ,EAAOq8I,IACT,KAAVr8I,GAAgBkgJ,MAAM7D,IAAiBA,GAAgB,EAElEpnJ,KAAKkrJ,mBAAsB9D,IACnBpnJ,KAAKkZ,MAAMkuI,eAAiBA,GAC5BpnJ,KAAK+sF,SAAS,CAAEq6D,iBAAgB,IAAMpnJ,KAAKc,MAAM+oH,SAASu9B,IAC9D,EAEJpnJ,KAAKw2H,OAAUl3H,IACX,MAAM6rJ,EAAe7rJ,EAAEsgD,OAAO70C,MAAM2zE,OAC9B0oE,EAAe1/G,SAASyjH,EAAc,IACxCnrJ,KAAKgrJ,eAAeG,EAAc/D,GAClCpnJ,KAAK+sF,SAAS,CAAEq6D,aAAcpnJ,KAAKc,MAAMsmJ,cAAgB,IAG7DpnJ,KAAKkrJ,mBAAmB9D,EAAa,EAEzCpnJ,KAAK6pH,SAAYvqH,IACb,MAAM6rJ,EAAe7rJ,EAAEsgD,OAAO70C,MAAM2zE,OAC9B0oE,EAAe1/G,SAASyjH,EAAc,IACxCnrJ,KAAKgrJ,eAAeG,EAAc/D,GAClCpnJ,KAAK+sF,SAAS,CAAEq6D,aAAc,KAGlCpnJ,KAAKkrJ,mBAAmB9D,EAAa,EAEzCpnJ,KAAKkZ,MAAQ,CACTkuI,aAActmJ,EAAMsmJ,cAAgB,EAE5C,CACAz5C,SACI,OAAQ,gBAAoB,MAAO,CAAE5E,UAAW,0CAC5C,gBAAoB,QAAS,CAAEA,UAAW,iBAAkBytB,OAAQx2H,KAAKw2H,OAAQ3M,SAAU7pH,KAAK6pH,SAAU9+G,MAAO/K,KAAKkZ,MAAMkuI,eACpI,EC9BJ,MAeagE,GAAoBtqJ,IAC7B,MAAM,SAAE+oH,EAAQ,WAAEq9B,EAAU,UAAEb,GAAcvlJ,EACtC8uF,GAAO,EAAAC,GAAA,KACPw7D,GAAc,IAAA/9I,UAAQ,IACjB,CAAC43I,GAAaE,MAAOF,GAAaC,OAAQD,GAAaG,QAASH,GAAaI,QAAQvmJ,KAAKG,IAC7F,MAAMqrJ,EAnBS,CAACrrJ,IACxB,OAAQA,GACJ,KAAKgmJ,GAAaE,MACd,OAAO,oCACX,KAAKF,GAAaC,OACd,OAAO,qCACX,KAAKD,GAAaG,QACd,OAAO,sCACX,KAAKH,GAAaI,OACd,OAAO,qCACX,QACI,MAAM,IAAI/lJ,MAAM,2CACxB,EAOgC,CAAmBL,GAC3C,MAAO,CACHA,KACAqK,MAAOqmF,EAAKj/D,cAAc45H,EAAiB,CACvCxiI,IAAKq+H,GAAex2D,EAAMy2D,GAC1Br+H,KAAM0+H,GAAQL,KAErB,KAEN,CAACz2D,EAAMy2D,IACJiF,EAAiBD,EAAY9kJ,MAAMV,GAASA,EAAK3G,KAAOgoJ,IAE9D,OADA,QAAUoE,EAAgB,0CAClB,gBAAoBr9B,GAAA,EAAU,CAAEnhB,YAAak4C,GAA+Bj8C,UAAW,8EAA+EqlB,aAAc,EAAGC,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzjH,MAAOugJ,EAAe/hJ,MAAOsnG,QAASwd,IAAoBK,WAAY,EAAGC,gBAAe0U,cAAgB,gBAAoBzU,GAAA,GAAc,CAAE1sG,MAhCpX,IAgC2Y5c,MAAO+lJ,EAAahoB,SAAUA,EAAUvU,WAAY,EAAGjpH,UAAY,gBAAoB,KAAsB,CAAE0D,MAAO1D,EAAK0D,MAAOsnG,QAAS,KACzhBgZ,EAAShkH,EAAK3G,IACdyvH,GAAe,EAChBx2B,WAAYmzD,EAAepsJ,KAAO2G,EAAK3G,OAAYwrJ,oBAAqB,eAAgBC,cAAe1F,IAA2B,ECnCrJ,MAAMsG,WAA2B,gBAC7B1rJ,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAK6pH,SAAW,IAAM7pH,KAAKc,MAAM+oH,SAAS7pH,KAAKkZ,OAC/ClZ,KAAKwrJ,mBAAsBtE,IACnBlnJ,KAAKkZ,MAAMguI,aAAeA,GAC1BlnJ,KAAK+sF,SAAS,CACVi7D,gBAAiBpC,GAAkBC,aACnCsB,gBAAiB5B,GAAmBC,IACpC4B,aAAc,EACdF,cACDlnJ,KAAK6pH,SACZ,EAEJ7pH,KAAKyrJ,qBAAwBrE,IACrBpnJ,KAAKkZ,MAAMkuI,eAAiBA,GAC5BpnJ,KAAK+sF,SAAS,CAAEq6D,gBAAgBpnJ,KAAK6pH,SACzC,EAEJ7pH,KAAK0rJ,wBAA2BvE,IACxBnnJ,KAAKkZ,MAAMiuI,kBAAoBA,GAC/BnnJ,KAAK+sF,SAAS,CAAEo6D,mBAAmBnnJ,KAAK6pH,SAC5C,EAEJ7pH,KAAK2rJ,sBAAwB,KACzB,MAAM,UAAEtF,GAAcrmJ,KAAKc,OACrB,gBAAEknJ,EAAe,gBAAEb,GAAoBnnJ,KAAKkZ,MAClD,OAAIiuI,IAAoB5B,GAAmBE,MAChC,KAEH,gBAAoB4E,GAAuB,CAAErC,gBAAiBA,EAAiB3B,UAAWA,EAAWx8B,SAAU7pH,KAAK4rJ,yBAA2B,EAE3J5rJ,KAAK4rJ,wBAA2B5D,IACxBhoJ,KAAKkZ,MAAM8uI,kBAAoBA,GAC/BhoJ,KAAK+sF,SAAS,CAAEi7D,mBAAmBhoJ,KAAK6pH,SAC5C,EAEJ,MAAM,gBAAEm+B,EAAe,gBAAEb,EAAe,aAAEC,EAAY,WAAEF,GAAepmJ,EACvEd,KAAKkZ,MAAQ,CACT8uI,kBACAb,kBACAC,eACAF,aAER,CACAv5C,SACI,MAAM,MAAE63B,EAAK,UAAE6gB,GAAcrmJ,KAAKc,OAC5B,WAAEomJ,GAAelnJ,KAAKkZ,MAC5B,OAAQ,gBAAoB,MAAO,CAAE6vF,UAAW,sDAC5C,gBAAoB,QAAS,CAAEA,UAAW,YAAcy8B,GACxD,gBAAoB,MAAO,KACvB,gBAAoB4lB,GAAkB,CAAElE,WAAYA,EAAYb,UAAWA,EAAWx8B,SAAU7pH,KAAKwrJ,qBACrGxrJ,KAAK6rJ,sBACjB,CACAA,qBACI,MAAM,KAAEj8D,GAAS5vF,KAAKc,OAChB,gBAAEqmJ,EAAe,aAAEC,EAAY,WAAEF,GAAelnJ,KAAKkZ,MAC3D,OAAIguI,IAAehC,GAAaI,OACrB,KAEH,gBAAoB,MAAO,CAAEv8C,UAAW,0CAC5C,gBAAoB,OAAQ,CAAEA,UAAW,yCAA2CnZ,EAAKj/D,cAAc,CACnGzxB,GAAI,0CAER,gBAAoB6rJ,GAAoB,CAAE3D,aAAcA,EAAcv9B,SAAU7pH,KAAKyrJ,uBACrF,gBAAoBb,GAAuB,CAAEzD,gBAAiBA,EAAiBC,aAAcA,EAAcv9B,SAAU7pH,KAAK0rJ,0BAC1H,gBAAoB,MAAO,CAAE3iD,UAAW,kBACxC/oG,KAAK2rJ,wBACb,EAEG,MAAMG,IAAe,EAAA/qB,GAAA,IAAWwqB,IC3E1B,GAASzqJ,IAClB,MAAM,UAAEioG,EAAY,GAAE,MAAEy8B,EAAK,UAAE8d,EAAS,YAAEjgJ,EAAW,MAAE0H,EAAK,SAAE8+G,GAAa/oH,EACrE+2G,EAAa,sBAAsB9O,IACzC,OAAQ,gBAAoB,MAAO,CAAEA,UAAW8O,GAC5C,gBAAoB,QAAS,CAAE9O,UAAW,YAAcy8B,GACxD,gBAAoB4d,GAAAC,EAAU,CAAE8G,UAAU,EAAO7G,UAAWA,EAAWjgJ,YAAaA,EAAa0H,MAAOA,EAAO8+G,SAG3GA,IAAa,E,oSCezB,MACMkiC,GAAmB,CACrB,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,UAAW,KACX,QAAS,MAEb,SAASzF,GAAWh/H,EAAMC,GACtB,OAAO,KAAOD,EAAMC,EACxB,CA2BA,SAASykI,GAAiBv/F,GACtB,OAAQA,GACJ,IAAK,SACD,OAAO,EACX,IAAK,SACD,OAAO,EACX,QACI,MAAM,IAAIltD,MAAM,sBAAsBktD,KAElD,CACA,MAAMw/F,WAA0B,gBAC5BpsJ,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKksJ,uBAAyB,cAC9BlsJ,KAAKmsJ,SAAW,cAChBnsJ,KAAKosJ,cAAgB,MAAS,IAAMpsJ,KAAKqsJ,mBAAmB,KAC5D,MAAM,YAAEv/C,EAAW,KAAExlF,EAAI,WAAEC,GAAezmB,EAC1Cd,KAAKkZ,MAAQ,CACT6zF,MAAOD,EAAY,GAAGC,MACtBu/C,aAAchlI,EACdilI,UAAWjlI,EACXklI,WAAYlG,GAAWh/H,GAAQ,IAAIK,KAAQJ,GAC3C27E,QAAQ,GAEZljG,KAAKysJ,iBAAmBzsJ,KAAKysJ,iBAAiBtuG,KAAKn+C,MACnDA,KAAK0sJ,mBAAqB1sJ,KAAK0sJ,mBAAmBvuG,KAAKn+C,MACvDA,KAAK2sJ,mBAAqB3sJ,KAAK2sJ,mBAAmBxuG,KAAKn+C,MACvDA,KAAKqsJ,gBAAkBrsJ,KAAKqsJ,gBAAgBluG,KAAKn+C,MACjDA,KAAK4sJ,gBAAkB5sJ,KAAK4sJ,gBAAgBzuG,KAAKn+C,MACjDA,KAAK6sJ,mBAAqB7sJ,KAAK6sJ,mBAAmB1uG,KAAKn+C,MACvDA,KAAK8sJ,mBAAqB9sJ,KAAK8sJ,mBAAmB3uG,KAAKn+C,MACvDA,KAAK00H,UAAY10H,KAAK00H,UAAUv2E,KAAKn+C,KACzC,CACA4qH,oBACI,MAAM,KAAEtjG,EAAI,WAAEC,GAAevnB,KAAKc,MAClCd,KAAK+sF,SAAS,CAAEu/D,aAActsJ,KAAK+sJ,WAAWzlI,GAAQ,IAAIK,QAC1D3nB,KAAK+sF,SAAS,CAAEy/D,WAAYlG,GAAWh/H,GAAQ,IAAIK,KAAQJ,KAC3DuiF,OAAOyrB,iBAAiB,SAAUv1H,KAAKosJ,eACvCxiD,SAAS2rB,iBAAiB,YAAav1H,KAAK8sJ,mBAChD,CACAhiC,iCAAiCC,GAC7B,MAAM,MAAEjqH,GAAUd,KAClB,GAAIc,EAAMwmB,KAAOyjG,EAAUzjG,MAAQxmB,EAAMwmB,KAAOyjG,EAAUzjG,KAAM,CAC5D,MAAMglI,EAAetsJ,KAAK+sJ,WAAWhiC,EAAUzjG,MAC/CtnB,KAAK+sF,SAAS,CAAEu/D,iBAChBtsJ,KAAK+sF,SAAS,CAAEw/D,UAAWD,IAC3BtsJ,KAAK+sF,SAAS,CAAEy/D,WAAYlG,GAAWgG,EAAcxrJ,EAAMymB,aAC/D,CACJ,CACA4uG,uBACIrsB,OAAOssB,oBAAoB,SAAUp2H,KAAKosJ,eAC1CxiD,SAASwsB,oBAAoB,YAAap2H,KAAK8sJ,mBACnD,CACAA,mBAAmBh3I,GACX9V,KAAKksJ,uBAAuBj+I,UAC3BjO,KAAKksJ,uBAAuBj+I,QAAQqoH,SAASxgH,EAAM8pC,SACpD5/C,KAAKmsJ,WACJnsJ,KAAKmsJ,SAASl+I,QAAQqoH,SAASxgH,EAAM8pC,SACtC5/C,KAAK+sF,SAAS,CAAEmW,QAAQ,GAEhC,CACA8nB,mBAAmBgiC,EAAYj1B,GACvB/3H,KAAKkZ,MAAMgqF,SAAW60B,EAAU70B,QAChCljG,KAAKqsJ,iBAEb,CACAO,gBAAgBrpJ,GACZvD,KAAKitJ,QAAU1pJ,CACnB,CACA2pJ,kBACI,OAAO,KAAW,aAAc,WAAYltJ,KAAKc,MAAMuE,KAAM,wBAAuB,WACxF,CACA8nJ,sBACI,OAAO,KAAW,gBAAiBntJ,KAAKc,MAAMioG,UAAW/oG,KAAKc,MAAMuE,KAAM,sBAAuBrF,KAAKkZ,MAAMgqF,OAAS,wBAA0B,GACnJ,CACAkqD,2BACI,MAAOC,EAAkBC,GAAqBttJ,KAAKkZ,MAAM6zF,MAAMnpG,MAAM,KACrE,OAAO,KAAW,uBAAwB,+BAAgC,gCAAgCypJ,OAAuB,mCAAmCC,IACxK,CACAP,WAAWzlI,GACP,OAAOtnB,KAAKutJ,cAAcjmI,EAC9B,CACAqlI,mBAAmBrtJ,GACf,MAAM,MAAEyL,GAAUzL,EAAEsgD,OACd4tG,EA3Gd,SAAmBhG,EAAKjgI,GACpB,IACI,MAAMimI,EAAa,KAAMhG,EAAKjgI,EAAY,IAAII,MAU9C,OAAI,KAAQ6lI,IACRA,EAAWC,eAAiB,KAC5BjG,IAAQlB,GAAWkH,EAAYjmI,GACxBimI,OAEX,CACJ,CACA,MAAOroJ,GACH,MACJ,CACJ,CAqF2BuoJ,CAAU3iJ,EAAO/K,KAAKc,MAAMymB,YAE/C,GADAvnB,KAAK+sF,SAAS,CAAEy/D,WAAYzhJ,IACxByiJ,EACAxtJ,KAAK+sF,SAAS,CACVu/D,aAAckB,EACdjB,UAAWiB,IACZ,KACCxtJ,KAAKc,MAAM+oH,SAAS7pH,KAAKkZ,MAAMozI,aAAa,QAG/C,CACD,GAAItsJ,KAAKc,MAAM6sJ,oBAKX,YAJA3tJ,KAAK+sF,SAAS,CACVu/D,aAActsJ,KAAKkZ,MAAMozI,aACzBC,UAAWvsJ,KAAKkZ,MAAMozI,eAI9BtsJ,KAAK+sF,SAAS,CACVu/D,kBAAcvnJ,EACdwnJ,eAAWxnJ,IACZ,KACC/E,KAAKc,MAAM+oH,SAAS,KAAK,GAEjC,CACJ,CACA4iC,iBAAiBmB,GACRA,EAID,KAAU5tJ,KAAKkZ,MAAMozI,aAAcsB,GACnC5tJ,KAAK+sF,SAAS,CAAEmW,QAAQ,KAG5BljG,KAAKmsJ,SAASl+I,QAAQ0nH,QACtB31H,KAAK+sF,SAAS,CACVu/D,aAAcsB,EACdrB,UAAWqB,EACXpB,WAAYlG,GAAWsH,EAAmB5tJ,KAAKc,MAAMymB,YACrD27E,QAAQ,IACT,KACCljG,KAAKc,MAAM+oH,SAAS+jC,EAAkB,KAdtC5tJ,KAAK+sF,SAAS,CAAEmW,QAAQ,GAgBhC,CACAwpD,mBAAmBzkI,GACfjoB,KAAKmsJ,SAASl+I,QAAQ0nH,QACtB31H,KAAK+sF,SAAS,CAAEw/D,UAAWtkI,GAC/B,CACAslI,cAAcjmI,GACV,OAAO,IAAIK,KAAKL,EAAKmmI,cAAenmI,EAAKumI,WAAYvmI,EAAK4+H,UAC9D,CACAmG,kBACI,MAAM,YAAEv/C,GAAgB9sG,KAAKc,MACvBymH,EAAYvnH,KAAKksJ,uBAAuBj+I,QAAQ6/I,cACtD,IAAKhhD,IAAgBya,EACjB,OACJ,MAAMwmC,GAAmB,SAAoB,CACzCC,cAAc,SAAchuJ,KAAKitJ,SACjCgB,YAAY,SAAc1mC,GAC1Bza,iBAEE,MAAEC,GAAUghD,EAAiBG,UACnCluJ,KAAK+sF,SAAS,CACVggB,UACD,KACC/sG,KAAKc,MAAMqtJ,QAAQphD,EAAM,GAEjC,CACA2nB,UAAUp1H,GACQ,WAAVA,EAAE0H,KAA8B,QAAV1H,EAAE0H,KACxBhH,KAAK+sF,SAAS,CAAEmW,QAAQ,GAEhC,CACA2pD,mBAAmBvtJ,GACf,MAAM,UAAE8uJ,GAAc9uJ,EAAEsgD,OAKpBtgD,EAAEsgD,QAAUwuG,GAAaA,EAAU93B,SA9MP,oBA+M5Bh3H,EAAEyvH,gBAEV,CACAphB,SACI,MAAM,WAAE6+C,EAAU,aAAEF,EAAY,UAAEC,EAAS,OAAErpD,GAAWljG,KAAKkZ,OACvD,YAAE7V,EAAW,KAAEusF,EAAI,SAAEghB,GAAa5wG,KAAKc,MACvCutJ,EAAkB,CACpBv4B,KAAM91H,KAAKotJ,4BAEf,OAAQ,gBAAoB,MAAO,CAAEr2C,KAAM,aAAchO,UAAW/oG,KAAKmtJ,sBAAuB5pJ,IAAKvD,KAAK4sJ,gBAAiB/7C,QAAS7wG,KAAK6sJ,oBACrI,gBAAoB,QAAS,CAAEn4B,UAAW10H,KAAK00H,UAAW9jB,SAAUA,EAAUC,QAAS,IAAM7wG,KAAK+sF,SAAS,CAAEmW,QAAQ,IAASqgD,QAAS,IAAMvjJ,KAAK+sF,SAAS,CAAEmW,QAAQ,IAAS3/F,IAAKvD,KAAKmsJ,SAAUphJ,MAAOyhJ,EAAYzjD,UAAW/oG,KAAKktJ,kBAAmB7pJ,YAAaA,EAAawmH,SAAU7pH,KAAK2sJ,qBACjSzpD,EAAU,gBAAoB,MAAO,CAAE6T,KAAM,oBAAqBxzG,IAAKvD,KAAKksJ,wBACxE,gBAAoB,MAAW,CAAEr0C,WAAYw2C,EAAiBl9H,QA3MvDA,EA2M6Ey+D,EAAKz+D,OA1M9F46H,GAAiB56H,IA0MsFm9H,iBAAiB,EAAMnmG,KAAM,SAAU0tD,SAAU71G,KAAKysJ,iBAAkB7f,SAAU0f,EAAcrkI,MAAOskI,EAAWgC,cAAevuJ,KAAK0sJ,mBAAoB8B,aAAcxC,GAAiBhsJ,KAAKc,MAAM2rD,cAAkB,KAC5T,gBAAoB,OAAQ,CAAEs8C,UAAW,yCA5MrD,IAAuB53E,CA6MnB,EAEJ86H,GAAkBxgC,aAAe,CAC7B1iB,UAAW,GACXzhF,KAAM,IAAIK,KACVtkB,YAAa,GACbwmH,SAAU,IACV8jC,qBAAqB,EACrBtoJ,KAAM,GACNurG,SAAU,EACV9D,YAAa,CAAC,CAAEC,MAAO,SAAW,CAAEA,MAAO,SAAW,CAAEA,MAAO,SAAW,CAAEA,MAAO,UACnFohD,QAAS,IACT5mI,WCjQ+B,aDkQ/BklC,UAAW,UAGf,MAAMgiG,IAAqB,EAAA1tB,GAAA,IAAWkrB,IAI/B,MAAMyC,WAAmB,gBAC5B/gD,SACI,OAAQ,gBAAoB,KAAa,CAAEx8E,OAAQnxB,KAAKc,MAAMqwB,QAC1D,gBAAoBs9H,GAAoB/uJ,OAAOiI,OAAO,CAAC,EAAG3H,KAAKc,QACvE,EEjQJ,MAAM6tJ,WAA0B,gBAC5B9uJ,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAK4uJ,YAAc,cACnB5uJ,KAAK6uJ,aAAgBnK,IACjB,IAAIoK,EACJ,MAAMxpJ,EAAQ,IACN61E,EAAGopE,EAAO/pG,EAAGgqG,GAAYE,EACjC,IAAK,IAAIvpE,EAAI,EAAGA,EnBpBA,GmBoBkBA,GAAK,EACnC,IAAK,IAAI3gC,EAAI,EAAGA,EAZR,GAY6BA,GnBpB1B,GmBoB4C,CACnD,MAAM30C,EAAO,CACTs1E,IACA3gC,IACAjxC,MAAO+6I,GAAWnpE,EAAG3gC,IAEzBl1C,EAAMf,KAAKsB,GACPs1E,IAAMopE,GAAS/pG,IAAMgqG,IACrBsK,EAAcjpJ,EAEtB,CAEJ,MAAO,CAAEP,QAAOwpJ,cAAa,EAEjC9uJ,KAAK+uJ,oBAAsB,KACvB,MAAM,MAAE7sI,GAAUliB,KAAK4uJ,YAAY3gJ,QAAQ87G,wBAC3C/pH,KAAK+sF,SAAS,CAAEiiE,cAAe9sI,GAAQ,EAE3CliB,KAAKivJ,kBAAqBC,IACtB,IAAKA,EACD,OAEJ,MAAM,EAAE/zE,EAAC,EAAE3gC,GAAM00G,EACXxK,EAAeD,GAAWtpE,EAAG3gC,GACnCx6C,KAAK+sF,SAAS,CAAE23D,iBAAgB,IAAM1kJ,KAAKc,MAAM+oH,SAAS66B,IAAc,EAE5E1kJ,KAAKmvJ,wBACL,MAAM7hD,EAAOxsG,EAAMwsG,MAAQ,IAAI3lF,KAC/B3nB,KAAKkZ,MAAQ,CACT81I,cA1CU,IA2CVtK,aAAc5jJ,EAAMsuJ,kBAAoB9hD,EAAOy3C,GAAcz3C,GAErE,CACAwd,iCAAiCoL,GAC7B,GAAIA,EAAS5oB,OAASttG,KAAKc,MAAMwsG,KAAM,CACnC,MAAM+hD,EAAcn5B,EAAS5oB,MAAQ,IAAI3lF,KACzC3nB,KAAK+sF,SAAS,CACV23D,aAAc1kJ,KAAKc,MAAMsuJ,kBAAoBC,EAActK,GAAcsK,IAEjF,CACJ,CACAzkC,oBACI5qH,KAAK+uJ,qBACT,CACA5B,sBACI,MAAO,iBAAiBntJ,KAAKc,MAAMioG,6CACvC,CACAomD,wBACI,YAAchiD,GAAA,EAAyCntG,KAAKc,MAAM8uF,KAAKz+D,QAC3E,CACAw8E,SACI,MAAM,oBAAE+8C,EAAmB,qBAAE4E,EAAoB,cAAE3E,GAAkB3qJ,KAAKc,OACpE,cAAEkuJ,EAAa,aAAEtK,GAAiB1kJ,KAAKkZ,MACvCo0F,EAAO,CACTnyB,EAAGupE,EAAa70H,WAChB2qB,EAAGkqG,EAAa50H,eAEd,MAAExqB,EAAK,YAAEwpJ,GAAgB9uJ,KAAK6uJ,aAAavhD,GACjD,OAAQ,gBAAoB,MAAO,CAAEvE,UAAW/oG,KAAKmtJ,sBAAuB5pJ,IAAKvD,KAAK4uJ,aAClF,gBAAoB3gC,GAAA,EAAU,CAAEy8B,oBAAqBA,EAAqB59C,YAAa,CAC/E,CACIC,MAAO,SAEX,CACIA,MAAO,UAEZqhB,aAAc,EAAG8J,eAAch1B,YAAc,gBAAoBsrB,GAAA,EAAgB,CAAEzjH,MAAOu5I,GAAWh3C,EAAKnyB,EAAGmyB,EAAK9yD,GAAI0oD,OAAQA,EAAQ2N,QAASqnB,EAAc+E,SAAU,kBAAqBvO,WAAY,EAAGC,gBAAe0U,cAAgB,gBAAoBzU,GAAA,GAAc,CAAEyU,SAAUA,EAAUnhH,MAAO8sI,EAAe1pJ,MAAOA,EAAOwpH,WAAY,EAAGjpH,UAAY,gBAAoB,KAAsB,CAAE0D,MAAO1D,EAAK0D,MAAO4uF,WAAYtyF,IAASipJ,EAAaj+C,QAAS,KAClc7wG,KAAKivJ,kBAAkBppJ,GACvB8oH,GAAe,IACZ2gC,qBAAsBA,IAA0B3E,cAAeA,IAC1F,EAEJgE,GAAkBljC,aAAe,CAC7B1iB,UAAW,GACXumD,qBArF4B,GAsF5BhiD,KAAM,IAAI3lF,KACVkiG,SAAU,IACV8gC,cAAe,EACfyE,mBAAmB,GAGvB,MAAMG,IAAqB,EAAAxuB,GAAA,IAAW4tB,IAI/B,MAAMa,WAAmB,gBAC5B7hD,SACI,OAAQ,gBAAoB,KAAa,CAAEx8E,OAAQnxB,KAAKc,MAAMqwB,QAC1D,gBAAoBo+H,GAAoB7vJ,OAAOiI,OAAO,CAAC,EAAG3H,KAAKc,QACvE,EC3GG,MAAM2uJ,WAAiB,gBAC1B5vJ,cACIitC,SAASC,WACT/sC,KAAK0vJ,WAAchL,IACf1kJ,KAAKc,MAAM6uJ,aAAa,CACpB7nI,KAAM48H,EAAa70H,WACnBhI,OAAQ68H,EAAa50H,aACrB04H,OAAQ9D,EAAakL,cACvB,CAEV,CACAjiD,SACI,MAAM,KAAErmF,EAAI,WAAEC,EAAU,MAAEi+G,EAAK,OAAEr0G,EAAM,SAAE0+H,EAAQ,aAAEC,EAAY,UAAErjG,GAAczsD,KAAKc,MACpF,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,4FAC5C,gBAAoB,QAAS,CAAEA,UAAW,YAAcy8B,GACxD,gBAAoB,MAAO,KACvB,gBAAoBkpB,GAAY,CAAEpnI,KAAMA,EAAMC,WAAYA,EAAY4J,OAAQA,EAAQ9tB,YAAakkB,EAAYomI,qBAAqB,EAAM9jC,SAAUimC,EAAcrjG,UAAWA,IAC7K,gBAAoB+iG,GAAY,CAAEzmD,UAAW,yCAA0CumD,qBAlBvE,EAkBsHF,mBAAmB,EAAM9hD,KAAMhmF,EAAMuiG,SAAU7pH,KAAK0vJ,WAAYhF,oBAAqB,eAAgBC,cAAe1F,KAC1P,gBAAoB,OAAQ,CAAEl8C,UAAW,2FAA6F8mD,IAClJ,ECvBJ,MAAME,GAAmB,CACrB,gBAAiBvjD,GAAA,cACjB,cAAeA,GAAA,QACf,iBAAkBA,GAAA,gBAClB,gBAAiBA,GAAA,UACjB,eAAgBA,GAAA,QAChB,gBAAiBA,GAAA,UACjB,eAAgBA,GAAA,SAChB,eAAgBA,GAAA,SAChB,YAAaA,GAAA,MACb,cAAeA,GAAA,QACf,aAAcA,GAAA,cACd,eAAgBA,GAAA,SAChB,aAAcA,GAAA,OACd,gBAAiBA,GAAA,MACjB,YAAaA,GAAA,MACb,eAAgBA,GAAA,SAChB,wBAAyBA,GAAA,kBACzB,eAAgBA,GAAA,SAChB,gBAAiBA,GAAA,UACjB,kBAAmBA,GAAA,aAKVwjD,GAAc,EAAG7sE,mBAAkB8sE,YAAY,CAAC,KACpD9sE,GAAqB4sE,GAAiB5sE,GAGpC4sE,GAAiB5sE,GAAkB8sE,GAF/B,KCtBTC,GAAe,CACjB,CAAEnjD,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,IACrC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KAE5BmjD,GAAoBrvJ,IAC7B,MAAM,MAAEyI,EAAK,cAAE6mJ,EAAa,QAAEC,EAAO,SAAEt7B,EAAQ,cAAEu7B,EAAa,iBAAEC,EAAgB,gBAAEjiC,EAAe,cAAEkiC,EAAa,eAAEC,GAAoB3vJ,EAChI8uF,GAAO,EAAAC,GAAA,KA4Bb,OAAQ,gBAAoBo+B,GAAA,EAAU,CAAEy8B,oBAAqB,eAAgB59C,YAAak4C,GAA+B2F,cAAe1F,GAAyB92B,sBAAuB,CAAC,mCAAoCC,aAAc,EAAGC,oBAAsB,gBAAoB/hB,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GAC/T,gBAAoB,IAAK,CAAEriB,UAAW,KAAG,8BAA+BulB,EAAiB,CACjF,yCAA0CmiC,IAC1C7wG,OAAQ,SAAUwqF,IAAK,sBAAuBv5B,QAAS,MACtD4/C,GAAkBpiC,GAAgB,GAEvCiiC,EAAiB,gBAAoB,MAAO,CAAEvnD,UAAW,oCAAsCunD,GAAkB,KACjH/mJ,GACJknJ,EAAkB,gBAAoB5jD,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAaojD,IACtF,gBAAoB,KAAkB,CAAEhxJ,GAAI,+DAAmE,MAAQwvH,WAAY,EAAGC,mBApC/H,CAACA,GACR,gBAAoB,MAAO,CAAE5lB,UAAW,uBAC5C,gBAAoB,MAAO,CAAEA,UAAW,KAAG,4BAA6BynD,IAMpE,gBAAoB,MAAO,CAAEznD,UAAW,+BAC5C,gBAAoB,OAAQ,KAAMx/F,IAG/B,gBAAoB,MAAO,CAAEw/F,UAAW,gCAAkCwnD,GAE5D,CAAC5hC,IACtB,MAAM+hC,EAAa9gE,EAAKj/D,cAAc,CAAEzxB,GAAI,mBACtCyxJ,EAAY/gE,EAAKj/D,cAAc,CAAEzxB,GAAI,kBAC3C,OAAQ,gBAAoB,MAAO,CAAE6pG,UAAW,+BAC5C,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,sCAAuCh+F,MAAO2lJ,EAAY7/C,QAAS,KACpGkkB,SAAoDA,IACpDpG,GAAe,IAEvB,gBAAoBmO,GAAA,EAAQ,CAAE/zB,UAAW,mCAAoCia,SAAUotC,EAAerlJ,MAAO4lJ,EAAW9/C,QAAS,KACzHw/C,SAAkDA,IAClD1hC,GAAe,IACb,EApBNiiC,CAAiBjiC,KA+ByID,CAAWC,IAAkB,ECxC1LkiC,GAAgC/vJ,IACzC,IAAIqE,EAAIswB,EACR,MAAM,eAAE+sH,EAAc,eAAEsO,EAAiB,GAAE,QAAET,GAAYvvJ,EACnD8uF,GAAO,EAAAC,GAAA,KACPsc,GAAQ,WACR4kD,EAAiJ,QAAnIt7H,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGu7H,GAErLC,EAAa,CAAExkD,MAAOskD,EAAY5uI,OAAQ,GAAID,MAAO,KACpDgvI,EAAmBC,IAAwB,IAAArmE,UAAShqF,EAAMowJ,oBAC1DE,EAAiBC,IAAsB,IAAAvmE,UAAShqF,EAAMswJ,iBACvDE,GAA6B,IAAAplE,cAAajtE,IAC5C,MAAMsyI,GAAe,EAAApmJ,EAAA,IAAe8T,GACpCoyI,EAAmB3xJ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGypJ,GAAkB,CAAE,CAACG,IAAgBH,EAAgBG,KAAiB,GAC1H,CAACH,IACEI,GAAgB,IAAAtlE,cAAY,KAC9BmkE,EAAQa,EAAmBE,EAAgB,GAC5C,CAACf,EAASa,EAAmBE,IAC1BK,GAAiB,IAAAvlE,cAAY,KAC/BilE,EAAqBrwJ,EAAMowJ,mBAC3BG,EAAmBvwJ,EAAMswJ,gBAAgB,GAC1C,CAACtwJ,EAAMowJ,kBAAmBpwJ,EAAMswJ,kBAC7BM,GAAYR,GAAqBxxJ,OAAO4H,OAAO8pJ,GAAiBt+H,KAAK,SACtEo+H,GAAqBpwJ,EAAMowJ,mBACxBl0I,KAAKE,UAAUk0I,KAAqBp0I,KAAKE,UAAUpc,EAAMswJ,kBACjE,OAAQ,gBAAoBjB,GAAkB,CAAE5mJ,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,6CAA+CkxJ,eAAgBsB,EAAUrB,QAASmB,EAAez8B,SAAU08B,EAAgBnjC,gBAAiB,uCAAwCkiC,cAAe,qCAAsCC,eAA0C,IAA1BK,EAAermJ,OAAc6lJ,cAAe,gBAAoB9jD,GAAA,iBAAqB,CAAEC,MAAOskD,EAAY7uI,MAlB1Z,GAkBmbC,OAlBnb,KAkBgdouI,iBAAkB,gBAAoB,MAAO,CAAExnD,UAAW,qCAC3hB,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,+DAChD,gBAAoB,MAAO,KACvB,gBAAoB,QAAS,CAAE6pG,UAAW,8DACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,iBAAkB4gB,QAASunC,EAAmBrnC,SAAW/zG,GAAUq7I,EAAqBr7I,EAAM8pC,OAAO+pE,WACjK,gBAAoBnd,GAAA,YAAgB9sG,OAAOiI,OAAO,CAAC,EAAGspJ,IACtD,gBAAoB,OAAQ,CAAE1nJ,MAAOi5I,EAAgBz5C,UAAW,oBAAsBy5C,KAC9F,gBAAoB7uB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,6DAChD4xJ,EAAe/xJ,KAAKmG,GAAY,gBAAoB,MAAO,CAAE8B,KAAK,EAAAmE,EAAA,IAAejG,IAC7E,gBAAoB,QAAS,CAAE6jG,UAAW,2DACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,iBAAkB4gB,QAASynC,GAAgB,EAAAjmJ,EAAA,IAAejG,IAAU2kH,SAAU,IAAMynC,EAA2BpsJ,KAC3K,gBAAoB8qJ,GAAa,CAAE7sE,iBAAkBj+E,EAAOi+E,iBAAkB8sE,UAAWgB,IACzF,gBAAoB,OAAQ,CAAE1nJ,MAAOrE,EAAOqE,MAAOw/F,UAAW,oBAAsB7jG,EAAOqE,aAAe,ECrCjHooJ,GAAyB7wJ,IAClC,IAAIqE,EAAIswB,EACR,MAAM,QAAE46H,GAAYvvJ,EACd8uF,GAAO,EAAAC,GAAA,KACPsc,GAAQ,WACRylD,EAAgB,CAAC,MAAO,SACvBjrI,EAAQkrI,IAAa,IAAA/mE,UAAShqF,EAAM6lB,SACpCytD,EAAc09E,IAAmB,IAAAhnE,UAAShqF,EAAMszE,eAChD29E,EAAgBC,IAAqB,IAAAlnE,UAAShqF,EAAMixJ,gBACrDL,EAAW/qI,IAAW7lB,EAAM6lB,QAC9BytD,IAAiBtzE,EAAMszE,cACvB29E,IAAmBjxJ,EAAMixJ,eACvBP,GAAgB,IAAAtlE,cAAY,IAAMmkE,EAAQ,CAC5C1pI,SACAytD,eACA29E,oBACA,CAACprI,EAAQytD,EAAc29E,EAAgB1B,IACrCoB,GAAiB,IAAAvlE,cAAY,KAC/B2lE,EAAU/wJ,EAAM6lB,QAChBmrI,EAAgBhxJ,EAAMszE,cACtB49E,EAAkBlxJ,EAAMixJ,eAAe,GACxC,CAACjxJ,EAAM6lB,OAAQ7lB,EAAMszE,aAActzE,EAAMixJ,iBA0B5C,OAAQ,gBAAoB5B,GAAkB,CAAE5mJ,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,0CAA4CkxJ,eAAgBsB,EAAUrB,QAASmB,EAAez8B,SAAU08B,EAAgBnjC,gBAAiB,mCAAoCkiC,cAAe,iCAAkCF,cAAe,gBAAoB9jD,GAAA,eAAmB,CAAEC,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGm3E,GAAI1qF,MAjDpgB,GAiD6hBC,OAjD7hB,KAiD0jBouI,iBAAkB,gBAAoB,MAAO,CAAExnD,UAAW,8BAxB7nB,gBAAoB,MAAO,CAAEA,UAAW,uCAC5C,gBAAoB,OAAQ,CAAEA,UAAW,oBACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,2CAChD,gBAAoB,MAAO,KACvB,gBAAoB+uH,GAAA,EAAU,CAAEy8B,oBAAqB,eAAgB3hD,UAAW,4BAA6B+D,YAAak4C,GAA+B2F,cAAe1F,GAAyB72B,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzlB,UAAW,0CAA2Ch+F,MAAO4b,EAAOsrI,cAAe/uD,OAAQA,EAAQ2N,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE1sG,MA5Bvd,GA4B8e5c,MAAOssJ,EAAe9iC,WAAY,EAAGjpH,UACtgB,gBAAoB,KAAsB,CAAEkjG,UAAW,mEAAoEx/F,MAAO1D,EAAKosJ,cAAephD,QAAS,KAC/JghD,EAAUhsJ,GACV8oH,GAAe,UAmB5B,SAAXhoG,GAdI,gBAAoB,MAAO,CAAEoiF,UAAW,mCAC5C,gBAAoB,MAAO,KACvB,gBAAoB,QAAS,CAAEA,UAAW,wBACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,6CAA8C4gB,QAASv1C,EAAcy1C,SAAW/zG,GAAUg8I,EAAgBh8I,EAAM8pC,OAAO+pE,WACnL,gBAAoB,OAAQ,CAAE5gB,UAAW,oBACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,+CACxD,gBAAoB,MAAO,KACvB,gBAAoB,QAAS,CAAE6pG,UAAW,sDACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,iBAAkB4gB,QAASooC,EAAgBloC,SAAW/zG,GAAUk8I,EAAkBl8I,EAAM8pC,OAAO+pE,WAC3J,gBAAoB,OAAQ,CAAE5gB,UAAW,oBACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,8CAII,ECpDlEgzJ,GAAiB,EAAGvrI,SAAQtZ,cAAgB,gBAAoB,MAAO,CAAE,aAAc,uBAAwB07F,UAAW,qDAC5H,gBAAoB,OAAQ,CAAEA,UAAW,kCAAoCpiF,GAC7E,gBAAoB,OAAQ,CAAEoiF,UAAW,gCAAkC17F,IAClE8kJ,GAAerxJ,IACxB,MAAM,eAAE0hJ,EAAc,kBAAE0O,EAAiB,gBAAEE,EAAe,eAAEN,EAAiB,GAAE,cAAEr5E,EAAa,iBAAE3R,EAAgB,8BAAEssF,EAA6B,kCAAEC,GAAuCvxJ,EAClLwxJ,EAAuB5yJ,OAAO4H,OAAO8pJ,GAAiBt+H,KAAK,MAC3Dy/H,EAAwBzB,EACzBzqJ,QAAQnB,GAAWksJ,GAAgB,EAAAjmJ,EAAA,IAAejG,MAClDnG,KAAKmG,GAAWA,EAAOqE,QAC5B,OAAQ,gBAAoB,MAAO,CAAEw/F,UAAW,iFAC5C,gBAAoB,QAAS,CAAEA,UAAW,YACtC,gBAAoB,KAAkB,CAAE7pG,GAAI,8CAChD,gBAAoB,MAAO,CAAE6pG,UAAW,gCACpC,gBAAoB,MAAO,CAAEA,UAAW,wCACpCmoD,EAAqB,gBAAoBgB,GAAgB,CAAEvrI,OAAQ,OAC/D,gBAAoB,OAAQ,CAAEoiF,UAAW,kBAAoBy5C,IAAoB,KACpD,IAAjC+P,EAAsB9nJ,OAAgB,gBAAoBynJ,GAAgB,CAAEvrI,OAAQ8wD,EAAc9wD,QAC9F,gBAAoB,OAAQ,CAAEoiF,UAAW,iBAAkBx/F,MAAOgpJ,EAAsBruJ,KAAK,QAAUquJ,EAAsBruJ,KAAK,OAClIquJ,EAAsB9nJ,OAAS,EAAK,gBAAoB,OAAQ,KAAM,IAAI8nJ,EAAsB9nJ,WAAc,MAAS,MAC/Hq7D,EAAoB,gBAAoB,MAAO,CAAEijC,UAAW,wCACxD,gBAAoB8nD,GAA8B,CAAErO,eAAgBA,EAAgB0O,kBAAmBA,EAAmBJ,eAAgBA,EAAgBM,gBAAiBA,EAAiBf,QAAS+B,IACrME,EAAwB,gBAAoBX,GAAuB,CAAEhrI,OAAQ8wD,EAAc9wD,OAAQytD,aAAcqD,EAAcrD,aAAc29E,eAAgBt6E,EAAcs6E,eAAgB1B,QAASgC,IAAwC,MAAS,MAAO,E,2BCZ5Q,MAOM,KAAEG,GAAMpP,MAAK,IAAK,KAClBqP,GAAoB,CAAC,CAAE1lD,MAAO,UAC7B,MAAM2lD,WAAiC,gBAC1C7yJ,cACIitC,SAASC,WACT/sC,KAAK2yJ,aAAe,cACpB3yJ,KAAK4yJ,qBAAuB,IACjB,KAEX5yJ,KAAK6yJ,yBAA4BC,IAC7B,MAAQC,aAAa,WAAEvG,IAAkBsG,EACzC,OAAItG,EACQ,gBAAoBhb,GAAA,EAAS,CAAEzoC,UAAW,8CAA+CrjG,KAAM,UAAWstJ,UAAU,GACxH,gBAAoB,KAAkB,CAAE9zJ,GAAI,2DAE7Cc,KAAK4yJ,sBAAsB,EAEtC5yJ,KAAKizJ,kBAAqBC,IACtB,MAAM,UAAEzuG,EAAS,OAAEy9E,GAAWliI,KAAKc,OAC7B,QAAEwyB,EAAO,SAAE6/H,EAAUJ,aAAa,WAAEvG,IAAkB0G,EACtDE,EAAiBD,KAAc,GAC/BE,EAAqBD,EAAe3oJ,OACpC6oJ,EAAuBhgI,EAAQ7oB,QACjC6oB,EAAQ+C,OAAOhI,GAAY43H,GAAiC53H,IAAW,KAAQA,EAAQ6zG,IACnFliI,KAAKuzJ,iBAAiBH,EAAgBzK,GAAgCt6H,MAC9E,OAAIo2B,EACOzkD,KAAKwzJ,kBAAkBN,IAE7B1G,IAAe6G,GAnCG,IAmCiDC,GAC7DtzJ,KAAK4yJ,uBAET5yJ,KAAKyzJ,2BAA2BP,EAAU,EAErDlzJ,KAAKyzJ,2BAA8BP,GACvB,gBAAoBV,GAAM9yJ,OAAOiI,OAAO,CAAEohG,UAAW,kCAAoCmqD,GAAYA,EAAU7lJ,UAE3HrN,KAAKwzJ,kBAAqBN,GACd,gBAAoBV,GAAM9yJ,OAAOiI,OAAO,CAAEohG,UAAW,kCAAoCmqD,GAC7F,gBAAoBptB,GAAA,EAAa,CAAE3jH,OAzCvB,MA2CpBniB,KAAK0zJ,0BAA4B,CAACv3I,EAAM6pI,KACpC,MAAM,QAAE2N,GAAY3zJ,KAAKc,MACnB8yJ,EAAsBD,EAAU,iBAAmB,eAEnD5oJ,EAAQ/K,KAAK6zJ,sBAAwB13I,EAAO6pI,EAClD,OAAQ,gBAAoB,MAAO,CAAE78C,MAAOnpG,KAAK8zJ,WAAY/qD,UAAW,qDAAqD6qD,mBACzH,gBAAoB,MAAO,CAAE7qD,UAAW,sBAAwBh+F,GAAQ,EAEhF/K,KAAK+zJ,8BAAgC,CAACvuB,EAAOwuB,IACjC,gBAAoB,MAAO,CAAEjrD,UAAW,oEAC5C,gBAAoB,MAAO,CAAEI,MAAOnpG,KAAK8zJ,WAAY/qD,UAAW,sBAAwBy8B,GACxF,gBAAoB,MAAO,CAAE,aAAc,cAAez8B,UAAW,yBAA2BirD,IAExGh0J,KAAKi0J,0BAA4B,CAACzuB,EAAOwuB,EAAYE,IACzC,gBAAoB,MAAO,CAAEnrD,UAAW,8EAC5C,gBAAoBuD,GAAA,GAAoB,CAAEvD,UAAW,gCAAiC6b,UAAW,EAAGwG,UAAW,GAC3G,gBAAoB,MAAO,CAAEriB,UAAW,4BACpC,gBAAoB,MAAO,CAAEI,MAAOnpG,KAAK8zJ,WAAY/qD,UAAW,sBAAwBy8B,GACxF,gBAAoB,MAAO,CAAEz8B,UAAW,yBAA2BirD,IACvE,gBAAoBnnD,GAAA,GAAQ,CAAE9D,UAAW,iDAAkD+D,YAAa2lD,IACpG,gBAAoB,KAAkB,CAAEvzJ,GAAIg1J,OAE5Dl0J,KAAKm0J,2BAA8BC,IAC/B,MAAM,KAAEryI,GAASqyI,EACXnnJ,EAAc27I,GAAsC7mI,GACpDikI,EAAQ2C,GAAgC5mI,GAC9C,OAAO/hB,KAAK0zJ,0BAA0BzmJ,EAAa+4I,EAAM,EAE7DhmJ,KAAKq0J,0BAA6BC,IAC9B,MAAM,KAAEvyI,EAAI,SAAE1U,GAAainJ,EAErBN,EAAa3mJ,EAAS,GAC5B,GAAI44I,GAAiClkI,IAAS,KAAQA,EAAM/hB,KAAKc,MAAMohI,QAAS,CAC5E,MAAMj1H,EAAc27I,GAAsC7mI,GACpDikI,EAAQ2C,GAAgC5mI,GAC9C,OAAO/hB,KAAK0zJ,0BAA0BzmJ,EAAa+4I,EACvD,CACA,MAAMA,EAAQ2C,GAAgC5mI,GAC9C,OAAK+nI,GAAQ9D,GAIRhmJ,KAAK6zJ,wBACN9N,GAAiChkI,IAChC/hB,KAAKu0J,4BAA4BxyI,GAG/B/hB,KAAK+zJ,8BAA8B/N,EAAOgO,GAFtCh0J,KAAKi0J,0BAA0BjO,EAAOgO,EAAY,sDANlDh0J,KAAKi0J,0BAA0BjO,EAAOgO,EAAY,0CAQD,EAEhEh0J,KAAKw0J,kBAAqB9L,IACtB,MAAM1C,EAAQ2C,GAAgCD,GACxC+L,EAAiB1O,GAAiC2C,GAMxD,OAL4C+L,GACxCz0J,KAAKc,MAAMwyB,QAAQR,MAAMzE,GAAWs6H,GAAgCt6H,KAAY23H,IAKzE,KAEP8D,GAAQ9D,IAAUyO,EACdz0J,KAAK6zJ,sBAEG,gBAAoB,MAAO,CAAE9qD,UAAW,mEAC5C,gBAAoByoC,GAAA,EAAS,CAAE9rI,KAAM,UAAWstJ,UAAU,GACtD,gBAAoB,KAAkB,CAAE9zJ,GAAI,qEAK5C,gBAAoB,MAAO,CAAE6pG,UAAW,+DAC5C,gBAAoByoC,GAAA,EAAS,CAAE9rI,KAAM,QAASstJ,UAAU,GACpD,gBAAoB,KAAkB,CAAE9zJ,GAAI,iEAGpD,gBAAoB,MAAO,CAAE6pG,UAAW,uDAC5C,gBAAoB,OAAQ,CAAEA,UAAW,mEAAqEi9C,GAC9GhmJ,KAAK00J,qBAAqBhM,GAAY,EAE9C1oJ,KAAK20J,iBAAoBnI,IAAe,CACpCxG,MAAOwG,IAEXxsJ,KAAK00J,qBAAwBhM,IACzB,MAAM+L,EAAiB1O,GAAiC2C,GAClD1C,EAAQ2C,GAAgCD,GAC9C,OAAK+L,GAAkB3K,GAAQ9D,GACnB,gBAAoB,OAAQ,CAAEj9C,UAAW,mEAAqE6/C,GAAsCF,IAEzJ1oJ,KAAK4yJ,sBAAsB,EAEtC5yJ,KAAK40J,qBAAwBC,IACzB,MAAM,QAAElB,GAAY3zJ,KAAKc,MACzB,OAAK6yJ,EAGG,gBAAoB,MAAO,CAAE5qD,UAAW,2CAC5C,gBAAoB,GAAOrpG,OAAOiI,OAAO,CAAC,EAAGktJ,KAHtC70J,KAAK4yJ,sBAG+C,EAEnE5yJ,KAAK80J,eAAiB,CAAC1B,EAAgB2B,KACnC,IAAI5vJ,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EAAIC,EAAIC,ErBzJE09H,EqB2JlC,MAAMC,ErBtJ4B,CAACD,IAC3C,MAAME,EAAe,GACrB,OAAOF,EAAW3uJ,QAAQqiJ,IACtB,MAAMyM,EAAc1M,GAA2CC,GAC/D,OAAIwM,EAAa9lI,SAAS+lI,KAItBD,EAAa3wJ,KAAK4wJ,IACX,EACX,GACF,EqB2IgCC,ErB3JQJ,EqB0J2B5B,ErBzJ9D,KAAQ4B,GAAatM,GAiBgB,EAACA,EAAWM,IACpD/C,GAAiCyC,GAC1B,CAACA,GAELK,GAAgDL,EAAWM,GApBvDqM,CAAwC3M,EAAWI,SqB0JhD,MAAE/9I,EAAK,oBAAEuqJ,GAAwBt1J,KAAKc,OACtC,OAAEqY,GAAW47I,EACfhqJ,EAAMN,QAvJa,KAKb,kBAmJL0O,GAlJK,kBAkJuBA,GACS,QAArCsc,GAAMtwB,EAAKnF,KAAKc,OAAO+oH,gBAA6B,IAAPp0F,GAAyBA,EAAGgmB,KAAKt2C,EAAI4F,GAG7D,OAAtBkqJ,EASkC,QAArC39H,GAAMD,EAAKr3B,KAAKc,OAAO+oH,gBAA6B,IAAPvyF,GAAyBA,EAAGmkB,KAAKpkB,EAAI49H,GAR3EK,EACsC,QAArCp+H,GAAMpB,EAAK91B,KAAKc,OAAO+oH,gBAA6B,IAAP3yF,GAAyBA,EAAGukB,KAAK3lB,EAAI,IAG7C,QAArCsB,GAAMD,EAAKn3B,KAAKc,OAAO+oH,gBAA6B,IAAPzyF,GAAyBA,EAAGqkB,KAAKtkB,EAAI,CAACpsB,EAAM,IAIG,EAEzG/K,KAAKu1J,kBAAqBvyB,IACtB,MAAM,QAAE1vG,EAAO,MAAEvoB,EAAK,sBAAEy6D,EAAqB,OAAEgwF,GAAWx1J,KAAKc,MAEzD20J,EADkBz1J,KAAK01J,0BAA0BpiI,EAAS0vG,GACnBv4H,OACvC8oJ,EAAmBvzJ,KAAKuzJ,iBAAiBxoJ,EAAOi4H,IACjDx9D,GAAyB+tF,GAAoBkC,EAAuB,IAGzEz1J,KAAK+sF,SAAS,CAAEtoC,WAAW,IAC3B+wG,SAAgDA,EAAO,CAAE1zB,OAAQkB,IAAe,EAEpFhjI,KAAK21J,WAAa,KACd,MAAM,OAAEH,EAAM,sBAAEhwF,EAAqB,QAAElyC,GAAYtzB,KAAKc,OAClCwyB,EAAQ7oB,QACR+6D,IAClBgwF,SAAgDA,IACpD,EAEJx1J,KAAK41J,aAAgB5yB,IACjBhjI,KAAKu1J,kBAAkBvyB,EAAa,EAExChjI,KAAK+iI,SAAW,KAAS/iI,KAAK41J,aA3LnB,KA4LX51J,KAAKuzJ,iBAAmB,CAACxoJ,EAAO8qJ,IACrB9qJ,EAAM+nB,MAAM41H,GAAc,KAAQD,GAA2CC,GAAYmN,IAExG,CACAjrC,oBACI,MAAM,QAAE38G,GAAYjO,KAAK2yJ,aACzB,IAAK1kJ,EACD,OAGJ,MAAM6nJ,EAAiB7nJ,EAAQ8nJ,cAAc,kBACvC5sD,EAAQnpG,KAAK8zJ,WACfgC,GAAkB3sD,GAClB2sD,EAAeE,aAAa,QAAS,cAAc7sD,EAAMn0D,aAEjE,CACA24D,SACI,MAAM,QAAEgmD,EAAO,QAAErgI,EAAO,MAAEvoB,GAAU/K,KAAKc,MACnCm1J,EAA2Bv2J,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG,MAAwB,CAAEuuJ,oBAAqBl2J,KAAK4yJ,qBAAsBxP,MAAOpjJ,KAAK40J,qBAAsBuB,oBAAqBn2J,KAAKq0J,0BAA2B7B,KAAMxyJ,KAAKizJ,kBAAmBmD,YAAap2J,KAAK4yJ,qBAAsByD,YAAar2J,KAAKm0J,2BAA4BmC,iBAAkBt2J,KAAK6yJ,2BAC7W,OAAQ,gBAAoB,MAAO,CAAE9pD,UAAW,gFAC5C,gBAAoB,QAAS,CAAEA,UAAW,YACtC,gBAAoB,KAAkB,CAAE7pG,GAAI,qCAChD,gBAAoB,MAAO,CAAEqE,IAAKvD,KAAK2yJ,aAAc5pD,UAAW,kCAC5D,gBAAoB,KAAiB,CAAEA,UAAW,0BAA2BwtD,gBAAiB,gBAAiBj0D,WAAY2zD,EAA0BtB,iBAAkB30J,KAAK20J,iBAAkB6B,kBAAmBx2J,KAAKw0J,kBAAmBiC,aAAa,EAAOC,YAAa/C,EAASA,QAASA,EAAS9pC,SAEjS7pH,KAAK80J,eAAgB6B,cAAe32J,KAAK+iI,SAAU4yB,WAAY31J,KAAK21J,WAAYriI,QAASA,EAASvoB,MAAOA,EAAO6rJ,eAAgBnO,GAA4CoO,eAAgBlO,MAC5M,CACAmL,WACI,MAAM,QAAE7lJ,GAAYjO,KAAK2yJ,cACnB,MAAEzwI,IAAY,IAAQjU,IAAYA,EAAQ87G,yBAA4B,CAAE7nG,WAAOnd,GACrF,MAAO,CACHiwC,SAAU9yB,EACJA,EA3NF,GACU,GA2NR,OAEd,CACA2xI,sBACI,MAAM,YAAEzyJ,EAAW,OAAE8gI,GAAWliI,KAAKc,MACrC,OAAOmlJ,GAAiC/jB,KAAW,QAAgBA,EAAOvkG,KAAKp6B,IAAKnC,EAAYmC,IACpG,CACAgxJ,4BAA4B7L,GACxB,OAAO1oJ,KAAKc,MAAMg2J,cAAchkI,MAAMzE,GAC3B03H,GAAiC13H,IAAWA,EAAO23H,QAAU0C,EAAU1C,OAEtF,CACA0P,0BAA0BpiI,EAASuiI,GAC/B,OAAOA,EACDviI,EAAQjtB,QAAQqiJ,GAAc,KAASC,GAAgCD,GAAYmN,KACnF,EACV,ECxPG,MAAMkB,GAAoBj2J,IAC7B,MAAM,QAAEhB,EAAO,UAAEuB,EAAS,OAAE6gI,EAAM,YAAE9gI,EAAW,MAAE2J,EAAK,cAAE+rJ,EAAa,SAAEjtC,EAAQ,QAAExrD,EAAO,sBAAEmH,EAAqB,qCAAElY,EAAoC,oBAAEgoG,GAAyBx0J,GACzKghI,EAAQC,IAAa,IAAAj3C,aACtB,OAAEtiF,EAAM,OAAEiF,GCFb,UAA2B,OAAEq0H,EAAM,QAAEhiI,EAAO,UAAEuB,EAAS,SAAE0zH,EAAQ,QAAE12D,EAAO,UAAE24F,EAAS,UAAEC,EAAS,UAAE14F,IACrG,MAAMw1E,GAAmB,QAAiBj0I,GACpCo3J,GAAqB,QAAmB71J,GAGxCq9D,EAF0BgsB,GAAqBnlB,IAG/C,KACE,IAAIkhB,EAASstD,EAAiB1yI,UAAU61J,GAAoB30J,QAI5D,OAHIu/H,IACAr7C,EAASA,EAAOzqD,YAAY,CAAE8lG,OAAQ,IAAIA,OAEvCr7C,EAAO0wE,UAAU,EAE1B,IAAM5uJ,QAAQ5I,QAAQ,IAC5B,OAAO,QAAqB,CAAE++D,UAASq2D,WAAU12D,UAAS24F,YAAWC,YAAW14F,aAAa,CACzFw1E,EACAmjB,EACAp1B,GAER,CDjB+Bs1B,CAAkB,CAAEt3J,UAASuB,YAAWygI,SAAQzjE,YACrE/qC,GAAU,IAAAhmB,UAAQ,KAAQ,IAAInI,EAAI,OAAO,KAAmG,QAA3FA,EAAKqD,aAAuC,EAASA,EAAOzJ,KAAK4+B,IAAS,CAAGA,kBAA6B,IAAPx4B,EAAgBA,EAAK,GAAI,aAAa,GAAK,CAACqD,IACtM,OAAQ,gBAAoBkqJ,GAA0B,CAAEltF,sBAAuBA,EAAuBmuF,QAASrmG,EAAsCh6B,QAASA,EAASvoB,MAAOA,EAAO+rJ,cAAeA,EAAejtC,SAAUA,EAAUqY,OAAQA,EAAQ9gI,YAAaA,EAAao0J,OAAS9qF,IAClRq3D,EAAUr3D,aAAmD,EAASA,EAAao3D,OAAO,EAC3Fr9E,UAAsB,YAAXh3C,GAAmC,YAAXA,EAAsB6nJ,oBAAqBA,GAAuB,EEPnG+B,GAAuBv2J,IAChC,IAAIqE,EAAIswB,EACR,MAAM,UAAEszE,EAAY,GAAE,SAAEyX,EAAQ,MAAEglB,GAAU1kI,EACtC8uF,GAAO,EAAAC,GAAA,KACPsc,GAAQ,WACR0L,EAAa,8CAA8C9O,IAC3DuuD,EAAmBvN,KAAiB,MAAQvpC,EAC5C+2C,EAAc3nE,EAAKj/D,cAAc,CAAEzxB,GAAI,6CAC7C,OAAQ,gBAAoB,MAAO,CAAE6pG,UAAW8O,GAC5C,gBAAoB,QAAS,CAAE9O,UAAW,YAAcy8B,GACxD,gBAAoB,OAAQ,CAAEz8B,UAAW,eACrC,gBAAoByD,GAAA,MAAU,CAAEtqF,MAAO,GAAIC,OAAQ,GAAIsqF,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAG+hI,MAC1O,gBAAoB,OAAQ,CAAEzuD,UAAW,qBAAuB,GAAGuuD,KAAoBC,KAAgB,ECezGE,GAAkB,MAAS95H,IAAS,CACtCA,WAEJ,MAAM+5H,WAAsC,gBACxC73J,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKmuJ,QAAWD,IACRA,EAAUjkI,IAAM,GAChBjqB,KAAK+sF,SAAS,CAAEmhE,UAAW,SAC/B,EAEJluJ,KAAK23J,iBAAmB,KACpB,MAAM,KAAE/nE,EAAI,eAAE4yD,EAAc,wBAAEoV,EAAuB,6BAAEC,EAA4B,iBAAE/xF,GAAsB9lE,KAAKc,OAC1G,kBAAEowJ,EAAiB,gBAAEE,EAAe,cAAE35E,GAAkBz3E,KAAKkZ,MAAM4+I,YAEnEt3C,EAAW,GADSxgH,KAAK+3J,6BAE/B,OAAOF,EAAgC,gBAAoB1F,GAAa,CAAE3P,eAAgBA,EAAgBsO,eAAgB8G,EAAyB1G,kBAAmBA,EAAmBE,gBAAiBA,EAAiB35E,cAAeA,EAAe3R,iBAAkBA,EAAkBssF,8BAA+BpyJ,KAAKg4J,oBAAqB3F,kCAAmCryJ,KAAKi4J,mCAAwC,gBAAoBZ,GAAqB,CAAEtuD,UAAW,wCAAyCy8B,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,4CAA8CshH,SAAUA,GAAY,EAE7mBxgH,KAAKk4J,eAAiB,KAClB,MAAM,WAAE3wI,EAAU,KAAEqoE,EAAI,OAAEz+D,EAAM,UAAEs7B,GAAczsD,KAAKc,OAC7CmmJ,QAAQ,KAAE35C,GAAM,UAAE+4C,GAAermJ,KAAKkZ,MACxCi/I,EAAW,IAAIxwI,KAAa0+H,E3Bb9BoH,c2BamDpH,E3BhBnDwH,WAAa,E2BgBmD,EAAG3H,GAAQG,GAAY/4C,EAAKxlF,KAAMwlF,EAAKzlF,QAC3G,OAAQ,gBAAoB4nI,GAAU,CAAEnoI,KAAM6wI,EAAU5wI,WAAYA,EAAYi+G,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,sCAAwCiyB,OAAQA,EAAQ0+H,SAAU7vJ,KAAKkZ,MAAMk/I,aAAa7uJ,MAAOumJ,aAAc9vJ,KAAK8vJ,aAAcH,aAAc3vJ,KAAK2vJ,aAAcljG,UAAWA,GAAa,EAE/SzsD,KAAKq4J,cAAgB,KACjB,MAAM,KAAEzoE,GAAS5vF,KAAKc,MAChBw3J,EAAmBt4J,KAAKu4J,sBAC9B,OAAQ,gBAAoBtO,GAAU,CAAElhD,UAAW,qCAAsCy8B,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,yCAA2CokJ,UA/BrJ,IA+BoLjgJ,YAAai1J,EAAkBrnD,KAAM,EAAG4Y,SAAU7pH,KAAKw4J,gBAAiBztJ,MAAO/K,KAAKkZ,MAAMu/I,WAAa,EAE9Sz4J,KAAK04J,qBAAuB,KACxB,MAAM,6BAAEb,EAA4B,kBAAEc,EAAiB,aAAEC,GAAiB54J,KAAKc,MAC/E,OAAI83J,EACQ,gBAAoBpnB,GAAA,EAAS,CAAEzoC,UAAW,4CAA6CrjG,KAAM,YACjG,gBAAoB,KAAkB,CAAExG,GAAI,8CAEhD24J,IAAiCc,EACzB,gBAAoBnnB,GAAA,EAAS,CAAEzoC,UAAW,4CAA6CrjG,KAAM,YACjG,gBAAoB,KAAkB,CAAExG,GAAI,yCAFpD,CAGA,EAEJc,KAAK64J,iBAAmB,KACpB,IAAI1zJ,EAAIswB,EACR,MAAM,mBAAEqjI,GAAuB94J,KAAKkZ,OAC9B,QAAEpZ,EAAO,UAAEuB,EAAS,sBAAEmkE,EAAqB,qCAAElY,EAAoC,YAAElsD,EAAW,aAAEw3J,GAAkB54J,KAAKc,MAEvHw0J,EAAuH,QAAhGnwJ,EAAKyzJ,aAAmD,EAASA,EAAaG,oBAAiC,IAAP5zJ,OAAgB,EAASA,EAAG2tB,MAAMkmI,IAA4B,IAAI7zJ,EAAI,OAAO6zJ,KAA6D,QAAjC7zJ,EAAKyzJ,EAAangG,iBAA8B,IAAPtzD,OAAgB,EAASA,EAAG6gJ,MAAM,IACzT,OAAQ,gBAAoB+Q,GAAkB,CAAE70B,OAAQu1B,IAAiBmB,aAAmD,EAASA,EAAangG,WAAamgG,aAAmD,EAASA,EAAangG,UAAYr3D,GAAcA,YAAaA,EAAaokE,sBAAuBA,EAAuBlY,qCAAsCA,EAAsCviD,MAAO+tJ,EAAoBhC,eAAkD,QAAjCrhI,EAAKz1B,KAAKi5J,yBAAsC,IAAPxjI,OAAgB,EAASA,EAAGqjI,qBAAuB,GAAIjvC,SAAU7pH,KAAKk5J,mBAAoB76F,QAASr+D,KAAKc,MAAMu9D,QAASv+D,QAASA,EAASuB,UAAWA,EAAWi0J,oBAAqBA,GAAuB,EAE1rBt1J,KAAKm5J,6BAA+B,KAChC,IAAIh0J,EACJ,MAAM,KAAEyqF,EAAI,aAAEgpE,GAAiB54J,KAAKc,MAC9Bs4J,OAAuKr0J,KAAhD,QAAhGI,EAAKyzJ,aAAmD,EAASA,EAAaG,oBAAiC,IAAP5zJ,OAAgB,EAASA,EAAGsF,QAAwB,EAAImuJ,EAAaG,aAAatuJ,OACvN,OAA+B,IAAvB2uJ,GAA6B,gBAAoB,MAAO,CAAErwD,UAAW,sBACzE,gBAAoB,OAAQ,CAAEA,UAAW,oDAAsDnZ,EAAKj/D,cAAc,CAAEzxB,GAAI,kDAAoD,CAAE0xB,EAAGwoI,KAAyB,EAElNp5J,KAAKq5J,cAAgB,KACjB,MAAM,KAAEzpE,GAAS5vF,KAAKc,OAChB,UAAEulJ,EAAS,OAAEY,GAAWjnJ,KAAKkZ,MACnC,IAAIiuI,EAAkB5B,GAAmBC,IACrCwC,EAAkBpC,GAAkBC,aAQxC,OAPIoB,EAAOE,gBAAgBn/H,KACvBm/H,EAAkB5B,GAAmBG,KAEhCuB,EAAOE,gBAAgBl/H,QAC5Bk/H,EAAkB5B,GAAmBE,MACrCuC,EAAkBf,EAAOE,gBAAgBl/H,MAAMviB,MAE3C,gBAAoBomJ,GAAc,CAAEtmB,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,yCAA2C8oJ,gBAAiBA,EAAiBb,gBAAiBA,EAAiBC,aAAcH,EAAOG,aAAcF,WAAYD,EAAOC,WAAYb,UAAWA,EAAWx8B,SAAU7pH,KAAKs5J,iBAAmB,EAEzTt5J,KAAKu5J,cAAgB,KACjB,MAAM,KAAE3pE,GAAS5vF,KAAKc,MACtB,OAAQ,gBAAoB,GAAO,CAAEioG,UAAW,qCAAsCy8B,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,yCAA2CokJ,UA1ElJ,IA0EiLjgJ,YAAarD,KAAKw5J,oBAAqBzuJ,MAAO/K,KAAKkZ,MAAMugJ,aAAc5vC,SAAU7pH,KAAK05J,iBAAmB,EAG7S15J,KAAK25J,uBAAyB,KAC1B,IAAIx0J,EACJ,MAAM,SAAE88G,EAAQ,OAAE23C,EAAM,aAAEhB,GAAiB54J,KAAKc,MAChD,GAAI83J,GACA,GAAIgB,EAAQ,CACR,MAAMC,EAA2H,QAAlG10J,EAAKyzJ,aAAmD,EAASA,EAAad,YAAY,UAAuB,IAAP3yJ,OAAgB,EAASA,EAAGmkC,cACrKswH,EAAO55J,KAAK85J,uBAAwBD,EACxC,OAGI53C,GACAA,EAASjiH,KAAK85J,uBAEtB,EAEJ95J,KAAK8vJ,aAAgBiK,IACjB,MAAM,gBAAE5S,GAAoBnnJ,KAAKkZ,MAAM+tI,OACjC+S,EAAY,IAAUh6J,KAAKkZ,MAAM+tI,QACnCE,EAAgBl/H,MAChB8/H,GAAiBiS,EAAW7S,EAAgBl/H,MAAMviB,KAAMq0J,GAEnD5S,EAAgBn/H,KACrBkgI,GAAgB8R,EAAWD,GAG3BlS,GAAemS,GAEnBh6J,KAAK+sF,SAAS,CACVs5D,UAAW0T,EACX9S,OAAQ+S,GACV,EAENh6J,KAAK2vJ,aAAgBriD,IACjBttG,KAAK+sF,UAAUgrC,IACJ,CACHkvB,OAAQvnJ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGowH,EAAUkvB,QAAS,CAAE35C,YAEnE,EAENttG,KAAKk5J,mBAAsBJ,IACvB,MAAM,aAAEF,EAAY,YAAEx3J,GAAgBpB,KAAKc,MACrCm5J,EAAyBnB,EAAmB/5J,IAAI4pJ,IAAiCtyH,MAAMyzH,IACvFoQ,EAA8BpB,EAC/BzyJ,OAAO0/I,IACPhnJ,KAAK2pJ,GAAcA,EAAU1C,QAC5BmU,IAA2BvB,GAC3B,KAAasB,EAA6BtB,EAAawB,KAAO,IAAI3vJ,OAAS,EAE3Ey3H,EAASu1B,IAAiBmB,aAAmD,EAASA,EAAangG,WAAamgG,aAAmD,EAASA,EAAangG,UAAYr3D,GACrMyyJ,EAAsB5N,GAAiC/jB,KAAW,QAAgBA,EAAOvkG,KAAKp6B,IAAKnC,EAAYmC,KACrHvD,KAAK+sF,SAAS,CACV+rE,qBAEAuB,yBAA0BJ,IAA2BpG,IAAwBsG,IAC/E,EAENn6J,KAAKw4J,gBAAmBztJ,IACpB/K,KAAK+sF,SAAS,CACV0rE,UAAW1tJ,GACb,EAEN/K,KAAKs5J,gBAAmBv3I,IACpB,MAAM,gBAAEimI,EAAe,gBAAEb,EAAe,aAAEC,EAAY,WAAEF,GAAenlI,GACjE,UAAEskI,GAAcrmJ,KAAKkZ,MACrB8gJ,EAAY,IAAUh6J,KAAKkZ,MAAM+tI,QACvC+S,EAAU9S,WAAaA,EACvB8S,EAAU5S,aAAeA,EACrBF,IAAehC,GAAaI,OACxB6B,IAAoB5B,GAAmBE,MACvCsC,GAAiBiS,EAAWhS,EAAiB3B,GAExCc,IAAoB5B,GAAmBG,KAC5CwC,GAAgB8R,EAAW3T,GAG3BwB,GAAemS,GAGd9S,IAAehC,GAAaG,QACjC0C,GAAiBiS,EAAWpU,GAAkBE,YAAaO,GAEtDa,IAAehC,GAAaC,OACjC+C,GAAgB8R,EAAW3T,GAG3BwB,GAAemS,GAEnBh6J,KAAK+sF,SAAS,CAAEk6D,OAAQ+S,GAAY,EAExCh6J,KAAK05J,gBAAmB3uJ,IACpB/K,KAAK+sF,SAAS,CACV0sE,aAAc1uJ,GAChB,EAEN/K,KAAKg4J,oBAAsB,CAAC9G,EAAmBE,KAC3CpxJ,KAAK+sF,SAAS,CACV+qE,YAAap4J,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3H,KAAKkZ,MAAM4+I,aAAc,CAAE5G,oBACpEE,qBACN,EAENpxJ,KAAKi4J,iCAAoCxgF,IACrCz3E,KAAK+sF,SAAS,CACV+qE,YAAap4J,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3H,KAAKkZ,MAAM4+I,aAAc,CAAErgF,mBAC1E,EAGNz3E,KAAK+3J,qBAAuB,KACxB,MAAM,eAAEvV,EAAc,WAAEj7H,GAAevnB,KAAKc,OACtC,UAAEulJ,GAAcrmJ,KAAKkZ,MACrBohJ,E3BhNX,SAAwChzI,EAAMC,GAGjD,MAKM4I,EAL6B,CAC/B,aAAc,aACd,aAAc,aACd,SAAU,UAEuC5I,IAAeA,EACpE,OAAO,KAAOD,GAAQ,KAAOA,EAAM6I,GAAqB7I,CAC5D,C2BsMsCizI,CAA+BlU,EAAW9+H,GAC9DizI,EAA0Bx6J,KAAKy6J,2BAA2BH,GAKhE,MAAO,GAJyB9X,EAAe/3I,OAAS+vJ,EAElDhY,EAAexd,UAAU,EAAGw1B,GAC5BhY,OACiC8X,GAAmB,EAE9Dt6J,KAAKw5J,kBAAoB,KACrB,MAAM,eAAEhX,GAAmBxiJ,KAAKc,MAEhC,OADgC0hJ,EAAe/3I,OjCjOjB,IiCmOxB+3I,EAAexd,UAAU,EjCnOD,KiCoOxBwd,CAAc,EAExBxiJ,KAAKu4J,oBAAsB,KACvB,MAAM,KAAE3oE,GAAS5vF,KAAKc,MACtB,OAAO8uF,EAAKj/D,cAAc,CACtBzxB,GAAI,8CACN,EAENc,KAAK06J,eAAkB11J,IACnB,MAAMwD,EAAS,IACT,kBAAE0oJ,EAAiB,gBAAEE,EAAe,cAAE35E,GAAkBz3E,KAAKkZ,MAAM4+I,YACrE5G,GACA1oJ,EAAOjE,KAAK,CACRS,YACA2hB,OAAQ,QAGhB,MAAMg0I,EAAyC,SAAzBljF,EAAc9wD,OAC9B,CACEytD,aAAcqD,EAAcrD,aAC5B29E,eAAgBt6E,EAAcs6E,qBAEhChtJ,EACA61J,EAA8B56J,KAAKc,MAAM82J,wBAAwBvuJ,QAAO,CAACwpC,EAAK3tC,KAChF2tC,GAAI,EAAA1nC,EAAA,IAAejG,KAAW,QAAOA,EAAOe,KACrC4sC,IACR,CAAC,GACJ,IAAK,MAAMgoH,KAAmBzJ,EACtBA,EAAgByJ,IAChBryJ,EAAOjE,KAAK,CACRW,OAAQ01J,EAA4BC,GACpCC,gBAAiB91J,EACjBqoG,QAAS,CAAC51B,EAAc9wD,QACxBg0I,kBAIZ,OAAOnyJ,CAAM,EAEjBxI,KAAK85J,qBAAuB,KACxB,MAAM,aAAElB,GAAiB54J,KAAKc,MACxBi6J,EAAO/6J,KAAKg7J,mBACVlC,mBAAoB9D,EAAU,aAAEyE,EAAY,UAAEhB,GAAcz4J,KAAKkZ,MAEnE+hJ,EAAWjG,EACZ3uJ,OAAO4/I,IACPlnJ,KAAK2pJ,GAAcA,EAAU/qH,KAAK0kG,QAEjC64B,EAAYlG,EACb3uJ,OAAO0/I,IACPhnJ,KAAK2pJ,GAAcA,EAAU1C,QAC5BmV,EAAU1B,GAAgBz5J,KAAKw5J,oBAC/B3vD,EAAO4uD,GAAaz4J,KAAKu4J,sBACzBj3I,EAActhB,KAAKo7J,oBACnBtD,EAAc93J,KAAK06J,eAAe16J,KAAKc,MAAMkE,WACnD,IAAI+zJ,EAIJ,OAHIH,IACAG,EAAe,KAAaH,EAAaG,aAAckC,EAAS70J,OAAO80J,KAEpE,CACHH,OACAzyJ,GAAI2yJ,EACJb,IAAKc,EACLnC,eACAoC,UACAtxD,OACAiuD,cACAx2I,cACA/X,MAAO4xJ,EAEPE,UAAU,EACVp1J,IAAK2yJ,EAAeA,EAAa3yJ,SAAMlB,EAC1C,EAEL/E,KAAKg7J,gBAAkB,K3B1SxB,IAAyC1zI,E2B6SpC,MAAO,CACHg0I,WAHetU,GAAqBhnJ,KAAKkZ,MAAM+tI,QAI/CZ,W3B/SgC/+H,E2B4SctnB,KAAKkZ,MAAMmtI,U3B3S9D,KAAO/+H,GAAQ,KAAOA,EAAM,IAAwBA,G2B+S/C+4G,SAAUrgI,KAAKkZ,MAAMk/I,aAAa90J,WACrC,EAELtD,KAAKo7J,kBAAoB,KACrB,MAAM,UAAE/U,EAAS,OAAEY,GAAWjnJ,KAAKkZ,MACnC,OC5PL,SAAwC02E,EAAM2rE,EAAYlV,GAK7D,MAAO,GAvDX,SAAuCz2D,EAAMt8D,EAAS+yH,GAClD,IAAIlhJ,EACJ,MAAM,WAAE+hJ,EAAU,aAAEE,EAAY,gBAAED,GAAoB7zH,EAChDkoI,EAAqBtU,IAAehC,GAAaI,OACjDv9H,EAAMo+H,GAAWE,GACjBr+H,EAAO0+H,GAAQL,GACrB,IAAKmV,EACD,OAAO5rE,EAAKj/D,cAAc,GAAS,8BAA8Bu2H,KAAe,CAAEn/H,MAAKC,SAE3F,MAAMqO,EAAQu5D,EAAKj/D,cAAc,CAC7BzxB,GAAI,yCAEFu8J,EAlBV,SAAgCtU,GAE5B,MAAM3+I,EAASm9I,GAAep/I,MAAMb,GAASyhJ,EAAgBz7D,eAAehmF,KAE5E,OADA,QAAU8C,EAAQ,qCACXA,CACX,CAagCkzJ,CAAuBvU,GAC7CwU,EAAc/rE,EAAKj/D,cAAc,GAAS,yCAAyC8qI,KAAwB,CAC7G7qI,IAEEgrI,EAAyBH,IAAwBlW,GAAmBG,KACpEE,GAAkBE,YACe,QAAhC3gJ,EAAKgiJ,EAAgBl/H,aAA0B,IAAP9iB,OAAgB,EAASA,EAAGO,KAS3E,MAAO,GAAG2wB,KAAS+wH,KAAgBuU,KARjBF,IAAwBlW,GAAmBC,IACvD51D,EAAKj/D,cAAc,GAAS,uCAAuCirI,KAA2B,CAC5Ft0I,KAAM4+H,GAAQG,GACdt+H,IAAKo+H,GAAWE,GAChBr+H,KAAM0+H,GAAQL,KAEhB,KAEwD3nE,MAClE,CAuBuBm9E,CAA8BjsE,EAAM2rE,EAAYlV,MAC5Cz2D,EAAKj/D,cAAc,CAAEzxB,GAAI,kBAvBpD,SAA0BouG,GACtB,MAAM,KAAExlF,EAAI,OAAED,GAAWylF,EACnBwuD,EAMV,SAAuBh0I,GACnB,OAAOA,GAAQ,GA7CR,KADA,IA+CX,CARuBi0I,CAAcj0I,GAC3Bk0I,EAQV,SAA4Bn0I,GACxB,OAAOA,EAAS,GAAK,IAAMA,EAAS,GAAKA,CAC7C,CAV4Bo0I,CAAmBp0I,GAG3C,MAAO,GAQX,SAA0BC,GACtB,IAAIo0I,EAAgBp0I,EAAO,GAAKA,EAAO,GAAKA,EAI5C,OAHa,IAATA,IACAo0I,EAAgB,IAEbA,CACX,CAhB0BC,CAAiBr0I,MAEZk0I,KAAmBF,GAClD,CAiBiBM,CAAiBb,EAAWjuD,OAG7C,CDsPmB+uD,CAA+Br8J,KAAKc,MAAM8uF,KAAMq3D,EAAQZ,EAAU,EAE7ErmJ,KAAKkZ,MAAQlZ,KAAKc,MAAM83J,aAClB54J,KAAKs8J,aAAat8J,KAAKc,MAAM83J,aAAc54J,KAAKc,MAAMyB,OACtDvC,KAAKu8J,iBACf,CACAA,kBACI,MAAMp8B,EAAM,IAAIx4G,KACV60I,EAAiBzX,GAAc5kB,GACrC,MAAO,CACH+tB,UAAW,QACX7H,UAAWlmB,EACXi4B,avB7LD3O,IAAuBE,GuB8LtB8P,aAAc,GACdhB,UAAW,GACXxR,OAAQ,CACJ35C,KAAM,CACFxlF,KAAM00I,EAAe3sI,WACrBhI,OAAQ20I,EAAe1sI,aACvB04H,OAAQ,GAEZtB,WAAYhC,GAAaE,MACzBgC,a7BrUqB,E6BsUrBD,gBAAiB,CACb,CAAC5B,GAAmBC,MAAM,IAGlCsT,mBAAoB,CAACrB,GAAgBz3J,KAAKc,MAAMM,cAChDi5J,0BAA0B,EAC1BvC,YAAap4J,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3H,KAAKy8J,yBAA0B,CAAEhlF,cAAe,CACrF9wD,OAAQ,MACRytD,cAAc,EACd29E,gBAAgB,KAGhC,CACAuK,aAAa3kE,EAAUp1F,GACnB,IAAI4C,EAAIswB,EACR,MAAMinI,EAAe18J,KAAKu8J,kBACpBzD,EAAqBnhE,EAASrvF,GAAGlC,OAAOuxF,EAASyiE,KAAO,IAAIr7J,KAAKinJ,IACnE,IAAI7gJ,EAKJ,OAAI6gJ,KAAyC,QAA7B7gJ,EAAKwyF,EAASl/B,iBAA8B,IAAPtzD,OAAgB,EAASA,EAAGk9H,OACtEo1B,GAAgB9/D,EAASl/B,WAGzB,CAAEutF,QACb,IAOE2W,EAAsB7D,EAAmB/5J,KAAK2pJ,IAChD,GAAI3C,GAAiC2C,GAAY,CAE7C,MAAM/qH,EAAOp7B,EAAMgE,MAAMo3B,GAASA,EAAK0kG,QAAUqmB,EAAU1C,QAC3D,GAAIroH,EACA,MAAO,CAAEA,OAEjB,CACA,OAAO+qH,CAAS,IAEdkU,EAAuBjlE,EAASmgE,YAAYzxJ,OAAO,MACnDw2J,EAAoBllE,EAASmgE,YAAYzxJ,OAAO,MAChD+qJ,EAAkBpxJ,KAAKc,MAAM82J,wBAAwBvuJ,QAAO,CAACwpC,EAAK3tC,KAEpE2tC,GADkB,EAAA1nC,EAAA,IAAejG,IAChB23J,EAAkB/pI,MAAMgqI,IAC9B,QAAgBA,EAAiB53J,OAAQA,KAE7C2tC,IACR,CAAC,GACE4kC,EAA6C,IAA7BolF,EAAkBpyJ,OAClCiyJ,EAAa5E,YAAYrgF,cACzB,CACE9wD,OAAQk2I,EAAkB,GAAGxvD,QAAQ,IAAM,MAC3Cj5B,cAA6D,QAA7CjvE,EAAK03J,EAAkB,GAAGlC,qBAAkC,IAAPx1J,OAAgB,EAASA,EAAGivE,gBAAiB,EAClH29E,gBAA+D,QAA7Ct8H,EAAKonI,EAAkB,GAAGlC,qBAAkC,IAAPllI,OAAgB,EAASA,EAAGs8H,kBAAmB,GAExHgL,EAAWr9J,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG+0J,GAAe,CAAEjD,aAAc9hE,EAASwjE,QAAS1C,UAAW9gE,EAASkS,KAAMivD,mBAAoB6D,EAAqBvE,aAAcxO,GAAwBjyD,EAASojE,KAAK16B,WAAaspB,GAAkBtD,UAAW,KAAM1uD,EAASojE,KAAK1U,UAAW,GAAsB,IAAI1+H,MAAS0yI,0BAA0B,EAAMpT,OAAQkB,GAAkBxwD,EAASojE,KAAKO,YAAaxD,YAAa,CAC/Z5G,kBAAmD,IAAhC0L,EAAqBnyJ,OACxC2mJ,kBACA35E,mBAGR,OADAz3E,KAAKi5J,kBAAoB8D,EAClBA,CACX,CACAN,wBACI,MAAM,6BAAE5E,EAA4B,kBAAEmF,EAAiB,wBAAEpF,GAA4B53J,KAAKc,MACpFm8J,EAA2BrF,EAAwB9kI,MAAM5tB,IAAW,QAAgBA,EAAO3B,IAAKy5J,KACtG,OAAInF,GAAgCmF,GAAqBC,EAC9C,CACH/L,mBAAmB,EACnBE,gBAAiB,CAAE,EAAC,EAAAjmJ,EAAA,IAAe6xJ,KAAqB,IAIrD,CACH9L,mBAAmB,EACnBE,gBAAiBwG,EAAwBvuJ,QAAO,CAACwpC,EAAK3tC,KAClD2tC,GAAI,EAAA1nC,EAAA,IAAejG,KAAW,EACvB2tC,IACR,CAAC,GAGhB,CACA86D,SACI,MAAM,KAAE/d,EAAI,SAAEmlC,EAAQ,aAAE6jC,EAAY,6BAAEf,GAAiC73J,KAAKc,OACtE,UAAEotJ,EAAS,yBAAEmM,GAA6Br6J,KAAKkZ,MAC/C4zF,EAAc,CAChB,CACIC,MAAOmhD,IAGTpiB,GAAoBuuB,GACrBzB,GACG,KAAQ,KAAK54J,KAAKi5J,kBAAmB,aAAc,KAAKj5J,KAAKkZ,MAAO,cAC5E,OAAQ,gBAAoBmzH,GAAA,EAAS,CAAEv/B,YAAaA,EAAa/D,UAAW,mCAAoCujC,SAAS,EAAME,aAAc,QAAS2hB,QAASnuJ,KAAKmuJ,SAChK,gBAAoBziB,GAAA,EAAmB,CAAE3iC,UAAW,sDAAuD4iC,YAAY,EAAM5uB,SAAU86C,EAC7HjoE,EAAKj/D,cAAc,CAAEzxB,GAAI,mCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,oCAAsC0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkB+sB,EACzIhpE,EAAKj/D,cAAc,CAAEzxB,GAAI,gCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,kCAAoC4sI,iBAAkBA,EAAkBC,kBAAkB,EAAOhX,SAAUA,EAAU9S,SAAUjiH,KAAK25J,wBACnK35J,KAAK04J,uBACL14J,KAAK64J,mBACL74J,KAAKm5J,+BACLn5J,KAAKu5J,gBACLv5J,KAAKq4J,gBACLr4J,KAAK23J,mBACL,gBAAoB,MAAO,CAAE5uD,UAAW,OACxC/oG,KAAKk4J,iBACLl4J,KAAKq5J,iBACjB,CACAoB,2BAA2BH,GACvB,OjCnckC,IiCmcEA,EAAkB57E,OAAOj0E,OApa3C,CAqatB,EAEJitJ,GAA8BjsC,aAAe,CACzClkG,WAAY,cAGT,MAAM21I,IAAkC,EAAAC,GAAA,IAAa,EAAAp8B,GAAA,IAAW22B,KAC1D0F,GAA+Bt8J,GAAW,gBAAoB4sG,GAAa,CAAEv8E,OAAQrwB,EAAMqwB,QACpG,gBAAoB+rI,GAAiCx9J,OAAOiI,OAAO,CAAC,EAAG7G,KE1c9Du8J,GAAmCp1J,GAAYA,EAAQlJ,KAAKsH,IACjE,OAA2BA,GACpB,CAAEoT,gBAAiB,KAAKpT,EAAOoT,gBAAiB,oBAEpDpT,ICCEi3J,GAA+Bx8J,IACxC,MAAM,SAAEmhH,EAAQ,UAAE1jD,EAAS,QAAEF,EAAO,OAAEu7F,EAAM,cAAE2D,EAAa,YAAEC,EAAW,SAAEzoC,EAAQ,UAAEtkB,EAAS,aAAEmoD,EAAY,MAAEr2J,GAAWzB,GAClH,YAAEM,EAAW,aAAE86B,EAAY,eAAEsmH,EAAc,wBAAEoV,EAAuB,kBAAEe,EAAiB,2BAAE8E,EAA0B,yBAAEC,EAAwB,OAAEvsI,EAAM,wBAAEwsI,EAAuB,iBAAE73F,EAAgB,WAAEv+C,EAAU,UAAEklC,EAAS,2BAAEW,EAA0B,qCAAEE,EAAoC,6BAAEuqG,EAA4B,kBAAEmF,GCDlS,CAACl8J,IAC9B,MAAM,SAAEmhH,EAAQ,gBAAE+hC,EAAe,cAAEC,EAAa,OAAE2V,EAAM,cAAE2D,EAAa,YAAEC,GAAgB18J,EAEnF88J,EAAkBlzE,GAAqB1hC,KAI7C,QAAU40G,EAAiB,sDAC3B,MAAMpb,EAAiB93D,GAAqBxhC,IACtC20G,EAAmBnzE,GAAqBhlC,IACxCo4G,EAAoBpzE,GAAqBz5B,IACzC2mG,EAA0BiG,EAC3Bx3J,OAAO,MACPA,QAAQnB,IAAYwG,EAAexG,KACnCnG,KAAKmG,IACN,IAAIC,EACJ,OAAOzF,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGzC,GAAS,CAAEi+E,iBAAmE,QAAhDh+E,EAAK24J,EAAkB/2J,IAAI7B,EAAO8c,gBAA6B,IAAP7c,OAAgB,EAASA,EAAG6c,QAAQmhE,kBAAmB,IAElL/hF,EAAcspF,GAAqB3yB,IACnC5mC,EAASu5D,GAAqBz+B,IAC9BhkD,EAAUyiF,GAAqB3oC,IAC/Bg8G,EAAkBrzE,GAAqB/oC,IACvCp6B,EAAamjE,GAAqBz9B,IAClCR,EAAYi+B,GAAqBp+B,IACjCgB,EAAuCo9B,GAAqBr9B,IAC5DswG,EAA0BjzE,GAAqBnlB,IAC/CO,EAAmB4kB,GAAqB7kB,IACxCzY,EAA6Bs9B,GAAqBv9B,IAClD0qG,EAA+BntE,GAAqB77B,IACpDmuG,EAAoBtyE,GAAqB2F,IACzC2tE,ECnC6B,GAAG/xE,cAAa1tB,YAAWF,WAAa,CAAC,KAC5E,MAAM4/F,EAAkC5xE,GAA8B,CAClEL,eAAgB,GAChBO,WAAY,8BACZD,aAAc,uCACdjuB,QAAUvoD,IACNuoD,SAAkDA,EAAQvoD,EAAMlH,QAAQlB,MAAM,EAElF6wD,UAAYzoD,IACRyoD,SAAsDA,EAAUzoD,EAAMlH,QAAQi7D,eAAe,EAEjGoiB,YAActuE,IACV,IAAIxY,EACJ8mF,SAA0DA,EAAYtuE,EAAI/O,QAAQi7D,eAAqD,QAApC1kE,EAAKwY,EAAI/O,QAAQ06B,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAAQ,IAW3L,MAAO,CACHumC,QATW,IAAA09C,cAAY,CAACgyE,EAAwBj2J,KAChD,MAAMqhC,EAAgBrhC,GAAW,CAC7BsB,MAAO,gBACP+X,YAAa,GACbrZ,QAAS2wD,GAA6B3wD,IAE1Cg2J,EAAgC/zE,IAAIg0E,EAAwB50H,EAAc,GAC3E,IAGC60H,eAAgBF,EAAgCxwJ,OACnD,EDQ6B2wJ,CAAwB,CAClD7/F,UAAWylF,EACX3lF,QAAS4lF,EACTh4D,YAAag2B,IAIXo8C,EAAwChB,GAAgCU,GACxEO,EAAiCjB,GAAgCp1J,GACjE0wJ,EAAoB,KAAQ0F,EAAuCC,GACnEb,GAA6B,IAAAvxE,cAAY,CAACriB,EAAgB00F,KAI5D,MAAMC,EAAiB7F,OAAoB5zJ,EAAYkD,EACvD+1J,EAAsBxvH,OAAOq7B,EAAgB00F,QAAqDA,EAAgBC,EAAe,GAClI,CAACv2J,EAAS0wJ,IACP8F,EAA+BT,EAAsBG,eACrDO,EEtD2B,GAAGzyE,cAAa1tB,YAAWF,WAAa,CAAC,KAC1E,MAAM4/F,EAAkC5xE,GAA8B,CAClEL,eAAgB,GAChBO,WAAY,8BACZD,aAAc,qCACdjuB,QAAUvoD,IACNuoD,SAAkDA,EAAQvoD,EAAMlH,QAAQlB,MAAM,EAElF6wD,UAAW,KACPA,SAAsDA,GAAW,EAErE0tB,YAActuE,IACVsuE,SAA0DA,EAAYtuE,EAAI/O,QAAQi7D,eAAe,IAMzG,MAAO,CACHnS,MAJS,IAAAw0B,cAAY,CAACyyE,EAAsBn/G,KAC5Cy+G,EAAgC/zE,IAAIy0E,EAAsBn/G,EAAiB,GAC5E,IAGCo/G,aAAcX,EAAgCxwJ,OACjD,EFiC2BoxJ,CAAsB,CAC9CtgG,UAAWg/F,EACXl/F,QAASm/F,EACTvxE,YAAa2tE,IAEX8D,GAA2B,IAAAxxE,cAAY,CAACriB,EAAgBrqB,KAC1Dk/G,EAAoBhnG,KAAKmS,EAAgBrqB,EAAiB,GAC3D,IACGs/G,EAA6BJ,EAAoBE,aACvD,MAAO,CACH1iI,aAAc0hI,EACdpb,iBACAoV,0BACAe,oBACAgF,0BACA73F,mBACA1Y,6BACAE,uCACAuqG,+BACAtwI,aACAklC,YACArrD,cACA+vB,SACA6rI,oBACAS,6BACAgB,+BACAf,2BACAoB,6BACH,ED3EqVC,CAAkB,CACpW98C,WACA+hC,gBAAiBzlF,EACjB0lF,cAAe5lF,EACfu7F,SACA2D,cAAeA,EACfC,YAAaA,IAMjB,OAHI/sD,IACA,QAAUrjD,EAA4B,sGAErCqjD,EAGG,gBAAoB2sD,GAA6B,CAAExE,aAAcA,EAAcznI,OAAQA,EAAQq0C,sBAAuBm4F,EAAyB73F,iBAAkBA,EAAkBxY,qCAAsCA,EAAsCuqG,6BAA8BA,EAA8BtwI,WAAYA,EAAYnmB,YAAaA,EAAa4D,UAAWk3B,EAAcsmH,eAAgBA,EAAgBoV,wBAAyBA,EAAyBe,kBAAmBA,EAAmB12C,SAAUw7C,EAA4B7D,OAAQ8D,EAA0B3oC,SAAUA,EAAU12D,QAASA,EAAS2+F,kBAAmBA,EAAmBz6J,MAAOA,EAAOkqD,UAAWA,IAFxqB,IAEqrB,E,gBIjB7rB,MAAMuyG,WAAe,EAAAz8D,UACxBoL,SACI,MAAMxoG,EAAKnF,KAAKc,OAAO,mBAAEqhJ,EAAkB,QAAEtxC,EAAO,UAAEouD,EAAS,YAAEC,GAAgB/5J,EAAIi9I,GAAc,SAAOj9I,EAAI,CAAC,qBAAsB,UAAW,YAAa,gBAC7J,OAAQ,gBAAoBknI,GAAA,EAAS,CAAEv/B,YAAa,CAC5C,CACIC,MAAO,UAEZu/B,SAAS,EAAME,aAAc,QAAS2V,mBAAoBA,EAAoB8c,UAAWA,EAAWC,YAAaA,EAAaruD,QAASA,GAC1I,gBAAoBsuD,GAAA,EAAYz/J,OAAOiI,OAAO,CAAC,EAAGy6I,IAC1D,E,4BCbG,MCIDgd,GAA4B,CAC9B,CAAEryD,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,IACrC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KAEnCqyD,GAA4B,CAC9B,CAAEtyD,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,IACrC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KAE5BsyD,GAAkBx+J,IAC3B,IAAIqE,EAAIswB,EAAIK,EACZ,MAAM85D,GAAO,EAAAC,GAAA,KACPsc,GAAQ,YACR,eAAEtiC,EAAc,iBAAE01F,EAAgB,SAAE5iC,EAAQ,OAAE6iC,EAAM,uBAAE93F,EAAsB,MAAEnlE,GAAUzB,GACxF,QAAEq6J,EAAO,GAAE7yJ,EAAE,IAAE8xJ,EAAG,YAAEtC,GAAgBjuF,EAEpC41F,EDnBwB,EAAC7vE,EAAMolE,EAAYuK,KACjD,MAAMG,EAAqB1K,EAAWvqJ,OACtC,OAA8B,IAAvBi1J,GAA4B1K,EAAW,KAAOuK,EAC/C3vE,EAAKj/D,cAAc,CAAEzxB,GAAI,mDACzB0wF,EAAKj/D,cAAc,CACjBzxB,GAAI,0CACL,CAAE0xB,EAAG8uI,GAAqB,ECaTC,CAAmB/vE,EADxB,IAAItnF,KAAQ8xJ,QAAiCA,EAAM,IACTmF,GACvDK,EDUqB,CAAC9H,IAC5B,MAAM+H,EAAe/H,EAAYhlI,KAAK,MAChC+pI,EAAoB/E,EAAYzxJ,OAAO,MACvCy5J,EAAejD,EAAkB/pI,MAAMitI,GAAeA,EAAW1yD,QAAQj+E,SAAS,SAClF4wI,EAAgBnD,EAAkB/pI,MAAMitI,GAAeA,EAAW1yD,QAAQj+E,SAAS,UACzF,OAAO,KAAQ,CAACywI,GAAgB,MAAOC,GAAgB,MAAOE,GAAiB,SAAS97J,KAAK,KAAK,ECf7E+7J,CAAgBnI,IAC/B,eAAEoI,EAAc,gBAAEC,GDbK,EAACvwE,EAAMkoE,KACpC,MAAMsI,EAAyBtI,EAAYhlI,KAAK,MAC1CutI,EAA4BvI,EAAYzxJ,OAAO,MAAoBoE,OACzE,OAAI21J,GAA0BC,EACnB,CACHH,eAAgB1zD,GAAA,OAChB2zD,gBAAiBvwE,EAAKj/D,cAAc,CAAEzxB,GAAI,iDAAmD,CAAE0xB,EAAGyvI,KAGjGA,EACE,CACHH,eAAgB1zD,GAAA,UAChB2zD,gBAAiBvwE,EAAKj/D,cAAc,CAAEzxB,GAAI,mDAAqD,CAAE0xB,EAAGyvI,KAIjG,CACHH,eAAgB1zD,GAAA,YAChB2zD,gBAAiBvwE,EAAKj/D,cAAc,CAAEzxB,GAAI,sDAElD,ECP4CohK,CAAkB1wE,EAAMkoE,GAC9DyI,EAAW,GAAGd,OAAqBU,OAAqBP,IACxDY,GAAc,IAAAt0E,cAAY,KACxBxkB,GACA83F,EAAO31F,EAAgBtnE,EAC3B,GACD,CAACsnE,EAAgBnC,EAAwBnlE,IAC5C,OAAQ,gBAAoB,MAAO,CAAEwmG,UAAW,KAAG,qBAAsB,oBAAqB,CAAE03D,SAAU/4F,KACtG,gBAAoB,MAAO,CAAEqhC,UAAW,6BACpC,gBAAoBuD,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GAC/D,gBAAoB,OAAQ,CAAEriB,UAAW,+DAAgE8H,QAAS,IAAM8rB,EAAS9yD,KACjI,gBAAoBgjC,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAasyD,IACpE,gBAAoB,KAAkB,CAAElgK,GAAI,0CACxD,gBAAoB,MAAO,CAAE6pG,UAAW,6BAA8B8H,QAAS2vD,GAC3E,gBAAoB,MAAO,CAAEz3D,UAAW,2BACpC,gBAAoBm3D,EAAgB,CAAEzzD,MAA6L,QAArL32E,EAAyI,QAAnIL,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGu7H,UAAuB,IAAPl7H,EAAgBA,ECtC5O,UDsCkQ5T,MAAO,GAAIC,OAAQ,MACxS,gBAAoB,MAAO,CAAE4mF,UAAW,mCACpC,gBAAoB,MAAO,CAAEA,UAAW,4BACpC,gBAAoB,SAAU,KAC1B,gBAAoByhB,GAAe,CAAEzhB,UAAW,oCAAqCuiB,mBAAoB+zC,IAA6BlE,KAC9I,gBAAoB,MAAO,KACvB,gBAAoB,OAAQ,CAAEpyD,UAAW,+BACrC,gBAAoByhB,GAAe,CAAEzhB,UAAW,oCAAqCuiB,mBAAoB+zC,IAA6BkB,OAAe,EEzChKG,GAAmB5/J,IAC5B,IAAIqE,EAAIswB,EACR,MAAM,UAAEgvB,EAAS,gBAAEk8G,EAAe,iBAAEpB,EAAgB,SAAE5iC,EAAQ,OAAE6iC,EAAM,qBAAEoB,EAAoB,uBAAEl5F,EAAsB,MAAEnlE,GAAWzB,EAC3HqrG,GAAQ,WACd,OAAI1nD,EACQ,gBAAoB,MAAO,CAAEskD,UAAW,6BAC5C,gBAAoB,MAAO,CAAEA,UAAW,kDACpC,gBAAoB83D,GAAA,EAAgB,CAAE93D,UAAW,qCAAsC0D,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGqrI,OAEnP,IAA3BH,EAAgBl2J,OACR,gBAAoB,MAAO,CAAEs+F,UAAW,sDAC5C,gBAAoB,KAAkB,CAAE7pG,GAAI0hK,EAAsBt5J,OAAQ,CAAEy5J,GAAI,gBAAoB,KAAM,UAE1G,gBAAoB,WAAgB,KAAMJ,EAAgB5hK,KAAK8qE,GAAoB,gBAAoBy1F,GAAgB,CAAEt4J,IAAK6iE,EAAevmE,WAAYumE,eAAgBA,EAAgB01F,iBAAkBA,EAAkB5iC,SAAUA,EAAU6iC,OAAQA,EAAQj9J,MAAOA,EAAOmlE,uBAAwBA,MAA6B,ECdnUs5F,GAA+BlgK,IACxC,MAAM,eAAE+oE,EAAc,SAAEkrD,EAAQ,UAAEx2D,EAAS,QAAEF,GAAYv9D,GACnD,IAAEyC,EAAG,QAAE43J,GAAYtxF,EACnBkqE,GAAmB,UACnBmjB,GAAqB,UACrBtnE,GAAO,EAAAC,GAAA,KAUb,OAAQ,gBAAoBqyD,GAAe,CAAE+e,oBAAoB,EAAMt1B,YAAY,EAAO5uB,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,8CAAgD0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa+iH,SAT3Pr/G,UAC9B,UACUmxI,EAAiB1yI,UAAU61J,GAAoBj1J,aAAai/J,oBAAoB39J,GACtFg7D,SAAsDA,GAC1D,CACA,MAAO1nD,GACHwnD,SAAkDA,EAAQxnD,EAC9D,GAE8Tg1F,QAASkpB,EAAUA,SAAUA,EAAUhsB,UAAW,mEAAoEo5C,mBAAoB,4CACxc,gBAAoB,OAAQ,CAAEp5C,UAAW,2CACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,oDAAqDoI,OAAQ,CACjG4xB,EAAIo3G,GAAY,gBAAoB,OAAQ,CAAEvnC,UAAW,yCACrDunC,EACA,IACA,gBAAoB,SAAU,KAAM6qB,QACrC,ECdVgG,GAAkCrgK,IAC3C,MAAM,MAAE4lI,EAAK,OAAE84B,EAAQ4B,gBAAiBzkC,EAAQ,QAAE9wB,EAAO,YAAEw1D,EAAW,cAAEC,GAAkBxgK,GACnFygK,EAAwBC,IAA6B,IAAA12E,UAAS,OAC9DrmC,EAAW2jF,IAAgB,IAAAt9C,WAAS,IACpC22E,EAAuBC,IAA4B,IAAA52E,UAAS,KAC5D61E,EAAiBgB,IAAsB,IAAA72E,UAAS,KAChDk3C,EAAeC,IAAoB,IAAAn3C,UAAS,kCAC5C82E,EAAeC,IAAoB,IAAA/2E,WAAS,IAC5CvoF,EAAOq0F,IAAY,IAAA9L,UAAS,IAC7BpjB,EAAyBgjB,GAAqBjjB,IAC9CrmE,EAAcspF,GAAqB3yB,IACnC63B,GAAO,EAAAC,GAAA,KACPiyE,GAAgB,IAAA51E,cAAa61E,IAC/B,MAAM,gBAAEpB,EAAe,MAAEp+J,GAAUw/J,EAC7BC,EAAerB,EAAgBt6J,QAAQwjE,IAAqB,IAAI1kE,EAAI,OAAO,QAAgB/D,EAAYmC,IAAyC,QAAnC4B,EAAK0kE,EAAepR,iBAA8B,IAAPtzD,OAAgB,EAASA,EAAG5B,IAAI,IAC9L6kI,GAAa,GACbu5B,EAAmBhB,GACnBe,EAAyBh6F,EAAyBs6F,EAAerB,GACjE/pE,EAASr0F,GACLq/J,IAC4B,IAAxBI,EAAav3J,QAAgBi9D,GAC7Bu6D,EAAiB,gCAErB4/B,GAAiB,GACrB,GACD,IACGI,GAAuB,IAAA/1E,cAAariB,IACtC23F,EAA0B33F,EAAe,GAC1C,IACGq4F,GAAqB,IAAAh2E,cAAY,CAACriB,EAAgBtnE,KACpDi9J,SAAgDA,EAAO31F,EAAgBtnE,EAAM,GAC9E,IACG4/J,GAA8B,IAAAj2E,cAAY,KAC5CywC,SAAoDA,IACpD6kC,EAA0B,MAC1Bp5B,GAAa,EAAK,GACnB,IACGg6B,GAAkB,IAAAl2E,cAAa1tC,IACjCyjF,EAAiBzjF,EAAIt/C,GAAG,GACzB,ICjDoC,CAAC4B,IACxC,MAAM,QAAEu9D,EAAO,UAAEE,EAAS,mBAAE8jG,GAAuBvhK,EAC7Co7B,EAAewuD,GAAqB9hC,IACpC8e,EAAyBgjB,GAAqBjjB,IAC9CssE,GAAmB,UACnBmjB,GAAqB,UACrBoL,EAAoBD,EACpBz/J,UACE,MAAM+9J,QAAwB5sB,EACzB1yI,UAAU61J,GACVj1J,aACAsgK,8BAA8BrmI,EAAc,CAC7CikB,aAAcunB,EACd86F,sBAAuB96F,IAErBnlE,EAAQmlE,QACFqsE,EAAiB1yI,UAAU61J,GAAoB30J,QAAQ40J,WAC7D,GACN,MAAO,CAAEwJ,gBAAiBA,EAAgBp9I,UAAWhhB,QAAO,EAE9D,MACC,QAAqB,CAAEm8D,QAAS4jG,EAAmBjkG,UAASE,aAAa,CAC5Ew1E,EACAmjB,EACAxvF,EACAxrC,EACAmmI,GACF,EDuBFI,CAA4B,CACxBJ,mBAAoB59G,EACpB4Z,QAASgjG,EACT9iG,UAAWujG,IAEf,MAAMlB,EAAuB5+B,IAAkB,+BACzC,oCACA,0CACN,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBg9B,GAAQ,CAAEiC,oBAAoB,EAAMlsC,SAAUlpB,EAAS9C,UAAW,4EAClF,gBAAoB,MAAO,CAAEA,UAAW,8CACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,oBACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,yCACnD0iK,GAAiBl6F,EAA0B,gBAAoBg7F,GAAA,EAAM,CAAE35D,UAAW,4CAA6CxqD,KAAM,CAAC,6BAAoC,6BAAoCyjF,cAAeA,EAAe4B,YAAaw+B,IAAsB,KAChR,gBAAoB,MAAO,CAAEr5D,UAAW,+BACpC,gBAAoB23D,GAAiB,CAAE/jC,SAAUslC,EAAsBzC,OAAQ0C,EAAoBz9G,UAAWA,EAAWk8G,gBAAiB3+B,IAAkB,+BAClJ2+B,EACAc,EAAuBlC,iBAAkBn+J,aAAiD,EAASA,EAAY4kJ,MAAO4a,qBAAsBA,EAAsBl5F,uBAAwBA,EAAwBnlE,MAAOA,KACvO,gBAAoB,MAAO,CAAEwmG,UAAW,uBACxC,gBAAoB,MAAO,CAAEA,UAAW,cACpC,gBAAoB+zB,GAAA,EAAQ,CAAEjsB,QAAS61B,EAAO39B,UAAW,iDAAkDk0B,SAAU,eAAgBlyH,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,8CACrK,gBAAoB49H,GAAA,EAAQ,CAAEjsB,QAAShF,EAAS9C,UAAW,qCAAsCh+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,cACzIqiK,EAA0B,gBAAoBP,GAA6B,CAAEn3F,eAAgB03F,EAAwBxsC,SAAU,IAAMysC,EAA0B,MAAOjjG,UAAW4jG,EAA6B9jG,QAASijG,IAAoB,KAAM,EEtE5OqB,GAAiB,IAClB,gBAAoB,MAAO,KAC/B,gBAAoB,MAAO,CAAE55D,UAAW,qCCCnC65D,GAAwB9hK,IACjC,MAAM,WAAE41J,EAAU,QAAE7lD,GAAY/vG,EAC1B+hK,EAAmB,KAAG,CACxB7/C,SAAU0zC,GACX,YAAa,iBAAkB,eAAgB,yBAC5C8J,GAAc,IAAAt0E,cAAa5sF,IAC7BA,EAAEyvH,iBACE2nC,GAGJ7lD,GAAS,GACV,CAAC6lD,EAAY7lD,IAChB,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoBvE,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GAC/D,gBAAoB,IAAK,CAAEriB,UAAW85D,EAAkBjjH,OAAQ,SAAUwqF,IAAK,sBAAuBv5B,QAAS2vD,GAC3G,gBAAoB,KAAkB,CAAEthK,GAAI,mCAChD,gBAAoB2tG,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,CAAC,CAAEC,MAAO,WAC9E,gBAAoB,KAAkB,CAAE7tG,GAAI,yCAA2C,ECrB1F4jK,GAAiBp+J,IAClB,IAAQA,IAAqB,SAAbA,EAAIgB,KAKnBq9J,GAAyBr+J,IAC1B,IAAQA,IAAqB,iBAAbA,EAAIgB,KAKnBs9J,GAAyBt+J,IAC1B,IAAQA,IAAqB,mBAAbA,EAAIgB,KAKnBu9J,GAAkBv+J,IACnB,IAAQA,IAAqB,UAAbA,EAAIgB,KAKnBw9J,GAA0Bx+J,IAC3B,IAAQA,IAAqB,kBAAbA,EAAIgB,KAKnBy9J,GAAqBz+J,GACvBq+J,GAAsBr+J,IAAQw+J,GAAuBx+J,GAKnD0+J,GAAqB1+J,IACtB,IAAQA,IAAqB,aAAbA,EAAIgB,KAKnB29J,GAAiB3+J,IACjB,IAAQA,KACZ0+J,GAAkB1+J,IAAQu+J,GAAev+J,IAAQs+J,GAAsBt+J,IAAQo+J,GAAcp+J,I,2BCxC/F,MAIM4+J,GAAkB,CAC3BpkK,IAAI,QALoB,YAMxBwG,KAAM,YASG69J,GAAgB,CACzBrkK,IAAI,QALyB,kBAM7BwG,KAAM,kBAWG89J,GAAkB,CAACC,EAAS7zE,IAChB,SAAjB6zE,EAAQ/9J,MAAoC,iBAAjB+9J,EAAQ/9J,KAC/B+9J,EAAQC,cACD9zE,EAAKj/D,cAAc,CAAEzxB,GAAI,sCAAwC,CAAEykK,SAAUF,EAAQtnJ,OAEzFsnJ,EAAQtnJ,KAEO,UAAjBsnJ,EAAQ/9J,MAAqC,kBAAjB+9J,EAAQ/9J,KAClC+9J,EAAQtnJ,KAEO,aAAjBsnJ,EAAQ/9J,KACNkqF,EAAKj/D,cAAc,CAAEzxB,GAAI,4CAEV,mBAAjBukK,EAAQ/9J,KACNkqF,EAAKj/D,cAAc,CAAEzxB,GAAI,qDApBhB,CAAC0kK,IACrB,MAAM,IAAIrkK,MAAM,uBAAuB,EAsBnCskK,GAMKC,GAAsBl0E,GAAS,CAACm0E,EAAUC,KACnD,MAAMC,EAAQT,GAAgBO,EAAUn0E,GAAMqiE,cACxCiS,EAAQV,GAAgBQ,EAAUp0E,GAAMqiE,cAC9C,OAAOgS,EAAQC,GAAS,EAAID,EAAQC,EAAQ,EAAI,CAAC,EAgBxCC,GAAmB,CAAC94J,EAAO+4J,IAC7B,KAAe/4J,EAAO+4J,GAAY,CAACC,EAAGC,KAAO,QAAgBD,EAAEnlK,GAAIolK,EAAGplK,MAKpEqlK,GAAel5J,GACjBA,EAAMynB,MAAMuxI,IAAM,QAAgBA,EAAEnlK,GAAIokK,GAAgBpkK,MAKtDslK,GAAqB,CAACnrG,EAAUF,EAAeC,IAEjD,IADa+qG,GAAiB9qG,EAAUD,MACpBD,GAKlBsrG,GAAuB,CAAChB,EAASiB,KAC1C,MAAMC,EAAcD,EAAS,GAAGA,KAAY,GACtCxlK,GAAK,EAAAiM,EAAA,IAAes4J,EAAQvkK,IAAI0E,MAAM,KAAKwa,MACjD,MAAO,wBAAwBumJ,IAAc9+C,GAAA,GAAyB3mH,IAAK,EAkClE0lK,GAA0B,CAACC,EAAYzjK,KACxC,QAAgByjK,EAAYzjK,EAAYmC,OAAQ,QAAgBshK,GAAY,QAAMzjK,EAAYihI,QC/HpGyiC,GAAgB,gBANA,CAClBC,gBAAiB,oBACjBC,kBAAmB,sBACnBC,2BAA4B,gCAC5BC,2BAA4B,kCAMnBC,GAA4B,KAAM,IAAAh4J,YAAW23J,IAI7CM,GAA2BtkK,IACpC,MAAM,SAAEuM,EAAQ,OAAEg4J,GAAWvkK,EAC7B,OAAO,gBAAoBgkK,GAAcv3J,SAAU,CAAExC,MAAOs6J,GAAUh4J,EAAS,ECb7E,GAAc,CAAC,CAAE0/F,MAAO,UACjBu4D,GAAkB,IACnB,gBAAoB,MAAO,CAAEv8D,UAAW,wCAC5C,gBAAoB,OAAQ,CAAEA,UAAW,yEAEpCw8D,GAA0B,IAC3B,gBAAoB,MAAO,CAAEx8D,UAAW,wCAC5C,gBAAoB,OAAQ,CAAEA,UAAW,kFAEpCy8D,GAAmB,IACpB,gBAAoB,MAAO,CAAEz8D,UAAW,wCAC5C,gBAAoB,OAAQ,CAAEA,UAAW,0EAEpC08D,GAAqB3kK,IAC9B,MAAM,QAAE+vG,EAAO,KAAE1oD,GAASrnD,EACpBukK,EAASF,KACf,OAAQ,gBAAoB74D,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,EAAGriB,UAAW,0BACrF,gBAAoB,OAAQ,CAAEA,UAAW,iGAAkG8H,QAASA,EAAS,aAAc,gCAC3K,gBAAoBhE,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IAAwB,iBAAT3kD,EAA2B,gBAAoB,WAAgB,KAClJ,IACAk9G,EAAOJ,2BACP,KAAS,gBAAoB,KAAkB,CAAE/lK,GAAI,qDAAwD,EAE5GwmK,GAAyB,KAClC,MAAML,EAASF,KACf,OAAQ,gBAAoB74D,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,EAAGriB,UAAW,gCACrF,gBAAoB,OAAQ,CAAEA,UAAW,8EACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,4CAChD,gBAAoB2tG,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IAAeu4D,EAAOH,4BAA6B,E,gBCxB5H,SAASS,GAAWC,GAavB,OAZyB9kK,IACrB,MAAM,WAAE+kK,GAAa,EAAI,YAAE/4D,EAAc,CAAC,CAAEC,MAAO,UAAU,aAAE+4D,EAAY,iBAAEC,GAAqBjlK,EAAOklK,GAAwB,SAAOllK,EAAO,CAAC,aAAc,cAAe,eAAgB,qBACvL8uF,GAAO,EAAAC,GAAA,KACb,IAAKg2E,IAAeC,EAChB,OAAO,gBAAoBF,EAAkBlmK,OAAOiI,OAAO,CAAC,EAAG7G,IAEnE,MAAMmlK,EAAar2E,EAAKj/D,cAAc,CAAEzxB,GAAI4mK,IAC5C,OAAQ,gBAAoBx5D,GAAA,GAAoB,CAAEvD,UAAWg9D,GACzD,gBAAoBH,EAAkBlmK,OAAOiI,OAAO,CAAC,EAAGq+J,IACxD,gBAAoBn5D,GAAA,GAAQ,CAAEC,YAAaA,GACvC,gBAAoB,MAAO,KAAMm5D,IAAc,CAG/D,CCjBA,MAoBaC,GAAyCP,IApBjB,EAAGQ,aAAY1C,UAAS2C,qBAAoB/3C,iBAAgBg4C,8BAA6Bx8C,eAC1H,MAAMj6B,GAAO,EAAAC,GAAA,KACPilE,GAAiB,IAAA5oE,cAAai6E,IAChC93C,IACI83C,EAAWjnK,KAAOknK,IAClBC,EAA4BF,EAAWjnK,IACvC2qH,EAASnqH,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG87J,GAAU,CAAEnhK,YAAa,CAAC6jK,EAAWjnK,OAClF,GACD,CAACukK,EAASp1C,EAAgBg4C,EAA6Bx8C,EAAUu8C,IAC9DjuE,GAAa,IAAA7qF,UAAQ,IAAM64J,EAAWjnK,KAAOknK,GAAoB,CAACD,EAAYC,IACpF,OAAQ,gBAAoB,MAAO,CAAEv1D,QAAS,KAClCs1D,EAAWr1C,SACXgkC,EAAeqR,EACnB,EACDp9D,UAAW,KAAG,eAAgB,eAAgB,qCAAsC,6BAA8B,CACjH,eAAgBo9D,EAAWr1C,QAC3B,cAAe34B,KAEnB,gBAAoB,MAAO,KAAMvI,EAAKj/D,cAAc,MAAgCw1I,EAAWjnK,MAAO,I,gBClB9G,MAAMonK,GAAiB,CACnBC,cAAe,IACfnlK,iBAAa2D,GAEXyhK,GAA8B,gBAAoBF,IAQ3CG,GAAgC3lK,IACzC,MAAM,SAAEuM,EAAQ,cAAEk5J,EAAa,YAAEnlK,EAAW,uBAAEslK,EAAsB,8BAAEC,EAA6B,qBAAEC,EAAoB,mBAAEC,GAAwB/lK,EAC7IgmK,GAAS,IAAAx5J,UAAQ,KAAM,UAAU,IACjCy5J,GAAwB,IAAAz5J,UAAQ,KAAM05J,OL2FSC,EK3FgCP,GL4FjEQ,uBAAyBD,EAAgBE,4BAClD,OAEFF,EAAgBG,wBAA0BH,EAAgBI,6BACxD,QAEFJ,EAAgBK,sBACd,YAGP,EAXgD,IAACL,CK3FuD,GAAE,CAACP,IACzGa,GAAoB,IAAAr7E,cAAanqE,IACnCwkJ,EAAc7mK,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGoa,GAAO,CAAE+kJ,SACnDC,wBACAH,uBACAC,qBACAF,kCAAiC,GACtC,CACCJ,EACAO,EACAC,EACAH,EACAC,EACAF,IAEJ,OAAQ,gBAAoBH,GAA4Bj5J,SAAU,CAAExC,MAAO,CACnEw7J,cAAegB,EACfnmK,gBACCiM,EAAU,EAEVm6J,GAA4B,KACrC,MAAM,cAAEjB,EAAa,YAAEnlK,IA5ByB,IAAA+L,YAAWq5J,IAqF3D,MAAO,CACHiB,iBAzDoB,IAAAv7E,cAAY,IAAMq6E,EAAc,CACpD7gK,KAAM,yBACN,CAAC6gK,IAwDDmB,kBAvDqB,IAAAx7E,cAAY,IAAMq6E,EAAc,CACrD7gK,KAAM,yBACN,CAAC6gK,IAsDDoB,iBArDoB,IAAAz7E,cAAY,IAAMq6E,EAAc,CACpD7gK,KAAM,wBACN,CAAC6gK,IAoDDqB,oCAnDuC,IAAA17E,cAAY,CAACu3E,EAASoE,EAAmBC,KAC3E3E,GAAkBM,IAGvB8C,EAAc,CACV7gK,KAAM,2CACNqiK,0BAA2BnD,GAAwBnB,EAAQvkK,GAAIkC,GAC/DymK,oBACAG,YAAajF,GAAsBU,GAAW,OAAS,QACvDqE,8BACF,GACH,CAACvB,EAAenlK,IAyCf6mK,8BAxCiC,IAAA/7E,cAAY,CAACu3E,EAASoE,EAAmBC,EAA4BI,KACjG/E,GAAkBM,IAGvB8C,EAAc,CACV7gK,KAAM,mCACNqiK,0BAA2BnD,GAAwBnB,EAAQvkK,GAAIkC,GAC/DymK,oBACAG,YAAajF,GAAsBU,GAAW,OAAS,QACvDqE,6BACAI,4BACF,GACH,CAAC3B,EAAenlK,IA6Bf+mK,8BA5BiC,IAAAj8E,cAAY,CAACu3E,EAASoE,EAAmBC,KACrE3E,GAAkBM,IAGvB8C,EAAc,CACV7gK,KAAM,+BACNqiK,0BAA2BnD,GAAwBnB,EAAQvkK,GAAIkC,GAC/DymK,oBACAG,YAAajF,GAAsBU,GAAW,OAAS,QACvDqE,8BACF,GACH,CAACvB,EAAenlK,IAkBfgnK,uBAjB0B,IAAAl8E,cAAau3E,IAClCN,GAAkBM,IAGvB8C,EAAc,CACV7gK,KAAM,6BACNsiK,YAAajF,GAAsBU,GAAW,OAAS,SACzD,GACH,CAAC8C,IAUA8B,qCATwC,IAAAn8E,cAAao8E,GAA8B/B,EAAc,CAAE7gK,KAAM,6CAA8C4iK,+BAA8B,CAAC/B,IAUzL,EClGCgC,GAAqB,CAAC,CAAEx7D,MAAO,UAC/By7D,GAAa,EAAGxlD,WAAUylD,YAAW53D,cACvC,MAAM9H,EAAY,KAAG,4BAA6B,+BAAgC,CAC9E,cAAeia,IAEb0lD,EAA6B/C,GAAW,MAC9C,OAAQ,gBAAoB,MAAO,CAAE58D,UAAWA,EAAW8H,QAASA,GAChE,gBAAoB63D,EAA4B,CAAExpK,GAAI,gBAA2C2mK,WAAY7iD,EAAU8iD,aAAc2C,IAAc,EAE9IE,GAAkC,EAAGlF,UAASmF,uBAAsBtjD,UAASujD,iBAAgBzC,qBAAoB/3C,iBAAgBxE,WAAU8S,WAAU0pC,8BAA6Bl+G,WAC3L,MAAM,6BAAE8/G,EAA4B,6BAAEE,GAAiCX,KACjEsB,GAAiB,IAAA58E,cAAY,KAC/B,GAAI08E,EAAqBprF,OAAOszC,QAAS,CACrC,MAAMi4C,EAAiBrpK,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG87J,GAAU,CAAEnhK,YAAa,GAAI0mK,qBAAsB,KAC1GrsC,EAASosC,GACTZ,EAA6B1E,EAAkB,iBAATt7G,EAAyBygH,EAAqBjhK,OAAOshK,WAC3F56C,GACJ,IACD,CAACo1C,EAAS9mC,EAAUtO,EAAgBlmE,EAAMygH,EAAsBT,IAC7DrT,GAAiB,IAAA5oE,cAAa68E,IAChCd,EAA6BxE,EAAkB,iBAATt7G,EAAyBygH,EAAqBjhK,OAAOshK,UAAWF,EAAezmK,YAAY,IACjIunH,EAASk/C,EAAe,GACzB,CAACtF,EAAS55C,EAAU1hE,EAAMygH,EAAsBX,IACnD,OAAKY,EAGG,gBAAoBx8B,GAAA,EAAS,CAAErlI,IAAK,4BAA6Bs+G,QAAS,IAAIA,IAAWxY,YAAay7D,GAAoBx/D,UAAW,iCAAkC0lB,kBAAkB,EAAMrJ,qBAAqB,EAAMC,qBAAqB,EAAMxZ,QAASwiB,GAClQ,gBAAoB,MAAc,CAAE66C,mBAAmB,GACnDN,EAAqBjhK,OAAOrC,MAAMvG,KAAKoqK,IAC1BA,EAAelgE,QAAW,gBAAoBi9D,GAAwC,CAAEzC,QAASA,EAASz8J,IAAKmiK,EAAejqK,GAAIinK,WAAYgD,EAAgB/C,mBAAoBA,EAAoB/3C,eAAgBA,EAAgBxE,SAAUirC,EAAgBuR,4BAA6BA,EAA6BP,aAAcqD,EAAetmD,QAASgjD,YAAasD,EAAer4C,YAEzY,gBAAoB,MAAW,MAC/B,gBAAoB03C,GAAY,CAAExlD,UAAW4lD,EAAqBprF,OAAOszC,QAASjgB,QAASi4D,EAAgBL,UAAWG,EAAqBprF,OAAOqlC,YAR/I,IAQ4J,ECV9JumD,GAAwCzD,IAxBV,EAAGlC,UAASmF,uBAAsBS,qBAAoBC,iBAAgBj7C,iBAAgBxE,WAAU8S,WAAU5zB,YAAW5gD,WAC5J,MAAMynC,GAAO,EAAAC,GAAA,MACNu2E,EAAoBmD,IAAyB,IAAAz+E,UAAS89E,EAAqBjhK,OAAOshK,WAInFzI,GAAc,IAAAt0E,cAAY,KACvBm9E,GACDh7C,GACJ,GACD,CAACg7C,EAAoBh7C,IAClBm7C,EPsFmC,CAAC/F,IAC1C,MAAMvkK,GAAK,EAAAiM,EAAA,IAAes4J,EAAQvkK,IAAI0E,MAAM,KAAKwa,MACjD,MAAO,+BAA+BynG,GAAA,GAAyB3mH,IAAK,EOxFnCuqK,CAA8BhG,GACzDl1C,EAAc3+B,EAAKj/D,cAAc,MAAgCy1I,IACvE,OAAQ,gBAAoB,MAAO,CAAEr9D,UAAWA,GAC5C,gBAAoB,MAAO,CAAEA,UAAW,KAAG,+BAAgC,gCAAiC,kBAAmBygE,EAA0B,CACjJ,YAAaF,EACb,sBAAuBD,GAAsBC,EAC7C,wBAAyBD,IAAuBC,EAChDtmD,SAAUqmD,EACV,iBAAkBA,IAClBx4D,QAAS2vD,EAAa,aAAc,4CACxC,gBAAoB,MAAO,CAAEz3D,UAAW,0EAA4EwlB,IACxH,gBAAoBo6C,GAAiC,CAAErjD,QAASkkD,EAA0B/F,QAASA,EAASmF,qBAAsBA,EAAsBv6C,eAAgBA,EAAgBw6C,eAAgBS,EAAgBz/C,SAAUA,EAAU8S,SAAUA,EAAUypC,mBAAoBA,EAAoBC,4BAnBvQF,IACjCoD,EAAsBpD,EAAW,EAkBiUh+G,KAAMA,IAAS,IC5B5WuhH,GAA8B,KACvC,MAAOxmE,EAAQM,IAAa,IAAA1Y,WAAS,GAC/B6+E,GAAa,IAAAz9E,cAAY,IAAMsX,GAAWN,IAAS,CAACA,IAC1D,MAAO,CAAEomE,eAAgBpmE,EAAQmrB,eAAgBs7C,EAAY,ECD3DC,GAAuB,CAAC,OAAQ,QAAS,QAUzCC,GAAqB,CAACC,EAAajnD,KACrCinD,EAAYh5C,SAAU,EACtBg5C,EAAYjnD,QAAUA,CAAO,EAgCpBknD,GAA0B,CAACtG,EAASiD,EAAwBE,KACrE,MAAMkB,EA5C4B,EAACxlK,EAAa0mK,EAAsBpC,KACtE,MAAMoD,EAAqB,IAAI1nK,KAAgB0mK,GACzCiB,EAAsBL,GAAqBrjK,MAAM4/J,GAAe6D,EAAmB56I,SAAS+2I,KAElG,OADA,QAAU8D,EAAqB,uDAC3BrD,GAAgD,SAAxBqD,EACjB,QAEJA,CAAmB,EAqCSC,CAAuBzG,EAAQnhK,YAAamhK,EAAQuF,qBAAsBpC,GAEvGppF,EAAS,CACXszC,SAAS,EACTjO,QAAS,IAGPsnD,EAAS,CACXr5C,SAAS,EACTjO,QAAS,IAGPunD,EA3CqB,EAAC3G,EAASiD,EAAwBE,IACtDgD,GAAqB7qK,KAAI,CAAConK,EAAYkE,KACzC,MAAMxkK,EAAO,CACT3G,GAAIinK,EACJr1C,SAAS,EACTjO,QAAS,GACT5Z,QAAQ,GAqBZ,OAlBoB,SAAfk9D,IAA0BO,EAAuBQ,uBAClC,UAAff,IAA2BO,EAAuBU,yBAClDV,EAAuBY,wBACxBuC,GAAmBhkK,EAAM,gEAGV,SAAfsgK,GAAyBS,IACzB/gK,EAAKojG,QAAS,GAGlBw6D,EAAQuF,qBAAqBtiK,SAAS4jK,IAClC,MAAMC,EAA2BX,GAAqB7tH,QAAQuuH,GAC1DD,EAAkBE,GAClBV,GAAmBhkK,EAAMk9J,GAAsBU,GACzC,iCACA,kCACV,IAEG59J,CAAI,IAgBa2kK,CAAuB/G,EAASiD,EAAwBE,GAEpF,GAAoC,SAA/BkB,IAA0CpB,EAAuBQ,uBAClC,UAA/BY,IAA2CpB,EAAuBU,uBAAyB,CAC5F,MAAMqB,EAAY1F,GAAsBU,GAClC,mCACA,oCACNoG,GAAmBM,EAAQ1B,GAC3BoB,GAAmBrsF,EAAQirF,EAC/B,CAeA,OAbmC,IAA/BhF,EAAQnhK,YAAYmI,QAAwD,IAAxCg5J,EAAQuF,qBAAqBv+J,QACjEo/J,GAAmBrsF,EAAQulF,GAAsBU,GAC3C,uCACA,yCAGN0G,EAAOr5C,UACNtzC,EAAOszC,SACRs5C,EAAoB/zI,OAAOxwB,IAAUA,EAAKirH,SAAWjrH,EAAKojG,QAAUpjG,EAAK3G,KAAO4oK,KAChF+B,GAAmBM,EAAQpH,GAAsBU,GAC3C,kCACA,oCAEH,CACHjmF,SACA71E,OAAQ,CACJrC,MAAO8kK,EACPnB,UAAWnB,GAEfqC,SACH,EClFQM,GAA2B3pK,IACpC,MAAM,QAAE2iK,EAAO,uBAAEiD,EAAsB,qBAAEE,EAAoB,SAAE/8C,EAAQ,SAAE8S,EAAQ,KAAEx0E,GAASrnD,GACtF,MAAEklJ,GAAUyd,GACZ,eAAE6F,EAAc,eAAEj7C,GAAmBq7C,MACrC,mCAAE9B,GAAuCJ,KACzC53E,GAAO,EAAAC,GAAA,KACP66E,EAAgB,KAAG,CAAE,8BAA+BjH,EAAQC,eAAiB,8BAA+B,+BAAgCe,GAAqBhB,GAAU,CAAE,YAAa6F,IAC1L9jC,GAAQ,IAAAl4H,UAAQ,IACXk2J,GAAgBC,EAAS7zE,IACjC,CAAC6zE,EAAS7zE,IACP+6E,GAAiB,IAAAr9J,UAAQ,IAAM04I,GAASA,IAAUxgB,GAAO,CAACwgB,EAAOxgB,IACjEojC,GAAuB,IAAAt7J,UAAQ,IAAMy8J,GAAwBtG,EAASiD,EAAwBE,IAAuB,CAACnD,EAASiD,EAAwBE,IACvJgE,GAAuB,IAAA1+E,cAAY,KACrCmiC,IACKi7C,GACD1B,EAAmCnE,EAAkB,iBAATt7G,EAAyBygH,EAAqBjhK,OAAOshK,UACrG,GACD,CACC56C,EACAi7C,EACA7F,EACAt7G,EACAy/G,EACAgB,IAEJ,OAAQ,gBAAoB,MAAO,CAAE7/D,UAAW2hE,GAC5C,gBAAoBtB,GAAuC,CAAE3F,QAASA,EAASmF,qBAAsBA,EAAsBU,eAAgBA,EAAgBj7C,eAAgBu8C,EAAsB/gD,SAAUA,EAAU8S,SAAUA,EAAU0sC,oBAAqBT,EAAqBuB,OAAOr5C,QAASg1C,aAAc8C,EAAqBuB,OAAOtnD,QAAS9Z,UAAW,iCAAkCg9D,iBAAkB,gDAAiD59G,KAAMA,IAC5c,gBAAoB,MAAO,CAAE4gD,UAAW,sBACpC,gBAAoB,MAAO,CAAEA,UAAW,4BAA8By8B,GACtEmlC,EAAkB,gBAAoB,MAAO,CAAE5hE,UAAW,qDAAuDi9C,GAAU,MAC/H,gBAAoBsf,GAAiB,MAAO,EC9BvCuF,GAA4B/pK,IACrC,MAAM,QAAE2iK,EAAO,uBAAEiD,EAAsB,qBAAEE,EAAoB,SAAE/8C,EAAQ,SAAE8S,EAAQ,KAAEx0E,GAASrnD,GACtF,eAAEwoK,EAAc,eAAEj7C,GAAmBq7C,MACrC,mCAAE9B,GAAuCJ,KACzC53E,GAAO,EAAAC,GAAA,KACP66E,EAAgB,KAAG,8BAA+B,+BAAgCjG,GAAqBhB,GAAU,CACnH,YAAa6F,IAEX9jC,GAAQ,IAAAl4H,UAAQ,IAAMk2J,GAAgBC,EAAS7zE,IAAO,CAAC6zE,EAAS7zE,IAChEg5E,GAAuB,IAAAt7J,UAAQ,IAAMy8J,GAAwBtG,EAASiD,EAAwBE,IAAuB,CAACnD,EAASiD,EAAwBE,IACvJgE,GAAuB,IAAA1+E,cAAY,KACrCmiC,IACKi7C,GACD1B,EAAmCnE,EAAkB,iBAATt7G,EAAyBygH,EAAqBjhK,OAAOshK,UACrG,GACD,CACC56C,EACAi7C,EACA7F,EACAt7G,EACAy/G,EACAgB,IAEJ,OAAQ,gBAAoB,MAAO,CAAE7/D,UAAW2hE,GAC5C,gBAAoBtB,GAAuC,CAAE3F,QAASA,EAASmF,qBAAsBA,EAAsBU,eAAgBA,EAAgBj7C,eAAgBu8C,EAAsB/gD,SAAUA,EAAU8S,SAAUA,EAAU0sC,oBAAqBT,EAAqBuB,OAAOr5C,QAASg1C,aAAc8C,EAAqBuB,OAAOtnD,QAAS9Z,UAAW,iCAAkCg9D,iBAAkB,gDAAiD59G,KAAMA,IAC5c,gBAAoB,MAAO,CAAE4gD,UAAW,sBACpC,gBAAoB,MAAO,CAAEA,UAAW,4BAA8By8B,IAC1E,gBAAoBggC,GAAkB,MAAO,ECX/CsF,GAAmBhqK,IACrB,MAAM,QAAE2iK,EAAO,KAAEt7G,EAAI,SAAEw0E,GAAa77H,EAC9B8uF,GAAO,EAAAC,GAAA,KACPghB,GAAU,IAAA3kB,cAAY,KACxBywC,EAAS8mC,EAAQ,GAClB,CAACA,EAAS9mC,IACP+tC,EAAgB,KAAG,CAAE,uBAAwBjH,EAAQsH,QAAS,8BAA+BtH,EAAQC,eAAiB,+BAAgCe,GAAqBhB,IACjL,OAAQ,gBAAoB,MAAO,CAAE16D,UAAW2hE,GAC5CjH,EAAQsH,QAAW,gBAAoBrF,GAAwB,MAAU,gBAAoBD,GAAmB,CAAEt9G,KAAMA,EAAM0oD,QAASA,IACvI,gBAAoB,MAAO,CAAE9H,UAAW,sBACpC,gBAAoB,MAAO,CAAEA,UAAW,4BAzBnB,EAAC06D,EAAS7zE,KACvC,MAAM+zE,EAAWH,GAAgBC,EAAS7zE,GAC1C,GAAuB,aAAnB6zE,EAAQh2J,OAAuB,CAC/B,MAAMu9J,EAAgB,KAAKp7E,EAAKj/D,cAAc,CAC1CzxB,GAAI,oDAER,OAAQ,gBAAoB,WAAgB,KACxCykK,EACA,gBAAoB,OAAQ,CAAE56D,UAAW,qCAAuCiiE,GACxF,CACA,OAAO,gBAAoB,WAAgB,KACvC,IACArH,EACA,IAAI,EAYsEsH,CAAyBxH,EAAS7zE,IACxG,gBAAoB,MAAO,CAAEmZ,UAAW,qDAAuD06D,EAAQzd,QACxF,WAAnByd,EAAQh2J,OAAsB,gBAAoB63J,GAAiB,MAAQ,gBAAoBC,GAAyB,MAAO,EAEjI2F,GAA2BpqK,IAC7B,MAAM,QAAE2iK,GAAY3iK,EACd8uF,GAAO,EAAAC,GAAA,KACPs7E,GAAe,IAAA79J,UAAQ,IAClBk2J,GAAgBC,EAAS7zE,IACjC,CAAC6zE,EAAS7zE,IACP86E,EAAgB,KAAG,+BAAgC,gCAAiCjG,GAAqBhB,IAC/G,OAAQ,gBAAoB,MAAO,CAAE16D,UAAW2hE,GAC5C,gBAAoBhF,GAAwB,MAC5C,gBAAoB,MAAO,CAAE38D,UAAW,sBACpC,gBAAoB,MAAO,CAAEA,UAAW,qCAAuCoiE,GAC/E,gBAAoB,MAAO,CAAEpiE,UAAW,iEACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,+DACpD,gBAAoBqmK,GAAyB,MAAO,EAEtD6F,GAAoBtqK,IACtB,MAAM,QAAE2iK,EAAO,SAAE9mC,EAAQ,KAAEx0E,GAASrnD,EAC9B8uF,GAAO,EAAAC,GAAA,KACPghB,GAAU,IAAA3kB,cAAY,KACxBywC,EAAS8mC,EAAQ,GAClB,CAACA,EAAS9mC,IACP0uC,GAAY,IAAA/9J,UAAQ,IAAMk2J,GAAgBC,EAAS7zE,IAAO,CAAC6zE,EAAS7zE,IACpE07E,GAAa,IAAAh+J,UAAQ,KACvB,GAAIm2J,EAAQ8H,YACR,OAAO37E,EAAKj/D,cAAc,CACtBzxB,GAAI,8CACL,CAAEssK,aAAc/H,EAAQ8H,aAC/B,GACD,CAAC9H,EAAS7zE,IACP86E,EAAgB,KAAG,+BAAgCjG,GAAqBhB,IAC9E,OAAQ,gBAAoB,MAAO,CAAE16D,UAAW2hE,GAC5C,gBAAoBjF,GAAmB,CAAEt9G,KAAMA,EAAM0oD,QAASA,IAC9D,gBAAoB,MAAO,CAAE9H,UAAW,sBACpC,gBAAoB,MAAO,CAAEA,UAAW,4BAA8BsiE,GACtEC,EAAc,gBAAoB,MAAO,CAAEviE,UAAW,2BAClD,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,6FAA8Fh+F,MAAOugK,KAAkB,MACxK,gBAAoB9F,GAAkB,MAAO,EAKxCiG,GAAwB3qK,IACjC,MAAM,QAAE2iK,EAAO,KAAEt7G,EAAI,uBAAEu+G,EAAsB,qBAAEE,EAAoB,SAAEjqC,EAAQ,SAAE9S,GAAa/oH,EAC5F,OAAIiiK,GAAsBU,GACd,gBAAoBgH,GAAyB,CAAE/D,uBAAwBA,EAAwBE,qBAAsBA,EAAsBnD,QAASA,EAAS55C,SAAUA,EAAU8S,SAAUA,EAAUx0E,KAAMA,IAE9M+6G,GAAuBO,GACpB,gBAAoBoH,GAA0B,CAAEnE,uBAAwBA,EAAwBE,qBAAsBA,EAAsBnD,QAASA,EAAS55C,SAAUA,EAAU8S,SAAUA,EAAUx0E,KAAMA,IAE/M26G,GAAcW,GACZ,gBAAoBqH,GAAiB,CAAErH,QAASA,EAASt7G,KAAMA,EAAMw0E,SAAUA,IAEhE,mBAAjB8mC,EAAQ/9J,KACN,gBAAoBwlK,GAAyB,CAAEzH,QAASA,IAE1DR,GAAeQ,IAAYL,GAAkBK,GAC3C,gBAAoB2H,GAAkB,CAAE3H,QAASA,EAASt7G,KAAMA,EAAMw0E,SAAUA,SAGvF,QAAU8mC,EAAS,wBACvB,EC9FSiI,GAAmB,IACpB,gBAAoB,MAAO,CAAE3iE,UAAW,+FAC5C,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE7pG,GAAI,oDCC3CysK,GAAe7qK,IACxB,MAAM,SAAEu4D,EAAQ,KAAElR,EAAI,gCAAEyjH,EAA+B,uBAAElF,EAAsB,qBAAEE,EAAoB,SAAEjqC,EAAQ,SAAE9S,GAAc/oH,EACzH8uF,GAAO,EAAAC,GAAA,KACPg8E,GAAiB,IAAAv+J,UAAQ,IdmDJ,EAAC+rD,EAAUu2B,KACtC,MAAMk8E,EAAchI,GAAmBl0E,GACjCm8E,EAAcxH,GAAYlrG,GAC1B2yG,EAAyB3yG,EAAShzD,QAAQg+J,IAAOjB,GAAkBiB,MAClE9wI,EAAQhxB,GAAS,KAAUypK,GAAyBvI,GAAYR,GAAeQ,IAAYP,GAAuBO,KACnHwI,EAAS,IAAI14I,EAAO+qD,KAAKwtF,MAAiBvpK,EAAM+7E,KAAKwtF,IAC3D,OAAIC,EACO,CAACzI,MAAoB2I,GAEzBA,CAAM,Ec3DFC,CAAgB7yG,EAAUu2B,IAClC,CAACv2B,EAAUu2B,IACd,OAAwB,IAApBv2B,EAAS5uD,OACF,gBAAoBihK,GAAkB,MAEzC,gBAAoB,MAAO,CAAE3iE,UAAW,gCAAkC8iE,EAAe9sK,KAAK0kK,GAC1F,gBAAoBgI,GAAsB,CAAE/E,uBAAwBA,EAAwBE,qBAAsBA,EAAsB5/J,KAAK,QAAgBy8J,EAAQvkK,IAAKukK,QAASA,EAASt7G,KAAMA,EAAMyjH,gCAAiCA,EAAiCjvC,SAAUA,EAAU9S,SAAUA,MAChT,ECfKsiD,GAAqB,IACtB,gBAAoB,MAAO,CAAEpjE,UAAW,gDAC5C,gBAAoB+8B,GAAA,EAAa,CAAEzgI,KAAM,WCEpC+mK,GAAuBtrK,IAChC,MAAM,UAAE2jD,EAAS,SAAE4U,EAAQ,gCAAEuyG,EAA+B,uBAAElF,EAAsB,qBAAEE,EAAoB,aAAEyF,EAAY,SAAExiD,EAAQ,SAAE8S,GAAc77H,EAClJ,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAEioG,UAAW,0CACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,0CAChD,gBAAoB0jK,GAAsB,CAAE/xD,QAASw7D,EAAc3V,WAAYjyG,KACnFA,EAAa,gBAAoB0nH,GAAoB,MAAU,gBAAoBR,GAAa,CAAEjF,uBAAwBA,EAAwBE,qBAAsBA,EAAsBvtG,SAAUA,EAAUlR,KAAM,eAAgByjH,gCAAiCA,EAAiC/hD,SAAUA,EAAU8S,SAAUA,IAAc,ECdjV2vC,GAA8B,EAAGp4C,YAAWq4C,cAAa1iD,WAAU1tG,OAAMqpH,QAAOz8B,gBACzF,IAAKwjE,EACD,OAAO,KAEX,MACM10D,EAAa,KAAG,uBAAwB9O,GAC9C,OAAQ,gBAAoB,QAAS,CAAEA,UAAW8O,GAC9C,gBAAoB,QAAS,CAAEnyG,KAAM,WAAYyW,KAAMA,EAAM4sF,UAAW,iBAAkB4gB,QAASuK,EAAWrK,SAH1FvqH,GAAMuqH,EAASvqH,EAAEsgD,OAAO+pE,SAG4F,aAAcxtG,IACtJ,gBAAoB,OAAQ,CAAE4sF,UAAW,oBAAsBy8B,GAAQ,ECJlEgnC,GAAkC,EAAGC,wBAAuBC,6BAA4BC,kCACjG,MAAMtH,EAASF,KACf,OAAQ,gBAAoBmH,GAA6B,CAAEp4C,UAAWu4C,EAAuBF,YAAaG,EAA4B7iD,SAAU8iD,EAA6BnnC,MAAO6/B,EAAOL,kBAAmB7oJ,KAAM,mCAAoC4sF,UAAW,yCAA2C,ECFrS6jE,GAA0B,EAAG5jI,WAAU6jI,qBAAoBC,mBACpE,MAAMzH,EAASF,KACf,OAAQ,gBAAoBmH,GAA6B,CAAEp4C,UAAWlrF,EAAUujI,YAAaM,EAAoBhjD,SAAUijD,EAActnC,MAAO6/B,EAAON,gBAAiB5oJ,KAAM,qBAAsB4sF,UAAW,wBAA0B,ECUhOgkE,GAAmCC,IAC5C,MAAMC,GAAkB,IAAA3/J,UAAQ,IAdN,CAAC0/J,GADE,0CAC4CnnD,GAAA,IAAyB,EAAA16G,EAAA,IAAe6hK,IAc3EE,CAAsBF,IAAiB,CAACA,KACvEG,EAAkBC,GATE,EAACpmK,EAAKiuH,KACjC,MAAOlqH,EAAOsiK,IAAY,IAAAviF,WAAS,IANV,EAAC9jF,EAAKiuH,KAC/B,MAAMpvH,EAAOynK,aAAa9lE,QAAQxgG,GAC5B+D,EAAQiS,KAAKC,MAAMpX,GACzB,OAAO,KAAMkF,GAASkqH,EAAelqH,CAAK,EAGDwiK,CAAqBvmK,EAAKiuH,KAInE,OAHA,IAAAjnH,YAAU,KACNs/J,aAAap/H,QAAQlnC,EAAKgW,KAAKE,UAAUnS,GAAO,GACjD,CAAC/D,EAAK+D,IACF,CAACA,EAAOsiK,EAAS,EAIwBG,CAAgBP,GAAiB,GAEjF,MAAO,CACHE,mBACAM,mBAHuB,IAAML,GAAoB,GAIpD,ECtBQM,GAA0B,EAAGj9D,YAAW5E,aAC5C4E,EAGG,gBAAoB+gC,GAAA,EAAS,CAAE9rI,KAAM,WAAYqjG,UAAW,qFAAsF8C,QAASA,GAC/J,gBAAoB,OAAQ,CAAE,aAAc,0CACxC,gBAAoB,KAAkB,CAAE3sG,GAAI,gDAAiDoI,OAAQ,CAAE4xB,EAAIo3G,GAAW,gBAAoB,SAAU,KAAMA,QAJvJ,KCQFq9B,GAAoB7sK,IAC7B,MAAM,YAAEM,EAAW,UAAEqjD,EAAS,YAAEmpH,EAAW,yBAAEC,EAAwB,SAAEx0G,EAAQ,aAAEy0G,EAAY,QAAEC,EAAO,uBAAErH,EAAsB,SAAE3xC,EAAQ,SAAE9S,EAAQ,gBAAE+rD,EAAe,wBAAEC,EAAuB,wBAAEC,EAAuB,aAAEpB,EAAY,4BAAEH,EAA2B,8BAAEhG,GAAmC7lK,GAC/R,MAAEqtK,EAAK,2BAAEzB,EAA0B,mBAAEG,EAAkB,gCAAEjB,EAA+B,iCAAEwC,EAAgC,SAAEplI,EAAQ,wCAAEqlI,GAA6CP,EACnLl+E,GAAO,EAAAC,GAAA,MACP,iBAAEs9E,EAAgB,mBAAEM,GAAuBV,GAAgC3rK,EAAYmC,KACvF+qK,GAAc,IAAAhhK,UAAQ,IACjB,KAAQ,CAAC6gK,KAAU90G,KAC3B,CAACA,EAAU80G,IACRI,GAAe,IAAAjhK,UAAQ,KAClB,CACHyvG,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,oCACnC0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAC3C2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,YAEhD,CAAC0wF,IACE4+E,GAA4B,IAAAlhK,UAAQ,IAAM+gK,GAC5C1H,IACCliH,GACD0oH,GAAkB,CAACkB,EAAyC1H,EAA+BliH,EAAW0oH,IAC1G,OAAQ,gBAAoBzhC,GAAA,EAAmB,CAAE3iC,UAAW,sCAAuCk4D,oBAAoB,EAAMt1B,YAAY,EAAMG,kBAAmBiiC,EAAShxD,SAAUwxD,EAAaxxD,SAAU6uB,iBAAkB2iC,EAAa3iC,iBAAkBC,iBAAkB0iC,EAAa1iC,iBAAkB9W,SAAUA,EAAU9S,SAAUA,GACxU,gBAAoBmqD,GAAqB,CAAE1F,uBAAwBA,EAAwBE,qBAAsB59H,EAAUyb,UAAWA,EAAW4U,SAAUi1G,EAAa1C,gCAAiCA,EAAiCS,aAAc6B,EAAyBvxC,SAAUqxC,EAAiBnkD,SAAUokD,IACtT,gBAAoBtL,GAAgB,MACpC,gBAAoB+K,GAAyB,CAAEj9D,UAAW+9D,EAA2B3iE,QAAS4hE,IAC9F,gBAAoBjB,GAAiC,CAAEC,sBAAuBoB,EAA0BnB,2BAA4BA,EAA4BC,4BAA6BA,IAC7LyB,EAAoC,gBAAoBxB,GAAyB,CAAE5jI,SAAU4kI,EAAaf,mBAAoBA,EAAoBC,aAAcA,IAAmB,KAAM,E,uCC/B1L,MAAM2B,GAAgB,IAClB,KAEEC,GAAyB,IAC1B,gBAAoB,MAAO,CAAE3lE,UAAW,0CAC5C,gBAAoB+8B,GAAA,EAAa,CAAEzgI,KAAM,WAEpCspK,GAA4B7tK,GAC7B,gBAAoB,MAAO,CAAEioG,UAAW,8BAA+B,aAAc,yBACzF,gBAAoB,sBAAwCrpG,OAAOiI,OAAO,CAAC,EAAG7G,KAEzE8tK,GAAoB9tK,GACrB,gBAAoB,cAAgCpB,OAAOiI,OAAO,CAAC,EAAG7G,GAC1E,gBAAoB,MAAO,CAAEioG,UAAW,yBAA0B,aAAc,0BAA4BjoG,EAAMuM,WAE7GwhK,GAAiB/tK,GAClB,gBAAoB,MAAO,CAAEioG,UAAW,iDAC5C,gBAAoB,WAA6BrpG,OAAOiI,OAAO,CAAC,EAAG7G,KAkB9DguK,GAAkBhuK,IAC3B,MAAM,UAAEioG,EAAS,GAAE6G,EAAE,UAAEm/D,EAAS,SAAEz7D,EAAQ,WAAE07D,EAAU,KAAEjtJ,GAASjhB,EACjE,GxBSgC4D,EwBTRqd,GxBUhB,IAAQrd,IAAqB,UAAbA,EAAIgB,KwBTxB,OAP4BupK,EAODltJ,EANvB,gBAAoB,MAAO,CAAEgnF,UAAW,8DAA+D,aAAc,sBACzH,gBAAoB,OAAQ,CAAEA,UAAW,wCAA0CkmE,EAAYzpC,QAFpE,IAACypC,ExBeAvqK,EwBNhC,IAAIwqK,EAAa,GACb7L,GAActhJ,EAAKhX,SACnBmkK,EAAazK,GAAqB1iJ,EAAKhX,MAAO,WAElD,MAAMokK,EAAiBv/D,EAAG,CACtBvhF,QAAQ,EACR,qBAAsB0gJ,GACvBhmE,GACH,OAAQ,gBAAoB,MAAOrpG,OAAOiI,OAAO,CAAEpE,IAAK+vG,EAAUvK,UAAW,GAAGomE,KAAkBD,KAAgBF,GAC9G,gBAAoB,MAAO,CAAEjmE,UAAW,kBA7BxC+5D,IADuBj9J,EA8B2Dkc,GA7B/DhX,OACX,gBAAoB,WAAgB,KACxClF,EAAK2/H,MACL,IACA,gBAAoB,OAAQ,CAAEz8B,UAAW,gBAAkBljG,EAAKkF,MAAMi7I,QAEvE,gBAAoB,WAAgB,KACvC,IACAngJ,EAAK2/H,MACL,OAVsB,IAAC3/H,CA8BmE,EAErFupK,GAAwBtuK,IACjC,MAAM,MAAE0kI,GAAU1kI,EAAMihB,KACxB,OAAQ,gBAAoB,MAAO,CAAEgnF,UAAW,wCAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MAAQ0d,GAAQ,ECxD7D6pC,GAAgC5hK,GACnB,aAAXA,EACO,WAEJ,SA6BE6hK,GAAmB3xI,GACxBA,EAAKkrH,SACElrH,EAAKkrH,SAET,GAAGlrH,EAAK4xI,aAAa5xI,EAAK6xI,WAiCxBC,GAAsC,CAACp2G,EAAU2Y,KAC1D,MAAM09F,EAAQ,GAAyBtM,GAAmBJ,IAC1D,OAAO3pG,EACFhzD,QAAQg+J,IAAOqL,EAAMrL,KACrBtlK,KAAKslK,GACFlB,GAAkBkB,GACX,CACH3+J,KAAM2+J,EAAE3+J,KACRm/J,WAAYR,EAAEnlK,GACdoD,YAAa+hK,EAAE/hK,YACf0mK,qBAAsB3E,EAAE2E,sBAKrB,CACHtjK,KAFSo9J,GAAcuB,GAAK,eAAiB,gBAG7CQ,WAAYR,EAAEnlK,GAEdoD,YAAa0vE,EAAQ,CAAC,QAAU,GAChCg3F,qBAAsB,KAGhC,ECnFO2G,GAAoB7uK,IAC7B,MAAM,gBAAE8uK,EAAe,YAAExuK,EAAW,gBAAEyuK,EAAe,gBAAEC,GAAoBhvK,EACrEhB,GAAU,UACVuB,GAAY,WACZ,oCAAEgnK,GAAwCb,KAC1C53E,GAAO,EAAAC,GAAA,KACPkgF,GAAY,IAAAhiK,QAAO,OACzB,IAAAC,YAAU,KACN+hK,EAAU9hK,QAAQ0nH,OAAO,GAC1B,IACH,MAAM9f,GAAW,IAAA3pB,cAAanhF,IAC1B,MAAM04J,EAAU14J,EAAMA,MAClBs4J,GAAcI,IACdqM,EAAgBrM,EACpB,GACD,CAACqM,IACEE,GAAmB,IAAA1iK,UAAQ,IAAM,IAC5BsiF,EAAKj/D,cAAc,CACtBzxB,GAAI,4DAET,CAAC0wF,IACEqgF,GAAc,IAAA3iK,UAAQ,IAAM,KCfG,EAAClM,EAAayuK,EAAiBD,EAAiB9vK,EAASuB,EAAWuuF,EAAMsgF,IAAqBttK,MAAO4pJ,IAC3I,IACI,MAAM2jB,QAA0BrwK,EAC3BuB,UAAUA,GACVqB,gBACA0tK,qBAAqBP,EAAiBrjB,GACrC6jB,EAAcF,EACf9pK,OAAO,OACPtH,KAAKuxK,GFfuB,EAAC3yI,EAAMv8B,KACrC,CACHsE,KAAM,OACNxG,GAAIy+B,EAAKp6B,IACT4Y,KAAMwhB,EAAKxhB,KACX6pI,MAAOroH,EAAKqoH,MACZ+kB,SAAS,EACTrH,cAAekB,GAAwBjnI,EAAKp6B,IAAKnC,GACjDqM,OAAQ4hK,GAA6B1xI,EAAKlwB,UEOX8iK,CAA0BD,EAAkBlvK,KACtEk9E,KAAKwlF,GAAmBl0E,IACxB7wF,KAAK4+B,IACC,CACH6nG,MAAOg+B,GAAgB7lI,EAAMiyD,GAC7B7kF,MAAO4yB,MAGf,IAAI6yI,EAAeL,EACd9pK,OAAO,OACPtH,KAAKuxK,IAAqBG,MFV5B,CACHvxK,IAFuCwxK,EEWuBJ,GFThD/sK,IACdmC,KAAM,QACNyW,KAAMu0J,EAAUv0J,MAJsB,IAACu0J,CEWwC,IAC1EpyF,KAAKwlF,GAAmBl0E,IACxB7wF,KAAK4xK,IACC,CACHnrC,MAAOg+B,GAAgBmN,EAAO/gF,GAC9B7kF,MAAO4lK,MAGf,MAAMC,EAAgBpN,GAAgBF,GAAiB1zE,GACjDihF,EAA4C/wK,EAAQI,aAAa2wK,0CAWvE,OAVKtM,GAAYqL,IAlCQ,EAACzmK,EAAOynK,IAC9BA,EAAcE,oBAAoB/0H,QAAQ5yC,EAAM2nK,sBAAwB,EAkCvEC,CAAyBvkB,EAAYokB,IACrCC,IAKAL,EAAe,CAJQ,CACnBhrC,MAAOorC,EACP7lK,MAAOu4J,OAEwBkN,IAEvCN,EAAiB,IAAIG,KAAgBG,GAAc/lK,QAC5C,CACH,CACI+6H,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,8CAChCo0B,QAASk9I,GAEb,CACIhrC,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,6CAChCo0B,QAAS+8I,GAGrB,CACA,MAAOlrK,GACH,MAnEkB,CAACyqF,GAChB,CACH,CACI8mE,YAAY,EACZhxJ,KAAM,QACN8/H,MAAO51C,EAAKj/D,cAAc,CACtBzxB,GAAI,yDA6DL8xK,CAAkBphF,EAC7B,GDpC2CqhF,CAA0B7vK,EAAayuK,EAAiBD,EAAiB9vK,EAASuB,EAAWuuF,EAAMy4E,GAzB1H,IAyBiL,CACjM6I,SAAS,KACT,CACApxK,EACAuB,EACAuuF,EACAggF,EACAxuK,EACAyuK,EACAxH,IAEE8I,GAAoB,IAAAjlF,cAAa5sF,IACnC,MAAMsgD,EAAStgD,EAAEsgD,OAIC,KAAdtgD,EAAE0yI,SAAmBpyF,EAAO70C,OAC5BzL,EAAEyvH,iBAGY,IAAdzvH,EAAE0yI,SACF1yI,EAAEyvH,gBACN,GACD,IAUH,OAAQ,gBAAoB,MAAO,CAAEhmB,UAAW,kCAC5C,gBAAoB,KAAa,CAAExlG,IAAKwsK,EAAWqB,mBAAmB,EAAM7a,gBAAiB,kBAAmBj0D,WAAY,CACpH+uE,kBAAmB5C,GACnB6C,mBAAoB7C,GACpBrrB,MAAOyrB,GACP0C,OAAQzC,GACR0C,aAAcpC,GACdqC,eAAgB/C,GAChBgD,iBAAkBjD,GAClBkD,SAAU/C,GACVtY,iBAAkBqY,IACnBsB,YAAaA,EAAa2B,gBAAgB,EAAMvuK,YAAausF,EAAKj/D,cAAc,CAC/EzxB,GAAI,qDACJw1H,UAAWy8C,EAAmBnB,iBAAkBA,EAAkBnmD,SAAUhU,EAAU9qG,MAAO,KAAMuiB,aAtBzFe,IAClB,MAAMo1I,EAAUp1I,EAAOtjB,MACvB,OAAIs4J,GAAcI,KACNmM,EAAgB98I,MAAMuxI,IACnB,QAAgBA,EAAEnlK,GAAIukK,EAAQvkK,KAGlC,IAe+H,EE1DrI2yK,GAAqB/wK,IAC9B,MAAM,gBAAE8uK,EAAe,YAAExuK,EAAW,cAAE0wK,EAAa,gCAAElG,EAA+B,uBAAElF,EAAsB,qBAAEE,EAAoB,gBAAEiJ,EAAe,SAAElzC,EAAQ,kBAAEo1C,EAAiB,wBAAE9D,GAA6BntK,EACzMgvK,GAAkB,IAAA5jF,cAAau3E,IAC5BmM,EAAgB98I,MAAMuxI,IAAM,QAAgBA,EAAEnlK,GAAIukK,EAAQvkK,QACvD0sK,IAAoC9I,GAAcW,IAAYR,GAAeQ,IAC7EsO,EApB2B,CAACtO,IACxC,MAAMuO,EAAqB,CACvB1vK,YAAa,CAAC,QACd0mK,qBAAsB,IAE1B,OAAIlG,GAAcW,GACP/jK,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG87J,GAAUuO,GAAqB,CAAEtsK,KAAM,iBAGrFhG,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG87J,GAAUuO,GAAqB,CAAEtsK,KAAM,iBAChG,EAU8BusK,CAAmCxO,IAGrDsO,EAAkBtO,GAE1B,GACD,CAACmM,EAAiBmC,EAAmBnG,IACxC,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB+D,GAAkB,CAAEvuK,YAAaA,EAAawuK,gBAAiBA,EAAiBC,gBAAiBA,EAAiBC,gBAAiBA,IACvJ,gBAAoBnE,GAAa,CAAEjF,uBAAwBA,EAAwBE,qBAAsBA,EAAsBvtG,SAAUy4G,EAAe3pH,KAAM,aAAcyjH,gCAAiCA,EAAiCjvC,SAAUA,EAAU9S,SAAUokD,IAA4B,EC/B1SiE,GAAcpxK,IAChB,MAAQ+vG,QAASshE,GAAgBrxK,EACjC,OAAQ,gBAAoBg8H,GAAA,EAAQ,CAAE/xH,MAAO,GAAIg+F,UAAW,6HAA8H8H,QAASshE,GAAe,EAKzMC,GAAkBtxK,IAC3B,MAAM,gBAAE8uK,EAAe,cAAEkC,EAAa,YAAE1wK,EAAW,QAAE2sK,EAAO,uBAAErH,EAAsB,aAAEoH,EAAY,SAAE/4C,EAAQ,SAAE9S,EAAQ,YAAEkwD,EAAW,kBAAEJ,EAAiB,SAAEp1C,EAAQ,wBAAEsxC,GAA6BntK,EACzL8uF,GAAO,EAAAC,GAAA,MACL7mD,SAAU49H,EAAsBrjK,IAAKssK,EAAe,gCAAEjE,GAAqCkC,EAC7FuE,GAAqB,IAAAnmF,cAAY,IAC5B,gBAAoBgmF,GAAY,CAAErhE,QAASshE,KACnD,CAACA,IACJ,OAAQ,gBAAoBzmC,GAAA,EAAmB,CAAE3iC,UAAW,oEAAqEk4D,oBAAoB,EAAMt1B,YAAY,EAAMG,kBAAmBiiC,EAAShxD,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,uCAAyC0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,oCAAsC61H,SAAUo9C,EAAalwD,SAAUA,EAAUpW,QAASkpB,EAAUu9C,yBAA0BD,GAClf,gBAAoBR,GAAmB,CAAEnL,uBAAwBA,EAAwBE,qBAAsBA,EAAsBxlK,YAAaA,EAAa0wK,cAAeA,EAAelC,gBAAiBA,EAAiBhE,gCAAiCA,EAAiCiE,gBAAiBA,EAAiBkC,kBAAmBA,EAAmBp1C,SAAUA,EAAUsxC,wBAAyBA,IACtZ,gBAAoBtL,GAAgB,MAAO,EC4EtC4P,GAAsBzxK,IAC/B,MAAM,aAAEgtK,EAAY,YAAE1sK,EAAW,SAAE6gH,EAAQ,QAAE5jD,GAAYv9D,GACnD,IAAEyC,EAAG,YAAEklC,EAAW,MAAE0lI,EAAK,sBAAE1B,EAAqB,SAAEzjI,EAAQ,gCAAE4iI,GAAoCkC,GAC9FnG,gBAAiB6K,GAA+BhL,MAClD,WAAEiL,EAAU,kBAAEC,EAAiB,YAAE9E,EAAW,yBAAEC,EAAwB,SAAEx0G,EAAQ,cAAEF,EAAa,iBAAEC,EAAgB,iBAAEu5G,EAAgB,eAAEC,EAAc,sBAAEC,EAAqB,qBAAEC,EAAoB,aAAEC,EAAY,wBAAE7E,EAAuB,sBAAE8E,EAAqB,aAAElG,EAAY,4BAAEH,EAA2B,2BAAEsG,EAA0B,6BAAEC,GA3FrT,EAACzG,EAAuBzjI,KAChD,MAAOypI,EAAYU,IAAiB,IAAAroF,UAAS,iBACtC4nF,EAAmBU,IAAwB,IAAAtoF,WAAS,IACpDzxB,EAAUg6G,IAAe,IAAAvoF,UAAS,KAClC3xB,EAAem6G,IAAoB,IAAAxoF,UAAS,KAC5C1xB,EAAkBm6G,IAAuB,IAAAzoF,UAAS,KAClD6nF,EAAkBa,IAAuB,IAAA1oF,UAAS,KAClD+iF,EAA0B4F,IAA6B,IAAA3oF,UAAS2hF,IAChEmB,EAAa8F,IAAgB,IAAA5oF,UAAS9hD,IACtC2qI,EAA0BC,IAA+B,IAAA9oF,UAAS,KACnE,sBAAEs9E,GAA0BZ,KAC5ByL,GAA6B,IAAA/mF,cAAau3E,IAC5C6P,GAAkBp6J,GAAUA,EAAMna,KAAK0tC,IAAO,QAAgBA,EAAEvtC,GAAIukK,EAAQvkK,IAAMukK,EAAUh3H,KAAI,GACjG,IACGomI,GAAwB,IAAA3mF,cAAau3E,IACvC8P,GAAqBr6J,GAAU,IAAIA,EAAOuqJ,KAC1C+P,GAAqBt6J,GAAUA,EAAM7S,QAAQomC,KAAO,QAAgBA,EAAEvtC,GAAIukK,EAAQvkK,OAAK,GACxF,IACG4zK,GAAuB,IAAA5mF,cAAau3E,IACtC6P,GAAkBp6J,GAAUA,EAAM7S,QAAQg+J,KAAO,QAAgBA,EAAEnlK,GAAIukK,EAAQvkK,OAAK,GACrF,IACG6zK,GAAe,IAAA7mF,cAAau3E,IAC9B6P,GAAkBp6J,GAAU,IAAIA,EAAOuqJ,KACvC2E,EAAsB3E,EAAQ,GAC/B,CAAC2E,IACE8K,GAA+B,IAAAhnF,cAAau3E,IAC9C,MAAMoQ,EAAkBF,EAAyBptK,MAAM89J,IAAM,QAAgBA,EAAEnlK,GAAIukK,EAAQvkK,MACrF40K,GAAyB,KAAQD,aAAyD,EAASA,EAAgBvxK,YAAamhK,EAAQnhK,aAC9IkxK,GAAqBt6J,IACjB,MAAM66J,EAA0B76J,EAAM7S,QAAQomC,KAAO,QAAgBA,EAAEvtC,GAAIukK,EAAQvkK,MAEnF,OADyB60K,EAAwBtpK,SAAWyO,EAAMzO,QACzCqpK,EAGlB,IAAIC,EAAyBtQ,GAFzBsQ,CAEiC,IAEhDV,GAAan6J,GAAUA,EAAMna,KAAK0tC,IAAO,QAAgBA,EAAEvtC,GAAIukK,EAAQvkK,IAAMukK,EAAUh3H,KAAI,GAC5F,CAACknI,IACEzF,GAA0B,IAAAhiF,cAAY,KACxCinF,EAAc,aAAa,GAC5B,IACGH,GAAwB,IAAA9mF,cAAY,KACtCinF,EAAc,gBACdG,EAAiB,GAAG,GACrB,IACGV,GAAiB,IAAA1mF,cAAY,CAAC7yB,EAAU26G,KAC1C,GAAIA,EAAU,CACV,MAAMC,EAAc,IAAI56G,EAAU26G,GAClCX,EAAYY,GACZL,EAA4BK,EAAY5tK,OAAO88J,IACnD,MAEIkQ,EAAYh6G,GACZu6G,EAA4Bv6G,EAAShzD,OAAO88J,KAEhDiQ,GAAqB,EAAM,GAC5B,IACGzG,GAA8B,IAAAzgF,cAAaugF,IAC7CgH,EAA0BhH,EAAsB,GACjD,IACGK,GAAe,IAAA5gF,cAAaljD,IAC9B0qI,EAAa1qI,EAAS,GACvB,IACH,MAAO,CACHypI,aACAC,oBACAr5G,WACAF,gBACAC,mBACAu5G,mBACAC,iBACAC,wBACAC,uBACAC,eACA7E,0BACA8E,wBACAnF,2BACAD,cACAjB,8BACAG,eACAoG,+BACAD,6BACH,EAS8WiB,CAAoBzH,EAAuBzjI,GChG9X,CAACloC,IAC7B,MAAM,gBAAE+uK,EAAe,YAAEzuK,EAAW,UAAEm9D,EAAS,QAAEF,GAAYv9D,EACvDizI,GAAmB,UACnBmjB,GAAqB,UAErBid,GAAoB,IAAAjoF,cAAa1jF,IACnC,MAAM6wD,EAAW7wD,EAAOzJ,KAAK8G,GN+IU,EAACuuK,EAAqBhzK,KAC7D,SAAagzK,GAtDiB,EAACC,EAAYjzK,KAC/C,MAAM,KAAEu8B,EAAI,KAAEj4B,GAAS2uK,EACvB,MAAO,CACH3uK,OACAxG,GAAIy+B,EAAKp6B,IACT4Y,KAAMmzJ,GAAgB3xI,GACtBqoH,MAAOroH,EAAKqoH,MACZ+kB,SAAS,EACTrH,cAAekB,GAAwBjnI,EAAKp6B,IAAKnC,GACjDqM,OAAQ4hK,GAA6B1xI,EAAKlwB,QAC7C,EA6CU6mK,CAAuBF,EAAqBhzK,IAE9C,SAAkBgzK,GA1CY,CAACG,IACxC,MAAM,UAAE7D,EAAS,KAAEhrK,GAAS6uK,EAC5B,MAAO,CACH7uK,OACAxG,GAAIwxK,EAAUntK,IACd4Y,KAAMu0J,EAAUv0J,KACnB,EAqCUq4J,CAA4BJ,IAE9B,SAAqBA,GAlCY,EAACC,EAAYjzK,KACvD,MAAM,KAAEu8B,EAAI,KAAEj4B,EAAI,YAAEpD,EAAW,qBAAE0mK,GAAyBqL,EAC1D,MAAO,CACH3uK,OACAxG,GAAIy+B,EAAKp6B,IACT4Y,KAAMmzJ,GAAgB3xI,GACtBqoH,MAAOroH,EAAKqoH,MACZ+kB,SAAS,EACTrH,cAAekB,GAAwBjnI,EAAKp6B,IAAKnC,GACjDqM,OAAQ4hK,GAA6B1xI,EAAKlwB,QAC1CnL,cACA0mK,uBACH,EAuBUyL,CAA+BL,EAAqBhzK,IAEtD,SAA0BgzK,GApBY,CAACG,IAChD,MAAM,UAAE7D,EAAS,KAAEhrK,EAAI,YAAEpD,EAAW,qBAAE0mK,GAAyBuL,EAC/D,MAAO,CACH7uK,OACAxG,GAAIwxK,EAAUntK,IACd4Y,KAAMu0J,EAAUv0J,KAChB7Z,cACA0mK,uBACH,EAaU0L,CAAoCN,QAD1C,EMzJqCO,CAAgC9uK,EAAMzE,KAC5Em9D,EAAUlF,EAAS,GACpB,CAACj4D,EAAam9D,KACjB,QAAqB,CAAEG,QALP,IAAMq1E,EAAiB1yI,UAAU61J,GAAoBx0J,gBAAgBkyK,cAAc/E,GAKnExxG,UAASE,UAAW41G,GAAqB,CACrEpgC,EACAmjB,EACA2Y,EACAsE,GACF,ED4FFU,CAAiB,CAAEzzK,cAAayuK,gBAAiBtsK,EAAKg7D,WATxB,IAAA2tB,cAAa1jF,IACvC,GAAIojK,EACAgH,EAAepqK,OAAQzD,OAEtB,CACD,MAAMivK,EL1CsB,CAACvrI,IACrC,GAAoB,WAAhBA,EACA,OAAO66H,EACX,EKuCyBwR,CAAyBrsI,GAC1CmqI,EAAepqK,EAAQwrK,EAC3B,IACD,CAACpB,EAAgBnqI,EAAamjI,IACuDvtG,YACxF,MAAM02G,GAAqB,IAAAznK,UAAQ,IAC3Bs+J,EACmC,IAA5B+G,EAAiBloK,QAA4C,IAA5B2uD,EAAiB3uD,OAGrB,IAA5B2uD,EAAiB3uD,QACrBu+B,IAAa4kI,GACbnB,IAA0BoB,GAEnC,CACC8E,EACAv5G,EACApwB,EACA4kI,EACAnB,EACAoB,EACAjC,IAEEoJ,GAAmB,IAAA1nK,UAAQ,IACG,IAAzB6rD,EAAc1uD,QACtB,CAAC0uD,IACE87G,GAAuB,IAAA/oF,cAAY,KACrC,IAAK6oF,EACD,OAEJ,MAAMG,EAAmB,IAAI/7G,KAAkBw5G,GAC/CH,IACAvwD,EAAS5oD,EAAU67G,EAAkB97G,EAAkBy0G,EAA0BD,EAAY,GAC9F,CACCv0G,EACAs5G,EACAx5G,EACAC,EACA27G,EACAlH,EACAD,EACA3rD,EACAuwD,IAEE2C,GAAqB,IAAAjpF,cAAY,KACnC,IAAK8oF,EACD,OAEJ,MAAME,EAAmB,IAAI/7G,KAAkBw5G,GAC/CH,IACAvwD,EAAS5oD,EAAU67G,EAAkB97G,EAAkBy0G,EAA0BD,EAAY,GAC9F,CACCv0G,EACAs5G,EACAx5G,EACAC,EACA47G,EACAnH,EACAD,EACA3rD,EACAuwD,IAEE4C,GAAiB,IAAA9nK,UAAQ,IACpB62J,GAAiB9qG,EAAUD,IACnC,CAACC,EAAUD,IACRi8G,GAA2B,IAAA/nK,UAAQ,KACrC,MAAMsiK,EAAkBpL,GAAmBnrG,EAAUF,EAAeC,GACpE,OAAI4pG,GAAsBmL,IAAUvC,EACzBgE,EAEJ,IAAIA,EAAiBzB,EAAM,GACnC,CAAC90G,EAAUD,EAAkBD,EAAeyyG,EAAiCuC,IAChF,MAAO,CACH2E,uBACAD,wBACAG,wBACA9E,0BACA6E,eACAkC,uBACAE,qBACAzC,oBACAv5G,gBACAs5G,aACAsC,qBACAC,mBACAI,iBACAC,2BACAvI,eACAH,8BACAuG,+BACAD,6BACApF,2BACAD,cACH,EEnMC,GAAc,CAAC,CAAE7gE,MAAO,UAIjBuoE,GAAmBx0K,IAC5B,MAAM,SAAEi0H,EAAQ,aAAE+4C,EAAY,YAAE1sK,EAAW,uBAAEslK,EAAsB,8BAAEC,GAAkC7lK,GACjG,gBAAE2mK,EAAe,iBAAEC,GAAqBF,MAC9C,IAAAx5J,YAAU,KACNy5J,GAAiB,GAClB,CAACA,IACJ,MAAM8N,GAAe,IAAArpF,cAAY,KAC7B6oC,IACA2yC,GAAkB,GACnB,CAAC3yC,EAAU2yC,KACR,qBAAEoL,EAAoB,sBAAED,EAAqB,sBAAEG,EAAqB,wBAAE9E,EAAuB,aAAE6E,EAAY,qBAAEkC,EAAoB,mBAAEE,EAAkB,cAAEh8G,EAAa,WAAEs5G,EAAU,mBAAEsC,EAAkB,iBAAEC,EAAgB,eAAEI,EAAc,yBAAEC,EAAwB,kBAAE3C,EAAiB,YAAE9E,EAAW,yBAAEC,EAAwB,aAAEf,EAAY,4BAAEH,EAA2B,2BAAEsG,EAA0B,6BAAEC,GAAkCX,GAAmBzxK,GAC9b,OAAQ,gBAAoBurI,GAAA,EAAS,CAAEv/B,YAAa,GAAaw/B,SAAS,EAAME,aAAc,QAASzjC,UAAW,2BAC9G,gBAAoB,MAAO,CAAEA,UAAW,qBAAsC,iBAAf0pE,EAAiC,gBAAoB9E,GAAkB,CAAEjH,uBAAwBA,EAAwBtlK,YAAaA,EAAaqjD,UAAWiuH,EAAmB3E,QAASgH,EAAoBnH,YAAaA,EAAaC,yBAA0BA,EAA0BC,aAAcA,EAAcz0G,SAAU+7G,EAAgBrgD,SAAUwgD,EAActzD,SAAUgzD,EAAsB/G,wBAAyBA,EAAyBF,gBAAiB6E,EAAuB/F,aAAcA,EAAcH,4BAA6BA,EAA6BsB,wBAAyBiF,EAA8BvM,8BAA+BA,IAAqC,gBAAoByL,GAAgB,CAAE1L,uBAAwBA,EAAwBqH,QAASiH,EAAkB5zK,YAAaA,EAAawuK,gBAAiByF,EAA0BvD,cAAe34G,EAAe20G,aAAcA,EAAciE,kBAAmBgB,EAAcp2C,SAAUm2C,EAAsB/9C,SAAUwgD,EAActzD,SAAUkzD,EAAoBhD,YAAaa,EAAuB/E,wBAAyBgF,KAAiC,ECZprCuC,GAAe10K,IACxB,MAAM,QAAEhB,EAAO,UAAEuB,EAAS,OAAE8vB,EAAM,aAAE28I,EAAY,YAAE1sK,EAAW,QAAEivJ,EAAO,SAAEt7B,EAAQ,QAAE12D,EAAO,cAAEkoG,EAAgB,IAAI,mBAAEsG,EAAkB,8BAAElG,EAA6B,OAAEtB,EAAM,uBAAEqB,GAA4B5lK,EAClMizI,GAAmB,QAAiBj0I,GACpCo3J,GAAqB,QAAmB71J,GACxCuqK,EAAkC73B,EAAiB7zI,aAAaw5D,8BAChEgzG,GAA8B34B,EAAiB7zI,aAAau1K,wBAC5DrH,EAAmCr6B,EAAiB7zI,aAAaw1K,8BACjErH,EAA0Ct6B,EAAiB7zI,aAAamuK,yCACxE,UAAE51G,GAAcq1G,GACdvqK,IAAKypK,GAAmB5rK,EAC1Bu0K,GAAyB,IAAAzpF,cAAar1E,IACxCwnD,SAAkDA,EAAQ,IAAI,MAAmBxnD,EAAIjH,QAASiH,GAAK,GACpG,CAACwnD,IACE8vG,GAAQ,IAAA7gK,UAAQ,KAClB,IAAIs+J,EAGJ,OAAInzG,ERmBqB,EAAC96B,EAAMqvI,KAC7B,CACHtnK,KAAM,OACNxG,GAAIy+B,EAAKp6B,IACT4Y,KAAMmzJ,GAAgB3xI,GACtBqoH,MAAOroH,EAAKqoH,MACZ+kB,SAAS,EACTrH,eAAe,QAAgB/lI,EAAKp6B,IAAKypK,GACzCv/J,OAAQ,WQ1BGmoK,CAAkBn9G,EAAWu0G,GRiCrCzJ,EQ/B4B,GAChC,CAAC9qG,EAAWu0G,EAAgBpB,IACzB3pD,GAAW,IAAA/1B,cAAY,CAAC7yB,EAAUF,EAAeC,EAAkBqzG,EAAuBzjI,KAC5F,MAAMP,ER2I0B,EAAC4wB,EAAUF,EAAeC,KAC9D,MAAMw2G,EAAkBpL,GAAmBnrG,EAAUF,EAAeC,GACpE,OAAImrG,GAAYqL,GACL,SAEPA,EAAgBnlK,OAAS,EAClB,SAEJ,SAAS,EQnJQorK,CAAyBx8G,EAAUF,EAAeC,GAChErwB,EAAuC,WAAhBN,IAA6BgkI,EACpDqJ,EAAYrG,GAAoCt2G,GAAe,GAC/D48G,EAAetG,GAAoCr2G,GACzDi3F,EAAQ,CACJ5nH,cACAM,uBACAC,WACAmwB,cAAe28G,EACf18G,iBAAkB28G,GACpB,GACH,CAAC1lB,IACE2lB,GAAuB,IAAA1oK,UAAQ,IR4IY,EAACwgK,EAAcK,EAAOtB,EAAoBH,EAA4Bd,GAAkC,EAAOwC,GAAmC,EAAMC,GAA0C,KACnP,MAAM,IAAE9qK,EAAG,YAAEklC,EAAW,SAAEO,EAAQ,qBAAED,GAAyB+kI,EAC7D,MAAO,CACHvqK,MACAklC,cACA0lI,QACAnlI,WAAYA,EACZyjI,uBAAwB1jI,EACxB8jI,qBACAH,6BACAd,kCACAwC,mCACAC,0CACH,EQxJU4H,CAAsCnI,EAAcK,EAAOtB,EAAoBH,EAA4Bd,EAAiCwC,EAAkCC,IACtL,CACCP,EACAK,EACAtB,EACAH,EACAd,EACAwC,EACAC,IAEJ,OAAQ,gBAAoB,KAAa,CAAEl9I,OAAQA,GAC/C,gBAAoB,KAAiB,CAAErxB,QAASi0I,GAC5C,gBAAoB,KAAmB,CAAE1yI,UAAW61J,GAChD,gBAAoBkO,GAAyB,CAAEC,OAAQA,GACnD,gBAAoBoB,GAA8B,CAAEF,cAAeA,EAAenlK,YAAaA,EAAaslK,uBAAwBA,EAAwBC,8BAA+BA,EAA+BE,mBAAoBmP,EAAqBvtI,YAAam+H,qBAAsBoP,EAAqBhtI,UACvT,gBAAoBssI,GAAiB,CAAEl0K,YAAaA,EAAa0sK,aAAckI,EAAsBrP,8BAA+BA,EAA+BD,uBAAwBA,EAAwB3xC,SAAUA,EAAU9S,SAAUA,EAAU5jD,QAASs3G,QAA+B,ECtD9SO,GAAsBp1K,IAC/B,MAAM,UAAEO,EAAS,QAAEvB,EAAO,UAAE2wG,EAAS,aAAEq9D,EAAY,YAAE1sK,EAAW,mBAAEyrK,EAAkB,8BAAElG,EAA6B,uBAAED,EAAsB,QAAErW,EAAO,SAAEt7B,EAAQ,QAAE12D,EAAO,cAAEkoG,GAAmBzlK,EACtLqwB,EAASu5D,GAAqBz+B,IAC9B2jC,GAAO,EAAAC,GAAA,KACPw1E,GAAS,IAAA/3J,UAAQ,KAAM,CACzBy3J,gBAAiBn1E,EAAKj/D,cAAc,CAAEzxB,GAAI,qCAC1C8lK,kBAAmBp1E,EAAKj/D,cAAc,CAClCzxB,GAAI,oDAERgmK,2BAA4Bt1E,EAAKj/D,cAAc,CAC3CzxB,GAAI,qDAER+lK,2BAA4Br1E,EAAKj/D,cAAc,CAC3CzxB,GAAI,wDAER,CAAC0wF,IACL,OAAK6gB,EAGG,gBAAoB+kE,GAAa,CAAErkJ,OAAQA,EAAQrxB,QAASA,EAASuB,UAAWA,EAAWysK,aAAcA,EAAc1sK,YAAaA,EAAaivJ,QAASA,EAASt7B,SAAUA,EAAU12D,QAASA,EAASwuG,mBAAoBA,EAAoBxH,OAAQA,EAAQsB,8BAA+BA,EAA+BD,uBAAwBA,EAAwBH,cAAeA,IAF3X,IAE4Y,ECnBpZ,SAAS4P,KACZ,MAAM9sF,EAAWoB,KACX0qC,EAAYzqC,GAAqBnjC,IACjC6uH,EAAW1rF,GAAqBoR,IAChCiyE,EAAUrjF,GAAqB3/B,IASrC,MAAO,CACH0lD,UAAW0kB,IAAcihD,EACzBC,eAVkB,IAAAnqF,cAAY,KAE1B7C,EADA0kF,EACStoI,GAAUrC,2BAGVie,KACb,GACD,CAACgoC,EAAU0kF,IAKlB,CAIO,SAASuI,IAAoB,UAAE7lE,EAAS,cAAE4lE,IAC7C,MAAMzmF,GAAO,EAAAC,GAAA,KACb,OAAK4gB,EAGG,gBAAoBqsB,GAAA,EAAQ,CAAE/zB,UAAW,oDAAqDh+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2xG,QAASwlE,IAFjJ,IAGf,CC7BO,MAAME,GAAgBz1K,GAElB,gBAAoBw1K,GAAqB52K,OAAOiI,OAAO,CAAC,EAAG7G,ICFzD01K,GAAc11K,IACvB,MAAM,oBAAE+kG,GAAwBC,KAChC,OAAO,gBAAoBD,EAAqBnmG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECChE21K,IAA6B,KAAAtgI,gBAAe4Y,GAA4CutC,GAAkCn2B,IAAoC,CAACuwG,EAA6BC,EAA4BvwG,IAC7NswG,EACOC,EAEJvwG,IAQEwwG,IAAmC,KAAAzgI,gBAAe4Y,GAA4CwtC,GAAwC92B,GAA0B/uB,IAAgD,CAACggI,EAA6BG,EAAkCC,EAAoBC,IACzSL,EACOG,EAGJC,IAAuBC,IAKrBC,IAAyB,KAAA7gI,gBAAesgI,GAA4BG,GAAkCrtH,GAA2BmD,IAAkB,CAAC+pH,EAA4BG,EAAkC5tI,EAAUlR,KAAgBA,GAAc2+I,KAAgCztI,GAAY4tI,KAItSK,IAAoC,KAAA9gI,gBAAeylD,GAA0Bo7E,IAAwB,CAACvyH,EAAWyyH,KAAsBzyH,GAAayyH,IAIpJC,IAA2B,KAAAhhI,gBAAe4Y,GAA4CzF,GAA0BL,IAAsB,CAACmuH,EAAuBC,EAAWC,IAA2BF,IAA0BE,GAA0BD,KAI9P,SAASE,GAAuBr+J,GACnC,OAAO+vC,GAAqB/vC,IAAUitC,GAAoBjtC,GAAS6xC,GAAuB7xC,EAC9F,CAIO,MAAMs+J,IAAwC,KAAArhI,gBAAeyS,GAAoBm2C,IAA2B,CAAC04E,EAAqBC,IAAmBx4J,QAAQu4J,GAAuBC,EAAetwK,IAAIqwK,MAIjME,IAA6B,KAAAxhI,gBAAe4Y,GAA4CqtC,GAAmCC,GAAyC9yC,GAA2BiuH,GAAuC9qH,GAAkBnF,GAAoBgJ,IAA2B,CAACmmH,EAA6BkB,EAA6BC,EAAmC7uI,EAAU8uI,EAAiChgJ,EAAYowB,EAAc6vH,IAAwBrB,GAC3ekB,KACE5uI,GAAY6uI,IACdC,IACChgJ,IACAowB,IACA6vH,IClDE,SAASC,KACZ,MAAMC,GAAqB,EAAAxzD,GAAA,GAAc,QACnCyzD,EAAextF,GAAqBssF,IACpCmB,EAAqBztF,GAAqBkR,IAC1Cu5B,EAAYzqC,GAAqBnjC,IACjC8hC,EAAWoB,KAEjB,MAAO,CACHgmB,UAAWwnE,IAAuB9iD,GAAa+iD,EAC/CzoH,WAAY0oH,EACZC,aAJgB,IAAAlsF,cAAY,IAAM7C,EAASjoC,OAA2B,CAACioC,IAM/E,CAIO,SAASgvF,IAAkB,UAAE5nE,EAAS,UAAEhhD,EAAS,YAAE2oH,IACtD,MAAMxoF,GAAO,EAAAC,GAAA,KACb,OAAK4gB,EAGG,gBAAoBqsB,GAAA,EAAQ,CAAE/zB,UAAW,gDAAiDh+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,8BAAgC8jH,UAAWvzD,EAAWohD,QAASunE,IAFtL,IAGf,CCzBO,MAAM,GAAct3K,GAEhB,gBAAoBu3K,GAAmB34K,OAAOiI,OAAO,CAAC,EAAG7G,ICEvDw3K,IAAiC,KAAAniI,gBAAe4X,GAAmCf,GAA+BiqH,GAAmChxG,GAAoCrZ,GAAgBF,IAAkB,CAAC6rH,EAAoBC,EAAsBC,EAAqB91B,EAAoB3qH,EAAUF,IAa1TygJ,IACHC,IACAC,IACAzgJ,GACD2qH,IACC7qH,IAKF,SAAS4gJ,KACZ,MAAM14E,EAAoBvV,KAK1B,MAAO,CACHgmB,UALc/lB,GAAqB4tF,IAMnCK,kBALqB,IAAAzsF,cAAY,KACjC8T,EAAkBv6D,GAAUlF,mBAAmB,GAChD,CAACy/D,IAKR,CAIO,SAAS44E,IAAuB,UAAEnoE,EAAS,iBAAEkoE,IAChD,MAAM/oF,GAAO,EAAAC,GAAA,KACb,OAAK4gB,EAGG,gBAAoBqsB,GAAA,EAAQ,CAAE/zB,UAAW,2CAA4Ch+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,gBAAkB2xG,QAAS8nE,IAF7I,IAGf,CC/CO,MAAME,GAAmB/3K,GAErB,gBAAoB83K,GAAwBl5K,OAAOiI,OAAO,CAAC,EAAG7G,ICF5Dg4K,GAAoB,IACtB,KCGJ,SAASC,KACZ,MAAM1vF,EAAWoB,KACXuuF,GAAqB,IAAA9sF,cAAY,IAAM7C,EAAS5jD,GAAUtE,oBAAoB,CAACkoD,IAErF,MAAO,CACHonB,UAFc/lB,GAAqBitF,IAGnCqB,qBAER,CAIO,MAAMC,GAAqB,EAAGxoE,YAAWuoE,yBAC5C,MAAMppF,GAAO,EAAAC,GAAA,KACb,OAAK4gB,EAGG,gBAAoB,WAAgB,KACxC,gBAAoBqsB,GAAA,EAAQ,CAAEjsB,QAAS,IAAMmoE,IAAsBjuK,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,sBAAwB6pG,UAAW,gGAH/H,gBAAoB+vE,GAAmB,KAGyL,ECtBlOI,GAAep4K,GAEjB,gBAAoBm4K,GAAoBv5K,OAAOiI,OAAO,CAAC,EAAG7G,ICFxDq4K,GAAoBr4K,IAC7B,MAAM,SAAEuM,EAAQ,kBAAE+rK,EAAiB,gBAAEC,EAAe,gBAAEC,EAAe,qBAAEC,EAAoB,iBAAEC,EAAgB,qBAAEC,EAAuB,QAAY34K,EAElJ,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,wBACnB,SAAzB0wE,GAAmCpsK,EACnC,gBAAoBkpK,GAAc72K,OAAOiI,OAAO,CAAC,EAAGyxK,IACpD,gBAAoB5C,GAAY92K,OAAOiI,OAAO,CAAC,EAAG0xK,IAClD,gBAAoB,GAAY35K,OAAOiI,OAAO,CAAC,EAAG2xK,IAClD,gBAAoBT,GAAiBn5K,OAAOiI,OAAO,CAAC,EAAG4xK,IACvD,gBAAoBL,GAAax5K,OAAOiI,OAAO,CAAC,EAAG6xK,IAC1B,UAAzBC,GAAoCpsK,EAAU,ECZhD,GAAqB,CAAC,CAAE0/F,MAAO,UAC/B,GAAoB,CAAC,CAAEA,MAAO,UAIvB2sE,GAAqB54K,IAC9B,MAAM,UAAEslH,GAActlH,GACfoiG,EAAQM,IAAa,IAAA1Y,WAAS,GAC/B6uF,GAAoB,IAAAztF,cAAY,KAClCsX,GAAWo2E,IAAgBA,GAAW,GACvC,IACGC,GAAmB,IAAAvsK,UAAQ,IAAM84G,EAAU//G,QAAQR,IAA0B,IAAjBA,EAAK0gB,WAAoB,CAAC6/F,IAC5F,OAAKyzD,EAAiBpvK,OAoCd,gBAAoB,WAAgB,KACxC,gBAAoBqyH,GAAA,EAAQ,CAAEjsB,QAAS8oE,EAAmB5uK,MAAO,IAAUg+F,UAAW,mFACtF7F,EA9BQ,gBAAoBmpC,GAAA,EAAS,CAAErlI,IAAK,mBAAoBs+G,QAAS,2BAA4BxY,YAAa,GAAoB/D,UAAW,yBAA0B0lB,kBAAkB,EAAMrJ,qBAAqB,EAAMvZ,QAAS8tE,GACnO,gBAAoB,MAAc,CAAEzQ,mBAAmB,GAAQ2Q,EAAiB96K,KAAK+6K,IACjF,GAAsB,cAAlBA,EAASp0K,KACT,OAAQ,gBAAoB,KAAsB,CAAEsB,IAAK8yK,EAASh3D,OAAQp9G,KAAMo0K,EAASp0K,KAAMqjG,UAAW+wE,EAAS/wE,YAEvH,GAAsB,WAAlB+wE,EAASp0K,KACT,OAAQ,gBAAoB,KAAsB,CAAEsB,IAAK8yK,EAASh3D,OAAQp9G,KAAMo0K,EAASp0K,KAAM6D,MAAOuwK,EAAS/2D,SAAUha,UAAW+wE,EAAS/wE,YAEjJ,MAAMgxE,EAAoB,gBAAgBD,EAASh3D,SAC7CjZ,EAAQ,gBAAoB,KAAsB,CAAEd,UAAW,KAAG,eAAgB+wE,EAAS/wE,UAAW,KAAK+wE,EAASh3D,SAAU,CAC5H,CAACi3D,GAAoBD,EAASj3D,QAC9B,cAAei3D,EAAS92D,WACxBh8G,IAAK8yK,EAASh3D,OAAQv5G,MAAOuwK,EAAS/2D,SAAUlS,QAASipE,EAAS92D,cAChEj+G,EACA,KACE,IAAII,EACwB,QAA3BA,EAAK20K,EAASjpE,eAA4B,IAAP1rG,GAAyBA,EAAGs2C,KAAKq+H,GACrEt2E,GAAU,EAAM,IAE5B,OAAKs2E,EAASj3D,QAGN,gBAAoBvW,GAAA,GAAoB,CAAEtlG,IAAK8yK,EAASh3D,QAC5DjZ,EACA,gBAAoBgD,GAAA,GAAQ,CAAEyY,QAAS,IAAIy0D,IAAqBjtE,YAAa,IACzE,gBAAoB,OAAQ,KAAMgtE,EAASj3D,WALxChZ,CAKmD,MAKzC,OArCxBuc,EAAU37G,QAEXvD,QAAQC,KAAK,8FAEV,KAiC4B,EChD9B6yK,GAAal5K,IACtB,MAAM,mBAAE8jG,GAAuBkB,KAC/B,OAAO,gBAAoBlB,EAAoBllG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECIrE,SAAS,KACZ,MAAM8uF,GAAO,EAAAC,GAAA,KACPz4B,EAAiBszB,GAAqBzhC,IACtCgxH,GAAiBvvF,GAAqBjkC,KACtC,WAAEupC,EAAU,SAAEG,EAAQ,YAAEF,EAAW,cAAEhB,GAAkBU,MACvD,2BAAEkH,EAA0B,0BAAEE,GAA8Bf,KAC5D3M,EAAWoB,KACXlqD,GAAmB,IAAA2rD,cAAY,IAAM7C,EAAS5jD,GAAUlF,qBAAqB,CAAC8oD,IAC9E/nD,GAAmB,IAAA4qD,cAAY,IAAM7C,EAAS5jD,GAAUnE,qBAAqB,CAAC+nD,IAC9Es4B,GAAsB,IAAA5zG,QAAO,KAC3Bm8E,IAAKgwF,GAAoB7tF,GAA8B,CAC3DL,eAAgBnzE,GAChByzE,aAAc,mCACdC,WAAY,8BACZN,YAAa,KACT01B,EAAoB1zG,QAAUgiF,EAAY,6BAE1C,CAAER,SAAU,GAAI,EAEpBlxB,UAAYj/D,IACJqiH,EAAoB1zG,SACpBghF,EAAc0yB,EAAoB1zG,SAEtC+hF,EAAW,gCACXswB,GAAahhH,EAAEsP,QAAQpG,OAAO,EAElC61D,QAAUxnD,IACF8qG,EAAoB1zG,SACpBghF,EAAc0yB,EAAoB1zG,UAElC,SAAqB4I,GACrBs5E,EAAS,wCAGTA,EAAS,6BACb,IAGFgqF,GAAkB,IAAAjuF,cAAY,KAC5B90B,GAGJ72B,GAAkB,GACnB,CAAC62B,EAAgB72B,IACd65I,GAAuB,IAAAluF,cAAY,KACjC90B,GAGJ8iH,GAAiB,GAClB,CAACA,EAAiB9iH,IACft/B,EAAa4yD,GAAqBh+B,IAClCypC,EAAezL,GAAqBpjC,IACpCY,EAAewiC,GAAqBnjC,IACpCo7F,EAAqBj4D,GAAqBzkB,IAC1Co0G,EAAoB3vF,GAAqB19B,IACzCstH,EAAqC5vF,GAAqB4tF,IAC1DtvG,EAAY0hB,GAAqB3kB,IACjCw0G,IAAmC7vF,GAAqB/8B,IACxD6sH,IAAkC9vF,GAAqBsR,IACvD5jE,EAA4BsyD,GAAqB2G,IACvD,OAAO,IAAA/jF,UAAQ,KACX,IAAInI,EAAIswB,EAAIK,EACZ,GAAIshC,EACA,MAAO,GAEX,MAAMqjH,EAAkBvyH,IAAmE,QAAjD/iD,EAAKizB,EAA0BsiJ,oBAAiC,IAAPv1K,GAAgBA,GAK7Gw1K,GAAmBL,GACrB33B,IACC03B,IACqD,QAApD5kJ,EAAK2C,EAA0BwiJ,uBAAoC,IAAPnlJ,GAAgBA,GAC5EolJ,EAAmBZ,GAAiB7iH,GAAkBt/B,EACtDgjJ,EAAqB3kF,GACvBntB,GACAuxG,GACAC,IACsD,QAApD1kJ,EAAKsC,EAA0B2iJ,uBAAoC,IAAPjlJ,GAAgBA,GAClF,MAAO,CACH,CACIpwB,KAAM,SACNo9G,OAAQ,oBACRE,SAAU63D,EACVt0J,QAASo0J,EACT53D,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,yBACnC2jH,SAEC/qF,GAAc+iJ,EACTjrF,EAAKj/D,cAAc,CAAEzxB,GAAI,sCACzB6F,EACN8rG,QAASspE,GAEb,CACIz0K,KAAM,YACNo9G,OAAQ,oBAERv8F,QAASo0J,IAAoBG,GAAsBjkF,GAA8B4jF,IAErF,CACI/0K,KAAM,SACNo9G,OAAQ,kBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,4BACnC2xG,QAASupE,EACT7zJ,QAASu0J,GAEb,CACIp1K,KAAM,SACNo9G,OAAQ,sBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,gCACnC2xG,QAAS9Z,EACTxwE,QAASswE,GAEb,CACInxF,KAAM,SACNo9G,OAAQ,mBACRC,SAAUnzB,EAAKj/D,cAAc,CAAEzxB,GAAI,wBACnC2xG,QAASvvE,EACT/a,QAASk0J,EACT1xE,UAAW,iBAElB,GACF,CACC45C,EACA35E,EACAoxG,EACAD,EACApjF,EACAnH,EACAqqF,EACAO,EACAtyH,EACAiuC,EACAokF,EACAnjH,EACAt/B,EACAuiJ,EACAxjF,EACAyjF,EACAliJ,EAA0BsiJ,aAC1BtiJ,EAA0B2iJ,gBAC1B3iJ,EAA0BwiJ,gBAC1Bt5I,GAER,CCvJO,MAAM05I,GAAcl6K,IACvB,MAAM,oBAAE+jG,GAAwBiB,KAChC,OAAO,gBAAoBjB,EAAqBnlG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECFhEm6K,GAASn6K,IAClB,MAAM,eAAEgkG,GAAmBgB,KAC3B,OAAO,gBAAoBhB,EAAgBplG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECH3Do6K,GAAgBvnE,GAClB,KCGEwnE,GAAyBr6K,IAClC,IAAIqE,EAAIswB,EAAIK,EACZ,MAAMq2E,GAAQ,WACd,OAAKrrG,EAAMkoC,SAGH,gBAAoB,MAAO,CAAE+/D,UAAW,oCAC5C,gBAAoBuD,GAAA,GAAoB,KACpC,gBAAoBE,GAAA,OAAW,CAAEzD,UAAW,iBAAkB7mF,MAAO,GAAIC,OAAQ,GAAIsqF,MAA6L,QAArL32E,EAAyI,QAAnIL,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGm3E,UAAuB,IAAP92E,EAAgBA,E5DhBrR,Y4DiBrB,gBAAoB+2E,GAAA,GAAQ,CAAEC,YAAa,CAAC,CAAEC,MAAO,UAAYuY,QAAS,mBACtE,gBAAoB,KAAkB,CAAEpmH,GAAI,4BAA6BoI,OAAQ,CAAE4xB,EAAIo3G,GAAW,gBAAoB,IAAK,KAAMA,SANlI,IAMkJ,ECZpJ8qC,GAAuBt6K,IAChC,MAAMoB,EAAWwoF,GAAqB1+B,IAChCoa,EAA+BskB,GAAqBvkB,IAC1D,OAAKjkE,EAASm5K,yCAA4Cj1G,EAGnD,gBAAoB+0G,GAAuBz7K,OAAOiI,OAAO,CAAC,EAAG7G,IAFzD,IAEgE,ECNlEw6K,GAAwBx6K,IACjC,MAAM,YAAE2nC,EAAW,qBAAEM,GAAyBjoC,EAC9C,GAAoB,YAAhB2nC,EACA,OAAO,KAEX,MAAMo6E,EAAU95E,EAAwB,gBAAoB,KAAkB,CAAE7pC,GAAI,8CAAmD,gBAAoB,KAAkB,CAAEA,GAAI,kDACnL,OAAQ,gBAAoB,MAAO,CAAE6pG,UAAW,kCAC5C,gBAAoBuD,GAAA,GAAoB,KACpC,gBAAoB,MAAO,CAAEvD,UAAW,sBACpC,gBAAoB,IAAK,CAAEA,UAAW,oCACtC,gBAAoB,KAAkB,CAAE7pG,GAAI,qCAChD,gBAAoB2tG,GAAA,GAAQ,CAAEC,YAAa,CAAC,CAAEC,MAAO,UAAYuY,QAAS,kBAAoBzC,IAAW,ECXxG04D,GAAsBz6K,IAC/B,MAAMs2K,EAAwB1sF,GAAqB37B,IAC7CtY,EAAwBi0C,GAAqBl0C,IAC7C4vB,EAA+BskB,GAAqBvkB,IAC1D,OAAKixG,GAA0B3gI,GAA0B2vB,EAGlD,gBAAoBk1G,GAAsB57K,OAAOiI,OAAO,CAAC,EAAG7G,IAFxD,IAE+D,ECHvE,SAAS06K,KACZ,MAAMnyF,EAAWoB,KACXlhF,EAAQmhF,GAAqBxhC,IAE7BuyH,GADO,EAAA5rF,GAAA,KACWl/D,cAAc,CAAEzxB,GAAI,cAMrCw8K,EAAoBC,IAAyB,IAAA7wF,WAAS,GACvD8wF,GAAc,IAAA1vF,cAAY,KAC5ByvF,GAAsB,GACtB38E,GAAmB3V,EAEnBlxE,GAAc5O,GAASkyK,IAClB7wK,MAAK,KACN+wK,GAAsB,EAAM,IAE3BrmJ,OAAM,KACPqmJ,GAAsB,EAAM,GAC9B,GACH,CAACtyF,EAAUoyF,EAAYlyK,IACpB4rH,EAAYzqC,GAAqBnjC,IACjCs0H,EAAoBnxF,GAAqBoR,IACzCs7E,EAAwB1sF,GAAqB37B,IAC7C+sH,EAAqBpxF,GAAqBysF,IAC1C4E,GAAoBrxF,GAAqBjkC,IACzCu1H,EAAmBtxF,GAAqB6sF,IAExCnB,EAAWyF,GAAqBH,EAChCjrE,EAAY0kB,EACZ1lE,EAHmBi7B,GAAqB3/B,MAGPgxH,GAAoBC,EACrDztD,EAAc6oD,EACd,2BACA,qCACN,IAAIjyC,EAAc,qCAUlB,OATI22C,IACA32C,EAAc,qCAEb62C,IACD72C,EAAc,0CAEd42C,IACA52C,EAAc,sCAEX,CACH10B,YACAhhD,YACA2mH,WACA7nD,cACA4W,cACAy2C,cAER,CAIO,SAASK,IAAkB,UAAExrE,EAAS,UAAEhhD,EAAS,SAAE2mH,EAAQ,YAAEjxC,EAAW,YAAE5W,EAAW,YAAEqtD,IAC1F,MAAMhsF,GAAO,EAAAC,GAAA,KACb,OAAK4gB,EAGD2lE,EAEQ,gBAAoBt5C,GAAA,EAAQ,CAAE/zB,UAAW,mCAAoCh+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,gCAAkC8jH,UAAU,EAAMnS,QAAS,MAE5K,gBAAoBvE,GAAA,GAAoB,KAC5C,gBAAoBwwB,GAAA,EAAQ,CAAE/zB,UAAW,qDAAsDh+F,MAAO6kF,EAAKj/D,cAAc49F,GAAc1d,QAAS+qE,EAAa54D,UAAWvzD,IACxK,gBAAoBo9C,GAAA,GAAQ,CAAEC,YAAa,CAAC,CAAEC,MAAO,UAAY2X,aAAc,CAAE,QAAS,CAAC,GAAI,KAAOY,QAAS,wBAC3G,gBAAoB,KAAkB5lH,OAAOiI,OAAO,CAAC,EAAGw9H,MATrD,IAUf,CCtEO,MAAM+2C,GAAiB,KAC1B,MAAM7yF,EAAWoB,KACXlhF,EAAQmhF,GAAqBxhC,IAC7BpxB,EAAa4yD,GAAqBh+B,IAClCyvH,EAAYzxF,GAAqBlhC,IACjCtxC,EAAqBwyE,GAAqBpiC,IAC1Ck+D,EAAmB,KACnBgzD,EAAmBT,KACnBO,EAAkBtB,KAClBoB,EAAoBjD,KACpBkD,EAAkBmC,KAClBjC,EAAuBb,KACvB0D,GAAiB,IAAAlwF,cAAa3iF,IAChC8/E,EAAS9wE,GAAgBhP,GAAO,GACjC,CAAC8/E,IACJ,MAAO,CACHgzF,gBAAiB,CAAEj2D,UAAWI,EAAkBkzD,kBAAmBA,IACnE4C,WAAY,CACR/yK,QACA6yK,eAAgBtkJ,OAAa/yB,EAAYq3K,GAE7CG,eAAgB,CACZ/C,mBACAF,kBACAF,oBACAC,kBACAE,uBACAJ,iBAAkBA,IAEtBqD,iBAAkB,CACd/zI,YAAa0zI,EAAU1zI,YAEvBM,sBAAuB7wB,KAAwBA,EAAmB6wB,sBAEtE0zI,kBAAmB,CACfzzI,WAAYmzI,EAAUnzI,UAE1B0zI,iBACH,EAECC,GAAc77K,IAChB,MAAM,gBAAEu7K,EAAe,WAAEC,EAAU,eAAEC,EAAc,iBAAEC,EAAgB,kBAAEC,GAAsB37K,EAC7F,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,yBAC5C,gBAAoB,MAAO,CAAEA,UAAW,qBACpC,gBAAoBqyE,GAAqB17K,OAAOiI,OAAO,CAAC,EAAG80K,IAC3D,gBAAoBxB,GAAOv7K,OAAOiI,OAAO,CAAC,EAAG20K,IAC7C,gBAAoBf,GAAoB77K,OAAOiI,OAAO,CAAC,EAAG60K,IAC1D,gBAAoBxC,GAAWt6K,OAAOiI,OAAO,CAAC,EAAG40K,KACrD,gBAAoBvB,GAAYt7K,OAAOiI,OAAO,CAAC,EAAG00K,IAAmB,EAKtE,SAASK,GAAc57K,GAE1B,OADiB4pF,GAAqB99B,IAE3B,gBAAoBsuH,GAAcx7K,OAAOiI,OAAO,CAAC,EAAG7G,IAExD,gBAAoB67K,GAAYj9K,OAAOiI,OAAO,CAAC,EAAG7G,GAC7D,CClEO,MAAM87K,GAAe,EAAGvvK,cACpB,gBAAoB,MAAO,CAAE07F,UAAW,sBAAwB17F,GCA9DwvK,GAAgB/7K,IACzB,MAAM,MAAEyI,GAAUzI,EAClB,OAAQ,gBAAoB87K,GAAc,KACtC,gBAAoB,MAAO,CAAE7zE,UAAW,uDAAyDx/F,GAAQ,ECF3Gs1I,IAAqB,SAAc,CAAE3/I,GAAI,aAIlC49K,GAAiBh8K,IAC1B,MAAM,MAAEyI,EAAK,eAAE6yK,GAAmBt7K,EAC5B8uF,GAAO,EAAAC,GAAA,KACP2yD,EAAiB93D,GAAqBxhC,IAC5C,OAAQ,gBAAoB0zH,GAAc,KACtC,gBAAoB7pC,GAAe,CAAEhoI,MAAOxB,EAAO04G,SAAUm6D,EAAgBhqC,QAAS,EAAGvuB,U/GfvD,I+Ge8F9a,UAAW,wDAAyD6pC,iCAAiC,EAAM3c,WAAYusB,EAAgBn/I,YAAausF,EAAKj/D,cAAckuH,KAAuBt1I,GAAQ,ECTjUwzK,GAAuB16E,GAAgB,CAChDwxC,KAAMgpC,GACNxnD,KAAMynD,KCJGE,GAAgB,IAClB,KCEEC,GAAiC9wE,IAC1C,IAAIhnG,EAAIswB,EAAIK,EAAIoB,EAAIC,EACpB,MAAM+lJ,EAAgB,IAAU/wE,IAC8J,QAAzLr2E,EAAsI,QAAhIL,EAA+E,QAAzEtwB,EAAKgnG,aAAqC,EAASA,EAAMlqG,kBAA+B,IAAPkD,OAAgB,EAASA,EAAGwpC,eAA4B,IAAPlZ,OAAgB,EAASA,EAAGkY,iBAA8B,IAAP7X,OAAgB,EAASA,EAAGjT,OAE9Nq6J,EAAcr6J,IAAMnjB,OAAOiI,OAAO,CAAC,EAAGwkG,EAAMlqG,WAAW0sC,QAAQhB,UAAU9qB,MAE7E,MAAMs6J,EAA0B,GAWhC,IANyE,QAApEjmJ,EAAKi1E,aAAqC,EAASA,EAAMixE,aAA0B,IAAPlmJ,OAAgB,EAASA,EAAGsvE,kBACzG22E,EAAwB54K,KAAK,yDAAyD4nG,EAAMixE,MAAM52E,qBAE7B,QAApErvE,EAAKg1E,aAAqC,EAASA,EAAMyR,aAA0B,IAAPzmF,OAAgB,EAASA,EAAGqvE,kBACzG22E,EAAwB54K,KAAK,yDAAyD4nG,EAAMyR,MAAMpX,qBAEjG,IAAQ22E,GAA0B,CACnC,MAAME,EAAWzzE,SAAS8W,cAAc,SACxC28D,EAASz8D,YAAYhX,SAAS0zE,eAAe,SAASH,EAAwBj5K,KAAK,SACnF0lG,SAAS2zE,KAAK38D,YAAYy8D,EAC9B,CACA,OAAOH,CAAa,ECzBXM,GAAuB,EAAGj0K,QAAOk0K,8BAA6Br3F,sBAC/D,gBAAoB,MAAO,CAAE2iB,UAAW,0EAC5C,gBAAoB,KAAM,CAAEA,UAAW,qCAAuCx/F,QAAqCA,EAAQk0K,GAC3H,gBAAoB,KAAM,KACtB,gBAAoB,KAAkB,CAAEv+K,GAAI,qCAChD,gBAAoB,IAAK,CAAE6pG,UAAW,wCAA0C00E,GAChF,gBAAoB,KAAM,KACtB,gBAAoB,KAAkB,CAAEv+K,GAAI,wCAChD,gBAAoB,IAAK,CAAE6pG,UAAW,2CAA6C3iB,EAAiB78E,QCXtG,GAAoB,CAAC,CAAEwjG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,MAUnD0wE,GAA8B,EAAGrwK,cAClC,gBAAoB,OAAQ,CAAE07F,UAAW,wBAC7C,gBAAoBuD,GAAA,GAAoB,KACpC,gBAAoB,OAAQ,CAAEvD,UAAW,sFACzC,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,gEAAiE+D,YAAa,GAAmBgY,WAAY,CAAEC,QAAS,SAAY13G,KCV5KswK,GAAc,CACvB,CAAE5wE,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,IACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KACrC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,EAAGyuE,GAAI,KAc9B4wE,GAAiC98K,IAC1C,MAAM,OAAEoiG,EAAM,MAAE35F,EAAK,mBAAE8pJ,EAAkB,mBAAEwqB,GAAqB,EAAI,SAAEtd,EAAQ,YAAEud,EAAW,UAAEr5H,EAAS,SAAEg4E,EAAQ,QAAE1J,EAAO,YAAE/mB,EAAW,KAAEO,EAAI,wBAAEwxE,EAAuB,QAAEltE,GAAa/vG,EAC9K8uF,GAAO,EAAAC,GAAA,KACPmuF,GAA2B,IAAAjwK,QAAO,OACjCkwK,EAAkBC,IAAuB,IAAApzF,WAAS,GACnDqzF,EAAaprD,EAAU,gBAAoB,IAAK,CAAEhqB,UAAW,iCAAoCwD,GACvG,IAAAv+F,YAAU,KACN,MAAM1E,EAAU00K,EAAyB/vK,QACzC,IAAK3E,EACD,OAEJ,MACM20K,EADel1K,KAAKyB,KAAKlB,EAAQygH,wBAAwB7nG,OACvB5Y,EAAQ4gH,YAChDg0D,EAAoBD,EAAiB,GACtC,CAAC1d,IACJ,IAAIp7B,EAAc57H,EACd60K,EAAiB7d,EAQrB,OAPI97G,GACA0gF,EAAcv1C,EAAKj/D,cAAc,CAAEzxB,GAAI,YACvCk/K,EAAiBxuF,EAAKj/D,cAAc,CAAEzxB,GAAI,aAErC4+K,IACLM,EAAiBxuF,EAAKj/D,cAAc,CAAEzxB,GAAI,eAEtC,gBAAoB,MAAO,CAAE6pG,UAAW,KAAG,4CAA6C,qBAAsB,KAAK8c,GAAA,GAAyBt8G,KAAU,CACtJ,aAAcwpH,EACd,kBAAmB+qD,EACnB,eAAgB56E,EAChB,eAAgBu5B,EAChB,kBAAmBzwB,IACnB6E,QAASA,GACbstE,EAAc,gBAAoB,MAAO,CAAEp1E,UAAW,kDAAoDo1E,GAAe,KACzH,gBAAoB,MAAO,CAAEp1E,UAAW,qDACpC,gBAAoB,MAAO,CAAEA,UAAW,2DACpC,gBAAoB,MAAO,CAAEA,UAAW,mDACpC,gBAAoByhB,GAAe,CAAEc,mBAAoBqyD,GAAa50E,UAAW,mCAAqC,GAAGo8B,IAAe1gF,GAAcq5H,EAAoB,GAAN,QACxKC,GAA2BthD,EAAY,gBAAoBihD,GAA6B,KACpF,gBAAoBK,EAAyB,OAAU,MAC/D,gBAAoB,MAAO,CAAEh1E,UAAW,sDACpC,gBAAoB,OAAQ,CAAEA,UAAW,8FAA+FxlG,IAAKy6K,GAA4BI,GACzKP,GAAsBI,EAAoB,gBAAoB,OAAQ,CAAEl1E,UAAW,kEAAoE,IAAIsqD,MAA0B,OAAQ,E,4BCtD7M,MAAMgrB,IAAgB,QAAc,OAI7B,SAASC,GAAUx9K,GACtB,MAAM,UAAEioG,EAAS,MAAE7mF,EAAK,OAAEC,EAAM,MAAE7c,EAAK,WAAEsiH,EAAU,WAAEkH,EAAU,UAAErqE,EAAS,8BAAE85H,EAAgC,EAAC,kBAAEC,EAAiB,eAAEC,GAAoB39K,EAChJs4I,GAAe,IAAAltD,cAAawyF,GAC1BA,EAAgB9xI,SAAW,EAAItnC,EAAMmF,OAC9B,gBAAoBk0K,GAAoB,MAE5C7vD,EAAW4vD,IACnB,CAACp5K,EAAOwpH,IACL8vD,GAAkB,IAAA1yF,cAAY,CAAC5lF,EAAGu4K,KAChCA,EAAcv5K,EAAMmF,SAAW+zK,IAC/BC,SAAgEA,IACpE,GACD,CAACn5K,EAAOk5K,EAAmBC,IAC9B,OAAOh6H,EAAa,gBAAoBqhF,GAAA,EAAa,CAAE3jH,OAAQrhB,EAAMqhB,SAAc,gBAAoB28J,GAAA,GAAM,CAAE/1E,UAAW,KAAG,gBAAiBA,GAAwB,IAAK7mF,MAAOA,EAAOC,OAAQA,EAAQ7c,MAAOA,EAAOsiH,WAAYA,EAAYiH,WAAYvpH,EAAMmF,OAAS8zK,EAA+BzvD,WAAYsqB,EAAclV,YAAa06C,GACpV,CACA,SAASD,KACL,OAAQ,gBAAoB,MAAO,CAAE51E,UAAW,wCAC5C,gBAAoBs1E,GAAe,CAAEroC,QAAS,cAC1C,gBAAoB,OAAQ,CAAEz3G,EAAG,IAAKyuE,EAAG,IAAK+xE,GAAI,IAAKC,GAAI,IAAK98J,MAAO,KAAMC,OAAQ,OACrF,gBAAoB,OAAQ,CAAEoc,EAAG,KAAMyuE,EAAG,IAAK+xE,GAAI,IAAKC,GAAI,IAAK98J,MAAO,MAAOC,OAAQ,QACnG,C,2BC1BO,SAAS88J,GAA0Bn+K,GACtC,MAAM,UAAEioG,EAAS,QAAEi0B,EAAO,aAAEgG,EAAY,SAAED,EAAQ,kBAAES,GAAsB1iI,EACpE8uF,GAAO,EAAAC,GAAA,KACb,OAAQ,gBAAoBuzD,GAAAC,EAAO,CAAEt6C,UAAW,KAAG,CAC3C,4EACAA,IACAh+F,MAAOi4H,EAAcnZ,SAAUkZ,EAAU1/H,YAAamgI,QAA6DA,EAAoB5zC,EAAKj/D,cAAc,CAAEzxB,GAAI,+BAAiC+2H,WAAW,EAAMipD,YAAY,EAAMC,UAAU,EAAMniD,QAASA,GACzQ,CCRO,SAASoiD,GAA4Bt+K,GACxC,MAAM,UAAE2vG,EAAS,QAAEkZ,EAAO,SAAEhZ,EAAQ,WAAE0uE,EAAU,gBAAE78C,EAAe,mBAAE88C,GAAuBx+K,EACpF8uF,GAAO,EAAAC,GAAA,KACP0vF,GAAe,IAAArzF,cAAa/0D,IAC9Bw5E,GAAU,GACX,CAACA,IACE6uE,EAAkB,KAAG,iBAAkB,wBAAyB,CAClE,sBAAuBF,IAErBG,EAAe,KAAG,uBAAwB,yBAChD,OAAKhvE,EAGG,gBAAoB,MAAO,CAAE1H,UAAW,qCAC5C,gBAAoB,QAAS,CAAEA,UAAW02E,GACtC,gBAAoB,QAAS,CAAE7oD,UAAU,EAAMlxH,KAAM,WAAYqjG,UAAWy2E,EAAiB71D,QAASA,EAASE,SAAU01D,IACzH,gBAAoB,OAAQ,CAAEx2E,UAAW,oBACrC,gBAAoB,OAAQ,CAAEA,UAAW,KAAG,uBAAwB,CAAE,+BAAgC4gB,KAClG/5B,EAAKj/D,cAAc,CAAEzxB,GAAI,gBACzBmgL,EACM,IAAIzvF,EAAKj/D,cAAc,CACrBzxB,GAAI,4BAEN,MACV,gBAAoB,OAAQ,CAAE6pG,UAAW,+DAAiE,IAAIy5B,SAb/G,IAcf,CCzBO,SAASk9C,GAA6B5+K,GACzC,MAAM,MAAEsJ,EAAK,mBAAEipJ,GAAuBvyJ,EACtC,OAAQ,gBAAoB0wI,GAAA,EAAS,CAAE9rI,KAAM,UAAWqjG,UAAW,oCAC/DsqD,IAAuBjpJ,GAAU,gBAAoB,KAAkB,CAAElL,GAAI,uBAAwBoI,OAAQ,CAAE8C,WAC/GipJ,EAAqBjpJ,GAAU,gBAAoB,KAAkB,CAAElL,GAAI,iCAAkCoI,OAAQ,CAAE8C,WAC/H,CCJO,SAASu1K,GAA0B7+K,GACtC,MAAM,UAAEioG,EAAS,cAAE62E,EAAa,aAAEC,EAAY,WAAEC,EAAU,mBAAEC,GAAuBj/K,EAC7E8uF,GAAO,EAAAC,GAAA,KACPmwF,EAA4C,IAAzBJ,EAAcn1K,OACjCw1K,EAAQD,GAAoBF,EAC5BI,EAASF,IAAqBF,EAC9BK,GAAeH,GAAoBF,EACnCM,GAAkB,IAAA9yK,UAAQ,IACrBsyK,EAAc7gL,KAAK87H,GAAiBglD,EAAahlD,KAAe32H,KAAK,OAC7E,CAAC07K,EAAeC,IACnB,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAE92E,UAAW,KAAG,CAACA,EAAW,wCAAyC,uBAC5F,gBAAoB,OAAQ,KACxB,IACAnZ,EAAKj/D,cAAc,CAAEzxB,GAAI,eACzB,KACJ+gL,EAAQ,gBAAoB,IAAK,KAAMrwF,EAAKj/D,cAAc,CAAEzxB,GAAI,iBAAoB,KACpFghL,EAAS,gBAAoB,IAAK,KAAMtwF,EAAKj/D,cAAc,CAAEzxB,GAAI,yBAA4B,KAC7FihL,EAAe,gBAAoB,OAAQ,KACvC,gBAAoB,IAAK,KAAMvwF,EAAKj/D,cAAc,CAAEzxB,GAAI,iBACxD,IACA0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,mBACzB,KAAa,KAChB+gL,GAAUD,EAE6B,KAFT,gBAAoB,WAAgB,KAC/D,gBAAoB,OAAQ,CAAEj3E,UAAW,0EAA2Ex/F,MAAO62K,GAAmBA,GAC9I,KAAQR,EAAcn1K,YAC9Bm1K,EAAcn1K,QAAUs1K,EAAsB,gBAAoBL,GAA8B,CAAEt1K,MAAO21K,EAAoB1sB,mBAAoBusB,EAAcn1K,SAAa,KACpL,CC7BO,SAAS41K,KACZ,OAAQ,gBAAoB,MAAO,CAAEt3E,UAAW,qBAC5C,gBAAoB,KAAkB,CAAE7pG,GAAI,2BACpD,CCDO,SAASohL,GAAqBx/K,GACjC,MAAM,MAAEyI,EAAK,QAAEsnG,EAAO,YAAEquD,EAAW,WAAEqhB,EAAU,WAAEpoF,EAAU,OAAEqoF,GAAW1/K,EAClE2/K,GAAa,IAAAv0F,cAAa5sF,IAC5BA,EAAEw1H,kBACF0rD,SAAgDA,GAAQ,GACzD,CAACA,IACJ,OAAQ,gBAAoB,MAAO,CAAEz3E,UAAW,KAAG,CAC3C,gBAAgB,EAChB,CAAC,KAAK8c,GAAA,GAAyBt8G,OAAW,EAC1C,oBAAoB,EACpB,cAAe4uF,IACf0Y,QAASA,EAASquD,YAAaA,EAAaqhB,WAAYA,GAC5D,gBAAoB,QAAS,CAAEx3E,UAAW,wBACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,iBAAkB6tB,UAAU,EAAMjN,QAASxxB,IACvG,gBAAoB,OAAQ,CAAE4Q,UAAW,oBAAsBx/F,IACnE,gBAAoB,OAAQ,CAAEw/F,UAAW,oBAAqB8H,QAAS4vE,GACnE,gBAAoB,KAAkB,CAAEvhL,GAAI,kBACxD,CCRA,MAAM,IAAU,QAAc,MAIvB,SAASwhL,GAAiB5/K,GAC7B,MAAM,UAAEioG,EAAS,MAAE7mF,EAAK,OAAEC,EAAM,cAAEw+J,EAAa,eAAEC,EAAc,eAAEC,GAAiB,EAAK,MAAEv7K,EAAK,gBAAEk9H,EAAe,WAAE5a,EAAU,aAAEi4D,EAAY,WAAEC,GAAa,EAAI,cAAEF,EAAa,mBAAEG,EAAqBe,IAAQ,SAAE/9C,EAAQ,aAAEC,EAAY,kBAAEQ,EAAiB,MAAE91H,EAAK,UAAE+2C,EAAS,8BAAE85H,EAA6B,kBAAEC,EAAiB,eAAEC,EAAc,YAAEsC,EAAcC,GAAY,cAAEC,EAAgBC,GAAc,gBAAEC,EAAkBC,GAAgB,aAAEn9C,EAAeo9C,GAAa,WAAEvyD,EAAawyD,GAAW,gBAAEC,EAAkBC,GAAgB,cAAE/gD,EAAgBghD,IAAoB3gL,GACriB,0BAAE4gL,EAAyB,0BAAEC,EAAyB,WAAEC,EAAU,YAAEC,EAAW,cAAEC,EAAa,eAAEC,EAAc,kBAAEC,GCdnH,SAA6BlhL,GAChC,MAAM,MAAEwE,EAAK,gBAAEk9H,EAAe,WAAEy/C,EAAU,aAAEj/C,EAAY,WAAE88C,GAAa,EAAI,cAAEF,EAAa,SAAE/pE,EAAW,KAAU/0G,EAC3Gq+K,EAAWn8C,EAAav4H,OAAS,EACjCu1K,EAA4C,IAAzBJ,EAAcn1K,OACjCy3K,GAAe,IAAA50K,UAAQ,IAClB,KAAMsyK,EAAeqC,IAC7B,CAACrC,EAAeqC,IACbE,GAAsB,IAAA70K,UAAQ,IAAM,KAAahI,EAAOs6K,EAAeqC,IAAa,CAAC38K,EAAOs6K,EAAeqC,IAC3GG,GAAmB,IAAA90K,UAAQ,IAAM,KAAehI,EAAOs6K,EAAeqC,IAAa,CAAC38K,EAAOs6K,EAAeqC,IAC1GI,GAAsB,IAAA/0K,UAE5B,IAAOwyK,EAAaqC,EAAsBC,GAAmB,CAACtC,EAAYqC,EAAqBC,IACzFE,GAAwB,IAAAh1K,UAE9B,IAAOwyK,EAAasC,EAAmBD,GAAsB,CAACrC,EAAYqC,EAAqBC,IACzFL,GAAiB,IAAAz0K,UAAQ,KAC3B,GAAK6xK,EAkBA,CACD,GAAIW,GAA0C,IAA5BsC,EAAiB33K,OAC/B,MAAO,MAEX,IAAKq1K,GAAcsC,EAAiB33K,SAAW+3H,EAC3C,MAAO,MAEX,GAAIs9C,GAAcsC,EAAiB33K,SAAW+3H,EAC1C,MAAO,OAEX,IAAKs9C,GAA0C,IAA5BsC,EAAiB33K,OAChC,MAAO,MAEf,KA/Be,CAEX,GAAIq1K,GAAcE,EACd,MAAO,MAGX,IAAKF,GAAcuC,EAAoB53K,SAAW+3H,EAC9C,MAAO,MAGX,IAAKs9C,GAAcE,EACf,MAAO,OAGX,GAAIF,GAAcwC,EAAsB73K,SAAW+3H,EAC/C,MAAO,MAEf,CAeA,MAAO,SAAS,GACjB,CACCs9C,EACAE,EACAx9C,EACA6/C,EACAlD,EACAmD,EACAF,EAAiB33K,SAEfu3K,GAAoB,IAAA91F,cAAarmF,IACnC,MAAM08K,EAAUN,EAAWp8K,GAC3B,OAAOi6K,GAAcoC,EAAaK,KAAaL,EAAaK,EAAQ,GACrE,CAACzC,EAAYoC,EAAcD,IACxBlxH,GAAY,IAAAm7B,cAAY,KAC1B2pB,EAAS,IAAI,EAAK,GACnB,CAACA,IACE2sE,GAAa,IAAAt2F,cAAY,KAC3B2pB,EAAS,IAAI,EAAM,GACpB,CAACA,IACE+rE,GAAa,IAAA11F,cAAarmF,IAC5BgwG,EAAS,CAAChwG,IAAO,EAAM,GACxB,CAACgwG,IACEgsE,GAAc,IAAA31F,cAAa5mF,IAC7B,MAAM4b,EAAW4+J,EACX,KAAaF,EAAet6K,EAAO28K,GACnCrC,EAAcx5K,OAAOd,GACtB65K,GAAaW,GAAc5+J,EAASzW,SAAW+3H,EAKhD3sB,EAAS30F,EAAU4+J,GAHnB/uH,GAIJ,GACD,CAAC+uH,EAAYF,EAAe/pE,EAAU9kD,EAAWkxH,EAAYz/C,EAAiB28C,IAC3E2C,GAAgB,IAAA51F,cAAa5mF,IAC/B,MAAM4b,EAAW4+J,EACXF,EAAcx5K,OAAOd,GACrB,KAAas6K,EAAet6K,EAAO28K,IACpC9C,GAAYW,GAAc5+J,EAASzW,SAAW+3H,EAC/CggD,IAGA3sE,EAAS30F,EAAU4+J,EACvB,GACD,CAACA,EAAYF,EAAe/pE,EAAU2sE,EAAYP,EAAYz/C,EAAiB28C,IAuDlF,MAAO,CACHwC,2BAvD8B,IAAAz1F,cAAY,KACtCizF,EACuB,QAAnB4C,GAA4BM,EAAoB53K,SAAWnF,EAAMmF,OAEjEq3K,EAAcO,GAIdR,EAAYS,GAGQ,QAAnBP,EAELS,IAIAzxH,GACJ,GACD,CACCzrD,EACAy8K,EACAO,EACAD,EACAR,EACAC,EACA/wH,EACAyxH,EACArD,IA4BAuC,2BA1B8B,IAAAx1F,cAAanhF,IACvCo0K,EACIp0K,EACA82K,EAAYS,GAGZR,EAAcO,GAGbt3K,EACLgmD,IAGAyxH,GACJ,GACD,CACCF,EACAD,EACAR,EACAC,EACA/wH,EACAyxH,EACArD,IAKA6C,oBACAD,iBACAF,cACAC,gBACAF,aAER,CD/IiJa,CAAoB3hL,GAC3Js4I,GAAe,IAAAltD,cAAY,EAAGrmF,UACzBipH,EAAW,CACdjZ,SAAU,KACNgsE,EAAY,CAACh8K,GAAM,EAEvB68K,WAAY,KACRZ,EAAc,CAACj8K,GAAM,EAEzB88K,aAAc,IAAMf,EAAW/7K,GAC/BA,OACAsyF,WAAY6pF,EAAkBn8K,MAEnC,CAACipH,EAAYkzD,EAAmBH,EAAaC,EAAeF,IAC/D,OAAQ,gBAAoB,MAAO,CAAE74E,UAAW,wBAC5C,gBAAoB,MAAO,CAAEA,UAAW,mCAAqCo4E,EAAgB,CAAEp+C,WAAUS,oBAAmBR,kBAC5Hv+E,EAAa,gBAAoB,MAAO,CAAEskD,UAAW,gCAAkCk4E,EAAc,CAAE9+J,YAAczU,EAAS,gBAAoB,MAAO,CAAEq7F,UAAW,8BAAgCg4E,EAAY,CAAE5+J,SAAQzU,WAAc,gBAAoB,WAAgB,KAC1Q+yH,EAAc,CACVhwB,UAAWnrG,EAAMmF,OAAS,EAC1Bk/G,QAA4B,SAAnBo4D,EACTpxE,SAAUgxE,EACV93D,SAAU63D,EACVrC,YAAar8C,aAAmD,EAASA,EAAav4H,QAAU,EAChG+3H,kBACA88C,mBAAuC,YAAnByC,IAExBz8K,EAAMmF,OAAS,GAAM,gBAAoB,GAAS,CAAEszC,QAAQ,IAAQ,EAAGn7B,aAAYs7F,iBACvE,gBAAoB,MAAO,CAAEnV,UAAW,4BAA6BxlG,IAAKqf,GAC9E,gBAAoB07J,GAAW,CAAEv1E,UAAW,KAAGA,EAAW,CAClD,kBAAmB83E,IACnB3+J,MAAOy+J,EAAgBziE,aAAiD,EAASA,EAAYngE,OAAO77B,MAAQA,EAAOC,OAAQy+J,EACzH1iE,aAAiD,EAASA,EAAYngE,OAAO57B,OAC7EpZ,KAAKC,IAAI1D,EAAMmF,OAAQ,IAAMm9G,EAAYtiH,MAAOA,EAAOsiH,WAAYA,EAAYkH,WAAYsqB,EAAcmlC,8BAA+BA,EAA+BC,kBAAmBA,EAAmBC,eAAgBA,OAE9N,IAAjBn5K,EAAMmF,QAAiB,gBAAoB,MAAO,CAAEs+F,UAAW,gCAAkCk7B,aAAmD,EAASA,EAAa,CAAE9hH,aAChL,gBAAoB,MAAO,CAAE4mF,UAAW,mCAAqCw4E,EAAgB,CAAE1B,eAAcC,aAAYF,gBAAeG,wBAChJ,CACA,SAASiB,GAAalgL,GAClB,MAAM,MAAE4M,GAAU5M,EAClB,OAAO,gBAAoBojG,GAAA,EAAgB,CAAEt0F,QAASlC,aAAqC,EAASA,EAAMkC,SAC9G,CACA,SAASsxK,GAAepgL,GACpB,MAAM,OAAEqhB,GAAWrhB,EACnB,OAAO,gBAAoBglI,GAAA,EAAa,CAAE3jH,OAAQA,GACtD,CACA,SAASi/J,GAAiBtgL,GACtB,MAAM,SAAEiiI,EAAQ,kBAAES,EAAiB,aAAER,GAAiBliI,EACtD,OAAQ,gBAAoBm+K,GAA2B,CAAEz7C,kBAAmBA,EAAmBT,SAAUA,EAAUC,aAAcA,GACrI,CACA,SAASq+C,KACL,OAAO,gBAAoBhB,GAAgC,KAC/D,CACA,SAASiB,GAAYxgL,GACjB,OAAO,gBAAoBw/K,GAAsB5gL,OAAOiI,OAAO,CAAC,EAAG7G,GACvE,CACA,SAAS0gL,GAAiB1gL,GACtB,MAAM,WAAEg/K,EAAU,cAAEF,EAAa,aAAEC,EAAY,mBAAEE,GAAuBj/K,EACxE,OAAQ,gBAAoB6+K,GAA2B,CAAEG,WAAYA,EAAYF,cAAeA,EAAeC,aAAcA,EAAcE,mBAAoBA,GACnK,CACA,SAAS0B,GAAe3gL,GACpB,MAAM,QAAE6oH,EAAO,SAAEhZ,EAAQ,SAAEkZ,EAAQ,WAAEw1D,EAAU,gBAAE78C,EAAe,mBAAE88C,EAAkB,UAAE7uE,GAAc3vG,EACpG,OAAQ,gBAAoBs+K,GAA6B,CAAE3uE,UAAWA,EAAWkZ,QAASA,EAASE,SAAUA,EAAUlZ,SAAUA,EAAU0uE,WAAYA,EAAY78C,gBAAiBA,EAAiB88C,mBAAoBA,GAC7N,CE7EO,MAAM,GAA6B,CAACz+K,EAAe+hL,IAAiB,KACvE,MAAM,IAAI,MAAmB,cAAc/hL,uBAAmC+hL,KAAgB,EAW3F,SAAS,GAAgBt5K,EAASsmF,GACrC,OAAOtmF,EAAQu5K,gBAAkBv5K,EAAQC,OAAS,IAAIqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,kBACnF,CAIO,SAAS4jL,GAAiBp6K,EAAUknF,GACvC,OAAOlnF,EAAS3J,KAAKgkL,GAAO,GAAgBA,EAAInzF,KAAO1rF,KAAK,KAChE,CAIO,SAAS8+K,GAAc15K,GAC1B,OAAOA,EAAQrD,GACnB,CC9BA,MAAMg9K,IAAmC,IAAAn2K,eAAc,CACnDo3F,eAAgB,GAA2B,iBAAkB,oCAC7DC,iBAAkB,GAA2B,mBAAoB,oCACjE++E,wBAAyB,GAA2B,0BAA2B,oCAC/EC,sBAAuB,GAA2B,wBAAyB,oCAC3EC,yBAA0B,GAA2B,2BAA4B,oCACjFC,2BAA4B,GAA2B,6BAA8B,oCACrFC,wBAAyB,GAA2B,0BAA2B,oCAC/EC,+BAAgC,GAA2B,iCAAkC,oCAC7FC,4BAA6B,GAA2B,8BAA+B,oCACvFC,6BAA8B,GAA2B,+BAAgC,oCACzFC,+BAAgC,GAA2B,iCAAkC,oCAC7FC,qBAAsB,GAA2B,uBAAwB,oCACzEC,mBAAoB,GAA2B,qBAAsB,sCAEzEX,GAAiCh2K,YAAc,mCAIxC,MAAM42K,GAAsC,KACxC,IAAA12K,YAAW81K,IAKTa,GAAqChjL,IAC9C,MAAM,SAAEuM,GAAavM,EAAOwhG,GAAa,SAAOxhG,EAAO,CAAC,aACxD,OAAQ,gBAAoBmiL,GAAiC11K,SAAU,CAAExC,MAAOu3F,GAAcj1F,EAAU,ECjBrG,SAAS02K,GAAcr/K,GAC1B,OAAQ,IAAQA,IAAqB,iBAAbA,EAAIgB,IAChC,CAKO,SAASs+K,GAAsBt/K,GAClC,OAAS,IAAQA,IACA,yBAAbA,EAAIgB,IACZ,CClBA,MAAMu+K,IAAsB,IAAAn3K,eAAc,CACtCoM,MAAO,CACHgrK,aAAc,CAAC,GAEnBC,YAAa,MAEjBF,GAAoBh3K,YAAc,sBAI3B,MAAM,GAAyB,KAAM,IAAAE,YAAW82K,ICIhD,SAAS,GAAwB5gL,EAAa6V,GACjD,IAAI/T,EAAIswB,EACR,MAAM2uJ,EAAsH,QAAlG3uJ,EAAmD,QAA7CtwB,EAAK+T,EAAMgrK,aAAa7gL,EAAYnE,WAAwB,IAAPiG,OAAgB,EAASA,EAAG4F,aAA0B,IAAP0qB,EAAgBA,EAAKpyB,EAAY4xH,aAIrK,OAHI5xH,EAAYghL,UACZhhL,EAAYghL,SAASD,GAElBA,CACX,CAoBO,SAASE,GAA6Bv5K,EAAOmO,EAAOqrK,GACvD,OAAIR,GAAch5K,GACP,GAAwBA,EAAOmO,GAEjC8qK,GAAsBj5K,GAnB5B,SAAyC1H,EAAa6V,EAAOqrK,GAChE,MAAMj9K,EAASjE,EAAY6gL,aAAanlL,KAAK6oJ,GAAM08B,GAA6B18B,EAAG1uI,EAAOqrK,KAC1F,OAAOlhL,EAAYmhL,aAAal9K,EAAQi9K,EAC5C,CAiBe,CAAgCx5K,EAAOmO,EAAOqrK,GAEhD,KAAQx5K,GACNA,EAAM1B,QAAO,CAACwpC,EAAK4xI,KACtB,MAAMC,EAAgBJ,GAA6BG,EAAGvrK,EAAOqrK,GAC7D,GFnDqB7/K,EEmDA+/K,EFlDd,CAACV,GAAeC,IACjBlxJ,MAAMjd,GAASA,EAAKnR,KEiDD,CAErB,IAAKggL,EACD,OAAO7xI,EAEN,GAAI,KAAQ6xI,GAEb,OADA7xI,EAAItuC,QAAQmgL,EAAcr+K,QAAQo+K,QAAmB,IAANA,KACxC5xI,CAEf,CF5DL,IAA0BnuC,EE8DrB,OADAmuC,EAAItuC,KAAKmgL,GACF7xI,CAAG,GACX,IAEA9nC,CACX,CClEO,MCEM45K,GAA+B,CAACvqK,EAAewqK,KACxD,MAAMC,ECwEH,SAAyC95K,EAAOw5K,GACnD,MAAM,MAAErrK,GAAU,KAElB,OAsBG,SAA0BnO,GAC7B,OAAO,IAAAuC,UAAQ,IACJvC,GACR,CAAC,KAAgBA,IACxB,CA1BW+5K,CADeR,GAA6Bv5K,EAAOmO,OD1E5B6rK,GC4ElC,CD5EkCA,CAAgC3qK,GAC9D,OAAO,IAAA9M,UAAQ,IACJ03K,GAAkCH,EAAuBD,IACjE,CAACC,EAAuBD,GAAe,EAExCI,GAAoC,CAAC5qK,EAAewqK,KACtD,IAAKxqK,IAAkBwqK,EACnB,MAAO,GAEX,MAAMK,EAAsB,KAAWL,GAAiBA,EAAgB,IAAMA,EAC9E,OAAOxqK,EACFrb,KAAI,CAAC0a,EAAiBhW,KAChB,CACHgW,kBACAmrK,cAAeK,EAAoBxrK,EAAiBhW,OAGvD4C,QAAQR,KACD,QAAcA,EAAK4T,kBAC7B,E,gBE1BN,MAiBayrK,GAAe,CACxBC,KAlBS,KAmBTC,UAlBelsK,IACfA,EAAMmsK,eAAe53K,OAAS,SAAS,EAkBvC63K,YAhBiBpsK,IACjBA,EAAMmsK,eAAe53K,OAAS,SAAS,EAgBvC83K,UAdc,CAACrsK,EAAOC,KACtBD,EAAMmsK,eAAe53K,OAAS,QAC9ByL,EAAMmsK,eAAe33K,MAAQyL,EAAOvK,QAAQlB,KAAK,EAajD83K,WAXgBtsK,IAChBA,EAAMmsK,eAAe53K,OAAS,UAAU,GCO/Bg4K,GAAwB,CACjCC,qBArByB,KAsBzBC,mBArBwBzsK,IACxBA,EAAM8lB,UAAUvxB,OAAS,UACzByL,EAAM8lB,UAAUtxB,WAAQ3I,CAAS,EAoBjC6gL,qBAlByB,CAAC1sK,EAAOC,KACjCD,EAAM8lB,UAAUvxB,OAAS,UACzByL,EAAM8lB,UAAUjd,KAAO5I,EAAOvK,QAAQowB,SAAS,EAiB/C6mJ,mBAfuB,CAAC3sK,EAAOC,KAC/BD,EAAM8lB,UAAUvxB,OAAS,QACzByL,EAAM8lB,UAAUtxB,MAAQyL,EAAOvK,QAAQlB,KAAK,EAc5Co4K,2BAZ+B,KAa/BC,oBAZyB7sK,IACzBA,EAAM8lB,UAAUvxB,OAAS,UAAU,GCb1Bu4K,GAAe9sK,GAAUA,EAIzB+sK,GAAqB,CAAC/sK,EAAO5P,IAAmC,SAAvB4P,EAAMgtK,aAA0B58K,EAAQrD,IAAMqD,EAAQC,MAI/F48K,GAAsBjtK,GAAUA,EAAMgtK,aCOtCE,GAA6B,CACtCC,0BAjB8B,KAkB9BC,wBAjB4B,KAkB5BC,0BAjB8B,CAACrtK,EAAOC,KACtCA,EAAOvK,QAAQlG,SAAShC,SAASq8K,IAC7B,MAAMjlG,EAAWmoG,GAAmB/sK,EAAO6pK,GACtC7pK,EAAMxQ,SAASs1E,MAAMF,KACtB5kE,EAAMxQ,SAASs1E,MAAMF,GAAYilG,EACrC,GACF,EAYFyD,wBAV4B,KAW5BC,gCAVoC,KAWpCC,yBAV6B,MCmBpBC,GAAkC,CAC3CC,+BAhCmC,KAiCnCC,6BAhCkC3tK,IAClCA,EAAMxQ,SAASo+K,gBAAgBr5K,OAAS,UACxCyL,EAAMxQ,SAASo+K,gBAAgBp5K,WAAQ3I,EACvCmU,EAAMxQ,SAASq+K,eAAe18K,OAAS,EACvC6O,EAAMxQ,SAASs+K,kBAAkB38K,OAAS,EAC1C6O,EAAMxQ,SAASqZ,KAAO,EAAE,EA4BxBklK,+BA1BmC,CAAC/tK,EAAOC,KAC3CD,EAAMxQ,SAASo+K,gBAAgBr5K,OAAS,UACxCyL,EAAMxQ,SAASw+K,8BAAgC/tK,EAAOvK,QAAQtE,WAC9D6O,EAAOvK,QAAQlG,SAAShC,SAASq8K,IAC7B,MAAMjlG,EAAWmoG,GAAmB/sK,EAAO6pK,GACtC7pK,EAAMxQ,SAASs1E,MAAMF,KACtB5kE,EAAMxQ,SAASs1E,MAAMF,GAAYilG,EACrC,IAEJ7pK,EAAMxQ,SAASqZ,KAAO5I,EAAOvK,QAAQlG,SAAS3J,KAAKgkL,GAAOkD,GAAmB/sK,EAAO6pK,KACpF7pK,EAAMxQ,SAASs+K,kBAAoB7tK,EAAOvK,QAAQ0kB,OAAO,EAiBzD6zJ,6BAfiC,CAACjuK,EAAOC,KACzCD,EAAMxQ,SAASo+K,gBAAgBr5K,OAAS,QACxCyL,EAAMxQ,SAASo+K,gBAAgBp5K,MAAQyL,EAAOvK,QAAQlB,KAAK,EAc3D05K,qCAZyC,KAazCC,8BAZmCnuK,IACnCA,EAAM8lB,UAAUvxB,OAAS,UAAU,GCC1B65K,GAA+B,CACxCC,4BA5BgC,KA6BhCC,0BA5B+BtuK,IAC/BA,EAAMxQ,SAAS++K,aAAah6K,OAAS,UACrCyL,EAAMxQ,SAAS++K,aAAa/5K,WAAQ3I,CAAS,EA2B7C2iL,4BAzBgC,CAACxuK,EAAOC,KACxCD,EAAMxQ,SAAS++K,aAAah6K,OAAS,UACrC0L,EAAOvK,QAAQlG,SAAShC,SAASq8K,IAC7B,MAAMjlG,EAAWmoG,GAAmB/sK,EAAO6pK,GACtC7pK,EAAMxQ,SAASs1E,MAAMF,KACtB5kE,EAAMxQ,SAASs1E,MAAMF,GAAYilG,EACrC,IAEJ7pK,EAAMxQ,SAASqZ,KAAO7I,EAAMxQ,SAASqZ,KAAK3b,OAAO+S,EAAOvK,QAAQlG,SAAS3J,KAAKgkL,GAAOkD,GAAmB/sK,EAAO6pK,MAC/G7pK,EAAMxQ,SAASs+K,kBAAoB7tK,EAAOvK,QAAQ0kB,OAAO,EAiBzDq0J,0BAf8B,CAACzuK,EAAOC,KACtCD,EAAMxQ,SAAS++K,aAAah6K,OAAS,QACrCyL,EAAMxQ,SAAS++K,aAAa/5K,MAAQyL,EAAOvK,QAAQlB,KAAK,EAcxDk6K,kCAZsC,KAatCC,2BAZgC3uK,IAChCA,EAAMxQ,SAAS++K,aAAah6K,OAAS,UAAU,GChBtCq6K,IAAyB,KAAA3xI,gBAAe6vI,IAAc9sK,GAAUA,EAAMikH,UAAU4qD,QAAQtoL,OAIxFuoL,IAAmC,KAAA7xI,gBAAe6vI,IAAc9sK,GAAUA,EAAMikH,UAAU4qD,QAAQjI,aAIlGmI,IAA2B,KAAA9xI,gBAAe6vI,IAAc9sK,GAAUA,EAAMikH,UAAU+qD,SAASzoL,OAI3F0oL,IAAqC,KAAAhyI,gBAAe6vI,IAAc9sK,GAAUA,EAAMikH,UAAU+qD,SAASpI,aAIrGsI,IAAmC,KAAAjyI,gBAAe2xI,GAAwBE,IAAkC,CAACvoL,EAAMqgL,KAAe,CAC3IrgL,OACAqgL,iBAKSuI,IAAqC,KAAAlyI,gBAAe8xI,GAA0BE,IAAoC,CAAC1oL,EAAMqgL,KAAe,CACjJrgL,OACAqgL,iBAKSwI,IAAkC,KAAAnyI,gBAAe6xI,GAAkCF,GAAwBK,GAAoCF,IAA0B,CAACM,EAA4BC,EAAkBC,EAA6BC,IAAsBH,IAA+BE,IAClT,KAAQ,IAAIC,GAAmBpqG,OAAQ,IAAIkqG,GAAkBlqG,UAIrDqqG,IAAgC,KAAAxyI,gBAAe2xI,GAAwB,KCbvEc,GAAoB,CAC7BC,gBA7BoB,CAAC3vK,EAAOC,KAC5BD,EAAMikH,UAAU4qD,QAAQtoL,KAAO0Z,EAAOvK,QAAQuuH,UACzC,KAAMhkH,EAAOvK,QAAQkxK,cACtB5mK,EAAMikH,UAAU4qD,QAAQjI,WAAa3mK,EAAOvK,QAAQkxK,WACxD,EA0BAgJ,gBAxBqB5vK,IACrB,MAAM6vK,EAAqBd,GAAyB/uK,GAC9C8vK,EAA+Bb,GAAmCjvK,GACxEA,EAAMikH,UAAU4qD,QAAQtoL,KAAOspL,EAC/B7vK,EAAMikH,UAAU4qD,QAAQjI,WAAakJ,CAA4B,EAqBjEC,gBAnBqB/vK,IACrB,MAAMsvK,EAAmBV,GAAuB5uK,GAC1CqvK,EAA6BP,GAAiC9uK,GACpEA,EAAMikH,UAAU+qD,SAASzoL,KAAO+oL,EAChCtvK,EAAMikH,UAAU+qD,SAASpI,WAAayI,CAA0B,EAgBhEW,gBAdqBhwK,IACrB,MAAMqvK,EAA6BP,GAAiC9uK,GACpEA,EAAMikH,UAAU4qD,QAAQjI,YAAcyI,CAA0B,EAahEY,eAXoBjwK,IACpBA,EAAMikH,UAAU4qD,QAAQtoL,KAAO,EAAE,GCwBxB2pL,GAAmB,CAC5BC,sBAhD0B,CAACnwK,EAAOC,KAClCD,EAAMxQ,SAAS4B,WAAa6O,EAAOvK,QAAQtE,UAAU,EAgDrDg/K,eA9CmB,KA+CnBC,oBA9CyBrwK,IACzBA,EAAMxQ,SAAS8gL,yBAAyB/7K,OAAS,SAAS,EA8C1Dg8K,sBA5C2BvwK,IAC3BA,EAAMxQ,SAAS8gL,yBAAyB/7K,OAAS,SAAS,EA4C1Di8K,oBA1CwB,CAACxwK,EAAOC,KAChCD,EAAMxQ,SAAS8gL,yBAAyB/7K,OAAS,QACjDyL,EAAMxQ,SAAS8gL,yBAAyB97K,MAAQyL,EAAOvK,QAAQlB,KAAK,EAyCpEi8K,qBAvC0BzwK,IAC1BA,EAAMxQ,SAAS8gL,yBAAyB/7K,OAAS,UAAU,EAuC3Dm8K,yCArC6C,CAAC1wK,EAAOC,KACrDD,EAAMxQ,SAASw+K,8BAAgC/tK,EAAOvK,QAAQtE,UAAU,EAqCxEu/K,UAnCc,CAAC3wK,EAAOC,KACtBD,EAAMxQ,SAASq+K,eAAe18K,OAAS8O,EAAOvK,QAAQvE,MAAM,EAmC5Dy/K,SA3Ba,CAAC5wK,EAAOC,KACrBD,EAAMxQ,SAASq+K,eAAe38K,MAAQ+O,EAAOvK,QAAQxE,KAAK,EA2B1D23H,UAlCc,CAAC7oH,EAAOC,KACtBD,EAAMxQ,SAASq+K,eAAejlD,OAAS3oH,EAAOvK,QAAQkzH,MAAM,EAkC5DioD,SAhCa,CAAC7wK,EAAOC,KACrBD,EAAMxQ,SAASq+K,eAAeiD,MAAQ7wK,EAAOvK,QAAQo7K,KAAK,EAgC1DC,4BA3BgC,CAAC/wK,EAAOC,KACxCD,EAAMxQ,SAASq+K,eAAemD,yBAA2B/wK,EAAOvK,QAAQ3G,OAAO,EA2B/EkiL,oBAtBwB,CAACjxK,EAAOC,KAChCD,EAAMxQ,SAASq+K,eAAeqD,iBAAmBjxK,EAAOvK,QAAQ3G,OAAO,EAsBvEoiL,uBApB2B,CAACnxK,EAAOC,KACnCD,EAAMxQ,SAASq+K,eAAeuD,oBAAsBnxK,EAAOvK,QAAQ3G,OAAO,EAoB1EsiL,sCA3B0C,CAACrxK,EAAOC,KAClDD,EAAMxQ,SAAS8hL,mCAAqCrxK,EAAOvK,QAAQjN,UAAU,GC3BpE8oL,GAAe/qL,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGu9K,IAAeO,IAAwBkB,IAAkCW,IAA+BlB,IAA6BwC,IAAoBQ,ICR9Q,GAAe,CACxB/D,eAAgB,CACZ53K,OAAQ,WAEZuxB,UAAW,CACPvxB,OAAQ,WAEZ/E,SAAU,CACNs1E,MAAO,CAAC,EACR+oG,eAAgB,CACZ18K,OAAQ,EACRD,MAAO,IACP03H,OAAQ,GACRooD,yBAA0B,GAC1BI,oBAAqB,GACrBF,iBAAkB,IAEtBtD,gBAAiB,CACbr5K,OAAQ,WAEZg6K,aAAc,CACVh6K,OAAQ,WAEZ+8K,mCAAoC,GACpCxD,kBAAmB,CAAC,EACpBwC,yBAA0B,CACtB/7K,OAAQ,YAGhBtN,OAAQ,CAAC,EACTg9H,UAAW,CACP+qD,SAAU,CAAC,EACXH,QAAS,CAAC,IC/BZ2C,IAAuB,SAAY,CACrCvuK,KAAM,uBAENC,aAAc,GACdC,SAAUouK,KAKDE,GAAeD,GAAqBnuK,QAIpCE,GAAUiuK,GAAqBjuK,QCbrC,SAAUmuK,KACb,aAAa,QAAW,yBAC5B,CCIO,MAAMC,IAAoC,KAAA10I,gBAAe6vI,IAAc9sK,GAAUA,EAAMgtK,eAIjF4E,IAAuB,KAAA30I,gBAAe6vI,IAAc9sK,IAAY,IAAI/T,EAAI,OAA8C,QAAtCA,EAAK+T,EAAM/Y,OAAO4qL,sBAAmC,IAAP5lL,EAAgBA,EAAK,EAAE,IAIrJ6lL,IAA0C,KAAA70I,gBAAe00I,GAAmCC,IAAsB,CAAC5E,EAAc6E,IAAoC,SAAjB7E,EAA0B,CAAEzrK,KAAMswK,GAAmB,CAAEzjL,OAAQyjL,KAInNE,IAAmC,KAAA90I,gBAAe6vI,IAAc9sK,GAAUA,EAAM4sE,iBAIhFolG,IAAgC,KAAA/0I,gBAAe00I,GAAmC5C,IAA0B,CAAC/B,EAAc/oD,IAA+B,SAAjB+oD,EAA0B,CAAEzrK,KAAM0iH,GAAc,CAAE71H,OAAQ61H,KAInMguD,IAA0D,KAAAh1I,gBAAe00I,GAAmC5C,GAA0BE,GAAoC2C,IAAsB,CAAC5E,EAAc/oD,EAAW2iD,EAAYiL,KAC/O,MAAMK,EAAmBtL,EACnB,KAAM3iD,EAAW4tD,GACjB,KAAW5tD,EAAW4tD,GAC5B,MAAwB,SAAjB7E,EAA0B,CAAEzrK,KAAM2wK,GAAqB,CAAE9jL,OAAQ8jL,EAAkB,IAKjF92E,IAAwB,KAAAn+D,gBAAe80I,GAAkC9C,GAAoCgD,IAAyD,CAAClxK,EAAa6lK,EAAYp3K,IAAao3K,GACpN,SAA2B7lK,EAAavR,IACxC,SAA2BuR,EAAavR,KCpCvC9F,eAAe,GAA2BslF,EAASpC,GACtD,OAAOoC,EAAQpoF,QACVuB,UAAU6mF,EAAQ7mF,WAClBM,aACAskF,0BAA0BH,GAC1BxwD,OAAOze,IAER,MAAM,SAAaA,EAAI,GAE/B,CCRO,MAAMw0K,IAAkB,KAAAl1I,gBAAe6vI,IAAc9sK,GAAUA,EAAM8lB,UAAUjd,OAIzEupK,IAAwB,KAAAn1I,gBAAe6vI,IAAc9sK,GAAUA,EAAM8lB,UAAUvxB,SAI/E89K,IAAuB,KAAAp1I,gBAAe6vI,IAAc9sK,GAAUA,EAAM8lB,UAAUtxB,QCLpF,SAAU89K,WACP,QAAW,CAAC/uK,GAAQipK,qBAAqBtiL,MAAOqZ,GAAQqpK,2BAA2B1iL,OAAQqoL,GACrG,CAIO,SAAUA,GAAkBtyK,GAC/B,GAAIsD,GAAQqpK,2BAA2B1iL,MAAM+V,GAEzC,OAEJ,MAAQvK,SAAS,YAAE88K,IAAmBvyK,EACtC,IACI,MAAM2sE,QAAuB,QAAOmlG,IAC9B/iG,QAAgB,QAAK0iG,IAE3B,IAAI5rJ,QADE,QAAIviB,GAAQkpK,mBAAmB,CAAE+F,iBAUvC,OANI1sJ,SAF6B,QAAOqsJ,aAKlB,QAAK,GAA4BnjG,EAASpC,UAE1D,QAAIrpE,GAAQmpK,qBAAqB,CAAE5mJ,YAAW0sJ,iBAC7C1sJ,CACX,CACA,MAAOtxB,SACG,QAAI+O,GAAQopK,mBAAmB,CAAEn4K,QAAOg+K,gBAClD,CACA,eACc,mBACA,QAAIjvK,GAAQspK,oBAAoB,CAAE2F,iBAEhD,CACJ,CC/BO,MAAMC,GAAoB,CAAClsL,EAAMmsL,IAC7B,KAAQnsL,EAAKV,KAAKiI,GAAQ4kL,EAAY5kL,MAKpC6kL,IAAoB,KAAA11I,gBAAe6vI,IAAc9sK,IAAY,IAAI/T,EAAI,OAAsC,QAA9BA,EAAK+T,EAAMxQ,SAASqZ,YAAyB,IAAP5c,EAAgBA,EAAK,EAAE,IAI1I2mL,IAAsB,KAAA31I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASs1E,QAI5E+tG,IAAiB,KAAA51I,gBAAe01I,GAAmBC,GAAqBH,IAIxEK,IAA2B,KAAA71I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAAS4B,aAIjF2hL,IAA6B,KAAA91I,gBAAe6vI,IAAc9sK,IAAY,IAAI/T,EAAI,OAA0D,QAAlDA,EAAK+T,EAAMxQ,SAAS8gL,gCAA6C,IAAPrkL,OAAgB,EAASA,EAAGsI,MAAM,IAIlLy+K,IAA4B,KAAA/1I,gBAAe6vI,IAAc9sK,IAAY,IAAI/T,EAAI,OAA0D,QAAlDA,EAAK+T,EAAMxQ,SAAS8gL,gCAA6C,IAAPrkL,OAAgB,EAASA,EAAGuI,KAAK,IAIhLy+K,IAA8C,KAAAh2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASw+K,gCAIpGkF,IAAuB,KAAAj2I,gBAAe6vI,IAAc9sK,IAAY,IAAI/T,EAAI,OAA8C,QAAtCA,EAAK+T,EAAM/Y,OAAOksL,sBAAmC,IAAPlnL,EAAgBA,EAAK,EAAE,IAIrJmnL,IAAe,KAAAn2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASq+K,eAAejlD,SAIpFyqD,IAAc,KAAAp2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASq+K,eAAeiD,QAInFwC,IAAc,KAAAr2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASq+K,eAAe38K,QAInFqiL,IAAe,KAAAt2I,gBAAe6vI,IAAc9sK,IAAY,IAAI/T,EAAIswB,EAAIK,EAAI,OAAwJ,QAAhJA,EAAgG,QAA1FL,EAA+B,QAAzBtwB,EAAK+T,EAAMxQ,gBAA6B,IAAPvD,OAAgB,EAASA,EAAG6hL,yBAAsC,IAAPvxJ,OAAgB,EAASA,EAAGprB,cAA2B,IAAPyrB,EAAgBA,EAAK5c,EAAMxQ,SAASq+K,eAAe18K,MAAM,IAIjSqiL,IAAiC,KAAAv2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASq+K,eAAemD,2BAItGyC,IAAyB,KAAAx2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASq+K,eAAeqD,mBAI9FwC,IAA4B,KAAAz2I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASq+K,eAAeuD,sBAIjGuC,IAA4B,KAAA12I,gBAAes2I,GAAcD,GAAaD,GAAaD,GAAcI,GAAgCC,GAAwBC,IAA2B,CAACviL,EAAQD,EAAO4/K,EAAOloD,EAAQooD,EAA0BE,EAAkBE,KACjQ,CACHlgL,QACA8/K,2BACAI,sBACAF,mBACA//K,SACA2/K,QACAloD,aAMKgrD,IAAkC,KAAA32I,gBAAe6vI,IAAc9sK,GACjEA,EAAMxQ,SAASs+K,oBAKb+F,IAA2C,KAAA52I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAAS8hL,qC,gBCjGvG,MAAMwC,GACTntL,YAAYsG,EAAUiE,EAAQ,GAAIC,EAAS,GACvCrK,KAAKmG,SAAWA,GAChB,QAAUkE,GAAU,EAAG,4CAA4CA,MACnE,QAAUD,EAAQ,EAAG,yCAAyCA,KAE9DpK,KAAKsF,MAAQa,EAASmd,MAAMjZ,EAAQA,EAASD,GAE7CpK,KAAKqK,OAAStB,KAAKC,IAAIqB,EAAQlE,EAASsE,QAExCzK,KAAKoK,MAAQA,EACbpK,KAAKsK,WAAanE,EAASsE,MAC/B,CACA7H,aACI,OAA0B,IAAtB5C,KAAKsF,MAAMmF,OACJzK,KAEJ,IAAIgtL,GAAehtL,KAAKmG,SAAUnG,KAAKoK,MAAOpK,KAAKqK,OAASrK,KAAKsF,MAAMmF,OAClF,CACA7H,WAAWqqL,GACP,OAA0B,IAAtBjtL,KAAKsF,MAAMmF,OACJzK,KAEJ,IAAIgtL,GAAehtL,KAAKmG,SAAUnG,KAAKoK,MAAO6iL,EAAYjtL,KAAKsF,MAAMmF,OAChF,CACA7H,YACI,MAAO,IAAI5C,KAAKmG,SACpB,CACAvD,gBAAgBsqL,GACZ,MAAO,IAAIltL,KAAKmG,UAAUm4E,KAAK4uG,EACnC,EC3BJ,MAAMC,GAAyBpC,GAAoBsB,IAC3C,QAAyBtB,GAClBsB,GAEJ,QAAyBtB,GAC1BsB,EAAehmL,QAAQR,IAAUklL,EAAetwK,KAAK2U,SAASvpB,EAAKI,OACnEomL,EAAehmL,QAAQR,IAAUklL,EAAezjL,OAAO8nB,SAASvpB,EAAK0D,SAEzE6jL,GAA2BxkL,GAAsByjL,IACnD,IAAKzjL,EACD,OAAOyjL,EAEX,IAAI,SAAwDzjL,GACxD,MAAM,IAAI,MAAe,gEAE7B,OAAO,SAAsCA,GACvCyjL,EAAehmL,QAAQiD,GAAYV,EAAiBtB,OAAO8nB,SAAS9lB,EAAQC,SAC5E8iL,EAAehmL,QAAQiD,GAAYV,EAAiB6R,KAAK2U,SAAS9lB,EAAQrD,MAAK,EAEnFonL,GAAuBhnL,GAAYgmL,GAC9BhmL,EACDgmL,EAAehmL,QAAQR,GAASA,EAAK0D,MAAM6zE,cAAchuD,SAAS/oB,EAAO+2E,iBACzEivG,E,2BCyEH,MAAMiB,GAA0BxtL,KAAcA,EAAQI,aAAa4b,oBC/FnElZ,eAAe2qL,GAAarlG,EAAS50D,EAASk6J,EAAoBnB,GACrE,OAAQA,aAAuD,EAASA,EAAe5hL,QF0BpF7H,eAA8C0wB,EAASk6J,EAAoBnB,GAC9E,IAAIoB,EAAmB,KAAKN,GAAsBK,EAAmBzC,gBAAiBqC,GAAwB95J,EAAQ5qB,UAAW2kL,GAAoB/5J,EAAQwuG,QAAtI,CAA+IuqD,GAItK,MAHsB,SAAlB/4J,EAAQ02J,QACRyD,EAAmB,IAAIA,GAAkBlqK,WAEtC,IAAIypK,GAAeS,EAAkBn6J,EAAQlpB,MAAOkpB,EAAQjpB,OACvE,CE/BUqjL,CAA+Bp6J,EAASk6J,EAAoBnB,GD4B/DzpL,eAAuCslF,EAAS50D,EAASk6J,GAC5D,MAAM,QAAE1tL,EAAO,UAAEuB,GAAc6mF,GACzB,eAAEpC,EAAc,SAAEp9E,EAAQ,MAAE0B,EAAK,yBAAE8/K,EAAwB,oBAAEI,EAAmB,iBAAEF,EAAgB,OAAE//K,EAAM,OAAEy3H,EAAM,MAAEkoD,EAAK,gCAAE2D,EAA+B,oBAAEC,GAAsB,EAAI,OAAEC,GAAYv6J,EACpMw6J,EAA4B,IAAQ5D,IACtC,IAAQI,IACR,IAAQF,KACPtoD,IACA8rD,IACA5D,GACU,IAAX3/K,EAIJ,GAAIijL,GAAuBxtL,KACvB,SAAsC4I,IACtColL,EAA2B,CAC3B,MAAML,QA7Cd7qL,eAAuC9C,EAASuB,EAAWykF,EAAgBp9E,EAAU8kL,GACjF,MAAMO,EAAgBrlL,EAASpB,OACzBW,EAAU,EAAC,SAA2B69E,EAAgBioG,KACvD,QAAyBP,EAAmBzC,iBAC7C9iL,EAAQ1D,MAAK,SAA2BuhF,EAAgB0nG,EAAmBzC,iBAE/E,MAAM5iH,QAAwBroE,EACzBuB,UAAUA,GACVO,YACAosL,SAAS,EAAC,SAAaloG,IAAkB79E,GACzCuzG,UACAlmF,OAAOze,IACR,MAAM,SAAaA,EAAI,IAErBo3K,QAA0B9lH,EAAgB6zC,UAAU1mF,OAAOze,IAC7D,MAAM,SAAaA,EAAI,IAErBq3K,EAAiB,SAAmBD,IACnCE,GAAWD,EAAe7vI,OAAO+vI,mBACxC,OAAOD,EAAQpvL,KAAI,EAAEwN,MACV,CACHhD,MAAOgD,EAAOy+D,oBAAoB7uD,KAClClW,IAAKsG,EAAOy+D,oBAAoB/kE,OAG5C,CAoBuCooL,CAAwBvuL,EAASuB,EAAWykF,EAAgBp9E,EAAU8kL,GACrG,OAAO,IAAIR,GAAeS,EAAkBrjL,EAAOC,EACvD,CACA,IAAIo8E,EAAS3mF,EAAQuB,UAAUA,GAAWM,aAAa+G,WAAWkiE,eAAekb,GACjF,MAAMwoG,EAAgB,CAAC,EACnBlkL,IACAq8E,EAASA,EAAOv9E,UAAUkB,IAE1BC,IACAo8E,EAASA,EAAO8nG,WAAWlkL,IAE3By3H,IACAwsD,EAAcjoL,OAASy7H,GAEvB8rD,IAAwBN,GAAuBxtL,KAC/CwuL,EAAcV,qBAAsB,GAEpCllL,IACA4lL,EAAc5lL,SACT4kL,GAAuBxtL,KAAa,SAAyC4I,GAExEA,EADA,CAAEiiE,cAAejiE,EAAS+R,OAGpCuvK,IACAsE,EAActE,MAAQA,GAEtB2D,IACAW,EAAcX,gCAAkCA,GAE/C,IAAQW,KACT7nG,EAASA,EAAOzqD,YAAYsyJ,KAE5BhE,aAAiE,EAASA,EAAoB7/K,UAC9Fg8E,EAASA,EAAO+nG,gBAAgBlE,IAEpC,MAAMmE,EAeV,SAAqC3oG,EAAgBokG,EAA0Ba,EAAgB/rJ,GAC3F,OAAI,QAAyB+rJ,GAClBb,QAA2EA,EAA2B,GAQ1G,CAJ6B,CAChCzwK,iBAAiB,SAA2BqsE,EAAgBilG,GAC5DnG,cAAe5lJ,EAAUz7B,QAEY2mL,QAA2EA,EAA2B,GACnJ,CA1B8CwE,CAA4B5oG,EAAgBokG,EAA0BsD,EAAmBzC,eAAgByC,EAAmBxuJ,WAUtK,OATIyvJ,EAAkChkL,SAClCg8E,EAASA,EAAOkoG,qBAAqBF,KAErCrE,aAA2D,EAASA,EAAiB3/K,UACrFg8E,EAASA,EAAOmoG,aAAaxE,IAE7ByD,GACApnG,EAAOooG,WAAWhB,GAEfpnG,EAAOt9E,QAAQmsB,OAAO5nB,IACzB,MAAM,SAAaA,EAAM,GAEjC,CC3FUohL,CAAwB5mG,EAAS50D,EAASk6J,EACpD,CCCO,SAAUuB,GAAaz7J,GAC1B,MAAM40D,QAAgB,QAAK0iG,IACrBG,QAAuB,QAAOC,IAC9BhsJ,QAAkB,QAAOqsJ,IACzB2D,QAAsC,QAAO/D,IAC7CoB,QAAuB,QAAOD,IAC9B6C,QAA4B,QAAK1B,GAAcrlG,EAASxoF,OAAOiI,OAAO,CAAEm+E,eAAgBkpG,GAAiC17J,GAAU,CACrIy3J,iBACA/rJ,aACDqtJ,GACH,MAAO,CACH3jL,SAAUumL,EAAoB3pL,MAC9BgF,WAAY2kL,EAAoB3kL,WAChCgpB,QAAS,KAAKA,EAAS,UAE/B,CCnBO1wB,eAAessL,GAAuChnG,EAASgiG,GAClE,MAAMnqK,EAAkBmqK,EAAyBnrL,KAAKowL,IAA4B,QAAaA,EAAwB11K,mBACvH,OAAOlR,QAAQoC,IAAIoV,EAAgBhhB,KAAK+mF,GAAmBoC,EAAQpoF,QAC9DuB,UAAU6mF,EAAQ7mF,WAClBM,aACAskF,0BAA0BH,MAAkBxwD,OAAOze,IAEpD,MAAM,SAAaA,EAAI,GAE/B,CCLO,SAAUu4K,WACP,QAAW,CAAC3yK,GAAQmqK,+BAA+BxjL,MAAOqZ,GAAQ2qK,qCAAqChkL,OAAQisL,GACzH,CAIO,SAAUA,GAA4Bl2K,GACzC,IAAIhU,EACJ,GAAIsX,GAAQ2qK,qCAAqChkL,MAAM+V,GAEnD,OAEJ,MAAM+uE,QAAgB,QAAK0iG,IACrB0E,EAAkB,IAAIC,iBACpB3gL,SAAS,YAAE88K,IAAmBvyK,EACtC,UACU,QAAIsD,GAAQoqK,6BAA6B,CAAE6E,iBACjD,MAAMzb,QAAoB,QAAO4c,IAC3B3G,QAAqB,QAAOC,IAC5BqJ,EAAqC9vL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGsoK,GAAc,CAAE4d,OAAQyB,EAAgBzB,OAAQD,qBAAsB1lG,EAAQpoF,QAAQI,aAAa4b,qBAAwC,WAAjBoqK,IAC/L19K,QAAe,QAAKumL,GAAcS,GAClChF,QAA2C,QAAK0E,GAAwChnG,EAAyD,QAA/C/iF,EAAK8qK,EAAYia,gCAA6C,IAAP/kL,EAAgBA,EAAK,UAC9K,QAAIsX,GAAQ8tK,sCAAsC,CAAE5oL,WAAY6oL,WAChE,QAAI/tK,GAAQwqK,+BAA+BvnL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGa,GAAS,CAAEkjL,iBAChG,CACA,MAAOh+K,SACG,QAAI+O,GAAQ0qK,6BAA6B,CAC3Cz5K,QACAg+K,gBAER,CACA,eACc,aACN4D,EAAgBG,cACV,QAAIhzK,GAAQ4qK,8BAA8B,CAAEqE,iBAE1D,CACJ,CCvCO,MAAMgE,IAAmC,KAAAv5I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAAS++K,aAAah6K,SAItGkiL,IAAkC,KAAAx5I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAAS++K,aAAa/5K,QAIrGkiL,IAAoC,KAAAz5I,gBAAe22I,IAAkCx5J,GACvF5zB,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG2rB,GAAU,CAAEjpB,OAAQipB,EAAQjpB,OAASipB,EAAQlpB,UAK3EylL,IAAoB,KAAA15I,gBAAe22I,GAAiCX,IAA6C,CAACnF,EAAmBE,IACvIF,EAAkB38K,OAAS28K,EAAkB58K,MAAQ88K,IAKnD4I,IAAqC,KAAA35I,gBAAe02I,GAA2BC,IAAiC,CAAC7c,EAAa+W,KAC/H,KAAQ,KAAK/W,EAAa,SAAU,uBAAwB,KAAK+W,EAAmB,SAAU,0BCpBnG,SAAU+I,WACP,QAAW,CACbtzK,GAAQ8qK,4BAA4BnkL,MACpCqZ,GAAQmrK,kCAAkCxkL,MAC1CqZ,GAAQmqK,+BAA+BxjL,OACxC4sL,GACP,CAIO,SAAUA,GAAyB72K,GACtC,MAAM+uE,QAAgB,QAAK0iG,IAC3B,GAAInuK,GAAQmrK,kCAAkCxkL,MAAM+V,IAChDsD,GAAQmqK,+BAA+BxjL,MAAM+V,GAE7C,OAEJ,MAAQvK,SAAS,YAAE88K,IAAmBvyK,EAEtC,SAD0B,QAAO02K,IAIjC,UACU,QAAIpzK,GAAQ+qK,0BAA0B,CAAEkE,iBAC9C,MAAMzb,QAAoB,QAAO2f,IAC3B1J,QAAqB,QAAOC,IAC5BqJ,EAAqC9vL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGsoK,GAAc,CAAE2d,qBAAsB1lG,EAAQpoF,QAAQI,aAAa4b,qBAAwC,WAAjBoqK,IAC/J19K,QAAe,QAAKumL,GAAcS,SAClC,QAAI/yK,GAAQirK,4BAA4BhoL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGa,GAAS,CAAEkjL,iBAC7F,CACA,MAAOh+K,SACG,QAAI+O,GAAQkrK,0BAA0B,CACxCj6K,QACAg+K,gBAER,CACA,eACc,mBACA,QAAIjvK,GAAQorK,2BAA2B,CAAE6D,iBAEvD,CACJ,CC5CO,SAAUuE,WACP,QAAU,CAACxzK,GAAQ4pK,0BAA0BjjL,OAAQ8sL,GAC/D,CAIO,SAAUA,GAAuB/2K,GACpC,MAAQvK,SAAS,YAAE88K,EAAW,QAAEp4J,IAAena,EAC/C,UACU,QAAIsD,GAAQ6pK,wBAAwB,CAAEoF,iBAC5C,MAAM,OAAEljL,EAAM,SAAEwkF,EAAQ,eAAEmjG,SAA0B,QAAK,CACrD3nL,QAAQ,QAAKumL,GAAcz7J,GAC3B68J,gBAAgB,SAAMl3J,GAAMxc,GAAQ4pK,0BAA0BjjL,MAAM61B,MAC/DyyJ,GAAczyJ,EAAErqB,QAAQ88K,cAAgBA,KAC7C1+F,UAAU,SAAM/zD,GAAMxc,GAAQgqK,gCAAgCrjL,MAAM61B,MAC/DyyJ,GAAczyJ,EAAErqB,QAAQ88K,cAAgBA,OAEjD,GAAIljL,EAEA,aADM,QAAIiU,GAAQ8pK,0BAA0B7mL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGa,GAAS,CAAEkjL,kBAChFljL,GAEFwkF,GAAYmjG,WACX,QAAI1zK,GAAQiqK,yBAAyB,CAAEgF,iBAErD,CACA,MAAOh+K,SACG,QAAI+O,GAAQ+pK,wBAAwB,CACtC94K,QACAg+K,gBAER,CACA,eACc,mBACA,QAAIjvK,GAAQiqK,yBAAyB,CAAEgF,iBAErD,CACJ,CCpCO,SAAU0E,GAAkB1E,SACzB,QAAKD,GAAmBhvK,GAAQipK,qBAAqB,CAAEgG,iBAC7D,MAAM,MAAEh+K,SAAiB,QAAK,CAC1B2iL,SAAS,SAAMp3J,GAAMxc,GAAQmpK,qBAAqBxiL,MAAM61B,IAAMA,EAAErqB,QAAQ88K,cAAgBA,IACxFh+K,OAAO,SAAMurB,GAAMxc,GAAQopK,mBAAmBziL,MAAM61B,IAAMA,EAAErqB,QAAQ88K,cAAgBA,IACpF/zK,QAAQ,SAAMshB,GAAMxc,GAAQspK,oBAAoB3iL,MAAM61B,IAAMA,EAAErqB,QAAQ88K,cAAgBA,MAE1F,GAAIh+K,EACA,MAAMA,EAAMkB,QAAQlB,KAE5B,CCNO,SAAU4iL,GAAkB5E,GAC/B,MAAMhjL,QAAiB,QAAOwiL,IACxBhjG,QAAgB,QAAK0iG,IACrB1E,QAAqB,QAAOC,IAElC,GAA2B,MADP,QAAyBz9K,GAAYA,EAAS+R,KAAO/R,EAASpB,QAClEmD,OACZ,OAEJ,MAAM8lL,EAA2B,iBAAiB7E,UAC5C,QAAKwE,GAAwBzzK,GAAQ4pK,0BAA0B,CACjE/yJ,QAAS,CACL5qB,WACA2B,OAAQ,EACRD,MAAO,IACP03H,YAAQ/8H,EACR6oL,qBAAsB1lG,EAAQpoF,QAAQI,aAAa4b,qBAAwC,WAAjBoqK,GAE9EwF,YAAa6E,KAEjB,MAAM,MAAE7iL,SAAiB,QAAK,CAC1B2iL,SAAS,SAAMp3J,GAAMxc,GAAQ8pK,0BAA0BnjL,MAAM61B,IACzDA,EAAErqB,QAAQ88K,cAAgB6E,IAC9B7iL,OAAO,SAAMurB,GAAMxc,GAAQ+pK,wBAAwBpjL,MAAM61B,IACrDA,EAAErqB,QAAQ88K,cAAgB6E,IAC9B54K,QAAQ,SAAMshB,GAAMxc,GAAQiqK,yBAAyBtjL,MAAM61B,IACvDA,EAAErqB,QAAQ88K,cAAgB6E,MAElC,GAAI7iL,EACA,MAAMA,EAAMkB,QAAQlB,KAE5B,CClCO,SAAU8iL,GAA8B9E,SACrC,QAAK2D,GAA6B5yK,GAAQmqK,+BAA+B,CAAE8E,iBACjF,MAAM,MAAEh+K,SAAiB,QAAK,CAC1B2iL,SAAS,SAAMp3J,GAAMxc,GAAQwqK,+BAA+B7jL,MAAM61B,IAAMA,EAAErqB,QAAQ88K,cAAgBA,IAClGh+K,OAAO,SAAMurB,GAAMxc,GAAQ0qK,6BAA6B/jL,MAAM61B,IAAMA,EAAErqB,QAAQ88K,cAAgBA,IAC9F/zK,QAAQ,SAAMshB,GAAMxc,GAAQ4qK,8BAA8BjkL,MAAM61B,IAAMA,EAAErqB,QAAQ88K,cAAgBA,MAEpG,GAAIh+K,EACA,MAAMA,EAAMkB,QAAQlB,KAE5B,CCRO,SAAU+iL,GAAmB/E,GAChC,MAAMgF,EAA4B,kBAAkBhF,IAC9CxjG,QAAgB,QAAK0iG,IACrB1E,QAAqB,QAAOC,UAC5B,QAAK+J,GAAwBzzK,GAAQ4pK,0BAA0B,CACjE/yJ,QAAS,CACLlpB,MAAO,EACPujL,iCAAiC,EACjCC,qBAAsB1lG,EAAQpoF,QAAQI,aAAa4b,qBAAwC,WAAjBoqK,GAE9EwF,YAAagF,KAEjB,MAAM,QAAEL,EAAO,MAAE3iL,SAAiB,QAAK,CACnC2iL,SAAS,SAAMp3J,GAAMxc,GAAQ8pK,0BAA0BnjL,MAAM61B,IACzDA,EAAErqB,QAAQ88K,cAAgBgF,IAC9BhjL,OAAO,SAAMurB,GAAMxc,GAAQ+pK,wBAAwBpjL,MAAM61B,IACrDA,EAAErqB,QAAQ88K,cAAgBgF,IAC9B/4K,QAAQ,SAAMshB,GAAMxc,GAAQiqK,yBAAyBtjL,MAAM61B,IACvDA,EAAErqB,QAAQ88K,cAAgBgF,MAElC,GAAIhjL,EACA,MAAMA,EAAMkB,QAAQlB,MAEf2iL,UACC,QAAI5zK,GAAQ4sK,sBAAsB,CACpC/+K,WAAY+lL,EAAQzhL,QAAQtE,cAGxC,CC9BO,SAASqmL,GAAgCzG,GAC5C,OAAQ,IAAQA,IACZA,EAAyB7zJ,OAAO84J,MAA4B,QAA0BA,EAAwB11K,mBACxG,SAAyB,QAAwB01K,EAAwB11K,mBAEvF,CCCO,SAAUm3K,WACP,QAAWn0K,GAAQ0oK,KAAK/hL,MAAOytL,GACzC,CACA,SAAUA,GAAS13K,GACf,MAAQvK,SAAS,YAAE88K,IAAmBvyK,EACtC,UACU,QAAIsD,GAAQ2oK,UAAU,CAAEsG,iBAC9B,MAAMX,QAAuB,QAAOD,IAE9BgG,GAAaH,SADW,QAAOjE,KAE/BqE,EAAQ,CAACT,GAAmBE,KAC7BzF,aAAuD,EAASA,EAAetgL,QAAU,QAEpF,QAAK2lL,GAAmB1E,GAG9BqF,EAAMn1K,QAAQw0K,IAEdU,GAGAC,EAAMxsL,KAAKksL,UAET,QAAIM,EAAMhyL,KAAKiyL,IAAS,QAAKA,EAAMtF,YACnC,QAAIjvK,GAAQ6oK,YAAY,CAAEoG,YAAaA,IACjD,CACA,MAAOh+K,SACG,QAAI+O,GAAQ8oK,UAAU,CAAE73K,QAAOg+K,YAAaA,IACtD,CACA,eACc,mBACA,QAAI,EAAC,QAAIjvK,GAAQ+oK,WAAW,CAAEkG,YAAaA,OAEzD,CACJ,CCxCO,SAAUuF,WACP,QAAWx0K,GAAQ6sK,eAAelmL,MAAO,GACnD,CACA,SAAU,GAAmB+V,GACzB,MAAQvK,SAAS,YAAE88K,IAAmBvyK,EACtC,UACU,QAAIsD,GAAQ8sK,oBAAoB,CAAEmC,uBAClC,QAAK,GAAwBA,SAC7B,QAAIjvK,GAAQgtK,sBAAsB,CAAEiC,YAAaA,IAC3D,CACA,MAAOh+K,SACG,QAAI+O,GAAQitK,oBAAoB,CAAEh8K,QAAOg+K,YAAaA,IAChE,CACA,eACc,mBACA,QAAIjvK,GAAQktK,qBAAqB,CAAE+B,YAAaA,KAE9D,CACJ,CCtBO,SAAU,KACb,UACU,QAAI,CACNF,GACA4D,GACAW,GACAE,GACAW,GACAK,IACFlyL,KAAKmoF,IAAW,QAAKA,KAC3B,CACA,MAAO5nF,GACH4H,QAAQwG,MAAM,mBAAoBpO,EACtC,CACJ,CCRA,MAAM4xL,GAAyB,CAC3Bz0K,GAAQopK,mBAAmBngL,KAC3B+W,GAAQ0qK,6BAA6BzhL,KACrC+W,GAAQkrK,0BAA0BjiL,KAClC+W,GAAQ+pK,wBAAwB9gL,KAChC+W,GAAQ8oK,UAAU7/K,MAKhB,IAAuB,QAAc,OCZ9ByrL,IAAmB,KAAAh7I,gBAAe6vI,IAAc9sK,GAAUA,EAAMmsK,eAAe53K,SAI/E2jL,IAAkB,KAAAj7I,gBAAe6vI,IAAc9sK,GAAUA,EAAMmsK,eAAe33K,QCJ9E2jL,IAAsC,KAAAl7I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASo+K,gBAAgBr5K,SAI5G6jL,IAAqC,KAAAn7I,gBAAe6vI,IAAc9sK,GAAUA,EAAMxQ,SAASo+K,gBAAgBp5K,QCiDxH,SAAS6jL,GAASC,EAAU9jL,GACxB,MAAM+jL,EAAQ/jL,EAAMgkL,WACdC,EAAiBF,EAAQ,kBAAkBA,IAAU,GAC3DvqL,QAAQwG,MAAM,eAAe8jL,MAAa9jL,EAAMmpG,eAAe86E,IACnE,CAqJA,SAASC,KACL,IAAIC,EAAc,GAUlB,MAAO,CACHC,OAJYljL,IACZijL,EAAYnrL,SAASqrL,GAAOA,EAAGnjL,IAAS,EAIxCu6E,UAXe4oG,IACfF,EAAYttL,KAAKwtL,GACV,WACHF,EAAcA,EAAYxrL,QAAQgB,GAAMA,GAAK0qL,GACjD,GASR,CC3NO,MAAMC,GACTnyL,YAAYM,GACRH,KAAKiyL,iBAAmB,KACpBjyL,KAAKu7G,UDwD0B,MACvC,MAAM,iBAAE22E,EAAgB,cAAEC,EAAa,eAAEC,GA5BS,MAClD,MAAMC,EAAsB,GAY5B,MAAO,CACHF,cAnDG,CAEH/M,UAAWwM,KACXtM,YAAasM,KACbrM,UAAWqM,KACXpM,WAAYoM,KAEZrI,oBAAqBqI,KACrBnI,sBAAuBmI,KACvBlI,oBAAqBkI,KACrBjI,qBAAsBiI,KAEtBjM,mBAAoBiM,KACpBhM,qBAAsBgM,KACtB/L,mBAAoB+L,KACpB7L,oBAAqB6L,KAErB/K,6BAA8B+K,KAC9B3K,+BAAgC2K,KAChCzK,6BAA8ByK,KAC9BvK,8BAA+BuK,KAE/BpK,0BAA2BoK,KAC3BlK,4BAA6BkK,KAC7BjK,0BAA2BiK,KAC3B/J,2BAA4B+J,KAE5BtL,wBAAyBsL,KACzBrL,0BAA2BqL,KAC3BpL,wBAAyBoL,KACzBlL,yBAA0BkL,KAE1BU,iBAAkBV,KAClBW,mBAAoBX,KACpBY,OAAQZ,MAkBRM,iBAZqB,CAACH,EAAIU,KAC1B,MAAMC,EAAqBD,EAAWtpG,UAAU4oG,GAEhD,OADAM,EAAoB9tL,KAAKmuL,GAClBA,CAAkB,EAUzBN,eARmB,KACnBC,EAAoB3rL,SAASisL,IACzBA,GAAa,GACf,EAML,EAW2DC,GAsI5D,MAAO,CACHT,gBACAD,mBACAE,iBACAS,cAzIkB,CAAC15K,EAAQumF,KAEvBjjF,GAAQ2oK,UAAUhiL,MAAM+V,GACxBg5K,EAAc/M,UAAU0M,OAAO34K,EAAOvK,SAEjC6N,GAAQ6oK,YAAYliL,MAAM+V,GAC/Bg5K,EAAc7M,YAAYwM,OAAO34K,EAAOvK,SAEnC6N,GAAQ8oK,UAAUniL,MAAM+V,IAC7Bo4K,GAAS,eAAgBp4K,EAAOvK,QAAQlB,OACxCykL,EAAc5M,UAAUuM,OAAO34K,EAAOvK,UAEjC6N,GAAQ+oK,WAAWpiL,MAAM+V,IAC9Bg5K,EAAc3M,WAAWsM,OAAO34K,EAAOvK,SAGvC6N,GAAQ8sK,oBAAoBnmL,MAAM+V,GAClCg5K,EAAc5I,oBAAoBuI,OAAO34K,EAAOvK,SAE3C6N,GAAQgtK,sBAAsBrmL,MAAM+V,GACzCg5K,EAAc1I,sBAAsBqI,OAAO34K,EAAOvK,SAE7C6N,GAAQitK,oBAAoBtmL,MAAM+V,IACvCo4K,GAAS,2BAA4Bp4K,EAAOvK,QAAQlB,OACpDykL,EAAczI,oBAAoBoI,OAAO34K,EAAOvK,UAE3C6N,GAAQktK,qBAAqBvmL,MAAM+V,IACxCg5K,EAAcxI,qBAAqBmI,OAAO34K,EAAOvK,SAGjD6N,GAAQkpK,mBAAmBviL,MAAM+V,GACjCg5K,EAAcxM,mBAAmBmM,OAAO34K,EAAOvK,SAE1C6N,GAAQmpK,qBAAqBxiL,MAAM+V,GACxCg5K,EAAcvM,qBAAqBkM,OAAO34K,EAAOvK,SAE5C6N,GAAQopK,mBAAmBziL,MAAM+V,IACtCo4K,GAAS,oBAAqBp4K,EAAOvK,QAAQlB,OAC7CykL,EAActM,mBAAmBiM,OAAO34K,EAAOvK,UAE1C6N,GAAQspK,oBAAoB3iL,MAAM+V,IACvCg5K,EAAcpM,oBAAoB+L,OAAO34K,EAAOvK,SAGhD6N,GAAQoqK,6BAA6BzjL,MAAM+V,GAC3Cg5K,EAActL,6BAA6BiL,OAAO34K,EAAOvK,SAEpD6N,GAAQwqK,+BAA+B7jL,MAAM+V,GAClDg5K,EAAclL,+BAA+B6K,OAAO34K,EAAOvK,SAEtD6N,GAAQ0qK,6BAA6B/jL,MAAM+V,IAChDo4K,GAAS,gCAAiCp4K,EAAOvK,QAAQlB,OACzDykL,EAAchL,6BAA6B2K,OAAO34K,EAAOvK,UAEpD6N,GAAQ4qK,8BAA8BjkL,MAAM+V,IACjDg5K,EAAc9K,8BAA8ByK,OAAO34K,EAAOvK,SAG1D6N,GAAQ+qK,0BAA0BpkL,MAAM+V,GACxCg5K,EAAc3K,0BAA0BsK,OAAO34K,EAAOvK,SAEjD6N,GAAQirK,4BAA4BtkL,MAAM+V,GAC/Cg5K,EAAczK,4BAA4BoK,OAAO34K,EAAOvK,SAEnD6N,GAAQkrK,0BAA0BvkL,MAAM+V,IAC7Co4K,GAAS,6BAA8Bp4K,EAAOvK,QAAQlB,OACtDykL,EAAcxK,0BAA0BmK,OAAO34K,EAAOvK,UAEjD6N,GAAQorK,2BAA2BzkL,MAAM+V,IAC9Cg5K,EAActK,2BAA2BiK,OAAO34K,EAAOvK,SAGvD6N,GAAQ6pK,wBAAwBljL,MAAM+V,GACtCg5K,EAAc7L,wBAAwBwL,OAAO34K,EAAOvK,SAE/C6N,GAAQ8pK,0BAA0BnjL,MAAM+V,GAC7Cg5K,EAAc5L,0BAA0BuL,OAAO34K,EAAOvK,SAEjD6N,GAAQ+pK,wBAAwBpjL,MAAM+V,IAC3Co4K,GAAS,0BAA2Bp4K,EAAOvK,QAAQlB,OACnDykL,EAAc3L,wBAAwBsL,OAAO34K,EAAOvK,UAE/C6N,GAAQiqK,yBAAyBtjL,MAAM+V,IAC5Cg5K,EAAczL,yBAAyBoL,OAAO34K,EAAOvK,SAGrD,CACA6N,GAAQosK,gBAAgBzlL,MACxBqZ,GAAQqsK,gBAAgB1lL,MACxBqZ,GAAQysK,gBAAgB9lL,MACxBqZ,GAAQ0sK,eAAe/lL,OACzB0vB,MAAM0nB,GAAMA,EAAErhC,MACZg5K,EAAcG,iBAAiBR,OAAO,CAClC30D,UAAWz9B,EAAO0oF,MAGtB3rK,GAAQwsK,gBAAgB7lL,MAAM+V,IAC9Bg5K,EAAcI,mBAAmBT,OAAO,CACpC30D,UAAWz9B,EAAO2oF,MAGtB,CACA5rK,GAAQ2oK,UAAUhiL,MAClBqZ,GAAQ6oK,YAAYliL,MACpBqZ,GAAQ8oK,UAAUniL,MAClBqZ,GAAQ+oK,WAAWpiL,MACnBqZ,GAAQkpK,mBAAmBviL,MAC3BqZ,GAAQmpK,qBAAqBxiL,MAC7BqZ,GAAQopK,mBAAmBziL,MAC3BqZ,GAAQspK,oBAAoB3iL,MAC5BqZ,GAAQoqK,6BAA6BzjL,MACrCqZ,GAAQwqK,+BAA+B7jL,MACvCqZ,GAAQ0qK,6BAA6B/jL,MACrCqZ,GAAQ4qK,8BAA8BjkL,MACtCqZ,GAAQ+qK,0BAA0BpkL,MAClCqZ,GAAQirK,4BAA4BtkL,MACpCqZ,GAAQkrK,0BAA0BvkL,MAClCqZ,GAAQorK,2BAA2BzkL,MACnCqZ,GAAQosK,gBAAgBzlL,MACxBqZ,GAAQqsK,gBAAgB1lL,MACxBqZ,GAAQysK,gBAAgB9lL,MACxBqZ,GAAQ0sK,eAAe/lL,MACvBqZ,GAAQwsK,gBAAgB7lL,MACxBqZ,GAAQqtK,SAAS1mL,MACjBqZ,GAAQstK,SAAS3mL,MACjBqZ,GAAQslH,UAAU3+H,MAClBqZ,GAAQ0tK,oBAAoB/mL,MAC5BqZ,GAAQwtK,4BAA4B7mL,MACpCqZ,GAAQ4tK,uBAAuBjnL,OACjC0vB,MAAM0nB,GAAMA,EAAErhC,MACZg5K,EAAcK,OAAOV,QACzB,EAOH,ECpMwBgB,GACjB9yL,KAAK+yL,MJmBV,SAA2C7qG,GAC9C,MAAMD,EAAiB,GAAqB,CACxCC,QAAS,CACL8qG,uBAAwB9qG,KAG1BpC,GAAiB,QAAaoC,EAAQzuE,iBACtC/Q,GAAW,QAAwBw/E,EAAQzuE,iBAC3CysK,GAAe,QAA2Bx9K,GAAY,SAAW,OACjEuqL,GAAc,QAA2BvqL,GAAYA,EAASpB,OAASoB,EAAS+R,KAChFqlK,GAAa,QAA0B53F,EAAQzuE,iBAC/C6uE,GAAQ,SAAe,CACzB4qG,eAAgBxzL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG,IAAe,CAAEq3B,UAAW,CACpEjd,KAAMmmE,EAAQlpD,UACdvxB,OAAQ,WACTq4E,iBACHogG,eAAc/oD,UAAW,CACrB+qD,SAAU,CACNzoL,KAAMwzL,EACNnT,cAEJiI,QAAS,CACLtoL,KAAMwzL,EACNnT,eAEL3/K,OAAQ,CACP4qL,eAAgB7iG,EAAQ6iG,eACxBsB,eAAgBnkG,EAAQmkG,kBAEhC9vK,QAASouK,GACTpiG,WAAaC,IACT,OAAOA,EAAqB,CACxBC,OAAO,EACPC,kBAAmB,CACfC,eAAgBuoG,GAChBroG,aAAc,CACV,uBACA,kBACA,iCACA,kCAGTziF,OAAO,CAAC6hF,GAnDW4qG,EAmD8B3qG,EAAQ2qG,cAnDnBvqG,GAAWl/E,GAAU+P,IAEtE,MAAM3Q,EAASY,EAAK+P,GAEpB,OADA05K,EAAcrqL,GAASmnC,GAAaA,EAAS24C,EAAMc,cAC5C5gF,CAAM,KAJgB,IAACqqL,CAmDsD,IAG9E5oG,EAAehC,EAAeiC,IAAI,IACxC,MAAO,CACHhC,UACAirG,eAAgB,KACZlpG,EAAatyE,QAAQ,EAEzB0xE,SAAWlwE,IACPmvE,EAAMe,SAASlwE,EAAO,EAE1BumF,OAAS/vD,GACEA,EAAS24C,EAAMc,YAGlC,CI7EyBgqG,CAAkC1zL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3H,KAAKG,QAAS,CAAE0yL,cAAe,CAAC15K,EAAQumF,KAC/G1/F,KAAKu7G,UAAUs3E,cAAc15K,EAAQumF,EAAO,IAC3C,EAKb1/F,KAAKmlL,KAAQuG,IACT1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ0oK,KAAK,CAC7BuG,gBACD,EAEP1rL,KAAKqzL,cAAgB,IACVrzL,KAAK+yL,MAAMrzF,OAAOyxF,IAE7BnxL,KAAKszL,aAAe,IACTtzL,KAAK+yL,MAAMrzF,OAAO0xF,IAE7BpxL,KAAKuzL,YAAexB,GACT/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc/M,WAE5EplL,KAAKwzL,cAAiBzB,GACX/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc7M,aAE5EtlL,KAAKyzL,YAAe1B,GACT/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc5M,WAE5EvlL,KAAK0zL,aAAgB3B,GACV/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc3M,YAG5ExlL,KAAKspL,eAAkBoC,IACnB1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ6sK,eAAe,CACvCoC,gBACD,EAEP1rL,KAAK2zL,wBAA0B,IACpB3zL,KAAK+yL,MAAMrzF,OAAOusF,IAE7BjsL,KAAK4zL,uBAAyB,IACnB5zL,KAAK+yL,MAAMrzF,OAAOwsF,IAE7BlsL,KAAK6zL,sBAAyB9B,GACnB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc5I,qBAE5EvpL,KAAK8zL,wBAA2B/B,GACrB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc1I,uBAE5EzpL,KAAK+zL,sBAAyBhC,GACnB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAczI,qBAE5E1pL,KAAKg0L,uBAA0BjC,GACpB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcxI,sBAK5E3pL,KAAKi0L,cAAiBvI,IAClB1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQipK,qBAAqB,CAAEgG,YAAaA,IAAe,EAEnF1rL,KAAKk0L,oBAAsB,KACvBl0L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQqpK,6BAA6B,EAE7D9lL,KAAKuvE,aAAe,IACTvvE,KAAK+yL,MAAMrzF,OAAO2rF,IAE7BrrL,KAAKm0L,mBAAqB,IACfn0L,KAAK+yL,MAAMrzF,OAAO4rF,IAE7BtrL,KAAKo0L,kBAAoB,IACdp0L,KAAK+yL,MAAMrzF,OAAO6rF,IAE7BvrL,KAAKq0L,qBAAwBtC,GAClB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcxM,oBAE5E3lL,KAAKs0L,uBAA0BvC,GACpB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcvM,sBAE5E5lL,KAAKu0L,qBAAwBxC,GAClB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAActM,oBAE5E7lL,KAAKw0L,sBAAyBzC,GACnB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcpM,qBAK5E/lL,KAAKy0L,wBAA2B/I,IAC5B1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQmqK,+BAA+B,CAAE8E,YAAaA,IAAe,EAE7F1rL,KAAK00L,8BAAgC,KACjC10L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ2qK,uCAAuC,EAEvEpnL,KAAK20L,6BAA+B,IACzB30L,KAAK+yL,MAAMrzF,OAAO2xF,IAE7BrxL,KAAK40L,4BAA8B,IACxB50L,KAAK+yL,MAAMrzF,OAAO4xF,IAE7BtxL,KAAK60L,+BAAkC9C,GAC5B/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAActL,8BAE5E7mL,KAAK80L,iCAAoC/C,GAC9B/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAclL,gCAE5EjnL,KAAK+0L,+BAAkChD,GAC5B/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAchL,8BAE5EnnL,KAAKg1L,gCAAmCjD,GAC7B/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc9K,+BAK5ErnL,KAAKi1L,qBAAwBvJ,IACzB1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ8qK,4BAA4B,CAAEmE,YAAaA,IAAe,EAE1F1rL,KAAKk1L,0BAA4B,IACtBl1L,KAAK+yL,MAAMrzF,OAAOgwF,IAE7B1vL,KAAKm1L,yBAA2B,IACrBn1L,KAAK+yL,MAAMrzF,OAAOiwF,IAE7B3vL,KAAKo1L,4BAA+BrD,GACzB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc3K,2BAE5ExnL,KAAKq1L,8BAAiCtD,GAC3B/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAczK,6BAE5E1nL,KAAKs1L,4BAA+BvD,GACzB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcxK,2BAE5E3nL,KAAKu1L,6BAAgCxD,GAC1B/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAActK,4BAK5E7nL,KAAKw1L,mBAAqB,CAACliK,EAASo4J,KAChC1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ4pK,0BAA0B,CAAE/yJ,UAASo4J,YAAaA,IAAe,EAEjG1rL,KAAKy1L,0BAA6B1D,GACvB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc7L,yBAE5EtmL,KAAK01L,4BAA+B3D,GACzB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc5L,2BAE5EvmL,KAAK21L,0BAA6B5D,GACvB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAc3L,yBAE5ExmL,KAAK41L,2BAA8B7D,GACxB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAczL,0BAK5E1mL,KAAK61L,UAAY,IACN71L,KAAK+yL,MAAMrzF,OAAO+sF,IAE7BzsL,KAAK+hI,UAAaD,IACd9hI,KAAK+yL,MAAM1pG,SAAS5sE,GAAQslH,UAAU,CAAED,WAAU,EAEtD9hI,KAAK81L,UAAY,IACN91L,KAAK+yL,MAAMrzF,OAAO4sF,IAE7BtsL,KAAK8pL,SAAY1/K,IACbpK,KAAK+yL,MAAM1pG,SAAS5sE,GAAQqtK,SAAS,CAAE1/K,UAAS,EAEpDpK,KAAK+1L,SAAW,IACL/1L,KAAK+yL,MAAMrzF,OAAO8sF,IAE7BxsL,KAAK+pL,SAAYC,IACbhqL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQstK,SAAS,CAAEC,UAAS,EAEpDhqL,KAAKg2L,SAAW,IACLh2L,KAAK+yL,MAAMrzF,OAAO6sF,IAE7BvsL,KAAKmqL,oBAAuBliL,IACxBjI,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ0tK,oBAAoB,CAAEliL,YAAW,EAEjEjI,KAAKi2L,oBAAsB,IAChBj2L,KAAK+yL,MAAMrzF,OAAOitF,IAE7B3sL,KAAKiqL,4BAA+BhiL,IAChCjI,KAAK+yL,MAAM1pG,SAAS5sE,GAAQwtK,4BAA4B,CAAEhiL,YAAW,EAEzEjI,KAAK0uL,4BAA8B,IACxB1uL,KAAK+yL,MAAMrzF,OAAOgtF,IAE7B1sL,KAAKqqL,uBAA0BpiL,IAC3BjI,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ4tK,uBAAuB,CAAEpiL,YAAW,EAEpEjI,KAAKk2L,uBAAyB,IACnBl2L,KAAK+yL,MAAMrzF,OAAOktF,IAK7B5sL,KAAKm2L,eAAiB,IACXn2L,KAAK+yL,MAAMrzF,OAAOqsF,IAE7B/rL,KAAKo2L,iBAAoB32L,IACrB,MAAM42L,EAAgBr2L,KAAK+yL,MAAMrzF,OAAOosF,IACxC,OAAOH,GAAkBlsL,EAAM42L,EAAc,EAEjDr2L,KAAKs2L,cAAgB,IACVt2L,KAAK+yL,MAAMrzF,OAAOssF,IAE7BhsL,KAAKu2L,iCAAmC,IAC7Bv2L,KAAK+yL,MAAMrzF,OAAOysF,IAE7BnsL,KAAKw2L,sCAAwC,IAClCx2L,KAAK+yL,MAAMrzF,OAAOqtF,IAK7B/sL,KAAKy2L,qBAAuB,EAAGh3L,OAAMqgL,iBACjC9/K,KAAK+yL,MAAM1pG,SAAS5sE,GAAQosK,gBAAgB,CACxC1rD,UAAW19H,EACXqgL,eACD,EAEP9/K,KAAK02L,qBAAuB,KACxB12L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQqsK,kBAAkB,EAElD9oL,KAAK22L,qBAAuB,KACxB32L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQwsK,kBAAkB,EAElDjpL,KAAK42L,qBAAuB,KACxB52L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQysK,kBAAkB,EAElDlpL,KAAK62L,oBAAsB,KACvB72L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQ0sK,iBAAiB,EAEjDnpL,KAAK82L,yBAA2B,IACrB92L,KAAK+yL,MAAMrzF,OAAO0oF,IAE7BpoL,KAAK+2L,2BAA6B,IACvB/2L,KAAK+yL,MAAMrzF,OAAO2oF,IAG7BroL,KAAKg3L,sBAAyB75D,IAC1Bn9H,KAAK+yL,MAAM1pG,SAAS5sE,GAAQosK,gBAAgB,CACxC/I,YAAY,EACZ3iD,UAAW,KAAQ,CAACA,MACrB,EAEPn9H,KAAKi3L,sBAAwB,KACzBj3L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQqsK,kBAAkB,EAElD9oL,KAAKk3L,sBAAwB,KACzBl3L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQwsK,kBAAkB,EAElDjpL,KAAKm3L,0BAA4B,KAC7B,MAAO7tL,KAAY8tL,GAAqBp3L,KAAK+yL,MAAMrzF,OAAOooF,IAE1D,OADA,SAAWsP,EAAkB3sL,OAAQ,8EAC9BnB,CAAO,EAElBtJ,KAAKq3L,4BAA8B,KAC/B,MAAO/tL,KAAY8tL,GAAqBp3L,KAAK+yL,MAAMrzF,OAAOuoF,IAE1D,OADA,SAAWmP,EAAkB3sL,OAAQ,8EAC9BnB,CAAO,EAElBtJ,KAAKs3L,wBAA2BvF,GACrB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcG,kBAE5EtyL,KAAKu3L,0BAA6BxF,GACvB/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcI,oBAE5EvyL,KAAKw3L,yBAA4BzF,GACtB/xL,KAAKu7G,UAAU22E,kBAAiB,EAAG/0D,eAAgB40D,EAAG,CAAE50D,UAAWA,EAAU19H,KAAK,MAAOO,KAAKu7G,UAAU42E,cAAcG,kBAEjItyL,KAAKy3L,2BAA8B1F,GACxB/xL,KAAKu7G,UAAU22E,kBAAiB,EAAG/0D,eAAgB40D,EAAG,CAAE50D,UAAWA,EAAU19H,KAAK,MAAOO,KAAKu7G,UAAU42E,cAAcI,oBAKjIvyL,KAAK03L,2BAA6B,IACvB13L,KAAK+yL,MAAMrzF,OAAOipF,IAE7B3oL,KAAK23L,6BAA+B,IACzB33L,KAAK+yL,MAAMrzF,OAAO4oF,IAK7BtoL,KAAK43L,UAAY,IACN53L,KAAK+yL,MAAMrzF,OAAO4U,IAE7Bt0G,KAAK63L,SAAY9F,GACN/xL,KAAKu7G,UAAU22E,iBAAiBH,EAAI/xL,KAAKu7G,UAAU42E,cAAcK,QAE5ExyL,KAAK83L,6BAA+B,IACzB93L,KAAK+yL,MAAMrzF,OAAOowF,IAE7B9vL,KAAKG,OAASA,EACdH,KAAKiyL,kBACT,CACA8F,6BACI/3L,KAAK+yL,MAAM1pG,SAAS5sE,GAAQmrK,oCAChC,CACAoQ,yBAAyBtM,GACrB1rL,KAAK+yL,MAAM1pG,SAAS5sE,GAAQgqK,gCAAgC,CAAEiF,YAAaA,IAC/E,ECtTG,MAAMuM,GACTp4L,YAAYM,GACRH,KAAKk4L,2BAA6B,KAC9B,IAAI/yL,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,GACxB,WAAmD,QAArCjyB,EAAKnF,KAAKG,OAAOksL,sBAAmC,IAAPlnL,OAAgB,EAASA,EAAGsF,UAA0D,QAA7CgrB,EAAKz1B,KAAK0uL,qCAAkD,IAAPj5J,OAAgB,EAASA,EAAGhrB,SAAU,yFAC/L,WAAmD,QAArCqrB,EAAK91B,KAAKG,OAAOksL,sBAAmC,IAAPv2J,OAAgB,EAASA,EAAGrrB,UAAqD,QAAxCysB,EAAKl3B,KAAKk2L,gCAA6C,IAAPh/J,OAAgB,EAASA,EAAGzsB,SAAU,oFAC1L,WAAmD,QAArC0sB,EAAKn3B,KAAKG,OAAOksL,sBAAmC,IAAPl1J,OAAgB,EAASA,EAAG1sB,UAAkD,QAArC2sB,EAAKp3B,KAAKi2L,6BAA0C,IAAP7+J,OAAgB,EAASA,EAAG3sB,SAAU,+EAA+E,EAK1QzK,KAAKmlL,KAAO,CAACuG,GAAc,YACvB1rL,KAAKk4L,6BACLl4L,KAAKm4L,OAAOhT,KAAKuG,EAAY,EAEjC1rL,KAAKuzL,YAAexB,GACT/xL,KAAKm4L,OAAO5E,YAAYxB,GAEnC/xL,KAAKwzL,cAAiBzB,GACX/xL,KAAKm4L,OAAO3E,cAAczB,GAErC/xL,KAAKyzL,YAAe1B,GACT/xL,KAAKm4L,OAAO1E,YAAY1B,GAEnC/xL,KAAK0zL,aAAgB3B,GACV/xL,KAAKm4L,OAAOzE,aAAa3B,GAEpC/xL,KAAKqzL,cAAgB,IACVrzL,KAAKm4L,OAAO9E,gBAEvBrzL,KAAKszL,aAAe,IACTtzL,KAAKm4L,OAAO7E,eAKvBtzL,KAAKspL,eAAiB,CAACoC,GAAc,YACjC1rL,KAAKm4L,OAAO7O,eAAeoC,EAAY,EAE3C1rL,KAAK2zL,wBAA0B,IACpB3zL,KAAKm4L,OAAOxE,0BAEvB3zL,KAAK4zL,uBAAyB,IACnB5zL,KAAKm4L,OAAOvE,yBAEvB5zL,KAAK6zL,sBAAyB9B,GACnB/xL,KAAKm4L,OAAOtE,sBAAsB9B,GAE7C/xL,KAAK8zL,wBAA2B/B,GACrB/xL,KAAKm4L,OAAOrE,wBAAwB/B,GAE/C/xL,KAAK+zL,sBAAyBhC,GACnB/xL,KAAKm4L,OAAOpE,sBAAsBhC,GAE7C/xL,KAAKg0L,uBAA0BjC,GACpB/xL,KAAKm4L,OAAOnE,uBAAuBjC,GAK9C/xL,KAAKi0L,cAAgB,CAACvI,GAAc,YAChC1rL,KAAKm4L,OAAOlE,cAAcvI,EAAY,EAE1C1rL,KAAKk0L,oBAAsB,KACvBl0L,KAAKm4L,OAAOjE,qBAAqB,EAErCl0L,KAAKuvE,aAAe,IACTvvE,KAAKm4L,OAAO5oH,eAEvBvvE,KAAKo0L,kBAAoB,IACdp0L,KAAKm4L,OAAO/D,oBAEvBp0L,KAAKm0L,mBAAqB,IACfn0L,KAAKm4L,OAAOhE,qBAEvBn0L,KAAKq0L,qBAAwBtC,GAClB/xL,KAAKm4L,OAAO9D,qBAAqBtC,GAE5C/xL,KAAKs0L,uBAA0BvC,GACpB/xL,KAAKm4L,OAAO7D,uBAAuBvC,GAE9C/xL,KAAKu0L,qBAAwBxC,GAClB/xL,KAAKm4L,OAAO5D,qBAAqBxC,GAE5C/xL,KAAKw0L,sBAAyBzC,GACnB/xL,KAAKm4L,OAAO3D,sBAAsBzC,GAG7C/xL,KAAKy0L,wBAA0B,CAAC/I,GAAc,aAC1C,QAA0C,YAAhC1rL,KAAKm4L,OAAO9E,gBAA+B,2EACrDrzL,KAAKk4L,6BACLl4L,KAAKm4L,OAAO1D,wBAAwB/I,EAAY,EAEpD1rL,KAAK20L,6BAA+B,IACzB30L,KAAKm4L,OAAOxD,+BAEvB30L,KAAK40L,4BAA8B,IACxB50L,KAAKm4L,OAAOvD,8BAEvB50L,KAAK60L,+BAAkC9C,GAC5B/xL,KAAKm4L,OAAOtD,+BAA+B9C,GAEtD/xL,KAAK80L,iCAAoC/C,GAC9B/xL,KAAKm4L,OAAOrD,iCAAiC/C,GAExD/xL,KAAK+0L,+BAAkChD,GAC5B/xL,KAAKm4L,OAAOpD,+BAA+BhD,GAEtD/xL,KAAKg1L,gCAAmCjD,GAC7B/xL,KAAKm4L,OAAOnD,gCAAgCjD,GAKvD/xL,KAAKi1L,qBAAuB,CAACvJ,GAAc,aACvC,QAA0C,YAAhC1rL,KAAKm4L,OAAO9E,gBAA+B,yEACrD,QAAyD,YAA/CrzL,KAAKm4L,OAAOxD,+BAA8C,mFACpE,SAAW30L,KAAKm4L,OAAOL,+BAAgC,yJACvD93L,KAAKm4L,OAAOlD,qBAAqBvJ,EAAY,EAEjD1rL,KAAKk1L,0BAA4B,IACtBl1L,KAAKm4L,OAAOjD,4BAEvBl1L,KAAKm1L,yBAA2B,IACrBn1L,KAAKm4L,OAAOhD,2BAEvBn1L,KAAKo1L,4BAA+BrD,GACzB/xL,KAAKm4L,OAAO/C,4BAA4BrD,GAEnD/xL,KAAKq1L,8BAAiCtD,GAC3B/xL,KAAKm4L,OAAO9C,8BAA8BtD,GAErD/xL,KAAKs1L,4BAA+BvD,GACzB/xL,KAAKm4L,OAAO7C,4BAA4BvD,GAEnD/xL,KAAKu1L,6BAAgCxD,GAC1B/xL,KAAKm4L,OAAO5C,6BAA6BxD,GAKpD/xL,KAAKw1L,mBAAqB,CAACliK,EAASo4J,KAChC1rL,KAAKm4L,OAAO3C,mBAAmBliK,EAASo4J,EAAY,EAExD1rL,KAAKy1L,0BAA6B1D,GACvB/xL,KAAKm4L,OAAO1C,0BAA0B1D,GAEjD/xL,KAAK01L,4BAA+B3D,GACzB/xL,KAAKm4L,OAAOzC,4BAA4B3D,GAEnD/xL,KAAK21L,0BAA6B5D,GACvB/xL,KAAKm4L,OAAOxC,0BAA0B5D,GAEjD/xL,KAAK41L,2BAA8B7D,GACxB/xL,KAAKm4L,OAAOvC,2BAA2B7D,GAGlD/xL,KAAK61L,UAAY,IACN71L,KAAKm4L,OAAOtC,YAEvB71L,KAAK+hI,UAAaD,IACd9hI,KAAKm4L,OAAOp2D,UAAUD,EAAO,EAEjC9hI,KAAK81L,UAAY,IACN91L,KAAKm4L,OAAOrC,YAEvB91L,KAAK8pL,SAAY1/K,IACbpK,KAAKm4L,OAAOrO,SAAS1/K,EAAM,EAE/BpK,KAAK+1L,SAAW,IACL/1L,KAAKm4L,OAAOpC,WAEvB/1L,KAAK+pL,SAAYC,IACbhqL,KAAKm4L,OAAOpO,SAASC,EAAM,EAE/BhqL,KAAKg2L,SAAW,IACLh2L,KAAKm4L,OAAOnC,WAEvBh2L,KAAKmqL,oBAAuBroL,IACxB9B,KAAKm4L,OAAOhO,oBAAoBroL,EAAS,EAE7C9B,KAAKi2L,oBAAsB,IAChBj2L,KAAKm4L,OAAOlC,sBAEvBj2L,KAAKiqL,4BAA+BhiL,IAChCjI,KAAKm4L,OAAOlO,4BAA4BhiL,EAAQ,EAEpDjI,KAAK0uL,4BAA8B,IACxB1uL,KAAKm4L,OAAOzJ,8BAEvB1uL,KAAKqqL,uBAA0BpiL,IAC3BjI,KAAKm4L,OAAO9N,uBAAuBpiL,EAAQ,EAE/CjI,KAAKk2L,uBAAyB,IACnBl2L,KAAKm4L,OAAOjC,yBAEvBl2L,KAAKm2L,eAAiB,IACXn2L,KAAKm4L,OAAOhC,iBAEvBn2L,KAAKo2L,iBAAoB32L,GACdO,KAAKm4L,OAAO/B,iBAAiB32L,GAExCO,KAAKo4L,sBAAwB,IAClBp4L,KAAKm4L,OAAO7B,gBAEvBt2L,KAAKq4L,yCAA2C,IACrCr4L,KAAKm4L,OAAO5B,mCAEvBv2L,KAAKw2L,sCAAwC,IAClCx2L,KAAKm4L,OAAO3B,wCAEvBx2L,KAAK43L,UAAY,IACN53L,KAAKm4L,OAAOP,YAEvB53L,KAAK63L,SAAY9F,GACN/xL,KAAKm4L,OAAON,SAAS9F,GAEhC/xL,KAAKG,OAASA,EACdH,KAAKm4L,OAAS,IAAInG,GAA2B7xL,EACjD,CACAu0L,gCACI10L,KAAKm4L,OAAOzD,+BAChB,CACAqD,6BACI/3L,KAAKm4L,OAAOJ,4BAChB,CACAC,yBAAyBtM,GACrB1rL,KAAKm4L,OAAOH,yBAAyBtM,EACzC,ECvOG,MAAM4M,WAA0CL,GACnDp4L,YAAYM,GACR2sC,MAAM3sC,GAENH,KAAK6oL,gBAAmB1rD,IACpBn9H,KAAKm4L,OAAO1B,qBAAqBt5D,EAAU,EAE/Cn9H,KAAK8oL,gBAAkB,KACnB9oL,KAAKm4L,OAAOzB,sBAAsB,EAEtC12L,KAAKipL,gBAAkB,KACnBjpL,KAAKm4L,OAAOxB,sBAAsB,EAEtC32L,KAAKkpL,gBAAkB,KACnBlpL,KAAKm4L,OAAOvB,sBAAsB,EAEtC52L,KAAKmpL,eAAiB,KAClBnpL,KAAKm4L,OAAOtB,qBAAqB,EAGrC72L,KAAKu4L,oBAAsB,IAChBv4L,KAAKm4L,OAAOrB,2BAEvB92L,KAAKw4L,wBAA0B,IACpBx4L,KAAKm4L,OAAOT,6BAEvB13L,KAAKy4L,0BAA4B,IACtBz4L,KAAKm4L,OAAOR,+BAEvB33L,KAAK04L,sBAAwB,IAClB14L,KAAKm4L,OAAOpB,6BAGvB/2L,KAAK24L,mBAAsB5G,GAChB/xL,KAAKm4L,OAAOb,wBAAwBvF,GAE/C/xL,KAAK44L,qBAAwB7G,GAClB/xL,KAAKm4L,OAAOZ,0BAA0BxF,EAErD,ECrCG,MAAM8G,WAA2CZ,GACpDvuJ,sBAAsBvpC,GAClB,MAAMuI,GAAW,QAAwBvI,EAAOsZ,iBAE1Cq/K,IADO,QAAyBpwL,GAAYA,EAAS+R,KAAO/R,EAASpB,QACpD,GACjBg1C,GAAiB,QAAyB5zC,GAC1C,CAAE+R,KAAM,CAACq+K,IACT,CAAExxL,OAAQ,CAACwxL,IACjB,OAAOp5L,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGxH,GAAS,CAAEsZ,iBAAiB,QAA0BtZ,EAAOsZ,kBAC1F,UAA2B,QAAatZ,EAAOsZ,iBAAkB6iC,IACjE,UAA2B,QAAan8C,EAAOsZ,iBAAkB6iC,IAC/E,CACAz8C,YAAYM,GACR2sC,MAAM+rJ,GAAmCE,eAAe54L,IAExDH,KAAK6oL,gBAAmB1rD,IACpBn9H,KAAKm4L,OAAOnB,sBAAsB75D,EAAU,EAEhDn9H,KAAK8oL,gBAAkB,KACnB9oL,KAAKm4L,OAAOlB,uBAAuB,EAEvCj3L,KAAKipL,gBAAkB,KACnBjpL,KAAKm4L,OAAOjB,uBAAuB,EAGvCl3L,KAAKu4L,oBAAsB,IAChBv4L,KAAKm4L,OAAOhB,4BAEvBn3L,KAAKw4L,wBAA0B,IACpBx4L,KAAKm4L,OAAOT,6BAEvB13L,KAAKy4L,0BAA4B,IACtBz4L,KAAKm4L,OAAOR,+BAEvB33L,KAAK04L,sBAAwB,IAClB14L,KAAKm4L,OAAOd,8BAGvBr3L,KAAK24L,mBAAsB5G,GAChB/xL,KAAKm4L,OAAOX,yBAAyBzF,GAEhD/xL,KAAK44L,qBAAwB7G,GAClB/xL,KAAKm4L,OAAOV,2BAA2B1F,EAEtD,ECvCG,MCAMiH,GAA6B,gBAI7BC,GAAqB,ICU3B,MAAMC,GAAgCp4L,IACzC,MAAQhB,QAASq5L,EAAc93L,UAAW+3L,EAAgB/yL,OAAQgzL,EAAW,qBAAEC,EAAoB,cAAEl/K,EAAa,0BAAEm/K,EAAyB,0BAAEC,GAA4B,EAAI,QAAEnpC,EAAO,QAAEhyF,EAAO,eAAE0sH,EAAc,eAAEsB,EAAc,gBAAEoN,EAAe,cAAEp/K,EAAgB,QAAO,YAAEq/K,GAAc,EAAK,UAAE16J,GAAel+B,EAC3ShB,GAAU,QAAiBq5L,EAAc,mBACzC93L,GAAY,QAAmB+3L,EAAgB,oBAC/C,OAAE/yL,EAAM,6BAAEszL,GjDvBiB,EAACtzL,EAAQizL,KAC1C,MAAOM,EAAqBC,GEUzB,SAAwBx2L,GAC3B,MAAM,MAAE6V,EAAK,YAAEirK,GAAgB,KACzB2V,EAA2B/V,GAAc1gL,GACzC,GAAwBA,EAAa6V,QACrCnU,EACA80L,GAAsB,IAAA3tG,cAAa/+C,IACrCg3I,GAAa13I,KACT,QAAUs3I,GAAc1gL,GAAc,uFACtC,MAAM02L,EAA0B,GAAwB12L,EAAaopC,GAC/DutJ,EAAe7sJ,aAAiC8sJ,SAChD9sJ,EAAsB4sJ,GACtB5sJ,EACN,OHtBL,SAAwB9pC,EAAa0H,EAAOmO,GAI/C,OAHI7V,EAAYghL,UACZhhL,EAAYghL,SAASt5K,GAErBg5K,GAAc1gL,GACP3D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,GAAQ,CAAEgrK,aAAcxkL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGuR,EAAMgrK,cAAe,CAAE,CAAC7gL,EAAYnE,IAAKQ,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGtE,GAAc,CAAE0H,cAErLmO,CACX,CGcmB,CAAe7V,EAAa22L,EAAcvtJ,EAAE,GACrD,GACH,IACH,MAAO,CAACqtJ,EAA0BD,EACtC,CF1BuDK,CAAeZ,GAC5D79K,EAAgBm+K,QAAiEA,EAAsBvzL,EACvGszL,GAA+B,IAAAztG,cAAa7lF,IAC1CizL,GACAO,EAAoBxzL,EACxB,GACD,CAACizL,EAAsBO,IAC1B,MAAO,CACHxzL,OAAQoV,EACRk+K,+BACH,EiDYgDQ,CAAsBd,EAAaC,GAC9EpP,EAA2BvF,GAA6BvqK,EAAem/K,GACvE/vG,EFpB+B,CAAC1oF,IACtC,MAAM,QAAEhB,EAAO,UAAEuB,EAAS,OAAEgF,EAAM,UAAE24B,EAAS,eAAE+rJ,EAAc,eAAEsB,GAAoBvrL,EACnFoG,QAAQquB,IAAI,4BAA6B,CAAEz0B,UAC3C,MAAO,CAAEs5L,IAAiB,IAAAtvG,UAAS,GAC7BuvG,EAAa,KACfD,GAAe3tJ,GAAMA,EAAI,GAAE,EAEzB6tJ,GAAa,IAAAvsL,UACbwsL,GAAmB,IAAAruG,cAAY,KACjC,MAAMsuG,EGhBP,SAAmC16L,EAASuB,EAAWoY,EAAiB6Z,EAAU,CAAEjZ,cAAe,UACtG,MAAM,cAAEA,EAAa,eAAE0wK,EAAc,eAAEsB,EAAc,UAAErtJ,GAAc1L,EACrE,MAAsB,UAAlBjZ,EACO,IAAIi+K,GAAkC,CACzCx4L,UACAuB,YACAoY,kBACAsxK,iBACAsB,iBACArtJ,cAGD,IAAI65J,GAAmC,CAC1C/4L,UACAuB,YACAoY,kBACAsxK,iBACAsB,iBACArtJ,aAER,CHJ2By7J,CAA0B36L,EAAQc,cAAc,kBAAmB,CAAES,YAAWgF,SAAQ0kL,iBAAgBsB,mBAAmBhrL,EAAWgF,EAAQ,CAC7J24B,YACA3kB,cAAe,QACf0wK,iBACAsB,mBAEJiO,EAAWrsL,QAAUusL,CAAU,GAChC,CAAC16L,EAASuB,EAAWgF,EAAQ0kL,EAAgBsB,EAAgBrtJ,IAC3Ds7J,EAAWrsL,SACZssL,IAEJ,MAAM/wG,EAAU8wG,EAAWrsL,QACrB4yH,EAAYhzH,EAAY/M,GAiB9B,OAhBA,IAAAkN,YAAU,KACN,MAAM2kL,EAAcnpG,EAAQquG,UAAS,KACjCwC,GAAY,IAUhB,OARIv6L,IAAY+gI,EAAU/gI,SACtBuB,IAAcw/H,EAAUx/H,WACvB,MAAQ,QAAagF,IAAS,QAAamjF,EAAQouG,eACnD,KAAQvL,EAAgBxrD,EAAUwrD,iBAClC,KAAQtB,EAAgBlqD,EAAUkqD,kBACnCwP,IACAF,KAEG,KACH1H,GAAa,CAChB,GACF,CAAC7yL,EAASuB,EAAWgF,EAAQgmL,EAAgBtB,EAAgBlqD,EAAWr3C,EAAS+wG,IAC7E/wG,CAAO,EElBEkxG,CAA0B,CACtC56L,UACAuG,SACAhF,YACA0pL,iBACAsB,iBACArtJ,cAEE27J,EE9BH,SAA0CnxG,GAC7C,IAAIrkF,EACJ,MAAMy1L,ECRoC,CAACpxG,IAC3C,MAAMg/F,EAAmBh/F,EAAQ+uG,sBAC3BxP,EAAqBv/F,EAAQkvG,wBAC7BmC,EAAarxG,EAAQ6pG,gBAC3B,MAAO,CACH55K,gBAAiB+vE,EAAQouG,YACzBvS,eAAgB,CACZ53K,OAAQ+7E,EAAQ6pG,gBAChB3lL,MAAO87E,EAAQ8pG,gBAEnBt0J,UAAW,CACPjd,KAAMynE,EAAQja,eACd9hE,OAAQ+7E,EAAQ2qG,qBAChBzmL,MAAO87E,EAAQ4qG,qBAEnB1rL,SAAU,CACNqZ,KAAMynE,EAAQ2sG,iBACd7rL,WAAYk/E,EAAQ4uG,wBACpBlR,8BAA+B19F,EAAQ6uG,2CACvCvR,gBAAiB,CACbr5K,OAAQ+7E,EAAQmrG,+BAChBjnL,MAAO87E,EAAQorG,+BAEnBnN,aAAc,CACVh6K,OAAQ+7E,EAAQ0rG,4BAChBxnL,MAAO87E,EAAQ2rG,4BAEnB7hK,QAAS,CACLwuG,OAAQt4C,EAAQssG,YAChBzrL,OAAQm/E,EAAQqsG,YAChBzrL,MAAOo/E,EAAQusG,WACf7L,yBAA0B1gG,EAAQklG,8BAClCpE,oBAAqB9gG,EAAQ0sG,yBAC7B9L,iBAAkB5gG,EAAQysG,sBAC1BjM,MAAOxgG,EAAQwsG,aAGvB74D,UAAW,CACP29D,UAAW,CACPpyL,SAAyB,YAAfmyL,EAA2BrxG,EAAQ4sG,iBAAiBrN,EAAmBtpL,MAAQ,GACzFA,KAAMspL,EAAmBtpL,KACzBqgL,WAAYiJ,EAAmBjJ,YAEnCiI,QAAS,CACLr/K,SAAyB,YAAfmyL,EAA2BrxG,EAAQ4sG,iBAAiB5N,EAAiB/oL,MAAQ,GACvFA,KAAM+oL,EAAiB/oL,KACvBqgL,WAAY0I,EAAiB1I,WAC7Bib,UAAWvxG,EAAQivG,4BACnBvuJ,QAASs/C,EAAQgvG,4BAG5B,ED3CoBwC,CAA+BxxG,GAC9CqxG,EAAaD,EAAavV,eAAe53K,OACzC83K,EAAYqV,EAAavV,eAAe33K,MACxCutL,EAAgC,YAAfJ,EACjB77J,EAAY47J,EAAa57J,UAAUjd,KACnCm5K,EAA4BN,EAAalyL,SAASo+K,gBAAgBr5K,OAClE0tL,EAA2BP,EAAalyL,SAASo+K,gBAAgBp5K,MACjE0tL,EAA6D,YAA9BF,EAC/BG,EAAyBT,EAAalyL,SAAS++K,aAAah6K,OAC5D6tL,EAAwBV,EAAalyL,SAAS++K,aAAa/5K,MAC3D6tL,EAAuD,YAA3BF,EAC5B3yL,EAAWkyL,EAAalyL,SAASqZ,KACjCy5K,EAAqBZ,EAAalyL,SAAS4B,WAC3CmxL,EAAwCb,EAAalyL,SAASw+K,8BAC9DuR,EAA4BmC,EAAaz9D,UAAU4qD,QAAQgT,UAC3DvC,EAA0BoC,EAAaz9D,UAAU4qD,QAAQ79I,QACzDq+I,EAA6BqS,EAAaz9D,UAAU4qD,QAAQjI,WAC5D4b,EAA2Bd,EAAaz9D,UAAU4qD,QAAQr/K,SAC1DsgL,EAA+B4R,EAAaz9D,UAAU29D,UAAUhb,WAChE6b,EAA6Bf,EAAaz9D,UAAU29D,UAAUpyL,SAC9Ds6H,EAAe43D,EAAalyL,SAAS4qB,QAAQwuG,OAC7C13H,EAAQwwL,EAAalyL,SAAS4qB,QAAQlpB,MACtC8/K,EAA2B0Q,EAAalyL,SAAS4qB,QAAQ42J,yBAEzD0R,EADsBlzL,EAAS+B,OAASgxL,EAExC1yL,KAAKC,IAAIoB,EAAOqxL,EAAwC/yL,EAAS+B,QACjE,EACAoxL,EAAkBH,EAAyBjxL,OAASwuL,KACrDR,IACClQ,GAA8BiQ,EAC9BsD,EAAuBnL,GAAgCzG,GACvD6R,EAA0D,YAA9Bb,IAA4CY,EACxEhe,EAgCV,SAAwBt0F,GACpB,MAAOs0F,EAAake,IAAkB,IAAAlxG,WAAS,GA4B/C,OA3BA,IAAA98E,YAAU,KACN,MAAMiuL,EAA+B,CACjCzyG,EAAQqrG,+BAA+BqH,GACvC1yG,EAAQsrG,iCAAiCqH,GACzC3yG,EAAQurG,+BAA+BoH,GACvC3yG,EAAQwrG,gCAAgCmH,GACxC3yG,EAAQ+pG,YAAY2I,GACpB1yG,EAAQgqG,cAAc2I,GACtB3yG,EAAQiqG,YAAY0I,GACpB3yG,EAAQkqG,aAAayI,IAEzB,SAASD,EAAqBttL,GACtBA,EAAQ88K,cAAgBsN,IACxBgD,GAAe,EAEvB,CACA,SAASG,EAAmBvtL,GACpBA,EAAQ88K,cAAgBsN,IACxBgD,GAAe,EAEvB,CACA,MAAO,KACHC,EAA6Bv1L,SAASisL,IAClCA,GAAa,GACf,CACL,GACF,CAACnpG,IACGs0F,CACX,CA9DwBse,CAAe5yG,GAC7B6yG,EAAyB7yG,EAAQgtG,wCACjCn/I,EAAuG,QAAvFlyC,EAAK65B,aAA6C,EAASA,EAAUqY,oBAAiC,IAAPlyC,EAAgBA,EAAK,GACpIm3L,GAAwB,QAAa1B,EAAanhL,iBAExD,MAAO,CACHulB,YACA30B,OAHWuwL,EAAalyL,SAAS4qB,QAAQjpB,OAIzCD,QACA0zK,cACAmd,iBACA1V,YACA6V,+BACAD,2BACAI,4BACAD,wBACAM,uBACAlzL,WACA8yL,qBACAC,wCACAI,kBACAtT,6BACAmT,2BACA1S,+BACA2S,6BACA34D,eACA+4D,4BACAM,yBACAhlJ,eACAilJ,wBAER,CFnC0CC,CAAiC/yG,GACjEgzG,EtDYH,SAAsCniL,EAAehU,EAAQ6jL,GAChE,MAAMrJ,EAAmC,WAAlBxmK,EACjBoiL,EAAwB,IAAQvS,GAChCwS,GAA8B,QAA0Br2L,KAAW,SAAuB,QAAwBA,IAAW,EACnI,GAAIw6K,EAAgB,CAChB,IAAK6b,EAED,OADAx1L,QAAQwG,MAAM,6LACP,EAEX,IAAK+uL,EAED,OADAv1L,QAAQwG,MAAM,6HACP,CAEf,CACA,OAAO,CACX,CsD3BgCivL,CAA6BtiL,EAAehU,EAAQ6jL,GAC1E,CAAC,EACD,CAAE3E,UAAW,IAAI,QAoB3B,SAAoB/7F,EAAS1oF,GACzB,MAAM,QAAEu9D,GAAYv9D,GACpB,IAAAkN,YAAU,KACN,SAAS4uL,EAAYhuL,GACjByvD,SAAkDA,EAAQzvD,EAAQlB,MACtE,CACA,MAAMuuL,EAA+B,CACjCzyG,EAAQiqG,YAAYmJ,GACpBpzG,EAAQ+qG,qBAAqBqI,GAC7BpzG,EAAQurG,+BAA+B6H,GACvCpzG,EAAQ8rG,4BAA4BsH,GACpCpzG,EAAQmsG,0BAA0BiH,IAEtC,MAAO,KACHX,EAA6Bv1L,SAASisL,IAClCA,GAAa,GACf,CACL,GACF,CAACnpG,EAASnrB,GACjB,CAtCIw+H,CAAWrzG,EAAS,CAAEnrB,YAwC1B,SAAyBmrB,EAAS1oF,GAC9B,MAAM,OAAEuF,EAAM,yBAAE6jL,EAAwB,MAAE9/K,EAAK,0BAAEovL,EAAyB,6BAAEG,EAA4B,QAAEtpC,EAAO,cAAEh2I,GAAmBvZ,GACtI,IAAAkN,YAAU,KACFk8K,EAAyBz/K,OAAS,GAClC++E,EAAQygG,4BAA4BC,GAEpC9/K,GACAo/E,EAAQsgG,SAAS1/K,GAErBo/E,EAAQ27F,MAAM,GAIf,CAAC37F,KACJ,IAAAx7E,YAAU,KACN,MAAM8uL,GAA6B,KAAQ5S,EAA0B1gG,EAAQklG,+BACvEqO,GAAiB,KAAQ12L,EAAQmjF,EAAQouG,aACzC92L,EAAQ,CACVuF,SACA6jL,2BACA4S,4BACAC,gBACApD,+BACAtpC,UACAh2I,iBAEE8vJ,EAASqvB,EA+BvB,SAAwChwG,GAAS,OAAEnjF,EAAM,yBAAE6jL,EAAwB,0BAAE4S,EAAyB,cAAEC,EAAa,6BAAEpD,EAA4B,QAAEtpC,EAAO,cAAEh2I,IAClK,IAAIlV,EACJ,GAAI23L,EAA2B,CAC3BtzG,EAAQq/F,gBAAgB,CAAEppL,KAAM,GAAIqgL,WAA8B,WAAlBzlK,IAChDmvE,EAAQygG,4BAA4BC,GAGpC1gG,EAAQy/F,kBAER,MAAM+T,EAAaxzG,EAAQouG,YACrB9X,EAAwD,QAA1C36K,EAAKqkF,EAAQkvG,+BAA4C,IAAPvzL,OAAgB,EAASA,EAAG26K,WAGlG,OAFA6Z,EAA6BqD,GAC7B3sC,SAAkDA,EAAQ2sC,EAAYld,GAC/D,aACX,CACA,GAAIid,EAAe,CACf,MAAMr0L,GAAW,QAAwBrC,GACnC5G,GAAO,QAA2BiJ,GAAYA,EAASpB,OAASoB,EAAS+R,KACzEqlK,GAAa,QAA0Bz5K,GAG7C,OAFAmjF,EAAQq/F,gBAAgB,CAAEppL,OAAMqgL,eAChCt2F,EAAQy/F,kBACD,WACX,CAEJ,CAtDcgU,CAA+BzzG,EAAS1oF,GAatD,SAAkC0oF,GAAS,OAAEnjF,EAAM,yBAAE6jL,EAAwB,0BAAE4S,EAAyB,cAAEC,EAAa,6BAAEpD,IACrH,GAAImD,GAA6BC,EAAe,CAC5C,MAAMr0L,GAAW,QAAwBrC,GACnC5G,GAAO,QAA2BiJ,GAAYA,EAASpB,OAASoB,EAAS+R,KACzEqlK,GAAa,QAA0Bz5K,GAM7C,OALAmjF,EAAQq/F,gBAAgB,CAAEppL,OAAMqgL,eAChCt2F,EAAQygG,4BAA4BC,GACpC1gG,EAAQy/F,kBAER0Q,EADmBnwG,EAAQouG,aAEvBkF,EACO,cAEJ,WACX,CAEJ,CA5BcI,CAAyB1zG,EAAS1oF,IAsDhD,SAAuB0oF,EAAS2gF,GACb,gBAAXA,IACgC,YAA5B3gF,EAAQ6pG,gBACR7pG,EAAQ27F,KAAK6T,KAGbxvG,EAAQ8/F,eAAe0P,IACvBxvG,EAAQirG,wBAAwBuE,MAGzB,cAAX7uB,GACA3gF,EAAQ27F,MAEhB,CAlEQgY,CAAc3zG,EAAS2gF,EAAO,GAC/B,CACC9jK,EACA6jL,EACAsP,EACAhwG,EACA6mE,EACAspC,EACAt/K,GAER,CA9EI+iL,CAAgB5zG,EAAS,CACrBnjF,SACA6jL,2BACA9/K,MAAOqvL,aAAyD,EAASA,EAAgBrvL,MACzFimJ,UACAspC,+BACAH,4BACAn/K,kBAEJ,MAAMkhG,EA+HV,SAAsB/xB,EAAS1oF,GAC3B,MAAQuvJ,QAASgtC,EAAY,6BAAE1D,EAA4B,cAAEt/K,GAAkBvZ,EACzE+0G,GAAW,IAAA3pB,cAAY,CAAC0zF,EAAeE,KACzC,MAAMrmK,EAAkB+vE,EAAQouG,YAC1B0F,GAAkB,SAAyB,QAAwB7jL,IACnEha,EAAOmgL,EAAc7gL,KAAK8G,GAAUy3L,EAAkBz3L,EAAKI,IAAMJ,EAAK0D,QAC5EigF,EAAQq/F,gBAAgB,CAAEppL,OAAMqgL,cAAa,GAC9C,CAACt2F,IAGEu5C,GAAW,IAAA72C,aAAY,MAAU41C,IAC/Bt4C,EAAQssG,cAAgBh0D,IACxBt4C,EAAQu4C,UAAUD,GAClBt4C,EAAQirG,wBD9Lc,UC+L1B,GACD,KAAM,CAACjrG,IACJ+zG,GAAyB,IAAArxG,cAAY,KACvC1C,EAAQyrG,sBAAsB,GAC/B,CAACzrG,IACEg0G,GAAU,IAAAtxG,cAAY,KACxB1C,EAAQs/F,kBACJt/F,EAAQssG,YAAYrrL,OAAS,IAC7B++E,EAAQu4C,UAAU,IAClBv4C,EAAQirG,wBDpMa,SCqMzB,GACD,CAACjrG,IACE6mE,GAAU,IAAAnkE,cAAY,KACxB,IAAI/mF,EACJqkF,EAAQy/F,kBACR,MAAM+T,EAAaxzG,EAAQouG,YACrB9X,EAAwD,QAA1C36K,EAAKqkF,EAAQkvG,+BAA4C,IAAPvzL,OAAgB,EAASA,EAAG26K,WAClG6Z,EAA6BqD,GAC7BK,SAA4DA,EAAaL,EAAYld,EAAYzlK,EAAc,GAChH,CAACgjL,EAAc1D,EAA8BnwG,EAASnvE,IACzD,MAAO,CACHg2I,UACAktC,yBACAx6D,WACAltB,WACA2nF,UAER,CAxKsBC,CAAaj0G,EAAS,CAAE6mE,UAASspC,+BAA8Bt/K,kBAMjF,OALAqjL,GAA2Bl0G,EAAS,CAChCkwG,cACArpC,QAAS90C,EAAU80C,QACnBh2I,kBAEG3a,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgzL,GAAgCp/E,GAAYihF,EAAoB,EAoKnHkB,GAA6B,CAACl0G,EAAS1oF,KACzC,MAAM,YAAE44L,EAAW,cAAEr/K,EAAa,QAAEg2I,GAAYvvJ,EAC1C68L,EAAyBn0G,EAAQkvG,wBAAwBj5L,KACzDy7L,EAA4B1xG,EAAQmrG,+BACpCjsL,EAAW8gF,EAAQ2sG,iBACnB9vL,EAASmjF,EAAQouG,aACvB,IAAA5pL,YAAU,KACN,GAAI0rL,GACkB,WAAlBr/K,GACA,IAAQsjL,IACsB,YAA9BzC,IACC,IAAQxyL,GAAW,CACpB,MACMjJ,EAAO,EADW,SAAyB,QAAwB4G,IACzCqC,EAAS,GAAGzC,IAAMyC,EAAS,GAAGa,OAC9DigF,EAAQq/F,gBAAgB,CAAEppL,OAAMqgL,YAAY,IAC5Ct2F,EAAQy/F,kBACR54B,GACJ,IACD,CACCqpC,EACAr/K,EACAsjL,EACAzC,EACAxyL,EACArC,EACAmjF,EACA6mE,GACF,EIvPOutC,GAAyB,gBAAoB,MAC1DA,GAAuB3wL,YAAc,yBAK9B,MAAM4wL,GAA4B,KAAM,IAAA1wL,YAAWywL,IAI7CE,GAAkCh9L,IAC3C,IAAIqE,EAAIswB,EACR,MAAM,SAAEpoB,EAAQ,mBAAE0wL,EAAoBx0L,MAAOy0L,EAAU,cAAE3jL,EAAa,YAAEq/K,GAAgB54L,EAClFm9L,EAAa/E,GAA6Bp4L,GAC1CyI,EAAiN,QAAxMksB,EAAKuoK,QAA+CA,EAAqG,QAAvF74L,EAAK84L,aAA+C,EAASA,EAAWj/J,iBAA8B,IAAP75B,OAAgB,EAASA,EAAGoE,aAA0B,IAAPksB,EAAgBA,EAAK,GACpP,OAAQ,gBAAoBmoK,GAAuBrwL,SAAU,CAAExC,MAAOrL,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGs2L,GAAa,CAAEF,qBAAoBx0L,QAAO8Q,gBAAeq/K,iBAAkBrsL,EAAU,ECIlL6wL,GAAiCp9L,IAC1C,MAAM,MAAEwE,EAAK,gBAAEk9H,EAAe,mCAAE27D,EAAkC,WAAEre,EAAU,cAAEF,EAAa,SAAE/pE,EAAQ,aAAEmtB,EAAY,SAAED,EAAQ,UAAEt+E,EAAS,kBAAE+5H,EAAiB,aAAE4f,EAAY,eAAE3f,EAAc,MAAE/wK,EAAK,0BAAEquL,EAAyB,mBAAEsC,GAAwBv9L,EACjP8uF,GAAO,EAAAC,GAAA,KACPwzC,GAAW,EAAA5e,GAAA,GAAc,iBACzB,mBAAEs5E,EAAkB,cAAE1jL,GAAkBwjL,MACxC,+BAAEta,EAA8B,4BAAEC,EAA2B,6BAAEC,EAA4B,qBAAEE,EAAoB,2BAAEN,EAA0B,+BAAEK,EAA8B,mBAAEE,GAAwBC,KACvMj8D,EAAam2E,GAAsB16D,EAlBb,GADZ,GAoBVi7D,EAAmBj7D,GAAY06D,EAC/BQ,EAAqB1wL,EAAYswL,GACjCK,GAAgB,IAAAlxL,UAAQ,IACnBvE,KAAKuZ,KAAKvZ,KAAKC,IAAIu1L,EArBN,KAqBkD,GAAK32E,EAAY,IAAM,IAC9F,CAAC22E,EAAoB32E,IACxB,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB84D,GAAkB,CAAE33E,UAAW,4CAA6C43E,eAAe,EAAMC,eAAgB0d,EAAkBzd,eAAkC,WAAlBxmK,EAA4B/U,MAAOA,EAAOk9H,gBAAiB27D,EAAoCv2E,WAAYA,EAAYq6D,WAAYe,GAAenD,aAAeh6K,GACzT,GAAgBA,EAAM+pF,GAC9BkwF,WAAYA,EAAYF,cAAeA,EAAeG,mBAAoBkZ,GAAoBpjF,SAAUA,EAAUmtB,aAAcA,EAAcD,SAAUA,EAAUt+E,UAAWA,EAAW/2C,MAAOA,EAAO8wK,kBAAmBA,EAAmBD,8BAA+B6f,EAAc3f,eAAgBA,EAAgB3vD,WAAahuH,GAC9T,gBAAoB0iL,EAA6B9jL,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEi9L,mBAAoBA,KACxGhd,YAAa,IACL,gBAAoB0C,EAA8B,CAAE/1K,MAAOA,IACnEuzK,cAAe,IACP,gBAAoBsC,EAAgC,CAAEphK,OAAQq8K,IACtEv6D,aAAc,EAAG9hH,YACR,gBAAoBwhK,EAAsB,CAAExhK,OAAQA,EAAQ45K,0BAA2BA,EAA2B/4D,aAAcA,EAAcR,gBAAiBA,EAAiB67D,mBAAoBA,IAC7Mld,gBAAiB,EAAGp+C,WAAUC,kBACrB,gBAAoBqgD,EAA4B,CAAEtgD,SAAUA,EAAUC,aAAcA,EAAchG,UAAWqG,GAAY06D,KAClIxc,gBAAiB,EAAG1B,eAAcC,aAAYF,gBAAeG,wBACpD,gBAAoB6D,EAAoB,CAAE/D,aAAcA,EAAckc,0BAA2BA,EAA2Bjc,WAAYA,EAAYue,mBAAoBA,EAAoBze,cAAeA,EAAe6b,sCAAuC0C,EAAoCpe,mBAAoBA,IAClUt/C,cAAe,EAAG9W,UAASE,WAAUlZ,WAAU0uE,aAAY78C,kBAAiB88C,qBAAoB7uE,eACvF,gBAAoBizE,EAAgC,CAAEjzE,UAAWA,EAAWkZ,QAASA,EAASE,SAAUA,EAAUlZ,SAAUA,EAAU0uE,WAAYA,EAAY78C,gBAAiBA,EAAiB88C,mBAAoBA,MAC1N,EClDLmf,GAA8B,I,2BCM3C,MAAM,GAAe,CAAC,CAAE1xF,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,K,gBCCpD,MAAM0xF,GAAmC,KAC5C,MAAM9uG,GAAO,EAAAC,GAAA,KACb,OAAO,gBAAoB8uG,GAAA,EAAQ,CAAEC,YAAahvG,EAAKj/D,cAAc,CAAEzxB,GAAI,uCAAyC,ECF3G2/L,GAAsC,KAC/C,MAAMjvG,GAAO,EAAAC,GAAA,KACb,OAAO,gBAAoB8uG,GAAA,EAAQ,CAAEC,YAAahvG,EAAKj/D,cAAc,CAAEzxB,GAAI,+BAAiC,ECN1G,GAAe,CAAC,CAAE6tG,MAAO,UACzB,GAAgB,CAAE,QAAS,CAAC,GAAI,IAKzB+xF,GAA0Ch+L,IACnD,MAAM,mBAAEu9L,GAAuBv9L,EAC/B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,kGAC5C,gBAAoBuD,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GAC/D,gBAAoB,MAAO,CAAEriB,UAAW,6BACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,wCAC5C,gBAAoB,OAAQ,CAAE6pG,UAAW,6BAC7C,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,8FAA+F+D,YAAa,GAAc4X,aAAc,IAC7K,gBAAoB,KAAkB,CAAExlH,GAAI,2CAA4CoI,OAAQ,CACxFW,QAASo2L,EAAmBn6L,KAAK,MACjC66L,OAASzuD,GAAW,gBAAoB,SAAU,KAAMA,QACpD,ECjBtB,GAAe,CAAC,CAAEvjC,MAAO,UACzB,GAAgB,CAAE,QAAS,CAAC,GAAI,IAKzBiyF,GAAiCl+L,IAC1C,MAAM,mBAAEu9L,GAAuBv9L,EACzBm+L,GAAc,IAAA3xL,UAAQ,IACjB+wL,EAAqBA,EAAmBn6L,KAAK,MAAQ,IAC7D,CAACm6L,IACJ,OAAQ,gBAAoB,MAAO,CAAEt1F,UAAW,wFAC5C,gBAAoBuD,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GAC/D,gBAAoB,MAAO,CAAEriB,UAAW,6BACpC,IACA,gBAAoB,KAAkB,CAAE7pG,GAAI,qCAC5C,gBAAoB,OAAQ,CAAE6pG,UAAW,6BAC7C,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,8FAA+F+D,YAAa,GAAc4X,aAAc,IAC7K,gBAAoB,KAAkB,CAAExlH,GAAI,2CAA4CoI,OAAQ,CACxFW,QAASg3L,EACTF,OAASzuD,GAAW,gBAAoB,SAAU,KAAMA,QACpD,EClBf4uD,GAAkCp+L,IAC3C,MAAM,WAAEg/K,EAAU,cAAEF,EAAa,aAAEC,EAAY,mBAAEE,GAAuBj/K,EACxE,OAAQ,gBAAoB6+K,GAA2B,CAAE52E,UAAW,6CAA8C+2E,WAAYA,EAAYD,aAAcA,EAAcD,cAAeA,EAAeG,mBAAoBA,GAAsB,ECHrOof,GAAwB,EAAGp2F,YAAW7mF,QAAOC,aACtD,MAAMqkF,EAAkB,kCAAkC,SAC1D,OAAQ,gBAAoB,MAAO,CAAEtkF,MAAOA,EAAOC,OAAQA,EAAQ+zH,MAAO,6BAA8BgI,WAAY,+BAAgCn1C,UAAW,6BAA6BA,KACxL,gBAAoB,IAAK,CAAEktC,KAAM,QAC7B,gBAAoB,IAAK,CAAEmpD,UAAW,sCAAuCnpD,KAAM,WAC/E,gBAAoB,IAAK,CAAEmpD,UAAW,mCAClC,gBAAoB,OAAQ,CAAE1gK,EAAG,uHAAwHu3G,KAAMzvC,OAAuB,EAE1M24F,GAAsB1zE,aAAe,CACjCvpG,MAAO,GACPC,OAAQ,ICJL,MAAMk9K,GAAoDv+L,IAC7D,MAAM,KAAE+E,EAAI,aAAE88K,EAAY,WAAExqF,EAAU,mBAAE4lG,GAAqB,GAAUj9L,EACjE8uF,GAAO,EAAAC,GAAA,KAEPyvG,GAAc,IAAApzG,cAAap2E,IAC7BA,EAAMg/G,kBACN6tD,GAAc,GACf,CAACA,IACE4c,GAAY,IAAAjyL,UAAQ,IAAM,GAAgBzH,EAAM+pF,IAAO,CAAC/pF,EAAM+pF,IAC9DyzC,GAAW,EAAA5e,GAAA,GAAc,gBACzB7N,EAAU,KAAG,4DAA6D,eAAgB,+BAAgC,gCAAgC,KAAU/wG,EAAK0D,SAAU,CAAE,cAAe4uF,GAAc,CACpN,wCAAyCA,IAE7C,OAAQ,gBAAoB,MAAO,CAAE4Q,UAAW6N,EAAS/F,QAASyuF,EAAa/1L,MAAOg2L,GAClF,gBAAoB,OAAQ,KAAMA,GAClCpnG,GAAckrC,GAAY06D,EAAsB,gBAAoB,OAAQ,CAAEh1F,UAAW,uDACrF,gBAAoBo2F,GAAuB,CAAEp2F,UAAW,iDAAqD,KAAM,ECvBxH,SAASy2F,KACZ,OAAO,gBAAoB,MAAO,CAAEr2F,MAAO,CAAEgW,WAAY,IAC7D,CCEO,MAAMsgF,GAA2C3+L,IACpD,MAAM,0BAAEi7L,EAAyB,mBAAEsC,EAAkB,sCAAE5C,GAA0C36L,EACjG,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,wCAA0CgzF,GAA6BN,EAAwC,EAAK,gBAAoBuD,GAA+B,CAAEX,mBAAoBA,IAAyB,KAAM,ECJnQqB,GAAgD,IAClD,gBAAoB,MAAO,MCYzBC,GAAmC,CAC5Cz7F,eCZiCpjG,IACjC,MAAM,OAAEoiG,EAAM,YAAE8I,GAAgBlrG,EAChC,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,KAAG,4CAA6C,qBAAsB,kCAAmC,CACjJ,eAAgB7F,EAChB,kBAAmB8I,KAEvB,gBAAoB,KAAkB,CAAE9sG,GAAI,oBAAsB,EDOtEilG,iBEdkC,EAAG0M,aAAe,gBAAoB+sE,GAA+B,CAAEn5H,WAAW,EAAMosD,QAASA,IFenIqyE,wBAAyBtF,GACzBuF,sBGTwCriL,IACxC,MAAM,mBAAE8+L,EAAkB,oBAAEC,EAAmB,MAAE39K,EAAQu8K,IAAgC39L,GACnF,yBAAEsiL,EAAwB,wBAAEE,GAA4BO,KACxDxgD,GAAW,EAAA5e,GAAA,GAAc,iBACzB,yBAAE02E,EAAwB,sBAAEG,EAAqB,gBAAEO,EAAe,2BAAEtT,EAA0B,6BAAE6S,EAA4B,0BAAEG,EAAyB,uBAAEgC,EAAsB,SAAE70L,EAAQ,SAAEq6H,EAAQ,SAAEltB,EAAQ,qBAAE+lF,EAAoB,aAAE54D,EAAY,mBAAEw4D,EAAkB,sCAAEC,EAAqC,yBAAEC,EAAwB,uBAAEW,EAAsB,0BAAEN,EAAyB,mBAAEgC,EAAkB,cAAE1jL,GAAmBwjL,KAClaQ,GAAqB,IAAA/wL,UAAQ,IACxB+uL,EAAuBt9L,KAAKq5C,GAASA,EAAK7uC,SAClD,CAAC8yL,IAEElzF,EAAQ,CAAEjnF,MADEmhH,GAAY06D,EAAqB,OAAS77K,GAEtD49K,GAA6B,IAAA5zG,cAAY,CAAC0zF,EAAeE,KAC3DjqE,EAAS+pE,EAAeE,GACF,WAAlBzlK,GACAulL,GACJ,GACD,CAAC/pF,EAAU+pF,EAAoBvlL,IAClC,OAAQ,gBAAoB,MAAO,CAAE0uF,UAAW,0CAA2CI,MAAOA,GAC9F,gBAAoBm6E,EAAyB,CAAExD,WAAYyI,EAA4B9jI,UAAW22I,EAA8B5c,kBAAmB+c,EAA2Bj2L,MAAOoD,EAAU+1K,eAAgB8e,EAAwBx6D,SAAUA,EAAUltB,SAAUiqF,EAA4B1B,aAAcxC,EAAsB54D,aAAcA,EAAc48C,cAAe8b,EAA0Bl5D,gBAAiBg5D,EAAoB2C,mCAAoC1C,EAAuC4C,mBAAoBA,EAAoBtC,0BAA2BA,EAA2BruL,MAAOytL,QAA2EA,EAA2BG,IACrsB,gBAAoBlY,EAA0B,CAAEwc,mBAAoBA,EAAoBC,oBAAqBA,EAAqBhE,gBAAiBA,IAAoB,EHR3KzY,yBId0C,EAAGyY,kBAAiB+D,qBAAoBC,0BAClF,MAAMjwG,GAAO,EAAAC,GAAA,KACP6gE,EAAa9gE,EAAKj/D,cAAc,CAAEzxB,GAAI,mBACtCyxJ,EAAY/gE,EAAKj/D,cAAc,CAAEzxB,GAAI,kBAC3C,OAAQ,gBAAoB,MAAO,CAAE6pG,UAAW,8CAC5C,gBAAoB,MAAO,CAAEA,UAAW,4DACxC,gBAAoB,MAAO,CAAEA,UAAW,4DACpC,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,qGAAsG8H,QAASgvF,EAAqB90L,MAAO2lJ,EAAYnnJ,MAAOmnJ,IACvM,gBAAoB5zB,GAAA,EAAQ,CAAE9Z,SAAU64E,EAAiB9yF,UAAW,kFAAmF8H,QAAS+uF,EAAoB70L,MAAO4lJ,EAAWpnJ,MAAOonJ,KAAe,EJOpO0yB,2BKlB6CviL,IAC7C,MAAM,SAAEiiI,EAAQ,aAAEC,EAAY,QAAEhG,GAAYl8H,EAC5C,OAAO,gBAAoBm+K,GAA2B,CAAEl8C,SAAUA,EAAUC,aAAcA,EAAchG,QAASA,GAAU,ELiB3HsmD,wBAAyB4a,GACzB1a,4BXZ8C1iL,IAC9C,MAAM,KAAE+E,EAAI,WAAEsyF,EAAU,SAAE0d,EAAQ,aAAE8sE,EAAY,WAAED,GAAe5hL,EAC3D8uF,GAAO,EAAAC,GAAA,KACPyvG,GAAc,IAAApzG,cAAY,KACxBiM,EACAuqF,IAGA7sE,GACJ,GACD,CAACA,EAAU6sE,EAAYvqF,IACpB4nG,GAAkB,IAAA7zG,cAAap2E,IACjCA,EAAMg/G,kBACN6tD,GAAc,GACf,CAACA,IACE/rE,EAAU,KAAG,iDAAkD,eAAgB,mBAAoB,+BAAgC,gCAAgC,KAAU/wG,EAAK0D,SAAU,CAAE,cAAe4uF,GAAc,CAC7N,wCAAyCA,GAC1C,CACC,uCAAwCtyF,EAAK0D,QAE3Ck2K,EAAe,KAAG,uBAAwB,CAC5C,wBAAyB55K,EAAK0D,QAE5Bg2L,EAAY,GAAgB15L,EAAM+pF,GACxC,OAAQ,gBAAoB,MAAO,CAAEmZ,UAAW6N,EAAS/F,QAASyuF,EAAa/1L,MAAOg2L,GAClF,gBAAoB,QAAS,CAAEx2F,UAAW02E,GACtC,gBAAoB,QAAS,CAAE/5K,KAAM,WAAYqjG,UAAW,iBAAkB6tB,UAAU,EAAMjN,QAASxxB,IACvG,gBAAoB,OAAQ,CAAE4Q,UAAW,oBAAsBw2F,KAClE15L,EAAK0D,OAAU,gBAAoB,MAAO,CAAEw/F,UAAW,sCACpD,gBAAoBuD,GAAA,GAAoB,CAAEvD,UAAW,6BAA8B6b,UAAW,EAAGwG,UAAW,GACxG,gBAAoB,OAAQ,CAAEriB,UAAW,wDACzC,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,sCAAuCuc,QAAS,+BAAgCxY,YAAa,IAClI,gBAAoB,KAAkB,CAAE5tG,GAAI,6CACxD,gBAAoB,OAAQ,CAAE6pG,UAAW,oBAAqB8H,QAASkvF,GACnE,gBAAoB,KAAkB,CAAE7gM,GAAI,kBAAoB,EWrBxEukL,6BMrB8C,IAAO,gBAAoBjyC,GAAA,EAAS,CAAE9rI,KAAM,SAC1F,gBAAoB,KAAkB,CAAExG,GAAI,mBNqB5CqkL,+BOtBiDziL,GAAU,gBAAoBglI,GAAA,EAAa,CAAE3jH,OAAQrhB,EAAMqhB,SPuB5GuhK,+BQtB2C5iL,IAC3C,MAAM,QAAE6oH,EAAO,UAAElZ,EAAS,SAAEoZ,EAAQ,SAAElZ,EAAQ,WAAE0uE,EAAU,gBAAE78C,EAAe,mBAAE88C,GAAuBx+K,EACpG,OAAQ,gBAAoBs+K,GAA6B,CAAE3uE,UAAWA,EAAWkZ,QAASA,EAASE,SAAUA,EAAUlZ,SAAUA,EAAU0uE,WAAYA,EAAY78C,gBAAiBA,EAAiB88C,mBAAoBA,GAAsB,ERqB/OqE,qBStBsC,EAAGxhK,SAAQqgH,kBAAiBQ,eAAc+4D,4BAA2BsC,qBAAqB,OAChI,IAAI2B,EAAoB,KACxB,MAAM72F,GAAQ,IAAA77F,UAAQ,KACX,CACH6U,YAEL,CAACA,IAUJ,OATwB,IAApBqgH,EACAw9D,EAAoB,gBAAoBnB,GAAqC,MAExE9C,EACLiE,EAAqB,gBAAoBlB,GAAwC,CAAET,mBAAoBA,IAElGr7D,EAAav4H,OAAS,IAC3Bu1L,EAAoB,gBAAoBtB,GAAkC,OAEtE,gBAAoB,MAAO,CAAE31F,UAAW,yCAA0CI,MAAOA,GAAS62F,EAAmB,ETO7Hpc,mBUzBqC9iL,IACrC,MAAM,0BAAEi7L,EAAyB,mBAAEsC,EAAkB,sCAAE5C,EAAqC,aAAE5b,EAAY,WAAEC,EAAU,cAAEF,EAAa,mBAAEG,GAAwBj/K,EAC/J,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,wCAC5C,gBAAoBm2F,GAAgC,CAAEpf,WAAYA,EAAYD,aAAcA,EAAcD,cAAeA,EAAeG,mBAAoBA,IAC5Jgc,GAA6BN,EAAwC,EAAK,gBAAoBuD,GAA+B,CAAEX,mBAAoBA,IAAyB,KAAM,GCH7K4B,GAA4Bn/L,IACrC,MAAM,0BAAE04L,GAA4B,EAAI,SAAEnsL,EAAQ,OAAE8jB,EAAM,QAAErxB,EAAO,UAAEuB,EAAS,MAAEkI,EAAK,OAAElD,EAAM,qBAAEizL,EAAoB,cAAEl/K,EAAa,0BAAEm/K,EAAyB,eAAExO,EAAc,eAAEsB,EAAc,mBAAE0R,GAAqB,EAAK,cAAE1jL,EAAgB,QAAO,YAAEq/K,GAAc,EAAK,UAAE16J,EAAS,QAAEqxH,EAAO,QAAEhyF,EAAO,eAAE6lC,EAAc,iBAAEC,EAAgB,wBAAE++E,EAAuB,sBAAEC,EAAqB,yBAAEC,EAAwB,2BAAEC,EAA0B,wBAAEC,EAAuB,4BAAEE,EAA2B,6BAAEC,EAA4B,+BAAEF,EAA8B,+BAAEG,EAA8B,qBAAEC,EAAoB,mBAAEC,GAAwB9iL,EAC1mBo/L,EX2ByC,GAAG7lL,mBAC3C3a,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGg4L,IAAsD,WAAlBtlL,EACrE,CACEmpK,4BAA6B6b,GAC7B3b,+BAAgC8b,GAChC5b,mBAAoB6b,GACpBrc,yBAA0Bsc,IAE5B,CAAC,GWnCmBS,CAAoCr/L,GAC9D,OAAQ,gBAAoB,KAAa,CAAEqwB,OAAQA,GAC/C,gBAAoB2yJ,GAAmC,CAAE5/E,eAAgBA,QAAuDA,EAAiBg8F,EAAkBh8F,eAAgBC,iBAAkBA,QAA2DA,EAAmB+7F,EAAkB/7F,iBAAkB++E,wBAAyBA,QAAyEA,EAA0Bgd,EAAkBhd,wBAAyBC,sBAAuBA,QAAqEA,EAAwB+c,EAAkB/c,sBAAuBC,yBAA0BA,QAA2EA,EAA2B8c,EAAkB9c,yBAA0BC,2BAA4BA,QAA+EA,EAA6B6c,EAAkB7c,2BAA4BC,wBAAyBA,QAAyEA,EAA0B4c,EAAkB5c,wBAAyBE,4BAA6BA,QAAiFA,EAA8B0c,EAAkB1c,4BAA6BC,6BAA8BA,QAAmFA,EAA+Byc,EAAkBzc,6BAA8BF,+BAAgCA,QAAuFA,EAAiC2c,EAAkB3c,+BAAgCG,+BAAgCA,QAAuFA,EAAiCwc,EAAkBxc,+BAAgCC,qBAAsBA,QAAmEA,EAAuBuc,EAAkBvc,qBAAsBC,mBAAoBA,QAA+DA,EAAqBsc,EAAkBtc,oBACjqE,gBAAoBka,GAAgC,CAAE9+J,UAAWA,EAAWl/B,QAASA,EAASuB,UAAWA,EAAWkI,MAAOA,EAAOlD,OAAQA,EAAQizL,qBAAsBA,EAAsBE,0BAA2BA,EAA2Bp/K,cAAeA,EAAem/K,0BAA2BA,EAA2BlpC,QAASA,EAAShyF,QAASA,EAAS0sH,eAAgBA,EAAgBsB,eAAgBA,EAAgB0R,mBAAoBA,EAAoB1jL,cAAeA,EAAeq/K,YAAaA,GAAersL,IAAY,ECVhiB,GAAoB,CAAC,CAAE0/F,MAAO,UAUvBqzF,GAAoC,EAAG/yL,WAAUgzL,kBACnDA,EAAgB,gBAAoB,MAAO,CAAEt3F,UAAW,sCAC3D,gBAAoBuD,GAAA,GAAoB,KACpCj/F,EACA,gBAAoBw/F,GAAA,GAAQ,CAAE9D,UAAW,mFAAoF+D,YAAa,IACtI,gBAAoB,OAAQ,KACxB,gBAAoB,KAAkB,CAAE5tG,GAAI,gCAAqC,gBAAoB,WAAgB,KAAMmO,GCZzI,GAAe,CACjB,CAAE0/F,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,KAChC,CAAEwuE,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,IACrC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,KACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,MACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,MACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,MACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,OAK7BszF,GAA0B,KACnC,MAAM,wBAAEpd,EAAuB,sBAAEC,EAAqB,iBAAEh/E,EAAgB,eAAED,GAAmB2/E,MACvF,MAAEt6K,EAAK,eAAE0xL,EAAc,UAAE1V,EAAS,YAAEzH,EAAW,2BAAE6d,EAA0B,QAAE6B,EAAO,QAAEntC,EAAO,mBAAE0tC,EAAkB,6BAAE/U,EAA4B,cAAE3uK,GAAmBwjL,KACpKx6D,GAAW,EAAA5e,GAAA,GAAc,gBACzB87C,ECpBH,SAA2CyoB,EAA8B2S,GAC5E,MAAM/rG,GAAO,EAAAC,GAAA,KACP0wG,EAAkE,IAAtC5E,EAA2BlxL,OACvDy1K,EAASqgB,IAA8BvX,EACvCwX,GAAuBD,GAA6BvX,EACpDyX,GAAuBF,IAA8BvX,EAC3D,IAAIzoB,EAAW3wE,EAAKj/D,cAAc,CAAEzxB,GAAI,gBAYxC,OAXIshM,EACAjgC,EAAW,GAAG3wE,EAAKj/D,cAAc,CAAEzxB,GAAI,mBAAoB0wF,EAAKj/D,cAAc,CAC1EzxB,GAAI,sBACF4jL,GAAiB6Y,EAA4B/rG,KAE9C6wG,EACLlgC,EAAWuiB,GAAiB6Y,EAA4B/rG,GAEnDswF,IACL3f,EAAW3wE,EAAKj/D,cAAc,CAAEzxB,GAAI,yBAEjCqhK,CACX,CDCqBmgC,CAAkC1X,EAA8B2S,GAE3E9d,EADkC,WAAlBxjK,GAC4D,IAAtCshL,EAA2BlxL,OACvE,OAAQ,gBAAoBwjH,GAAA,EAAU,CAAEllB,UAAW,4BAA6Bsc,qBAAqB,EAAMoJ,kBAAkB,EAAMrJ,qBAAqB,EAAMu7E,wBAAwB,EAAM7zF,YAAa,GAAcixF,mBAAoBA,EAAoB3vE,aAAc,EAAGC,iBAAgBnrB,YAAc,gBAAoB,MAAO,CAAE6F,UAAW,KAAG,CAAE,eAAgBg1F,GAAsB16D,GAAYngC,OACnY+3F,GAAkB,gBAAoB92F,EAAkB,CAAE0M,QAASwd,EAAgBnrB,OAAQA,KAC5F+3F,KAAoB1V,IAAch8K,GAAU,gBAAoB26F,EAAgB,CAAEt0F,QAAS21K,EAAU31K,QAASlC,MAAO63K,KACrH0V,KAAoB1xL,GAAU,gBAAoB62L,GAAmC,CAAEC,aAAc9a,aAA6C,EAASA,EAAU31K,SAClK,gBAAoBszK,EAAyB,CAAE35K,MAAOA,EAAOg3J,SAAUA,EAAUud,YAAaA,EAAarhD,UAAWw+D,EAAgBx2I,UAAWw2I,EAAgB/3F,OAAQA,EAAQmwD,mBAAoBsoC,EAA2BlxL,OAAQozK,mBAAoBA,EAAoBhtE,QAASwd,EAAgB0E,UAAWwyD,MAAkBz2C,mBAAqB5rC,IAC1VA,GACDs6F,GACJ,EACD9uE,WAAY,EAAGC,mBAAqB,gBAAoB,MAAO,CAAE5lB,UAAW,KAAG,CAAE,eAAgBg1F,GAAsB16D,IAAal6B,MAAO,CAAEhnF,OAAQ47K,GAAsB16D,EAAW,OAAS,SAC9L,gBAAoB8/C,EAAuB,CAAEyc,mBAAoB,KACzDvvC,IACA1hC,GAAe,EAChBkxE,oBAAqBlxE,MAAsB,EEhCjDiyE,GAAuB9/L,IAChC,MAAMhB,GAAU,QAAiBgB,EAAMhB,QAAS,mBAEhD,OvF0BG,SAAsCgB,GACzC,IAAIqE,EAAIswB,EACR,MAAM,qBAAE6jK,EAAoB,OAAEjzL,EAAM,QAAEgqJ,EAAO,cAAEj2I,EAAa,eAAE2wK,EAAc,eAAEsB,EAAc,QAAEvsL,GAAYgB,GAC1G,UAAYuF,GAAUizL,GAAuB,mIAC7C,UAAYjzL,IAAWgqJ,GAAU,kIACjC,QAAUhqJ,GAAUizL,EAAsB,uGAC1C,YAAgG,QAAjFn0L,EAAKrF,aAAyC,EAASA,EAAQI,oBAAiC,IAAPiF,OAAgB,EAASA,EAAGmxC,wCAA0C,IAAQl8B,IAAiB,6EACvM,YAAgG,QAAjFqb,EAAK31B,aAAyC,EAASA,EAAQI,oBAAiC,IAAPu1B,OAAgB,EAASA,EAAG6gB,wCAC/H,IAAQy0I,IACT,IAAQsB,IAAkB,2EAClC,CuFrCIwU,CAA6BnhM,OAAOiI,OAAO,CAAE7H,WAAWgB,IAChD,gBAAoBm/L,GAA0BvgM,OAAOiI,OAAO,CAAC,EAAG7G,GACpE,gBAAoBw/L,GAAyB,MAAO,ECJ/CQ,GAAyBhgM,IAClC,IAAIqE,EACJ,OAAQ,gBAAoBy7L,GAAqBlhM,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEoiL,wBAAkE,QAAxC/9K,EAAKrE,EAAMoiL,+BAA4C,IAAP/9K,EAAgBA,EAAKy4K,KAAkC,ECD1M,SAAS,GAA0C5iH,GACtD,MAAM,kBAAExgD,EAAiB,YAAEP,EAAW,kBAAES,GAAsBsgD,EAAgBvhD,gBAC9E,OAAIiB,GACO,SAA2BT,EAAaO,IAGxC,SAA2BP,EAAaO,EAEvD,CCNO,MAAMumL,GAAoB16L,IAC7B,MAAM26L,EAAsBt2G,GAAqB1oC,IAC3Ci/I,GAAoB,IAAA3zL,UAAQ,KAC9B,IAAInI,EACJ,OAA0D,QAAlDA,EAAKkB,EAAOoT,gBAAgBkB,wBAAqC,IAAPxV,OAAgB,EAASA,EAAGpG,KAAK2jD,IAC/F,MAAMw+I,EAAiBF,EAAoBz6L,MAAMF,GAAWA,EAAOoT,gBAAgBC,kBAAoBgpC,EAAO1G,wBAE9G,OADA,QAAUklJ,GACH,CAAE76L,OAAQ66L,EAAgBrkI,KAAMna,EAAOma,KAAKl7D,WAAW,GAAI,GACpE,GACH,CAACq/L,EAAqB36L,EAAOoT,gBAAgBkB,mBAWhD,MAAO,CACHP,eAXkB,IAAA9M,UAAQ,IACnB2zL,aAA6D,EAASA,EAAkBliM,KAAK8G,GAAS,GAA0CA,EAAKQ,WAC7J,CAAC46L,IAUA1H,2BATqB,IAAAjsL,UAAQ,KAE7B,GAAK2zL,EAGL,MAAO,CAACE,EAAe19L,IAAUw9L,EAAkBx9L,GAAOo5D,IAAI,GAC/D,CAACokI,IAIH,EChCQG,GAAyBtgM,GAC1B,gBAAoB,MAAO,CAAEioG,UAAW,0BAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MAAQhnH,EAAMugM,gBCDpDC,GAA2B,IAC5B,gBAAoB,MAAO,CAAEv4F,UAAW,8BAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,oCACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,uCCElD,GAAe,CAAC,CAAE6tG,MAAO,SAAW,CAAEA,MAAO,UAC7Cw0F,GAAe,CACjB,QAAS,EAAE,IAAK,IAChB,QAAS,EAAE,KAAM,KAERC,GAA6B1gM,IACtC,MAAM,YAAE2gM,EAAW,UAAElC,EAAS,wBAAEmC,GAA4B5gM,EACtD6gM,EAAkBj3G,GAAqB5nC,GAA0C2+I,GAAe,KAEhGG,EADal3G,GAAqBnzC,IACPhxC,MAAM6xC,GAASA,EAAKf,aAAavkB,MAAMhZ,IAAO,QAAgBA,EAAGvW,IAAKo+L,OACjGE,EAAqBD,aAAqD,EAASA,EAAc5iK,UAAUz1B,OACjH,QAAUg2L,EAAW,iDACrB,MAAMuC,EAAc,KAAG,oFAAqF,KAAKj8E,GAAA,GAAyB05E,MAC1I,OAAQ,gBAAoBjzF,GAAA,GAAoB,CAAE8e,UAAW,GACzD,gBAAoB,MAAO,CAAEriB,UAAW+4F,GACpC,gBAAoB,QAAS,CAAE/4F,UAAW,iDACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,4BAA6B6tB,UAAU,EAAM5T,UAAU,EAAM2G,SAAS,IAClI,gBAAoB,OAAQ,CAAE5gB,UAAW,oBAAsBw2F,KACvE,gBAAoB1yF,GAAA,GAAQ,CAAE9D,UAAW,wFAAyF+D,YAAa,GAAc4X,aAAc68E,IAAgBG,EAA2B,gBAAoB,MAAO,KAC7O,gBAAoB,KAAkB,CAAExiM,GAAI,6CAA8CoI,OAAQ,CAC1Fy6L,WAAYF,EACZG,YAAazC,EAEbR,OAASzuD,GAAW,gBAAoB,SAAU,KAAMA,OAClD,gBAAoB,MAAO,KACzC,gBAAoB,KAAkB,CAAEpxI,GAAI,yCAA0CoI,OAAQ,CACtFy6L,WAAYF,EACZG,YAAazC,EAEbR,OAASzuD,GAAW,gBAAoB,SAAU,KAAMA,QACnD,ECnCZ2xD,GAA0B,EAAG14L,QAAOgjG,OAAMqgC,WAAU/7B,cAC7D,MAIM9H,EAAY,KAAG,eAAgB,KAAK8c,GAAA,GAAyBt8G,KAAU,CACzE,cAAeqjI,IAEnB,OAAQ,gBAAoB,MAAO,CAAE7jC,UAAWA,EAAW8H,QAPpCvxG,IACnBuxG,IACAvxG,EAAEyvH,gBAAgB,GAMlB,gBAAoB,OAAQ,CAAEhmB,UAAW,KAAG,eAAgBwD,KAC5D,gBAAoB,OAAQ,KAAMhjG,GAAQ,ECP5C,GAAe,CACjB,CACIwjG,MAAO,SAEX,CACIA,MAAO,UAGFm1F,GAA+BphM,IACxC,MAAM,YAAE2gM,EAAW,+BAAEU,EAA8B,qBAAEC,EAAoB,SAAEvsF,GAAa/0G,EAClFuhM,EAA8BD,EAAqB77L,MAAM6xC,IAAS,QAAgBA,EAAK70C,IAAK4+L,KAElG,OADA,QAAUE,EAA6B,oEAC/B,gBAAoBp0E,GAAA,EAAU,CAAEllB,UAAW,kEAAmEsc,qBAAqB,EAAMoJ,kBAAkB,EAAMrJ,qBAAqB,EAAMtY,YAAa,GAAcshB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzjH,MAAOs3L,EAA4B94L,MAAO0zH,SAAU,oBAAqB1zH,MAAO84L,EAA4B94L,MAAO25F,OAAQA,EAAQ2N,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,4EAA6E7mF,MAb5lB,IAawnB5c,MAAO88L,EAAsBtzE,WAAY,EAAGjpH,WAChrB,MAAM+mI,GAAW,QAAgB/mI,EAAKtC,IAAK4+L,GAO3C,OAAQ,gBAAoBF,GAAyB,CAAE14L,MAAO1D,EAAK0D,MAAOgjG,KAAM,oBAAqBqgC,SAAUA,EAAU/7B,QANzG,KACZ8d,IACKie,GACD/2B,EAAS4rF,EAAa57L,EAAKtC,IAC/B,GAEyI,KACxI,ECpBR++L,GAAyBxhM,IAClC,MAAQ+E,MAAM,WAAEsyF,EAAU,gBAAEz+E,EAAe,4BAAE2oL,GAA6B,QAAExxF,EAAO,qBAAE7tD,EAAoB,qBAAEo/I,EAAoB,4BAAEG,EAA2B,MAAEh5L,EAAK,SAAEy5G,GAAcliH,EAE7K41J,EADuBhsE,GAAqB3nC,GAA2BC,EAAsBtpC,MACvD0oL,EAAqB33L,OAC3D+3L,EAAgCrqG,GAAciqG,EAAqB33L,OAAS,EAC5Eg4L,GAAoB,IAAAn1L,UAAQ,IACvB,KAAG,oFAAqF,KAAKu4G,GAAA,GAAyBt8G,KAAU,CACnI,cAAe4uF,KAEpB,CAACA,EAAY5uF,IACVssG,GAAW,IAAA3pB,cAAY,KACzB,MAAMvG,EAA0By8G,EAAqBrjM,KAAKq5C,GAASA,EAAK70C,MACxEstG,EAAQn3F,GAAkBy+E,EAAYxS,EAAwB,GAC/D,CAACwS,EAAYz+E,EAAiBm3F,EAASuxF,IAC1C,OAAI1rC,EACQ,gBAAoB8qC,GAA2B,CAAEE,0BAA2BU,EAAqB33L,OAAQ80L,UAAWh2L,EAAOk4L,YAAaz+I,IAE5I,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAE+lD,UAAW05F,EAAmB5xF,QAAS,KAAOmS,GAAYnN,IAAYtsG,MAAOA,GACtG,gBAAoB,QAAS,CAAEw/F,UAAW,iDACtC,gBAAoB,QAAS,CAAErjG,KAAM,WAAYqjG,UAAW,4BAA6B4gB,QAASxxB,EAAY6qB,SAAUA,EAAU4T,UAAU,IAC5I,gBAAoB,OAAQ,CAAE7tB,UAAW,oBAAsBx/F,GAC/Di5L,EAAiC,gBAAoB,OAAQ,CAAEz5F,UAAW,SACtE,IACA,gBAAoB,KAAkB,CAAE7pG,GAAI,8CAAkD,OAC1GsjM,EAAiC,gBAAoBN,GAA6B,CAAET,YAAa/nL,EAAiB0oL,qBAAsBA,EAAsBD,+BAAgCE,GAA+BD,EAAqB,GAAG7+L,IAAKsyG,SAAU0sF,IAAkC,KAAM,EC5B9S,GAAgB,CAAE,QAAS,CAAC,GAAI,GAAI,QAAS,EAAE,GAAI,IACnD,GAAe,CAAC,CAAEx1F,MAAO,SAAW,CAAEA,MAAO,UACtC21F,GAAqB5hM,IAC9B,MAAM,QAAEu7D,EAAO,qBAAErZ,EAAoB,WAAE2/I,EAAU,6BAAEC,EAA4B,qBAAER,EAAoB,WAAEzgM,EAAU,SAAEqhH,EAAQ,gBAAE6/E,GAAqB/hM,EAElJ,OADkC4pF,GAAqBr0C,KACrBgmB,EAAQ5xD,OAAS,EACxC,KAEH,gBAAoB6hG,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GACvE,gBAAoB,MAAO,CAAEriB,UAAW,oBAAsB1sC,EAAQt9D,KAAI,CAAC8G,EAAMpC,KAC7E,IAAI0B,EACJ,OAAQ,gBAAoBm9L,GAAuB,CAAEt7L,IAAKnB,EAAK6T,gBAAiBspC,qBAAsBA,EAAsBn9C,KAAMA,EAAMm9G,SAAUA,EAAUnS,QAAS8xF,EAAYJ,4BAA6BK,EAA8BR,qBAAsBA,EAAqB3+L,GAAQ8F,MAA6B,QAArBpE,EAAKU,EAAK0D,aAA0B,IAAPpE,EAAgBA,EAAKxD,EAAW8B,GAAO8F,OAAS,KAExX2V,QAAQ8jG,IAAc,gBAAoBnW,GAAA,GAAQ,CAAE6X,aAAc,GAAe5X,YAAa,IAC1F,gBAAoB,MAAO,KAAM+1F,IAAoB,ECfpDC,GAAqC,EAAGv5L,QAAOw5L,WAAU10E,qBAClE,MAAMw0C,EAAmB,KAAG,oBAAqB,kBAAmB,kBAAmB,kBAAmB,gCAAiC,kCAAmC,CAC1K,YAAakgC,IAEXp1D,EAAYo1D,EAAW,qBAAuB,uBACpD,OAAQ,gBAAoBjmE,GAAA,EAAQ,CAAE/zB,UAAW85D,EAAkBt5J,MAAOA,EAAOwB,MAAOxB,EAAOsnG,QAASwd,EAAgBsf,UAAWA,GAAa,ECO9I,GAAqB,CACvB,CAAE5gC,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,IACvC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,GAAIyuE,EAAG,KAE7Bg2F,GAAmC,EAAG/oL,cAAa42F,UAAS+7B,eACrE,MAAM,MAAErjI,GAAU0Q,EACZ8uF,EAAY,KAAG,eAAgB,8BAA+B,gCAAiC,iCAAiC8c,GAAA,GAAyBt8G,KAlBxI,CAAC7D,IACxB,OAAQA,GACJ,IAAK,WACD,MAAO,4BACX,IAAK,cACL,IAAK,uBACL,IAAK,wBACD,MAAO,gBACX,QACI,MAAO,wBACf,EAQyK,CAAmBuU,EAAY46C,iBAAkB,CACtN,cAAe+3E,IAKnB,OAAQ,gBAAoB,MAAO,CAAE7jC,UAAWA,EAAW8H,QAHrC,KAClBA,EAAQ52F,EAAY1W,IAAI,GAGxB,gBAAoBinH,GAAe,CAAEc,mBAAoB,IAAsB/hH,GAAQ,ECrBzF,GAAe,CACjB,CACIwjG,MAAO,QACP1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,IAEvB,CACID,MAAO,QACP1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,KAGfi2F,GAAgC,EAAG5rJ,eAAco9D,sBAAqBoV,eAE/E,MAAMq5E,EAA2B7rJ,EAAa9wC,MAAMuT,IAAO,SAAgB,QAAMA,EAAG5a,GAAI,eAAgBu1G,KACpG,SAAgB,QAAO36F,EAAG7T,KAAMwuG,KAAsBlrG,MAC1D,OAAQ,gBAAoB0kH,GAAA,EAAU,CAAEnhB,YAAa,GAAcshB,aAAc,EAAGlrB,SAAQmrB,oBAC5E,gBAAoBy0E,GAAoC,CAAEv5L,MAAO25L,EAA0BH,SAAU7/F,EAAQmrB,eAAgBA,IACtIK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,8EAA+EzjG,MAAO+xC,EAAcuwE,WAlB9K,GAkBuM1lG,MAjBpM,IAiB2N4sG,WAAY,EAAGjpH,WACjP,MAAM+mI,GAAW,QAAgBn4B,EAAqB5uG,EAAKtC,KAO3D,OAAQ,gBAAoBy/L,GAAkC,CAAE/oL,YAAapU,EAAM+mI,SAAUA,EAAU/7B,QANtF52F,IACb00G,IACKie,GACD/iB,EAAS5vG,EACb,GAEuH,KACtH,EC9Bd,MCOMkpL,GAAiC,gBAAoB,MAClEA,GAA+Bl2L,YAAc,iCAItC,MAAMm2L,GAAoC,KAAM,IAAAj2L,YAAWg2L,IAIrDE,GAA0CviM,IACnD,IAAIqE,EAAIswB,EACR,MAAM,SAAEpoB,EAAUhH,OAAQoV,EAAa,WAAE9Z,GAAeb,EAClD2Y,GAAkB,IAAAnM,UAAQ,IAAM,GAA0CmO,IAAgB,CAACA,IAC3F6nL,GAAqB,IAAAh2L,UAAQ,IACxB3L,QAA+CA,EAAa,IACpE,CAACA,IACEo5D,GAAY,IAAAztD,UAAQ,KACf,QAAamM,IACrB,CAACA,IACE8pL,EAAkB74G,GAAqB7nC,GAAmCkY,IAC1EmY,EAAyBwX,GAAqBtxC,IAE9CoqJ,EADiC94G,GAAqB,IACH3jF,IAAI0U,EAAchC,gBAAgBQ,cAC3F,QAAUupL,GACV,MAAMhwE,EAAyB8vE,EAAmB/8L,MAAMy4B,IAAc,QAAgBA,EAAUz7B,IAAKigM,EAAkBxkK,aACjHklD,EAA6Bs/G,EAAkBxkK,UAC/Cy+I,EAAsJ,QAAvHhoJ,EAAwE,QAAlEtwB,EAAK+tE,EAAuBnsE,IAAIy8L,EAAkBxkK,kBAA+B,IAAP75B,OAAgB,EAASA,EAAGoE,aAA0B,IAAPksB,EAAgBA,EAAK+9F,aAAuE,EAASA,EAAuBjqH,OAC1R,QAAE8yD,EAAO,qBAAEonI,EAAoB,eAAEC,EAAc,6BAAEd,EAA4B,sBAAEe,EAAuBC,qBAAsBC,GChC/H,SAAiCN,EAAiB9nL,GACrD,MAAM,iBAAEd,EAAkBjB,gBAAiBspC,GAAyBvnC,EAAchC,iBAClF,QAAUupC,EAAsB,6GAChC,MAAM8gJ,EAA0Bj2G,GAA4B,IACtD9wE,ECHH,SAAuCwmL,EAAiB5oL,GAC3D,OAAO,IAAArN,UAAQ,IACJi2L,EAAgBxkM,KAAKglM,IACxB,IAAI5+L,EACJ,MAAM89C,EAAwB8gJ,EAAetqL,gBAAgBC,gBACvDsqL,EAA4BD,EAAetqL,gBAAgBQ,YAC3DgqL,EAAsBF,EAAetqL,gBAAgBlQ,MACrD4uF,GAAcx9E,aAA2D,EAASA,EAAiBmY,MAAMoxK,GAAOA,EAAGloJ,wBAA0BiH,OAA2B,EACxKkhJ,EAAkL,QAAhKh/L,EAAKwV,aAA2D,EAASA,EAAiBpU,MAAM29L,GAAOA,EAAGloJ,wBAA0BiH,WAA2C,IAAP99C,OAAgB,EAASA,EAAG03D,KAAKl7D,WAEjO,OADA,QAAUshD,EAAuB,uHAC1B,CACHvpC,gBAAiBupC,EACjBhpC,YAAa+pL,EACb7rG,aACAgsG,eAAgBA,EAChB9B,4BAA6B8B,aAAuD,EAASA,EAAe,GAC5G56L,MAAO06L,EACV,KAEN,CAACV,EAAiB5oL,GACzB,CDjB0BypL,CAA8Bb,EAAiB5oL,IAC9D0hD,EAASsmI,IAAc,IAAA73G,UAAS/tE,GA2BjC0mL,GAAuB,IAAAn2L,UAAQ,KACzB,KAAQ+uD,EAASt/C,IAC1B,CAACs/C,EAASt/C,IACP4mL,GAAwB,IAAAz3G,cAAY,KAEtC,GAAIu3G,EAAsB,CACtB,MAAMrpL,EAAgB,GACtBiiD,EAAQ31D,SAAS29L,IACb,IAAIl/L,EACJ,GAAIk/L,EAAWlsG,aAAoD,QAApChzF,EAAKk/L,EAAWF,sBAAmC,IAAPh/L,OAAgB,EAASA,EAAGsF,QAAS,CAC5G,MAAMm6K,EAAgByf,EAAWhC,6BAA+BgC,EAAWF,eAAe,GAC1F/pL,EAAc7V,KAAK,CACfy3C,sBAAuBqoJ,EAAW3qL,gBAClCmjD,KAAM,CACFl7D,WAAY,CAACijL,KAGzB,KAEJkf,EAAwBroL,EAAchC,gBAAgBC,gBAAiBU,EAC3E,IACD,CAACiiD,EAASonI,EAAsBhoL,EAAeqoL,IAC5CF,GAAuB,IAAA13G,cAAY,KACrCy2G,EAAW5lL,EAAc,GAC1B,CAACA,IACJ,MAAO,CACHs/C,UACAonI,uBACAC,eAtDJ,SAAwBhqL,EAAiBy+E,EAAYgsG,GACjD,MAAMG,EAAqBjoI,EAAQxhD,WAAW6nC,GAAWA,EAAOhpC,kBAAoBA,IAC9EkhH,EAAcl7H,OAAOiI,OAAO,CAAC,EAAG00D,EAAQioI,IAC9C1pE,EAAYziC,WAAaA,EACzByiC,EAAYupE,eAAiBA,EACzBhsG,EACAyiC,EAAYynE,4BAA8B8B,EAAe,IAKzDvpE,EAAYynE,iCAA8Bt9L,EAC1C61H,EAAYupE,oBAAiBp/L,GAEjC,MAAMw/L,EAAqB,IAAIloI,GAC/BkoI,EAAmBD,GAAsB1pE,EACzC+nE,EAAW4B,EACf,EAsCI3B,6BArCJ,SAAsClpL,EAAiB8qL,GACnD,MAAMF,EAAqBjoI,EAAQxhD,WAAW6nC,GAAWA,EAAOhpC,kBAAoBA,IAC9EkhH,EAAcl7H,OAAOiI,OAAO,CAAC,EAAG00D,EAAQioI,IAC9C1pE,EAAYynE,4BAA8BmC,EAC1C,MAAMD,EAAqB,IAAIloI,GAC/BkoI,EAAmBD,GAAsB1pE,EACzC+nE,EAAW4B,EACf,EA+BIZ,wBACAC,uBAER,CDjCgKa,CAAwBlB,EAAiB9nL,IAC/L,oBAAEipL,EAAmB,mBAAEC,EAAkB,mBAAEC,EAAkB,oBAAEC,EAAqBjB,qBAAsBkB,EAAkB,wBAAEC,GGlCjI,SAAqCtpL,EAAe9Z,GACvD,MAAMy4D,EAAoBswB,GAAqBnzC,KACvC2yC,IAAK86G,EAAmBv3L,OAAQs3L,GAA4B14G,GAA8B,CAC9FL,eAAgBiN,GAChB3M,aAAc,oEACdC,WAAY,gCAEV04G,EAAsBxpL,EAAchC,gBAAgBQ,aACnD0qL,EAAoBO,IAAyB,IAAAp6G,WAAS,KACzD,IAAI3lF,EAAIswB,EAAIK,EACZ,MAAMqvK,EAAqB1pL,EAAchC,gBAAgBQ,YACnDmrL,EAA2J,QAAlIjgM,EAAKi1D,EAAkB7zD,MAAMy4B,GAAcA,EAAUqY,aAAavkB,MAAMhZ,IAAO,QAAgBA,EAAGvW,IAAK4hM,cAA0C,IAAPhgM,OAAgB,EAASA,EAAGkyC,aAC/LguJ,EAAyN,QAAvLvvK,EAAiI,QAA3HL,EAAK9zB,EAAW4E,MAAMy4B,GAAcA,EAAUqY,aAAavkB,MAAMhZ,IAAO,QAAgBA,EAAGvW,IAAK4hM,cAA0C,IAAP1vK,OAAgB,EAASA,EAAG4hB,oBAAiC,IAAPvhB,EAAgBA,EAAK,GAE5P,MAAO,CACH2+E,oBAAqB0wF,EACrBC,sBAHWA,QAAqEA,EAAwBC,EAI3G,IAECT,IAAsB,QAAgBK,EAAqBN,EAAmBlwF,qBAC9EiwF,GAAsB,IAAAx4G,cAAajyE,IACrC,MAAMqrL,EAAsB5lM,OAAOiI,OAAO,CAAC,EAAGg9L,GAC9CW,EAAoB7wF,oBAAsBx6F,EAC1CirL,EAAsBI,EAAoB,GAC3C,CAACX,IACEE,GAAsB,IAAA34G,cAAY,MAC/B,QAAgB+4G,EAAqBN,EAAmBlwF,sBACzDuwF,EAAkBvpL,EAAchC,gBAAgBC,gBAAiBirL,EAAmBlwF,oBACxF,GACD,CAACkwF,EAAoBM,EAAqBxpL,EAAeupL,IACtDpB,GAAuB,IAAA13G,cAAY,KACrCg5G,GAAuBK,GAAS7lM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG49L,GAAM,CAAE9wF,oBAAqBwwF,KAAwB,GACtH,CAACA,IACJ,MAAO,CACHP,sBACAC,qBACAC,qBACAC,sBACAjB,uBACAmB,0BAER,CHPqKS,CAA4B/pL,EAAe6nL,IACtM,MAAE/5L,EAAK,aAAEk8L,EAAY,kBAAEC,EAAiB,cAAEC,EAAa,aAAEC,EAAY,cAAE1yD,EAAe0wD,qBAAsBiC,GIpC/G,SAA+BpqL,EAAegiK,GACjD,IAAIt4K,EACJ,MAAQ+kF,IAAK21D,EAAapyI,OAAQi4L,GAAsBr5G,GAA8B,CAClFL,eAAgBkN,GAChB5M,aAAc,6DACdC,WAAY,gCAEVo5B,EAAkB14B,KAClBgmD,EAA+D,QAA9C9tI,EAAKsW,EAAchC,gBAAgBlQ,aAA0B,IAAPpE,EAAgBA,EAAKs4K,GAC3Fl0K,EAAOu8L,IAAY,IAAAh7G,UAASmoD,GAC7BwyD,EAAexyD,IAAkB1pI,EACjCo8L,GAAgB,IAAAz5G,cAAanhF,IAC/B+6L,EAAS/6L,EAAM,GAChB,IACGmoI,GAAgB,IAAAhnD,cAAY,KAC9B,GAAI3iF,IAAU0pI,EAAe,CACzB,MAAM8yD,EAAex8L,IAAUk0K,EAA8Bl0K,aAAqC,EAASA,EAAMm1E,YAAS35E,EAC1H86I,EAAYpkI,EAAchC,gBAAgBC,gBAAiBqsL,EAC/D,IACD,CAACx8L,EAAOkS,EAAegiK,EAA6B59B,IACjD+lD,GAAe,IAAA15G,cAAY,KAC7B45G,OAAS/gM,GACT4gH,EAAgBj4B,kCAAkC,GACnD,IACGk2G,GAAuB,IAAA13G,cAAY,KACrC45G,EAAS7yD,EAAc,GACxB,CAACA,IACJ,MAAO,CACH1pI,QACAk8L,eACAC,oBACAxyD,gBACAyyD,gBACAC,eACAhC,uBAER,CJAwIoC,CAAsBvqL,EAAegiK,IACnK,cAAEpjK,EAAa,qBAAE4rL,EAAoB,sBAAEC,EAAqB,sBAAEC,EAAuBvC,qBAAsBwC,GDrCxE,CAAC3sL,IAC1C,IAAItU,EACJ,MAAQ+kF,IAAKjuE,GAAwBowE,GAA8B,CAC/DL,eAAgBmN,GAChB7M,aAAc,sEACdC,WAAY,iCAERrC,IAAK2+F,GAAoBx8F,GAA8B,CAC3DL,eAAgB6M,GAChBvM,aAAc,iEACdC,WAAY,gCAEV85G,EAAiF,QAAxDlhM,EAAKsU,EAAgBA,gBAAgBY,qBAAkC,IAAPlV,EAAgBA,EAAK,SAC7GkV,EAAeisL,IAAoB,IAAAx7G,UAASu7G,GAC7CJ,EAAuBI,IAA0BhsL,EACjD8rL,GAAwB,IAAAj6G,cAAanhF,IACvCu7L,EAAiBv7L,EAAM,GACxB,IACG64L,GAAuB,IAAA13G,cAAY,KACrCo6G,EAAiBD,EAAsB,GACxC,CAACA,IACEH,GAAwB,IAAAh6G,cAAY,KACtC,GAAI7xE,IAAkBgsL,EAClB,OAEJ,MAAM,gBAAE3sL,GAAoBD,EAAgBA,gBACtB,WAAlBY,GAEAwuK,EAAgBnvK,EAAiB,CAAEe,KAAM,IAAM,MAC/CwB,EAAoBvC,EAAiBW,KAIrC4B,EAAoBvC,EAAiBW,GACrCwuK,EAAgBnvK,EAAiB,CAAEe,KAAM,IAAM,UACnD,GACD,CAAC4rL,EAAuBhsL,EAAeZ,EAAiBwC,EAAqB4sK,IAChF,MAAO,CACHxuK,gBACA4rL,uBACAC,wBACAC,wBACAvC,uBACH,ECN0I2C,CAA8B9qL,GACnK+qL,GAAsB,IAAAt6G,cAAY,KAEd,WAAlB7xE,GACAspL,IACAuC,MAGAA,IACAvC,KAEJkB,IACA3xD,GAAe,GAChB,CAAC74H,EAAespL,EAAuBkB,EAAqB3xD,EAAegzD,IACxEtC,GAAuB,IAAA13G,cAAY,KACrC23G,IACAiB,IACAe,IACAO,GAAsB,GACvB,CAACvC,EAAsBiB,EAAoBe,EAAcO,IACtDK,EAAwB9B,EAAmBS,sBAAsB36L,OAAS,EAC1Ei8L,EAAiBn9L,IAAUk0K,EACjC,OAAQ,gBAAoB0lB,GAA+B51L,SAAU,CAAExC,MAAO,CACtEsxD,UACAqnI,iBACAd,+BACAe,wBACAe,sBACAC,qBACAC,qBACAC,sBACA2B,sBACA5C,uBACA6C,wBACAhD,uBACAsB,0BACAx7L,QACAk0K,8BACAipB,iBACAjB,eACAC,oBACAxyD,gBACAyyD,gBACAC,eACA1hH,6BACA7pE,gBACA4rL,uBACAC,wBACAC,0BACC94L,EAAU,EKrFVs5L,GAA0B7lM,IACnC,MAAM,cAAEugM,EAAa,eAAEuF,EAAc,eAAEF,EAAc,eAAEjzE,EAAc,QAAE5iB,EAAO,SAAEgZ,GAAa/oH,EAE7F,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,MAAO,CAAEioG,UAAW,gCACpC,gBAAoBq4F,GAAuB,CAAEC,cAAeA,IAC5DqF,EAAkB,gBAAoB,IAAK,CAAE39F,UAJ5B,yGAIyDnpD,OAAQ,SAAUwqF,IAAK,sBAAuBv5B,QAASA,GAAW+1F,GAAmB,MACnK,gBAAoBxjD,GAAAC,EAAO,CAAEt6C,UAAW,8EAA+Eh+F,MAAO0oH,EAAgB5J,SAAUA,IAAa,ECPvK,GAAgB,CAAE,QAAS,CAAC,GAAI,GAAI,QAAS,EAAE,GAAI,IACnD,GAAe,CAAC,CAAE9c,MAAO,SAAW,CAAEA,MAAO,UACtC85F,GAAqB/lM,IAC9B,MAAM,KAAE+E,EAAI,UAAE05L,EAAS,SAAE3yD,EAAQ,SAAE5pB,EAAQ,gBAAE6/E,EAAe,QAAEhyF,GAAY/vG,EACpEioG,EAAY,KAAG,eAAgB,CACjC,cAAe6jC,GAChB,CACC,cAAe5pB,GAChB,iCAAkC,kCAAkCn9G,KACvE,OAAQ,gBAAoBymG,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,GACvE,gBAAoB,MAAO,CAAEriB,UAAWA,EAAW8H,QAAS,KAAOmS,GAAYnS,KAAa0uF,GAC5FrgL,QAAQ8jG,IAAc,gBAAoBnW,GAAA,GAAQ,CAAE6X,aAAc,GAAe5X,YAAa,IAC1F,gBAAoB,MAAO,KAAM+1F,IAAoB,ECZpDiE,GAAuBhmM,IAChC,MAAM,MAAEyI,EAAK,OAAE25F,EAAM,eAAEmrB,GAAmBvtH,EACpC+hK,EAAmB,KAAG,oBAAqB,kBAAmB,kBAAmB,kBAAmB,iCAAkC,mCAAoC,CAC5K,YAAa3/D,IAEXyqC,EAAYzqC,EAAS,qBAAuB,uBAClD,OAAQ,gBAAoB45B,GAAA,EAAQ,CAAE/zB,UAAW85D,EAAkBt5J,MAAOA,EAAOwB,MAAOxB,EAAOsnG,QAASwd,EAAgBsf,UAAWA,GAAa,ECF9I,GAAe,CACjB,CACI5gC,MAAO,QACP1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,IAEvB,CACID,MAAO,QACP1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,KAGf+5F,GAAiBjmM,IAC1B,MAAM,mBAAEkmM,EAAkB,yBAAEC,EAAwB,0BAAEC,EAAyB,+BAAEC,EAA8B,cAAE9sL,EAAa,sBAAE6rL,EAAqB,SAAEljF,GAAcliH,EAC/JsmM,EAA0B,CAC5BC,MAAOJ,EACPK,OAAQJ,GAEN5hM,EAAQ,CAAC,QAAS,UACxB,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB87L,GAAuB,CAAEC,cAAe2F,IAC5D,gBAAoB,MAAO,CAAEj+F,UAAW,gCACpC,gBAAoBklB,GAAA,EAAU,CAAEnhB,YAAa,GAAcshB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBy4E,GAAqB,CAAE5jG,OAAQA,EAAQ35F,MAAO69L,EAAwB/sL,GAAgBg0G,eAAgBA,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,sEAAuEzjG,MAAOA,EAAOsiH,WAtBxZ,GAsBib1lG,MArB9a,IAqBqc4sG,WAAY,EAAGjpH,UAAY,gBAAoBghM,GAAmB,CAAEhhM,KAAMA,EAAM05L,UAAW6H,EAAwBvhM,GAAO+mI,SAAU/mI,IAASwU,EAAe2oG,SAAmB,WAATn9G,GAAqBm9G,EAAU6/E,gBAAiBsE,EAAgCt2F,QAAS,KAC/rB8d,IACAu3E,EAAsBrgM,EAAK,SAChB,EChB1B,GAAgC/E,IACzC,IAAIqE,EAAIswB,EACR,MAAM,UAAEslC,EAAS,aAAEwsI,EAAY,oBAAEC,EAAmB,UAAEC,EAAS,eAAEb,EAAc,mBAAEI,EAAkB,yBAAEC,EAAwB,0BAAEC,EAAyB,+BAAEC,EAA8B,6BAAEO,EAA4B,aAAEC,GAAkB7mM,EACpOqrG,GAAQ,YACd,IAAAn+F,YAAU,IACC,KACH25L,GAAc,GAEnB,CAACA,IACJ,MAAMpE,EAAkB74G,GAAqB7nC,GAAmCkY,IAC1E6sI,EAA4Bl9G,GAAqBr0C,IACjDwxJ,GAA6B,IAAAv6L,UAAQ,IAChCi2L,EAAgBxkM,KAAKsH,GAAWA,EAAOoT,gBAAgBQ,eAC/D,CAACspL,IACE9nL,EAAgBivE,GAAqB1oC,IAAqCz7C,MAAMF,GAAWk9L,EAAgBltK,OAAO0tK,GAAmB19L,EAAOoT,gBAAgBC,kBAAoBqqL,EAAetqL,gBAAgBC,qBACrN,QAAU+B,EAAe,2DACzB,MAAM,MAAElS,EAAK,4BAAEk0K,EAA2B,QAAEphH,EAAO,eAAEqnI,EAAc,6BAAEd,EAA4B,sBAAE6D,EAAqB,mBAAE9B,EAAkB,oBAAED,EAAmB,eAAEgC,EAAc,cAAEf,EAAa,aAAEC,EAAY,cAAEvrL,EAAa,sBAAE8rL,GAA2B/C,MACpP,4BAAE0E,EAA2B,qBAAE1F,GC1BlC,SAAiC2F,EAA0BC,GAC9D,MAAMJ,EAA4Bl9G,GAAqBr0C,IACjD4xJ,GAAQ,IAAA36L,UAAQ,IAAM06L,EAA4BjpM,KAAKmpM,GAAwB,CACjFH,EACAG,MACA,CAACF,EAA6BD,KAC1B79G,IAAKi+G,EAAyB3/L,OAAQ45L,EAAsB30L,OAAQ26L,EAA4B16L,MAAO26L,GAA+Bz7G,GAA4B,CACtKC,aAAc2O,MAElB,IAAAxtF,YAAU,KAEF45L,GACAO,EAAwBF,EAC5B,GACD,CAACA,EAAOE,EAAyBP,IACpC,MAAME,GAA8B,IAAAx6L,UAAQ,IACF,YAA/B86L,GAA2E,YAA/BA,GACpD,CAACA,IACJ,OAAKR,EAQE,CACHxF,uBACA0F,8BACAO,6BATO,CACHjG,qBAAsB,GACtBiG,+BAA2BtjM,EAC3B+iM,6BAA6B,EAQzC,CDLkEQ,CAAwB7sL,EAAchC,gBAAgBQ,YAAa4tL,IAC3H,WAAElmM,EAAU,kBAAE0xH,GAAsBH,GAAc20E,GAClDU,GAAkB,IAAAr8G,cAAY,IACzB7vB,EAAQh2D,QAAQq8C,GAAWA,EAAOy1C,aAAY1tF,OAAS,GAC/D,CAAC4xD,IACJ,OAAIyrI,GAA+Bz0E,EACvB,gBAAoB,MAAO,CAAEtqB,UAAW,qDAC5C,gBAAoB83D,GAAA,EAAgB,CAAE93D,UAAW,qCAAsC0D,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGqrI,MAEzQ/lG,GAAcqnI,GAAyBzgM,EAGpC,gBAAoB,MAAO,CAAEonG,UAAW,sGAC5C,gBAAoBu4F,GAA0B,MAC9C,gBAAoBqF,GAAwB,CAAEtF,cAAeoG,EAAWb,eAAgBA,EAAgB/1F,QAAS+0F,EAAc/7E,SAAU87E,EAAee,eAAgBA,EAAgBjzE,eAAgBlqH,QAAqCA,EAAQk0K,IACrP,gBAAoBspB,GAAe,CAAEC,mBAAoBA,EAAoBC,yBAA0BA,EAA0BC,0BAA2BA,EAA2BC,+BAAgCA,EAAgC9sL,cAAeA,EAAe6rL,sBAAuBC,EAAuBnjF,SAAUulF,MAC7UX,GAA6BvrI,EAAQ5xD,OAAS,EAAK,gBAAoB22L,GAAuB,CAAEC,cAAekG,IAAmB,KAClI,gBAAoB7E,GAAmB,CAAE1/I,qBAAsBvnC,EAAchC,gBAAgBC,gBAAiB2iD,QAASA,EAASsmI,WAAYe,EAAgBd,6BAA8BA,EAA8BR,qBAAsBA,EAAsBzgM,WAAYA,EAAYqhH,SAA4B,WAAlB3oG,EAA4BwoL,gBAAiB6E,IACnVjB,EAAyB,gBAAoB,MAAO,CAAE19F,UAAW,gCAC7D,gBAAoBq4F,GAAuB,CAAEC,cAAemG,IAC5D,gBAAoB,MAAO,CAAEz+F,UAAW,4BACpC,gBAAoBk6F,GAA+B,CAAE5rJ,aAAcstJ,EAAmBS,sBAAuB3wF,oBAAqBkwF,EAAmBlwF,oBAAqBoV,SAAU66E,MAA4B,MAXjN,IAWuN,EEjDhO,GAAe,CAAC,CAAE33F,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,EAAGyuE,EAAG,KAI/Cw7F,GAA+B1nM,IACxC,MAAM,SAAE67H,GAAa77H,EACrB,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,qCAC5C,gBAAoBuD,GAAA,GAAoB,KACpC,gBAAoBwwB,GAAA,EAAQ,CAAE/zB,UAAW,oGAAqGia,UAAU,EAAOnS,QAAS8rB,IACxK,gBAAoB9vB,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IACpE,gBAAoB,KAAkB,CAAE5tG,GAAI,uCAAyC,ECV/F,GAAe,CAAC,CAAE6tG,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,EAAGyuE,EAAG,KAI/Cy7F,GAAsC3nM,IAC/C,MAAM,gBAAE4nM,GAAoB5nM,EAC5B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,4CAC5C,gBAAoBuD,GAAA,GAAoB,KACpC,gBAAoBwwB,GAAA,EAAQ,CAAE/zB,UAAW,qHAAsHia,UAAU,EAAOnS,QAAS63F,IACzL,gBAAoB77F,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IACpE,gBAAoB,KAAkB,CAAE5tG,GAAI,uCAAyC,ECUxFypM,GAAuC,EAAG9M,kBAAiB+D,qBAAoBC,sBAAqB+I,6BAA4BC,sBAAqBn4C,aAAYC,YAAWm4C,uBAAsBnnM,aAAYonM,0BACvN,MAAM38F,EAAa1hB,GAAqBnjC,IAClCyhJ,EAAwBt+G,GAAqBz6B,IAC7Cg5I,EApBV,SAAkCH,EAAsBnnM,GACpD,MAAMyqG,EAAa1hB,GAAqBnjC,IAElCi8I,EADQ94G,GAAqB,IACH3jF,IAAI+hM,IACpC,QAAUtF,GACV,MAAM0F,EAAgBx+G,GAAqBrxC,IAC3C,IAAK13C,EACD,OAAO,EAEX,MAAM6xH,EAAyB7xH,aAA+C,EAASA,EAAW4E,MAAMy4B,IAAc,QAAgBA,EAAUz7B,IAAKigM,EAAkBxkK,aACjKswC,EAAkB45H,EAAcniM,IAAIy8L,EAAkBxkK,YAAcw0F,EAE1E,OADA,QAAUlkD,GACH88B,CACX,CAOkC+8F,CAAyBL,EAAsBnnM,GACvEk/K,EAAyC,WAAxBkoB,EACvB,OAAK38F,GAAcy0E,EACR,KAEH,gBAAoB,MAAO,CAAE93E,UAAW,8CAC5C,gBAAoB,MAAO,CAAEA,UAAW,2DACpCqD,GAAc48F,EAAyB,gBAAoB,WAAgB,KACvE,gBAAoBR,GAA6B,CAAE7rE,SAAUksE,IAC7D,gBAAoB,MAAO,CAAE9/F,UAAW,yBAA6B,KACzEkgG,EAAyB,gBAAoBR,GAAoC,CAAEC,gBAAiBE,IAAiC,MACxI/nB,EAEiO,KAF/M,gBAAoB,MAAO,CAAE93E,UAAW,4DACvD,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,qGAAsG8H,QAASgvF,EAAqB90L,MAAO2lJ,EAAYnnJ,MAAOmnJ,IACvM,gBAAoB5zB,GAAA,EAAQ,CAAE9Z,SAAU64E,EAAiB9yF,UAAW,kFAAmF8H,QAAS+uF,EAAoB70L,MAAO4lJ,EAAWpnJ,MAAOonJ,KAAuB,EAKnOy4C,GAAgD,EAAGC,iBAAgBC,oBAAmBzJ,sBAAqBnvC,aAAY64C,cACxH,gBAAoB,MAAO,CAAExgG,UAAW,8CAC5C,gBAAoB,MAAO,CAAEA,UAAW,4DACxC,gBAAoB,MAAO,CAAEA,UAAW,4DACpC,gBAAoB+zB,GAAA,EAAQ,CAAE/zB,UAAW,qGAAsG8H,QAASgvF,EAAqB90L,MAAO2lJ,EAAYnnJ,MAAOmnJ,IACvM,gBAAoB5zB,GAAA,EAAQ,CAAE9Z,SAAUqmF,EAAgBtgG,UAAW,kFAAmF8H,QAASy4F,EAAmBv+L,MAAOw+L,EAAUhgM,MAAOggM,MC5C/M,SAASC,GAAoBvvL,EAAawvL,GAAY,GACzD,MAAQv/G,IAAKw/G,EAAqBlhM,OAAQ49E,EAAkB34E,OAAQk8L,EAAgCj8L,MAAOk8L,GAAmCh9G,GAA4B,CACtKC,aAAc4O,KAUlB,OARA,IAAAztF,YAAU,KACFy7L,GACAC,EAAoBzvL,EACxB,GACD,CAACA,EAAawvL,EAAWC,IAIrB,CACHtjH,mBACAyjH,0BAL6B,IAAAv8L,UAAQ,IACK,YAAnCq8L,GAAmF,YAAnCA,GACxD,CAACA,IAIAC,gCAER,CCFO,MAAME,GAAmChpM,IAC5C,MAAM,OAAEuF,EAAM,gBAAE0lG,EAAe,YAAEC,EAAW,SAAEV,EAAQ,QAAEO,GAAY/qG,GAC9D,cAAEsZ,EAAa,0BAAEm/K,GAA8BwH,GAAiB16L,GAChE8qB,EAASu5D,GAAqBz+B,IAC9BmgD,EAAa1hB,GAAqBnjC,IAClC9tC,GAAkB,IAAAnM,UAAQ,IAAM,GAA0CjH,IAAS,CAACA,KACnF0jM,EAAqBC,IAA0B,IAAAl/G,WAAS,GACzD/vB,GAAY,IAAAztD,UAAQ,KACf,QAAamM,IACrB,CAACA,IACE4vE,EAAWoB,KACXw/G,GAA8B,IAAA/9G,cAAY,IAAM7C,EAAS,GAAsBhjF,EAAOoT,gBAAgBC,mBAAmB,CAACrT,EAAQgjF,IAClIuG,GAAO,EAAAC,GAAA,KACP6gE,EAAa9gE,EAAKj/D,cAAc,CAAEzxB,GAAI,mBACtCqqM,EAAW35G,EAAKj/D,cAAc,CAAEzxB,GAAI,4BACpCyxJ,EAAY/gE,EAAKj/D,cAAc,CAAEzxB,GAAI,kBACrCsoM,EAAsB53G,EAAKj/D,cAAc,CAAEzxB,GAAI,uCAC/CqoM,EAAe33G,EAAKj/D,cAAc,CAAEzxB,GAAI,gCACxCuoM,EAAY73G,EAAKj/D,cAAc,CAAEzxB,GAAI,6BACrC0nM,EAAiBh3G,EAAKj/D,cAAc,CAAEzxB,GAAI,mCAC1C8nM,EAAqBp3G,EAAKj/D,cAAc,CAAEzxB,GAAI,qCAC9C+nM,EAA2Br3G,EAAKj/D,cAAc,CAAEzxB,GAAI,2CACpDgoM,EAA4Bt3G,EAAKj/D,cAAc,CAAEzxB,GAAI,4CACrDioM,EAAiCv3G,EAAKj/D,cAAc,CACtDzxB,GAAI,sDAEFwoM,EAA+B93G,EAAKj/D,cAAc,CACpDzxB,GAAI,qDAEFgrM,GAAgB,IAAAh+G,cAAY,KAC1B2f,GACAA,GACJ,GACD,CAACA,IACE1vC,GAAqB,IAAA7uD,UAAQ,IACxB,CAACytD,IACT,CAACA,KACE,WAAEp5D,GAAeuxH,GAAc/2D,GAC/BguI,GAAuB,IAAA78L,UAAQ,IAC1B,SAAwBxM,GCrDiB,EAACA,EAAOspM,KAC5D,MAAM,QAAEv5F,GAAY/vG,GACZoiG,OAAQmnG,GAAmBx8L,EAAY/M,IAE/C,IAAAkN,YAAU,KACFo8L,IAAeC,GACfx5F,GACJ,GACD,CAACA,EAASu5F,EAAYC,GAAgB,ED8CjCC,CAAyCxpM,EAAOoe,QAAQosF,IEtDb,EAACxqG,EAAO+qG,KAC3D,MAAM,OAAE3I,GAAWpiG,GACXoiG,OAAQmnG,GAAmBx8L,EAAY/M,IAE/C,IAAAkN,YAAU,KACF69F,GAAWw+F,IAAmBnnG,GAC9B2I,GACJ,GACD,CAACA,EAAS3I,EAAQmnG,GAAgB,EF+C7BE,CAAwCzpM,EAAOopM,GAC/C,MAAM,OAAEhnG,EAAM,MAAE35F,GAAUzI,GACpB,4BAAE28K,EAA2B,wBAAEsnB,EAAuB,2BAAE7gH,GAA+Bk/G,MACvF,iBAAEh9G,GAAqBojH,GAAoBtlH,GAC3CsmH,EAA0Bp+F,GAA0C,YAA5B24F,EACxC0F,GAAyB,IAAAn9L,UAAQ,KACnC,GAAIk9L,GAA2BpkH,GAAoB8c,EAC/C,OAAO,WACH,OAAQ,gBAAoBs6E,GAAsB,CAAEj0K,MAAOA,EAAOk0K,4BAA6BA,EAA6Br3F,iBAAkBA,GAClJ,CACJ,GACD,CAACokH,EAAyB/sB,EAA6Br3F,EAAkB8c,EAAQ35F,IACpF,OAAQ,gBAAoBq0K,GAA+Bl+K,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEkrG,YAAaA,EAAa+xE,wBAAyB0sB,IAC7I,GACD,CAACz+F,EAAaV,EAAUc,EAAY89F,IACjCQ,GAAwB,IAAAp9L,UAAQ,IAC3B,SAAyBxM,GAC5B,MAAM,MAAEyI,EAAK,qBAAEk6L,EAAoB,mBAAEmB,EAAkB,aAAEa,EAAY,oBAAEe,EAAmB,qBAAE5C,EAAoB,qBAAEqC,GAA0B7C,KAEtIiG,IADmB9/L,GAASA,EAAMkB,OAAS,IAEzCg5L,GAAwBmB,GAAsBa,GAAgBQ,IAEtE,OAAQ,gBAAoB,WAAgB,KAAM8D,EAAuB,gBAAoBX,GAA+C,CAAEC,eAAgBA,EAAgBC,kBAAmB,KACzL9C,IACAwD,GAAuB,EAAM,EAC9BnK,oBAAqB,KACpBmK,GAAuB,EAAM,EAC9Bt5C,WAAYA,EAAY64C,SAAUA,IAAgB,gBAAoBZ,GAAsCjpM,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEgoM,qBAAsBziM,EAAOoT,gBAAgBQ,YAAa8uL,oBAAqB1iM,EAAOoT,gBAAgBY,cAAes2I,UAAWA,EAAWD,WAAYA,EAAYk4C,2BAA4B,KACrUoB,GAAuB,GACvBpG,GAAsB,EACvBiF,oBAAqB,KACpBoB,GAA6B,EAC9BtoM,WAAYA,KACvB,GACD,CACCooM,EACAr5C,EACA64C,EACAljM,EAAOoT,gBAAgBQ,YACvB5T,EAAOoT,gBAAgBY,cACvBs2I,EACAhvJ,EACAsoM,IAEEU,GAAuB,IAAAr9L,UAAQ,IAC1B,SAAwBxM,GAC3B,MAAM,wBAAEikM,GAA4B3B,KAC9BuE,GAAe,IAAAz7G,cAAY,KAC7B89G,GAAuB,EAAM,GAC9B,IACH,MAAgC,YAA5BjF,EACO,gBAAoBj/D,GAAA,EAAa,CAAE3jH,OAAQ,QAE9C,gBAAoB,WAAgB,KAAM4nL,EAAuB,gBAAoB,GAA8B,CAAEpC,aAAcA,EAAc5sI,UAAWA,EAAWwsI,aAAcA,EAAcC,oBAAqBA,EAAqBC,UAAWA,EAAWb,eAAgBA,EAAgBI,mBAAoBA,EAAoBC,yBAA0BA,EAA0BC,0BAA2BA,EAA2BC,+BAAgCA,EAAgCO,6BAA8BA,IAAoC,gBAAoBxJ,GAA+Bx+L,OAAOiI,OAAO,CAAC,EAAG7G,IACxoB,GACD,CACCipM,EACAhvI,EACAwsI,EACAC,EACAC,EACAb,EACAI,EACAC,EACAC,EACAC,EACAO,IAEJ,OAAQ,gBAAoBrE,GAAwC,CAAEh9L,OAAQA,EAAQ1E,WAAYA,GAC9F,gBAAoBm/L,GAAuB,CAAEv3L,MAAOlD,EAAOoT,gBAAgBlQ,MAAOiwL,2BAA2B,EAAOnzL,OAAQoT,EAAiB42I,QAAUu6C,IAC/I7+F,E5BzGT,SAAmD1lG,EAAQqT,EAAiBnQ,GAG/E,MAAO,CACHkQ,gBAAiB,CACbe,mBAJkB,QAAwBnU,GAK1C4T,aAJY,QAAa5T,GAKzBqU,mBAAmB,QAA0BrU,GAC7CqT,kBACAnQ,SAIZ,C4B4FgCshM,CAA0CD,EAAWvkM,EAAOoT,gBAAgBC,gBAAiBrT,EAAOoT,gBAAgBlQ,OAAO,EAC5I6Q,cAAeA,EAAem/K,0BAA2BA,EAA2BpoK,OAAQA,EAAQ+xJ,wBAAyBinB,EAAsB/mB,yBAA0BsnB,EAAuBpnB,wBAAyBqnB,EAAsB5M,oBAAoB,EAAM1jL,cAAehU,EAAOoT,gBAAgBY,cAAeq/K,aAAa,IAAS,EGlI1VoR,GAA0B35K,IACnC,IAAIhsB,EACJ,MAAM4lM,EAAkB,OAAS55K,OAAOg8E,GAAA,EAAyCh8E,IAC3E65K,GAAcD,aAAyD,EAASA,EAAgBC,aAAeD,EAAgBC,aACrI,OAAqG,QAA7F7lM,EAAK6lM,aAA+C,EAASA,EAAWC,uBAAoC,IAAP9lM,OAAgB,EAASA,EAAG+lM,CAAC,EASjIC,GAAiC,CAC1C,QAAS,QACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,UACT,QAAS,UACT,UAAW,QACX,QAAS,W,2BC3Bb,MASaC,GAFY,CAACC,GAAU,8BAA4BA,EAAMC,2BAA2BD,EAAME,WAEvEC,CANb,CACfF,MAHoB,EAIpBC,MAHqB,MCAZE,GAAmB,EAAGvoG,SAAQmgC,WAAU95H,QAAO8D,WAAU21G,cAC1D,gBAAoB,MAAO,CAAEja,UAAW,KAAG,uBAAwB,wBAAyB,kBAAmBs6B,GAAY,+BAAgCngC,GAAU,YAAa8f,GAAY,aAClM,gBAAoB,MAAO,CAAEja,UAAW,kBACpC,gBAAoB,MAAO,CAAEA,UAAW,oCAAsCx/F,GAC9E,gBAAoB,MAAO,CAAEw/F,UAAW,mBAAqB17F,KCD5Dq+L,IAA0B,EAAA3qE,GAAA,KADE,EAAGx5G,aAAYlhB,SAAQupF,UAAY,gBAAoB,WAAgB,KAAM1+D,GAAmB7qB,GAAQ,SAAcupF,EAAKz+D,QAAS5J,MCAhKokL,GAA4B,EAAG99K,mBAAkBtG,aAAY27E,UAAS,EAAOmgC,YAAW,EAAMhuB,mBAAkB2N,cACjH,gBAAoByoF,GAAkB,CAAEliM,MAAO8rG,GAAoB,gBAAoB,KAAkB,CAAEn2G,GAAI,6BAA+BgkG,OAAQA,EAAQmgC,SAAUA,EAAUrgB,SAAUA,GAChM,gBAAoB,OAAQ,CAAEja,UAAW,iBACrC,gBAAoB2iG,GAAyB,CAAErlM,OAAQwnB,EAAkBtG,WAAYA,MCG3FqkL,IAAa,QAAc,MACpB,GAAYzmM,IACrB,IAAMgzF,WAAY2Q,EAAQ,UAAEC,EAAS,SAAE17F,GAAalI,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,aAAc,YAAa,aAC3G,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,SAAUzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,eAAgB,sBAAuB,CAC3F,cAAeD,EACf,+BAAgCA,GACjCC,IAAc8iG,GACjBx+L,EACAy7F,EAAY,gBAAoB8iG,GAAY,CAAEziM,MAAO,IACjD,gBAAoBg2L,GAAuB,CAAEp2F,UAAW,kDAAsD,MAAO,EChBxH+iG,GAAmChrM,IAC5C,MAAM5B,GAAM4B,EAAMkiH,UAAYliH,EAAMoJ,YAC9B0d,GAAS,GAAG/B,GAAqB/kB,EAAMoJ,wBAAwBhL,GAC/D0oB,GAASQ,gBAAgBlpB,GAC/B,OAAQ,gBAAoB,KAAkB,CAAEA,GAAIA,IAAM,IAAImO,IAAa,gBAAoB,OAAQ,CAAE07F,UAAW,oBAAsB17F,IAAW,ECHnJ,GAAc,CAAC,CAAE0/F,MAAO,UACjBg/F,GAA6B,EAAGhhM,QAAO8+G,WAAU7G,WAAU94G,iBAAoB,gBAAoB,MAAO,CAAE6+F,UAAW,2CAChI,gBAAoBuD,GAAA,GAAoB,KACpC,gBAAoB,QAAS,CAAEvD,UAAW,KAAG,2BAA4B,uBAAwB,CACzF,mCAAoCia,EACpC,mCAAoCA,KAExC,gBAAoB,QAAS,CAAEt9G,KAAM,WAAYqjG,UAAW,iBAAkB4gB,QAAS5+G,EAAO8+G,SAAWvqH,GAAMuqH,EAASvqH,EAAEsgD,OAAO+pE,SAAU3G,SAAUA,IACrJ,IACA,gBAAoB8oF,GAAiC,CAAE5hM,YAAaA,EAAa84G,SAAUA,KAC/FA,EAAY,gBAAoBnW,GAAA,GAAQ,CAAEC,YAAa,IACnD,gBAAoB,KAAkB,CAAE5tG,GAAI,8CAAkD,OCb7F8sM,GAAoB7mM,IAC7B,IAAI,UAAE4jG,EAAS,SAAE17F,GAAalI,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,YAAa,aACvE,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,uBAAwBA,IAAc8iG,GAAYx+L,EAAU,ECDpH4+L,GAAoB,EAAGljG,YAAWz7E,eAAc4+K,uBAAsBC,kCAAoC,gBAAoB,GAAU,CAAEh0G,WAAY7qE,EAAa5T,kBAAoBwyL,EAAqBxyL,gBAAiBm3F,QAAS,IAAMs7F,EAA6B7+K,GAAey7E,UAAW,KAAG,aAAcA,IAAcz7E,EAAanR,KAAOmR,EAAanR,KAAO,gBAAoB,KAAkB,CAAEjd,GAAI,2BCDtZktM,GAAyBjnM,IAClC,IAAI,SAAEkI,EAAQ,SAAEg2H,EAAQ,UAAEt6B,GAAc5jG,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,WAAY,WAAY,cAC5F,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAGA,EAAW,+BAAgCs6B,GAAY,wCAA0CwoE,GAC9J,gBAAoB,MAAO,CAAE9iG,UAAW,qCAAuC17F,GAAW,ECArFg/L,GAA6BthM,GAAU,KAAOA,GAAO4b,OAAOb,ICE5DwmL,IAAuB,EAAAvrE,GAAA,KALGjgI,IACnC,MAAM,WAAEymB,EAAU,QAAEglL,EAAO,KAAE38G,GAAS9uF,EACtC,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,6DAC5C,gBAAoB,KAAkB,CAAE7pG,GAAIqtM,EAASjlM,OAAQ,CAAEqf,OAAQY,GAAcujL,GAAuBl7G,EAAKz+D,WAAc,ICFhI,MAAMq7K,WAAsC,YAC/C3sM,cACIitC,SAASC,WACT/sC,KAAKmsJ,SAAW,cAChBnsJ,KAAKysM,kBAAqBzlM,IAClBhH,KAAKmsJ,SAASl+I,SACdjO,KAAKmsJ,SAASl+I,QAAQjH,IAC1B,EAEJhH,KAAKy0H,KAAO,IAAMz0H,KAAKysM,kBAAkB,QACzCzsM,KAAK21H,MAAQ,IAAM31H,KAAKysM,kBAAkB,QAC9C,CACI1hM,YACA,OAAI/K,KAAKmsJ,SAASl+I,QACPjO,KAAKmsJ,SAASl+I,QAAQlD,MAE1B,EACX,CACA4iG,SACI,MAAM,UAAE5E,GAAc/oG,KAAKc,MAC3B,OAAQ,gBAAoB,OAAQ,CAAEioG,UAAW,KAAGA,IAChD,gBAAoB,OAAQ,CAAEA,UAAW,qBACzC,gBAAoB,QAASrpG,OAAOiI,OAAO,CAAC,EAAG3H,KAAKc,MAAO,CAAEyC,IAAKvD,KAAKmsJ,SAAUpjD,UAAW,gDACpG,EChBJ,SAAS,GAAWzhF,EAAMC,GACtB,OAAO,KAAOD,EAAMC,EACxB,CAwBA,MAAMmlL,GAA0B,cAAiB,CAAC5rM,EAAOyC,KACrD,MAAM,gBAAEopM,EAAe,MAAE5hM,EAAK,SAAE8+G,EAAQ,WAAEtiG,EAAU,eAAEqlL,EAAc,SAAEvpE,EAAQ,cAAEp0G,EAAa,UAAEylG,EAAS,UAAE3rB,EAAS,MAAEr7F,GAAQ,GAAW5M,GAEjI+rM,EAAYC,IAAiB,IAAAhiH,UHjCH,CAAC//E,GAAU,KAAOA,GAAO4b,OAAOX,IGiCpB+mL,CAAsBhiM,KAC5DyhJ,EAAYwgD,IAAiB,IAAAliH,UAAS,GAAW//E,EAAOwc,KAC/D,IAAAvZ,YAAU,KACNg/L,EAAc,GAAWjiM,EAAOwc,GAAY,GAC7C,CAACxc,EAAOwc,IAEX,MAQMuoI,EAAgBxD,IAClBziC,EATe,CAACyiC,IAChB,GAAIr9H,GAAiBq9H,EAAc,CAC/B,MAAM2gD,EAAeliM,QAAqCA,EAAQ,KAAO8hM,EAAY7mL,IAAayJ,SAClG68H,EAAa3H,SAASsoD,EAAap9K,YACnCy8H,EAAa1H,WAAWqoD,EAAan9K,aACzC,CACA,OAAOw8H,CAAY,EAGV4gD,CAAW5gD,GAAc,EAiBtC,OAAQ,gBAAoB,MAAO,CAAEvjD,UAAW,KAAGA,EAAW95E,GAAiB,gBAC3Eo0G,EAAY,gBAAoBmpE,GAA+B,CAAE9mM,KAAM,OAAQqjG,UAAW,KAAG,2BAA4B,6BAA8B,oCAAqCr7F,GAAS,oCAAqCrK,YAAaspM,EAAiB9iF,SAAW/zG,GAAUg6I,EAAaroI,GAAgC3R,EAAM8pC,OAAO70C,QAASA,MAAOshM,GAA0BthM,KAAc,gBAAoB,MAAO,CAAEg+F,UAAW,KAAG,6BAA8Br7F,GAAS,qCAC7d,gBAAoB,OAAQ,KACxB,gBAAoB,OAAQ,CAAEq7F,UAAW,qBACzC,gBAAoB,QAAS,CAAE2rB,UAAWA,EAAWnxH,IAAKA,EAAKF,YAAaspM,EAAiB9iF,SAAW/zG,GAnB1F,CAAC/K,IACvBiiM,EAAcjiM,GACd,MAAMyiJ,EA7Cd,SAAmBhG,EAAKjgI,GACpB,IACI,MAAMimI,EAAa,KAAMhG,EAAKjgI,EAAY,IAAII,MAU9C,OAAI,KAAQ6lI,IACRA,EAAWC,eAAiB,KAC5BjG,IAAQ,GAAWgG,EAAYjmI,GACxBimI,OAEX,CACJ,CACA,MAAOroJ,GACH,MACJ,CACJ,CAuB2B,CAAU4F,EAAOwc,GACpCuoI,EAAatC,EAAW,EAgBkG2/C,CAAkBr3L,EAAM8pC,OAAO70C,OAAQ8lG,QAAS+7F,EAAgBrpD,QAASqpD,EAAgB7hM,MAAOyhJ,EAAYzjD,UAAW,iDACjP95E,EAAiB,gBAAoB,OAAQ,CAAE85E,UAAW,KAAG,6BAA8B,kCAAmC,iCAAkCr7F,GAAS,qCACrK,gBAAoB,OAAQ,CAAEq7F,UAAW,kBACzC,gBAAoB,QAAS,CAAErjG,KAAM,OAAQqjG,UAAW,aAAc8gB,SAAW/zG,GAjBpE,CAACguC,IAClB,MAAMx8B,EAAOvc,QAAqCA,EAAQ,IAAI4c,KACxD2lF,EAAO,KAAOxpD,EAAO99B,IACvBsnF,EAAK8/F,YACL9lL,EAAKq9H,SAASr3C,EAAKi3C,SACnBj9H,EAAKs9H,WAAWt3C,EAAKk3C,WACrBsoD,EAAchpJ,IAElB+lE,EAASviG,EAAK,EASiFqoI,CAAa75I,EAAM8pC,OAAO70C,OAAQA,MAAO8hM,KAAkB,KAAM,IAExKH,GAAwBz/L,YAAc,0BACtC,MAAMogM,IAAwB,EAAAtsE,GAAA,IAAW2rE,GAAyB,CAAE1uF,YAAY,IAChFqvF,GAAsBpgM,YAAc,iBChEpC,MAAM,GAAmB,CACrB,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,UAAW,KACX,QAAS,MAEP,GAAe,CAAC,CAAE8/F,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KAI3D,SAAS,GAAiBvgD,GACtB,OAAQA,GACJ,IAAK,SACD,OAAO,EACX,IAAK,SACD,OAAO,EACX,QACI,MAAM,IAAIltD,MAAM,sBAAsBktD,KAElD,CACA,MAAM6gJ,WAAiC,YACnCztM,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKutM,yBAA2B,cAChCvtM,KAAKwtM,uBAAyB,cAC9BxtM,KAAKytM,yBAA2B,cAChCztM,KAAK0tM,kBAAoB,CAACC,EAAQrhD,KAC9B,IAAIshD,EACAC,EAE4B,QAA5B7tM,KAAKkZ,MAAM40L,eACXF,EAAiB5tM,KAAK+tM,eAAezhD,EAActsJ,KAAKkZ,MAAM80L,gBAC9DH,EAAe7tM,KAAKkZ,MAAM+0L,eAG1BL,EAAiB5tM,KAAKkZ,MAAM80L,eAC5BH,EAAe7tM,KAAK+tM,eAAezhD,EAActsJ,KAAKkZ,MAAM+0L,eAEhEjuM,KAAK+sF,SAAS,CACVihH,eAAgBJ,EAChBK,aAAcJ,EACdK,cAAe,CAAE9lM,KAAMwlM,EAAgBtlM,GAAIulM,GAC3C3qG,QAAQ,IACT,KACCljG,KAAKmuM,YAAYP,EAAgBC,EAAa,GAChD,EAEN7tM,KAAKmuM,YAAc,CAAC/lM,EAAME,KACtBtI,KAAKc,MAAMstM,cAAc,CAAEhmM,OAAME,MAAK,EAE1CtI,KAAKquM,mBAAqB,KACtBruM,KAAK+sF,SAAS,CACV+gH,cAAe,OACf5qG,QAAQ,EACRqpD,UAAWvsJ,KAAKc,MAAMuqM,MAAMjjM,MAC9B,EAENpI,KAAKsuM,iBAAmB,KACpBtuM,KAAK+sF,SAAS,CACV+gH,cAAe,KACf5qG,QAAQ,EACRqpD,UAAWvsJ,KAAKc,MAAMuqM,MAAM/iM,IAC9B,EAENtI,KAAKuuM,iBAAoBjnL,IACjBA,GACAtnB,KAAK+sF,SAAS,CAAEihH,eAAgB1mL,IAEpCtnB,KAAK+sF,SAAS,CACVmhH,cAAe,CAAE9lM,KAAMkf,EAAMhf,GAAItI,KAAKkZ,MAAMg1L,cAAc5lM,IAC1DikJ,UAAWjlI,IACZ,KACCtnB,KAAKmuM,YAAY7mL,EAAMtnB,KAAKkZ,MAAMg1L,cAAc5lM,GAAG,GACrD,EAENtI,KAAKwuM,eAAkBlnL,IACfA,GACAtnB,KAAK+sF,SAAS,CAAEkhH,aAAc3mL,IAElCtnB,KAAK+sF,SAAS,CACVmhH,cAAe,CAAE9lM,KAAMpI,KAAKkZ,MAAMg1L,cAAc9lM,KAAME,GAAIgf,GAC1DilI,UAAWjlI,IACZ,KACCtnB,KAAKmuM,YAAYnuM,KAAKkZ,MAAMg1L,cAAc9lM,KAAMkf,EAAK,GACvD,EAENtnB,KAAKkZ,MAAQ,CACTgqF,QAAQ,EACR8qG,eAAgBhuM,KAAKc,MAAMuqM,MAAMjjM,KACjC6lM,aAAcjuM,KAAKc,MAAMuqM,MAAM/iM,GAC/B4lM,cAAe,CAAE9lM,KAAMpI,KAAKc,MAAMuqM,MAAMjjM,KAAME,GAAItI,KAAKc,MAAMuqM,MAAM/iM,IACnEikJ,UAAW,KACXuhD,cAAe,MAEnB9tM,KAAK0sJ,mBAAqB1sJ,KAAK0sJ,mBAAmBvuG,KAAKn+C,MACvDA,KAAK8sJ,mBAAqB9sJ,KAAK8sJ,mBAAmB3uG,KAAKn+C,MACvDA,KAAK0sJ,mBAAqB1sJ,KAAK0sJ,mBAAmBvuG,KAAKn+C,MACvDA,KAAK0tM,kBAAoB1tM,KAAK0tM,kBAAkBvvJ,KAAKn+C,MACrDA,KAAKquM,mBAAqBruM,KAAKquM,mBAAmBlwJ,KAAKn+C,MACvDA,KAAKsuM,iBAAmBtuM,KAAKsuM,iBAAiBnwJ,KAAKn+C,MACnDA,KAAKuuM,iBAAmBvuM,KAAKuuM,iBAAiBpwJ,KAAKn+C,MACnDA,KAAKwuM,eAAiBxuM,KAAKwuM,eAAerwJ,KAAKn+C,MAC/CA,KAAK00H,UAAY10H,KAAK00H,UAAUv2E,KAAKn+C,KACzC,CACA4qH,oBACIhhB,SAAS2rB,iBAAiB,YAAav1H,KAAK8sJ,mBAChD,CACA32B,uBACIvsB,SAASwsB,oBAAoB,YAAap2H,KAAK8sJ,mBACnD,CACAn/C,SACI,MAAM,WAAEpmF,EAAY8jL,OAAO,KAAEjjM,EAAI,GAAEE,GAAI,eAAEmmM,EAAc,KAAE7+G,EAAI,SAAEyzC,EAAU91G,QAAUnlB,KAAMsmM,EAAWpmM,GAAIqmM,GAAY,CAAEvmM,UAAMrD,EAAWuD,QAAIvD,GAAW,cAAEkqB,EAAa,UAAEw9B,EAAY,SAAQ,wBAAEmiJ,GAA0B,GAAW5uM,KAAKc,MAxG/O,IAAuBqwB,EAgHf,MAAM09K,GJ5IsBpjF,EIqIE,CAC1BtjE,KAAM,QACNmmG,iBAAiB,EACjBwgD,UAAW,CAAElkE,MAAOxiI,EAAMyiG,IAAKviG,GAC/BskI,SAAU,CAAExkI,OAAME,MAClB6oB,QA9GWA,EA8GWy+D,EAAKz+D,OA7G5B,GAAiBA,MJ7BsB49K,EI4IoCN,GJ7ItD,EAAChjF,EAAcsjF,KAAc,OAACrvM,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG8jH,GAAesjF,IADnGC,EAC8HvjF,EAAaqjF,UADzHG,EACoIF,EAAUD,UAD5HE,EAAmB,CAAEF,UAAWpvM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGqnM,GAAmBC,SAAmBlqM,IAA3I,IAACiqM,EAAkBC,CAC0J,EACvHC,CAAwBzjF,EAAcsjF,GAAatjF,GAA7F,IAACA,EAAcsjF,EI6I1C,MAAMI,EAAiB,CACnBr5E,KAAM,qDAAqD91H,KAAKkZ,MAAM40L,iBAEpEsB,EAAc,gBAAoB,MAAO,CAAErmG,UAAW,+BAAgCxlG,IAAKvD,KAAKytM,0BAClG,gBAAoB,MAAW/tM,OAAOiI,OAAO,CAAC,EAAGknM,EAA4B,CAAEh5F,SAAU71G,KAAK0tM,kBAAmB9gE,SAAU5sI,KAAKkZ,MAAMg1L,cAAejmL,MAAOjoB,KAAKkZ,MAAMqzI,UAAW10C,WAAYs3F,EAAgB5gD,cAAevuJ,KAAK0sJ,mBAAoB8B,aAAc,GAAiB/hG,OACnR4iJ,EAAqB,gBAAoBhjE,GAAA,EAAS,CAAE/mB,QAAS,yBAAyBr2F,EAAgBjvB,KAAKkZ,MAAM40L,cAAgB,SAAUhhG,YAAa,GAAcsY,qBAAqB,EAAMqJ,kBAAkB,EAAMpJ,qBAAqB,GAAQ+pF,GACtPE,EAAa,gBAAoBjC,GAAuB,CAAE34E,UAAW10H,KAAK00H,UAAWnxH,IAAKvD,KAAKutM,yBAA0BZ,gBAAiB/8G,EAAKj/D,cAAc,CAAEzxB,GAAI,iBAAmB2qH,SAAU7pH,KAAKuuM,iBAAkBxjM,MAAO/K,KAAKkZ,MAAM80L,eAAgBzmL,WAAYA,EAAY87G,SAAUA,EAAUupE,eAAgB5sM,KAAKquM,mBAAoBp/K,cAAeA,EAAe85E,UAAW,KAAG,2BAA4B,6BAA8Br7F,WAA4B,IAAdghM,IAClca,EAAW,gBAAoBlC,GAAuB,CAAE34E,UAAW10H,KAAK00H,UAAWnxH,IAAKvD,KAAKwtM,uBAAwBb,gBAAiB/8G,EAAKj/D,cAAc,CAAEzxB,GAAI,eAAiB2qH,SAAU7pH,KAAKwuM,eAAgBzjM,MAAO/K,KAAKkZ,MAAM+0L,aAAc1mL,WAAYA,EAAY87G,SAAUA,EAAUupE,eAAgB5sM,KAAKsuM,iBAAkBr/K,cAAeA,EAAe85E,UAAW,KAAG,yBAA0B,2BAA4B75E,YAAa/I,GAAczY,WAA0B,IAAZihM,IAC7ca,EAAsBZ,EAA0BS,EAAoBD,EACpEK,EAAyD,SAA7BzvM,KAAKkZ,MAAM40L,eAA4B9tM,KAAKkZ,MAAMgqF,OAC9EwsG,EAAuD,OAA7B1vM,KAAKkZ,MAAM40L,eAA0B9tM,KAAKkZ,MAAMgqF,OAChF,OAAQ,gBAAoB,WAAgB,KACxCj0E,EAAiB,gBAAoB,MAAO,CAAE85E,UAAW,qDACrD,gBAAoB,QAAS,KAAMnZ,EAAKj/D,cAAc,CAAEzxB,GAAI,kBAC5DowM,EACAG,EAA4BD,EAAsB,KAClD,gBAAoB,QAAS,KAAM5/G,EAAKj/D,cAAc,CAAEzxB,GAAI,gBAC5DqwM,EACAG,EAA0BF,EAAsB,MAAU,gBAAoB,WAAgB,KAC9F,gBAAoB,MAAO,CAAEzmG,UAAW,wDACpCumG,EACA,gBAAoB,OAAQ,CAAEvmG,UAAW,6BAA+B,KACxEwmG,GACJvvM,KAAKkZ,MAAMgqF,OAASssG,EAAsB,MAC9Cd,GAAaC,EAAW,gBAAoBrC,GAAsB,CAAE/kL,WAAYA,EAAYglL,QAExFmC,GAAaC,IAAc,KACvC,CACAj6E,UAAUp1H,GACQ,WAAVA,EAAE0H,KAA8B,QAAV1H,EAAE0H,KACxBhH,KAAK+sF,SAAS,CAAEmW,QAAQ,GAEhC,CACAwpD,mBAAmBzkI,GACfjoB,KAAK+sF,SAAS,CAAEw/D,UAAWtkI,GAC/B,CAGA8lL,eAAezmL,EAAMgmF,GACjB,MAAM9kG,EAAS,IAAImf,KAAKL,GAGxB,OAFA9e,EAAOm8I,SAASr3C,EAAKz9E,YACrBrnB,EAAOo8I,WAAWt3C,EAAKx9E,cAChBtnB,CACX,CACAskJ,mBAAmBh3I,GACX9V,KAAKytM,yBAAyBx/L,UAC7BjO,KAAKytM,yBAAyBx/L,QAAQqoH,SAASxgH,EAAM8pC,SACtD5/C,KAAKutM,2BACJvtM,KAAKutM,yBAAyBt/L,QAAQqoH,SAASxgH,EAAM8pC,SACtD5/C,KAAKwtM,yBACJxtM,KAAKwtM,uBAAuBv/L,QAAQqoH,SAASxgH,EAAM8pC,SACpD5/C,KAAK+sF,SAAS,CAAEmW,QAAQ,GAEhC,EAEG,MAAMysG,IAAkB,EAAA5uE,GAAA,IAAWusE,IC3L7BsC,GAA6B,CAAC7kM,EAAO8kM,GAAgC,KAC9E,MAAMC,EAAoB/kM,EAAM3C,MAAQ2C,EAAM3C,KAAKxE,MAAM,KAAK6G,OAAS,EACjEslM,EAAkBhlM,EAAMzC,IAAMyC,EAAMzC,GAAG1E,MAAM,KAAK6G,OAAS,EAC3DrC,EAAO2C,GAAS0c,GAAgC1c,EAAM3C,MACtDE,EAAKyC,GAAS0c,GAAgC1c,EAAMzC,IAS1D,OARIF,IAAS0nM,GAAqBD,IAC9BznM,EAAKu8I,SAAS,GACdv8I,EAAKw8I,WAAW,IAEhBt8I,IAAOynM,GAAmBF,IAC1BvnM,EAAGq8I,SAAS,IACZr8I,EAAGs8I,WAAW,KAEX,CAAEx8I,OAAME,KAAI,ECvBjBmmM,GAAiB,CACnBtmJ,KAAM,QACNqmG,aAAc,GAKX,MAAMwhD,WAA+B,YACxCnwM,cACIitC,SAASC,WACT/sC,KAAKiwM,kBAAqB5E,IACtB,MAAM,qBAAEa,EAAoB,cAAEj9K,GAAkBjvB,KAAKc,MACrDd,KAAKc,MAAMqrM,6BDbmB,EAACd,EAAO3xL,EAAiBm2L,KAC/D,MAAMK,EAAgBL,EAAgC9pL,GAAyBD,GAC/E,MAAO,CACH1d,KAAMif,GAAgCgkL,EAAMjjM,KAAM8nM,GAClD5nM,GAAI+e,GAAgCgkL,EAAM/iM,GAAI4nM,GAC9Cx2L,kBACAhU,KAAM,eACNyW,KAAM,GACNoK,SAAS,EACZ,ECI+C4pL,CAA2B9E,EAAOa,EAAqBxyL,gBAAiBuV,GAAe,CAEvI,CACA0+E,SACI,MAAM,WAAEpmF,EAAU,SAAE87G,EAAQ,qBAAE6oE,EAAoB,OAAE3+K,EAAM,cAAE0B,EAAa,UAAEw9B,EAAS,wBAAEmiJ,GAA6B5uM,KAAKc,MACxH,OAAQ,gBAAoB6uM,GAAiB,CAAEpoL,WAAYA,EAAY6mL,cAAepuM,KAAKiwM,kBAAmB5E,MAAOuE,GAA2B1D,EAAsBj9K,GAAgB1B,OAAQA,EAAQ81G,SAAUA,EAAUorE,eAAgBA,GAAgBx/K,cAAeA,EAAew9B,UAAWA,EAAWmiJ,wBAAyBA,GAC3U,ECjBG,MAAMwB,GAAmBjrM,IAC5B,IAAI,SAAEkI,EAAQ,UAAE07F,EAAS,kBAAE0pD,GAAsBttJ,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,WAAY,YAAa,sBACtG,OAAQ,gBAAoB,OAAQzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,uBAAwBA,IAAc8iG,GACpG,gBAAoBv/F,GAAA,GAAoB,KACpC,gBAAoB,OAAQ,CAAEvD,UAAW,sDACzC,gBAAoB8D,GAAA,GAAQ,CAAEC,YAAa2lD,GAAqBplJ,IAAY,ECN3EgjM,GAAelrM,IACxB,IAAI,UAAE4jG,EAAS,SAAE17F,GAAalI,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,YAAa,aACvE,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,6BAA8BA,IAAc8iG,GAAYx+L,EAAU,EAE1HijM,GAAOnrM,IAChB,IAAI,SAAEynI,EAAQ,UAAE7jC,EAAS,SAAE17F,GAAalI,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,WAAY,YAAa,aAC7F,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG6jC,GAAY,YAAa,SAAU7jC,IAAc8iG,GAAYx+L,EAAU,ECHtIkjM,GAAoB,CACtB,gBAAiB,EACjB,mBAAoB,EACpB,iBAAkB,EAClB,mBAAoB,EACpB,gBAAiB,EACjB,gBAAiB,EACjB,kBAAmB,GAGVC,GAAkB,EAAGt+K,yBAAwBu+K,8BAA6BC,0BAA2B,OAAC,gBAAoBL,GAAa,CAAEtnG,UAAW,qFADtItuE,EAC8OvI,EAD5N,KAAOuI,GAAgBvwB,GAAgBqmM,GAAkBrmM,MAC2LnL,KAAKmL,IAClS,MAAMumB,EAAkB5K,GAAqB3b,GAC7C,OAAQ,gBAAoBomM,GAAK,CAAEtpM,IAAKkD,EAAa0iI,SAAU1iI,IAAgBwmM,EAAqB7/F,QAAS,IAAM4/F,EAA4BvmM,GAAc6+F,UAAW,iBAAiBt4E,KACrL,gBAAoB,KAAkB,CAAEvxB,GAAI0oB,GAAS6I,GAAiBvxB,KAAO,KAJ3D,IAACu7B,CAKvB,E,gBCrBG,MAAMk2K,GAAgB9qM,GACuC,YAA3DA,aAAmC,EAASA,EAAKH,OAAsBG,EAAK2/H,MACtE3/H,EAAK2/H,MAET,GAEE,GAAsBq8C,GAAgBA,EAAYx7K,QAAQR,GAAuB,WAAdA,EAAKH,O,gBCF9E,MAAMkrM,GAAgBzrM,IACzB,IAAI,UAAE4pK,EAAS,WAAE52E,EAAU,UAAE4Q,EAAS,SAAE17F,GAAalI,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,YAAa,aAAc,YAAa,aACzH,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,eAAgB,mBAAoB5Q,GAAc,+BAAgC42E,GAAa,oDAAqDhmE,IAAc8iG,GAAYx+L,EAAU,ECFhPwjM,GAAiB1rM,IAC1B,IAAI,SAAEkI,EAAQ,UAAE07F,GAAc5jG,EAAI2rM,GAAa,SAAO3rM,EAAI,CAAC,WAAY,cACvE,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,qDAAsDA,IAAc+nG,GAAazjM,EAAU,ECFnJ0jM,GAAa5rM,IACtB,IAAI,UAAE4jG,GAAc5jG,EAAI0mM,GAAY,SAAO1mM,EAAI,CAAC,cAChD,OAAQ,gBAAoB,KAAMzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,uBAAwBA,IAAc8iG,GAAY,ECDzGmF,GAAmB7rM,IAC5B,IAAI,UAAE4jG,GAAc5jG,EAAI2rM,GAAa,SAAO3rM,EAAI,CAAC,cACjD,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,sBAAuBA,IAAc+nG,GAClG,gBAAoBC,GAAW,MAAO,EC4BxCE,GAAsB,CACxB5iL,OAAQ,GACR6iL,QAAS,GACTxjM,MAAO,GACPyjM,UAAW,GAETC,GAAiB9rM,GAAW7B,IAC9B,MAAM6jG,EAAWhiG,EAAM7B,GAAOiC,KAC9B,OAAOurM,GAAoB3pG,EAAS,EAE3B+pG,GAAkBhmM,GAAUtC,KAAKuhH,MAAMj/G,EAAMZ,OAAS,GACnE,MAAM6mM,WAA8B,YAChCzxM,cACIitC,SAASC,WACT/sC,KAAKuxM,QAAU,cACfvxM,KAAKwxM,cAAgB,CAAC/tM,EAAQzD,KAAKc,MAAM2wM,oBACrC,GAAIzxM,KAAKuxM,QAAQtjM,QAAS,CACtB,MAAM,MAAE3I,GAAUtF,KAAKc,MAGjB4wM,EAFoB,GAAmBpsM,GACf,OAAV7B,EAAiBA,EAAQ4tM,GAAe,GAAmB/rM,KAGzEqsM,EAAkBrsM,EAAMy2C,QAAQ21J,GACtC1xM,KAAKuxM,QAAQtjM,QAAQ4gI,aAAa8iE,EAAiB,SACvD,GAEJ3xM,KAAK4xM,YAAc,KACV5xM,KAAKuxM,QAAQtjM,SAGlBjO,KAAKuxM,QAAQtjM,QAAQ4jM,SAAS,EAAE,EAEpC7xM,KAAKgrH,mBAAsB8mF,IACvB,MAAM,iBAAEL,EAAgB,MAAEnsM,EAAK,oBAAEysM,EAAmB,WAAEvlD,GAAexsJ,KAAKc,MACpEkxM,EAA8B,GAAmBF,EAAUxsM,OAAOmF,OAAS,EAC3EwnM,EAA0B,GAAmB3sM,GAAOmF,OAAS,EAK7DynM,EAJwD,IAA/BJ,EAAUL,kBAGhBA,IAAqBQ,EAExCE,EAJuBL,EAAUL,mBAAqBO,GACZ,IAArBP,EAIrBW,EAA0C,KAAtB5lD,EAAW9tE,OAC/B2zH,EAAoD,KAAhCP,EAAUtlD,WAAW9tE,QAAiB0zH,EAC1DE,EAAsBR,EAAUtlD,WAAW9tE,SAAW8tE,EAAW9tE,OACjE6zH,EAAclB,GAAe,GAAmB/rM,IAClD+sM,EAEAN,EAAoBQ,GAEfD,GAELP,EAAoB,GAExB,MAAMS,EAA6C,IAA5BxyM,KAAKc,MAAMwE,MAAMmF,OACpC4nM,EAGAryM,KAAKwxM,cAAce,GAEdL,GAAyBC,EAC9BnyM,KAAKwxM,gBAEAgB,GAGLxyM,KAAK4xM,aACT,CAER,CACAjkG,SACI,MAAM,MAAEroG,EAAK,aAAEu1H,EAAY,iBAAE42E,EAAgB,aAAEgB,EAAY,aAAEC,EAAY,UAAE3pG,EAAS,gBAAE4pG,EAAe,kBAAEC,GAAuB5yM,KAAKc,MAC7HywK,EAjGO,GAAGjsK,QAAOu1H,eAAc42E,mBAAkBgB,eAAcE,qBAClE,UAA6B,MAAElvM,EAAK,MAAE0lG,IACzC,MAAM0pG,EAAoB,GAAmBvtM,GACvCO,EAAOP,EAAM7B,GACnB,MAAkB,WAAdoC,EAAKH,KACG,gBAAoBkrM,GAAclxM,OAAOiI,OAAO,CAAC,EAAG8qM,EAAa,CACrEzrM,IAAK,GAAGnB,EAAKH,QAAQG,EAAKkF,QAC1BlF,OACApC,MAAOovM,EAAkB92J,QAAQl2C,GACjCsyF,cAAY0iC,IAAgBh1H,IAAOg1H,EAAa9vH,QAAUlF,EAAKkF,MAC/Dg+F,UAAW4pG,IACX,CAAE5jC,aAAW8jC,EAAkBpB,KAAqB5rM,IAC9CgtM,EAAkBpB,GAAkB1mM,QAAUlF,EAAKkF,MAC5Co+F,MAAOA,IAAUtjG,EAAK2/H,OAEpB,YAAd3/H,EAAKH,MAAoC,UAAdG,EAAKH,KAE7B,gBAAoBmrM,GAAe,CAAE7pM,IAAK,GAAGnB,EAAKH,QAAQG,EAAK2/H,QAASr8B,MAAOA,GAAStjG,EAAK2/H,OAElF,cAAd3/H,EAAKH,KACH,gBAAoBsrM,GAAiB,CAAEhqM,IAAK,GAAGnB,EAAKH,QAAQjC,IAAS0lG,MAAOA,IAEhF,IACX,EA0EmB2pG,CAAa,CACxBxtM,QACAu1H,eACA42E,mBACAgB,eACAE,oBAEEI,EAAkB1B,GAAe,GAAmB/rM,IAEpD0tM,EADiB,KAAMjqM,KAAKuZ,IAAIywL,EAAkBH,EAAmB,GAAI7pM,KAAKC,IAAI+pM,EAAkBH,EAAoB,EAAGttM,EAAMmF,SACrGpB,QAAO,CAAC4pM,EAAaphM,IAAcohM,EAAc7B,GAAc9rM,EAAd8rM,CAAqBv/L,IAAY,GACpH,OAAQ,gBAAoB,MAAOnS,OAAOiI,OAAO,CAAC,EAAG+qM,EAAa,CAAE3pG,UAAW,KAAG,yBAA0BA,MACxG,gBAAoB,MAAO,CAAEA,UAAW,gCACpC,gBAAoB,MAAM,CAAEA,UAAW,OAAQxlG,IAAKvD,KAAKuxM,QAAS2B,UAAW5tM,EAAMmF,OAAQkhC,SAAUylK,GAAc9rM,GAAQ6c,OAAQ6wL,EAAY9wL,MAAO,OAAQixL,cAAe,GAAIC,kBAAmBnC,GAAoB5iL,OAIpN86E,MAAwB,IAAjB7jG,EAAMmF,OAAe,CAAE0tI,SAAU,eAAapzI,GAAawsK,IAClF,CACA3mD,oBACI,GAAK5qH,KAAKc,MAAM0rJ,WAMZxsJ,KAAKwxM,oBANmB,CACxB,MAAMe,EAAclB,GAAe,GAAmBrxM,KAAKc,MAAMwE,QACjEtF,KAAKc,MAAMixM,oBAAoBQ,GAC/BvyM,KAAKwxM,cAAce,EACvB,CAIJ,EAGJjB,GAAsB7lF,aAAe,CACjCoP,aAAc,KACd+3E,kBAnIoC,GCJjC,MAEMptD,GAAM,gBAKb6tD,GAAiB,CACnBC,cAAe,SAEbC,GAAkB,CACpBD,cAAe,UAEbE,GAA0B,CAC5B,kBAAU,IACV,gBAAQ,GACR,CAAChuD,IAAM,IACP,mBAAW,IACX,iBAAS,GACT,mBAAW,GACX,gBAAQ,IA2BNiuD,GAAY,CAACppM,EAAQH,EAAa0lF,KACpC,MAAM8jH,EAAW7tL,GAAqB3b,GAChCypM,EAAatpM,EAAS,EAAI,UAAuB,IAAXA,EAAe,QAAU,SACrE,MAAO,CACH3E,KAAM,SACNqF,MAAOV,EACPm7H,MAAO51C,EAAKj/D,cAAc/I,GAAS,GAAG8rL,KAAYC,KAAe,CAAEtpM,SAAQumB,EAAG7nB,KAAK8nB,IAAIxmB,KAC1F,EAECupM,GAAuB,CAACC,EAAS3pM,EAAa0lF,IAASikH,EAAQ90M,KAAKsL,GAAWopM,GAAUppM,EAAQH,EAAa0lF,KAsC9GkkH,GAAqB,CAACC,EAAc1pM,EAAQH,EAAa0lF,KAC3D,MAAMozC,EAAe+wE,EAAa32H,cAC5B94E,EARiB,EAAC+F,EAAQH,EAAa0lF,KAC7C,MAAMokH,EAAc,EAAE,EAAG,EAAG,GACtBC,EAAYlrM,KAAK8nB,IAAIxmB,GACrBwpM,OAAqB9uM,IAAXsF,GAAwB4pM,EAAY,EAAI,EAAEA,KAAcD,EAAaC,GAAaD,EAClG,OAAOJ,GAAqBC,EAAS3pM,EAAa0lF,EAAK,EAIvCskH,CAAmB7pM,EAAQH,EAAa0lF,GAAMvpF,QAAQgoB,GAAWA,EAAOm3G,MAAMpoD,cAAchuD,SAAS4zG,KACrH,OAAO1+H,EAAQmG,OAAS,EAAInG,EAtBN,CAACsrF,GAAS,CAChC,CACIlqF,KAAM,QACN8/H,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,oCAmBEi1M,CAAkBvkH,EAAK,EAMpDwkH,GAAsC,CAAC9gL,EAASvoB,IAClD,GAAmBuoB,GAAS/sB,MAAM8nB,GAAWA,EAAOtjB,QAAUA,IAElE,SAASspM,GAA2BvwJ,EAAQ,GAAI55C,EAAcs7I,GAAK51D,GACtE,MAAMmkH,EApFc,CAACjwJ,GAAUA,aAAqC,EAASA,EAAM46B,OAoF9D41H,CAAgBxwJ,GAC/BywJ,EAnFS,CAACR,IAChB,IAAKA,EACD,OAAOV,GAGX,MAAMmB,EAAe,0BAA0BzwM,KAAKgwM,GACpD,GAAIS,EAAc,CACd,MAAMC,EAAcD,EAAa,GAC3BE,EAAejtK,OAAOC,SAAS+sK,EAAa,IAClD,OAVuBpqM,EAUMqqM,EAVK3rM,KAAK8nB,IAAIxmB,IAF5B,MAaT,CACEA,OAAQqqM,EACRC,aAAcF,IAAgBV,EAC9BT,cAAe,WAEjBC,EACV,CAjB0B,IAAClpM,EAkB3B,MAAO,CACHipM,cAAe,UACfnoD,aAAc4oD,EACjB,EA+DiBa,CAAWb,GAC7B,OAAQQ,EAAUjB,eACd,IAAK,QACD,MAtDc,EAACppM,EAAa0lF,KACpC,MAAMilH,EAAcrB,GAAwBtpM,GACtC4qM,EAAkBlB,GAAqB,MAAOiB,EAAa,GAAI3qM,EAAa0lF,GAC5EmlH,EAAkBnB,GAAqB,KAAM,EAAGiB,EAAc,GAAI3qM,EAAa0lF,GACrF,MAAO,IACAklH,EACH,CAAEpvM,KAAM,aACR+tM,GAAU,EAAGvpM,EAAa0lF,GAC1B,CAAElqF,KAAM,gBACLqvM,EACN,EA4CcC,CAAkB9qM,EAAa0lF,GAC1C,IAAK,SACD,MA5Ca,CAACA,GAAS,CAC/B,CACIlqF,KAAM,QACN8/H,MAAO51C,EAAKj/D,cAAc,CAAEzxB,GAAI,gCAAkC,CAAEkL,MAlDrD,UA2FJ6qM,CAAiBrlH,GAC5B,IAAK,UACD,OAAOkkH,GAAmBS,EAAUppD,kBAAcpmJ,EAAWmF,EAAa0lF,GAC9E,IAAK,UAAW,CACZ,MAAM,OAAEvlF,EAAM,aAAEsqM,GAAiBJ,EACjC,OAAOI,EArCQ,EAACtqM,EAAQH,EAAa0lF,IAKtCgkH,GADSvpM,EAAS,EAAI,CAACA,GAASA,GAAU,CAACA,GACbH,EAAa0lF,GAiCpCslH,CAAmB7qM,EAAQH,EAAa0lF,GACxCkkH,GAAmBC,EAAc1pM,EAAQH,EAAa0lF,EAChE,EAER,CCpHA,MAAMulH,IAAY,QAAc,OAChC,MAAMC,WAAsB,YACxBv1M,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKmsJ,SAAW,cAChBnsJ,KAAK6pH,SAAYx7F,IACTA,GACAruB,KAAKc,MAAM+oH,SAASx7F,EAAOtjB,MAC/B,EAEJ/K,KAAKgrH,mBAAsB8mF,IACvB,IAAI3sM,EACJ,GAAI2sM,EAAU/mM,QAAU/K,KAAKc,MAAMiK,MAAO,CACtC,MAAMsqM,EAAer1M,KAAKc,MAAMw0M,SAASt1M,KAAKc,MAAMiK,MAAMy8B,YACpDglH,GAA6F,QAA9ErnJ,EAAKivM,GAAoCiB,EAAcr1M,KAAKc,MAAMiK,cAA2B,IAAP5F,OAAgB,EAASA,EAAGqgI,QACnIxlI,KAAKc,MAAMiK,MAAMy8B,WACrBxnC,KAAK+sF,SAAS,CACVy/D,cAER,GAEJxsJ,KAAK21H,MAAQ,KACL31H,KAAKmsJ,SAASl+I,SACdjO,KAAKmsJ,SAASl+I,QAAQ0nH,OAC1B,EAEJ31H,KAAKy0H,KAAO,KACJz0H,KAAKmsJ,SAASl+I,SACdjO,KAAKmsJ,SAASl+I,QAAQwmH,MAC1B,EAEJz0H,KAAKu1M,oBAAuB/oD,IACpBA,IAAexsJ,KAAKkZ,MAAMszI,YAC1BxsJ,KAAK+sF,SAAS,CAAEy/D,cACpB,EAEJxsJ,KAAKw1M,cAAgB,CAAC36E,EAAc46E,EAAYvvF,KAC5C,MAAM,qBAAEwvF,EAAoB,MAAE3qM,GAAU/K,KAAKc,MACzC40M,GACAxvF,IACAlmH,KAAKu1M,oBAAoBxqM,aAAqC,EAASA,EAAMy8B,cAG7EiuK,EAAW56E,GACX76H,KAAKu1M,oBAAoB16E,EAAeA,EAAa2K,MAAQ,IACjE,EAEJxlI,KAAK21M,gBAAkB,CAAC7/L,EAAO2/L,KAC3B,MAAM,qBAAEC,GAAyB11M,KAAKc,MAChCoqI,EAAep1H,EAAM8pC,OAAO70C,OAC9B2qM,aAAmE,EAASA,EAAqBxqE,KACjGuqE,EAAW,CACP/vM,KAAM,SACNqF,MAAO08B,OAAOyjG,GACd1F,MAAO0F,IAKflrI,KAAKu1M,oBAAoBrqE,EAAa,EAE1C,MAAMrQ,OAA+B91H,IAAhBjE,EAAMiK,MACrBqpM,GAEFtzM,EAAMw0M,SAASx0M,EAAMiK,MAAMy8B,YAAa1mC,EAAMiK,OAC5C,KACN/K,KAAKkZ,MAAQ,CACTszI,WAAY3xB,EAAe81E,GAAa91E,GAAgB/5H,EAAMiK,MAAQjK,EAAMiK,MAAMy8B,WAAa,GAEvG,CACAmmE,SACI,MAAM,cAAEioG,EAAa,YAAEvyM,EAAW,SAAEiyM,EAAQ,MAAEvqM,EAAQ,KAAI,UAAEg+F,EAAS,MAAEI,EAAK,gBAAEwpG,EAAe,kBAAEC,GAAuB5yM,KAAKc,MACrHwE,EAAQgwM,EAASt1M,KAAKkZ,MAAMszI,YAE5BqpD,EAAyB,OAAV9qM,EAAiBuqM,EAASvqM,EAAMy8B,YAAc,GAG7DqzF,EAA0B,OAAV9vH,GAAkBqpM,GAAoCyB,EAAc9qM,IAAW,KAC/F+qM,EAAkB,GAAmBxwM,GACrC+5K,EAA8C,KAAjCr/K,KAAKkZ,MAAMszI,WAAW9tE,OACzC,OAAQ,gBAAoBy2H,GAAW,CAAEtrF,SAAU7pH,KAAK6pH,SAAU8mF,aAAcA,GAAciF,cAAeA,EAAe/6E,aAAcA,EAAcq4E,UAAW4C,EAAgBrrM,OAAQ+hJ,WAAYxsJ,KAAKkZ,MAAMszI,WAE9MupD,wBAAyBl7E,GAAgBwkD,EAAa,EAAIgyB,GAAeyE,KAAoB,EAAGE,gBAAetD,eAAcD,eAAcvvG,SAAQmjB,WAAUH,YAAWsmC,aAAYilD,mBAAkBM,sBAAqB0D,iBAE3N,MAAMQ,EAA4BxE,EAAmBqE,EAAgBrrM,OAAS,EAAI,EAAIgnM,EAChFv+C,EAAY,CACd5tJ,QACAu1H,eACA42E,iBAAkBwE,EAClBxD,eACAC,eACA3pG,UAAW,yBACX4pG,kBACAnmD,aACAulD,sBACAa,qBAEJ,OAAQ,gBAAoB,MAAO,CAAE7pG,UAAW,KAAG,oBAAqBA,GAAYI,MAAOA,GACvF,gBAAoB,MAAO,CAAEJ,UAAW,mCACpC,gBAAoB,QAASrpG,OAAOiI,OAAO,CAAEjC,KAAM,OAAQqjG,UAAW,yCAA2CitG,EAAc,CAC3HzyM,IAAKvD,KAAKmsJ,SACV9oJ,YAAaw3H,EAAeA,EAAa2K,MAAQniI,EACjD0H,MAAOyhJ,EACPjJ,QAAS,KACLvjJ,KAAK+sF,SAAS,CAAEy/D,WAAY,KAC5BnmC,GAAU,EAEdwD,SAAW/zG,GAAU9V,KAAK21M,gBAAgB7/L,EAAO2/L,GACjDj/E,OAAQ,IAAMx2H,KAAKw1M,cAAc36E,EAAc46E,EAAYvvF,QAEnEhjB,GAAU59F,EAAMmF,OAAS,EAAI,gBAAoB6mM,GAAuB5xM,OAAOiI,OAAO,CAAC,EAAGurJ,IAAc,KAAM,GAE1H,EAEJkiD,GAAc3pF,aAAe,CACzB5B,SAAU,IACV+rF,eAAe,EACfhD,kBFxHoC,GGFxC,MAAMsD,WAAqC,YACvCr2M,cACIitC,SAASC,WACT/sC,KAAKm2M,WAAa,cAClBn2M,KAAKo2M,cAAgB,IACV,iBAAkBtsG,QAAUusG,UAAUC,eAAiB,EAElEt2M,KAAKu2M,aAAe,KAChB,MAAMH,EAAgBp2M,KAAKo2M,gBACvBp2M,KAAKm2M,WAAWloM,UAKhBmoM,EACM1mH,YAAW,KACT,IAAIvqF,EAC+B,QAAlCA,EAAKnF,KAAKm2M,WAAWloM,eAA4B,IAAP9I,GAAyBA,EAAGwwH,OAAO,GAC/E,GACD31H,KAAKm2M,WAAWloM,QAAQ0nH,QAClC,EAEJ31H,KAAKw2M,YAAc,KACf,MAAMJ,EAAgBp2M,KAAKo2M,gBACvBp2M,KAAKm2M,WAAWloM,UAChBmoM,EACM1mH,YAAW,KACT,IAAIvqF,EAC+B,QAAlCA,EAAKnF,KAAKm2M,WAAWloM,eAA4B,IAAP9I,GAAyBA,EAAGsvH,MAAM,GAC9E,GACDz0H,KAAKm2M,WAAWloM,QAAQwmH,OAClC,EAEJz0H,KAAKuuM,iBAAoBnmM,IACrBpI,KAAKc,MAAMqrM,6BAA6BzsM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3H,KAAKc,MAAMorM,sBAAuB,CAAE9jM,eAC/FrD,IAATqD,GACApI,KAAKu2M,cACT,EAEJv2M,KAAKwuM,eAAkBlmM,IACnBtI,KAAKc,MAAMqrM,6BAA6BzsM,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3H,KAAKc,MAAMorM,sBAAuB,CAAE5jM,QAC5GtI,KAAKw2M,aAAa,CAE1B,CACA7oG,SACI,MAAM,iBAAE4gG,EAAgB,eAAEC,GAAmBxuM,MACvC,qBAAEksM,EAAoB,KAAEt8G,EAAI,SAAEyzC,GAAarjI,KAAKc,MAEhDgyJ,EAAc,CAChB8/C,kBAAmBvvE,EAFS,EH7CA,EGgD5BsvE,gBAAiB,iEACjB2C,SAAWvqM,IACP,MAAMzF,EAAQ+uM,GAA2BtpM,EAAOmhM,EAAqBhiM,YAAa0lF,GAElF,OAAOyzC,EAAW/9H,EAAMe,QAAQR,GAAuB,cAAdA,EAAKH,OAAwBJ,CAAK,GAGnF,OAAQ,gBAAoB,MAAO,CAAEyjG,UAAW,oDAC5C,gBAAoBqsG,GAAe11M,OAAOiI,OAAO,CAAEoD,MAAOmhM,EAAqB9jM,KAAMyhH,SAAU0kF,EAAkBlrM,YAAausF,EAAKj/D,cAAc,CAAEzxB,GAAI,iBAAmB6pG,UAAW,KAAG,kCAAmC,+BAAgCs6B,GAAY,2CAA6CyvB,IACpT,gBAAoB,OAAQ,CAAE/pD,UAAW,iCAAmC,KAC5E,gBAAoBqsG,GAAe11M,OAAOiI,OAAO,CAAEoD,MAAOmhM,EAAqB5jM,GAAIuhH,SAAU2kF,EAAgBnrM,YAAausF,EAAKj/D,cAAc,CAAEzxB,GAAI,eAAiB6pG,UAAW,KAAG,kCAAmC,6BAA8Bs6B,GAAY,2CAA6CyvB,EAAa,CAAEvvJ,IAAKvD,KAAKm2M,cAC7U,EAEG,MAAMM,IAAsB,EAAA11E,GAAA,IAAWm1E,IC/DjCQ,GAAyB,EAAGxK,uBAAsBh6K,yBAAwBi6K,+BAA8B9oE,cAAiB,gBAAoB,WAAgB,KACtK,gBAAoBmtE,GAAiB,CAAEt+K,uBAAwBA,EAAwBw+K,oBAAqBxE,EAAqBhiM,YAAaumM,4BAA8BvmM,GAAgBiiM,EAA6BzsM,OAAOiI,OAAOjI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGukM,GAAwBA,EAAqBhiM,cAAgBA,GAAe,CAC3U9B,UAAMrD,EACNuD,QAAIvD,IACH,CAAEmF,mBACX,gBAAoBusM,GAAqB,CAAEvK,qBAAsBA,EAAsBC,6BAA8BA,EAEjHnlM,IAAKklM,EAAqBhiM,YAAam5H,SAAUA,K,2BCVlD,MAAMszE,GAAexxM,IACxB,IAAI,SAAEkI,EAAQ,UAAE07F,GAAc5jG,EAAI2rM,GAAa,SAAO3rM,EAAI,CAAC,WAAY,cACvE,OAAQ,gBAAoB,MAAOzF,OAAOiI,OAAO,CAAEohG,UAAW,KAAG,0DAA2DA,IAAc+nG,GAAazjM,EAAU,ECFxJupM,GAAgC,EAAG1sM,kBAC5C,MAAM2sM,EAAWjvL,GAAS1d,IAAgB,KAC1C,OAAK2sM,EAGE,gBAAoB,KAAkB,CAAE33M,GAAI23M,EAAS33M,KAFjD,IAEsD,ECD/D43M,GAAmB,CACrB,gBACA,mBACA,iBACA,mBACA,gBACA,gBACA,mBAKSC,GAA4B,EAAGxvL,aAAY+F,eAAc4+K,uBAAsBC,+BAA8BpjG,gBACtH,MAAM52E,EAAkB2kL,GACnBzwM,QAAQ6D,IACT,IAAI/E,EACJ,OAAO+Z,SAA0G,QAAhG/Z,EAAKmoB,aAAmD,EAASA,EAAapjB,UAAiC,IAAP/E,OAAgB,EAASA,EAAGsF,QAAU,EAAE,IAEhK1L,KAAKmL,IAAgB,CACtBA,cACA5E,MAAOgoB,EAAapjB,OAExB,OAAQ,gBAAoB,WAAgB,KAAMioB,EAAgBpzB,KAAK4zB,GAAY,gBAAoB,WAAgB,CAAE3rB,IAAK2rB,EAAOzoB,aACjI,gBAAoBysM,GAAa,CAAE5tG,UAAWA,GAC1C,gBAAoB6tG,GAA+B,CAAE1sM,YAAayoB,EAAOzoB,eAC7EyoB,EAAOrtB,MAAMvG,KAAK8G,GAAU,gBAAoB,GAAU,CAAEmB,IAAKnB,EAAK6T,gBAAiBy+E,WAAYtyF,EAAK6T,kBAAoBwyL,EAAqBxyL,gBAAiBm3F,QAAS,IAAMs7F,EAA6BtmM,GAAOkjG,UAAW,KAAG,qBAAqB,KAAUljG,EAAK6T,mBAAoBqvF,IACvR,gBAAoB2iG,GAAyB,CAAErlM,OAAQR,EAAM0hB,WAAYA,UAAqB,EC/B7FyvL,GAAkB,IAAO,gBAAoB,MAAO,CAAEjuG,UAAW,sFAC1E,gBAAoB,MAAO,CAAEA,UAAW,kDACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,gCAAiCoI,OAAQ,CAC7E64I,KAAM,gBAAoB,WAAgB,KAAM,SAE5D,gBAAoB,KAAM,CAAEp3C,UAAW,0BCL9BkuG,GAAoB9xM,IAC7B,IAAI,SAAEkI,EAAQ,YAAE6pM,GAAgB/xM,EAAI2rM,GAAa,SAAO3rM,EAAI,CAAC,WAAY,gBACzE,OAAQ,gBAAoB,SAAUzF,OAAOiI,OAAO,CAAEohG,UAAW,kEAAmE8H,QAAUvxG,IACtIA,EAAEyvH,iBACFmoF,EAAY,KAAK,GAChBpG,GACL,gBAAoB,OAAQ,CAAE/nG,UAAW,yBACzC,IACA17F,EAAU,ECNL8pM,IAAuB,EAAAp2E,GAAA,KADGjgI,GAAW,gBAAoBg8H,GAAA,EAAQ,CAAEp3H,KAAM,SAAUqF,MAAOjK,EAAM8uF,KAAKj/D,cAAc,CAAEzxB,GAAI4B,EAAMiiJ,YAAch6C,UAAWjoG,EAAMioG,UAAWia,SAAUliH,EAAMkiH,SAAUnS,QAAS/vG,EAAM+vG,YCElNumG,GAA4B,EAAGC,gBAAe9vL,aAAY2kL,uBAAsBC,+BAA8BpjG,eAAkB,gBAAoB,WAAgB,KAAMsuG,EAAct4M,KAAK8G,GAAU,gBAAoB,GAAU,CAAEmB,IAAKnB,EAAK6T,gBAAiBy+E,WAAYtyF,EAAK6T,kBAAoBwyL,EAAqBxyL,gBAAiBm3F,QAAS,IAAMs7F,EAA6BtmM,GAAOkjG,UAAW,KAAG,qBAAqB,KAAUljG,EAAK6T,mBAAoBqvF,IAC/c,gBAAoB2iG,GAAyB,CAAErlM,OAAQR,EAAM0hB,WAAYA,QCiBvE+vL,GAAoB,6BACnB,MAAMC,WAAuB,YAChC13M,cACIitC,SAASC,WACT/sC,KAAKkZ,MAAQ,CACTs+L,MAAO,MAEXx3M,KAAKk3M,YAAc,CAACM,EAAQ,QACxBx3M,KAAK+sF,SAAS,CAAEyqH,SAAQ,EAE5Bx3M,KAAKy3M,cAAgB,KACjB,MAAM,cAAEJ,EAAa,SAAEh0E,EAAQ,qBAAE6oE,EAAoB,6BAAEC,GAAiCnsM,KAAKc,MAC7F,OAAOu2M,EAAc/wL,QAAW,gBAAoB2lL,GAAmB,CAAE3+K,aAAc+pL,EAAc/wL,QAAS4lL,qBAAsBA,EAAsBC,6BAA8BA,EAA8BpjG,UAAWs6B,EAAWi0E,QAAoBvyM,IAAgB,IAAI,EAExR/E,KAAK03M,mBAAqB,KACtB,MAAM,WAAEnwL,EAAU,cAAE8vL,EAAa,qBAAEnL,EAAoB,6BAAEC,EAA4B,8BAAE0D,EAA6B,SAAExsE,EAAQ,OAAE91G,EAAM,UAAEk/B,GAAezsD,KAAKc,MAC5J,IAAKu2M,EAAc7wL,aACf,OAAO,KAEX,MAAM,MAAEgxL,GAAUx3M,KAAKkZ,MACjBi/E,EAAak/G,EAAc7wL,aAAa9M,kBAAoBwyL,EAAqBxyL,gBACjFi+L,EAAsB,iBAAVH,EAClB,OAAQ,gBAAoB,WAAgB,KACvCn0E,GAAas0E,EAKkP,KALrO,gBAAoB,GAAU,CAAEx/G,WAAYA,EAAY0Y,QAAS,KACpF7wG,KAAKk3M,YAAY,gBACZjwL,GAAyBilL,IAC1BC,EAA6BkL,EAAc7wL,aAC/C,EACDuiF,UAAW,KAAG,kBAAmB,mCAAoCs6B,GAAYi0E,KAAsBD,EAAc7wL,aAAarK,KAAQk7L,EAAc7wL,aAAiB,KAAK,gBAAoB,KAAkB,CAAEtnB,GAAI,2BACjOi5F,GAAgBkrC,IAAYs0E,EACgV,KADlU,gBAAoBvL,GAAuB,CAAE/oE,SAAUA,GAC7F,gBAAoB2sE,GAAwB,CAAEzoL,WAAYA,EAAYgG,QAASA,aAAuC,EAASA,EAAO/G,oBAAiBzhB,EAAWonM,6BAA8BA,EAA8BD,qBAAsBA,EAAsB7oE,SAAUA,EAAUp0G,cAAe4gL,EAA+BpjJ,UAAWA,KAAuB,EAE1XzsD,KAAK43M,mBAAqB,KACtB,MAAM,cAAEP,EAAa,qBAAEnL,EAAoB,6BAAEC,EAA4B,uBAAEj6K,EAAsB,SAAEmxG,GAAcrjI,KAAKc,MACtH,IAAKu2M,EAAcxwL,aACf,OAAO,KAEX,MAAM,MAAE2wL,GAAUx3M,KAAKkZ,MACjBi/E,EAAak/G,EAAcxwL,aAAanN,kBAAoBwyL,EAAqBxyL,gBACjFi+L,EAAsB,iBAAVH,EAClB,OAAQ,gBAAoB,WAAgB,KACvCn0E,GAAas0E,EAQsF,KARzE,gBAAoB,GAAU,CAAEx/G,WAAYA,EAAY0Y,QAAS,KACpF7wG,KAAKk3M,YAAY,gBACZ/vL,GAAyB+kL,IAC1BC,EAA6BkL,EAAcxwL,aAC/C,EACDkiF,UAAW,KAAG,kBAAmB,mCAAoCs6B,GAAYi0E,KACpFD,EAAcxwL,aAAa1K,KAAQk7L,EAAcxwL,aAAiB,KAAK,gBAAoB,KAAkB,CAAE3nB,GAAI,0BAClHmkI,EACsF,KAD1E,gBAAoB+sE,GAAiB,CAAE39C,kBAAmB,CAAC,CAAE1lD,MAAO,WAC7E,gBAAoB,KAAkB,CAAE7tG,GAAI,qCACpDi5F,GAAgBkrC,IAAYs0E,EAGqG,KAHvF,gBAAoBvL,GAAuB,CAAE/oE,SAAUA,GAC7F,gBAAoBqzE,GAAwB,CAAEvK,6BAA+B99K,IACrE89K,EAA6B99K,EAAO,EACrC69K,qBAAsBA,EAAsBh6K,uBAAwBA,EAAwBmxG,SAAUA,KAAsB,EAE/IrjI,KAAK63M,qBAAuB,KACxB,MAAM,WAAEtwL,EAAU,cAAE8vL,EAAa,qBAAEnL,EAAoB,6BAAEC,EAA4B,SAAE9oE,GAAarjI,KAAKc,MACzG,OAAOu2M,EAAczwL,gBAAkBywL,EAAczwL,eAAenc,OAAS,EAAK,gBAAoB2sM,GAA2B,CAAE7vL,WAAYA,EAAY8vL,cAAeA,EAAczwL,eAAgBslL,qBAAsBA,EAAsBC,6BAA8BA,EAA8BpjG,UAAWs6B,EAAWi0E,QAAoBvyM,IAAgB,IAAI,EAElX/E,KAAK83M,qBAAuB,KACxB,MAAM,WAAEvwL,EAAU,cAAE8vL,EAAa,qBAAEnL,EAAoB,6BAAEC,EAA4B,SAAE9oE,GAAarjI,KAAKc,MACzG,OAAOu2M,EAAcvwL,eAAkB,gBAAoBiwL,GAA2B,CAAExvL,WAAYA,EAAY+F,aAAc+pL,EAAcvwL,eAAgBolL,qBAAsBA,EAAsBC,6BAA8BA,EAA8BpjG,UAAWs6B,EAAWi0E,QAAoBvyM,IAAgB,IAAI,EAEtU/E,KAAK+3M,qBAAuB,KACxB,MAAM,qBAAE7L,EAAoB,6BAAE8L,EAA4B,qBAAElqL,EAAoB,8BAAEmqL,GAAmCj4M,KAAKc,MAC1H,OAAQ,gBAAoBirM,GAA4B,CAAEhhM,MAAO+iB,EAAsB+7F,SAAUmuF,EAA8Bh1F,UAAWi1F,EAA+B/tM,ahyBrFtI2jB,EgyBqFkLq+K,EhyBpFtNj+K,GAA2BJ,IAAqBzG,GAA2ByG,GAC5EA,EAAiB3jB,iBACjBnF,KAHH,IAAwC8oB,CgyBqF2M,EAElP7tB,KAAKk4M,gBAAmBC,IAEpB,GAAIruG,OAAOsuG,aAtEF,IAsE+B,CACpC,MAAMC,EAA0BF,EAzEb,GAyE+D,EAClF,OAAOruG,OAAOsuG,YAAcC,EA3Eb,GAET,CA0EV,CACgB,CAExB,CACAztF,oBAGQ5qH,KAAKc,MAAMuiI,WACPp8G,GAAyBjnB,KAAKc,MAAMorM,sBACpClsM,KAAKk3M,YAAY,gBAEZ/vL,GAAyBnnB,KAAKc,MAAMorM,uBACzClsM,KAAKk3M,YAAY,gBAG7B,CACAvpG,SACI,MAAM,8BAAEsqG,EAA6B,SAAE50E,EAAQ,WAAEj3B,EAAU,aAAEksG,EAAY,cAAEjiC,EAAa,cAAE1nD,EAAa,qBAAEu9E,EAAoB,iBAAEqM,EAAgB,OAAEhrL,GAAYvtB,KAAKc,OAC5J,MAAE02M,GAAUx3M,KAAKkZ,MACjBi/L,GAAsB90E,GAAY40E,EAClCO,EAAax4M,KAAKk4M,gBAAgBC,GACxC,IAAIM,EAAe,CAAC,EAChBC,EAAgB,CAAC,EAMrB,OALIF,IAEAC,EAAe,CAAE1zF,QAAS,QAAS5iG,OAAQ,GAAGq2L,OAC9CE,EAAgB,CAAEzjK,UAAW,GAAGujK,QAE5B,gBAAoB,MAAO,CAAEzvG,UAAW,qCAC5C,gBAAoB,MAAO,CAAEA,UAAW,KAAG,+BAAgC,+BAAgCs6B,GAAY,wCACzG,OAAVm0E,GAAkBn0E,EAAY,gBAAoB,MAAO,CAAExyB,QAAS,KAC5DwlE,IACA1nD,GAAe,GACd4pF,GAAqB,KAC9B,gBAAoB,MAAO,CAAExvG,UAAW,KAAG,uCAAwC,CAC3E,4CAA6C5hF,GAAyB+kL,KACtE/iG,MAAOsvG,GACXrsG,IAAei3B,EAAW,gBAAoB2zE,GAAiB,MAAQ,KACvE3zE,EAAYrjI,KAAK24M,sBAA0B,gBAAoB3M,GAAkB,CAAEjjG,UAAW,0CAA2CI,MAAOuvG,GAAiB14M,KAAK44M,yBAC1KT,EAAqBn4M,KAAK+3M,uBAAyB,KACnD,gBAAoB,MAAO,CAAEhvG,UAAW,KAAG,oCACvC,gBAAoB,MAAO,CAAEA,UAAW,2CACpC,gBAAoBouG,GAAsB,CAAEp0D,UAAW,SAAUh6C,UAAW,2DAA4D8H,QAAS,KACzIwlE,IACA1nD,GAAe,IAEvB,gBAAoBwoF,GAAsB,CAAEp0D,UAAW,QAASh6C,UAAW,uDAAwDia,UAAW,IAAQz1F,GAASsjF,QAAS,KAChKynG,IACA3pF,GAAe,OAE3C,CACAgqF,sBACI,MAAM,MAAEnB,GAAUx3M,KAAKkZ,MACvB,MAAc,iBAAVs+L,EACQ,gBAAoB,WAAgB,KACxC,gBAAoBP,GAAkB,CAAEC,YAAal3M,KAAKk3M,aACtD,gBAAoB,KAAkB,CAAEh4M,GAAI,0BAChDc,KAAK03M,sBAEC,iBAAVF,EACO,IAAQx3M,KAAKc,MAAMoxB,wBAA0B,KAAQ,gBAAoB,WAAgB,KAC5F,gBAAoB+kL,GAAkB,CAAEC,YAAal3M,KAAKk3M,aACtD,gBAAoB,KAAkB,CAAEh4M,GAAI,2BAChDc,KAAK43M,sBAEN53M,KAAK44M,sBAChB,CACAA,uBACI,OAAQ,gBAAoB,WAAgB,KACxC54M,KAAKy3M,gBACLz3M,KAAK03M,qBACJ,IAAQ13M,KAAKc,MAAMoxB,wBAAsD,KAA5BlyB,KAAK43M,qBACnD53M,KAAK63M,uBACL73M,KAAK83M,uBACb,ECvJJ,MAAM,IAAa,QAAc,MAa3Be,GAA6B,CAACtxL,EAAYsoL,GAAgC,IAAUA,EAAgCtoL,EAAatB,GAA6BsB,EACvJuxL,GAAkB3zM,IAC3B,IAAI,6BAAE4zM,EAA4B,6BAAEC,EAA4B,sBAAEC,EAAqB,iBAAE5jG,EAAgB,WAAE9tF,EAAU,SAAEy7F,EAAQ,OAAE7xF,EAAM,cAAEkmL,EAAa,8BAAExH,EAA6B,UAAEpjJ,GAActnD,EAAI+zM,GAAoB,SAAO/zM,EAAI,CAAC,+BAAgC,+BAAgC,wBAAyB,mBAAoB,aAAc,WAAY,SAAU,gBAAiB,gCAAiC,cAC5a,MAAMg0M,EAfsB,CAAC5xL,IAC7B,IAGI,OADA,KAAO,IAAII,KAAQJ,GACZA,CACX,CACA,MAAOpiB,GAGH,OADA+B,QAAQC,KAAK,2BAA2BogB,yBAAkCnB,uBACnEA,EACX,GAK2BgzL,CAAiB7xL,GACtC8xL,GAAwB,IAAA/rM,UAAQ,IAC3B,KAAKmhB,GAAgCI,GAArC,CAA8DwoL,IACtE,CAACA,IACJ,OAAQ,gBAAoB,KAAa,CAAElmL,OAAQA,GAAU,SACzD,gBAAoB,GAAY,CAAEhoB,MAAO,KAAkCk6H,IACvE,MAAMk1E,EAAmB,CAACr1G,GAAS,IAAW,gBAAoByoG,GAA2B,CAAE3oF,SAAUA,EAAUqgB,SAAUA,EAAUngC,OAAQA,EAAQr1E,iBAAkBD,GAA0BmrL,EAA8BC,GAA+BzxL,WAAYsxL,GAA2BM,EAAoBtJ,GAAgCx6F,iBAAkBA,IAC7W,OAAQ,gBAAoB4Y,GAAA,EAAU,CAAE5I,qBAAqB,EAAMoJ,kBAAkB,EAAMrJ,qBAAqB,EAAMu7E,wBAAwB,EAAM7zF,YAAa,CACzJ,CAAEC,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,KAChC,CAAEwuE,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,MACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,MACvC8hC,mBAAoBmqE,EAAuB7qF,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoB,OAAQ,CAAExd,QAASmS,EAAW,IAAOqL,GAAkBkqF,EAAiBr1G,IAAWirB,sBAAuB,CACvN,oCACA,YACDO,WAAY,EAAGC,mBAGlB,gBAAoB4oF,GAAgB73M,OAAOiI,OAAO,CAAC,EAAGuxM,EAAmB,CAAE7B,cAAegC,EAAuBh2E,SAAUA,EAAU1U,cAAeA,EAAe4pF,iBAAkBA,IAAoBhxL,WAAY4xL,EAAoBtJ,8BAA+BA,EAA+BpjJ,UAAWA,MAAkB,IACxU,ECtCZ,MAAM6sJ,WAAmB,gBACrB5vK,gCAAgCqhF,EAAWgN,GACvC,OAAK,KAAQhN,EAAUmhF,qBAAsBn0E,EAAUwhF,2BACnDxuF,EAAUj9F,uBAAyBiqG,EAAUyhF,yBAG1C,KAFIF,GAAWG,kBAAkB1uF,EAG5C,CACArhF,yBAAyB5oC,GACrB,MAAM44M,EAAoB1rL,GAAwBltB,EAAMorM,sBACxD,MAAO,CACHqN,yBAA0Bz4M,EAAMorM,qBAChCA,qBAAsBprM,EAAMorM,qBAC5BsN,yBAA0B14M,EAAMgtB,qBAChCA,uBAAsB4rL,GAAoB54M,EAAMgtB,qBAChD+hL,8BAA+B/uM,EAAM+uM,8BACrCoI,8BAA+ByB,EAEvC,CACA75M,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAK25M,iBAAmB,KACpB,MAAMC,GCrC4B1N,EDqCmClsM,KAAKkZ,MAAMgzL,qBCpCpFj+K,GAA2Bi+K,IAC3BA,EAAqB9jM,KAAO8jM,EAAqB5jM,GAC1C5I,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGukM,GAAuB,CAAE9jM,KAAM8jM,EAAqB5jM,GAAIA,GAAI4jM,EAAqB9jM,OAErH8jM,GALJ,IAAuCA,EDsClClsM,KAAKc,MAAMuvJ,QAAQupD,EAAgC55M,KAAKkZ,MAAM4U,qBAAqB,EAEvF9tB,KAAK65M,mBAAqB,KACtB75M,KAAK+sF,UAAS,IAAMusH,GAAWG,kBAAkBz5M,KAAKc,QAAO,EAEjEd,KAAK85M,gBAAkB,KACnB95M,KAAKc,MAAMi0H,WACX/0H,KAAK65M,oBAAoB,EAE7B75M,KAAKi5M,sBAAyB/1G,IACtBA,EACAljG,KAAKc,MAAMmkH,UAGXjlH,KAAKc,MAAM+qG,UACX7rG,KAAK65M,qBACT,EAEJ75M,KAAK+5M,iCAAoCjsL,IACrC9tB,KAAK+sF,SAAS,CAAEj/D,wBAAuB,EAE3C9tB,KAAKg6M,iCAAoC9N,IACrClsM,KAAK+sF,UAAU7zE,GAAUogM,GAAWW,2BAA2B/N,EAAsBhzL,EAAM4U,uBAAsB,EAErH9tB,KAAKkZ,MAAQogM,GAAWG,kBAAkB34M,EAC9C,CACA8pH,oBACI0uF,GAAWY,yBAAyBl6M,KAAKc,MAAMorM,qBACnD,CACAv+F,SACI,MAAM,iBAAE0H,EAAgB,eAAEC,EAAc,WAAE/tF,EAAU,cAAE8vL,EAAenL,qBAAsB6M,EAA8BjrL,qBAAsBkrL,EAA4B,uBAAE9mL,EAAsB,WAAEk6E,EAAU,OAAEj7E,EAAM,8BAAE0+K,EAA6B,UAAEpjJ,GAAezsD,KAAKc,OACtQ,qBAAEgtB,EAAoB,qBAAEo+K,EAAoB,8BAAE+L,GAAkCj4M,KAAKkZ,MAC3F,MAA0B,WAAnBo8F,EAA8B,KAAQ,gBAAoBwjG,GAAgB,CAAE5mL,uBAAwBA,EAAwBmjF,iBAAkBA,EAAkB9tF,WAAYA,EAAYy7F,SAA6B,aAAnB1N,EAA+BxnF,qBAAsBA,EAAsBkrL,6BAA8BA,EAA8Bf,8BAA+BA,EAA+BpI,8BAA+BA,EAA+BzjG,WAAYA,EAAYirG,cAAeA,EAAenL,qBAAsBA,EAAsB6M,6BAA8BA,EAA8B5nL,OAAQA,EAAQmnL,aAAct4M,KAAK25M,iBAAkBtjC,cAAer2K,KAAK85M,gBAAiBb,sBAAuBj5M,KAAKi5M,sBAAuBjB,6BAA8Bh4M,KAAK+5M,iCAAkC5N,6BAA8BnsM,KAAKg6M,iCAAkCzsL,OAAQC,GAAqB0+K,GAAuBz/I,UAAWA,GACp8B,EAEJ6sJ,GAAW7tF,aAAe,CACtBlkG,WAAYnB,GACZgmF,YAAY,EACZyjG,+BAA+B,EAC/B1+K,OAAQ,QACR4jG,SAAU,IACV9P,OAAQ,IACRpZ,QAAS,IACTp/C,UAAW,UAEf6sJ,GAAWW,2BAA6B,CAAC/N,EAAsBp+K,KAC3D,MAAM4rL,EAAoB1rL,GAAwBk+K,GAClD,MAAO,CACHA,uBACAp+K,uBAAsB4rL,GAAoB5rL,EAC1CmqL,8BAA+ByB,EAClC,EAELJ,GAAWY,yBAA4B5sL,IAC/BrG,GAAyBqG,KAAkB,KAAMA,EAAallB,OAAS,KAAMklB,EAAahlB,MAC1FpB,QAAQC,KAAK,qHAEb8mB,GAA2BX,KAC1B,KAAMA,EAAallB,OAAS,KAAMklB,EAAahlB,MAChDpB,QAAQC,KAAK,oHACjB,EEvFG,MAAMgzM,GAA8Br5M,IACvC,MAAMoB,EAAWwoF,GAAqB1+B,IAChC9rD,EAAewqF,GAAqBt0C,IACpCjlB,EAASu5D,GAAqBz+B,IAC9B/D,EAAewiC,GAAqBnjC,IACpCkF,EAAYi+B,GAAqBp+B,KACjC,OAAEjmD,EAAM,gBAAE0lG,EAAe,OAAE5rG,EAAM,SAAEs1G,GAAa30G,GAC/Cs5M,EAAsBC,IAA2B,IAAAvvH,UAAS,KAC3D,iBAAEj9D,EAAgB,qBAAEC,IAAyB,IAAAxgB,UAAQ,I9uBAxD,SAAyDqM,EAAY2gM,EAAkBC,GAC1F,MAAMC,EAAkBD,GA0FMr7M,EAzFCq7M,EA0FxBlzK,GA1F2CizK,GA0FC/zM,MAAM8nB,GAAWA,EAAO3U,kBAAoBxa,UAzFzF6F,EAwFV,IAAkC7F,EArF9B,OAAIya,IAC8F,kBAA5F6gM,aAAyD,EAASA,EAAgB90M,OAAyH,kBAA5F80M,aAAyD,EAASA,EAAgB90M,QACnM4hC,GAAkCgzK,EAAkB3gM,GAC7C4tB,GAA+B+yK,EAAkB3gM,GASzD,SAA2CA,EAAY2gM,GAC1D,IAAIn1M,EAEJ,IAAKwU,EAAY,CACb,MAAM,QAAE2M,GAAYg0L,EACpB,OAAOh0L,EACD,CAAEuH,iBAAkBvH,EAASwH,sBAAsB,GACnD+Z,QAAmC9iC,EAC7C,CAEA,MAAMm8L,EAAiBv5J,GAA4BhuB,EAAY2gM,GAC/D,GAAIpZ,EACA,MAAO,CAAErzK,iBAAkBqzK,EAAgBpzK,sBAAsB,GAGrE,GAAmC,aAA/BnU,EAAWA,WAAWjU,MAAgH,QAApD,QAAnCP,EAAKwU,EAAWA,WAAWrR,UAAuB,IAAPnD,OAAgB,EAASA,EAAGqiC,YAAsB,CAC5I,MAGM05J,EA4Dd,SAA4CvnL,EAAY6U,EAAmB9oB,GACvE,OAAO2hC,GAAyB7Y,GAC3BnoB,QAAQgoB,GA9DkF,mBA8DvEA,EAAO3oB,OAC1Ba,KAAKqhC,GAAkBjuB,GAChC,CAhE+B8gM,CAHD,CAClB9gM,WAAYja,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgS,EAAWA,YAAa,CAAEvR,KAAMq/B,OAAOC,SAAS/tB,EAAWA,WAAWvR,KAAKo/B,WAAY,IAAM,EAAGl/B,GAAI,KAE3EgyM,GACzE,GAAIpZ,EACA,MAAO,CAAErzK,iBAAkBqzK,EAAgBpzK,sBAAsB,EAEzE,CAEA,OAAIwZ,GAAkCgzK,EAAkB3gM,GAC7C4tB,GAA+B+yK,EAAkB3gM,GAIrDkuB,GAAmCluB,EAC9C,CAtCW+gM,CAAkC/gM,EAAY2gM,EACzD,C8uBZqEK,CAAgDt0M,EAAQlG,EAAOquB,kBAAmB4rL,IAAuB,CAAC/zM,EAAQlG,EAAOquB,kBAAmB4rL,IACvM/pD,GAAU,IAAAnkE,cAAY,CAAC79D,EAAQusL,KACjCP,EAAwBhsL,EAAO3U,iBAC/BqyF,EzEwBD,SAA+Cl+E,EAAkBC,GACpE,MAAM+sL,GAAoB,QAAM,QAC1BC,EAAYrpL,GAAkBG,eAAe/D,EAAkBgtL,EAAmB/sL,GACxF,GAAKgtL,EAAL,CAGA,IAAI,QAAqBA,GAAY,CACjC,MAAM,KAAE1yM,EAAI,GAAEE,EAAE,YAAE4B,IAAgB,QAAyB4wM,GAC3D,MAAO,CACHnhM,WAAY,CACRjU,KAAM,WACNwE,YAAaA,EACb9B,OACAE,MAGZ,CACK,CACD,MAAM,KAAEF,EAAI,GAAEE,IAAO,QAAyBwyM,GAC9C,MAAO,CACHnhM,WAAY,CACRjU,KAAM,WACNwE,YAAa,gBACb9B,OACAE,MAGZ,CAtBA,CAuBJ,CyEpDwByyM,CAAsC1sL,EAAQusL,GAAUvsL,EAAO3U,gBAAgB,GAChG,CAACqyF,IACExkF,EAAarlB,EAAS84M,a1CWgB,CAAC7pL,IAAa,IAAIhsB,EAAI,OAAyD,QAAjDA,EAAKgmM,GAA+Bh6K,UAA4B,IAAPhsB,EAAgBA,EAAKgmM,GA5B9H,QA4B4K,E0CVhM8P,CAAiC/4M,EAAS84M,cAC1C94M,EAASgrD,uBACf,OAAQ,gBAAoBosJ,GAAY,CAAExrL,qBAAsBA,EAAsBo+K,qBAAsBr+K,EAAkBynF,eAAgBG,EAAW,WAAa,SAAU4hG,cAAel3M,EAAOquB,kBAAmB0D,uBAAwB/xB,EAAO+xB,uBAAwBmjF,iBAAkBl1G,EAAOk1G,iBAAkBg7C,QAASA,EAAS9oI,WAAYA,EAAY4J,OAAQA,EAAQ0+K,gCAAiC3vM,EAAag7M,0BAA2B9uG,WAAYlkD,EAAcuE,UAAWA,GAAa,ECjBve0uJ,GAA0C,EAAGt1M,WACtD,IAAIV,EAAIswB,EACR,MAAM02E,GAAQ,WACR78B,EAAkBob,GAJE,CAACrkF,IAAW,KAAA8vC,gBAAeoB,IAA0B51C,GAAeA,EAAW4E,MAAMy4B,GAAcA,EAAUqY,aAAavkB,MAAM7Y,GAJ9J,SAA4BA,EAAamhM,GACrC,OAAQ,SAAgB,QAAMnhM,EAAY/a,GAAI+a,EAAYvU,MAAO01M,KAC7D,SAAgB,QAAOnhM,EAAYhU,KAAMm1M,EACjD,CAC8KC,CAAmBphM,EAAa5T,EAAOoT,gBAAgBQ,mBAIpLqhM,CAAsBz1M,EAAKQ,SACxE,OAAKipE,EAGG,gBAAoB,MAAO,CAAEy5B,UAAW,uCAC5C,gBAAoByD,GAAA,aAAiB,CAAEtqF,MAAO,EAAGC,OAAQ,GAAI4mF,UAAW,mBAAoB0D,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGu7H,KAC3Q,gBAAoB,MAAO,CAAEjoD,UAAW,kBACpC,gBAAoB,MAAO,CAAEA,UAAW,gBACpC,gBAAoByhB,GAAe,KAAMl7C,EAAgBtwC,UAAUz1B,UANpE,IAM8E,EChBtF,SAASgyM,IAAyB,UAAExyG,EAAS,OAAE7F,EAAM,MAAE35F,IAC1D,MAAMqmF,GAAO,EAAAC,GAAA,KACbtmF,EAAQA,QAAqCA,EAAQqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,6BAC9E,MAAMs8M,EAAiB,KAAGzyG,EAAW,YAAa,CAC9C,YAAa7F,IAEjB,OAAQ,gBAAoB,MAAO,CAAE6F,UAAWyyG,GAC5C,gBAAoB,MAAO,CAAEzyG,UAAW,kBACpC,gBAAoB,MAAO,CAAEA,UAAW,gBAAkBx/F,IACtE,CCbA,SAASkyM,GAAoB36M,GACzB,MAAM8uF,GAAO,EAAAC,GAAA,MACP,SAAEnnF,EAAQ,WAAE4B,GAAexJ,EAC3B46M,EAAyBpxM,EAAa5B,EAAS+B,OACrD,OAAQ,gBAAoB,WAAgB,KACxC/B,EAAS3J,KAAI,CAACuK,EAAS87C,IAAS,gBAAoB,OAAQ,CAAEp+C,IAAKo+C,EAAK2jD,UAAW,4CAC/Ez/F,EAAQC,OAAS,IAAIqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,mBAC9C,gBAAoB,KAAM,SAC9Bw8M,EAAyB,GAAM,gBAAoB,OAAQ,CAAE10M,IAAK0B,EAAS+B,OAAQs+F,UAAW,mCAC1F,gBAAoB,KAAkB,CAAE7pG,GAAI,mDAAoDoI,OAAQ,CAAEyiC,MAAO2xK,MAC7H,CAIO,MAAMC,GAAkC,EAAG91M,OAAMgkM,2BAA0B+R,4BAA2Bx1H,mBAAkB5rE,uBACnH,gBAAoB,MAAO,CAAEuuF,UAAW,6FAC5C,gBAAoB,KAAM,CAAEA,UAAW,qCAAuCljG,EAAKm5B,UAAUz1B,OAC7F,gBAAoB,KAAM,KACtB,gBAAoB,KAAkB,CAAErK,GAAI,wCAChD,gBAAoB,IAAK,CAAE6pG,UAAW,2CAA6C8gG,EAA2B,gBAAoB,KAAkB,CAAE3qM,GAAI,YAAeknF,aAA2D,EAASA,EAAiB78E,OAC9P,gBAAoB,KAAM,KACtB,gBAAoB,KAAkB,CAAErK,GAAI,uCAChD,gBAAoB,IAAK,CAAE6pG,UAAW,4CAA8C6yG,EAA6B,gBAAoB,KAAkB,CAAE18M,GAAI,YAAiB,gBAAoBu8M,GAAqB,CAAE/yM,SAAU8R,EAAkB9R,SAAU4B,WAAYkQ,EAAkBlQ,eClB/R,GAAoB,CACtB,CAAEyiG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,KACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,IAAKyuE,GAAI,MAKhC6uG,GAA2B,EAAGh2M,WACvC,MAAOi2M,EAASC,IAAc,IAAAjxH,WAAS,IACjC,kBAAEtwE,EAAiB,0BAAEohM,GCVxB,SAA8B3hM,EAAa7P,EAAOq/L,GACrD,MAAQv/G,IAAK8xH,EAAsBxzM,OAAQgS,EAAmB/M,OAAQwuM,EAAgCvuM,MAAOwuM,GAAmCtvH,GAA4B,CACxKC,aAAc6O,KAUlB,OARA,IAAA1tF,YAAU,KACFy7L,GACAuS,EAAqB/hM,EDNL,ECOpB,GACD,CAACA,EAAawvL,EDRO,ECQWuS,IAI5B,CACHxhM,oBACAohM,2BAL8B,IAAAtuM,UAAQ,IACI,YAAnC2uM,GAAmF,YAAnCA,GACxD,CAACA,IAIAC,gCAER,CDP6DC,CAAqBt2M,EAAKsE,mBAAmB5G,IAV9E,EAUwGu4M,IAC1H,iBAAE11H,EAAgB,yBAAEyjH,GAA6BL,GAAoB3jM,EAAKm5B,UAAUz7B,IAAKu4M,GAC/F,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoBxvG,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,EAAGvG,gBAAgB,EAAM9b,UAAW,kCACnG,gBAAoB,OAAQ,CAAEqS,aAAc,IAAM2gG,GAAW,GAAOhzG,UAAW,6FAC/E,gBAAoB8D,GAAA,GAAQ,CAAE9D,UAAW,4EAA6E+D,YAAa,GAAmBgY,WAAY,CAAEC,QAAS,SACzK,gBAAoB42F,GAAiC,CAAE91M,KAAMA,EAAMgkM,yBAA0BA,EAA0B+R,0BAA2BA,EAA2Bx1H,iBAAkBA,EAAkB5rE,kBAAmBA,MAAwB,EEftQ4hM,GAAsB,CACxB,CAAErvG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,GAAIyuE,EAAG,IACtC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,KAgB3C,GAd0B,EAAGnnG,OAAMw2M,wBAAuBxrG,cACtD,MAAMgH,GAAa,IAAAvqG,UAAQ,KACvB,MAAMgvM,EAAwBD,IAA0B,IAAQx2M,aAAmC,EAASA,EAAKyxC,oBACjH,OAAO,KAAG,KAAKuuE,GAAA,GAAyBhgH,EAAKm5B,UAAUz1B,SAAU,yBAA0B,CACvF,gBAAgB,EAChB,0BAA0B,EAC1B,kBAAmB+yM,EACnB,qBAAsBA,GACxB,GACH,CAACz2M,EAAMw2M,IACV,OAAQ,gBAAoB,MAAO,CAAEr1M,IAAKnB,EAAKm5B,UAAU9/B,GAAI6pG,UAAW8O,EAAYhH,QAASA,GACzF,gBAAoB2Z,GAAe,CAAEc,mBAAoB8wF,IAAuBv2M,EAAKm5B,UAAUz1B,OAC/F,gBAAoBsyM,GAA0B,CAAEh2M,KAAMA,IAAS,ECrBjE02M,GAAsC,CAAC,WAChCF,GAAwB,CAACvrD,EAAgBz8F,IAC3Cy8F,EACF/xJ,KAAKy9M,GAAOnoJ,EAAYttD,IAAIy1M,aAA+B,EAASA,EAAGx6L,WACvEjjB,KAAKy9M,GAAQA,IAAM,QAAyBA,KAC5C1pL,MAAM0pL,GAAOD,GAAoCntL,SAASotL,KCG7D,GAAsB,CACxB,CACIzvG,MAAO,SAEX,CACIA,MAAO,SAEX,CACIA,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,MAGZ,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,KAGZ,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,GAAI,GACJyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,MAGZ,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,MAOT,SAASyvG,IAAmB,UAAE1zG,EAAS,cAAEynD,EAAa,QAAE3kD,EAAO,SAAEgK,IACpE,MAAMjmB,GAAO,EAAAC,GAAA,MACN6sH,EAAaC,IAAkB,IAAA7xH,UAAS,KACxCu6B,EAAqBoI,IAA0B,IAAA3iC,WAAS,IAQ/D,IAAA98E,YAAU,KACN,MAAMwjG,EAAQ1H,OAAOpa,YAAW,IAAM+9B,GAAuB,IAAO,KACpE,MAAO,KACW,OAAVjc,GACA1H,OAAO2H,aAAaD,EACxB,CACH,GACF,IACH,MAAM7vG,EAAa+oF,GAAqBnzC,IAClC8c,EAAcq2B,GAAqBz5B,IACnC6/F,EAAiBpmE,GAAqBpkC,IACtCs2J,GAA4B,IAAAtvM,UAAQ,IAAM+uM,GAAsBvrD,EAAgBz8F,IAAc,CAACy8F,EAAgBz8F,IAE/G0uE,GAAW,IAAA72C,aAAY,MAAU/iF,IACnCwzM,EAAexzM,EAAM,GACtB,KAAM,IACH0zM,GAAwB,IAAA3wH,cAAagX,IAClCA,GACD2I,GACJ,GACD,CAACA,IACEixG,EAAoB,KAAG/zG,EAAW,qBAAsB,4BAA6B,iCACrFg0G,EAAmBL,EACnB/6M,EAAW0E,QAAQ4yB,GAAMA,EAAE+F,UAAUz1B,MAAM6zE,cAAchuD,SAASstL,EAAYt/H,iBAC9Ez7E,EACN,OAAQ,gBAAoBssH,GAAA,EAAU,CAAEllB,UAAW+zG,EAAmBhuE,mBAAoB+tE,EAAuBx3F,oBAAqBA,EAAqBoJ,kBAAkB,EAAMrJ,qBAAqB,EAAMtY,YAAa,GAAqBohB,YAAY,EAAME,aAAc,EAAGlrB,YAAc,gBAAoBq4G,GAA0B,CAAExyG,UAAW,iDAAkD7F,OAAQA,IAAYwrB,WAAY,EAAGC,mBAAqB,gBAAoB,MAAO,CAAE5lB,UAAW,KAAGynD,EAAe,oBACxf,gBAAoB5hC,GAAA,GAAc,CAAEtpH,MAAOy3M,EAAkBx5E,gBAAiB,QAASD,YAAY,EAAMP,SAAUA,EAAUC,aAAc05E,EAAal5E,kBAAmB5zC,EAAKj/D,cAAc,CACtLzxB,GAAI,mCACJ4vH,WAAY,EAAGjpH,UACP,gBAAoB,GAAmB,CAAEA,KAAMA,EAAMw2M,sBAAuBO,EAA2B/rG,QAAS,KAChHgF,EAAShwG,EAAKsE,mBAAmB5G,KACjCorH,GAAe,QAG3C,CChGO,MAAMquF,GAA4Bl8M,IACrC,MAAM,UAAEyhG,EAAS,SAAEygB,GAAaliH,EAC1Bm8M,EAAuCn8M,EAAMm8M,qCACnD,OAAQ,gBAAoBA,EAAsCv9M,OAAOiI,OAAO,CAAC,EAAG7G,GAChF,gBAAoByhG,EAAW,CAAEygB,SAAUA,IAAa,ECN1D5Y,GAAW,CACb1kG,KAAM,+BAKGw3M,GAA0C,EAAGC,2BAA0BF,uCAAsCj6F,cAC9G,gBAAoBg6F,GAA0B,CAAEz6G,UAAW46G,EAA0BF,qCAAsCA,EAAsC7yG,SAAUA,GAAU4Y,SAAUA,EAAU1Y,oBAAoB,ICHlO,SAAS8yG,IAA8B,SAAEp6F,IAC5C,MAAMja,EAAY,KAAG,uBAAwB,mCAAoC,yBAA0B,CACvGia,aAEJ,OAAQ,gBAAoB,MAAO,CAAEja,UAAWA,GAC5C,gBAAoB,KAAkB,CAAE7pG,GAAI,6BACpD,CCHO,SAASm+M,GAAyBv8M,GACrC,MAAM,qCAAEm8M,GAAyCn8M,EAC3Cw8M,EAAgB5yH,GAAqBlzC,IACrCm0D,EAA6BjhB,GAAqBtnC,IAClDnrB,EAAiByyD,GAAqB79B,IACtCm2D,GAAYs6F,IAAkB3xG,EAC9BkX,EAAUG,IAAas6F,EAAiB,gBAAoB,MAAO,KACrE,gBAAoB,KAAkB,CAAEp+M,GAAI,mDAC5C,IACC+4B,EAC4G,KAD1F,gBAAoB,IAAK,CAAE44C,KAAM,0EAA2Eu5D,IAAK,sBAAuBxqF,OAAQ,SAAUmpD,UAAW,uCACpL,gBAAoB,KAAkB,CAAE7pG,GAAI,+DAAsE6F,EAC1H,OAAQ,gBAAoBunG,GAAA,GAAoB,CAAEuY,gBAAgB,EAAM9b,UAAW,yCAC/E,gBAAoBm0G,GAAyC,CAAEC,yBAA0BC,GAA+BH,qCAAsCA,EAAsCj6F,SAAUA,IAC9MH,EAAW,gBAAoBhW,GAAA,GAAQ,CAAEC,YAAa,CAAC,CAAEC,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,MAAU6V,GAAY,KAC5H,CClBO,SAAS06F,GAAmDC,GAC/D,MAAO,CACHznG,sBAAuBynG,EACvB5nG,SAAU,CACND,6BAA8B8mG,GAC9BgB,6BAA8BJ,GAC9B33M,KAAM,8BACNg4M,SAAU,IAEdC,SAAU,CACNC,kBAAmBzC,GACnBz1M,KAAM,mBAGlB,CCTO,SAASm4M,GAA2BnkM,EAAiBskB,GACxD,OAAQA,EAAWC,aAAaC,cAAgB,IAC3Cn/B,KAAK++M,GAAwBA,EAAoBvxM,SACjDlG,OAAO,MACPA,QAAQ03M,GAA8BA,EAA0Br+K,gBAAgBhmB,kBAAoBA,IACpG3a,KAAKg/M,GAA8BA,EAA0B/yI,oBAAoB7uD,OAAM,EAChG,CCdO,IAAI6hM,IACX,SAAWA,GACPA,EAA8B,mBAAI,qBAClCA,EAA4B,iBAAI,mBAChCA,EAAwB,aAAI,eAC5BA,EAAsB,WAAI,YAC7B,CALD,CAKGA,GAAYA,KAAcA,GAAY,CAAC,ICF1C,MAAMC,GAAkB,CACpB,CAACD,GAAUviF,oBAAqB,mBAChC,CAACuiF,GAAUziF,kBAAmB,iBAC9B,CAACyiF,GAAUpiF,cAAe,YAC1B,CAACoiF,GAAUE,YAAa,aAEfC,GAAuBr9M,IAChC,IAAIqE,EAAIswB,EACR,MAAM02E,GAAQ,SAASrrG,EAAMqrG,QACrBtmG,MAAM,KAAEsW,EAAI,KAAEzW,EAAI,gBAAEk5B,EAAe,eAAEw/K,IAAsBt9M,EAS7D4pK,EAAgB,KAAG,kCAAmC,+BAAgC,KAAKhlK,KAC3F24M,EAAgB7xG,GAAA,EAAKyxG,GAAgBv4M,IACrC44M,EAAiBF,EAAiB,IAAIA,KAAoB,GAE1D70M,EAAQ,KAAQ,CAAC4S,EAAMmiM,IAAiBp6M,KAAK,KACnD,OAAQ,gBAAoB,IAAK,CAAE2sG,QAblBvxG,IACbA,EAAEyvH,iBACFjuH,EAAM+vG,QAAQjyE,EAAgB,EAWmBmqE,UAAW2hE,EAAenhK,MAAOA,GAClF,gBAAoB,MAAO,CAAEw/F,UAAW,sCACpC,gBAAoBs1G,EAAe,CAAE5xG,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGu7H,MACvN70I,EAA4B,gBAAoB,IAAK,KAClDA,EACAiiM,EAAiB,gBAAoB,OAAQ,KACzC,KACAA,EACA,KAAO,MAhBP,gBAAoB,MAAO,CAAEr1G,UAAW,4DAC5C,gBAAoB,MAAO,CAAEA,UAAW,sBAerB,EChClBw1G,GAAmBz9M,IAC5B,MAAM,MAAEwE,GAAUxE,GACX09M,EAAgBnjF,GAAc,KAAU/1H,GAAQO,GAC5CwlE,GAAsBxlE,EAAK+4B,mBAEhC6/K,EAAen5M,GACVA,EAAMvG,KAAK8G,GAAU,gBAAoBs4M,GAAqB,CAAEn3M,IAAKnB,EAAK3G,GAAI2G,KAAMA,EAAMgrG,QAAS/vG,EAAM+0G,aAkBpH,OAAQ,gBAAoB,MAAO,CAAE9M,UAAW,uCAhBnB,CAACzjG,IAC1B,IAAKA,aAAqC,EAASA,EAAMmF,QAAU,EAC/D,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAEs+F,UAAW,+BACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,gCAAiC4oH,QAAS,UAC1F22F,EAAYn5M,GACpB,EAWAo5M,CAAqBF,GATA,CAACl5M,IACtB,IAAKA,aAAqC,EAASA,EAAMmF,QAAU,EAC/D,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,MAAO,CAAEs+F,UAAW,+BACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,gCAAiC4oH,QAAS,UAC1F22F,EAAYn5M,GACpB,EAIAq5M,CAAiBtjF,GAAa,EC7BzBujF,GAAuB99M,IAChC,MAAM,MAAEwE,EAAK,SAAEuwG,GAAa/0G,EAI5B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,gEAAiEwf,SAHxFjpH,IACrBA,EAAEw1H,iBAAiB,GAGnB,gBAAoB,MAAO,CAAE/rB,UAAW,8BACpC,gBAAoBw1G,GAAiB,CAAEj5M,MAAOA,EAAOuwG,SAAUA,KAAc,ECM5EgpG,GAAuB/9M,IAChC,MAAM,OAAEoiG,EAAM,oBAAE47G,EAAmB,QAAEjzG,EAAO,SAAEgK,EAAQ,iBAAEz2F,EAAgB,WAAE4e,GAAel9B,EACnF8uF,GAAO,EAAAC,GAAA,KACPtvC,EAAmBmqC,GAAqBp3B,IACxCkvF,EAAiB93D,GAAqBxhC,IACtClnD,EAAW0oF,GAAqBz5B,IAChC8tJ,GAAmB,IAAAzxM,UAAQ,IAAM0xM,GAAuB5/L,EAAkB4e,EAAYh8B,EAAUu+C,EAAkBiiG,EAAgB5yD,IAAO,CAACxwE,EAAkB4e,EAAYh8B,EAAUu+C,EAAkBiiG,EAAgB5yD,IAC1N,OAAOsT,EAAU,gBAAoB,MAAO,CAAE6F,UAAW,sCACrD,gBAAoBsjC,GAAA,EAAS,CAAEjnB,qBAAqB,EAAMmnB,eAAe,EAAMjnB,QAAS,IAAIw5F,IAAuBjzG,QAASA,GACxH,gBAAoB+yG,GAAqB,CAAEt5M,MAAOy5M,EAAkBlpG,SAAUA,MAAiB,IAAI,EAMlGmpG,GAAyB,CAAC5/L,EAAkB4e,EAAYh8B,EAAUi9M,EAAez8D,EAAgB5yD,KAC1G,MAAMsvH,EAA2C9/L,ELT1B/Y,OAAOmyH,IAAc/tH,OKU5C,OAAO2U,EAAiBrgB,KAAK6/B,IACzB,IAAIz5B,EAEJ,IADA,UAAW,SAAyBy5B,GAAkB,oEAClDysC,GAAsBzsC,GAAkB,CACxC,MAAQr1B,MAAO41M,GAAevgL,EAExBr1B,EAAQs0M,GADUl/K,GAA8BC,GACIZ,GAC1D,MAAO,CACHt4B,KAAMs4M,GAAUE,WAChB/hM,KAAmF,QAA5EhX,EAAKg6M,QAA+CA,EAAa51M,SAA0B,IAAPpE,EAAgBA,EAAK,OAChHy5B,kBACA1/B,GAAI,KAAU0/B,GAEtB,CACA,IAAI,SAAiBA,GAAkB,CACnC,MAAMwgL,EAAgBp9M,EAAS+E,IAAI63B,EAAgBghB,QAC7Cr2C,EAAQ61M,IAAiB,QAAaA,GAC5C,MAAO,CACH15M,KAAMs4M,GAAUziF,iBAChBp/G,KAAM5S,EACNq1B,kBACA1/B,GAAI,KAAU0/B,GAEtB,CACA,IAAI,SAAmBA,GAAkB,CACrC,MAAMr1B,EAAQq1B,EAAgBghB,OA/BhB,EAAC1jB,EAAc+iL,KACrC,MAAMj6M,EAAYi6M,EAAc14M,MAAMvB,GAAcupI,GAAevpI,EAAU1B,WAAY0B,EAAUzB,IAAK24B,KACxG,OAAOl3B,EAAYA,EAAUuE,MAAQ,IAAI,EA8B3B81M,CAAkBzgL,EAAgBghB,OAAQq/J,GAC1Cz8D,EACN,MAAO,CACH98I,KAAMs4M,GAAUviF,mBAChBt/G,KAAM5S,EACNq1B,kBACA1/B,GAAI,KAAU0/B,GAEtB,CACA,GAAI45F,GAAa55F,GAAkB,CAC/B,MAAM0gL,EAAmB3gL,GAA8BC,GACjDw/K,GAAiB,SAAqBx/K,EAAgBC,SAAWqgL,EAAmB,EACpFrB,GAA2ByB,EAAkBthL,QAC7Cj5B,EACN,MAAO,CACHW,KAAMs4M,GAAUpiF,aAChBz/G,KAAMyzE,EAAKj/D,cAAc,CAAEzxB,GAAI,oCAC/B0/B,kBACAw/K,iBACAl/M,GAAI,KAAU0/B,GAEtB,CACA,MAAM2gL,EAAsB3gL,EAC5B,MAAM,IAAI,MAAmB,+BAA+B5hB,KAAKE,UAAUqiM,KAAuB,GACpG,EC9EOC,GAAW,EAAGjhJ,YAAWF,UAAS4tB,eAAgB,CAAC,IACrDI,GAA8B,CACjCL,eAAgBzsE,GAChB+sE,aAAc,8BACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCPKwzH,GAAe,EAAGlhJ,YAAWF,UAAS4tB,eAAgB,CAAC,IACzDI,GAA8B,CACjCL,eAAgBmO,GAChB7N,aAAc,yCACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCPKyzH,GAAoB,EAAGnhJ,YAAWF,UAAS4tB,eAAgB,CAAC,IAC9DI,GAA8B,CACjCL,eAAgBoO,GAChB9N,aAAc,+CACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCPK0zH,GAAsB,EAAGphJ,YAAWF,UAAS4tB,eAAgB,CAAC,IAChEI,GAA8B,CACjCL,eAAgBqO,GAChB/N,aAAc,iDACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCPK2zH,GAAyB,EAAGrhJ,YAAWF,UAAS4tB,eAAiB,CAAC,IACpEI,GAA8B,CACjCL,eAAgBuO,GAChBjO,aAAc,qDACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCPK4zH,GAAsB,EAAGthJ,YAAWF,UAAS4tB,eAAgB,CAAC,IAChEI,GAA8B,CACjCL,eAAgBsO,GAChBhO,aAAc,kDACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCPK6zH,GAA4B,EAAGvhJ,YAAWF,UAAS4tB,eAAiB,CAAC,IACvEI,GAA8B,CACjCL,eAAgBwO,GAChBlO,aAAc,wDACdC,WAAY,8BACZhuB,YACAF,UACA4tB,gBCED,SAAS8zH,IAAgB,UAAE9gM,EAAS,SAAE5R,EAAQ,QAAE2U,EAAO,mBAAEg+L,EAAkB,wBAAEC,EAAuB,0BAAEC,EAAyB,6BAAEC,EAA4B,0BAAEC,EAAyB,QAAE/hJ,IAC7L,MAAQpwD,QAASoyM,IAAkB,IAAAtyM,SAAO,WACnCuyM,EAAeC,IAAoB,IAAAz1H,UAAS,OAC5CoY,EAAQM,IAAa,IAAA1Y,WAAS,GAC/B35D,EAASu5D,GAAqBz+B,IAC9B/zB,EAAuBwyD,GAAqB59B,IAC5C5tB,EAAmBwrD,GAAqB3kC,GAAmB9mC,IAC3DI,ECXH,UAAmB,QAAEi3H,EAAO,eAAEkqE,EAAc,aAAEC,EAAY,YAEjEC,EAAW,mBAAEV,EAAkB,iBAAEW,EAAgB,iBAEjDC,EAAgB,wBAAEX,EAAuB,sBAAEY,EAAqB,mBAEhEC,EAAkB,0BAAEZ,EAAyB,wBAAEa,EAAuB,sBAEtEC,EAAqB,6BAAEb,EAA4B,2BAAEc,EAA0B,mBAE/EC,EAAkB,0BAAEd,EAAyB,wBAAEe,EAAuB,yBAEtEC,EAAwB,gCAAEC,EAA+B,8BAAEC,EAA6B,QAExFjjJ,IAoCI,MAAO,CACH9+C,MApCUigM,GAAS,CACnBvzH,YAAaqqD,EACb/3E,UAAWiiJ,EACXniJ,QAASoiJ,QAAmDA,EAAepiJ,IAkC3E87B,UAhCcslH,GAAa,CAC3BxzH,YAAay0H,EACbniJ,UAAWyhJ,EACX3hJ,QAASsiJ,QAA2DA,EAAmBtiJ,IA8BvF+7B,eA5BmBslH,GAAkB,CACrCzzH,YAAa20H,EACbriJ,UAAW0hJ,EACX5hJ,QAASwiJ,QAAqEA,EAAwBxiJ,IA0BtGg8B,iBAxBqBslH,GAAoB,CACzC1zH,YAAa60H,EACbviJ,UAAW2hJ,EACX7hJ,QAAS0iJ,QAAyEA,EAA0B1iJ,IAsB5Gk8B,oBApBwBqlH,GAAuB,CAC/C3zH,YAAa+0H,EACbziJ,UAAW4hJ,EACX9hJ,QAAS4iJ,QAA+EA,EAA6B5iJ,IAkBrHi8B,iBAhBqBulH,GAAoB,CACzC5zH,YAAai1H,EACb3iJ,UAAW6hJ,EACX/hJ,QAAS8iJ,QAAyEA,EAA0B9iJ,IAc5Gm8B,uBAZ2BslH,GAA0B,CACrD7zH,YAAam1H,EACb7iJ,UAAW8iJ,EACXhjJ,QAASijJ,QAAqFA,EAAgCjjJ,IAWtI,CDhDmBkjJ,CAAU,CACrBf,eAAiB/zK,IACb,GAAIvU,GAAyE,IAAjDuU,EAAE79B,QAAQovB,WAAW5e,iBAAiB3U,OAC9D,OAEJ,MAAM2U,EAAmBqtB,EAAE79B,QAAQovB,WAAW5e,iBACxC4e,EAAayO,EAAE79B,QAAQovB,WACvBkqD,EAAUz7C,EAAE79B,QAAQqvB,aACpBujL,EbEX,SAA4CpiM,EAAkB8f,EAAmB,IAIpF,MAAMuiL,EAAyB,KAASriM,EAAkB,MACpDsiM,EAAoC,KAAQD,EAAuB1iN,KAAKwgB,IAC1E,KAAK,SAAyBA,IAAU0f,GAAkB1f,EAAO2f,GAC7D,OAAOP,GAA8Bpf,EACzC,KAEJ,OAAOkiM,EAAuBp7M,QAAQkZ,MAC9B,SAAyBA,MAGxB0f,GAAkB1f,EAAO2f,KAClBwiL,EAAkCtyL,SAASuP,GAA8Bpf,KAI7F,CarBuCoiM,CAAmCviM,EAAkB8f,GAC9C,IAA9BsiL,EAAmB/2M,OACnBorG,EAAS2rG,EAAmB,GAAIxjL,EAAYyO,EAAE99B,cAAeu5E,GAExDs5H,EAAmB/2M,OAAS,IACjC81M,EAAiB,CACbnhM,iBAAkBoiM,EAClBxjL,WAAYA,EACZC,aAAciqD,EACdv5E,cAAe89B,EAAE99B,gBAErB60F,GAAU,GACd,EAEJw8G,qBACAC,0BACAC,4BACAC,+BACAC,4BACA/hJ,QAAU/+D,GAAM++D,aAAyC,EAASA,EAAQ/+D,EAAEsP,QAAQlB,SAElFmoG,GAAW,IAAA3pB,cAAY,CAACttD,EAAiBZ,EAAYrvB,EAAesvB,KACtE,IAAI94B,EACJ,MAAMy8M,EAAsB5jL,QAA+CA,EAAasiL,aAAqD,EAASA,EAActiL,WAC9J6jL,EAAyBlzM,QAAqDA,EAAgB2xM,aAAqD,EAASA,EAAc3xM,cAC1KmzM,EAA+G,QAA3F38M,EAAK84B,aAAmD,EAASA,EAAajc,eAA4B,IAAP7c,EAAgBA,EAAK6c,EAC9I4/L,IACIv2I,GAAsBzsC,GACtBvf,EAAO86E,UAAUjQ,IAAI43H,EAAkBljL,EAAiBgjL,EAAqBC,IAExE,SAAiBjjL,GACtBvf,EAAO+6E,eAAelQ,IAAItrD,EAAiBgjL,EAAqBC,IAE3D,SAAmBjjL,GACxBvf,EAAOg7E,iBAAiBnQ,IAAItrD,EAAiBgjL,EAAqBC,IAE7D,SAAsBjjL,GAC3Bvf,EAAOk7E,oBAAoBrQ,IAAItrD,EAAiBgjL,EAAqBC,IAEhE,SAAmBjjL,IACxBvf,EAAOi7E,iBAAiBpQ,IAAItrD,EAAiBgjL,EAAqBC,GAEtEtB,EAAiB,MACjB/8G,GAAU,GACd,GACD,CAAC88G,EAAet+L,IAIb88L,EAAsB,kBAAkBuB,IACxC0B,EAAoBzB,EAAiB,gBAAoB5yG,GAAa,CAAEv8E,OAAQA,GAClF,gBAAoB0tL,GAAqBn/M,OAAOiI,OAAO,CAAC,EAAG24M,EAAe,CAAExB,oBAAqBA,EAAqB57G,OAAQA,EAAQ2I,QAL1H,KACZrI,GAAU,EAAM,EAIwIqS,SAAUA,MAAiB,KACvL,OAAQ,gBAAoB,MAAO,CAAE9M,UAAW,KAAG,8BAA+B+1G,IAC9EzxM,EAAS,CAAEipI,QAASj3H,EAAOE,MAAM2qE,MACjC63H,EACR,C,2BE3EO,MAAMC,GAAwClhN,IACjD,MAAM,OAAEoE,EAAM,QAAE8c,GAAYlhB,EACtBoB,EAAWwoF,GAAqB1+B,IACtC,OAAO,IAAA1+C,UAAQ,KACX,IAAInI,EACJ,IAAK6c,EACD,OAAOA,EAEX,MAAMigM,EAAa/8M,EAAOwc,WAC1B,IAAKugM,EACD,OAAOjgM,EAEX,MAAMkgM,EAA+BxiN,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGs6M,GAAa,CAAE5wE,SAAU3xI,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGs6M,aAA+C,EAASA,EAAW5wE,UAAW,CAEpMC,eAAgBpvI,EAASk5H,mBAA2G,QAAtFj2H,EAAK88M,aAA+C,EAASA,EAAW5wE,gBAA6B,IAAPlsI,OAAgB,EAASA,EAAGmsI,kBAC1K6wE,GAAc,QAAkBngM,GAChCuX,EAAS,KAAU,CAAC,EAAG4oL,EAAaD,GAA8B,CAACh3E,EAAck3E,KAKnF,GAAI,KAAQl3E,GACR,OAAOk3E,CACX,IAGJ,OAAO,QAAqBpgM,EAASuX,EAAO,GAC7C,CAACvX,EAAS9c,EAAOwc,WAAYxf,GAAU,EChBvC,SAASmgN,GAAiBn9M,EAAQ8c,GACrC,MAAOsgM,EAAuBC,IAA4B,IAAAz3H,UAAS,CAC/D7iF,QAAS,GACTu6M,kBAAmB,aAEf/0M,OAAQg1M,EAAyB/0M,MAAOg1M,EAAwBl6M,OAAQm6M,GAqDpF,SAA8Bz9M,GAC1B,MAAM+gD,EAAmBykC,GAAqB3oC,IACxCmG,EAAewiC,GAAqBnjC,IACpCq7J,IAA4B19M,aAAuC,EAASA,EAAOud,cAElFogM,EAAuBC,IAA4B,IAAAh4H,UAAS,CAC/Di4H,qBAAsB,GACtBC,uBAAwB,aAStB,IAAE94H,EAAG,MAAEx8E,GAAUk/E,GAA4B,CAC/CC,aAAc5hB,GACd1M,UAAY/1D,IACRs6M,GAA0BG,IAUf,CACHD,uBAAwB,UACxBD,qBARK,KAAQE,EAAUF,qBAAsBv6M,GAGtCy6M,EAAUF,qBAFNv6M,EAAOzJ,IAAI,SAS5B,EAENktF,YAAa,KACT62H,EAAyB,CACrBC,qBAAsB,GACtBC,uBAAwB,WAC1B,EAENl2H,WAAY,KACRg2H,EAAyB,CACrBC,qBAAsB,GACtBC,uBAAwB,YAC1B,EAEN3kJ,QAAS,KACLykJ,EAAyB,CACrBC,qBAAsB,GACtBC,uBAAwB,SAC1B,KAGV,IAAAh1M,YAAU,MACF9I,aAAuC,EAASA,EAAO3B,MAEvD2mF,EAAIhlF,EAAO3B,IAAK,KACpB,GACD,CACC+4G,GAAoBp3G,aAAuC,EAASA,EAAO3B,KAC3E,KAAU2B,aAAuC,EAASA,EAAO+a,wBACjEijM,GAAcj9J,EAAkB28J,EAAyB16J,KAE7D,MAAMy6J,GAAoB,IAAAr1M,UAAQ,IAAM24C,EAAiB5/C,QAAQA,IACzD,OAA2BA,GACpBw8M,EAAsBE,qBAAqBjwL,MAAMqwL,IAAa,QAAgBA,EAAU98M,EAAOoT,gBAAgBQ,gBAG9G2oM,KAEZ,CAAC38J,EAAkB48J,EAAsBE,qBAAsBH,IACnE,MAAO,CACHl1M,QACAD,OAAQo1M,EAAsBG,uBAC9Bx6M,OAAQm6M,EAEhB,CAlI2GS,CAAqBl+M,IACpHglF,IAAKm5H,EAAe,MAAE31M,GAAUk/E,GAA4B,CAChEC,aAAc5hB,GACd1M,UAAYt2D,IACRs6M,EAAyB,CACrBt6M,UACAu6M,kBAAmB,WACrB,EAENv2H,YAAa,KACTs2H,EAAyB,CACrBt6M,QAAS,GACTu6M,kBAAmB,WACrB,EAEN11H,WAAY,KACRy1H,EAAyB,CACrBt6M,QAAS,GACTu6M,kBAAmB,YACrB,EAENnkJ,QAAS,KACLkkJ,EAAyB,CACrBt6M,QAAS,GACTu6M,kBAAmB,SACrB,IA2Kd,IAA2Bv6M,EA3Daq7M,EAAaC,EA/FjD,OAbA,IAAAv1M,YAAU,MACD9I,aAAuC,EAASA,EAAO3B,MAAoC,YAA5Bk/M,GAChEY,EAAgBn+M,EAAO3B,IAAKye,EAChC,GAGJ,CACIs6F,GAAoBp3G,aAAuC,EAASA,EAAO3B,MAgKxD0E,EA/JD06M,EAgKf16M,EACFlJ,KAAKsH,GAAW,KAAUA,KAC1Bi4E,OACAp6E,KAAK,MAlKN8d,EACAygM,EACAv9M,aAAuC,EAASA,EAAOud,cAEpD,CACHja,OAAQ85M,EAAsBr6M,QAC9BwF,QA6FgC61M,EA7FOb,EA6FMc,EA7FmBjB,EAAsBE,kBA8FtE,UAAhBc,GAA2C,aAAhBA,GAA8C,YAAhBA,EAClDA,EAEJC,GAhGH71M,MAAOg1M,QAAuEA,EAAyBh1M,EAE/G,CA6GA,SAASw1M,GAAcj7M,EAASu7M,EAAkBt7J,GAC9C,OAAOjgD,EACF5B,QAAQA,IACL,OAA2BA,KAQZA,EAAOoT,gBAAgBiB,oBAClC,QAAyBrU,EAAOoT,gBAAgBe,oBACjC0tC,IAMXs7J,IAGXzkN,KAAKsH,IACC,OAA2BA,GAC5B,MAAMi2G,GAAoBj2G,EAAOoT,gBAAgBQ,eACjD,MAAMqiG,GAAoBj2G,EAAOsT,WAAWlS,aAEjD62E,OACAp6E,KAAK,IACd,C,gBC1MO,MCJD,GAAoB,CAAC,CAAE6oG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KACnDy2G,GAAsB,EAAG16G,YAAWgU,WAAU14G,UAC/C,gBAAoBioG,GAAA,GAAoB,KAC5C,gBAAoB,MAAO,CAAEvD,UAAW,mBAAmBA,MAC3D,gBAAoB8D,GAAA,GAAQ,CAAEC,YAAa,IACvC,gBAAoB,KAAkB,CAAE5tG,GAAI69G,IAC5C,gBAAoB,KAAM,MAC1B,gBAAoB,KAAkB,CAAE79G,GAAImF,MCTlDq/M,GAAuB,CACzBvhM,OAAQ,OACRD,MAAO,QAEEyhM,GAAiB,EAAGt2M,cACrB,gBAAoB,MAAO,CAAE07F,UAAW,2BAA4BI,MAAOu6G,IAC/E,gBAAoB,MAAO,CAAE36G,UAAW,cACpC,gBAAoB,MAAO,CAAEI,MAAOu6G,IAAwBr2M,KCH3Du2M,GAAwB,EAAGC,iBAC5B,gBAAoBF,GAAgB,KAAME,EAAe,gBAAoB,MAAO,CAAE96G,UAAW,mCACrG,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,kDAAmD4oH,QAAS,UAC5G,gBAAoB6L,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,8CAA+C4oH,QAAS,WAAgB,gBAAoB27F,GAAqB,CAAE16G,UAAW,kBAAmBgU,SAAU,kDAAmD14G,KAAM,iDCL/Py/M,GAAoB,EAAGD,iBACxB,gBAAoBF,GAAgB,KAAME,EAAe,gBAAoB,MAAO,CAAE96G,UAAW,gCACrG,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,sCAAuC4oH,QAAS,UAChG,gBAAoB6L,GAAA,EAAY,CAAE7L,QAAS,KACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,kCAAmC4oH,QAAS,WAAgB,gBAAoB27F,GAAqB,CAAE16G,UAAW,eAAgBgU,SAAU,sCAAuC14G,KAAM,qCCP3O,GAAoB,CAAC,CAAE0oG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KACnD+2G,GAAc,EAAGF,iBAClB,gBAAoB,MAAO,CAAE96G,UAAW,gDAC5C,gBAAoB,MAAO,CAAEA,UAAW,+BAAiC86G,EAAe,gBAAoB,WAAgB,KACxH,gBAAoB,MAAO,CAAE96G,UAAW,0BACxC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,+BAAgC4oH,QAAS,WAAgB,gBAAoBxb,GAAA,GAAoB,KACjJ,gBAAoB,MAAO,CAAEvD,UAAW,0BACxC,gBAAoB8D,GAAA,GAAQ,CAAEC,YAAa,IACvC,gBAAoB,KAAkB,CAAE5tG,GAAI,+BAAgC4oH,QAAS,aCPxFk8F,GAAa,EAAGH,iBACjB,gBAAoBF,GAAgB,KAAME,EAAe,gBAAoB,MAAO,CAAE96G,UAAW,mCACrG,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,+BAAgC4oH,QAAS,UACzF,gBAAoB6L,GAAA,EAAY,CAAE7L,QAAS,KACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,2BAA4B4oH,QAAS,WAAgB,gBAAoB27F,GAAqB,CAAE16G,UAAW,kBAAmBgU,SAAU,+BAAgC14G,KAAM,8BCHzN4/M,GAAc,EAAGv2M,QAAOyU,SAAQD,QAAOgiM,8BAA6BC,uBAC7E,MAAMN,EAAcM,IAAqBD,GCNN,EAAC/hM,EAAQD,KAC5C,IAAKC,IAAWD,EACZ,OAAO,EAEX,MAAMkiM,EAAUr7M,KAAKC,IAAIkZ,EAAOC,GAC1BkiM,EAASt7M,KAAKuZ,IAAIJ,EAAOC,GAC/B,OAAOiiM,GAPkB,KAOiBC,GARlB,GAQ+C,EDAAC,CAAwBniM,EAAQD,GACvG,OAAI,SAAkBxU,GACX,gBAAoBk2M,GAAuB,CAAEC,YAAaA,KAE5D,SAAwBn2M,KAAU,SAAwBA,GACxD,gBAAoBo2M,GAAmB,CAAED,YAAaA,KAExD,SAAiBn2M,GACf,gBAAoBq2M,GAAa,CAAEF,YAAaA,IAElDn2M,EACE,gBAAoBs2M,GAAY,CAAEH,YAAaA,IAEnD,IAAI,EEhBFU,GAAezjN,IACxB,MAAM,QAAEkhB,EAAO,OAAE9c,GAAWpE,GACtB,6BAAEwjG,GAAiCwB,KACnC0+G,GAAoB,IAAAl3M,UAAQ,IAAMg3F,EAA6BtiF,EAAS9c,IAAS,CAACo/F,EAA8BtiF,EAAS9c,IAC/H,OAAO,gBAAoBs/M,EAAmB9kN,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECOrE2jN,IAAoC,KAAAtuK,gBAAe,CAAC8V,GAAcD,GAAgBG,KAAqB,CAACh7B,EAAQjvB,EAAU8zB,KAAiB,CAC7I7E,SACAjvB,WACA8zB,mBAEE0uL,IAAoB,KAAAvuK,gBAAe,CAACkW,GAAmBH,GAAkBswC,GAAsB5vC,GAAgBrF,KAAqB,CAACtwB,EAAa/C,EAAY26C,EAAgB81I,EAAcz8J,KAAiB,CAC/MjxB,cACA/C,aACA0wL,0BAA2B/1I,aAAuD,EAASA,EAAepkE,QAC1Gk6M,eACAz8J,mBAKS,GAAoBpnD,IAC7B,IAAIqE,EACJ,MAAM,QAAE6c,EAAO,OAAE9c,EAAM,aAAEk5G,EAAY,YAAED,EAAW,QAAEr+G,EAAO,UAAEuB,EAAS,QAAEg9D,EAASi4E,QAASuuE,EAAS,iBAAE91H,EAAgB,cAAEg3B,EAAe7hB,eAAgB4gH,EAAsB3gH,iBAAkB4gH,GAA4BjkN,EACpNyC,GAAM,QAAU2B,IAEhB,eAAEg/F,EAAc,iBAAEC,GAAqB2B,GAA8B,CACvE5B,eAAgB4gH,EAChB3gH,iBAAkB4gH,IAGhBhxE,GAAmB,QAAiBj0I,GACpCo3J,GAAqB,QAAmB71J,GACxC2jN,EAAoBv2H,GAA2BlrF,IAE/C,OAAE4tB,EAAM,SAAEjvB,EAAQ,aAAE8zB,GAAiB00D,GAAqB+5H,KAC1D,2BAAEzzK,GAA+B05C,GAAqB1+B,IACtD9D,EAAewiC,GAAqBnjC,IACpC09J,EAAcv6H,GAAqBg6H,KAElCQ,EAAwBC,IAA6B,IAAAr6H,WAAS,IAC9Ds6H,EAAoBC,IAAyB,IAAAv6H,aAC9C,qBAAEmD,EAAoB,qBAAEC,GAAyBJ,IAAwB,EAAA3iF,EAAA,IAAe5H,IACxF+hN,GAAuB,IAAAp5H,cAAY,EAAGznC,gBACpCA,GACAwpC,IAEAo3H,OAAsBtgN,IAGtBmpF,IAEJ82H,EAAkBj2H,iBAAiB,CAAEtqC,cACrC0gK,EAA0B1gK,GAC1BsqC,SAAoEA,EAAiB,CAAEtqC,aAAY,GACpG,CAACsqC,EAAkBi2H,EAAkBj2H,oBAEhCvmF,OAAQ+8M,EAAmB93M,OAAQ+3M,EAAe93M,MAAO+3M,GAAkBpD,GAAiBn9M,EAAQ8c,GACtG0jM,GAA0B,IAAAp4M,UAAQ,KAAM,QAAkB0U,EAASujM,IAAoB,CACzFvjM,EAMA,KAAUujM,KAERI,EAAmC3D,GAAqC,CAC1EhgM,QAAS0jM,QAAyEA,EAA0B1jM,EAC5G9c,YAEE,eAAE2pE,EAAc,QAAEynE,EAAO,WAAEznD,GV1EI,GAAG3pF,SAAQ8c,UAASs0H,QAASuuE,MAClE,MAAMx7H,EAAWoB,KACXz3B,EAAe03B,GAAqBr3B,GAA8BnuD,EAAO3B,MACzEqiN,EAA8Bl7H,GAAqBj8B,IACnDogC,GAAa,IAAA3C,cAAanqE,IAC5B,MAAMmxC,EAgCwB,EAACp+C,EAAuB8wM,IAGrD9wM,EAIE8wM,EACD9wM,EACApV,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmN,GAAwB,CAAEnT,gBAAYoD,IALjE+P,EApCS+wM,CAA8B9jM,aAAmC,EAASA,EAAKjN,sBAAuB8wM,GAClH1yJ,IAAY,KAAQF,aAAmD,EAASA,EAAal+C,sBAAuBo+C,IACpHm2B,EAASna,GAAgBhqE,EAAO3B,IAAK2vD,GACzC,GACD,CAACF,EAAc9tD,EAAO3B,IAAKqiN,EAA6Bv8H,IACrDnhC,EAAewiC,GAAqBnjC,IACpCu+J,EAAoBp7H,GAAqB8T,GAAgCt5F,EAAO3B,MAChFsrE,GAAiB,IAAAvhE,UAAQ,IACpB46C,EAAe,GAAK49J,GAC5B,CAAC59J,EAAc49J,IACZC,EAA2Br7H,GAAqB2T,GAA6Cn5F,EAAO3B,MACpG+yI,EAAUuuE,EACT/uM,IACC,MAAMm4B,EAAS,SAAmBn4B,EAAMg5E,UAClCk3H,EAAmCD,EAAyB1/M,QAAQmxH,IACtE,IAAIryH,EACJ,OAAkD,QAA1CA,EAAK2Q,EAAMmoB,aAAaC,oBAAiC,IAAP/4B,OAAgB,EAASA,EAAG2tB,MAAMoL,IAAiB,SAA6Bs5F,EAAKv6B,WAAY/+D,EAAa3xB,OAAQ0hC,IAAQ,IAEtLjQ,EAAat+B,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmO,GAAQ,CAAEmJ,UAAW/Z,EAAO3B,IAAK6b,iBAAkB4mM,EAAiCjnN,KAAKy4H,GAASA,EAAK54F,oBAC1J,MAA6B,mBAAdimL,GACXA,EAAU7mL,EAAY,CAClBhc,UACA9c,UACD,OAETH,EACN,MAAO,CACH8pE,iBACAggB,aACAynD,UACH,EUuC+C2vE,CAA0B,CACtE/gN,SACA8c,UACAs0H,QAASuuE,IAEPqB,EC7EH,SAAqChhN,EAAQ8c,GAChD,MAAMze,GAAM,QAAU2B,GAChBmkF,EAAWoB,KACXviC,EAAewiC,GAAqBnjC,IACpCy+D,GAAU,QAAyBhkG,GACzC,OAAO,IAAAkqE,cAAanqE,IAEZmmC,GAbZ,SAAqCxmC,GACjC,IAAIvc,EAGJ,SAAiG,QAAtFA,EAAKuc,aAA+C,EAASA,EAAW2vH,gBAA6B,IAAPlsI,OAAgB,EAASA,EAAGghN,aACzI,CAQ4BC,CAA4BrkM,EAAKL,aAA2B,UAAZskG,GAChE38B,EAAS3kB,GAAiCnhE,EAAKwe,EAAKL,YACxD,GACD,CAAC2nE,EAAU9lF,EAAKyiH,EAAS99D,GAChC,CDkEqCm+J,CAA4BnhN,EAAQ8c,GAC/DskM,GAAiB,IAAAp6H,cAAanqE,IAChC8sE,EAAW9sE,GACXijM,EAAkBn2H,WAAW9sE,GAC7BmkM,EAAyBnkM,EAAK,GAC/B,CAAC8sE,EAAYm2H,EAAkBn2H,WAAYq3H,IACxCK,EAAqBvkM,IACvB,QAAwBA,GAASoN,SAAS,aAC1C+uF,GACAA,ElwB5D+C,MkwB6D9CntE,EAEC4rJ,GAAc,IAAA1wG,cAAax+E,IAC7B23M,EAAsB33M,GACtB2wD,SAAkDA,EAAQ3wD,GAC1Ds3M,EAAkB3mJ,QAAQ3wD,EAAM,GACjC,CAAC2wD,EAAS2mJ,EAAkB3mJ,UACzBmoJ,EAAiBf,QAAmDA,EAAeL,EAEnFqB,GAAuB,IAAAn5M,UAAQ,KAC1B,CACH4U,MAAO,OACPC,OAAQ,OACRsmF,SAIA89G,EAAqB,WAAa,cAEvC,CAACA,IACEG,GAAsB,IAAAp5M,UAAQ,IACzB43M,GAA0BsB,EAAiB,CAAErkM,OAAQ,QAAMpd,GACnE,CAACmgN,EAAwBsB,IACtB3hJ,IAA0B,QAAkB8gJ,GAC5CgB,GAA2I,QAA7HxhN,EAAK0/D,cAAyE,EAASA,GAAwBwsE,gBAA6B,IAAPlsI,OAAgB,EAASA,EAAGmsI,YACrL,OAAQ,gBAAoB,MAAO,CAAEvoC,UAAW,KAAG,wBAAyB,CAAE,eAAgB7gD,KAC1F,gBAAoB,MAAO,CAAE6gD,UAAW,KAAG,2BAA4B,CAAE69G,SAAUD,KAAex9G,MAAOs9G,GACrG,gBAAoB/4G,GAAa,CAAEv8E,OAAQA,GACrB,YAAlBq0L,GAA+BN,EAAyB,gBAAoB/gH,EAAkB,MAAQ,KACtGqiH,EAAkB,gBAAoBvC,GAAa,CAAEv2M,MAAO84M,EAAgBtC,+BAAgChiN,aAA2C,EAASA,EAAS8uC,4BAA6B7uB,OAAQi8F,EAAcl8F,MAAOi8F,IAAkB,KACnO,YAAlBqnG,EAA+B,gBAAoB,MAAO,CAAEz8G,UAAW,6BAA8BI,MAAOu9G,GACxG,gBAAoBnC,GAAa,CAAEr/M,OAAQA,EAAQ8c,QAAS2jM,EAAkC7lN,QAASi0I,EAAkB1yI,UAAW61J,EAAoBroF,eAAgBA,EAAgBynE,QAASA,EAASn2I,OAAQ8kN,EAAal2H,iBAAkBu2H,EAAsBn0L,OAAQA,EAAQjvB,SAAUA,EAAU8zB,aAAcA,EAAcqoC,QAASu+H,EAAaiqB,SAAUP,EAAgBpiH,eAAgBA,EAAgBC,iBAAkBA,EAAkB4hB,cAAeA,KAAqB,OAAQ,EEzH9e+gG,GAAmChmN,IAC5C,MAAM,OAAEoE,EAAM,YAAEw7M,EAAW,iBAAEE,EAAgB,sBAAEI,EAAqB,mBAAEE,EAAkB,mBAAEJ,GAAwBhgN,EAClH,OAAQ,gBAAoBi/M,GAAiB,CAAE9gM,UAAW/Z,EAAO3B,IAAKye,QAASlhB,EAAMkhB,QAASg+L,mBAAoBU,EAAaT,wBAAyBW,EAAkBT,6BAA8Ba,EAAuBZ,0BAA2Bc,EAAoBhB,0BAA2BY,IAAsB,EAAGxqE,aACvT,gBAAoB,GAAkB52I,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEw1I,QAASA,MAClF,ECNDywE,GAAWjwC,IACAA,EACP,mEACA,0BACgB,0DAGpBkwC,IAA2B,KAAA7wK,gBAAe,CAACwW,GAAkBY,GAAuBE,KAAsC,CAAC11B,EAAYy1B,EAAiBE,IAAkC31B,GAAkC,SAApBy1B,GAA8BE,IAC/Nu5J,GAAkB,EAAGjqF,cAC9B,MAAM85C,EAAqBpsF,GAAqBjlB,IAC1CyhJ,EAAYx8H,GAAqBs8H,IACjCrhG,EAAkB14B,KACxB,OAAQ,gBAAoB,WAAgB,KAAMi6H,EAAa,gBAAoB,MAAO,CAAEn+G,UAAW,KAAG,6BAA8B,CAChI,mCAAoCi0B,EACpC,oCAAqCA,IACrCnsB,QAAS8U,EAAgBx4B,wBAC7B,gBAAoB,IAAK,CAAE4b,UAAW,KAAG,yBAA0B,CAC3D,+BAAgCi0B,EAChC,gCAAiCA,IACjCnsD,KAAMk2I,GAAQjwC,GAAqBl3H,OAAQ,SAAUwqF,IAAK,sBAAuB,aAAc,yBAA6B,KAAM,ECpB5I,GAAqB,CACvB,CACIr9B,MAAO,QACP1iG,OAAQ,CACJk0B,GAAI,GACJyuE,GAAI,KAUhB,GANgC,EAAGm6G,eAAcC,qBAAoB3kG,oBAAmBT,eAAcQ,mBAAkBT,iBAAmBolG,EAAgB,gBAAoB96E,GAAA,EAAS,CAAErlI,IAAK,wBAAyBs+G,QAAS,0BAA2BxY,YAAa,GAAoB/D,UAAW,sDAAuDqc,qBAAqB,EAAMvZ,QAASu7G,GAC/X,gBAAoB,MAAc,CAAEl+C,mBAAmB,GACnDzmD,EAAqB,gBAAoB,MAAM,CAAE5R,QAASmR,EAAcjZ,UAAW,0DAC/E,gBAAoB,KAAkB,CAAE7pG,GAAI,sCAA0C,KAC1FsjH,EAAoB,gBAAoB,MAAM,CAAE3R,QAASkR,EAAahZ,UAAW,wDAC7E,gBAAoB,KAAkB,CAAE7pG,GAAI,qCAAyC,OAAU,KCZrG,GAAoB,CAAC,CAAE6tG,MAAO,UACvBs6G,GAAmB,EAAGC,kBAAiB7kG,oBAAmBT,eAAcQ,mBAAkBT,cAAat9D,gBAChH,MAAO0iK,EAAcI,IAAmB,IAAAz8H,WAAS,GAC3Cs8H,GAAqB,IAAAl7H,cAAY,IAAMq7H,GAAiBvyF,IAAcA,KAAW,IACjFwyF,GAAqB,IAAAt7H,cAAY,KACnC81B,IACAulG,GAAgB,EAAM,GACvB,CAACvlG,IACEylG,GAAoB,IAAAv7H,cAAY,KAClC61B,IACAwlG,GAAgB,EAAM,GACvB,CAACxlG,IACE2lG,GAAkBJ,IAAqB7kG,IAAsBD,EAC7DmlG,GAAe,IAAAr6M,UAAQ,IAAO,gBAAoB,SAAU,CAAEujG,QAASu2G,EAAoBr+G,UAAW,KAAG,6EAA8E,CACrLia,SAAU0kG,IACVhiN,KAAM,UACV,gBAAoB,OAAQ,CAAEqjG,UAAW,kBACrC,gBAAoB,KAAkB,CAAE7pG,GAAI,6BAA+B,CAACwoN,EAAgBN,IACpG,OAAQ,gBAAoB,MAAO,CAAEr+G,UAAW,KAAG,kDAAmD,CAC9F,cAAe2+G,KACbA,IAAmBjjK,EAAa,gBAAoB6nD,GAAA,GAAoB,KAC9Eq7G,EACA,gBAAoB96G,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IACpE,gBAAoB,KAAkB,CAAE5tG,GAAI,kCAAuC,gBAAoB,WAAgB,KAC3HyoN,EACA,gBAAoB,GAAyB,CAAER,aAAcA,EAAcC,mBAAoBA,EAAoB3kG,kBAAmBA,EAAmBD,iBAAkBA,EAAkBR,aAAcwlG,EAAoBzlG,YAAa0lG,KAAwB,EC7BrQ,SAASG,GAAwBC,EAAcC,GAGlD,OAAO,KAAQ,CAACD,KAAiBC,IAAc5jN,KADvB,MAE5B,CCEA,MAAM,GAAqB,CAAC,CAAE6oG,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,MAC7D,GAAoB,CAAC,CAAED,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,EAAGyuE,GAAI,KACrD+6G,GAAc,EAAGF,eAAcC,cAAaE,gBAAeC,oBAAmBC,sBAAqB76M,WAAUi6M,kBAAiB7kG,oBAAmBD,mBAAkBT,cAAaC,eAAcv9D,gBACvM,MAAMviD,EAAWwoF,GAAqB1+B,IAChCgd,EAAY0hB,GAAqB7kB,IACjCsiJ,GAAkCjmN,aAA2C,EAASA,EAASkmN,6BAA+Bp/I,EAC9Hq/I,EAAuBT,GAAwBC,EAAcC,GACnE,OAAQ,gBAAoB,MAAO,CAAE/+G,UAAW,wDAC5C,gBAAoB,MAAO,CAAEA,UAAW,8EACpCm/G,EAAuB,gBAAoB57G,GAAA,GAAoB,KAC3D,gBAAoBwwB,GAAA,EAAQ,CAAE/zB,UAAW,wGAAyG8H,QAASo3G,IAC3J,gBAAoBp7G,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IACpE,gBAAoB,KAAkB,CAAE5tG,GAAI,uBAAwB4oH,QAAS,WAAe,KACpG,gBAAoB,MAAO,CAAE/e,UAAW,gCACpC,gBAAoByhB,GAAe,CAAE1C,QAAS,MAAOwD,mBAAoB,GAAoBD,2BAA2B,GAASg9F,IACrI,gBAAoBvrF,GAAA,EAAQ,CAAE/zB,UAAW,8FAA+F8H,QAASm3G,KACrJ,gBAAoB,MAAO,CAAEj/G,UAAW,+CACpC,gBAAoB,MAAO,CAAEA,UAAW,sCAAwC17F,IACpF86M,EAAkC,gBAAoB,MAAO,CAAEp/G,UAAW,qGACtE,gBAAoBs+G,GAAkB,CAAEC,gBAAiBA,EAAiB7kG,kBAAmBA,EAAmBD,iBAAkBA,EAAkBR,aAAcA,EAAcD,YAAaA,EAAat9D,UAAWA,KAAiB,KAC1O,gBAAoBwiK,GAAiB,CAAEjqF,SAAS,IAAS,EChB3DsrF,GAAe,CAAEpmM,MAAO,OAAQC,OAAQ,OAAQsmF,SAAU,WAAY2vC,KAAM,YAC5E,IAAoC,KAAAjiG,gBAAe,CAAC8V,GAAcD,GAAgBG,KAAqB,CAACh7B,EAAQjvB,EAAU8zB,KAAiB,CAC7I7E,SACAjvB,WACA8zB,mBAEE,IAAoB,KAAAmgB,gBAAe,CAACkW,GAAmBH,GAAkBswC,GAAsB5vC,KAAiB,CAAC31B,EAAa/C,EAAY26C,EAAgB72C,KAAa,CACzKf,cACA/C,aACA0wL,yBAA0B/1I,EAAepkE,OACzCk6M,aAAc3sL,MAKLuwL,GAAsBznN,IAC/B,MAAM,QAAEkhB,EAAO,OAAE9c,EAAM,QAAEpF,EAAO,UAAEuB,EAAS,QAAEg9D,EAASi4E,QAASuuE,EAAS,cAAE9+F,EAAa,iBAAEh3B,EAAgB,SAAE83H,EAAQ,eAAE3iH,EAAc,iBAAEC,GAAsBrjG,EAErJizI,GAAmB,QAAiBj0I,GACpCo3J,GAAqB,QAAmB71J,IAExC,OAAE8vB,EAAM,SAAEjvB,EAAQ,aAAE8zB,GAAiB00D,GAAqB,IAC1Du6H,EAAcv6H,GAAqB,KAElCw6H,EAAwBC,IAA6B,IAAAr6H,WAAS,IAC9Ds6H,EAAoBC,IAAyB,IAAAv6H,YAC9Cw6H,GAAuB,IAAAp5H,cAAY,EAAGznC,gBACxC0gK,EAA0B1gK,GAC1BsqC,SAAoEA,EAAiB,CAAEtqC,aAAY,GACpG,KAEKj8C,OAAQ+8M,EAAmB93M,OAAQ+3M,EAAe93M,MAAO+3M,GAAkBpD,GAAiBn9M,EAAQ8c,GACtG0jM,GAA0B,IAAAp4M,UAAQ,KAAM,QAAkB0U,EAASujM,IAAoB,CAACvjM,EAASujM,IACjGI,EAAmC3D,GAAqC,CAC1EhgM,QAAS0jM,QAAyEA,EAA0B1jM,EAC5G9c,YAEE,eAAE2pE,EAAc,QAAEynE,EAAO,WAAEznD,GCzCM,GAAG3pF,SAAQ8c,UAASs0H,QAASuuE,MAEpE,MAAO7xJ,EAAcw1J,IAAmB,IAAA19H,YAClC+D,GAAa,IAAA3C,cAAanqE,KACvBA,aAAmC,EAASA,EAAKjN,yBAA2B,KAAQk+C,EAAcjxC,EAAKjN,wBACxG0zM,EAAgBzmM,EAAKjN,sBACzB,GACD,CAACk+C,IACE+yJ,EAA2Br7H,GAAqBgU,GAA4C1rC,IAC5F6b,EAAiB6b,GAAqBiU,GAA4C3rC,IAClFsjF,EAAUuuE,EACT/uM,IACC,MAAMm4B,EAAS,SAAmBn4B,EAAMg5E,UAClCk3H,EAAmCD,EAAyB1/M,QAAQmxH,IACtE,IAAIryH,EACJ,OAAkD,QAA1CA,EAAK2Q,EAAMmoB,aAAaC,oBAAiC,IAAP/4B,OAAgB,EAASA,EAAG2tB,MAAMoL,IAAiB,SAA6Bs5F,EAAKv6B,WAAY/+D,EAAa3xB,OAAQ0hC,IAAQ,IAEtLjQ,EAAat+B,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGmO,GAAQ,CAAEmJ,UAAW/Z,EAAO3B,IAAK6b,iBAAkB4mM,EAAiCjnN,KAAKy4H,GAASA,EAAK54F,oBAC1J,MAA6B,mBAAdimL,GACXA,EAAU7mL,EAAY,CAClBhc,UACA9c,UACD,OAETH,EACN,MAAO,CACH8pE,iBACAggB,aACAynD,UACH,EDY+CmyE,CAA4B,CACxEvjN,SACA8c,QAAS0jM,QAAyEA,EAA0B1jM,EAC5Gs0H,QAASuuE,IAEPyB,GAAiB,IAAAp6H,cAAanqE,IAChC8sE,EAAW9sE,GACX8kM,SAAoDA,EAAS9kM,EAAK,GACnE,CAAC8sE,EAAYg4H,IAEVJ,GAAuB,IAAAn5M,UAAQ,KAC1B,CACH4U,MAAO,OACPC,OAAQ,OACRsmF,SAIAzmF,IAAW,QAAwBA,GAASoN,SAAS,YAAc,WAAa,cAErF,CAACpN,IAEE46K,GAAc,IAAA1wG,cAAax+E,IAC7B23M,EAAsB33M,GACtB2wD,SAAkDA,EAAQ3wD,EAAM,GACjE,CAAC2wD,IACEmoJ,EAAiBf,QAAmDA,EAAeL,EACnFsB,GAAsB,IAAAp5M,UAAQ,IACzB43M,GAA0BsB,EAAiB,CAAErkM,OAAQ,QAAMpd,GACnE,CAACmgN,EAAwBsB,IAC5B,OAAQ,gBAAoB,MAAO,CAAEr9G,MAAOm/G,IACxC,gBAAoB,MAAO,CAAEn/G,MAAOs9G,GAChC,gBAAoB/4G,GAAa,CAAEv8E,OAAQA,GACrB,YAAlBq0L,GAA+BN,EAAyB,gBAAoB/gH,EAAkB,MAAQ,KACtGqiH,EAAkB,gBAAoBvC,GAAa,CAAEv2M,MAAO84M,EAExDrC,kBAAkB,IAAW,KACf,YAAlBqB,EAA+B,gBAAoB,MAAO,CAAEz8G,UAAW,6BAA8BI,MAAOu9G,GACxG,gBAAoBnC,GAAa,CAAEr/M,OAAQA,EAAQ8c,QAAS2jM,EAAkC7lN,QAASi0I,EAAkB1yI,UAAW61J,EAAoBroF,eAAgBA,EAAgBynE,QAASA,EAASn2I,OAAQ8kN,EAAal2H,iBAAkBu2H,EAAsBn0L,OAAQA,EAAQjvB,SAAUA,EAAU8zB,aAAcA,EAAcqoC,QAASu+H,EAAa72E,cAAeA,EAAe8gG,SAAUP,EAAgBpiH,eAAgBA,EAAgBC,iBAAkBA,KAAwB,OAAQ,EElF9eukH,GAAyB,KAClC,IAAIvjN,EAAIswB,EACR,MAAM02E,GAAQ,WACd,OAAQ,gBAAoB,MAAO,CAAEpD,UAAW,6BAC5C,gBAAoB,MAAO,CAAEA,UAAW,kDACpC,gBAAoB83D,GAAA,EAAgB,CAAE93D,UAAW,qCAAsC0D,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGqrI,KACtQ,gBAAoB,KAAkB,CAAE5hK,GAAI,aAAe,ECKjE,GAAoBsjG,GAAkB41B,YAAY5P,IAClDmgG,GAAwB,CAC1B,0BACA,oBACA,4BACA,2BACA,IAAItoG,MAEFuoG,IAAmC,QAAM,qBAClCC,GAAsB/nN,IAC/B,MAAM,OAAEoE,EAAM,OAAEisB,EAAM,YAAE22L,EAAW,QAAE9lM,EAAO,QAAE6pF,EAAO,kBAAEo8G,EAAiB,YAAEvH,GAAgB5/M,EACpF0jH,GAAiB,EAAAC,GAAA,GAAc,iBAC9BhgE,EAAW2jF,IAAgB,IAAAt9C,WAAS,GACrCk6H,EAAoBv2H,GAA2Bm6H,KAC/C,eAAE1kH,EAAc,iBAAEC,GAAqB2B,GAA8B,CAKvE3B,iBAAkBukH,KAEhBpD,GAAuB,IAAAp5H,cAAY,EAAGznC,gBACxC2jF,EAAa3jF,GACbugK,EAAkBj2H,iBAAiB,CAAEtqC,aAAY,GAClD,IACGqkK,GAAmB,QAAa9mM,IAChC,iBAAEwgG,EAAgB,kBAAEC,EAAiB,YAAEV,EAAW,aAAEC,GAAiBhB,GAAiB,CACxFz3G,MAAOq+M,GAAwBkB,EAAkBhB,GACjD7oM,UAAW2pM,GACX5mM,YAEE+mM,EAAmBvkG,EAAiB4nB,GAAA,EAAoBC,GAAA,EAC9D,OAAQ,gBAAoB,MAA2B,CAAElU,kBAAmB,IACxE,gBAAoB4wF,EAAkB,CAAEhgH,UAAW,yBAA0BujC,SAAS,EAAMC,eAAe,EAAMnnB,qBAAqB,EAAM+I,sBAAuBw6F,GAAuB98G,QAASA,EAAS2gC,aAAc,SACtN,gBAAoB9+B,GAAa,CAAEv8E,OAAQA,GACvC,gBAAoB42L,GAAa,CAAEF,aAAciB,EAAkBZ,oBAAqBJ,EAAYr9M,OAAS,EAAGw9M,kBAAmBA,EAAmBD,cAAen8G,EAASi8G,YAAaA,EAAaR,gBAAiB7kG,GAAqBD,EAAkBC,kBAAmBA,EAAmBD,iBAAkBA,EAAkBR,aAAcA,EAAcD,YAAaA,EAAat9D,UAAWA,GACvY,gBAAoBs7J,GAAiB,CAAE9gM,UAAW/Z,EAAO3B,IAAKye,QAASlhB,EAAMkhB,QAASg+L,mBAAoBU,IAAe,EAAGpqE,aAChH,gBAAoBiyE,GAAoB7oN,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEw1I,QAASA,EAASvnD,iBAAkBu2H,EAAsBjnJ,QAAS2mJ,EAAkB3mJ,QAASwoJ,SAAU7B,EAAkBn2H,WAAYqV,eAAgBA,EAAgBC,iBAAkBA,UAChQ,EC1Cd6kH,GAAmCloN,IAC5C,MAAOmoN,EAAYC,IAAiB,IAAAp+H,UAAS,IACvCq+H,EAAkB,KAAKF,GACvBjnM,EAAUmnM,aAAyD,EAASA,EAAgBnnM,QAC5F9c,EAASpE,EAAMoE,OACf4iN,GAAc,IAAAx6M,UAAQ,IAAM27M,EAC7B5iN,QAAQomC,GAAM4+B,GAAsB5+B,EAAE7N,mBACtC7/B,KAAK0tC,IACN,IAAItnC,EACJ,OAA6G,QAArGA,EAAK04M,GAA2Bl/K,GAA8B8N,EAAE7N,iBAAkB6N,EAAEzO,mBAAgC,IAAP74B,EAAgBA,EAAK,MAAM,KAChJ,CAAC8jN,IACC93L,EAASu5D,GAAqBz+B,IAC9Bm9J,GAAmB,IAAAl9H,cAAam9H,IAClCH,GAAez8K,GAAM,IAAIA,EAAG48K,IAAW,GACxC,IACGC,GAAS,IAAAp9H,cAAY,IAAMg9H,GAAc,EAAEK,KAAgB,CAACA,MAAc,IAC1E19G,GAAU,IAAA3f,cAAY,IAAMg9H,EAAc,KAAK,IAC/CxI,GAAc,IAAAx0H,cAAa2V,GAAQunH,EAAiBvnH,EAAIjzF,UAAU,CAACw6M,IACnExI,GAAmB,IAAA10H,cAAa2V,GAAQunH,EAAiBvnH,EAAIjzF,UAAU,CAACw6M,IAC9E,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBtC,GAAiCpnN,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAE4/M,YAAaA,EAAaE,iBAAkBA,KAC5HuI,EAAmB,gBAAoBN,GAAoB,CAAE13L,OAAQA,EAAQ22L,YAAaA,EAAa5iN,OAAQA,EAAQ8c,QAASA,EAAS0+L,YAAaA,EAAauH,kBAAmBqB,EAAQz9G,QAASA,IAAc,KAAM,ECxBtN29G,GAA0BnnH,GAAgB,CACnDwxC,KCJqC/yI,GAC9B,gBAAoBkoN,GAAiCtpN,OAAOiI,OAAO,CAAC,EAAG7G,IDI9Eu0H,KELqCv0H,GAC9B,gBAAoB,GAAkBpB,OAAOiI,OAAO,CAAC,EAAG7G,M,gBCC5D,MAAM2oN,GAAsB3oN,GACxB,gBAAoB4oN,GAAA,EAAiBhqN,OAAOiI,OAAO,CAAC,EAAG7G,ICJrD6oN,GAA8B7oN,IACvC,MAAM,OAAEoiG,EAAM,MAAE59F,EAAK,OAAEJ,EAAM,QAAE2rG,GAAY/vG,EACrC64K,GAAoB,IAAAztF,cAAY,KAClC2kB,GAAS,GACV,CAACA,IACJ,IAAKvrG,EAAMmF,OACP,OAAO,KAEX,MAAMi7G,GAAoB,EAAAv6G,EAAA,KAAe,QAAUjG,IAC7C0kN,EAAqB,KAAG,2BAA4B,kCAAmC,oCAAqC,mCAAmC/jG,GAAA,GAAyBH,KAAsB,qCAAqCG,GAAA,GAAyBH,KAAsB,CACpS,yCAA0CxiB,IAE9C,OAAQ,gBAAoB,MAAO,CAAE6F,UAAW,8DAA+D8H,QAAS8oE,GACpH,gBAAoB,MAAO,CAAE5wE,UAAW6gH,IAAuB,ECZ1DC,GAAqC/oN,GACvC,gBAAoB6oN,GAA4BjqN,OAAOiI,OAAO,CAAC,EAAG7G,ICCvEgpN,GAAwB,CAAC,WAAY,QAIrC,GAAoB,CAAC,CAAE/8G,MAAO,SAAW,CAAEA,MAAO,UCL3Cg9G,GAAmC1nH,GAAgB,CAC5DwxC,KDKmC,EAAGhjC,UAAS3rG,SAAQ8c,UAASkhF,aAChE,MAAMtT,GAAO,EAAAC,GAAA,KACPm6H,GAAqB,IAAA99H,cAAY,KACnC2kB,GAAS,GACV,CAACA,IACE3uG,EAAWwoF,GAAqB1+B,IAChC8Z,EAAmB4kB,GAAqB7kB,IACxCokJ,EAAoB/nN,EAASsmE,yBAC7B0hJ,EAA6BpkJ,EAE7BqkJ,GAdyBnkG,GAaf,QAAyBhkG,IAZjC8nM,GAAsB16L,SAAS42F,IAD3C,IAAmCA,EAgB/B,KADwBikG,GAAqBC,GAA8BC,GAEvE,OAAO,KAEX,MAAMC,GAAiB,QAAUllN,GAC3BmlN,EAAiBD,GAAiB,EAAAj/M,EAAA,IAAei/M,GAAkB,GACnER,EAAqB,KAAG,2BAA4B,6BAA8B,4BAA4B/jG,GAAA,GAAyBwkG,KAAmB,8BAA8BxkG,GAAA,GAAyBwkG,KAAmB,mBAAoB,CAC1P,kCAAmCnnH,IAEvC,OAAQ,gBAAoB,MAAO,CAAE6F,UAAW,8DAA+D8H,QAASm5G,GACpH,gBAAoB19G,GAAA,GAAoB,CAAEvD,UAAW6gH,EAAoBhlG,UAAW,IAAKwG,UAAW,EAAGtD,QAAS,OAC5G,gBAAoBjb,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa,IACpE,gBAAoB,OAAQ,KAAMld,EAAKj/D,cAAc,CAAEzxB,GAAI,6BAA+B,EC3BtGm2H,KAAMw0F,KCHGS,GAA6BxpN,IACtC,MAAM,QAAEkhB,EAAO,OAAE9c,GAAWpE,GACtB,kCAAE2jG,GAAsCqB,KACxCykH,GAA4B,IAAAj9M,UAAQ,IAAMm3F,EAAkCziF,EAAS9c,IAAS,CAACu/F,EAAmCziF,EAAS9c,IACjJ,OAAO,gBAAoBqlN,EAA2B7qN,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECN7E0pN,GAAoB,CAAEtoM,MAAO,QACtBuoM,GAAiC3pN,GAClC,gBAAoB,MAAO,CAAEioG,UAAW,yBAC5C,gBAAoB,MAAO,CAAEA,UAAW,sCACpC,gBAAoBuhH,GAA2B,CAAEplN,OAAQpE,EAAMoE,OAAQ8c,QAASlhB,EAAMkhB,QAAS2jB,WAAY7kC,EAAM6kC,aACjH,gBAAoBm3F,GAAA,EAAQ,CAAE/zB,UAAW,qIAAsI8H,QAAS/vG,EAAM+qG,WAClM,gBAAoB,MAAc,CAAEq9D,mBAAmB,EAAM//D,MAAOqhH,IAAqB1pN,EAAMuM,WCNjG,GAAqB,CAAC,CAAE0/F,MAAO,UACxB29G,GAAkC5pN,IAC3C,MAAM,OAAEgiH,EAAM,SAAEC,EAAQ,SAAEC,EAAQ,KAAEzW,EAAI,QAAEsE,EAAO,QAAEgS,EAAO,UAAE9Z,EAAS,QAAE4hH,GAAU,GAAU7pN,EAE3F,OAKJ,SAAiC8pN,EAAQ1rN,EAAI8jH,EAAUH,GACnD,OAAIA,GAAWG,EACH,gBAAoB1W,GAAA,GAAoB,CAAEvD,UAAW,yCACzD6hH,EACA,gBAAoB/9G,GAAA,GAAQ,CAAE9D,UAAW,iCAAiC7pG,sBAAuBA,IAAM4tG,YAAa,IAAsB+V,IAGvI+nG,CAEf,CAdWC,CAAwB,gBAAoB,MAAM,CAAE9hH,UAAWA,EAAW8H,QAASmS,OAAWj+G,EAAY8rG,EAASmS,SAAUA,EAAU8nG,QAASH,GACnJ,gBAAoB,OAAQ,CAAE5hH,UAAW,KAAG,CAAE,kBAAmBwD,GAAwB,iBAATA,KAC5EA,EAAuB,iBAATA,EAAoB,gBAAoB,IAAK,CAAExD,UAAWwD,IAAUA,EAAO,KACzFwW,IAAYD,EAAQE,EAAUH,EAAQ,ECRrCkoG,GAAgC,EAAGxhN,QAAOyhN,mBAC3C,gBAAoBr3F,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,6CAA8C8H,QAASm6G,GACvH,gBAAoB,IAAK,CAAEjiH,UAAW,yBACtCx/F,GCFF0hN,GAAqB,CAAE/oM,MAAO,QACvBgpM,GAAoCpqN,GACrC,gBAAoB,MAAO,CAAEioG,UAAW,uBAC5C,gBAAoB,MAAO,CAAEA,UAAW,8BACpC,gBAAoBgiH,GAA+B,CAAExhN,MAAOzI,EAAMyI,MAAOyhN,cAAelqN,EAAMqqN,SAC9F,gBAAoBruF,GAAA,EAAQ,CAAE/zB,UAAW,qIAAsI8H,QAAS/vG,EAAM+qG,WAClM,gBAAoB,MAAO,CAAE9C,UAAW,6BAA8BI,MAAO8hH,IAAsBnqN,EAAMuM,WCJ3G,GAAc,CAChB,CAAE0/F,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UAEPq+G,GAAkB,CACpB,QAAS,QACT,QAAS,SAEP1mG,GAAe,CACjB,QAAS,CAAC,GAAI,GACd,QAAS,EAAE,GAAI,IAEN2mG,GAA8BvqN,IACvC,MAAM,QAAE+qG,EAAO,UAAEy/G,EAAS,OAAEpmN,EAAM,SAAEmI,GAAavM,EAC3C4kH,GAAoB,EAAAv6G,EAAA,KAAe,QAAUjG,IACnD,OAAQ,gBAAoB2nG,GAAA,GAAQ,CAAEyY,QAAS,oCAAoCO,GAAA,GAAyBH,KAAsB5Y,YAAa,GAAas+G,gBAAiBA,GAAiB1mG,aAAcA,GAAc3b,UAAW,KAAG,eAAgB,0BAA2B,sBAAuB,wBAAyB,mCAAoCuiH,EAAY,0CAA4C,mCAAoClmG,qBAAqB,EAAMvZ,QAASA,EAAS0/G,iBAAkB,oDAAsDl+M,EAAU,ECpBhkB,GAAc,CAChB,CAAE0/F,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UAEP,GAAe,CACjB,QAAS,CAAC,EAAG,IACb,QAAS,CAAC,GAAI,IACd,QAAS,EAAE,EAAG,IACd,QAAS,EAAE,GAAI,IACf,QAAS,EAAE,IAAK,KAEd,GAAkB,CACpB,QAAS,QACT,QAAS,SAEPuY,GAAU,2BACV6I,GAAwB,CAAC7I,IAClBkmG,GAAuB1qN,IAChC,MAAM,SAAEuM,EAAQ,WAAEwqG,EAAU,QAAEhM,GAAY/qG,EAC1C,OAAQ,gBAAoB+rG,GAAA,GAAQ,CAAE9D,UAAW,KAAG,iEAAkE8O,GAAa0zG,iBAAkB,mDAAoDjmG,QAASA,GAASxY,YAAa,GAAa4X,aAAc,GAAc0mG,gBAAiB,GAAiBhmG,qBAAqB,EAAMC,qBAAqB,EAAO8I,sBAAuBA,GAAuBtiB,QAASA,GAAWx+F,EAAU,ECtB7ao+M,GAAkC3qN,IAC3C,MAAM,SAAEuM,EAAQ,QAAEw+F,EAAO,UAAEy/G,GAAcxqN,EACzC,OAAQ,gBAAoB0qN,GAAqB,CAAE3zG,WAAY,KAAG,sBAAuB,wBAAyB,mCAAoCyzG,EAAY,0CAA4C,mCAAoCz/G,QAASA,GAAWx+F,EAAU,ECG9Qq+M,GAA4B5qN,IAC9B,MAAM,MAAEwE,EAAK,OAAEJ,EAAM,QAAE8c,EAAO,QAAE2oM,EAAO,WAAEgB,EAAU,QAAE9/G,EAAO,WAAElmE,GAAe7kC,EAC7E,OAAO6pN,EAAW,gBAAoBO,GAAkC,CAAEr/G,QAASA,EAAStiG,MAAOohN,EAAQ5nG,SAAUooG,OAAQ,IAAMQ,EAAW,OAC1I,gBAAoBhB,EAAQ94E,iBAAkB,CAAE3sI,OAAQA,KAAe,gBAAoBulN,GAA+B,CAAE5+G,QAASA,EAAS3mG,OAAQA,EAAQ8c,QAASA,EAAS2jB,WAAYA,GAC5L,gBAAoBimL,GAA0B,CAAEtmN,MAAOA,EAAOqmN,WAAYA,IAAe,EAEpFE,GAAwB/qN,IACjC,MAAM,OAAEoE,EAAM,QAAE2mG,GAAY/qG,EACtB6kC,EAAa+kD,GAAqBrjC,KACjCsjK,EAASgB,IAAc,IAAA7gI,UAAS,MACvC,MAAsB,SAAfnlD,EAAyB,gBAAoB8lL,GAAgC,CAAE5/G,QAASA,EAASy/G,YAAaX,GACjH,gBAAoBe,GAA0BhsN,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAE6pN,QAASA,EAASgB,WAAYA,EAAYhmL,WAAYA,MAAoB,gBAAoB0lL,GAA4B,CAAEx/G,QAASA,EAAS3mG,OAAQA,EAAQomN,YAAaX,GACpP,gBAAoBe,GAA0BhsN,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAE6pN,QAASA,EAASgB,WAAYA,EAAYhmL,WAAYA,KAAgB,EAEjJimL,GAA2B,EAAGtmN,QAAOqmN,gBAC/B,gBAAoB,WAAgB,KAAMrmN,EAAMvG,KAAK8G,GACvC,cAAdA,EAAKH,KACE,gBAAoB,MAAW,CAAEsB,IAAKnB,EAAKi9G,SAEpC,YAAdj9G,EAAKH,KACG,gBAAoBglN,GAAgChrN,OAAOiI,OAAO,CAAEX,IAAKnB,EAAKi9G,QAAUj9G,EAAM,CAAEgrG,QAAS,IAAM86G,EAAW9lN,GAAO8kN,SAAS,KAE/I,gBAAoBD,GAAgChrN,OAAOiI,OAAO,CAAEX,IAAKnB,EAAKi9G,QAAUj9G,OCzB1FimN,GAA+BhrN,GACjC,gBAAoB+qN,GAAsBnsN,OAAOiI,OAAO,CAAC,EAAG7G,ICHjE,GAAc,CAAC,CAAEisG,MAAO,UACjBg/G,GAAwB,EAAGC,WAAUjjH,YAAW2tD,aAAY7lD,UAAStnG,QAAO21I,gBAAgB,OACrG,MAAM4iD,EAAc,KAAG,eAAgB,eAAgB/4F,EAAW,CAAE,cAAe2tD,IACnF,GAAIA,EAAY,CACZ,MAAMk0D,EAAS,gBAAoB,MAAM,CAAE7hH,UAAW+4F,GAAev4L,GACrE,OAAI21I,EACQ,gBAAoB5yC,GAAA,GAAoB,CAAEvD,UAAW,yCACzD6hH,EACA,gBAAoB/9G,GAAA,GAAQ,CAAE9D,UAAW,iCAAiCijH,sBAA6BA,IAAYl/G,YAAa,IAAeoyC,IAG5I0rE,CAEf,CAEI,OAAQ,gBAAoB,MAAM,CAAE7hH,UAAW+4F,EAAajxF,QAASA,GAAWtnG,EACpF,ECbE,GAAc,CAAC,CAAEwjG,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,EAAG,KACpDi/G,GAA6B,CAAC,IAAI5rG,MCD3B6rG,GAA6B7pH,GAAgB,CACtDwxC,KDC6B,EAAG3uI,SAAQI,QAAOumG,cAC/C,MAAMu+G,GAAiB,QAAUllN,GAC3BinN,GAA0B,EAAAhhN,EAAA,IAAei/M,GAC/C,OAAQ,gBAAoBv9G,GAAA,GAAQ,CAAEyY,QAAS,+BAA+BO,GAAA,GAAyBsmG,KAA4Br/G,YAAa,GAAa/D,UAAW,yDAA0Dqc,qBAAqB,EAGnP+I,sBAAuB89F,GAA4BpgH,QAASA,GAC5D,gBAAoB,MAAc,CAAEq9D,mBAAmB,GAAQ5jK,EAAMvG,KAAK8G,GAEpD,WAAdA,EAAKH,KACE,KAEH,gBAAoBqmN,GAAuB,CAAE/kN,IAAKnB,EAAKi9G,OAAQkpG,SAAUnmN,EAAKi9G,OAAQo8B,cAAer5I,EAAKg9G,QAAS9Z,UAAWljG,EAAKkjG,UAAW2tD,WAAY7wJ,EAAKm9G,SAAUz5G,MAAO1D,EAAKk9G,SAAUlS,QAAShrG,EAAKgrG,aACpN,ECbTwkB,KAAMy2F,KCLJM,GAAwBtrN,IAC1B,MAAM,MAAEyI,GAAUzI,EAClB,OAAQ,gBAAoB6yH,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,kCAC/D,gBAAoB,OAAQ,CAAEx/F,MAAOA,EAAOw/F,UAAW,0BAA4Bx/F,GAAQ,EAKtF8iN,GAAoCvrN,IAC7C,MAAM,OAAEoE,EAAM,QAAE8c,EAAO,WAAE2jB,GAAe7kC,EAClCyI,GAAQ,QAAYrE,GACpB+tI,GAAgB,QAAajxH,GAC7BsqM,EAAe/iN,IAAU0pI,EACzBs5E,EAAgBhjN,EAAS,gBAAoB,OAAQ,CAAEA,MAAOzI,EAAMoE,OAAOqE,MAAOw/F,UAAW,wDAA0DjoG,EAAMoE,OAAOqE,OAAU,KACpL,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBoqH,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,+BAAiCwjH,GAC9E,SAAf5mL,GAAyB2mL,EAAe,gBAAoBF,GAAsB,CAAE7iN,MAAO0pI,IAAmB,KAAM,E,2BChB5H,SAASu5E,GAAenmN,GACpB,IAAIlB,EAAIswB,EAAIK,EAAIoB,EAChB,OAAI,QAAqB7wB,GACd3G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,GAAG,QAAyBtB,IAAU,CAAEX,KAAM,cAE7E,QAAqBW,GACnB3G,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,GAAG,QAAyBtB,IAAU,CAAEX,KAAM,aAElD,aAA3BW,EAAOsT,WAAWjU,KAChB,CACHA,KAAM,WACN0C,KAAMq/B,OAAOC,SAAqG,QAA3FjS,EAAuC,QAAjCtwB,EAAKkB,EAAOsT,WAAWvR,YAAyB,IAAPjD,OAAgB,EAASA,EAAGqiC,kBAA+B,IAAP/R,EAAgBA,EAAK,IAAK,IACpJntB,GAAIm/B,OAAOC,SAAmG,QAAzFxQ,EAAqC,QAA/BpB,EAAKzvB,EAAOsT,WAAWrR,UAAuB,IAAPwtB,OAAgB,EAASA,EAAG0R,kBAA+B,IAAPtQ,EAAgBA,EAAK,IAAK,IAChJhtB,YAAa7D,EAAOsT,WAAWzP,aAI5B,CACHxE,KAAM,WACN0C,KAAM/B,EAAOsT,WAAWvR,KAAKo/B,WAC7Bl/B,GAAIjC,EAAOsT,WAAWrR,GAAGk/B,WAGrC,CACO,SAASilL,GAAoBpmN,EAAQupF,EAAMroE,GAC9C,MAAMmlM,EAAWF,GAAenmN,GAChC,MAAyB,aAAlBqmN,EAAShnN,KACV+rB,GAAkBtC,wBAAwBu9L,EAAStkN,KAAMskN,EAASpkN,GAAIif,GACtEkK,GAAkBX,wBAAwB47L,EAAStkN,KAAMskN,EAASpkN,GAAIokN,EAASxiN,YAAa0lF,EACtG,CACA,SAAS+8H,GAActmN,GACnB,MAAMqmN,EAAWF,GAAenmN,GAChC,GAAsB,aAAlBqmN,EAAShnN,KACT,OAAO,yCAEX,MAAMknN,EAAqC,IAAlBF,EAAStkN,MAA8B,IAAhBskN,EAASpkN,GACnDukN,GAAgC,IAAnBH,EAAStkN,OAAgC,IAAjBskN,EAASpkN,GAC9CwkN,EAA+B,IAAlBJ,EAAStkN,MAA8B,IAAhBskN,EAASpkN,GACnD,OAAOskN,GAAoBC,GAAcC,EACnC,iCACA,wCACV,CCvCA,MAAMC,WAAgB,EAAAtiG,cAClBuiG,uBACI,MAAM1nN,EAAQ,GACd,IAAK,IAAI+B,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAC5B,MAAM0hG,EAAY,kBAAkB1hG,IACpC/B,EAAMf,KAAK,gBAAoB,MAAO,CAAEwkG,UAAWA,EAAW/hG,IAAK+hG,IACvE,CACA,OAAOzjG,CACX,CACAqoG,SACI,MAAM,UAAE5E,GAAc/oG,KAAKc,MACrBmsN,EAAiB,KAAG,CACtB,kBAAkB,EAClB,CAAClkH,KAAcA,IAEnB,OAAO,gBAAoB,MAAO,CAAEA,UAAWkkH,GAAkBjtN,KAAKgtN,uBAC1E,EAEJD,GAAQthG,aAAe,CACnB1iB,UAAW,ICnBR,MAAMmkH,GAA0B,EAAG7mN,SAAQkhB,iBAC9C,IAAIpiB,EAAIswB,EACR,MAAMm6D,GAAO,EAAAC,GAAA,KACPsc,GAAQ,WACRghH,EFoCH,SAAoC9mN,EAAQupF,EAAMroE,GACrD,OAAKlhB,IAAU,QAAoBA,GACxB,KAEJ,CACH+mN,WAAYT,GAActmN,GAC1BgnN,UAAW,KAAWZ,GAAoBpmN,EAAQupF,EAAMroE,IAEhE,CE5C4B+lM,CAA2BjnN,EAAQupF,EAAMroE,GACjE,IAAK4lM,EACD,OAAO,KAEX,MAAM,WAAEC,EAAU,UAAEC,GAAcF,EAClC,OAAQ,gBAAoB,KAAkB,CAAEjuN,GAAIkuN,EAAY9lN,OAAQ,CAChEimN,aAAe,gBAAoB/gH,GAAA,OAAW,CAAEzD,UAAW,uBAAwB0D,MAA2I,QAAnIh3E,EAA4E,QAAtEtwB,EAAKgnG,aAAqC,EAASA,EAAMO,eAA4B,IAAPvnG,OAAgB,EAASA,EAAGwnG,qBAAkC,IAAPl3E,OAAgB,EAASA,EAAGm3E,KAClQy+F,MAAO,gBAAoB,SAAU,KAAMgiB,KAC1C,EClBAG,GAA4B,CACrC,CACIzgH,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,GACHyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,GAAI,GACJyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,GAAI,IACJyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,IACHyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,GAAI,GACJyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,GACHyuE,EAAG,MAIFygH,GAAkC,CAC3C,CACI1gH,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,KAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,KAGZ,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,KAGZ,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,GAAI,KAGZ,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,IAGX,CACID,MAAO,QACP1iG,OAAQ,CACJk0B,EAAG,EACHyuE,EAAG,KC7Gf,MAAM0gH,WAA2B,gBAC7B7tN,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKkZ,MAAQ,CAAEy0M,aAAa,GAC5B3tN,KAAK4tN,UAAW,IAAAhuF,YACpB,CACAhV,oBACI5qH,KAAK6tN,eACT,CACA7iG,qBACIhrH,KAAK6tN,eACT,CACAC,YACI,OAAO9tN,KAAKc,MAAMitN,MACtB,CACAC,gBACI,OAAOhuN,KAAKc,MAAMktN,aACtB,CACAH,gBACI,MAAM,YAAE/6G,EAAW,YAAEoX,GAAgBlqH,KAAK4tN,SAAS3/M,QAE7C0/M,EAAc76G,EAAcoX,EAAc,EAC5CyjG,IAAgB3tN,KAAKkZ,MAAMy0M,aAC3B3tN,KAAK+sF,SAAS,CAAE4gI,eAExB,CACAM,qBAAqBt/K,GACjB,OAAO,gBAAoB,OAAQ,CAAEo6D,UAAW,uBAAyBp6D,EAC7E,CACAu/K,kBACI,IAAKluN,KAAK8tN,cAAgB9tN,KAAKc,MAAMqtN,OAAQ,CACzC,MAAM,cAAEC,EAAa,KAAEx+H,GAAS5vF,KAAKc,MACrC,GAAId,KAAKguN,gBACL,OAAOhuN,KAAKiuN,qBAAqBr+H,EAAKj/D,cAAc,CAAEzxB,GAAI,wBAE9D,GAAsB,IAAlBkvN,EACA,OAAOpuN,KAAKiuN,qBAAqBr+H,EAAKj/D,cAAc,CAAEzxB,GAAI,yBAE9D,GAAIc,KAAKkZ,MAAMy0M,aAAeS,EAAgB,EAC1C,OAAOpuN,KAAKiuN,qBAAqB,IAAIG,KAE7C,CACA,OAAO,CACX,CACAC,cACI,MAAO,CACH,gBAAoB,OAAQ,CAAEtlH,UAAW,qBAAsB/hG,IAAK,QAASuC,MAAOvJ,KAAKc,MAAMyI,OAASvJ,KAAKc,MAAMyI,UACnHvJ,KAAKguN,iBAAoBhuN,KAAK8tN,aAAgB9tN,KAAKc,MAAMqtN,SAAU,gBAAoB,OAAQ,CAAEnnN,IAAK,eAAiB,MAE/H,CACAsnN,yBACI,SAAKtuN,KAAKc,MAAMq8H,WAAan9H,KAAKguN,kBAG3B,CACH,gBAAoB,OAAQ,CAAEhnN,IAAK,mBAAqB,MACxD,gBAAoB,OAAQ,CAAE+hG,UAAW,yBAA0B/hG,IAAK,aAAehH,KAAKc,MAAMq8H,WAE1G,CACAxvB,SACI,OAAQ,gBAAoB,MAAO,CAAEoJ,KAAM,yBAA0BhO,UAAW,uDAC5E,gBAAoB,OAAQ,CAAEA,UAAW,QAASxlG,IAAKvD,KAAK4tN,UACxD5tN,KAAKquN,cACLruN,KAAKsuN,0BACTtuN,KAAKkuN,kBACb,EAEJR,GAAmBjiG,aAAe,CAC9BuiG,eAAe,EACfD,QAAQ,EACR5wF,UAAW,GACXgxF,QAAQ,GAKL,MAAMI,IAAc,EAAAxtF,GAAA,IAAW2sF,ICvEhCc,GAAqC,EAAGvmN,UAASvC,WACnD,IAAKuC,EAAQwC,OACT,OAAO,KAEX,MAAMgkN,EAAoB,KAAG,yBAA0B,CACnD,aAAcxmN,EAAQwC,OANH,IAQvB,OAAQ,gBAAoB,MAAO,CAAEs+F,UAAW,kBAC5C,gBAAoB,MAAO,CAAEA,UAAW,2BAAsC,YAATrjG,EAAsB,gBAAoB,KAAkB,CAAExG,GAAI,kCAAuC,gBAAoB,KAAkB,CAAEA,GAAI,mCAC1N,gBAAoB,MAAO,CAAE6pG,UAAW0lH,GAAqBxmN,EAAQlJ,KAAKsH,IACtE,MAAMqoN,ECjBkD,eAAxDhqN,OADiCA,ECERmB,EFgBgBQ,QCjBR,EAAS3B,EAAIgB,MCG3C,CACHsoN,cAAenoN,EAAKmoN,cACpBD,QAAQ,EACR5wF,UAAWt3H,EAAKs3H,UAChBixF,cAAevoN,EAAKuoN,cACpB7kN,MAAO1D,EAAK0D,OAIT,CACHykN,eAAe,EACfD,QAAQ,EACR5wF,UAAWt3H,EAAK8oN,gBAChBP,mBAAerpN,EACfwE,MAAO1D,EAAK0D,OAhBjB,IAA8B1D,EDFQnB,EDmBjC,OAAQ,gBAAoB,MAAO,CAAEqkG,UAAW,yBAA0B/hG,IAAKX,EAAOkD,OAClF,gBAAoBglN,GAAa7uN,OAAOiI,OAAO,CAAC,EAAG+mN,IAAe,KACrE,EAEAE,GAA8B,EAAGC,oBAC1C,MAAOC,EAAgBzsJ,IAAkB,IAAA/0D,UAAQ,IAAM,KAAUuhN,GAAgBxoN,GAAiC,YAAtBA,EAAO+9E,cAA2B,CAACyqI,IAC/H,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBL,GAAoC,CAAEvmN,QAAS6mN,EAAgBppN,KAAM,YACzF,gBAAoB8oN,GAAoC,CAAEvmN,QAASo6D,EAAgB38D,KAAM,YAAc,EGzB/G,SAASqpN,GAAyBC,GAE9B,MAAM5rN,EAAQ,GAAG4rN,IAAM5rN,MAAM,oCAC7B,OAAKA,EAGE2F,KAAKuZ,IAAI,GAEflf,EAAM,GAAKA,EAAM,GAAGqH,OAAS,IAEzBrH,EAAM,IAAMA,EAAM,GAAK,IANjB,CAOf,CAuBA,SAAS6rN,GAAclkN,GACnB,OAAOkgJ,MAAMlgJ,GAAS,EAAIA,CAC9B,CACO,SAASmkN,GAAuBC,EAAkBC,EAAWr0D,GAChE,MAAMs0D,EAAiBJ,GAAcE,GAC/BG,EAAqBL,GAAcG,GACzC,OAAQr0D,GACJ,IAAK,iBACD,OAAOs0D,EAAiBC,EAC5B,IAAK,iBACD,OAAOD,EAAiBC,EAC5B,QACI,OAAO,EAEnB,CC7CO,MAAMC,GAAoC,EAAG3/H,OAAM4/H,wBAAuBC,oBAC7E,MAAMC,GAAiB,IAAApiN,UAAQ,IAAM,CACjC,CAAE/D,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,mCAAqCA,GAAI,kBAC3E,CAAEqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,mCAAqCA,GAAI,oBAC5E,CAAC0wF,IACEirC,EAAe60F,EAAenpN,MAAMV,GAASA,EAAK3G,KAAOuwN,IAC/D,OAAQ,gBAAoBxhG,GAAA,EAAU,CAAEllB,UAAW,8BAA+BqlB,aAAc,EAAGC,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEzlB,UAAW,kBAAmBh+F,MAAO8vH,aAAmD,EAASA,EAAatxH,MAAOsnG,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,eAAgB7mF,MAAO,IAAK5c,MAAOoqN,EAAgB7gG,WAAY6gG,EAAejlN,OAAQqkH,WAAY,EAAGjpH,UAAY,gBAAoB,MAAO,CAAEkjG,UAAW,KAAG,eAAgB,yBAA0B,KAAK8c,GAAA,GAAyBhgH,EAAK0D,UAAWsnG,QAAUvxG,IAClnBA,EAAEyvH,iBACFygG,EAAsB3pN,EAAK3G,IAC3ByvH,GAAe,GAEnB,gBAAoBnE,GAAe,KAAM3kH,EAAK0D,WAAgB,ECHxEomN,GAAyB,iBACzBC,GAAwB,EAAGviN,cAEtBA,GADU,EAAAo3G,GAAA,GAAc,iBAGnC,MAAMorG,WAAuB,EAAAttH,UACzB1iG,YAAYiB,GACR,IAAIqE,EAAIswB,EACRqX,MAAMhsC,GACNd,KAAKovN,UAAY,cACjBpvN,KAAK8vN,WAAa,cAClB9vN,KAAK+vN,aAAgBzwN,IACjBA,EAAEw1H,kBACF90H,KAAKojG,aAAa,EAEtBpjG,KAAKq2K,cAAiB/2K,IAClBA,EAAEw1H,kBACF90H,KAAKojG,aAAa,EAEtBpjG,KAAKojG,YAAc,KACfpjG,KAAKc,MAAMkvN,yBAAyB,EAExChwN,KAAK61G,SAAYo6G,IACbjwN,KAAK+sF,SAAS,CAAEkjI,aAAY,EAEhCjwN,KAAK6pH,SAAY9+G,IACb/K,KAAK+sF,SAAS,CAAEqiI,UAAWrkN,EAAMy8B,YAAa,EAElDxnC,KAAKkwN,aAAe,KAChB,MAAMT,EAAgBzvN,KAAKkZ,MAAM+2M,UACjC,IAAIb,EAAYe,WAAWnwN,KAAKkZ,MAAMk2M,WACtCA,EAAYpvN,KAAKowN,iCFnBtB,SAAuChB,GAK1C,MAAMiB,EAAwBtB,GAAyBK,GACjDkB,EAA8BvnN,KAAKuZ,IAAI+tM,EAAwB,EAAG,GACxE,OAAO,KAAMjB,IAAcnkE,MAAMmkE,GAC3BA,EACA,KAAMA,EAAY,IAAKkB,EACjC,CEUkBC,CAA8BnB,GAC9BA,EACFpvN,KAAKwwN,iBAAmBxwN,KAAKywN,gBAC7BzwN,KAAKc,MAAM4vN,uBAAuBtB,EAAWK,EACjD,EAEJzvN,KAAK2wN,eAAiB,KAClB3wN,KAAKc,MAAM8vN,0BAA0B,EAEzC5wN,KAAK6wN,wBAA0B,KAC3BnhI,YAAW,KACP,IAAIvqF,EAAIswB,EAC8C,QAArDA,GAAMtwB,EAAKnF,KAAKc,OAAOgwN,gCAA6C,IAAPr7L,GAAyBA,EAAGgmB,KAAKt2C,EAAG,GACnG,EAAE,EAETnF,KAAKkZ,MAAQ,CACT+2M,UAA+F,QAAnFx6L,EAA4B,QAAtBtwB,EAAKrE,EAAM67B,aAA0B,IAAPx3B,OAAgB,EAASA,EAAGsqN,qBAAkC,IAAPh6L,EAAgBA,EAAKk6L,GAC5HP,UAAW,GAAGpvN,KAAK+wN,uBAE3B,CACAnmG,oBACI5qH,KAAKgxN,qBACT,CACAhmG,mBAAmB6V,GACXA,EAAUowF,gBACVjxN,KAAKgxN,qBAEb,CACAlmG,iCAAiCC,GAC7B,IAAI5lH,EAAIswB,GACJz1B,KAAKc,MAAMmwN,gBAAmB,KAAQjxN,KAAKc,MAAM67B,MAAOouF,EAAUpuF,QAClE38B,KAAK+sF,SAAS,CACVkjI,UAAmG,QAAvFx6L,EAAgC,QAA1BtwB,EAAK4lH,EAAUpuF,aAA0B,IAAPx3B,OAAgB,EAASA,EAAGsqN,qBAAkC,IAAPh6L,EAAgBA,EAAKk6L,GAChIP,UAAW,GAAGpvN,KAAK+wN,mBAAmBhmG,OAG1C/qH,KAAKc,MAAMowN,oBACXlxN,KAAK+sF,SAAS,CACVqiI,UAAW,GAAGpvN,KAAK+wN,mBAAmBhmG,MAGlD,CACApd,SACI,OAAQ,gBAAoBiiH,GAAuB,MAAOvsF,GAC9C,gBAAoBgJ,GAAA,EAAS,CAAE/mB,QAAS,qCAAsCxY,YAAau2B,EAAWoqF,GAAkCD,GAA2BpoG,qBAAsBie,EAAUx3B,QAAS7rG,KAAKojG,YAAa2F,UAAW,4BAA8B/oG,KAAKmxN,oBAE5R,CACAC,6BACI,IAAIjsN,EACJ,MAAM,MAAEw3B,EAAK,QAAE10B,GAAYjI,KAAKc,MAC1BuwN,EAAuB10L,EAEU,QAA9Bx3B,EAAKw3B,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAAQ5B,OAAO,KAA4BoE,OAE9GxC,EAAQ5B,OAAO,MAAmBoE,OAC1C,QAAK4mN,GAGG,gBAAoB,MAAO,CAAEtoH,UAAW,mCAC5C,gBAAoB,KAAkB,CAAE7pG,GAAI,sCAAuCoI,OAAQ,CAAEgqN,WAAYD,KACjH,CACAN,mBAAmBjwN,EAAQd,KAAKc,OAC5B,IAAIqE,EAAIswB,EAAIK,EACZ,MAAMs5L,EAAsFrqN,OAAlD,QAAtBI,EAAKrE,EAAM67B,aAA0B,IAAPx3B,OAAgB,EAASA,EAAGiqN,YAA2BpvN,KAAKowN,+BAA+BtvN,GF9F9I,SAAuCsuN,GAK1C,MAAMiB,EAAwBtB,GAAyBK,GACjDkB,EAA8BvnN,KAAKuZ,IAAI+tM,EAAwB,EAAG,GACxE,OAAO,KAAMjB,IAAcnkE,MAAMmkE,GAC3BA,EACA,KAAkB,IAAZA,EAAiBkB,EACjC,CEqFciB,CAAqD,QAAtB97L,EAAK30B,EAAM67B,aAA0B,IAAPlH,OAAgB,EAASA,EAAG25L,WAClE,QAAtBt5L,EAAKh1B,EAAM67B,aAA0B,IAAP7G,OAAgB,EAASA,EAAGs5L,UACjE,OAAOA,QAA6CA,EAAY,EACpE,CACA+B,kBACI,OAAQ,gBAAoB,MAAO,CAAEpoH,UAAW,oBAC5C,gBAAoB,MAAO,CAAEA,UAAW,6BAA8B8H,QAAS7wG,KAAK+vN,eACpF/vN,KAAKwxN,sBACb,CACAC,mBACI,MAAM,MAAE90L,EAAK,oBAAE+0L,EAAmB,KAAE9hI,GAAS5vF,KAAKc,MAClD,GAAI67B,EAAO,CACP,MAAMg1L,EAAqC,eAAxBD,EACbE,EAAoBD,EACpB/hI,EAAKj/D,cAAc,CAAEzxB,GAAI,4BACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,0BAC/B,OAAQ,gBAAoB49H,GAAA,EAAQ,CAAE91H,IAAK,gBAAiB+hG,UAAW,oDAAqDh+F,MAAO6mN,EAAmB/gH,QAAS7wG,KAAK2wN,eAAgB3tG,SAAU2uG,GAClM,CACA,OAAO,CACX,CACAE,qBACI,MAAM,MAAEl1L,EAAK,oBAAEm1L,EAAmB,KAAEliI,EAAI,yBAAEmiI,GAA6B/xN,KAAKc,MAC5E,GAAI67B,EAAO,CACP,MAAMq1L,EAAqC,eAAxBF,EACbG,EAAoBD,EACpBpiI,EAAKj/D,cAAc,CAAEzxB,GAAI,iCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,qCAC/B,OAAQ,gBAAoB49H,GAAA,EAAQ,CAAE91H,IAAK,gBAAiB+hG,UAAW,+CAAgDh+F,MAAOknN,EAAmBphH,QAASkhH,EAA0B/uG,SAAUgvG,GAClM,CACA,OAAO,CACX,CACAE,oBACI,OAAQ,gBAAoB,MAAO,CAAEnpH,UAAW,gBAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,gCAChD,gBAAoB0vN,GAA6B,CAAEC,cAAe7uN,KAAKc,MAAMqxN,qBAC7E,gBAAoB,MAAO,CAAEppH,UAAW,QACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,sCAChDc,KAAKoyN,6BACLpyN,KAAKqyN,6BACL,gBAAoB,MAAO,CAAEtpH,UAAW,WACpC/oG,KAAK6xN,qBACL7xN,KAAKyxN,oBACjB,CACAD,sBACI,MAAM,qBAAEc,EAAoB,eAAErB,EAAc,qBAAEsB,EAAoB,mBAAErB,EAAkB,KAAEthI,EAAI,mBAAEuiI,EAAkB,UAAEK,GAAexyN,KAAKc,OAChI,UAAEsuN,EAAS,UAAEa,GAAcjwN,KAAKkZ,MACtC,GAAIo5M,GAAwBrB,GAAkBC,EAC1C,OAAQ,gBAAoB,MAAO,CAAEnoH,UAAW,4BAC5C,gBAAoBgkH,GAAS,CAAEhkH,UAAW,6BAElD,GAAIopH,aAA+D,EAASA,EAAmB1nN,OAC3F,OAAO,gBAAoB,MAAO,CAAEs+F,UAAW,4BAA8B/oG,KAAKkyN,qBAEtF,MAAMO,EAAczyN,KAAKowN,iCAAmC,IAAM,GAC5DjmE,GAAYnqJ,KAAKwwN,iBAAmBxwN,KAAKywN,eACzCiC,EAAW,gBAAoB,OAAQ,CAAE3pH,UAAW,mBAAoBx/F,MAAOipN,GACjF,gBAAoB,KAAkB,CAAEtzN,GAAI,4BAChD,OAAQ,gBAAoB,MAAO,CAAE6pG,UAAW,4BAC5C,gBAAoB,MAAO,CAAEA,UAAW,sDACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,6BAA8BoI,OAAQ,CAAEorN,cACxF,gBAAoBnD,GAAmC,CAAEE,cAAeQ,EAAWrgI,KAAMA,EAAM4/H,sBAAuBxvN,KAAK61G,WAC3H,gBAAoB,MAAO,CAAE9M,UAAW,mBACpC,gBAAoBq6C,GAAAC,EAAO,CAAEt6C,UAAW,oBAAqBohD,SAAUA,EAAUntB,SAAS,EAAMsmB,UAAW,GAAIz5B,SAAU7pH,KAAK6pH,SAAU8oG,cAAe3yN,KAAKojG,YAAawvH,gBAAiB5yN,KAAKkwN,aAAc7sN,YAAakvN,EAAsBhvN,IAAKvD,KAAKovN,UAAWyD,OAAQJ,EAAa1nN,MAAOqkN,KACrSpvN,KAAK04J,uBACL14J,KAAK8yN,6BACL9yN,KAAK+yN,0BACL/yN,KAAKgzN,2BACLhzN,KAAKqyN,6BACL,gBAAoB,MAAO,CAAEtpH,UAAW,WACpC,gBAAoB+zB,GAAA,EAAQ,CAAEv5H,IAAKvD,KAAK8vN,WAAY/mH,UAAW,6CAA8Ch+F,MAAO/K,KAAKizN,qBAAsBpiH,QAAS7wG,KAAKkwN,aAAcltG,UAAWhjH,KAAKkzN,oBAC3L,gBAAoBp2F,GAAA,EAAQ,CAAE/zB,UAAW,oDAAqDh+F,MAAO6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2xG,QAAS7wG,KAAKq2K,gBACzJr2K,KAAKyxN,oBACjB,CACA0B,uBACI,IAAIhuN,EAAIswB,EACR,GAAIz1B,KAAKc,MAAM2jF,oBACX,OAAO,EAEX,MAAM,WAAEl9D,EAAU,QAAEtf,EAAO,MAAE00B,GAAU38B,KAAKc,MACtCmK,EAAc0xB,EACsG,QAAnHlH,EAAoC,QAA9BtwB,EAAKw3B,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAAQ5B,OAAO,aAA2C,IAAPovB,EAAgBA,EAAK,GACjJxtB,EAAQ5B,OAAO,MACfsT,EAAa,KAAK1O,GACxB,OAAO,gBAAoBiiN,GAAyB,CAAE7mN,OAAQsT,EAAY4N,WAAYA,GAC1F,CACAmxI,uBACI,MAAM,KAAE9oE,EAAI,UAAE4iI,GAAcxyN,KAAKc,MAC3BsyN,EAAYxjI,EAAKj/D,cAAc,CAAEzxB,GAAI,4BAA8B,CAAEszN,cAC3E,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,MAAO,KACvB,gBAAoB,MAAO,CAAEzpH,UAAW,mCACpC/oG,KAAKmzN,uBACLnzN,KAAKoxN,8BACT,gBAAoB,MAAO,CAAEroH,UAAW,oCAAsCqqH,IAC1F,CACAN,6BACI,MAAMO,GCtJoC12L,EDsJe38B,KAAKc,MAAM67B,MCtJnBmnD,EDsJ0B9jF,KAAKc,MAAMmH,UCrJhF00B,GApDP,SAA6CA,EAAOmnD,GACvD,IAAI3+E,EAAIswB,EAAIK,EACZ,MAAMuuD,EAA+F,QAA5El/E,EAAKw3B,aAAqC,EAASA,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAAQ1B,KAAK,MAChJ+sN,EAAoB,KAAKxvI,EAAez9E,OAAO,OACrD,IAAKg+E,EACD,OAAQivI,IAAqB,QAAoBA,GAErD,IAAKA,IAAqB,QAAoBA,GAC1C,OAAO,EAEX,IAAI,QAAqBA,GAAoB,CACzC,MAAM,KAAElrN,EAAI,YAAE8B,EAAW,GAAE5B,IAAO,QAAyBgrN,GAK3D,MAAO,CAJ8C,aAApCjvI,EAAgB1qE,WAAWjU,MACiB,QAA1C+vB,EAAK4uD,EAAgB1qE,WAAWvR,YAAyB,IAAPqtB,OAAgB,EAASA,EAAG+R,cAAgBp/B,EAAKo/B,YAC7D,QAAxC1R,EAAKuuD,EAAgB1qE,WAAWrR,UAAuB,IAAPwtB,OAAgB,EAASA,EAAG0R,cAAgBl/B,EAAGk/B,WACxF68C,EAAgB1qE,WAAWzP,cAAgBA,GACdmsB,MAAMnX,QAC/D,CACK,CACD,MAAM,KAAE9W,EAAI,GAAEE,IAAO,QAAyBgrN,GAI9C,MAAO,CAH8C,aAApCjvI,EAAgB1qE,WAAWjU,KAC3B2+E,EAAgB1qE,WAAWvR,OAASA,EACtCi8E,EAAgB1qE,WAAWrR,KAAOA,GACb+tB,MAAMnX,QAC9C,CACJ,CA4BQq0M,CAAoC52L,EAAOmnD,IA3BnD,SAAoDnnD,EAAOmnD,GACvD,IAAI3+E,EAAIswB,EACR,MAAMuuD,EAAiJ,QAAxHvuD,EAAoC,QAA9BtwB,EAAKw3B,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,QAAQ5B,OAAO,YAAgD,IAAPovB,EAAgBA,EAAK,GAC9KwuD,EAA0BH,EAAez9E,OAAO,MAEhDmtN,EAAoCxvI,EAAsB39E,QAAQA,KAAaA,EAAOoT,gBAAgBiB,oBACxG,QAAyBrU,EAAOoT,gBAAgBe,sBAC9Ci5M,EAAsCxvI,EAAwB59E,QAAQA,MAAa,QAA0BA,KAAW,QAAcA,MAG5I,OAAQotN,EAAoChpN,SAAW+oN,EAAkC/oN,QACrFgpN,EAAoCp9L,OAAOhwB,IACvC,MAAM4T,GAAc,QAAa5T,GAC3Bo0H,EAAQ+4F,EAAkCjtN,MAAMoG,IAAgB,QAAgBA,EAAY8M,gBAAgBQ,YAAaA,KAC/H,IAAKwgH,EACD,OAAO,EAEX,MAAMi5F,EAAwBj5F,EAAMhhH,gBAAgBiB,qBAAsB,QAA0BrU,GAC9FstN,GAAiB,QAAwBttN,GACzCutN,GAAe,QAAyBD,KAC1C,QAAyBl5F,EAAMhhH,gBAAgBe,oBAC/C,KAAQ,KAAOigH,EAAMhhH,gBAAgBe,kBAAkBC,MAAO,KAAOk5M,EAAel5M,OACxF,OAAOi5M,GAAyBE,CAAY,GAExD,CAIQC,CAA2Cl3L,EAAOmnD,KAHnD,IAA2CnnD,EAAOmnD,EDwJjD,SADyC9jF,KAAKc,MAAM67B,QAAS02L,IACpB,gBAAoB7hF,GAAA,EAAS,CAAE9rI,KAAM,WAC1E,gBAAoB,KAAkB,CAAExG,GAAI,mCAC1Cc,KAAKc,MAAMgwN,0BAA6B,gBAAoB,WAAgB,KAC1E,IACA,gBAAoB,IAAK,CAAE/nH,UAAW,wBAAyB8H,QAAS7wG,KAAK6wN,yBACzE,gBAAoB,KAAkB,CAAE3xN,GAAI,kCAC5D,CACA6zN,0BACI,OAAK/yN,KAAKwwN,iBAAmBxwN,KAAKywN,gBACtB,gBAAoBj/E,GAAA,EAAS,CAAE9rI,KAAM,SACzC,gBAAoB,KAAkB,CAAExG,GAAI,+BAAgCoI,OAAQ,CAC5Ey3L,OAASzuD,GAAW,gBAAoB,SAAU,KAAMA,GACxDywB,GAAI,gBAAoB,KAAM,SAIlD,CACAiyD,2BACI,MAAqC,UAAjChzN,KAAKc,MAAMgzN,mBACH,gBAAoBtiF,GAAA,EAAS,CAAE9rI,KAAM,SACzC,gBAAoB,KAAkB,CAAExG,GAAI,gCAGxD,CACAkzN,6BACI,MAAuC,UAAnCpyN,KAAKc,MAAMgxN,qBACH,gBAAoBtgF,GAAA,EAAS,CAAE9rI,KAAM,SACzC,gBAAoB,KAAkB,CAAExG,GAAI,sCAGxD,CACAmzN,6BACI,MAAuC,UAAnCryN,KAAKc,MAAM4wN,qBACH,gBAAoBlgF,GAAA,EAAS,CAAE9rI,KAAM,SACzC,gBAAoB,KAAkB,CAAExG,GAAI,mCAGxD,CACA+zN,qBACI,MAAwC,eAAjCjzN,KAAKc,MAAMgzN,kBACZ9zN,KAAK+zN,2BACL/zN,KAAKg0N,qBACf,CACAA,sBACI,MAAM,MAAEr3L,EAAK,KAAEizD,GAAS5vF,KAAKc,MAC7B,OAAO67B,EACDizD,EAAKj/D,cAAc,CAAEzxB,GAAI,+BACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,2BACnC,CACA60N,2BACI,MAAM,MAAEp3L,EAAK,KAAEizD,GAAS5vF,KAAKc,MAC7B,OAAO67B,EACDizD,EAAKj/D,cAAc,CAAEzxB,GAAI,iCACzB0wF,EAAKj/D,cAAc,CAAEzxB,GAAI,+BACnC,CACAkxN,+BAA+BtvN,EAAQd,KAAKc,OACxC,QAASA,EAAMsvN,8BACnB,CACA8C,kBACI,OAAOlzN,KAAKwwN,iBAAmBxwN,KAAKywN,gBAAmD,eAAjCzwN,KAAKc,MAAMgzN,iBACrE,CACAtD,eAEI,OAAQvlE,MAAMjrJ,KAAKkZ,MAAMk2M,UAC7B,CACAqB,eACI,YAAgC1rN,IAAzB/E,KAAKkZ,MAAMk2M,WAAoD,KAAzBpvN,KAAKkZ,MAAMk2M,SAC5D,CACA4B,sBACIthI,YAAW,KACP,IAAIvqF,EAAIswB,EAAIK,EACZ,GAAiJ,QAA5IA,EAAsF,QAAhFL,EAA+B,QAAzBtwB,EAAKnF,KAAKovN,iBAA8B,IAAPjqN,OAAgB,EAASA,EAAG8I,eAA4B,IAAPwnB,OAAgB,EAASA,EAAGw+L,oBAAiC,IAAPn+L,OAAgB,EAASA,EAAGm+L,aAAc,CAC/L,MAAMC,EAAwBl0N,KAAKovN,UAAUnhN,QAAQgmN,aAAaA,aAClEC,EAAsBv+F,QACtBu+F,EAAsBx0H,QAC1B,IACD,IACP,EAEJmwH,GAAepkG,aAAe,CAC1BwlG,gBAAgB,EAChBC,oBAAoB,EACpBqB,qBAAsB,GACtB9tI,qBAAqB,EACrB2rI,gCAAgC,EAChCnoN,QAAS,GACTqqN,sBAAsB,EACtBZ,oBAAqB,OACrBoC,kBAAmB,OACnBhC,oBAAqB,QAGzB,UAAe,EAAA/wF,GAAA,IAAW8uF,IErSb,GAAyB/uN,IAClC,MAAM,4BAAEqzN,EAA2B,QAAEr0N,EAAO,UAAEuB,GAAcP,EAAO+qM,GAAY,SAAO/qM,EAAO,CAAC,8BAA+B,UAAW,cAClI8uF,GAAO,EAAAC,GAAA,KACP/lF,EAAe4gF,GAAqB5yC,KAClCtvC,OAAQ4rN,EAAsB,OAAE3mN,GCErC,UAAmC,QAAE3N,EAAO,mBAAEqyN,EAAkB,aAAEroN,EAAY,UAAEzI,EAAS,SAAE0zH,EAAQ,QAAE12D,EAAO,UAAE24F,EAAS,UAAEC,EAAS,UAAE14F,IACvI,MAAMw1E,GAAmB,QAAiBj0I,EAAS,6BAC7Co3J,GAAqB,QAAmB71J,EAAW,6BACnDq9D,EAAUyzJ,EACVvvN,UACE,MAAMyxN,EAAgBlC,EAAmB9rN,OAAOuG,GAC1C0nN,EAAoB/rN,QAAQoC,IAAI0pN,EAAct1N,KAAI6D,MAAOyD,IAC3D,MAAM,gBAAEoT,GAAoBpT,EAAOsG,YACnC,KAAK,QAAyB8M,EAAgBe,mBAC1C,MAAM,IAAI,MAAa,yEAE3B,MAAMP,EAAcR,EAAgBQ,YAC9Bs6M,EAAoBxgF,EAAiB1yI,UAAU61J,GAAoBv1J,aACnE6yN,EAAuB,CACzB9rN,SAAU+Q,EAAgBiB,uBACpB3V,EACAgvI,EAAiB7zI,aAAa4b,oBAC1B,CACErB,KAAMhB,EAAgBe,kBAAkBC,MAE1C,CACEkwD,cAAelxD,EAAgBe,kBAAkBC,MAE7DkzK,iCAAiC,IAE9BjlL,EAAUyqE,SAAyB5qE,QAAQoC,IAAI,CAClD4pN,EACK7rN,WACAkiE,eAAe3wD,GACf/Q,UAjCe,IAkCf8yB,YAAYw4L,GACZrrN,QACLorN,EAAkBx4J,wBAAwB9hD,KAG9C,MAAO,CACHvR,WACAuR,cACA1Q,aAJoBgrN,EAAkBhlJ,aAAa4D,EAAgBn0C,YAIlDz1B,MACpB,KAWL,MAAO,CACHkrN,4BAVqBH,GACejrN,QAAO,CAACwpC,EAAKgwC,KACjDhwC,GAAI,EAAA1nC,EAAA,IAAe03E,EAAK5oE,cAAgB,CACpC1Q,MAAOs5E,EAAKt5E,MACZiyL,mBAAoB34G,EAAKn6E,SAAS4B,WAClCoqN,cAAe7xI,EAAKn6E,SAASpD,OAE1ButC,IACR,CAAC,GAGA/oC,aAAcA,EAAa/K,KAAKouH,GAAOA,EAAG1lH,UAC7C,EAEH,KACN,OAAO,QAAqB,CAAEi3D,UAASq2D,WAAU12D,UAAS24F,YAAWC,YAAW14F,aAAa,CACzFw1E,EACAmjB,EACAi7D,GAER,CD/DuDwC,CAA0B,CACzE7qN,eACAhK,UACAuB,YACA8wN,mBAAoBgC,IAElBhC,GAAqB,IAAA7kN,UAAQ,IAC1B8mN,EEJN,SAAgCjC,EAAoBviI,EAAMroE,EAAYqtM,EAAcH,GACvF,OAAOtC,EAAmBpzN,KAAK81N,IAC3B,GAAIjoN,EAAiCioN,GACjC,OAoBZ,SAAqCA,EAAcJ,GAC/C,MAAM,YAAE9nN,EAAW,WAAEy3E,GAAeywI,EAE9Bx2K,EAAOo2K,GADG,EAAAtpN,EAAA,IAAewB,EAAY8M,gBAAgBQ,cAErDM,EAAa5N,EAAY8M,gBAAgBiB,kBACzCpQ,EAAa+zC,EAAKm9I,mBAOlBr+D,EANW9+E,EAAKq2K,cAAcruN,QAAQiD,KACnB,QAAyBqD,EAAY8M,gBAAgBe,mBACpE7N,EAAY8M,gBAAgBe,kBAAkBC,KAAKqY,MAAM7sB,GAAQA,IAAQqD,EAAQrD,MACjF0G,EAAY8M,gBAAgBe,kBAAkBlT,OAAOwrB,MAAM/nB,GAAUA,IAAUzB,EAAQC,WACrEgR,IAEDxb,KAAKgkL,GAAOA,EAAGx5K,QAAOrF,KAAK,MAChDqF,EAAQ80C,EAAK90C,MACburN,GAAgB,QAAuBnoN,EAAY8M,gBAAgBe,mBACzE,MAAO,CACH9U,KAAM,YACN0+E,WAAYA,EACZ4pI,cAAezzM,IAAc,QAAyB5N,EAAY8M,gBAAgBe,mBAClF2iH,YACAixF,cAAe7zM,EAAajQ,EAAawqN,EAAgBA,EACzDvrN,QAER,CA3CmBwrN,CAA4BF,EAAcJ,GAErD,GAAI/nN,EAA4BmoN,GAC5B,OAKZ,SAAgCA,EAAcjlI,EAAMroE,EAAYqtM,GAC5D,IAAIzvN,EACJ,MAAM,YAAEwH,EAAW,WAAEy3E,GAAeywI,EAC9BlG,EAAkBlC,GAAoB9/M,EAAaijF,EAAMroE,GACzDytM,EAAsBJ,EAAaruN,MAAMozC,IAAY,QAAgBA,EAAShtC,EAAYgN,WAAWlS,WAC3G,MAAO,CACH/B,KAAM,OACN0+E,WAAYA,EACZuqI,kBACAplN,MAAsH,QAA9GpE,EAAK6vN,aAAiE,EAASA,EAAoBzrN,aAA0B,IAAPpE,EAAgBA,EAAKyqF,EAAKj/D,cAAc,CAAEzxB,GAAI,+CAEpL,CAhBmB+1N,CAAuBJ,EAAcjlI,EAAMroE,EAAYqtM,GAElE,MAAM,IAAI,MAAgB,oCAAoC,GAEtE,CFHeM,CAAuBf,EAA6BvkI,EAAMi8G,EAAUtkL,WAAY6sM,EAAuBtqN,aAAcsqN,EAAuBK,sBAFxI,MAGZ,CAACN,EAA6BC,EAAwBxkI,EAAMi8G,EAAUtkL,aACzE,OAAQ,gBAAoB,GAAgB7nB,OAAOiI,OAAO,CAAC,EAAGkkM,EAAW,CAAEymB,qBAAiC,YAAX7kN,EAAsB0kN,mBAAoBA,IAAuB,EGpBtK,SAASgD,GAAqBnpI,EAAgBztB,GAC1C,MAAO9wD,EAAQ++E,IAAa,IAAA1B,UAAS,QAC/BzB,EAAWoB,KAUjB,MAAO,CAACh9E,GATI,IAAAy+E,cAAY,IAAI3qC,KACxBirC,EAAU,cACVwS,GAAmB3V,EAAU2C,KAAkBzqC,IAC1C32C,MAAK,KACN4hF,EAAU,QACVjuB,GAAW,IAEVjpC,OAAM,IAAMk3D,EAAU,UAAS,GACrC,CAACjuB,IAER,CACO,MCZM62J,GAAoBjwN,IAC7B,IAAI,uBAAEq5G,GAA2Br5G,EAAIrE,GAAQ,SAAOqE,EAAI,CAAC,2BACzD,OAAO,gBAAoBm5G,GAAmB5+G,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAE09G,uBAAwB,KAAG,MAAOA,KAA2B,ECG7H62G,GAAyBv0N,IAClC,IAAIqE,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EAAIC,EAC5B,MAAM,IAAExU,GAAQ/hB,EACVylB,EAAyJ,QAA9IuP,EAA6F,QAAvFL,EAAkC,QAA5BtwB,EAAK0d,EAAI40D,qBAAkC,IAAPtyE,OAAgB,EAASA,EAAGmc,mBAAgC,IAAPmU,OAAgB,EAASA,EAAGlP,eAA4B,IAAPuP,GAAgBA,EACjLw/L,EAAU5qI,GAAqBhzC,IAC/Bp2B,EAAuJ,SAAhD,QAAvF6V,EAAkC,QAA5BD,EAAKrU,EAAI40D,qBAAkC,IAAPvgD,OAAgB,EAASA,EAAG5V,mBAAgC,IAAP6V,OAAgB,EAASA,EAAG0D,QAC3IhY,EAAIvB,YAVkB,EAACg0M,EAAS/xN,KACtC,IAAI4B,EACJ,OAAqF,QAA7EA,EAAKmwN,EAAQ/uN,MAAMuc,IAAW,QAAgBA,EAAOic,QAAQx7B,IAAKA,YAA0B,IAAP4B,OAAgB,EAASA,EAAG45B,QAAQzd,WAAW,EAStIi0M,CAAwBD,EAASzyM,EAAIA,IAAIC,QACzC2iG,EAAqBnkG,aAAiD,EAASA,EAAYo9D,OAC3F82I,EAAiB3yM,EAAItf,KAAM,EAAA4H,EAAA,IAAe0X,EAAItf,KAAO,GACrDoiH,EAAkB14B,KAClB24B,EAAe,CACjBx9G,KAAM,MACN1C,KAA+I,SAAhD,QAAvF2xB,EAAkC,QAA5BD,EAAKvU,EAAI40D,qBAAkC,IAAPrgD,OAAgB,EAASA,EAAG9V,mBAAgC,IAAP+V,OAAgB,EAASA,EAAGwD,QAAoB,SAAW,UAClKvZ,YAAamkG,GAEjB,OAAIl/F,GAAWk/F,GAA6C,KAAvBA,EACzB,gBAAoBT,GAAyB,CAAEjc,UAAW,mBAAmB8c,GAAA,GAAyB2vG,KAAmBl0M,YAAamkG,EAAoBR,OAAQ,IAAMU,EAAgBp4B,yBAAyBq4B,KAEtN,IAAI,ECJT6vG,GAA4B,CAAC,CAAE1oH,MAAO,SAAW,CAAEA,MAAO,UAC1D2oH,GAA2B,CAAC,CAAE3oH,MAAO,SAAW,CAAEA,MAAO,UAC/D,MAAM4oH,WAAkC,EAAApzH,UACpC1iG,cACIitC,SAASC,WACT/sC,KAAK41N,SAAW,CAAC,EACjB51N,KAAK61N,8BAA+B,EACpC71N,KAAK+vF,KAAO,cACZ/vF,KAAKkZ,MAAQ,CACT48M,uBAAuB,EACvBC,yBAAyB,EACzBC,oBAAoB,GAExBh2N,KAAKi2N,eAAiB,KAClB,MAAMC,ECrCX,SAAqDrzM,EAAK5a,EAAS6rB,GAEtE,IADyBjR,EAAIJ,YAGzB,OAAO,EAEX,MAAM0zM,EAAsB,KAAKluN,EAAQ5B,OAAO,OAChD,IAAK8vN,IAAuB,QAAoBA,GAC5C,OAAO,EAGX,GADgCriM,aAAqE,EAASA,EAAsB,+BAGhI,OAAO,QAAqBqiM,GAE3B,CAGD,KAAK,QAAqBA,GACtB,OAAO,EAEX,MAAM,KAAE/tN,EAAI,GAAEE,IAAO,QAAyB6tN,GAG9C,OAFqC,IAAR7tN,GACCF,IAASE,CAE3C,CACJ,CDWkD8tN,CAA4Cp2N,KAAKc,MAAM+hB,IAAK7iB,KAAKc,MAAMmH,QAASjI,KAAKc,MAAMgzB,uBAC3HuiM,EAAmB,KAAG,mBAAoB,yBAA0B,2BAA4B,eAAgB,CAClH,YAAar2N,KAAKkZ,MAAM48M,sBACxB,gBAAiB91N,KAAKkZ,MAAM68M,0BAIhC,OAAI/1N,KAAKc,MAAMw1N,iBACVt2N,KAAKc,MAAMy1N,aACXL,IAAkCl2N,KAAKc,MAAM67B,MACtC,gBAAoB2vE,GAAA,GAAoB,CAAEsY,UAAW,EAAGwG,UAAW,EAAGtD,QAAS,MAAO/e,UAAW,KAAGstH,EAAkB,aAC1H,gBAAoBxpH,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa2oH,IAA6Bz1N,KAAKw2N,iBAAiBN,KAE3H,gBAAoB,MAAO,CAAErlH,QAAS7wG,KAAKy2N,wBAC/C,gBAAoBnqH,GAAA,GAAoB,CAAEvD,UAAWstH,EAAkBzxG,UAAW,IAAKwG,UAAW,EAAGtD,QAAS,OAC1G,gBAAoBjb,GAAA,GAAQ,CAAE9D,UAAW,iBAAkB+D,YAAa4oH,IACpE,gBAAoB,KAAkB,CAAEx2N,GAAI,yBAA2B,EAEvFc,KAAKy2N,uBAAyB,KAC1Bz2N,KAAKc,MAAM21N,wBAAwB,CAE3C,CACA7rG,oBAEQ5qH,KAAKc,MAAMk1N,oBACXh2N,KAAK02N,2BAA2B,qBAAsB,IAE9D,CACA5rG,iCAAiCC,GACzB/qH,KAAK22N,gBAAgB5rG,IACrB/qH,KAAK02N,2BAA2B,wBAAyB,KAEzD12N,KAAK42N,kBAAkB7rG,IACvB/qH,KAAK02N,2BAA2B,0BAA2B,MAE1D12N,KAAKc,MAAMk1N,oBAAsBjrG,EAAUirG,oBAC5Ch2N,KAAK02N,2BAA2B,qBAAsB,IAE9D,CACA1rG,qBACI,GAAIhrH,KAAKc,MAAMk1N,qBAAuBh2N,KAAK61N,6BAA8B,CACrE71N,KAAK61N,8BAA+B,EACpC,MAAM9lI,EAAO/vF,KAAK+vF,KAAK9hF,QACnB8hF,GACA+Z,OAAO+nG,SAAS,EAxEhC,SAA0C9hH,GACtC,IAAI5qF,EAKJ,IAAK4qF,EAAK8mI,iBAAiBpsN,OACvB,OAAO,EAGX,MAAMqsN,EAAO/mI,EAAKg6B,wBACZgtG,EAAMhnI,EAAKinI,cAAcC,YAC/B,OAAOH,EAAK7sM,KAA4E,QAApE9kB,EAAK4xN,aAAiC,EAASA,EAAIG,mBAAgC,IAAP/xN,EAAgBA,EAAK,EACzH,CA2DmCgyN,CAAiCpnI,GAE5D,CACJ,CACAomC,uBACIn2H,KAAKo3N,sBACT,CAEAV,2BAA2Bv6M,EAAMpF,GAC7B,MAAM,sBAAE++M,EAAqB,wBAAEC,EAAuB,mBAAEC,GAAuBh2N,KAAKkZ,MACpFlZ,KAAKo3N,qBAAqBj7M,GAC1Bnc,KAAK+sF,SAAS,CACV+oI,wBACAC,0BACAC,qBACA,CAAC75M,IAAO,IAEZnc,KAAK41N,SAASz5M,GAAQuzE,YAAW,KAC7B1vF,KAAK+sF,SAAS,CACV+oI,wBACAC,0BACAC,qBACA,CAAC75M,IAAO,GACV,GACHpF,EACP,CACAqgN,qBAAqBj7M,GACbA,GAAQnc,KAAK41N,SAASz5M,IACtBs1F,aAAazxG,KAAK41N,SAASz5M,WACpBnc,KAAK41N,SAASz5M,KAGrBzc,OAAOD,KAAKO,KAAK41N,UAAUlvN,SAASM,GAAQyqG,aAAazxG,KAAK41N,SAAS5uN,MACvEhH,KAAK41N,SAAW,CAAC,EAEzB,CACAe,gBAAgB5rG,GACZ,OAAS/qH,KAAKkZ,MAAM48M,uBACiB,eAAjC91N,KAAKc,MAAMgzN,mBACqB,SAAhC/oG,EAAU+oG,iBAClB,CACA8C,kBAAkB7rG,GACd,OAAS/qH,KAAKkZ,MAAM68M,yBACmB,eAAnC/1N,KAAKc,MAAM4wN,qBACuB,SAAlC3mG,EAAU2mG,mBAClB,CACA2F,gBACI,IAAIlyN,EACJ,MAAM,eAAEmyN,GAAmBt3N,KAAKc,MAE1By2N,GADW,SAAiBv3N,KAAKc,MAAM02N,2BAC8FzyN,KAAlGuyN,aAAuD,EAASA,EAAen+F,eAcxH,MAAO,CACHxqF,QAdY,KAAG3uC,KAAKc,MAAMy9G,iBAAkB,CAC5C,kBAAmBv+G,KAAKc,MAAM22N,kBAC9B,kBAAmBz3N,KAAKc,MAAM67B,MAC9B,qBAAsB46L,IAAoD,QAA3BpyN,EAAKnF,KAAKc,MAAM67B,aAA0B,IAAPx3B,OAAgB,EAASA,EAAGuyN,eAAiB13N,KAAKc,MAAM62N,uBAC1I,kBAAmBJ,GAAuBv3N,KAAKc,MAAM82N,cACrD,uBAAwB53N,KAAKkZ,MAAM88M,mBACnC,sBAAuBh2N,KAAKc,MAAM+2N,0BASlCh1M,IAPQ,KAAG7iB,KAAKc,MAAMg3N,aAAc,4BAA6B,gBAAiB,gBAAiB,CACnG,eAAsD,SAAtC93N,KAAKc,MAAM+hB,IAAIA,IAAIhe,eACnC,kBAAmB7E,KAAKc,MAAM2jD,UAC9B,kBAAmBzkD,KAAKc,MAAM2jD,YAMtC,CACA+xK,iBAAiBN,GACb,MAAM,eAAEI,GAAmBt2N,KAAKc,MAChC,OAAIw1N,EACO,gBAAoB,KAAkB,CAAEp3N,GAAI,oCAEnDg3N,EACO,gBAAoB,KAAkB,CAAEh3N,GAAI,sCAEhD,gBAAoB,KAAkB,CAAEA,GAAI,gCACvD,CACAyuG,SACI,MAAMoqH,EAAa/3N,KAAKq3N,gBACxB,OAAQ,gBAAoBjC,GAAkB,CAAE72G,iBAAkBw5G,EAAWppL,QAAS6vE,uBAAwBu5G,EAAWl1M,IAAKi8F,WAAY9+G,KAAK+vF,KAAM8uB,mBAAoB,IAAM7+G,KAAKc,MAAM22N,mBAAqBz3N,KAAKc,MAAMk3N,oBAAqBt5G,0BAA2B,KAClQ,IAAIv5G,EACJ,OAAQnF,KAAKc,MAAMm3N,6BAC8B,QAA3C9yN,EAAKnF,KAAKc,MAAMgzB,6BAA0C,IAAP3uB,OAAgB,EAASA,EAAG2hH,oBAAuB,gBAAoBuuG,GAAuB,CAAExyM,IAAK7iB,KAAKc,MAAM+hB,MAAU,IAAI,EACxL47F,eAAiBL,GAAkB,gBAAoB,WAAgB,KACtEp+G,KAAKi2N,iBACLj2N,KAAKc,MAAM29G,eAAeL,IAAiBnmB,aAAcj4F,KAAKc,MAAMm3F,aAAcE,WAAYn4F,KAAKc,MAAMq3F,WAAYE,WAAYr4F,KAAKc,MAAMu3F,YAAcr4F,KAAKc,MAAMuM,SACjL,EAEJsoN,GAA0BlqG,aAAe,CACrCuqG,oBAAoB,EACpB/tN,QAAS,GACTypN,oBAAqB,OACrBoC,kBAAmB,OACnBhC,oBAAqB,OACrB6F,wBAAwB,EACxBM,4BAA4B,EAC5B3B,gBAAgB,G,4BE/KpB,SAAS4B,GAAyBxzN,GAC9B,OAAQ,IAAQA,OAAWA,aAAiC,EAASA,EAAIyzN,SAC7E,CAMO,SAASC,GAAqBj4N,EAAQynG,GACzC,IAAIziG,EAAIswB,EAAIK,EACZ,MAAM,UAAEl0B,EAAS,OAAEkoG,EAAM,SAAEirB,EAAQ,QAAE12D,EAAO,UAAE24F,EAAS,UAAEC,EAAS,UAAE14F,GAAcp+D,EAC5EL,GAAU,QAAiBK,EAAOL,QAAS,wBAC3CuB,GAAY,QAAmBlB,EAAOkB,UAAW,wBACjDg3N,EAAgBzwH,QAAmCA,EAAO,GAC1D0wH,EA+CV,SAAwC12N,GACpC,OAAIs2N,GAAyBt2N,GAClBA,EAEJ,CAAC,CACZ,CApD2B22N,CAA+Bp4N,EAAOyB,YACtDu2N,EAAUK,EAAUC,EAAQxwN,EAASywN,G3PyEzC,SAA0CpxN,EAAQi9K,GACrD,MAAM,MAAErrK,GAAU,KAElB,OAqBG,SAAoC5R,GACvC,IAAInC,EACJ,MAAMwzN,GAAa,IAAA5qN,QAGV,QAHkB5I,EAAKmC,aAAuC,EAASA,EAAOvI,KAAK0lL,IAAM,CAC9Fm0C,KAAM,KAAgBn0C,GACtB15K,MAAO05K,aACa,IAAPt/K,EAAgBA,EAAK,IACtC,OAAO,IAAAmI,UAAQ,IACJhG,aAAuC,EAASA,EAAOvI,KAAI,CAACkqJ,EAAK7jG,KACpE,MAAMwzK,EAAO,KAAgB3vE,GAC7B,OAAI2vE,IAASD,EAAW1qN,QAAQm3C,GAAKwzK,KAC1BD,EAAW1qN,QAAQm3C,GAAKr6C,OAEnC4tN,EAAW1qN,QAAQm3C,GAAO,CACtBwzK,OACA7tN,MAAOk+I,GAEJA,EAAG,KAEf,CAAC,KAAgB3hJ,IACxB,CAxCWuxN,CADgBvxN,aAAuC,EAASA,EAAOvI,KAAKgM,GAAUu5K,GAA6Bv5K,EAAOmO,EAAOqrK,KAE5I,C2P7E0Du0C,CAAiC,CACnFR,EAAeH,SACfG,EAAeE,SACfF,EAAeG,OACfH,EAAerwN,QACfqwN,EAAeI,QAChBJ,EAAeS,+BACZC,EAAoBd,GAAyBt2N,GCShD,SAAyB0xB,GAC5B,MAAM,QAAExzB,EAAO,UAAEuB,EAAS,SAAE82N,EAAW,GAAE,SAAEK,EAAW,GAAE,QAAEvwN,EAAU,GAAE,OAAEywN,EAAS,GAAE,OAAED,EAAS,GAAE,cAAE53N,EAAgB,aAAiByyB,GACnI,QAAUxzB,GAAWuB,EAAW,uFAChC,MAAMmxG,EAAa,IAAQgmH,GAhC/B,SAAuBL,GACnB,MAAO,EACH,SAAa,KAAQ,IACdA,EAAS9xN,OAAO,OAEnB8xN,EAASrlM,KAAK,QAAc,SAGxC,CAyBUmmM,CAAcd,GAjBxB,SAA4BA,EAAUe,EAAQT,GAC1C,OAAO,SAAkB,IAAIS,KAAWT,GAAS,KAAQ,IAClDN,EAAS9xN,OAAO,OAEnB8xN,EAASrlM,KAAK,QAAc,QAEpC,CAYUqmM,CAAmBhB,EAAUK,EAAUC,GAC7C,OAAO34N,EACFc,cAAcC,EAAeyyB,GAC7BjyB,UAAUA,GACVO,YACAosL,SAASmqC,EAAS/xN,OAAOoyN,GAAWvwN,GACpCmxN,eAAeV,GACfW,kBAAkB7mH,EAC3B,CDrBU8mH,CAAgB55N,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG/F,GAAY,CAAEu2N,SAAUA,EAAUK,WAChFC,SACAxwN,UACAywN,SACA54N,UACAuB,eACFO,EACN,OAAO,QAAqB,CACxB88D,QAASs6J,EACH,IAAMA,EACHx9G,UACA5wG,MAAMu9D,GAAoB2hC,EACzB3hC,EAAgBg0C,WAAWrS,EAAOz/F,OAAQy/F,EAAOzkG,MACjD8iE,EAAgB6zC,YACjBpxG,MAAMkkF,GACA,SAAmBA,KAEzBx5D,OAAO5nB,IACR,MAAM,SAAaA,EAAM,IAE3B,KACNqnH,WACA12D,UACA24F,YACAC,YACA14F,aACD,CACCz+D,EACAuB,EACiH,QAAhH8D,EAAK6zN,aAA6D,EAASA,EAAkBO,qBAAkC,IAAPp0N,EAAgBA,EAAK,2BACrE,QAAxEswB,EAAKq0E,aAAuC,EAASA,EAAOz/F,cAA2B,IAAPorB,EAAgBA,EAAK,aAC/B,QAAtEK,EAAKg0E,aAAuC,EAASA,EAAOzkG,YAAyB,IAAPywB,EAAgBA,EAAK,cACjGuiM,GAEX,CEtDO,SAASmB,GAAwBr5N,GACpC,MAAM,eAAEs5N,EAAc,QAAE35N,EAAO,iBAAE4wE,EAAgB,iBAAEgpJ,EAAgB,UAAEr4N,EAAS,WAAEs4N,GAAex5N,EACzF0oI,EAAWuvF,GAAqB,CAClCt4N,UACAuB,YACAO,UAAW+3N,EACL,CACExB,SAAU,KAAQ,CAACsB,EAAgBC,IACnCzxN,QAASyoE,QAEX3rE,IAEV,OAAO,IAAAuI,UAAQ,IAIa,UAApBu7H,EAASp7H,SACT,SAAiBo7H,EAASn7H,SAC1B,SAAcm7H,EAASn7H,MAAM+jL,QAC7B5oD,EAASn7H,MAAM+jL,MAAM3iG,SACd,CACHtmF,OAAQ,SAAmBqgI,EAASn7H,MAAM+jL,MAAM3iG,UAChDphF,WAAO3I,EACP0I,OAAQ,WAGTo7H,GACR,CAACA,GACR,C,uCChCA,SAAS+wF,GAAgBC,GACrB,IAAKA,EACD,OAAO,KAEX,MAAM9uN,EAAQ8uN,EAAOC,aAAa,GAAGC,SACrC,OAAI,KAAMhvN,GACC,KAEP,KAASA,GACFA,EAEJ08B,OAAO0oL,WAAWplN,EAC7B,CA6BO,SAASivN,GAAaxxN,EAAQixN,EAAgBC,EAAkBxlM,GACnE,OAAS1rB,aAAuC,EAASA,EAAOsmF,SAASxkF,WAAW,IAjBxF,SAA2B9B,EAAQixN,EAAgBC,EAAkBxlM,GACjE,MAAM2lM,EAASrxN,aAAuC,EAASA,EAAOuZ,KAAK,CAAEk4M,gBAAgB,QAAwB/lM,KAAe2lM,SAC9HK,EAAgBL,aAAuC,EAASA,EAAOM,gBAAgBV,GAC7F,GAAIC,GAAoH,KAA/FlxN,aAAuC,EAASA,EAAO61C,OAAO+7K,qBAAqB3vN,QACxG,OAEJ,MAAM4vN,EAAkBX,EAAmBG,aAAuC,EAASA,EAAOM,gBAAgBT,QAAoB30N,EACtI,OAAOm1N,EACD,CACEI,kBAAmBJ,EAAcvxL,WAAW2xL,kBAC5CC,cAAeL,EAAcK,gBAC7BphG,cAAeygG,GAAgBM,GAC/BM,2BAA4BZ,GAAgBS,SAE9Ct1N,CACV,CAIU01N,CAAkBjyN,EAAQixN,EAAgBC,EAAkBxlM,GA/BtE,SAA4B1rB,EAAQixN,GAChC,IAAIt0N,EAAIswB,EACR,GAAKjtB,EAGL,MAAO,CACH8xN,kBAAmB9xN,EAAO61C,OAAOi8K,mBAAkB,SAAeb,IAClEc,cAA2J,QAA3I9kM,EAAgF,QAA1EtwB,EAAKqD,EAAO61C,OAAOi8K,mBAAkB,SAAeb,WAAqC,IAAPt0N,OAAgB,EAASA,EAAGo6B,yBAAsC,IAAP9J,OAAgB,EAASA,EAAG9O,OAC/LwyG,mBAAep0H,EACfy1N,gCAA4Bz1N,EAEpC,CAmBU21N,CAAmBlyN,EAAQixN,EAErC,CC1CO,SAAS,GAAmCpzN,GAC/C,IAAI,QAAkBA,GAAS,CAC3B,MAAMmU,GAAoB,QAAwBnU,GAClD,KAAK,QAAyBmU,GAG1B,MAAM,IAAI,MAAa,4FAS3B,MAP0B,CACtBf,gBAAiB,CACbiB,mBAAmB,QAA0BrU,GAC7C4T,aAAa,QAAa5T,GAC1BmU,qBAIZ,CACK,IAAI,QAAqBnU,GAU1B,MAT0B,CACtBsT,WAAY,CACRjU,KAAM,WACNwE,YAAa,gBACb9B,KAAM/B,EAAOgC,mBAAmBD,KAChCE,GAAIjC,EAAOgC,mBAAmBC,GAC9Bb,QAASpB,EAAOgC,mBAAmBZ,UAK1C,IAAI,QAAqBpB,GAAS,CACnC,G94BvBgC3B,E84BuBH2B,EAAOqD,mBAAmBQ,Y94BvBd,IAAQxF,KAAQqiB,GAAsB+L,MAAM5oB,GAAgBA,IAAgBxF,I84ByBjH,MAAM,IAAI,MAAa,yHAW3B,MAT0B,CACtBiV,WAAY,CACRjU,KAAM,WACNwE,YAAa7D,EAAOqD,mBAAmBQ,YACvC9B,KAAM/B,EAAOqD,mBAAmBtB,KAChCE,GAAIjC,EAAOqD,mBAAmBpB,GAC9Bb,QAASpB,EAAOqD,mBAAmBjC,SAI/C,C94BrCmC,IAAC/C,E84BsCpC,MAAM,IAAI,MAAa,kEAC3B,CAKO,SAASi2N,GAAkBt0N,GAC9B,KAAK,QAAsBA,GACvB,OAAOA,EAEX,MAAMlB,EAAKkB,EAAOsT,YAAclS,QAASnB,GAAMnB,EAC/C,MAAO,CACHwU,YAFsD,SAAOxU,EAAI,CAAC,YAI1E,C,oFCjEO,MAAMy1N,GAAS,IACf,SAASC,GAAaC,EAAQn0M,EAAQuN,GACzC,MAAM6mM,EAAiB,kBAAmCD,IACpD,eAAEE,GAAmB,iBAAkCD,EAAgBp0M,EAAQuN,GACrF,OAAO8mM,CACX,CACO,SAASC,GAAqBlwN,EAAO4b,GACxC,MAAMo0M,EAAiB,kBAAmChwN,IACpD,uBAAEmwN,GAA2B,iBAAkCH,EAAgBp0M,GACrF,OAAO,KAAO5b,KAAWmwN,CAC7B,CCJA,MAAMC,GAAsBP,GAE5B,MAAMQ,WAAiB,EAAA3wG,cACnB4wG,wBACI,OAAO,KAAG,YAAa,CACnB,qBAAsBr7N,KAAKc,MAAMw6N,mBAC7Bt7N,KAAKc,MAAMs9G,cACXp+G,KAAKc,MAAMs9G,aANH,GAOZ,kBAAmBp+G,KAAKc,MAAM2jD,aAAezkD,KAAKc,MAAM4M,MACxD,kBAAmB1N,KAAKc,MAAM2jD,WAAazkD,KAAKi7N,wBAExD,CACAM,2BACI,GAAIv7N,KAAKc,MAAMw6N,kBAAmB,CAC9B,MAAM,OAAEn5M,IAAW,SAAgCniB,KAAKc,MAAM06N,cAAex7N,KAAKc,MAAMs9G,cACxF,MAAO,CACHj8F,OAAQ,GAAGA,MACXk9F,WAAY,GAAGl9F,MAEvB,CAEJ,CACAwrF,SACI,OAAI3tG,KAAKc,MAAMw6N,oBAAsBt7N,KAAKc,MAAMs9G,aACrC,KAEH,gBAAoBq9G,GAAA,EAAiB,CAAEtyH,MAAOnpG,KAAKu7N,2BAA4BxyH,UAAW/oG,KAAKq7N,yBACnG,gBAAoBK,GAAA,EAAe,CAAE7jH,WAAY,gBAAiB9gG,QAAS,IAAKxN,MAAOvJ,KAAK4/I,YAAc5/I,KAAK27N,eACvH,CACAA,cACI,MAAM,UAAEl3K,EAAS,MAAE/2C,EAAK,yBAAEkuN,EAAwB,kBAAEN,EAAiB,aAAEl9G,EAAY,KAAExuB,GAAS5vF,KAAKc,MACnG,GAAI2jD,EACA,OAAO,gBAAoBywF,GAAa,CAAEnsC,UAAW,+CAEzD,MAAMh+F,EAAQ2C,EAAQkiF,EAAKj/D,cAAc,CAAEzxB,GAAI,UAAac,KAAK67N,uBAC3DC,EAAkB,KAAG,kBAAmB,cAAe,CACzD,4BAA6BF,IAEjC,GAAIN,EAAmB,CAGnB,IAAKl9G,EACD,OAAO,gBAAoB82B,GAAa,CAAEnsC,UAAW,+CAEzD,MAAM,SAAEkW,IAAa,SAAgCj/G,KAAKc,MAAM06N,cAAep9G,GAC/E,OAAQ,gBAAoB,MAAO,CAAEjV,MAAO,CAAE8V,SAAU,GAAGA,QACvD,gBAAoB88G,GAAA,EAAgB,KAChC,gBAAoB,OAAQ,CAAEhzH,UAAW+yH,GAAmB/wN,IACxE,CACA,OAAQ,gBAAoBgxN,GAAA,EAAgB,KACxC,gBAAoB,OAAQ,CAAEhzH,UAAW+yH,GAAmB/wN,GACpE,CACA8wN,uBACI,OAAI77N,KAAKi7N,uBACEE,GAEJN,GAAa76N,KAAKc,MAAMiK,MAAO/K,KAAKc,MAAM6lB,OAAQ3mB,KAAKc,MAAMozB,WACxE,CACA+mM,uBACI,IAAI91N,EACJ,OAAO81N,GAAqBj7N,KAAKc,MAAMiK,MAAoC,QAA5B5F,EAAKnF,KAAKc,MAAM6lB,cAA2B,IAAPxhB,EAAgBA,EAAK,GAC5G,CACAy6I,WACI,MAAM,KAAEhwD,GAAS5vF,KAAKc,MACtB,OAAId,KAAKc,MAAM2jD,UACJ,GAEPzkD,KAAKc,MAAM4M,OAAS1N,KAAKc,MAAMk7N,UACxBh8N,KAAKc,MAAMk7N,UAElBh8N,KAAKi7N,uBACErrI,EAAKj/D,cAAc,CAAEzxB,GAAI,eAE7B,EACX,EAEJk8N,GAAS3vG,aAAe,CACpB/9G,MAAO,KACP3C,MAAO,GACP05C,WAAW,EACXm3K,0BAA0B,GAE9B,UAAe,EAAA76F,GAAA,IAAWq6F,ICvFba,GAAQ,IAkDrB,SAASC,GAAcC,EAAUluN,GAC7B,GAAI,KAAOkuN,IAAa,KAAOluN,GAC3B,OAAO2sN,GAEX,MAAMwB,EApBV,SAA4B92L,EAAMu9C,GAC9B,MAAMs5I,EAAW72L,GAAQ,EACnBr3B,EAAU40E,GAAQ,EACxB,GAAiB,IAAbs5I,GAAkBluN,EAAU,EAC5B,OAAOw5B,OAAO40L,kBAEb,GAAiB,IAAbF,GAAkBluN,EAAU,EACjC,OAAOw5B,OAAO60L,kBAEb,GAAiB,IAAbH,GAA8B,IAAZluN,EACvB,OAAO,EAEX,MAAMsuN,EAAUxzN,KAAK8nB,IAAIsrM,EAAW,KAC9BhyD,EAASl8J,EAAUkuN,EACzB,OAAOpzN,KAAKuwG,MAAM6wD,EAASoyD,EAC/B,CAK4BC,CAAmBL,EAAUluN,GAGrD,OAFoBmuN,EAAkBH,GAG3B,QAFUG,GAAkB,IAK5B,SAEJ,GAAGA,IACd,C,4BC3DA,MACM,GAAsBxB,GAC5B,MAAM6B,WAAe,EAAAhyG,cACjB5qH,cACIitC,SAASC,WACT/sC,KAAK08N,mBAAqB,cAC1B18N,KAAK28N,iBAAmB,KACpB,MAAMC,EAAU58N,KAAKc,MAAMkiH,UAAchjH,KAAKc,MAAM4M,MDgErD,CACHmvN,MAAO,UACPC,QAAS,UACTC,WAAYnC,IAdb,SAAoBuB,EAAUluN,EAAS6uN,GAC1C,MAAMD,EAjEV,SAAkBv3L,EAAMu9C,GACpB,MAAMs5I,EAAW72L,GAAQ,EACnBr3B,EAAU40E,GAAQ,EACxB,OAAIs5I,IAAaluN,EACN,UAEFkuN,EAAWluN,EACT,KAEJ,MACX,CAuDkB+uN,CAASb,EAAUluN,GAC3BgvN,EA7CV,SAAoBJ,EAAOC,GACvB,MAAc,YAAVD,EACO,UAZf,SAAyBA,EAAOC,GAG5B,MAFoC,OAAVD,GAA8B,eAAZC,GACR,SAAVD,GAAgC,cAAZC,CAElD,CAUaI,CAAgBL,EAAOC,GACrB,WAVf,SAAyBD,EAAOC,GAG5B,MAFoC,OAAVD,GAA8B,cAAZC,GACR,SAAVD,GAAgC,eAAZC,CAElD,CAQaK,CAAgBN,EAAOC,GACrB,WAEJ,SACX,CAkCyBM,CAAWP,EAAOC,GAEvC,MAAO,CACHD,QACAC,QAASG,EACTF,WAJeb,GAAcC,EAAUluN,GAM/C,CC5DkBovN,CAAWr9N,KAAKc,MAAMw8N,oBAAqBt9N,KAAKc,MAAMy8N,mBAAoBv9N,KAAKc,MAAMg8N,SACrFj6G,EAAU7iH,KAAKc,MAAM2jD,UAAY,GAAKm4K,EAAQG,WACpD,OAAQ,gBAAoB,KAAM,CAAEh0H,UAAW,yGAC3C,gBAAoB,MAAO,CAAEA,UAAW,mDACpC,gBAAoBgzH,GAAA,EAAgB,CAAExyN,MAAOs5G,EAAS26G,aAAc,UAAUZ,EAAQE,UAAWh1G,QAAS,MAAQ9nH,KAAKy9N,sBAAsBb,KACjJ,gBAAoB,KAAM,KACtB,gBAAoB,KAAkB,CAAE19N,GAAI,mBAAqB,EAE7Ec,KAAK09N,qBAAuB,IAChB,gBAAoB,KAAM,CAAE30H,UAAW,yGAA0Gx/F,MAAOvJ,KAAK67N,wBACjK,gBAAoBE,GAAA,EAAgB,CAAEj0G,QAAS,MAAQ9nH,KAAK29N,6BAC5D39N,KAAK49N,2BAEjB,CACAjwH,SACI,MAAM,kBAAE2tH,EAAiB,aAAEl9G,EAAY,YAAED,GAAgBn+G,KAAKc,MAE9D,OADmB,SAAuBw6N,EAAmBn9G,EAAaC,GAE9D,gBAAoB,MAAO,CAAErV,UAAW,iFAC5C,gBAAoB80H,GAAA,EAAoB,CAAEC,oBAAqB99N,KAAK09N,qBAAsBK,mBAAoB/9N,KAAK28N,oBAEnH,gBAAoB,MAAO,CAAE5zH,UAAW/oG,KAAKg+N,0BACjDh+N,KAAK28N,mBACL38N,KAAK09N,uBACb,CACAD,sBAAsBb,GAClB,OAAO58N,KAAKc,MAAM2jD,WAAuB,gBAAoB,WAAgB,KACzE,gBAAoB,OAAQ,CAAEskD,UAAW,KAAG,iBAAiB6zH,EAAQC,QAAS,uBAC9E,gBAAoB,OAAQ,KAAMD,EAAQG,YAClD,CACAa,2BACI,QAAO59N,KAAKc,MAAMm9N,oBAAsB,gBAAoB,KAAM,CAAEl1H,UAAW,yBAA0BxlG,IAAKvD,KAAK08N,mBAAoBnzN,MAAOvJ,KAAKc,MAAMm9N,oBAAsBj+N,KAAKc,MAAMm9N,mBAC9L,CACAN,4BACI,OAAI39N,KAAKc,MAAM2jD,UA3CK,IA8CbzkD,KAAKc,MAAM4M,MAAQ1N,KAAK2wB,cAAc,SAAW3wB,KAAK67N,sBACjE,CACAA,uBACI,IAAI12N,EACJ,MAAM4F,EAAQ/K,KAAKc,MAAMw8N,oBACzB,OAAIt9N,KAAKc,MAAMkiH,UAAYi4G,GAAqBlwN,EAAoC,QAA5B5F,EAAKnF,KAAKc,MAAM6lB,cAA2B,IAAPxhB,EAAgBA,EAAK,IACtG,GAEJ01N,GAAa9vN,EAAO/K,KAAKc,MAAM6lB,OAAQ3mB,KAAKc,MAAMozB,WAC7D,CACA8pM,yBACI,MAAM,YAAE7/G,GAAgBn+G,KAAKc,MACvB47N,EAAqB18N,KAAK08N,mBAAmBzuN,QAC7C86F,EAAY,6CACZm1H,GAAsB,QAA+B//G,GAC3D,OAAIu+G,GAAsBwB,EACf,GAAGn1H,KAAam1H,IAEpBn1H,CACX,CACAp4E,cAAczxB,GACV,OAAOc,KAAKc,MAAM8uF,KAAKj/D,cAAc,CAAEzxB,MAC3C,EAEJu9N,GAAOhxG,aAAe,CAClB/9G,MAAO,KACPs1G,UAAU,EACVv+D,WAAW,EACXw5K,mBAAoB,GACpB9/G,YAAa,EACbC,aAAc,EACdk9G,mBAAmB,GAEvB,UAAe,EAAAv6F,GAAA,IAAW07F,ICxEpB,IAAU,QAAc,MAC9B,MAAM0B,WAAmB,EAAA57H,UACrB67H,uBAAuBjgH,EAAaC,GAChC,IAAIj5G,EAAIswB,EACR,GAA0C,SAAtCz1B,KAAKc,MAAM+hB,IAAIA,IAAIhe,eACnB,OAAO,EAEX,MAAM,UAAEw5N,EAAS,kBAAE/C,GAAsBt7N,KAAKc,MACxCw9N,ELmDP,SAAgCp5N,GACnC,MAAMq/E,EAAiBr/E,EAAOud,YAExB+hE,IAAkBD,GANrB,SAA6Br/E,EAAQ+U,GACxC,OAAO/U,EAAO+a,uBAAuB6S,MAAMzsB,IAAW,QAA+BA,KAAW,QAAgBA,EAAOoB,QAASwS,IACpI,CAI8C,CAAoB/U,EAAQq/E,GAGtE,OAD0BA,GACCC,CAC/B,CK1DwC,CAAuBxkF,KAAKc,MAAM+hB,KAC5D07M,EAAsBv+N,KAAKc,MAAMmH,QAAQouB,OAAOtF,KAAO,QAAaA,KAAM,QAAoBA,KAE9FytM,ECFgB,EAACn4N,EAAQxB,EAAgB+qF,IAC5B,aAAnB/qF,EAEO+qF,EAAKj/D,cAAc,CAAEzxB,GAAI,8BAEhC,QAAqBmH,MAAY,QAAoBA,GA3BxB,EAACA,EAAQupF,KAC1C,MAAM,KAAExnF,EAAI,GAAEE,EAAE,YAAE4B,IAAgB,QAAyB7D,GACrDuqB,EAAI7nB,KAAK8nB,IAAIvoB,EAAKF,GAAQ,EAChC,OAAQ8B,GACJ,IAAK,kBACD,OAAO0lF,EAAKj/D,cAAc,CAAEzxB,GAAI,iCAAmC,CAAE0xB,IACzE,IAAK,gBACD,OAAOg/D,EAAKj/D,cAAc,CAAEzxB,GAAI,+BAAiC,CAAE0xB,IACvE,IAAK,gBACD,OAAOg/D,EAAKj/D,cAAc,CAAEzxB,GAAI,8BAAgC,CAAE0xB,IACtE,IAAK,mBACD,OAAOg/D,EAAKj/D,cAAc,CAAEzxB,GAAI,+BAAiC,CAAE0xB,IACvE,IAAK,iBACD,OAAOg/D,EAAKj/D,cAAc,CAAEzxB,GAAI,gCAAkC,CAAE0xB,IACxE,IAAK,mBACD,OAAOg/D,EAAKj/D,cAAc,CAAEzxB,GAAI,kCAAoC,CAAE0xB,IAC1E,IAAK,gBACD,OAAOg/D,EAAKj/D,cAAc,CAAEzxB,GAAI,+BAAiC,CAAE0xB,IACvE,QACI,MAAO,GACf,EAQW6tM,CAA6Bp4N,EAAQupF,GA7BtB,CAACA,GAASA,EAAKj/D,cAAc,CAAEzxB,GAAI,mCA+BtDw/N,CAAsB9uI,GDNR+uI,CADE3+N,KAAKc,MAAMmH,QAAQ1B,KAAK,MACCvG,KAAKc,MAAM+hB,IAAIA,IAAIhe,eAAgB7E,KAAKc,MAAM8uF,MACpFgvI,EAAcL,GAAuBD,EAErCO,GADa,SAAmB7+N,KAAKc,MAAM4M,QAClB1N,KAAKc,MAAM4M,MAAMkC,UAAY,cACtDkvN,GAAoB,SAAoB9+N,KAAKc,MAAM+hB,IAAIA,KACvD7iB,KAAKc,MAAM+hB,IAAIA,IAAIG,yBACnBje,EACN,OAAQ,gBAAoB,GAAQ,CAAEi+G,SAAU47G,EAAan6K,UAAWzkD,KAAKc,MAAM2jD,UAAW84K,mBAA6G,QAAxFp4N,EAAKk5N,aAA6C,EAASA,EAAUllG,qBAAkC,IAAPh0H,EAAgBA,EAAK,KAAMm4N,oBAA2H,QAArG7nM,EAAK4oM,aAA6C,EAASA,EAAU7D,kCAA+C,IAAP/kM,EAAgBA,EAAK,KAAMwoM,mBAAoBO,EAAU73M,OAAQ03M,aAA6C,EAASA,EAAU9D,cAAe7sN,MAAQmxN,OAA8B95N,EAAnB/E,KAAKc,MAAM4M,MAAmBwmB,WAAYl0B,KAAKc,MAAMozB,WAAY4oM,QAASgC,EAAmBxD,kBAAmBA,EAAmBn9G,YAAaA,EAAaC,aAAcA,GACnsB,CACAu9G,YAAYv9G,GACR,IAAIj5G,EACJ,MAAM,UAAEk5N,EAAS,wBAAEU,EAAuB,gBAAEC,EAAe,kBAAE1D,EAAiB,IAAEz4M,GAAQ7iB,KAAKc,MAEvF+9N,GADa,SAAmB7+N,KAAKc,MAAM4M,QAClB1N,KAAKc,MAAM4M,MAAMkC,UAAY,cACtD4rN,EAA2C,SAA3B34M,EAAIA,IAAIhe,eACxBo6N,EAAY,gBAAoB,GAAU,CAAEx6K,UAAWzkD,KAAKc,MAAM2jD,UAAW/2C,MAAQmxN,OAA8B95N,EAAnB/E,KAAKc,MAAM4M,MAAmBsuN,UAAWh8N,KAAKc,MAAMk7N,UAAWjxN,MAAgG,QAAxF5F,EAAKk5N,aAA6C,EAASA,EAAUllG,qBAAkC,IAAPh0H,EAAgBA,EAAK,KAAMwhB,OAAQ03M,aAA6C,EAASA,EAAU9D,cAAermM,WAAYl0B,KAAKc,MAAMozB,WAAY0nM,yBAA0B57N,KAAKc,MAAMo+N,kCAAmC5D,kBAAmBA,EAAmBl9G,aAAcA,EAAco9G,cAAeA,IAC3jB,OAAIwD,EACID,EACO,gBAAoB,OAAQ,CAAEh2H,UAAW,oCAAsCk2H,GAG9E,gBAAoB,IAAK,CAAEl2H,UAAW,gCAAiC8H,QAAS7wG,KAAKc,MAAMk+N,iBAAmBC,GAGvHA,CACX,CACAtxH,SACI,OAAQ,gBAAoB,MAAO,CAAE5E,UAAW,yBAC5C,gBAAoB,MAAO,CAAEA,UAAW,KAAG,wBAAyB,CAAE,eAAgB/oG,KAAKc,MAAMonD,gBAC7F,gBAAoB,GAAS,CAAEnK,QAAQ,IAAQ,EAAGn7B,aAAYs7F,kBAC1D,IAAI/4G,EAAIswB,EAAIK,EACZ,OAAQ,gBAAoB,MAAO,CAAEizE,UAAW,2BAA4BxlG,IAAKqf,GAC7E,gBAAoB,MAAO,CAAEmmF,UAAW,YACpC/oG,KAAK27N,YAA0C,QAA7Bx2N,EAAK+4G,EAAYngE,cAA2B,IAAP54C,OAAgB,EAASA,EAAGgd,QACnFniB,KAAKo+N,uBAAqD,QAA7B3oM,EAAKyoF,EAAYngE,cAA2B,IAAPtoB,OAAgB,EAASA,EAAGvT,MAAqC,QAA7B4T,EAAKooF,EAAYngE,cAA2B,IAAPjoB,OAAgB,EAASA,EAAG3T,SAAU,KAEzM,EAEJg8M,GAAW1yG,aAAe,CACtBszG,yBAAyB,EACzB92N,QAAS,GACTi3N,mCAAmC,GAEvC,UAAe,EAAAn+F,GAAA,IAAWo9F,IE9DbgB,GAAc,EAAGC,wBAAuB9oF,UAAS+oF,cAAaN,0BAAyBl8M,MAAKw7M,YAAWp2N,UAASisB,aAAYonM,oBAAmB5tN,QAAOsuN,YAAWv3K,gBAC1K,MAAMyD,EAAewiC,GAAqBnjC,IACpC+3K,GAAsB,IAAApzI,cAAY,KACpC,IAAI/mF,EACJ,GAAKk6N,GAAgB/oF,EAGrB,OAAOA,EAAQ,CACX5wI,KAAM,WACN4D,QAAS,eACTyB,MAAgG,QAAxF5F,EAAKk5N,aAA6C,EAASA,EAAUllG,qBAAkC,IAAPh0H,OAAgB,EAASA,EAAGqiC,WACpItJ,cAAemgM,aAA6C,EAASA,EAAU/D,mBACzE,CACE,CACI/tN,OAAQ8xN,EAAU/D,oBAGxB,IACR,GACH,CAAC+D,aAA6C,EAASA,EAAUllG,cAAeklG,aAA6C,EAASA,EAAU/D,kBAAmB+E,EAAa/oF,IACnL,OAAQ,gBAAoB,GAAY,CAAE7xF,YAAaA,EAAW5hC,IAAKA,EAAKw7M,UAAWA,EAAWa,kCAAmCE,EAAuBJ,gBAAiBK,GAAe/oF,EAAUgpF,OAAsBv6N,EAAWg6N,wBAAyBA,EAAyB92N,QAASA,EAASisB,WAAYA,EAAYonM,kBAAmBA,EAAmB5tN,MAAOA,EAAOsuN,UAAWA,EAAW9zK,aAAcA,GAAgB,ECXza,GAAoBs6C,GAAkB41B,YvhBVK,KuhB6KpCmnG,IAAc,IAAA3/G,OAlKF9+G,IACrB,MAAM,aAAEo7B,EAAY,UAAEyR,EAAS,QAAE7tC,EAAO,UAAEuB,EAAS,eAAEo4N,EAAc,iBAAEC,EAAgB,iBAAEhpJ,EAAgB,MAAE/zC,EAAK,WAAEzI,EAAU,sBAAEkrM,EAAqB,WAAEtnM,EAAU,QAAEw+G,EAAO,QAAEj4E,EAAO,gBAAEu+C,GAAqB97G,EAChM8uF,GAAO,EAAAC,GAAA,KACP2vI,GAAe,QAAU7xL,IACzB,MAAEjgC,EAAK,OAAElF,EAAM,OAAEiF,GAAW+rN,GAAwB,CACtD15N,UACAuB,YACAo4N,iBACAC,mBACAhpJ,mBACAipJ,YAAY,IAEVl1K,EAAuB,YAAXh3C,GAAmC,YAAXA,GAClCC,MAAO8pN,EAAqBhvN,OAAQi3N,EAAsBhyN,OAAQiyN,GAA0BlG,GAAwB,CACxH15N,UACAuB,YACAo4N,iBACA/oJ,mBACAipJ,YAAY,IAEV9B,EAAmD,YAAzB6H,GAA+D,YAAzBA,EAChEt+N,EAAcspF,GAAqB3yB,IACnCyO,EAAyBkkB,GAAqBnkB,IAC9CrkE,EAAWwoF,GAAqB1+B,IAChCsvK,EAAoB5wI,GAAqBz7B,IACzC1nC,EAAamjE,GAAqBz9B,IAClC4hB,EAAiB6b,GAAqB8R,IACtCk9B,EAAehvC,GAAqBqT,GAAuCyhI,IAC3E/H,EAAoB/sI,GAAqBsG,GAAkCwuI,IAC3ExJ,EAAqBtrI,GAAqByG,GAAuCquI,IACjFn2I,EAAWoB,KACXk1I,GAAkB,IAAAzzI,cAAY,KAChC7C,EAAS5jD,GAAUzE,mBAAmBw+L,GAAc,GACrD,CAACA,EAAcn2I,IACZu2I,GAAmB,IAAA1zI,cAAY,KACjC7C,EAAS5jD,GAAU5E,sBAAsB,GAC1C,CAACwoD,KACI7gF,OAAQq3N,GCnDsB,EAAC36N,EAAQy3B,KAC/C,MAAMspB,EAAmBykC,GAAqB3oC,KACtCmoC,IAAK41I,EAAoB,OAAEt3N,EAAM,OAAEiF,EAAM,MAAEC,GAAWk/E,GAA4B,CACtFC,aAAc3hB,KAEZwF,EAAmBloE,EAQzB,OAPA,IAAAwF,YAAU,KACF9I,EAAO3B,KACPu8N,EAAqB56N,EAAO3B,IAChC,GAGD,CAACo5B,EAAOz3B,EAAQ+gD,IACZ,CACHz9C,OAAQkoE,EACRjjE,SACAC,QACH,EDkCyCqyN,CAA2BpyL,EAAWhR,GAC1Ei7L,KAAmBiI,aAAqE,EAASA,EAAsBp1N,QACvHu6M,EAAoBv2H,IAA2B,QAAU9gD,KAC/D,IAAA3/B,YAAU,KACN,MAAM6I,EAAMnJ,QAAqCA,EAAQ8pN,EACrD3gN,IACAwnD,SAAkDA,EAAQxnD,IAG1DnJ,GACAs3M,EAAkB3mJ,QAAQ3wD,EAC9B,GACD,CAACA,EAAO8pN,KACX,IAAAxpN,YAAU,KACFxF,IAEIA,EAAOw3N,UAAU91L,UACjB86K,EAAkB3mJ,QAAQ,IAAI,OAG9B2mJ,EAAkBzmJ,UAAU/1D,EAAOA,SAAUA,EAAO6lF,YAE5D,GACD,CAAC7lF,IACJ,MAAMy3N,GAAgB,IAAA/zI,cAAajuD,KAC1Bq4G,GAGEA,EAAQ,CACXxnD,SAAUtmF,aAAuC,EAASA,EAAOsmF,SACjE7wD,eACA7e,iBAAkBuuB,EAAUtuB,OAC5BJ,WAAW,QAAU0uB,MAE1B,CAAC2oG,EAAS9tI,EAAQmlC,IACfuyL,EjBxE2B,CAACN,IAClC,MAAOO,EAAgBC,GAAiBjL,GAAqB,GAAayK,IACnES,EAAgBC,GAAiBnL,GAAqB,GAAayK,IACnEW,EAAgBC,GAAkBrL,GAAqB,GAAcyK,GAI5E,MAAO,CACHQ,gBACAD,iBACAG,gBACAD,iBACAI,eARkB,IAAAv0I,cAAavvD,IAC/B6jM,EAAe,CAAC7jM,EAAMp5B,KAAK,GAC5B,CAACi9N,IAOAD,iBACH,EiB0D0BG,CAAsBd,GAC3CrJ,EAAc/vJ,GACd,qBAAEynB,EAAoB,qBAAEC,GAAyBJ,IAAwB,EAAA3iF,EAAA,KAAe,QAAUwiC,MACxG,IAAA3/B,YAAU,KACFy2C,EACAwpC,IAGAC,IAEJ82H,EAAkBj2H,iBAAiB,CAAEtqC,YAAaA,GAAY,GAC/D,CAACA,EAAWwpC,EAAsBC,IACrC,MAAM,qBAAEd,EAAoB,qBAAEC,GAAyBJ,KACjDoxI,EAAYrE,GAAaxxN,EAAQixN,EAAgBC,EAAkBxlM,GACnEojM,ETpDH,SAA2B9uN,EAAQixN,EAAgBvlM,GACtD,MAAMysM,EAAcn4N,aAAuC,EAASA,EAAOuZ,KAAK,CAAEk4M,gBAAgB,QAAwB/lM,KAAe2lM,SACzI,OAAO8G,EACD,CACEpG,cAAeoG,EAAY52L,MACrB42L,EAAYxG,gBAAgBV,GAAgBc,qBAC5Cx1N,EACNo0H,cAAewnG,EAAY52L,MACrB6vL,GAAgB+G,EAAYxG,gBAAgBV,IAC5C,QAER10N,CACV,CSwC2B67N,CAAkBnB,EAAsBhG,EAAgBvlM,IACzE,+BAAEk8L,EAA8B,qBAAEmC,KAAyB,IAAAjlN,UAAQ,ITxCtE,SAA+B+wN,EAAWzuI,GAC7C,MAAMwgI,KAAkCiO,aAA6C,EAASA,EAAU9D,iBAClG,SAAyB8D,EAAU9D,eAEnCxvN,EAAQ,MAAOszN,aAA6C,EAASA,EAAUllG,gBAAkB,EAAG,GAI1G,MAAO,CACHi3F,iCACAmC,qBALyBnC,EACvB,GAAGxgI,EAAKj/D,cAAc,CAAEzxB,GAAI,4BAAqC,IAAR6L,IACzD,GAAG6kF,EAAKj/D,cAAc,CAAEzxB,GAAI,4BAA6B6L,IAKnE,CS4BmF81N,CAAsBxC,EAAWzuI,IAAO,CAACyuI,EAAWzuI,IAC7HqN,IAAa,SAAkCpuB,GAC/CwwJ,IAAgBhB,aAA6C,EAASA,EAAU/D,oBAClF9xN,IACA,SAA6By0F,GAAYohI,EAAU/D,kBAAmB9xN,IACtEkxH,EAAajvH,OAAS,EACpBqpN,GAA0D,eAAtCoM,EAAmBC,gBACH,eAAtCD,EAAmBG,eACjB,aACsC,UAAtCH,EAAmBC,gBAAoE,UAAtCD,EAAmBG,eAChE,QACA,QACJ,aAAEpoI,GAAY,WAAEE,GAAU,WAAEE,IAAeN,GAAmBynI,GAC9DsB,GAAiBxqF,GAAW2pF,EAClC,OAAQ,gBAAoB,MAA2B,CAAE9nG,kBAAmB,IACxE,gBAAoBw9F,GAA2B,CAAE9yM,IAAK8qB,EAAWhR,MAAOA,EAAO10B,QAASyoE,EAAkB58C,sBAAuB5xB,EAAUm8N,UAAWA,EAAW5/G,eAAiBL,GAAkB,gBAAoB2B,GAAuB,CAAEx2G,MAAOokC,EAAUpkC,MAAO60G,aAAcA,IAAkBk5G,eAAgBA,EAAgBf,YAAaA,EAAaD,eAAgBx+L,EAAY0/L,oBAAqBA,QAAiEA,EAQhdI,EAAgB,IAAI,WAAmB7yN,EAAY0/C,UAAWA,EAAWwsK,gBAAgB,EAAoD4G,wBAAyBA,EAAyBD,cAAeA,EAAeH,kBAAmBA,EAAmBzB,mBAAoBA,EAAoBS,uBAAwB,KAChUppI,IAAuB1wD,GACvBgjM,GAAiB,EAClB3H,kBAAmB,IAAO,gBAAoB,GAAuB,CAAEr7L,MAAOA,EAAOpV,WAAYA,EAAYirM,UAAWpxN,EAAY4kJ,MAAOgqE,wBAAyB,KAC/J5iI,IACAwyI,GAAkB,EACnBhP,yBAA0B,KACzBsP,EAAmBO,cAAc9jM,EAAM,EACxC+zL,uBAAwB,CAACtB,EAAWK,KACnC,IAAItqN,EAAIswB,EACR,OAAIkH,EACOujM,EAAmBI,cAAc5gO,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGg1B,GAAQ,CAAEyyL,YAC9EK,gBAAeiI,YAAaxI,GAAuBoI,EAAen+F,cAAei2F,EAAWK,QAKpG,QAAUvzL,EAAc,sDACjBgkM,EAAmBE,cAAc,CACpCp7N,UAAWk3B,EACXh3B,OAAQs6N,EACRpQ,YACAK,gBACAiI,YAAaxI,GAAgH,QAAxF/pN,EAAKk5N,aAA6C,EAASA,EAAUllG,qBAAkC,IAAPh0H,EAAgBA,EAAK,EAAGiqN,EAAWK,GACxKnmL,cAAe,CACX//B,MAAO,gBACP+X,YAAa,GACbrZ,QAAwK,QAA9JwtB,EAAKi7C,aAA2D,EAASA,EAAiB3xE,IAAI,IAAoCA,IAAI47N,WAAuC,IAAPllM,EAAgBA,EAAK,IAEzMnU,YAAa,GACb/X,MAAO,KACT,EACHwoN,yBAA0B,KACzB,IAAI5sN,EAAIswB,EACR,OAAOyqM,EAAmBI,cAAc5gO,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGg1B,GAAQ,CAE5E+6L,YAAaxI,GAAgH,QAAxF/pN,EAAKk5N,aAA6C,EAASA,EAAUllG,qBAAkC,IAAPh0H,EAAgBA,EAAK,EAAGw3B,EAAMyyL,UAAWzyL,EAAM8yL,eAEpLnmL,cAAe5pC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGg1B,EAAM2M,eAAgB,CAAErhC,QAAwK,QAA9JwtB,EAAKi7C,aAA2D,EAASA,EAAiB3xE,IAAI,IAAoCA,IAAI47N,WAAuC,IAAPllM,EAAgBA,EAAK,OAAS,EAC1Rq7L,yBAA0Bl0G,EACvB,KACE,IAAIz3G,EAAIswB,EACR,OAAOmnF,EAAgBt5D,GAAiL,QAAnI7tB,EAAkF,QAA5EtwB,EAAKw3B,aAAqC,EAASA,EAAM2M,qBAAkC,IAAPnkC,OAAgB,EAASA,EAAG8C,eAA4B,IAAPwtB,EAAgBA,EAAK,GAAIkY,IAAY,EAAK,OAE5P5oC,EAAWksN,eAAgB4G,EAAyBnG,oBAAqBwO,EAAmBK,eAAgBzM,kBAAmBA,GAAmBhC,oBAAqBgC,GAAmB7rN,QAASyoE,EAAkB0/I,+BAAgCA,EAAgCmC,qBAAsBA,GAAsB4B,4BAA6B0L,EAAuB//N,QAASA,EAASuB,UAAWA,IAAeqwN,oBAAqBwO,EAAmBK,eAAgBzM,kBAAmBA,GAAmB77H,aAAcA,GAAcE,WAAYA,GAAYE,WAAYA,KAAc,IAC/kB,gBAAoB8mI,GAAa,CAAEt8M,IAAK8qB,EAAW0wL,UAAWA,EAAWp2N,QAASyoE,QAA2DA,EAAmB,GAAI0uJ,sBAAuBA,EAAuBC,YAAaA,GAAa/oF,QAASwqF,GAAgB5sM,WAAYA,EAAYonM,kBAAmBA,EAAmB5tN,MAAOA,EAAOsuN,UAAWpsI,EAAKj/D,cAAc,CAAEzxB,GAAI,mBAAqBulD,UAAWA,MAC7Z,IEnKL,SAASs8K,IAAW,UAAEpzL,EAAS,iBAAEsY,IACpC,MAAM,OAAEx4C,EAAM,OAAEjF,EAAM,MAAEkF,GAAU20M,GAAiB10K,GAE7C+iC,EAAmBloE,EACnBw4N,EAAkBt2I,GAAqBxxC,IAC7C,IAAKvL,GAAwB,YAAXlgC,EACd,MAAO,CACHA,OAAQ,UACRC,WAAO3I,EACPyD,YAAQzD,GAGhB,GAAe,UAAX0I,EACA,MAAO,CACHA,OAAQ,QACRC,MAAOA,EACPlF,YAAQzD,GAGhB,GAAe,aAAX0I,EACA,MAAO,CACHA,OAAQ,QACRC,MAAO,IAAI,MAAmB,oDAC9BlF,YAAQzD,GAGhB,GAAe,YAAX0I,EACA,MAAO,CACHA,OAAQ,UACRC,WAAO3I,EACPyD,YAAQzD,GAGhB,MAAM82D,EAAavY,GAA6C2C,EAAkBtY,GAC5E8rL,GAAiB,SAAW9rL,EAAU9qB,IAAIC,QAC1C42M,EAOV,SAA6B/rL,EAAW8rL,EAAgB/oJ,EAAkBswJ,GACtE,MAAMjqJ,EAAappC,EAAU9qB,IAAIhe,eAC3B2sE,IAAcd,aAA2D,EAASA,EAAiB59C,MAAMzsB,IAAW,QAAaA,MAAY,QAAoBA,MACvK,GAAmB,SAAf0wE,IAAyBvF,GAAc7jC,EAAUlrB,YAArD,CAGA,GAAmB,mBAAfs0D,EACA,OAAO,SAAyB0iJ,EAAgB,CAAC,CAAEhyN,QAASkmC,EAAUlrB,YAAaw+M,WAAY,KAEnG,GAAmB,aAAflqJ,EAA2B,CAC3B,MAAMmqJ,EAAsBF,EAAgBj6N,IAAI4mC,EAAUlrB,cAC1D,QAAUy+M,EAAqB,mDAC/B,MAAMC,EAAgBD,EAAoBl3N,eAAezD,MAAMmiI,GAAgD,kBAA9BA,EAAcx+H,cAE/F,OADA,QAAUi3N,EAAe,4CAClB,SAAc1H,EAAgB0H,EAAcniM,UAAUz7B,IACjE,EACA,SAAU,EAAO,sBAAsBwzE,IAXvC,CAYJ,CAxB6BqqJ,CAAoBzzL,EAAW8rL,EAAgB/oJ,EAAkBswJ,GAC1F,MAAO,CACHvzN,OAAQ,UACRC,WAAO3I,EACPyD,OAAQ,CAAEixN,iBAAgBC,mBAAkBhpJ,mBAAkB7U,cAEtE,CCxCO,MAAMwlK,GAAoBvgO,IAC7B,MAAM,UAAE6sC,EAAS,MAAEhR,EAAK,gBAAEigF,EAAe,QAAE05B,EAAO,QAAEj4E,EAASv+D,QAASwhO,EAAejgO,UAAWkgO,EAAiBr9H,eAAgB4gH,EAAsB3gH,iBAAkB4gH,GAA4BjkN,GACrM,QAAU6sC,EAAU9qB,IAAK,4CACzB,MAAM,eAAEqhF,EAAc,iBAAEC,GAAqB2B,GAA8B,CACvE5B,eAAgB4gH,EAChB3gH,iBAAkB4gH,IAEhBjlN,GAAU,QAAiBwhO,GAC3BjgO,GAAY,QAAmBkgO,GAC/BrlM,EAAewuD,GAAqB9hC,IACpC3C,EAAmBykC,GAAqB3oC,IACxCq9K,EAAwB10I,GAAqB/6B,IAC7Cz7B,EAAaw2D,GAAqBx+B,IAClCp0B,EAAa4yD,GAAqBh+B,IAClC80K,EAAUT,GAAW,CAAEpzL,YAAWsY,qBACxC,MAAuB,YAAnBu7K,EAAQ/zN,QAA2C,YAAnB+zN,EAAQ/zN,OACjC,gBAAoB02F,EAAkB,MAE1B,UAAnBq9H,EAAQ/zN,OACD,gBAAoBy2F,EAAgB,CAAEt0F,QAAS4xN,EAAQ9zN,MAAMkC,UAEhE,gBAAoB2vN,GAAa,CAAErjM,aAAcA,EAAcyR,UAAWA,EAAW8rL,eAAgB+H,EAAQh5N,OAAOixN,eAAgBC,iBAAkB8H,EAAQh5N,OAAOkxN,iBAAkB/8L,MAAOA,EAAOk/B,WAAY2lK,EAAQh5N,OAAOqzD,WAAY6U,iBAAkB8wJ,EAAQh5N,OAAOkoE,iBAAkBksC,gBAAiBA,EAAiB05B,QAASA,EAASj4E,QAASA,EAASnqC,WAAYA,EAAYkrM,sBAAuBA,EAAuBt/N,QAASA,EAASuB,UAAWA,EAAW8iG,iBAAkBA,EAAkBrsE,WAAYA,GAAc,ECtBthB,SAAS2pM,GAAY9zL,GACxB,MAAMzV,EAAuBwyD,GAAqB59B,KAC1Co9B,IAAKw3I,GAAiC5hB,MACtC51H,IAAKy3I,GAAgBniB,GAAS,CAClCjhJ,UAAYzoD,KACJoiB,GAAyBpiB,EAAMlH,QAAQovB,WAAW5e,iBAAiB,IAGvEsiN,EAA6B5rN,EAAMlH,QAAQovB,WAAW5e,iBAAiB,GAAItJ,EAAMlH,QAAQovB,WAAYloB,EAAMnH,cAAc,IAGjI,OAAO,IAAAu9E,cAAap2E,IAChB6rN,EAAY7rN,EAAO,CAAE5Q,OAAQyoC,GAAY,GAC1C,CAACg0L,EAAah0L,GACrB,CCjBO,MAAMi0L,GAAiC9gO,IAC1C,MAAM,UAAE6sC,GAAc7sC,EAChBw1I,EAAUmrF,GAAY9zL,GAC5B,OAAO,gBAAoB0zL,GAAkB3hO,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAEw1I,QAASA,IAAW,ECLnFurF,GAAsB,EAAGt4N,QAAO2pI,gBAAe4uF,oBAAmB1uF,sBAAqBh1B,mBAChG,MAAMyF,EAAY96G,KAAKuZ,IAAI/Y,EAAMkB,OAFR,IAGzB,OAAQ,gBAAoBo1G,GAAgC,CAAEzB,aAAcA,GACxE,gBAAoB40B,GAAkB,CAAE3uI,KAAMkF,EAAO0pI,cAAe1pI,EAAOs6G,UAAWA,EAAWqvB,cAAeA,EAAeE,oBAAqBA,EAAqBD,qBAAsB2uF,IAAsB,ECDhNC,GAAsB1/H,GAAgB,CAC/CwxC,KCAiC/yI,GAC1B,gBAAoB8gO,GAA+BliO,OAAOiI,OAAO,CAAC,EAAG7G,IDA5Eu0H,KEKiCv0H,IACjC,MAAM,UAAE6sC,EAAW7tC,QAASwhO,EAAejgO,UAAWkgO,EAAiBr9H,eAAgB4gH,EAAsB3gH,iBAAkB4gH,EAAsB,QAAE1mJ,GAAav9D,EAC9J8uF,GAAO,EAAAC,GAAA,MACP,eAAEqU,EAAc,iBAAEC,EAAgB,sBAAEuB,GAA0BI,GAA8B,CAC9F5B,eAAgB4gH,EAChB3gH,iBAAkB4gH,IAEhBid,EAA4Bt8H,EAAsBjuB,cAAcwqJ,4BAChE,kBAAEC,EAAiB,YAAEC,GClBxB,SAAoCx0L,GAEvC,MAAOy0L,EAAoBC,IAAyB,IAAAv3I,YAC9ChpF,EAAW4oF,GAAqBnxC,IAChC+oL,EAAiBxgO,EAASiF,IAAI4mC,EAAU9qB,IAAIC,QAC5Cy/M,EAAkBH,GAAsBtgO,EAASiF,IAAIq7N,IACrD,gBAAEr1N,EAAe,kBAAEC,GAAsBE,KAC/C,IAAAc,YAAU,KACN,MAAMw0N,EAA2B,CAC7B34I,KAAOgY,GACKpyF,GAA0BoyF,IACD,2CAA7BA,EAAIjzF,QAAQe,QAAQjK,OACpB,QAAgBm8F,EAAIjzF,QAAQe,QAAQf,QAAQrL,IAAKoqC,EAAUpqC,KAEnEimF,QAAUlqF,IACN+iO,EAAsB/iO,EAAEsP,QAAQe,QAAQf,QAAQgU,WAAW,GAG7D6/M,EAAyB,CAC3B54I,KAAOgY,GACM1vF,GAAmC0vF,KACxC,QAAgBA,EAAIjzF,QAAQrL,IAAKoqC,EAAUpqC,MAC1CuM,GAAyB+xF,IACO,2CAA7BA,EAAIjzF,QAAQe,QAAQjK,OACpB,QAAgBm8F,EAAIjzF,QAAQe,QAAQf,QAAQrL,IAAKoqC,EAAUpqC,KAEvEimF,QAAS,KACL64I,OAAsBt9N,EAAU,GAKxC,OAFAgI,EAAgBy1N,GAChBz1N,EAAgB01N,GACT,KACHz1N,EAAkBw1N,GAClBx1N,EAAkBy1N,EAAuB,CAC5C,GACF,CAAC90L,EAAUpqC,IAAKwJ,EAAiBC,IACpC,MAAMk1N,IAAsBE,EAM5B,MAAO,CACHF,oBACAC,YALgBD,GAAqBv0L,EAAUpkC,SAAW+4N,aAAuD,EAASA,EAAevjM,QAAQx1B,QAAUg5N,EACzJA,EAAgBxjM,QAAQx1B,MACxBokC,EAAUpkC,MAKpB,CD7B+Cm5N,CAA2B/0L,GAChE7tC,GAAU,QAAiBwhO,GAC3BjgO,GAAY,QAAmBkgO,GAC/Bt7K,EAAmBykC,GAAqB3oC,KACtCr0C,MAAOi1N,EAAcn6N,OAAQo6N,EAAen1N,OAAQo1N,GAAmB9B,GAAW,CAAEpzL,YAAWsY,sBACjG,eAAEwzK,EAAc,iBAAEC,EAAgB,iBAAEhpJ,GAAqBkyJ,QAAqDA,EAAgB,CAAC,EAC/HtH,EAAoB5wI,GAAqBz7B,IACzC/6B,EAAaw2D,GAAqBx+B,IAClCkzK,EAAwB10I,GAAqB/6B,IAC7C0vK,EAAc1xL,EAAUtuB,OAAO5U,OAAS,EAExCkpI,GADWjpD,GAAqBoR,IAEhCzS,EAAWoB,KACXq4I,EAAcp4I,GAAqB/jC,IAA6B,QAAUhZ,KAC1Eo1L,GAAiB,IAAA72I,cAAY,KAC/B7C,EAAS5jD,GAAUhE,oBAAoBqhM,GAAa,GACrD,CAACz5I,EAAUy5I,IAERR,EADW53I,GAAqBnxC,IACNxyC,IAAI4mC,EAAU9qB,IAAIC,QAC5CwwH,GAAuB,IAAApnD,cAAa1zE,IAClCA,EACA6wE,EAASqR,GAAsB/sD,EAAUpqC,IAAK,CAAEgG,MAAOiP,KAElD8pN,GACLj5I,EAASqR,GAAsB/sD,EAAUpqC,IAAK,CAAEgG,MAAO+4N,EAAevjM,QAAQx1B,QAClF,GACD,CAAC+4N,EAAgBj5I,EAAU17C,EAAUpqC,OAClC,MAAEmK,EAAK,OAAElF,EAAM,OAAEiF,GAAW+rN,GAAwB,CACtD15N,UACAuB,YACAo4N,iBACAC,mBACAhpJ,mBACAipJ,WAA8B,YAAlBkJ,IAEVp+K,EAAYy9K,GACH,YAAXz0N,GACW,YAAXA,GACkB,YAAlBo1N,GACkB,YAAlBA,EACE7d,EAAoBv2H,IAA2B,QAAU9gD,KACzD,aAAEsqD,EAAY,WAAEE,EAAU,WAAEE,EAAU,mBAAEG,GAAuBT,IAAmB,QAAUpqD,IAC5F5V,EAAa2yD,GAAqB/9B,IAClCz0B,EAAuBwyD,GAAqB59B,IAC5Ck2K,EAAiB7qI,IAAepgE,IAAeG,EAC/Co+G,EAAUmrF,GAAY9zL,GACtBsyL,GAAgB,IAAA/zI,cAAajuD,GACxBq4G,EAAQ,CACXxnD,SAAUtmF,aAAuC,EAASA,EAAOsmF,SACjE7wD,eACA7e,iBAAkBuuB,EAAUtuB,OAC5BJ,WAAW,QAAU0uB,MAE1B,CAAC2oG,EAAS9tI,EAAQmlC,IACfs1L,GAAoB,IAAA/2I,cAAY,IAAM7C,EAAS5jD,GAAUtD,6BAA4B,KAAS,CAACknD,IAC/Fu1B,IAAsB,IAAAtxG,UAAQ,KAGhC,GAF6B00N,GACI7pI,GAAcK,EAI/C,OAAO,WACH,OAAQ,gBAAoBgzH,GAAqB,CAAE3/G,QAASo3H,GACxD,gBAAoBjB,EAA2B,CAAE98N,OAAQyoC,IACjE,CAAC,GACF,CAACq0L,EAA2BxpI,EAAoBL,EAAYxqD,EAAWs1L,KAC1E,IAAAj1N,YAAU,KACFN,IACA2wD,SAAkDA,EAAQ3wD,GAC1Ds3M,EAAkB3mJ,QAAQ3wD,GAC9B,GACD,CAACA,EAAOs3M,EAAmB3mJ,KAC9B,IAAArwD,YAAU,KACFxF,IAEIA,EAAOw3N,UAAU91L,UACjB86K,EAAkB3mJ,QAAQ,IAAI,OAG9B2mJ,EAAkBzmJ,UAAU/1D,EAAOA,SAAUA,EAAO6lF,YAE5D,GACD,CAAC7lF,EAAQw8M,IACZ,MAAMqZ,IAAY,IAAA/wN,UAAQ,IACf0sN,GAAaxxN,EAAQixN,EAAgBC,EAAkBxlM,IAC/D,CAACulM,EAAgBjxN,EAAQkxN,EAAkBxlM,IAC9C,OAAQ,gBAAoBkhM,GAAkB,CAAE52G,uBAAwB,KAAG,4BAA6B,gBAAiB,gBAAiB,CAClI,eAAiD,SAAjC7wE,EAAU9qB,IAAIhe,eAC9B,kBAAmB4/C,EACnB,kBAAmBA,EACnB,cAAekvF,IACfp1B,iBAAkB,KAAG,CAAE,cAAeo1B,IAAe/0B,oBAAqBA,GAAqBC,mBAAoB,IAC/G1mB,EACQ,gBAAoB,MAAO,CAAE4Q,UAAW,yDAA0D8H,QAASkyH,IAEhH,KACRtkH,eAAiBL,GAAkB,gBAAoByjH,GAAqB,CAAEt4N,MAAO44N,EAAa/jH,aAAcA,EAAc80B,cAAeI,IAA0Br7C,aAAcA,EAAcE,WAAYA,EAAYE,WAAYA,IAAc,KACxP,IAAIlzF,EACJ,MAAsB,YAAlB09N,GAAiD,YAAlBA,EACxB,gBAAoB1+H,EAAkB,MAE3B,UAAlB0+H,EACO,gBAAoB3+H,EAAgB,CAAEt0F,QAAS+yN,EAAa/yN,UAE/D,gBAAoBuvN,GAAa,CAAEt8M,IAAK8qB,EAAW0wL,UAAWA,GAAWp2N,QAAiH,QAAvG9C,EAAKy9N,aAAqD,EAASA,EAAclyJ,wBAAqC,IAAPvrE,EAAgBA,EAAK,GAAI+uB,WAAYA,EAAYonM,kBAAmBA,EAAmB5tN,MAAOA,EAAOsuN,UAAWpsI,EAAKj/D,cAAc,CAAEzxB,GAAI,mBAAqBulD,UAAWA,EAAW6xF,QAAS2pF,EAAeZ,YAAaA,EAAaN,yBAA0BiE,EAAgB5D,sBAAuBA,GAAyB,GAC3gB,IE1HA,SAAS8D,GAAyBpiO,GACrC,MAAM,kBAAEqiO,EAAiB,uBAAEC,EAAsB,QAAEphN,GAAYlhB,EACzDuiO,EAAuCviO,EAAMuiO,qCACnD,OAAQ,gBAAoBA,EAAsC,CAAErhN,QAASA,GACzE,gBAAoBmhN,EAAmBzjO,OAAOiI,OAAO,CAAC,EAAGy7N,IACjE,CCNO,MAAME,GAAgCxiO,IACzC,MAAM,UAAEioG,GAAcjoG,EACtB,OAAQ,gBAAoB,MAAO,CAAEioG,UAAWA,GAC5C,gBAAoB+3B,GAAiBphI,OAAOiI,OAAO,CAAC,EAAG7G,IAAS,EAE3DyiO,GAAmCziO,IAC5C,MAAM,qCAAEuiO,EAAoC,UAAEt6H,EAAS,SAAE//D,EAAQ,MAAEz/B,EAAK,YAAE+X,EAAW,qBAAEq/G,EAAoB,KAAEj7H,EAAI,QAAEka,EAAO,QAAEoC,EAAO,uBAAE0+G,EAAsB,iBAAEV,GAAsBl/H,EACnL,OAAQ,gBAAoBoiO,GAA0B,CAAEG,qCAAsCA,EAAsCF,kBAAmBG,GAA8BF,uBAAwB,CACrMr6H,YACA//D,WACAz/B,QACA+X,cACA5b,OACAka,UACA+gH,uBACAD,yBACAV,oBACDh+G,QAASA,GAAW,ECdxB,SAASwhN,IAAyB,KAAE39N,IACvC,IAAIV,EACJ,MAAM6c,EAAUnc,EAAKmc,QACfyhN,GAAoB,QAAyBzhN,GACnD,OAAQ,gBAAoBshN,GAA8B,CAAEv6H,UAAW,2BAA4BrjG,KAAM+9N,EAAmBl6N,OAAO,QAAayY,GAAUpC,QAA4C,QAAlCza,GAAK,QAAe6c,UAA6B,IAAP7c,EAAgBA,GAAK,OAAe6c,GAAUgnB,UAAU,QAAgBhnB,IAC1R,CCRO,SAAS0hN,GAA2CC,GACvD,MAAO,CACH5tH,sBAAuB4tH,EACvBhmB,SAAU,CACNC,kBAAmB4lB,GACnB99N,KAAM,WAEV+xE,cAAe,CACXwqJ,2BAA4B,IAAM,MAG9C,CCTO,SAAS2B,IAAqB,KAAE/9N,IACnC,OAAQ,gBAAoB,MAAO,CAAEkjG,UAAW,wBAC5C,gBAAoByhB,GAAe,KAAM3kH,EAAK0D,OACtD,CCPO,MCGD,GAAc,CAAC,CAAEwjG,MAAO,SAAW,CAAEA,MAAO,UAC5C,GAAW,CACb1gF,UAAU,SAAc,CAAEntB,GAAI,oEAC9B2kO,MAAM,SAAc,CAAE3kO,GAAI,wDAC1B4kO,gBAAgB,SAAc,CAAE5kO,GAAI,2DAElC,IAAqB,SAAc,CAAEA,GAAI,mDACzC6kO,GAAiB,CAAC,iBAAkB,WAAY,QACzCC,GAA6BljO,IACtC,MAAM,eAAE+D,EAAc,wBAAEo/N,GAA4BnjO,EAC9C8uF,GAAO,EAAAC,GAAA,KACP0+B,EAAc1pH,EACd+qF,EAAKj/D,cAAc,GAAS9rB,IAC5B+qF,EAAKj/D,cAAc,IACzB,OAAQ,gBAAoBs9F,GAAA,EAAU,CAAEnhB,YAAa,GAAauY,qBAAqB,EAAMoJ,kBAAkB,EAAM1lB,UAAW,wBAAyBqlB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEjlH,MAAOglH,EAAaxjH,MAAOwjH,EAAarrB,OAAQA,EAAQ2N,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,yCAA0C7mF,MDjB5Z,ICiB6b5c,MAAOy+N,GAAgBj1G,WAAY,EAAGjpH,WAC3f,MAAM+mI,EAAW/nI,IAAmBgB,EACpC,OAAQ,gBAAoB,KAAsB,CAAE0D,MAAOqmF,EAAKj/D,cAAc,GAAS9qB,IAAQsyF,WAAYy0C,EAAU/7B,QAAS,KACtHozH,EAAwBp+N,GACxB8oH,GAAe,GACd,KACJ,ECpBf,GAAc,CAAC,CAAE5hB,MAAO,SAAW,CAAEA,MAAO,UAC5C,GAAW,CACbm3H,WAAW,SAAc,CAAEhlO,GAAI,oDAC/BilO,YAAY,SAAc,CAAEjlO,GAAI,uDAE9B,IAAqB,SAAc,CAAEA,GAAI,4DACzC,GAAiB,CAAC,aAAc,aACzBklO,GAAkCtjO,IAC3C,MAAM,oBAAEkiB,EAAmB,6BAAEqhN,GAAiCvjO,EACxD8uF,GAAO,EAAAC,GAAA,KACP0+B,EAAcvrG,EACd4sE,EAAKj/D,cAAc,GAAS3N,IAC5B4sE,EAAKj/D,cAAc,IACzB,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,KAAkB,CAAEzxB,GAAI,wCAAyC4oH,QAAS,UAC9F,gBAAoBmG,GAAA,EAAU,CAAEnhB,YAAa,GAAa/D,UAAW,sBAAuBqlB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoBG,GAAA,EAAgB,CAAEjlH,MAAOglH,EAAaxjH,MAAOwjH,EAAaxlB,UAAW/lF,EAAsB,QAAQA,IAAwB,GAAIkgF,OAAQA,EAAQ2N,QAASwd,IAAoBhJ,qBAAqB,EAAMoJ,kBAAkB,EAAMC,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAE7lB,UAAW,gDAAiD7mF,MFlBle,IEkBmgB5c,MAAO,GAAgBwpH,WAAY,EAAGjpH,WAC7jB,MAAM+mI,EAAW5pH,IAAwBnd,EACzC,OAAQ,gBAAoB,KAAsB,CAAE0D,MAAOqmF,EAAKj/D,cAAc,GAAS9qB,IAAQsyF,WAAYy0C,EAAU/7B,QAAS,KACtHwzH,EAA6Bx+N,GAC7B8oH,GAAe,GACd,MACH,ECnBb21G,GAAiBxjO,IAC1B,MAAM,OAAEoE,GAAWpE,EACbyC,GAAM,QAAU2B,GAChB8d,EAAsB9d,EAAO2d,IAAIG,oBACjCne,EAAiBK,EAAO2d,IAAIhe,eAC5BwkF,EAAWoB,KACX85I,GAA8B,IAAAr4I,cAAas4I,IAC7Cn7I,EAAS+R,GAA0B73F,EAAK,CACpCyf,sBACAne,eAAgB2/N,IACjB,GACJ,CAACn7I,EAAU9lF,EAAKyf,IACbyhN,GAAmC,IAAAv4I,cAAaw4I,IAClDr7I,EAAS+R,GAA0B73F,EAAK,CACpCsB,iBACAme,oBAAqB0hN,IACtB,GACJ,CAACr7I,EAAU9lF,EAAKsB,IACnB,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,KAAkB,CAAE3F,GAAI,iCAAkC4oH,QAAS,UACvF,gBAAoBk8G,GAA2B,CAAEn/N,eAAgBA,EAAgBo/N,wBAAyBM,MACxGvhN,GAAwB,gBAAoBohN,GAAgC,CAAEphN,oBAAqBA,EAAqBqhN,6BAA8BI,IAAsC,ECrBzLE,GAA8B7jO,IACvC,MAAM,OAAEoE,GAAWpE,EACbyC,GAAM,QAAU2B,IAChB,OAAEuI,EAAQy8E,IAAKwnC,EAAiB,OAAElpH,GAAYokF,GAA4B,CAC5EC,aAAc7uB,MAElB,IAAAhwD,YAAU,KACN0jH,EAAkBxsH,EAAO2d,IAAIC,OAAO,GACrC,CAAC4uG,EAAmBxsH,EAAO2d,IAAIC,SAClC,MAAM0uG,EAAgC9mC,GAAqB8G,IACrDi+B,EAA0B/kC,GAAqBiH,GAA+CpuF,IAC9F8lF,EAAWoB,MACTP,IAAK+sB,GAAyB5qB,GAA8B,CAChEL,eAAgB+O,GAChBzO,aAAc,kDACdC,WAAY,8BACZluB,QAAS,KACLgrB,EAAS5jD,GAAU9C,sCAAsCp/B,IACzD8lF,EAAS5jD,GAAUpD,gCAA+B,GAAO,EAE7Dk8B,UAAW,KACP8qB,EAAS5jD,GAAU9C,sCAAsCp/B,GAAK,KAItE,IAAAyK,YAAU,KACFwjH,GACAva,EAAqB1zG,EAAK,UAC9B,GAGD,CAACiuH,EAA+BlV,GAAoB/4G,GAAM0zG,IAC7D,MAAM,yBAAEoZ,EAAwB,4BAAEd,GAAgCgC,GAAqB/oH,aAAuC,EAASA,EAAOsB,cAC9I,OAAQ,gBAAoB,MAAO,CAAEi/F,UAAW,gCAC5C,gBAAoBqmB,GAAmB,CAAElqH,OAAQA,EAAQkkH,4BAA4B,EAAOiG,kBAA8B,YAAX5hH,GAAmC,YAAXA,GAAwBgiH,EAAyBpG,oBAAqB7gH,aAAuC,EAASA,EAAOs1D,oBAAqBwxD,sBAAuBkC,EAA+BjC,4BAA6BA,EAA6BE,wBAAyBA,EAAyBD,qBAAsBa,IAA6B,ECpChf,GAAqB,CAAC,CAAEtjB,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,KACtD43H,GAAqB,EAAG/+N,OAAMsyF,aAAY0sI,gBAAeC,oBAAmBzhG,WAAUxyB,cAC/F,IAAKhrG,EACD,OAAO,KAEX,MAAMk/N,KAAgBl/N,aAAmC,EAASA,EAAKw1J,WAAa,gBAAoB,OAAQ,CAAE9xJ,MAAOu7N,EAAmB/7H,UAAW,gCACjJi8H,GAAkBn/N,aAAmC,EAASA,EAAKw1J,UAAYwpE,EAAgBh/N,EAAK0D,MACpG07N,EAAuB,KAAG,KAAKp/G,GAAA,GAAyBm/G,KAAmB,CAC7E,gBAAgB,EAChB,0BAA0B,EAC1B,cAAe7sI,IAEb5uF,EAAQ85H,EAAW,EAAoB,gBAAoB7Y,GAAe,CAAEc,mBAAoB,IAAsB05G,GAC5H,OAAQ,gBAAoB,MAAO,CAAEh+N,IAAKnB,EAAK3G,GAAI6pG,UAAWk8H,EAAsBp0H,QAASA,GACzFtnG,EACAw7N,EAAc,ECVhB,GAAc,CAAC,CAAEh4H,MAAO,UAIjBm4H,GAAkBpkO,IAC3B,IAAIqE,EAAIswB,EACR,MAAM,SAAEogF,EAAQ,cAAE26C,EAAa,cAAEovB,EAAa,WAAE1xD,GAAeptH,EACzD8uF,GAAO,EAAAC,GAAA,KACPs1I,GAAY,IAAAp3N,QAAO,OAClB2uM,EAAaC,IAAkB,IAAA7xH,UAAS,IACzChpF,EAAW4oF,GAAqBhzC,IAChCmlF,EAA8BnyC,GAAqBt7B,IACnDg2K,GAAoB,IAAAr3N,QAAO,MAAUs3N,IACvC1oB,EAAe0oB,EAAe,GAC/B,OACI7jG,GAAeo+C,EAChB/kD,EAAe2G,EACf1/H,EAASyE,MAAMi0C,IAAM,QAAgBA,EAAEzb,QAAQx7B,IAAKq8K,EAAc,WAClE76K,EACAwpH,EAA+J,QAAhJ94F,EAAiG,QAA3FtwB,EAAK01H,aAAmD,EAASA,EAAa97F,eAA4B,IAAP55B,OAAgB,EAASA,EAAGoE,aAA0B,IAAPksB,EAAgBA,EAAKm6D,EAAKj/D,cAAc,CAAEzxB,GAAI,gDACrN4vI,GAAqB,IAAA5iD,cAAagX,IAChCA,GAAUw5G,GACVC,EAAe,GACnB,GACD,CAACD,IACEK,GAAmB,IAAAzvM,UAAQ,IAAMovM,EACjC56M,EAASuE,QAAQm0C,GAAMA,EAAEzb,QAAQx1B,MAAM6zE,cAAchuD,SAASstL,EAAYt/H,iBAC1Et7E,GAAU,CAACA,EAAU46M,IAOrBv6L,EANkB,CAAC0sG,IACrB,MAAMy2G,EAAYx7H,OAAOsuG,YACnBmtB,EAAuBJ,EAAUl3N,QAAUk3N,EAAUl3N,QAAQ87G,wBAAwB7/F,OAAS,EAC9F+qB,EAAYlsC,KAAKC,IAAIs8N,EAAYC,EA9B3B,GAEI,IADC,GA6B8F12G,GAC/G,OAAO9lH,KAAKuZ,IA9BK,GA8BiB2yB,EAAU,EAEjCijK,CAAgB6E,EAAiBtyM,SA/B5B,IAgCpB,OAAQ,gBAAoBwjH,GAAA,EAAU,CAAEnhB,YAAa,GAAa/D,UAAW,kBAAmB0lB,kBAAkB,EAAMpJ,qBAAqB,EAAM6I,WAAYA,EAAYC,sBAAuB,CAAC,iBAAkB2gB,mBAAoBA,EAAoB1gB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoB,MAAO,CAAE9qH,IAAK4hO,GACtU,gBAAoB32G,GAAA,EAAgB,CAAEzlB,UAAW8zB,EAA8B,cAAgB,eAAgBG,SAAS,EAAMjyH,MAAOwjH,EAAarrB,OAAQA,EAAQ2N,QAASwd,KAAqBK,WAAY,EAAGC,mBAAqB,gBAAoB,MAAO,CAAE5lB,UAAW,KAAGynD,EAAe,qBAC9R,gBAAoB5hC,GAAA,GAAc,CAAEtpH,MAAOy3M,EAAkBx5E,gBAAiB,QAASD,YAAY,EAAMP,SAAUqiG,EAAkBn3N,QAAS+0H,aAAc05E,EAAav6L,OAAQA,EAAQD,MN7C7J,IM+CxBuhH,kBAAkB,EAAM3U,WAAY,EAAGjpH,UAC3B,gBAAoB++N,GAAoB,CAAE/+N,KAAMA,EAAKk5B,QAASo5D,aAAcqpC,IAAe,QAAgBA,EAAa37H,EAAKk5B,QAAQx7B,KAAMshO,cAAej1I,EAAKj/D,cAAc,CAC7KzxB,GAAI,sCACJ4lO,kBAAmBl1I,EAAKj/D,cAAc,CACtCzxB,GAAI,+CACJ2xG,QAAS,KACTgF,EAAShwG,EAAKk5B,SACd4vF,GAAe,QAEjB,ECrDb62G,GAAqB1kO,IAC9B,MAAM,OAAEoE,EAAM,gBAAEugO,GAAoB3kO,EAC9BO,GAAY,UACZuhB,EAAa1d,aAAuC,EAASA,EAAO2d,IAAIC,QACvE4iN,EAAiBC,IAAsB,IAAA76I,UAASloE,GACjDg9J,GAAgB,IAAAtyK,UAAQ,IAAOo4N,EAAkB,CAACA,GAAmB,IAAK,CAACA,IAC3EE,GAAuB,IAAA15I,cAAantD,IACtC0mM,EAAgB1mM,EAAQx7B,KACxBoiO,EAAmB5mM,EAAQx7B,IAAI,GAChC,CAACkiO,IAIJ,OAHA,IAAAz3N,YAAU,KACN23N,EAAmB/iN,EAAW,GAC/B,CAAC05F,GAAoB15F,KAChB,gBAAoBsiN,GAAgB,CAAE7jO,UAAWA,EAAW6sH,YAAatrG,EAAY4tI,cAAe,qDAAsDovB,cAAeA,EAAe/pE,SAAU+vH,GAAwB,ECdzNC,GAA+B/kO,IACxC,MAAM,mBAAEglO,GAAuBhlO,EAC/B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,8BAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,oCACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,8BAChD,gBAAoB49H,GAAA,EAAQ,CAAE/zB,UAAW,qIAAsI8H,QAASi1H,IAAuB,ECL1MC,GAA4BjlO,IACrC,MAAM,eAAEklO,GAAmBllO,EAC3B,OAAIklO,EACQ,gBAAoB,MAAO,CAAEj9H,UAAW,gCAC5C,gBAAoByoC,GAAA,EAAS,CAAE9rI,KAAM,WACjC,gBAAoB,KAAkB,CAAExG,GAAI,uCAAwCoI,OAAQ,CAAE2+N,UAAWD,OAE9G,IAAI,ECDT,GAAc,CAAC,CAAEj5H,MAAO,SAAW,CAAEA,MAAO,UAE5Cm5H,GAAyBplO,IAC3B,MAAM,WAAE41J,GAAa,EAAK,OAAExzD,GAAS,EAAK,MAAEn4F,EAAQ,GAAE,UAAEoyH,EAAS,MAAE5zH,EAAQ,GAAE,QAAEsnG,GAAY/vG,EAC3F,IAAI8pN,EACJ,GAAIztF,EACAytF,EAAS,gBAAoBp8F,GAAA,EAAgB,CAAEjlH,MAAOA,EAAOwB,MAAOA,EAAO8lG,QAASA,EAAS3N,OAAQA,QAEpG,CACD,MAAMijI,EAAgB,KAAG,sBAAuB,kBAAmB,cAAe,CAC9E,WAAYjjI,IAEhB0nH,EAAU,gBAAoB9tF,GAAA,EAAQ,CAAEjsB,QAASA,EAAStnG,MAAOA,EAAOw/F,UAAWo9H,EAAep7N,MAAOA,EAAOi4G,SAAU0zC,GAC9H,CACA,OAAO,gBAAoB,MAAO,CAAE3tD,UAAW,qBAAuB6hH,EAAO,EAE3Ewb,GAA6BtlO,IAC/B,IAAIqE,EAAIswB,EACR,MAAM,OAAEvwB,GAAWpE,EACb8uF,GAAO,EAAAC,GAAA,KACPxG,EAAWoB,KACX47I,GAAkB,IAAAn6I,cAAarmF,IACjCwjF,EAASiS,IAAqB,QAAUp2F,GAASW,EAAKq2B,aAAcr2B,EAAKvC,YAAY,GACtF,CAAC+lF,EAAUnkF,IACRohO,GAAkB,IAAAp6I,cAAY,KAChC7C,EAASkS,IAAwB,QAAUr2F,IAAS,GACrD,CAACmkF,EAAUnkF,IACRjD,EAAayoF,GAAqBjb,IAClC82J,EAAyF,QAA1E9wM,EAA8B,QAAxBtwB,EAAKD,EAAOma,cAA2B,IAAPla,OAAgB,EAASA,EAAG,UAAuB,IAAPswB,OAAgB,EAASA,EAAG+oB,IAC7HgoL,EAAyB,CAC3Bj9N,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,6CAE9BunO,GAAe,IAAAn5N,UAAQ,KACzB,IAAKrL,EACD,MAAO,GAEX,MAAMykO,EAAmB,KAAOzkO,GAAa+C,GAAcA,EAAUuE,QACrE,OAAO,KAAQm9N,GAAmB72J,GACvB,CACH,CACItmE,MAAOsmE,EAAKtmE,MACZjG,WAAYusE,EAAKvsE,WACjB44B,aAAc2zC,EAAKtsE,IACnBmC,KAAM,aAEPmqE,EAAKtxB,KAAKx/C,KAAKy/C,IACP,CACHj1C,MAAOi1C,EAAIj1C,MACXjG,WAAYk7C,EAAIl7C,WAChB44B,aAAc2zC,EAAKtsE,IACnBmC,UAAMX,QAIpB,GACH,CAAC9C,IACE0kO,EAAmBF,aAAmD,EAASA,EAAalgO,MAAMV,GAASA,EAAKvC,aAAeijO,IAC/HK,EAAsBL,EAAcI,GAAoBH,EAAyB,KACjFj4G,EAAcq4G,EACdA,EAAoBr9N,MACpBqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,uCAC/B,OAAQ,gBAAoB,MAAO,CAAE6pG,UAAW,+BAC5C,gBAAoBklB,GAAA,EAAU,CAAEllB,UAAW,wCAAyCsc,qBAAqB,EAAMoJ,kBAAkB,EAAM3hB,YAAa,GAAashB,aAAc,EAAGlrB,SAAQmrB,oBAAsB,gBAAoB63G,GAAuB,CAAE38N,MAAOglH,EAAaxjH,MAAOwjH,EAAa4O,UAAWypG,EAAqB1jI,OAAQA,EAAQ2N,QAASwd,IAAoBK,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAEnqE,WAAYxiD,EAAYgiI,aAAc,EAAGhD,uBAAyB,gBAAoB09D,GAAA,EAAQ,CAAE19D,kBAAmBA,EAAmB29D,YAAahvG,EAAKj/D,cAAc,CAChlBzxB,GAAI,8CACA6pG,UAAW,yCAA0C7mF,MA/DhD2kN,IA+DiFvhO,MAAOmhO,EAAc33G,WAAY,EAAGjpH,WAClI,MAAM+mI,EAAWg6F,GAAuBA,EAAoBr9N,QAAU1D,EAAK0D,MAC3E,OAAQ,gBAAoB,KAAsB,CAAEA,MAAO1D,EAAK0D,MAAO4uF,aAAcy0C,EAAUlnI,KAAMG,EAAKH,KAAMmrG,QAAS,KACjHw1H,EAAgBxgO,GAChB8oH,GAAe,GACd,MAErB43G,EAAe,gBAAoBzpG,GAAA,EAAQ,CAAE/zB,UAAW,0GAA2G8H,QAASy1H,IAAsB,KAAM,EAEnMQ,GAAyBhmO,GACjB4pF,GAAqBp7B,IAE3B,KAEJ,gBAAoB82K,GAA2B1mO,OAAOiI,OAAO,CAAC,EAAG7G,IC9EtE,GAAqB,CAACg2H,EAAmBiwG,EAAgBC,KAC3D,IAAKlwG,EAAkBvwG,QACnB,MAAO,CACHpmB,OAAQ,OACRmhB,YAAa,IAGrB,MAAM2lN,EAAoD,WAA7BnwG,EAAkBj8F,OAC/C,MAAO,CACH16B,OAAQ22H,EAAkBj8F,OAC1BvZ,YAAa2lN,EAAuBD,EAAoBD,EAC3D,EAEE,SAASG,GAAqBpmO,GACjC,IAAIqE,EAAIswB,EACR,MAAM,kBAAEqhG,EAAiB,IAAEj0G,EAAG,QAAEyyM,EAAO,4BAAEl+F,EAA2B,wBAAE+vG,EAAuB,kBAAEC,GAAuBtmO,EAChH8uF,GAAO,EAAAC,GAAA,KACP0nC,GAAgB,IAAAjqH,UAAQ,IAAM,CAChC,CACIpO,GAAI,SACJqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,sDAChCs4H,KAAM5nC,EAAKj/D,cAAc,CAAEzxB,GAAI,8DAEnC,CACIA,GAAI,MACJqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,qDAChCs4H,KAAM5nC,EAAKj/D,cAAc,CAAEzxB,GAAI,6DAEnC,CACIA,GAAI,OACJqK,MAAOqmF,EAAKj/D,cAAc,CAAEzxB,GAAI,sDAErC,CAAC0wF,IACEo3I,EAAgF,QAA3D7hO,EArCC,EAACmwN,EAAS/xN,KACtC,IAAI4B,EACJ,OAAqF,QAA7EA,EAAKmwN,EAAQ/uN,MAAMuc,IAAW,QAAgBA,EAAOic,QAAQx7B,IAAKA,YAA0B,IAAP4B,OAAgB,EAASA,EAAG45B,QAAQzd,WAAW,EAmC5G,CAAwBg0M,EAASzyM,EAAIA,IAAIC,eAA4B,IAAP3d,EAAgBA,EAAK,IAC5GkiO,EAAqBC,IAA0B,IAAAx8I,UAAS,GAAmBgsC,EAAmBj0G,EAAIvB,YAAa0lN,KAC/GO,EAA0BC,IAA+B,IAAA18I,UAASjoE,EAAIvB,aACvEu2G,GAA0B,IAAA3rC,cAAa4rC,IACzCsvG,EAAkBvkN,EAAKi1G,GACvBwvG,GAAwBvvG,GAAer4H,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGowH,GAAY,CAAEz2G,YAAaw2G,MAClG0vG,EAA4B1vG,EAAe,GAC5C,CAACj1G,EAAKukN,EAAmBE,IACtBtvG,GAAgC,IAAA9rC,cAAa/rF,IAC/C,IAAI43E,EACW,SAAX53E,GACA43E,EAAY,CACRxxD,SAAS,EACTsU,OAAQ,UAEZysM,EAAuB,GAAmBvvJ,EAAW,GAAI,OAGzDA,EAAY,CACRxxD,SAAS,EACTsU,OAAQ16B,GAEZmnO,EAAuB,GAAmBvvJ,EAAsB,QAAX53E,EAAmBonO,EAA2B,GAAIP,KAE3G5vG,EAA4Bv0G,EAAKk1D,GAClB,QAAX53E,GACAinO,EAAkBvkN,EAAK0kN,QAA2EA,EAA2B,IAElH,SAAXpnO,GAAgC,WAAXA,GACrBinO,EAAkBvkN,EAAK,GAC3B,GACD,CAACA,EAAKmkN,EAAmB5vG,EAA6BgwG,EAAmBG,IAC5E,OAAQ,gBAAoB,WAAgB,KAAMJ,EAA2B,gBAAoB,MAAO,CAAEp+H,UAAW,wFACjH,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,uDAChD,gBAAoB+uH,GAAA,EAAU,CAAE5I,qBAAqB,EAAMqJ,WAAY,EAAGC,mBAAqB,gBAAoBC,GAAA,GAAc,CAAEtpH,MAAOiyH,EAAezI,WAAY,EAAGjpH,UACpJ,gBAAoB,KAAsB,CAAE0D,MAAO1D,EAAK0D,MAAOiuH,KAAM3xH,EAAK2xH,KAAMr/B,WAAYtyF,EAAK3G,KAAOmoO,EAAoBlnO,OAAQ0wG,QAAS,KAC7ImnB,EAA8BnyH,EAAK3G,IACnCyvH,GAAe,MAEpBP,aAAc,EAAG8J,eAAch1B,aACtC,IAAI/9F,EACJ,OAAQ,gBAAoBqpH,GAAA,EAAgB,CAAEzjH,MAAuF,QAA/E5F,EAAKoyH,EAAchxH,MAAMV,GAASA,EAAK3G,KAAOmoO,EAAoBlnO,gBAA4B,IAAPgF,OAAgB,EAASA,EAAGoE,MAAO25F,OAAQA,EAAQ2N,QAASqnB,EAAcnvB,UAAW,2EAA6E,IAExR,QAA/Bs+H,EAAoBlnO,QAAmD,WAA/BknO,EAAoBlnO,OAAuB,gBAAoBu2H,GAAoB,CAAEp1G,YAAwD,QAA1CmU,EAAK4xM,EAAoB/lN,mBAAgC,IAAPmU,EAAgBA,EAAK,GAAIkhG,eAAgBkB,EAAyBjB,SAAyC,WAA/BywG,EAAoBlnO,SAA0B,MAAS,KACxU,CCxEO,MAAMsnO,GAA6B3mO,IACtC,IAAIqE,EACJ,MAAM,OAAED,EAAM,gBAAEugO,EAAe,QAAE55H,GAAY/qG,EACvCyC,EAAM2B,IAAU,QAAUA,GAC1B4d,EAAS5d,aAAuC,EAASA,EAAO2d,IAAIC,QAClEonE,IAAKw9I,EAAqBl/N,OAAQw9N,EAAc,OAAEv4N,GAAYm/E,GAA4B,CAC9FC,aAAc1hB,MAElB,IAAAn9D,YAAU,KACFzK,GACAmkO,EAAoBnkO,EACxB,GACD,CAAC+4G,GAAoB/4G,KACxB,MAAMokO,EAAiC,YAAXl6N,EACtBm6N,EAA+B,KAAG,yBAA0B,CAC9D,qCAAsCD,IAEpCE,EAAyB,KAAG,sBAAuB,0BAA2B,oCAC9EC,EAAuB,KAAG,CAAE,eAAgBhlN,IAK5C5gB,EAAWwoF,GAAqB1+B,IAChClqD,EAAW4oF,GAAqBhzC,IAChC3f,EAAa2yD,GAAqB/9B,IAClCiC,EAAyB87B,GAAqB/7B,IAC9C06B,EAAWoB,KACjB,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoBo7I,GAA6B,CAAEC,mBAAoBj6H,IACvE,gBAAoBgc,GAAiB,CAAE9e,UAAW8+H,GAC9C,gBAAoB,MAAO,CAAE9+H,UAAW6+H,GACpC,gBAAoB7B,GAA0B,CAAEC,eAAgBA,IAChE,gBAAoBryG,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,gCAChD,gBAAoBsmO,GAAmB,CAAEtgO,OAAQA,EAAQugO,gBAAiBA,MACxEvgO,GAAW,gBAAoBgiO,GAAsB,CAAErkN,IAAK3d,EAAQowN,QAASxzN,EAAUqlO,wBAAyBjlO,EAAS4kH,qBAAsB,EAAOgQ,mBAAoD,QAA/B3xH,EAAKD,EAAOuyE,qBAAkC,IAAPtyE,OAAgB,EAASA,EAAGmc,cAjB3N,CAC7BuZ,OAAQ,SACRtU,SAAS,GAeyR6wG,4BAA6B,CAACv0G,EAAK1iB,KACrTkpF,EAASuR,GAA6B/3E,EAAItf,IAAK7D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGkb,EAAI40D,eAAgB,CAAEn2D,YAAanhB,KAAW,EAC9HinO,kBAAmB,CAACvkN,EAAKvB,KACxB+nE,EAASsR,GAA2B93E,EAAItf,IAAK,CACzC+d,gBACD,IAEX,gBAAoBqyG,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW++H,GACxD,gBAAoB,KAAkB,CAAE5oO,GAAI,mCAC9CgG,GAAW,gBAAoB,WAAgB,KAC7C,gBAAoBy/N,GAA4B,CAAEz/N,OAAQA,IAC1D,gBAAoBouH,GAA8B,CAAEpuH,OAAQA,KAChE,gBAAoByuH,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW++H,GACxD,gBAAoB,KAAkB,CAAE5oO,GAAI,qCAC9CgG,GAAU,gBAAoBo/N,GAAe,CAAEp/N,OAAQA,IACzD6yB,GAAc62B,EAAyB,KAAQ,gBAAoB,WAAgB,KAC/E,gBAAoB+kE,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW++H,GACxD,gBAAoB,KAAkB,CAAE5oO,GAAI,6CAC9CgG,GAAU,gBAAoB4hO,GAAuB,CAAE5hO,OAAQA,OAAe,EChEvF6iO,GAAoCjnO,IAC7C,MAAM,OAAEoE,EAAM,QAAE2mG,GAAY/qG,EACtBuoF,EAAWoB,KACXvoF,EAAWwoF,GAAqB1+B,IAChCg8K,EAAct9I,GAAqBnxC,KACnC,UAAE1nC,EAAS,aAAEgN,GAAiB6rE,GAAqB/jC,GAA6BzhD,EAAO3B,MACvF0kO,EAAuB57I,GAA8B,CACvDL,eAAgB,GAChBO,WAAY,8BACZD,aAAc,0CACd/tB,UAAYzoD,IACR,MAAMvS,EAAMuS,EAAMlH,QAAQtJ,MAAM,GAAGJ,OAAO3B,IAC1C8lF,EAAS5jD,GAAUzD,aAAaz+B,IAChC8lF,EAAS5jD,GAAUtD,6BAA4B,GAAM,IAGvDyjM,GAAuB,IAAA15I,cAAatpE,IACtC,MAAMmc,EAAUipM,EAAYjhO,IAAI6b,IAChC,QAAUmc,EAAS,uCACnB,MAAM9c,EAAW,GAAY/f,EAAU,OAEvC+lO,EAAqB/9I,IAAIrrE,EAAchN,EAAW,CAC9CnM,KAAM,uBACNL,KAAM,CACF8G,GAAI,CACAkW,WAAYJ,EAASE,OAAO0uB,QAC5BzkC,UAAW6V,EAASC,MAAM2uB,UAGlC3rC,OAAQ,CACJQ,KAAM,MACN4b,YAAa,GACbjC,OAAQ,GACRY,uBAAwB,GACxB4C,IAAK,CACDhe,eAAgB,iBAChBie,OAAQF,EACRI,oBAAqB,cAEzBzZ,MAAOw1B,EAAQA,QAAQx1B,MACvBkZ,iBAAa1d,IAEnB,GACH,CAACijO,EAAa9lO,EAAU+lO,EAAsBppN,EAAchN,IAC/D,OAAO,gBAAoB41N,GAA2B,CAAEhC,gBAAiBG,EAAsB/5H,QAASA,GAAU,ECvCzGq8H,GAAwCpnO,IACjD,MAAM,OAAEoE,EAAM,OAAEklC,GAAWtpC,GAC3B,QAAUijD,GAAuB7+C,IACjC,MAAMmkF,EAAWoB,MACX,UAAE54E,EAAS,aAAEgN,GAAiB6rE,GAAqB/jC,GAA6BzhD,EAAO3B,OACvF,aAAE00F,EAAY,WAAEE,GAAeJ,GAAmB7yF,EAAO3B,KAEzD4kO,GAAc,IAAAp6N,QAAOoqF,IAC3B,IAAAnqF,YAAU,KACFmqF,IACAgwI,EAAYl6N,SAAU,EAC1B,GACD,CAACkqF,KACJ,IAAAnqF,YAAU,KAGFm6N,EAAYl6N,UAAYkqF,GACxB9O,EAASuQ,GAAuB/6E,EAAchN,GAClD,GACD,CAACw3E,EAAU8O,EAAYtmF,EAAWgN,IACrC,MAAMgtF,GAAU,IAAA3f,cAAY,KACxB7C,EAAS5jD,GAAUtD,6BAA4B,IAC/CknD,EAASuQ,GAAuB/6E,EAAchN,GAAW,GAC1D,CAACw3E,EAAUx3E,EAAWgN,IACzB,OAAQ,gBAAoB29F,GAAe,CAAEzT,UAAW,0CAA2C3+D,OAAQA,GACvG,gBAAoB2zE,GAAsB,CAAE5lB,WAAYA,EAAYF,aAAcA,GAC9E,gBAAoBuzH,GAAqB,CAAE3/G,QAASA,GAChD,gBAAoBk8H,GAAkC,CAAE7iO,OAAQA,EAAQ2mG,QAASA,KACrF,gBAAoB,MAAO,CAAE9C,UAAW,oCAAsC,ECnCpF,GAAW,CACbrjG,KAAM,kBACNL,KAAM,CACFgd,WAAY,qBACZjW,UAAW,sBAMNg8N,GAA8B,EAAGjrB,2BAA0BF,uCAAsCj6F,cAClG,gBAAoBg6F,GAA0B,CAAEz6G,UAAW46G,EAA0BF,qCAAsCA,EAAsCj6F,SAAUA,EAAU5Y,SAAU,GAAUE,oBAAoB,ICX5N+9H,GAAqB,EAAGrlH,cACzB,gBAAoB,MAAO,CAAEja,UAAW,KAAG,uBAAwB,sBAAuB,YAAa,CAAEia,cAC7G,gBAAoB,KAAkB,CAAE9jH,GAAI,kBCA9C,GAAoB,CAAC,CAAE6tG,MAAO,QAAS1iG,OAAQ,CAAEk0B,GAAI,GAAIyuE,EAAG,KAIrDs7H,GAAgBxnO,IACzB,MAAM,qCAAEm8M,GAAyCn8M,EAC3CynO,EAAc79I,GAAqB/yC,IACnC1f,EAAiByyD,GAAqB79B,IACtCm2D,GAAYulH,EACZ1lH,EAAUG,GAAa,gBAAoB,MAAO,KACpD,gBAAoB,KAAkB,CAAE9jH,GAAI,qCAC5C,KACC+4B,GAAmB,gBAAoB,IAAK,CAAE44C,KAAM,wHAAyHu5D,IAAK,sBAAuBxqF,OAAQ,SAAUmpD,UAAW,0BACnO,gBAAoB,KAAkB,CAAE7pG,GAAI,4CACpD,OAAQ,gBAAoBotG,GAAA,GAAoB,CAAEuY,gBAAgB,EAAM9b,UAAW,4BAC/E,gBAAoBq/H,GAA6B,CAAEjrB,yBAA0BkrB,GAAoBprB,qCAAsCA,EAAsCj6F,SAAUA,IACvLH,EAAU,gBAAoBhW,GAAA,GAAQ,CAAEC,YAAa,IAAqB+V,GAAW,KAAM,ECdtF2lH,GAAgC1nO,IACzC,IAAIqE,EACJ,MAAM,OAAED,GAAWpE,EACbuoF,EAAWoB,KACX7nE,EAAa1d,EAAO2d,IAAIC,OAExB2lN,EAAsD,QAAtCtjO,EADFulF,GAAqBnxC,IACFxyC,IAAI6b,UAAgC,IAAPzd,OAAgB,EAASA,EAAG45B,QAAQx1B,MAClGq8N,GAAuB,IAAA15I,cAAarmF,IACtCwjF,EAASwR,IAAuB,QAAU31F,GAASW,EAGnD4iO,KAAiB,QAAYvjO,GAAU,oBAAiBH,GAAW,GACpE,CAACskF,EAAUnkF,EAAQujO,IAChBxF,GAAoB,IAAA/2I,cAAY,IAAM7C,EAAS5jD,GAAUtD,6BAA4B,KAAS,CAACknD,IACrG,OAAQ,gBAAoBo+I,GAA2B,CAAEviO,OAAQA,EAAQugO,gBAAiBG,EAAsB/5H,QAASo3H,GAAqB,ECf3I,SAASyF,GAAuCC,GACnD,MAAO,CACH5yH,sBAAuB4yH,EACvB/yH,SAAU,CACND,6BAA8BuyH,GAC9BzqB,6BAA8B6qB,GAC9B5iO,KAAM,kBACNg4M,SAAU,GAEdC,SAAU,CACNC,kBAAmBgmB,GACnBl+N,KAAM,OAEV+xE,cAAe,CACXwqJ,2BAA4BuG,IAGxC,CCdA,MAAMI,WAAyBzpE,GAAA,EAC3Bt/J,cACIitC,SAASC,WACT/sC,KAAKkZ,MAAQ,CACTgpG,qBAAsBliH,KAAKc,MAAMohH,qBACjC9tC,aAAcp0E,KAAKc,MAAMszE,cAE7Bp0E,KAAK6oO,sBAAyB99N,IAC1B/K,KAAK+sF,SAAS,CAAEm1B,qBAAsBn3G,GAAQ,EAElD/K,KAAK8oO,qBAAwB/9N,IACzB/K,KAAK+sF,SAAS,CAAE3Y,aAAcrpE,GAAQ,EAE1C/K,KAAKiiH,SAAW,KACZ,MAAM,qBAAEK,GAAyBtiH,KAAKc,OAChC,qBAAEohH,EAAoB,aAAE9tC,GAAiBp0E,KAAKkZ,MACpDlZ,KAAKc,MAAMmhH,SAAS,CAChBC,qBAAsBI,GAAwBJ,EAC9C9tC,gBACF,CAEV,CACAu5B,SACI,MAAM,UAAE5E,EAAS,mBAAEk4D,EAAkB,WAAEt1B,EAAU,iBAAEG,EAAgB,SAAE/uB,EAAQ,iBAAE6uB,EAAgB,iBAAEC,EAAgB,SAAE9W,EAAQ,kBAAEg0G,EAAiB,mBAAEC,EAAkB,qBAAE1mH,EAAoB,qBAAE2mH,EAAoB,iBAAEC,EAAgB,kBAAEC,GAAuBnpO,KAAKc,OACxP,qBAAEohH,EAAoB,aAAE9tC,GAAiBp0E,KAAKkZ,MACpD,IAAIkwN,EAIJ,OAHI9mH,IACA8mH,EAAyB,gBAAoBn1G,GAAA,EAAU,CAAE93G,KAAM,iDAAkD9X,KAAM0kO,EAAmBx/N,MAAOy/N,EAAoBj+N,MAAOm3G,EAAsB2H,SAAU7pH,KAAK6oO,yBAE7M,gBAAoBn9F,GAAA,EAAmB,CAAE3iC,UAAW,KAAG,mBAAoBA,GAAYk4D,mBAAoBA,EAAoBt1B,WAAYA,EAAYG,iBAAkBA,EAAkB/uB,SAAUA,EAAU6uB,iBAAkBA,EAAkBC,iBAAkBA,EAAkB9W,SAAUA,EAAU9S,SAAUjiH,KAAKiiH,UAC9T,gBAAoBgS,GAAA,EAAU,CAAEjR,SAAUimH,EAAsB9sN,KAAM,yCAA0C9X,KAAM6kO,EAAkB3/N,MAAO4/N,EAAmBp+N,MAAOqpE,EAAcy1C,SAAU7pH,KAAK8oO,uBACtMM,EACR,EAEJR,GAAiBn9G,aAAe,CAC5Bw1C,oBAAoB,EACpBt1B,YAAY,EACZG,kBAAkB,EAClB/uB,SAAU,iBACV6uB,iBAAkB,SAClBC,iBAAkB,SAClBk9F,kBAAmB,0BACnBC,mBAAoB,kBACpB1mH,sBAAsB,EACtBJ,sBAAsB,EACtB9tC,cAAc,EACd60J,sBAAsB,EACtBC,iBAAkB,8BAClBC,kBAAmB,QACnBp0G,SAAU,IACV9S,SAAU,KCxDd,MAAM,GAAc,CAAC,CAAElV,MAAO,UAIjBs8H,GAAgBvoO,IACzB,MAAM,UAAEioG,EAAS,mBAAEk4D,EAAkB,WAAEt1B,EAAU,iBAAEG,EAAgB,mBAAEqW,EAAkB,SAAEplC,EAAQ,iBAAE6uB,EAAgB,iBAAEC,EAAgB,kBAAEk9F,EAAiB,mBAAEC,EAAkB,qBAAE1mH,EAAoB,qBAAEJ,EAAoB,aAAE9tC,EAAY,qBAAE60J,EAAoB,iBAAEC,EAAgB,kBAAEC,EAAiB,SAAEp0G,EAAQ,SAAE9S,GAAcnhH,EAC3T,OAAQ,gBAAoBurI,GAAA,EAAS,CAAEv/B,YAAa,GAAaw/B,SAAS,EAAME,aAAc,QAAS2V,mBAAoBA,GACvH,gBAAoBymF,GAAkB,CAAE7/H,UAAWA,EAAWk4D,mBAAoBA,EAAoBt1B,WAAYA,EAAYG,iBAAkBA,EAAkB/uB,SAAUA,EAAU6uB,iBAAkBA,EAAkBC,iBAAkBA,EAAkBk9F,kBAAmBA,EAAmBC,mBAAoBA,EAAoB1mH,qBAAsBA,EAAsBJ,qBAAsBA,EAAsB9tC,aAAcA,EAAc60J,qBAAsBA,EAAsBC,iBAAkBA,EAAkBC,kBAAmBA,EAAmBp0G,SAAUA,EAAU9S,SAAUA,IAAa,EAEzmBonH,GAAa59G,aAAem9G,GAAiBn9G,aCLtC,MAAM69G,GAAuB,KAChC,MAAM,YAAElmI,EAAW,aAAED,EAAY,OAAED,GAAWI,KACxC1T,GAAO,EAAAC,GAAA,MACLgc,QAAS09H,GAAoBpmI,EAC/B0I,GAAU,IAAA3f,cAAY,KACxBq9I,SAAkEA,IAClEnmI,GAAa,GACd,CAACmmI,EAAiBnmI,IACrB,OAAOF,EAAU,gBAAoBmmI,GAAc3pO,OAAOiI,OAAO,CAAC,EAAGw7F,EAAc,CAAE4Z,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,4BAA8B0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,0BAA4B6pO,kBAAmBn5I,EAAKj/D,cAAc,CAAEzxB,GAAI,kCAAoC8pO,mBAAoBp5I,EAAKj/D,cAAc,CAAEzxB,GAAI,2BAA6BgqO,iBAAkBt5I,EAAKj/D,cAAc,CAAEzxB,GAAI,gCAAkCiqO,kBAAmBv5I,EAAKj/D,cAAc,CAAEzxB,GAAI,yBAA2B2sG,QAASA,EAASkpB,SAAU3xB,KAAmB,IAAI,ECV7mBomI,GAAU1oO,IACnB,MAAM,gBAAEikG,GAAoBe,KAC5B,OAAO,gBAAoBf,EAAiBrlG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECF5D2oO,GAAgB3oO,IACzB,MAAM,sBAAEskG,GAA0BU,KAClC,OAAO,gBAAoBV,EAAuB1lG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECFlE4oO,GAAa5oO,IACtB,MAAM,mBAAEykG,GAAuBO,KAC/B,OAAO,gBAAoBP,EAAoB7lG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECF/D,GAAeA,IACxB,MAAM,qBAAEqkG,GAAyBW,KACjC,OAAO,gBAAoBX,EAAsBzlG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECmDjE6oO,GAA6B,KACtC,MAAM,QAAE7pO,EAAO,UAAEuB,EAAS,kBAAEuoO,EAAiB,mBAAE1xN,EAAkB,YAAE9W,EAAW,mBAAEyoO,EAAkB,mBAAEC,EAAkB,mBAAEC,EAAkB,yBAAEC,EAAwB,mBAAEn9D,EAAkB,8BAAElG,EAA6B,qBAAE1nH,GArDvL,MAClC,MAAMoqC,EAAWoB,MACX,WAAEuF,EAAU,SAAEG,GAAaR,MAC3B,uBAAElC,GAA2BR,KAC7B28I,EAAoBl/I,GAAqB8F,IACzCt4E,EAAqBwyE,GAAqBpiC,IAC1ClnD,EAAcspF,GAAqB3yB,IACnCkyK,EAAqBv/I,GAAqBjlB,IAC1CxmB,EAAuByrC,GAAqBwR,IAC5Cp8F,GAAU,UACVuB,GAAY,WACV6oF,IAAKggJ,GAAqB79I,GAA8B,CAC5DL,eAAgBvzE,GAChB6zE,aAAc,+BACdC,WAAY,8BACZhuB,UAAW,KACPyxB,EAAW,iCAAuC,EAEtD3xB,QAAS,KACL8xB,EAAS,+BAAqC,IAGhD9uD,GAAmB,IAAA6qD,cAAY,IAAM7C,EAAS5jD,GAAUpE,qBAAqB,CAACgoD,IAYpF,MAAO,CACHvpF,UACAuB,YACAuoO,oBACA1xN,qBACA9W,cACAyoO,oBAjBuB,IAAA39I,cAAY,KACnC7qD,GAAkB,GACnB,CAACA,IAgBAyoM,oBAfuB,IAAA59I,cAAat9E,IACpCyyB,IACA6oM,EAAiBt7N,EAAQ,GAC1B,CAACyyB,EAAkB6oM,IAalBH,oBAZuB,IAAA79I,cAAY,KACnC7C,EAAS5jD,GAAUpE,oBACnB8uD,EAAS,8BAAoC,GAC9C,CAAC9G,EAAU8G,IAUV65I,yBAA0Bv8I,EAC1Bo/E,mBAAoBo9D,EACpBtjE,8BAA+BsjE,EAC/BhrL,uBACH,EAMkPkrL,GACnP,IAAKP,EACD,OAAO,KAEX,MAAMljE,EAAyB,CAC3BQ,sBAAuBjoH,EAAqB+B,iBAC5CmmH,4BAA6BloH,EAAqBgC,uBAClDmmH,uBAAwBnoH,EAAqB6B,kBAC7CumH,6BAA8BpoH,EAAqB8B,wBACnDumH,sBAAuBroH,EAAqB4B,kBAEhD,OAAQ,gBAAoB,GAAa,CAAE/gD,QAASA,EAASuB,UAAWA,EAAWovG,UAAWm5H,EAAmBxoO,YAAaA,EAAa0sK,aAAc51J,EAAoB68G,SAAU80G,EAAoBx5E,QAASy5E,EAAoBzrK,QAAS0rK,EAAoBl9D,mBAAoBA,EAAoBlG,8BAA+BA,EAA+BD,uBAAwBA,EAAwBH,cAAeyjE,GAA4B,ECjE7b,GAAkClpO,IAC3C,MAAM,wCAAEokG,GAA4CY,KACpD,OAAO,gBAAoBZ,EAAyCxlG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECFpFspO,GAAwBtpO,IACjC,MAAM,8BAAEmkG,GAAkCa,KAC1C,OAAO,gBAAoBb,EAA+BvlG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECJ1EupO,GAA+B,KACxC,MAAM,6BAAEp0I,EAA4B,uCAAEC,EAAsC,yBAAEqB,EAAwB,8BAAEJ,EAA6B,gCAAEC,EAA+B,gCAAEK,EAA+B,iCAAEC,EAAgC,qBAAEhB,EAAoB,MAAEn0F,EAAK,4BAAE80F,EAA2B,8BAAEC,EAA6B,kCAAEM,EAAiC,yCAAEC,EAAwC,0CAAEL,EAAyC,wCAAEM,GAA6C9B,KACze,OAAQ,gBAAoB,WAAgB,KACxCE,EAA0C,gBAAoB,GAAgC,CAAEua,UAAWva,EAAwCwwC,MAAOjvC,EAAiC+nE,OAAQ9nE,EAAkCmU,QAASjU,EAAmCwpE,gBAAiB5pE,EAA2C6pE,YAAaxpE,EAA0CypE,cAAexpE,IAA8C,KACjc7B,EAAgC,gBAAoBm0I,GAAsB,CAAE35H,UAAWxa,EAA8B8+B,SAAUx9B,EAA0Bl5B,QAAS84B,EAA+B54B,UAAW64B,EAAiCwhE,aAAcliE,EAAsB8mE,YAAanmE,EAA6BkmE,cAAejmE,EAA+B/0F,MAAOA,IAAY,KAAM,ECFpY+nO,IAAiB,SAAe,CAClCC,gBAAiB,CACbrrO,GAAI,gDAERohD,OAAQ,CACJphD,GAAI,uCAERsrO,OAAQ,CACJtrO,GAAI,uCAERmgB,OAAQ,CACJngB,GAAI,wCA4BCurO,GAAuB3pO,IAChC,MAAM,UAAE2vG,EAAS,mBAAEoyC,EAAkB,wBAAEC,EAAuB,0BAAE4nF,EAAyB,SAAE/tG,EAAQ,SAAE5H,GAAcj0H,EAC7G8uF,GAAO,EAAAC,GAAA,KACb,IAAK4gB,EACD,OAAO,KAEX,MAAM7oF,EAAW,KAAQ,CACrBi7H,GAAsBC,GAA2BwnF,GAAeC,gBAChE1nF,IAAuBC,GAA2BwnF,GAAehqL,QAChEuiG,GAAsBC,GAA2BwnF,GAAeE,OACjEE,GAA6BJ,GAAejrN,SAEhD,OAAQ,gBAAoB6iI,GAAe,CAAEntB,SAAUA,EAAU9S,SAAU0a,EAAUgP,YAAY,EAAO5iC,UAAW,qCAAsCgU,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,mCAAqC0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,4CAA+C0oB,EAAS7oB,KAAI,CAAC6Q,EAASnM,IAAW,gBAAoB,WAAgB,CAAEuD,IAAK4I,EAAQ1Q,IAC1b,IAAVuE,GAAe,gBAAoB,KAAM,MACzC,gBAAoBkwH,GAAA,EAAY,CAAE7L,QAAS,KACvC,gBAAoB,KAAkBpoH,OAAOiI,OAAO,CAAC,EAAGiI,QAAe,ECtDtE+6N,GAAgB7pO,GAElB,gBAAoB2pO,GAAqB/qO,OAAOiI,OAAO,CAAC,EAAG7G,ICiBzD8pO,GAA0B9pO,IACnC,MAAM,UAAE2vG,EAAS,SAAEksB,EAAQ,SAAE5H,GAAaj0H,EACpC8uF,GAAO,EAAAC,GAAA,KACb,OAAK4gB,EAGG,gBAAoByxC,GAAe,CAAEntB,SAAUA,EAAU9S,SAAU0a,EAAUgP,YAAY,EAAO5iC,UAAW,WAAYgU,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,yCAA2C0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,kDAC5S,gBAAoBy0H,GAAA,EAAY,CAAE7L,QAAS,KACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,0CAJzC,IAIoF,EC3BtF2rO,GAAmB/pO,GAErB,gBAAoB8pO,GAAwBlrO,OAAOiI,OAAO,CAAC,EAAG7G,ICA5DgqO,GAAsB,KAC/B,MAAMzhJ,EAAWoB,KAMjB,MAAO,CACHsqC,UANa,IAAA7oC,cAAY,IAAM7C,EAAS5jD,GAAUnC,8BAA8B,CAAC+lD,IAOjF44B,UANa,IAAA/1B,cAAY,KACzB7C,EAAShoC,MACTgoC,EAAS5jD,GAAUnC,4BAA4B,GAChD,CAAC+lD,IAIH,EAKQ0hJ,GAA2BjqO,IACpC,MAAM8uF,GAAO,EAAAC,GAAA,KAEb,OAD6BnF,GAAqBiG,IAI1C,gBAAoBuxD,GAAe,CAAEnlC,SAAUntB,EAAKj/D,cAAc,CAAEzxB,GAAI,sCAAwC2sI,iBAAkBj8C,EAAKj/D,cAAc,CAAEzxB,GAAI,8CAAgD0sI,iBAAkBh8C,EAAKj/D,cAAc,CAAEzxB,GAAI,WAAa61H,SAAUj0H,EAAMi0H,SAAU9S,SAAUnhH,EAAMmhH,SAAU0pB,YAAY,EAAO5iC,UAAW,yCACzV,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAOl4B,EAAKj/D,cAAc,CAAEzxB,GAAI,uCAHpE,IAG4G,ECxB9G8rO,GAAoBlqO,GAEtB,gBAAoBiqO,GAAyBrrO,OAAOiI,OAAO,CAAC,EAAG7G,ICG7DmqO,GAAW,EAAGrjN,WAAW,GAAIsjN,iBAAiB,QACvD,MAAOC,EAAoBC,IAAyB,IAAAtgJ,UAAS,IACvD2iF,GAAqB,IAAAvhF,cAAa62D,IACpCqoF,GAAuB7lC,GAAQA,EAAIl/L,QAAQglO,GAAeA,IAAetoF,MACzEmoF,EAAenoF,EAAU,GAC1B,CAACmoF,IACJ,OAAQ,gBAAoB7+F,GAAA,EAAS,KACjC,gBAAoB,MAAO,CAAEtjC,UAAW,eACpC,gBAAoB0yH,GAAA,EAAiB,KACjC,gBAAoBC,GAAA,EAAe,CAAE7jH,WAAY,aAAc9gG,QAAS,KACpE,gBAAoB,MAAO,KAAM6Q,EAAS7oB,KAAK6Q,IAC3C,MAAM,GAAE1Q,EAAIosO,UAAW/oI,EAAS,SAAEgpI,EAAQ,KAAE7lO,EAAI,SAAEstJ,EAAQ,UAAEw4E,GAAe57N,EACrE+hG,EAAaw5H,EAAmB/7M,SAASxf,EAAQ1Q,IACvD,OAAQ,gBAAoB,MAAO,CAAE8H,IAAK9H,GACtC,gBAAoBsyI,GAAA,EAAS,CAAEzoC,UAAW,KAAG,sBAAuBwiI,GAAY,qBAAsBA,GAAY,6BAA8B7lO,KAAMA,EAAMmmG,QAAS,IAAM4hE,EAAmBvuK,GAAK8zJ,SAAUA,EAAUw4E,UAAWA,GAAajpI,EAAa,gBAAoBA,EAAW,MAAU,gBAAoB,WAAgB,KACrU,gBAAoBkpI,GAAqB,CAAE77N,QAASA,EAAS87N,gBAAiB/5H,EAAYg6H,eAAgB,KAE9FP,EADAz5H,EACuB4zF,GAAQA,EAAIl/L,QAAQglO,GAAeA,IAAensO,IAGlDqmM,GAAQ,IAAIA,EAAKrmM,GAC5C,IAER,gBAAoB0sO,GAAe,CAAEh8N,QAASA,MAAe,QACjE,EAEtB67N,GAAsB,EAAG77N,UAAS87N,iBAAgBC,qBACpD,MAAM,SAAEJ,EAAQ,SAAEM,EAAQ,YAAEC,EAAW,KAAEpmO,GAASkK,EAClD,IAAK27N,EACD,OAAO,KAEX,MAAM9c,EAAoB,KAAG,0BAA2B,yBAA0B/oN,EAAM,CACpFqmO,IAAKL,EACLM,IAAKN,IAEHO,EAAyB,KAAG,+BAAgC,8BAA+BvmO,GACjG,OAAQ,gBAAoB,MAAO,CAAEqjG,UAAW,4BAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,IAAK/e,UAAW,0BACvD,gBAAoBmjI,GAAgB,CAAEt8N,QAASA,EAASlK,KAAM,SAC9D,gBAAoB,OAAQ,CAAEqjG,UAAWkjI,EAAwBp7H,QAAS86H,GAAkBD,EAAiBH,EAAWM,IAC5H,gBAAoB,MAAO,CAAE9iI,UAAW0lH,GAAqBqd,GAAc,EAE7EF,GAAgB,EAAGh8N,cACrB,MAAM,SAAE27N,GAAa37N,EACrB,OAAI27N,EACO,KAEJ,gBAAoBW,GAAgB,CAAEt8N,QAASA,EAASlK,KAAM,OAAQ,EAE3EwmO,GAAiB,EAAGt8N,UAASlK,WAC/B,MAAM,KAAErB,EAAI,KAAE0rF,GAASngF,EACjB2yF,EAAY78F,EAClB,OAAIqqF,EACO,gBAAoBwS,EAAW,CAAEwG,UAAW,+BAAiChZ,GAEhF,gBAAoBwS,EAAW,CAAEwG,UAAW,8BAA+BojI,wBAAyB,CAAEC,OAAQ/nO,GAAQ,KAAQ,EC5DpIgoO,GAAqB,CACvBnzM,EAAIo3G,GAAW,gBAAoB,IAAK,KAAMA,GAC9CjpI,EAAIipI,GAAW,gBAAoB,IAAK,KAAMA,IAE5Cg8F,IAAuB,SAAe,CACxCC,kBAAmB,CAAErtO,GAAI,0CACzBstO,iBAAkB,CAAEttO,GAAI,gDACxButO,qBAAsB,CAAEvtO,GAAI,mDAC5BwtO,oBAAqB,CAAExtO,GAAI,yDAC3BqsO,SAAU,CAAErsO,GAAI,0CAChB2sO,SAAU,CAAE3sO,GAAI,4CAEdytO,GAAmB,wBACnBC,GAAuB,4BCZhBC,GAAgB,KACzB,MAAQjlN,SAAUklN,EAAe79I,cAAe89I,IAAuB,IAAA5/N,YAAW6hF,KAC1EpnE,SAAU4b,EAAyByrD,cAAe+9I,GDWvD,WACH,MAAMp9I,GAAO,EAAAC,GAAA,KACPxG,EAAWoB,KACXrkC,EAAaskC,GAAqB/kC,IAClCliB,EAAyBinD,GAAqBwH,IAC9C+6I,EAA4BviJ,GAAqB2H,IACjDnqC,EAAewiC,GAAqBnjC,IAsC1C,MAAO,CACH3/B,UAtCa,IAAAta,UAAQ,KACrB,IAAK46C,EACD,MAAO,GAEX,MAAMglL,EAAsB,KAAQzpM,EAAuB1kC,KAAKwE,GAAQ6iD,EAAWr/C,IAAIxD,KAAM8C,OAAO,OAC9F8mO,EAAyB,KAAQF,EAA0BluO,KAAKwE,GAAQ6iD,EAAWr/C,IAAIxD,KAAM8C,OAAO,OAC1G,OAAO,KAAQ,CACX6mO,EAAoBziO,OAAS,GAAK,CAC9BvL,GAAIytO,GACJjnO,KAAM,UACNqqF,KAAMH,EAAKj/D,cAAc27M,GAAqBC,kBAAmBF,IACjEP,YAAal8I,EAAKj/D,cAAc27M,GAAqBE,iBAAkB9sO,OAAOiI,OAAO,CAAEylO,mBAAoBF,EAAoBnuO,IAAI,MAAamF,KAAK,OAASmoO,KAC9Jd,SAAU37I,EAAKj/D,cAAc27M,GAAqBf,UAClDM,SAAUj8I,EAAKj/D,cAAc27M,GAAqBT,WAEtDsB,EAAuB1iO,OAAS,GAAK,CACjCvL,GAAI0tO,GACJlnO,KAAM,UACNqqF,KAAMH,EAAKj/D,cAAc27M,GAAqBG,qBAAsBJ,IACpEP,YAAal8I,EAAKj/D,cAAc27M,GAAqBI,oBAAqBhtO,OAAOiI,OAAO,CAAEylO,mBAAoBD,EAAuBpuO,IAAI,MAAamF,KAAK,OAASmoO,KACpKd,SAAU37I,EAAKj/D,cAAc27M,GAAqBf,UAClDM,SAAUj8I,EAAKj/D,cAAc27M,GAAqBT,YAExD,GACH,CAAC3jL,EAAczkB,EAAwBwpM,EAA2Br9I,EAAMxpC,IAevE6oC,eAdkB,IAAA/C,cAAahtF,IAC3BA,IAAOytO,IACPtjJ,EAAS5jD,GAAUlC,+BAEnBrkC,IAAO0tO,IACPvjJ,EAAS5jD,GAAU7B,wDACvB,GACD,CAACylD,IAQA6F,mBAPsB,IAAAhD,cAAY,KAClC7C,EAAS5jD,GAAUlC,+BACnB8lD,EAAS5jD,GAAU7B,wDAAwD,GAC5E,CAACylD,IAMR,CC5D+FgkJ,GACrFzlN,GAAW,IAAAta,UAAQ,IAAM,IAAIw/N,KAAkBtpM,IAA0B,CAACspM,EAAetpM,IACzFyrD,GAAgB,IAAA/C,cAErBhtF,IACG6tO,EAAmB7tO,GACnB8tO,EAA6B9tO,EAAG,GACjC,CAAC8tO,EAA8BD,IAClC,OAAInlN,EAASnd,OAAS,EACX,gBAAoBwgO,GAAU,CAAErjN,SAAUA,EAAUsjN,eAAgBj8I,IAExE,IAAI,ECNTq+I,GAAsB,KACxB,MAAMC,ETQH,WACH,MAAMlkJ,EAAWoB,KACXsqC,GAAW,IAAA7oC,cAAY,IAAM7C,EAAS5jD,GAAUjE,sBAAsB,CAAC6nD,IACvEszC,GAAW,IAAAzwC,cAAY,IAAM8S,GAAmB3V,EAAUzwE,MAAmBu8F,SAAQ,KACvF9rB,EAAS5jD,GAAUjE,oBAAoB,KACvC,CAAC6nD,IAKL,MAAO,CACHonB,UALc/lB,GAAqB+F,IAMnCoyD,mBALuBn4D,GAAqBn0C,IAM5CusG,wBAL4Bp4D,GAAqBr9B,IAMjDq9K,0BAL8BhgJ,GAAqB78B,IAMnDknE,WACA4H,WAER,CS1B8B6wG,GAC1B,OAAO,gBAAoB7C,GAAcjrO,OAAOiI,OAAO,CAAC,EAAG4lO,GAAmB,EAE5EE,GAAyB,KAC3B,MAAMC,EPXH,WACH,MAAMrkJ,EAAWoB,KACXq4I,EAAcp4I,GAAqBkG,IACnCmkC,GAAW,IAAA7oC,cAAY,IAAM7C,EAAS5jD,GAAU7D,yBAAyB,CAACynD,IAC1EszC,GAAW,IAAAzwC,cAAY,IAAM8S,GAAmB3V,EAAUuQ,GAAuBkpI,EAAYjkN,aAAcikN,EAAYjxN,YAAYsjG,SAAQ,KAC7I9rB,EAAS5jD,GAAU7D,uBAAuB,KAC1C,CAACkhM,EAAaz5I,IAElB,MAAO,CACHonB,UAFc/lB,GAAqBgG,IAGnCqkC,WACA4H,WAER,COFiCgxG,GAC7B,OAAO,gBAAoB9C,GAAiBnrO,OAAOiI,OAAO,CAAC,EAAG+lO,GAAsB,EAElFE,GAAsB,KACxB,MAAMC,EAAoBnqF,KAC1B,OAAO,gBAAoB+lF,GAAc/pO,OAAOiI,OAAO,CAAC,EAAGkmO,GAAmB,EAE5EC,GAAgB,KAClB,MAAMC,EAAc7xD,KACpB,OAAO,gBAAoBstD,GAAQ9pO,OAAOiI,OAAO,CAAC,EAAGomO,GAAa,EAEhEC,GAAmB,KACrB,MAAMC,EAAiBr6H,KACvB,OAAO,gBAAoB81H,GAAWhqO,OAAOiI,OAAO,CAAC,EAAGsmO,GAAgB,EAEtEC,GAA0B,KAC5B,MAAMC,EAAwBrD,KAC9B,OAAO,gBAAoBE,GAAkBtrO,OAAOiI,OAAO,CAAC,EAAGwmO,GAAuB,EAI7EC,GAAkB,IACnB,gBAAoB,WAAgB,KACxC,gBAAoBvB,GAAe,MACnC,gBAAoBvD,GAAsB,MAC1C,gBAAoBe,GAA8B,MAClD,gBAAoBV,GAA4B,MAChD,gBAAoB2D,GAAqB,MACzC,gBAAoBG,GAAwB,MAC5C,gBAAoBG,GAAqB,MACzC,gBAAoBE,GAAe,MACnC,gBAAoBE,GAAkB,MACtC,gBAAoBE,GAAyB,OC7CxC,GAAmBptO,IAC5B,MAAM,gBAAEsjG,GAAoB0B,KAC5B,OAAO,gBAAoB1B,EAAiB1kG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECFnEutO,GAAqC,CACvCC,wBAAwB,SAAc,CAAEpvO,GAAI,kDAC5CqvO,WAAW,SAAc,CAAErvO,GAAI,kDAC/BsvO,kBAAkB,SAAc,CAAEtvO,GAAI,4CACtCuvO,uBAAuB,SAAc,CAAEvvO,GAAI,kDAC3CwvO,kBAAkB,SAAc,CAAExvO,GAAI,sDAEpCyvO,GAAmCjvO,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG0mO,IAAqC,CAAEE,WAAW,SAAc,CAAErvO,GAAI,wCAA0CwvO,kBAAkB,SAAc,CAAExvO,GAAI,oDAGzN0vO,GAAwC,IAAInsL,IAAI,CAClD,mBACA,0BAEEosL,IAAyB,KAAA14L,gBAAeiS,GAA0Ca,IAAsB,CAAColC,EAAUrjC,IAC9GA,EACDqjC,EACAA,EAAShoF,QAAQ8rH,IAAay8G,GAAsCxnO,IAAI+qH,OAErE28G,GAA2B,KACpC,MAAM5mL,EAAewiC,GAAqBnjC,IACpC8mC,EAAW3D,GAAqBmkJ,IAEhCE,EADmCrkJ,GAAqBx7B,IAExDm/K,GACAM,GACN,OAAOzmL,GAAgBmmC,EAAS5jF,OAAS,EAAK,gBAAoB+mI,GAAA,EAAS,CAAE9rI,KAAM,UAAWstJ,UAAU,EAAMjqD,UAAW,yCACrH,gBAAoB,KAAM,CAAEA,UAAW,+CAAiD1a,EAAStvF,KAAKozH,IAClG,MAAMviH,EAAUm/N,EAAiB58G,GACjC,OAAIviH,EACQ,gBAAoB,KAAM,CAAE5I,IAAKmrH,GACrC,gBAAoB,KAAkB,CAAEjzH,GAAI0Q,EAAQ1Q,MAErD,IAAI,MACP,IAAI,EClCP8vO,IAAuB,IAAAhxH,aAAW,SAA8B13G,EAAG/C,GAC5E,MAAMq5G,EAAkB/uB,GAA4BmL,KAC9C,gBAAET,GAAoBR,MACtB,mBAAE4f,GAAuBH,OACxB,OAAEjR,GAAUoC,GAAWlB,GAAiB,CAAC,UAAW,sBAAuB,kBAAmB,MAAO,mBAAoB,CAAC,GAMjI,OALA,IAAAz5F,YAAU,KACDu4F,GACDoR,GACJ,GACD,CAACA,EAAoBpR,IAChB,gBAAoB,MAAO,CAAEwC,UAAW,sDAAuDxlG,IAAKA,GACxG,gBAAoB,MAAO,CAAEwlG,UAAW,0CAA2CxlG,IAAKolG,EAASkI,QAAStY,GACtG,gBAAoBu2I,GAA0B,MAC9C,gBAAoB,GAAiB,CAAElyH,gBAAiBA,KACpE,ICjBaqyH,GAAoBnuO,IAC7B,MAAM,qCAAEm8M,EAAoC,qCAAEomB,EAAoC,wBAAE6L,GAA6BpuO,GAC3G,iBAAE0kG,EAAgB,sBAAEE,EAAqB,4BAAEC,EAA2B,0BAAEF,GAA+BK,KAC7G,OAAQ,gBAAoBN,EAAkB9lG,OAAOiI,OAAO,CAAC,EAAG7G,EAAO,CAAE4kG,sBAAuBA,EAAuBC,4BAA6BA,EAA6BF,0BAA2BA,EAA2Bw3G,qCAAsCA,EAAsComB,qCAAsCA,EAAsC6L,wBAAyBA,IAA4B,E,2BCGxb,MAAMC,WAAuB,EAAA5sI,UACzB1iG,YAAYiB,GACRgsC,MAAMhsC,GACNd,KAAKovO,YAAa,IAAAxvG,aAClB5/H,KAAKqvO,WAAa,KACd,MAAM,MAAEntN,EAAK,OAAEC,IAAW,SAAcniB,KAAKovO,WAAWnhO,SACxDjO,KAAK+sF,SAAS,CACV7qE,QACAC,UACF,EAENniB,KAAKkZ,MAAQ,CACTgJ,MAAO,EACPC,OAAQ,GAEZniB,KAAKsvO,oBAAsB,KAAStvO,KAAKqvO,WAAY,IAAK,CAAEn+D,SAAS,GACzE,CACAtmD,oBACI9gB,OAAOyrB,iBAAiB,SAAUv1H,KAAKsvO,qBACvCtvO,KAAKsvO,qBACT,CACAn5G,uBACIn2H,KAAKsvO,oBAAoB33N,SACzBmyF,OAAOssB,oBAAoB,SAAUp2H,KAAKsvO,oBAC9C,CACAC,wBACI,OAAO,KAAOvvO,KAAKkZ,OAAO,CAAC5S,EAAGU,KAC1B,MAAMwoO,EAAWxvO,KAAKc,MAAM2uO,cAAwB,UAARzoO,EACtC4uI,EAAY51I,KAAKc,MAAM4uO,eAAyB,WAAR1oO,EAC9C,OAAOwoO,GAAY55F,CAAS,GAEpC,CACA+5F,iBACI,MAAMhtL,EAAQ,gBAAoB3iD,KAAKc,MAAMuM,UAC7C,OAAO,eAAmBs1C,EAAO3iD,KAAKuvO,wBAC1C,CACA5hI,SACI,MAAMkK,EAAa,KAAG73G,KAAKc,MAAMioG,WACjC,OAAQ,gBAAoB,MAAO,CAAExlG,IAAKvD,KAAKovO,WAAYrmI,UAAW8O,GAAc73G,KAAK2vO,iBAC7F,EAEJR,GAAe1jH,aAAe,CAC1Bp+G,UAAU,EACV07F,UAAW,GACX0mI,cAAc,EACdC,eAAe,GC7CZ,MAAME,GAA4B9uO,IACrC,MAAM,mBAAEgmH,EAAkB,qCAAEu8G,GAAyCviO,EAAO+uO,GAAiB,SAAO/uO,EAAO,CAAC,qBAAsB,yCAC5H6kH,EAAkB14B,KAClB/qF,EAAWwoF,GAAqB1+B,IACtC,OAAQ,gBAAoBs1E,GAAa5hI,OAAOiI,OAAO,CAAC,EAAGkoO,EAAgB,CAAE/gH,WAAY,EAAGjpH,KAAMmc,EAASE,QAAO2nB,UAASC,aACnH,IAAI3kC,EAAIswB,EACR,IAAKzT,EACD,OAAO,gBAAoB8+G,GAAiB,CAAEr8E,WAAW,IAE7D,MAAMg/K,GAAoB,QAAyBzhN,GAC7C61F,EAAa,KAAG,mCAAoC,CACtD,WAAYhuE,EACZ,UAAWC,IAETxoB,EAAiD,QAAlCnc,GAAK,QAAe6c,UAA6B,IAAP7c,OAAgB,EAASA,EAAGu5E,OACrFknC,EAAe,CACjBx9G,KAAM,UACN1C,KAAM,UACN4b,eAEJ,OAAQ,gBAAoBiiN,GAAiC,CAAEF,qCAAsCA,EAAsC95N,OAAO,QAAayY,GAAUV,YAAaA,EAAaq/G,qBAAsB7Z,EAAoBphH,KAAM+9N,EAAmBvhN,MAAOA,EAAO6mF,UAAW8O,EAAYj4F,QAA4C,QAAlC6V,GAAK,QAAezT,UAA6B,IAAPyT,EAAgBA,GAAK,OAAezT,GAAUgnB,UAAU,QAAgBhnB,GAAUA,QAASA,EAAS0+G,uBAAwB,KACnd/a,EAAgBp4B,yBAAyBq4B,EAAa,EACvDoa,iBAAkB99H,aAA2C,EAASA,EAAS89H,kBAAoB,IACxG,EC5BD8vG,GAAwBhvO,IACjC,MAAM,yBAAEivO,EAAwB,gBAAExuG,EAAe,mBAAEza,EAAkB,qCAAEu8G,GAA0CviO,EAC3GkvO,GAAU,IAAAjiO,QAAO,MAKvB,OAJA,IAAAC,YAAU,KACN,IAAI7I,EACuB,QAA1BA,EAAK6qO,EAAQ/hO,eAA4B,IAAP9I,GAAyBA,EAAGkqO,YAAY,GAC5E,CAACU,IACI,gBAAoB,MAAO,CAAEhnI,UAAW,qEAC5C,gBAAoBomI,GAAgB,CAAE5rO,IAAKysO,EAASN,eAAe,EAAMD,cAAc,EAAO1mI,UAAW,kCACrG,gBAAoB6mI,GAA0B,CAAEvM,qCAAsCA,EAAsC9hG,gBAAiBA,EAAiBza,mBAAoBA,KAAwB,ECJzMmpH,GAAiBnvO,IAC1B,MAAM,UAAEioG,EAAS,qCAAEk0G,EAAoC,qCAAEomB,GAAyCviO,EAC5FovO,EAAexlJ,GAAqBn0C,IACpC45L,EAA8BzlJ,GAAqB36B,IACnDqH,EAAiBszB,GAAqBzhC,IACtC/mD,EAAWwoF,GAAqB1+B,IAChC05C,EAAwB5kG,EAAM4kG,sBAC9BC,EAA8B7kG,EAAM6kG,4BACpCF,EAA4B3kG,EAAM2kG,0BAClC2qI,GAAoB,IAAA9iO,UAAQ,KAC9B,MAAMhI,EAAQ,KAAQ,CAClB4qO,GAAgBxqI,EAAsBkQ,SACtCjQ,EAA4BiQ,SAC5BnQ,EAA0BmQ,WAE9B,OAAO,KAAOtwG,GAAQO,IAAW,IAAIV,EAAI,OAAgC,QAAxBA,EAAKU,EAAK63M,gBAA6B,IAAPv4M,EAAgBA,EAAK,CAAC,IAAKpG,KAAI,EAAG0+M,+BAA8B/3M,UACrI,gBAAoB+3M,EAA8B,CAAEz2M,IAAKtB,EAAMu3M,qCAAsCA,KAC/G,GACH,CAACt3G,EAA6BD,EAAuBD,EAA2ByqI,IACnF,OAAQ,gBAAoB,MAAO,CAAEnnI,UAAW,KAAG,qCAAsCA,IACrF,gBAAoB,MAAO,CAAEA,UAAW,+BACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,KAAM/e,UAAW,6BACxD,gBAAoB,KAAkB,CAAE7pG,GAAI,kCAChD,gBAAoB,MAAO,CAAE6pG,UAAW,sCACpC,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,sBAChD,gBAAoB,MAAO,CAAE6pG,UAAW,kBAAoBqnI,IAChED,EAA+B,gBAAoB,MAAO,CAAEpnI,UAAW,yFACnE,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,4CAChD,gBAAoB4wO,GAAsB,CAAEzM,qCAAsCA,EAAsC0M,yBAA0BhnI,EAAWw4B,iBAAkBnqE,EAAgB0vD,mBAAoB5kH,aAA2C,EAASA,EAAS4kH,sBAA0B,MAAO,EChCpTupH,GAA6BvvO,IACtC,MAAM,4BAAEwvO,EAA2B,qCAAErzB,EAAoC,qCAAEomB,EAAoC,sBAAE39H,EAAqB,4BAAEC,EAA2B,0BAAEF,GAA+B3kG,GAC9L,gBAAEy3F,GAAoBR,KACtBm3I,EAA0BpuO,EAAMouO,wBACtC,OAAQ,gBAAoB,MAAO,CAAEnmI,UAAW,wCAAyC8H,QAAStY,GAC9F,gBAAoB,MAAO,CAAEwQ,UAAW,0BACpC,gBAAoBknI,GAAe,CAAElnI,UAAWunI,EAA6BrzB,qCAAsCA,EAAsComB,qCAAsCA,EAAsC39H,sBAAuBA,EAAuBC,4BAA6BA,EAA6BF,0BAA2BA,KAC5W,gBAAoBypI,EAAyB,MAAO,ECP/CqB,GAAkCluI,GAAgB,CAC3DwxC,KAAM,IAAM,gBAAoB,WAAgB,MAChDxe,KAAMg7G,K,gBCLV,MAGMG,GAAuB,CACzB,kBACA,UACA,sBACA,MACA,kBACA,yBACA,2BAEJ,IAAIC,GAMG,SAASC,GAAuB5xH,EAAY6xH,EAAiBC,GAChE,MAAOC,EAAoBC,IAAyB,IAAAhmJ,UAAS2lJ,GAAmBl6H,MAC1Ew6H,GAAkB,EAAAC,GAAA,MACxB,IAAAhjO,YAAU,IACC+iO,EAAgBE,aAAaC,yBAAwB,KACxD,IAAI/rO,EAAIswB,EAAIK,EACZ,MAAMwxE,EAAWypI,EAAgBE,aAAa1pI,cACxC4pI,EAAeJ,EAAgBE,aAAaG,wBAC5CC,EAAyD,QAAlClsO,EAAKwrO,EAAgB1iO,eAA4B,IAAP9I,OAAgB,EAASA,EAAG4kH,wBAC7FunH,EAAyD,QAAlC77M,EAAKm7M,EAAgB3iO,eAA4B,IAAPwnB,OAAgB,EAASA,EAAGs0F,wBAC7FwnH,EAAqD,QAA7Bz7M,EAAKgpF,EAAW7wG,eAA4B,IAAP6nB,OAAgB,EAASA,EAAGi0F,0BAC1FziB,GAAakpI,GAAqBphN,SAASk4E,KAC3C6pI,GACAE,GACAC,GACAC,EAIkBJ,EAAankI,IAAMqkI,aAAiE,EAASA,EAAoBnnN,UACnImnN,aAAiE,EAASA,EAAoBnnN,SAAWqnN,aAAmE,EAASA,EAAqBtnN,KAE3M6mN,EAAsBL,GAAmBe,IAGpBL,EAAankI,GAAKskI,aAAiE,EAASA,EAAoBpnN,QAzChH,MA0CpBqnN,aAAmE,EAASA,EAAqBrnN,SAAWonN,aAAiE,EAASA,EAAoBpnN,QAE3M4mN,EAAsBL,GAAmBgB,MAG7CX,EAAsBL,GAAmBl6H,MAfrCu6H,EAAsBL,GAAmBl6H,KAeC,KAInD,ICvDA,SAAqB1qE,EAAU6lM,GAClC,MAAMC,GAAgB,IAAA5jO,QAAO89B,IAC7B,IAAA+lM,kBAAgB,KACZD,EAAc1jO,QAAU49B,CAAQ,GACjC,CAACA,KACJ,IAAA79B,YAAU,KACN,IAAK0jO,GAAmB,IAAVA,EACV,OAEJ,MAAMxyO,EAAK2yO,aAAY,IAAMF,EAAc1jO,WAAWyjO,GACtD,MAAO,IAAMI,cAAc5yO,EAAG,GAC/B,CAACwyO,GACR,CD4CIK,EAAY,KACR,IAAI5sO,EACJ,MAAM6sO,EAxDS,EAwDMnB,EACyB,QAA7C1rO,EAAK8sO,GAAenzH,EAAW7wG,gBAA6B,IAAP9I,GAAyBA,EAAG+sO,SAAS,CACvFjoN,IAAK+nN,GACP,GACHnB,IAAuBJ,GAAmBl6H,KAAO,KA3D7B,EA4D3B,CAIA,SAAS07H,GAAe3oO,GACpB,IAAKA,EACD,OAAOsgG,SAASuoI,gBAEpB,GAAI7oO,aAAmB8oO,YAAa,CAChC,MAAMr5F,EAAYjvC,OAAOyoC,iBAAiBjpI,GAASyvI,UAEnD,GADmC,YAAdA,GAAyC,WAAdA,GAC5BzvI,EAAQusH,cAAgBvsH,EAAQ80G,aAChD,OAAO90G,CAEf,CACA,OAAO2oO,GAAe3oO,EAAQ+oO,WAClC,EAhEA,SAAW5B,GACPA,EAAmBA,EAAuB,IAAK,GAAK,KACpDA,EAAmBA,EAAyB,KAAI,GAAK,OACrDA,EAAmBA,EAAyB,KAAI,GAAK,MACxD,CAJD,CAIGA,KAAuBA,GAAqB,CAAC,I,gBEjBhD,SAAS6B,GAAcC,EAAepB,GAClC,IAAKoB,IAAkBpB,EACnB,MAAO,CACHpsH,QAAS,QAGjB,MAAM,EAAExmF,EAAC,EAAEyuE,GAAMmkI,EACX/xC,EAAY,aAAa7gK,QAAQyuE,OACvC,MAAO,CACHoyF,YACAozC,gBAAiBpzC,EAEzB,CACO,MAAMqzC,GAAsB3xO,IAC/B,MAAM,SAAEwmG,EAAQ,KAAEzhG,EAAI,cAAE0sO,EAAa,aAAEpB,GAAiBrwO,GAClD,4BAAE6kG,EAA2B,0BAAEF,EAAyB,sBAAEC,GAA0BI,KACpF4sI,GAAuB,IAAAplO,UAAQ,KAAM,CACvCmM,gBAAiBksF,EAA4Bg4G,SAASC,kBACtD57L,QAASyjF,EAA0Bk4G,SAASC,kBAC5C/6L,IAAK6iF,EAAsBi4G,SAASC,qBACpC,CACAj4G,EAA4Bg4G,SAASC,kBACrCn4G,EAA0Bk4G,SAASC,kBACnCl4G,EAAsBi4G,SAASC,oBAE7B0tB,GAAY,IAAAh+N,UAAQ,KACtB,KAAMg6F,KAAYorI,GAId,OAHIrsI,IACAn/F,QAAQC,KAAK,iBAAiBmgG,oCAE3B,KAEX,MAAM/E,EAAYmwI,EAAqBprI,GACvC,OAAO,gBAAoB/E,EAAW,CAAE+E,SAAUA,EAAUzhG,KAAMA,GAAO,GAC1E,CAACyhG,EAAUorI,EAAsB7sO,IACpC,OAAQ,gBAAoB,MAAO,CAAEkjG,UAAW,eAAgBI,MAAOmpI,GAAcC,EAAepB,IAAiB7F,EAAW,ECTpI,SAASqH,GAAmBz3F,GAExB,OADAA,EAAYA,GAAa,CAAC,IACnBnyI,KAAKuZ,OAAO44H,EACvB,CC/BA,MAAM03F,GAAgB,CAClBr0M,EAAG,EACHyuE,EAAG,GCOD0lI,GAAuB,CACzB,0BFNqC5xO,IACrC,MAAM,KAAE+E,EAAI,cAAE0sO,EAAa,4BAAEM,EAA2B,iBAAEvjI,EAAgB,qBAAEwjI,GAAyBhyO,GAC/F,yBAAEguG,GAA6BU,MAC9BujI,EAAiBC,IAAmB,IAAAloJ,UAAS,SACpD,IAAA98E,YAAU,KACN8gG,EAAyBikI,EAAgB,GAC1C,CAACA,EAAiBjkI,IACrB,MAAMmkI,EAAkBH,IAClBI,EA2BV,SAAwB53F,EAAeE,EAAW23F,GAC9C,MACMC,EAAa53F,EAAY23F,EAE/B,OAHwBR,GAAmBr3F,GAErB,kBAAmC83F,EAE7D,CAhCqC,CAAevtO,EAAKy1I,cAAeu3F,EAA4B7lI,EAAGsC,EAAiBtC,IACpH,IAAAh/F,YAAU,KACN,MAAMqlO,EAkBd,SAA+BC,EAAUtqO,EAAKsZ,GAC1C,OAAIgxN,EAAWtqO,EACJ,MACPsqO,EAAWhxN,EACJ,MACJ,MACX,CAxBmCixN,CAAsBL,EAA0BrtO,EAAK6uE,SAAU7uE,EAAK8uE,UAC3F0+J,IAAuBN,GACvBC,EAAgBK,EACpB,GACD,CAACH,EAA0BrtO,EAAK6uE,SAAU7uE,EAAK8uE,SAAUo+J,IAC5D,MAAM9oN,EA0BH,SAA0BpkB,EAAM2tO,EAA4BC,EAA8BN,GAC7F,MAAM,SAAEz+J,EAAQ,SAAEC,GAAa9uE,EACzBuzG,EAAY,kBAAmCq6H,EAA+BN,GAC9EO,EAAqBf,GAAmB9sO,EAAKy1I,eAC7Cq4F,E5nBjDH,SAAwBl6H,EAAaZ,EAAaa,EAAcN,GACnE,MAAMt3F,EAAU43F,EAAeN,EAC/B,OAAO,KAAMt3F,EAAS23F,EAAaZ,EACvC,C4nB8C2B+6H,CAAel/J,EAAUC,EAAU++J,EAAoBt6H,GAE9E,OAAOo6H,EADQ,kBAAmCG,EAAiBD,EAEvE,CAjCgBG,CAAiBhuO,EAAM0sO,EAAcvlI,EAAG6lI,EAA4B7lI,EAAGsC,EAAiBtC,GAC9F7D,EAAQ,CACVl/E,IAAK,GAAGA,EAAMgpN,EAAgBjmI,EAAIsC,EAAiBtC,MACnDgB,KAAM,GAAGukI,EAAch0M,EAAI00M,EAAgB10M,EAAI+wE,EAAiB/wE,MAChE0vE,MAAO,QAEX,OAAQ,gBAAoB,MAAO,CAAElF,UAAW,4DAA6DI,MAAOA,GAChH,gBAAoBsxC,GAAe,CAAEhtI,OAAQ,WAAa,EEf9D,yB7nBRG,SAAiC3M,GACpC,MAAM,cAAE+tG,GAAkBW,MACpB,KAAE3pG,EAAI,4BAAEgtO,EAA2B,cAAEN,EAAa,iBAAEjjI,EAAgB,qBAAEwjI,GAAyBhyO,GAC/F,qBAAEk6G,GAAyBn1G,EAC3BiuO,EAAgBh7H,GAAkBjzG,EAAM0sO,EAAch0M,EAAGs0M,EAA4Bt0M,EAAG+wE,EAAiB/wE,GACzG4qE,EAsCV,UAA8B,cAAEopI,EAAa,SAAEt4H,EAAQ,qBAAEe,EAAoB,gBAAEi4H,EAAe,iBAAE3jI,IAC5F,MAAO,CACH7G,SAAU,WACVx+E,IAAK,GAAGsoN,EAAcvlI,EAAIimI,EAAgBjmI,EAAIsC,EAAiBtC,MAC/DgB,KAAM,GAAGiM,EAAWg5H,EAAgB10M,EAAI+wE,EAAiB/wE,MACzDpc,OAAQ,GAAG64F,MAEnB,CA7CkB+4H,CAAqB,CAC/B/4H,uBACAu3H,gBACAt4H,SAAU65H,EAAc75H,SACxBg5H,gBAAiBH,IACjBxjI,qBAeJ,OAbA,IAAAthG,YAAU,KACN6gG,EAAc,CACVyB,aAAcwjI,EAAcxjI,aAC5BC,aAAcujI,EAAcvjI,aAC5BqJ,aAAck6H,EAAcl6H,cAC9B,GACH,CACCk6H,EAAcxjI,aACdwjI,EAAcvjI,aACdujI,EAAcn6H,UACdm6H,EAAcl6H,aACd/K,IAEI,gBAAoB,MAAO,CAAE9F,UAAW,8CAA+CI,MAAOA,GAClG,gBAAoBoP,GAAc,CAAE9qG,OAAQ,WACpD,G6nBjBaumO,GAAqB,KAC9B,MAAMC,GAAe,IAAAlmO,QAAO,OACtB,oBAAE4gG,GAAwBa,KAC1B0kI,GAAsB,EAAAC,GAAA,IAAc/sI,IAAY,CAClDvhG,KAAMuhG,EAAQI,UACdF,SAAUF,EAAQG,cAClB4pI,aAAc/pI,EAAQgtI,kBACtBC,cAAejtI,EAAQgqI,wBACvBmB,cAAenrI,EAAQktI,+BACvBzB,4BAA6BzrI,EAAQ8T,iCACrChR,WAAY9C,EAAQ8C,kBAElB,SAAE5C,EAAQ,WAAE4C,GAAegqI,EAC3BpB,GAAuB,IAAA5mJ,cAAY,KACrC,IAAI/mF,EAAIswB,EACR,OAA8G,QAAtGA,EAAqC,QAA/BtwB,EAAK8uO,EAAahmO,eAA4B,IAAP9I,OAAgB,EAASA,EAAG4kH,+BAA4C,IAAPt0F,EAAgBA,EAAKs4E,EAAY,GACxJ,CAACkmI,EAAahmO,UACXsmO,EAA0B,4BAAbjtI,GAAuD,2BAAbA,GACvD,iBAAEgI,GD3BL,SAA6BklI,EAAe1rI,GAAW,GAC1D,MAAO2rI,EAAiBC,IAAsB,IAAA5pJ,UAAS8nJ,IACjD+B,GAAkB,IAAArnO,UAAQ,IACxBw7F,EACO0rI,IAGA5B,IAEZ,CAAC9pI,EAAU0rI,KACd,IAAAxmO,YAAU,KACN,MAAM4mO,EAAiB,KACnBF,EAAmBF,EAAc,EAMrC,OAJI1rI,IACAc,SAAS2rB,iBAAiB,SAAUq/G,GAAgB,GACpDA,KAEG,IAAMhrI,SAASwsB,oBAAoB,SAAUw+G,GAAgB,EAAK,GAC1E,CAAC9rI,EAAU0rI,IACd,MAAMllI,GAAmB,IAAAhiG,UAAQ,KACtB,CACHixB,EAAGk2M,EAAgBl2M,EAAIo2M,EAAgBp2M,EACvCyuE,EAAGynI,EAAgBznI,EAAI2nI,EAAgB3nI,KAE5C,CAACynI,EAAiBE,IACrB,MAAO,CACHA,kBACAF,kBACAnlI,mBAER,CCJiCulI,CAAoB/B,EAAsB5oI,GAAcqqI,IACrF,IAAAvmO,YAAU,KACN2gG,EAAoBW,EAAiB,GACtC,CAACA,EAAkBX,IACtB,MAAMmmI,GAAc,IAAAxnO,UAAQ,KAEjB,CACHm7F,SAFa8rI,EAAa,WAAa,QAGvCQ,cAAe,OACfC,OAAQxsH,KACRxa,KAAM,EACN/jF,IAAK,EACL/H,MAAO,OACPC,OAAQ,UAEb,CAACoyN,IACJ,IAAKrqI,EACD,OAAO,KAEX,MAAM3H,EAAYkE,GAA4Ba,GACxCorI,GAAqBprI,GACrBmrI,GACAwC,EAAexuI,GAA4Ba,GAC3C5nG,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGusO,GAAsB,CAAEpB,uBAAsBxjI,qBAAsB4kI,EAC1G,OAAQ,gBAAoB,MAAO,CAAEnrI,UAAW,aAAcI,MAAO2rI,EAAavxO,IAAK0wO,GACnF,gBAAoB1xI,EAAW7iG,OAAOiI,OAAO,CAAC,EAAGstO,IAAgB,ECnDlE,SAASC,KACZ,MAAM7rJ,EAAWoB,OACV,QAAE4c,EAAO,OAAEd,GAAUoC,GAAWlB,GAAiB,kBAAmB,CACvEM,KAAM,EAAG1hG,aACL,MAAM/C,EAAa+C,EAAOoT,gBAAgBC,gBAC1C2vE,EAAS,GAAsB/lF,GAAY,GAEhD,CAAC+lF,IACJ,IAAKge,EACD,OAAO,KAEX,MAAM0B,EAAY,KAAG,cAAe,qBAAsB,CACtD,mBAAoBxC,IAElB2C,EAAa5C,GAAsB,CAAEC,WAC3C,OAAQ,gBAAoB,MAAO,CAAEwC,UAAWA,EAAWxlG,IAAKolG,EAASQ,MAAOD,GAC5E,gBAAoB,MAAO,CAAEH,UAAW,uBACpC,gBAAoB,KAAkB,CAAE7pG,GAAI,yBACxD,CChBO,MAAMi2O,GAA+Br0O,IACxC,MAAM,QAAEupG,EAAO,SAAED,EAAQ,mBAAEE,EAAkB,UAAE8qI,EAAS,YAAEC,EAAW,SAAEhoO,GAepE,SAAwCvM,GAC3C,MAAMonD,EAAewiC,GAAqBnjC,IACpC6tL,EAAYn/H,KACZ5L,EAAUniD,IAAiBpnD,EAAMkiH,SACvC,OAAOtjH,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG7G,GAAQ,CAAEupG,UAC7C+qI,aACR,CArBwFE,CAA+Bx0O,KAC5G,WAAEopG,GAAcQ,GAAWP,GAAiB,CAC/CC,WACAC,UACAC,qBACAC,QAAS,CAACjkG,EAAG8gG,KACTguI,SAAsDA,EAAUhuI,EAAQ6K,UAAU,EAEtFzH,UAAW6qI,GACZ,CAAChrI,EAAS+qI,EAAW9qI,EAAoBF,IAC5C,OAAQ,gBAAoB,MAAO,CAAE7mG,IAAKmnG,EAAS3B,UAAW,KAAG,CAAE,cAAemB,KAAiB78F,EAAU,ECT1G,SAASkoO,IAA4B,SAAEloO,EAAQ,QAAE2U,IACpD,MAAMkmC,EAAewiC,GAAqBnjC,IACpCrlD,EAAWwoF,GAAqB1+B,IAChCwqF,EAAgBvgC,OACf,WAAE/L,GAAcQ,GAAWP,GAAiB,CAC/CC,SAAU,KACN,MAAMnoF,EAAW,GAAY/f,EAAU,UAAW8f,GAClD,MAAO,CACHtc,KAAM,kBACNsc,UACA3c,KAAM,CACFgd,WAAYJ,EAASE,OAAO0uB,SAAW,qBACvCzkC,UAAW6V,EAASC,MAAM2uB,SAAW,qBAE5C,EAELw5D,QAASniD,EACToiD,oBAAoB,EACpBC,QAASisC,GACV,CAACtuF,EAAclmC,EAASw0H,IAC3B,OAAQ,gBAAoB,MAAO,CAAEztC,UAAW,KAAW,CAAE,cAAemB,IAAe3mG,IAAKmnG,GAAWr9F,EAC/G,CC1BO,MAAMmoO,GAAW10O,IACpB,MAAM,iBAAEkkG,GAAqBc,KAC7B,OAAO,gBAAoBd,EAAkBtlG,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECKpE,GAAoB0hG,GAAkB41B,YAAY5P,IAC3CitH,GAAiB,KAC1B,MAAMtkN,EAASu5D,GAAqBz+B,IAC9BmgD,EAAa1hB,GAAqBnjC,IAClCmuL,GAAY,IAAA3nO,QAAO,MACnByvI,GAAY,IAAAzvI,QAAO,MACnB4nO,GAAY,IAAA5nO,QAAO,MAEzB,OADA2iO,GAAuBlzF,EAAWk4F,EAAWC,GACrC,gBAAoBjoI,GAAa,CAAEv8E,OAAQA,GAC/C,gBAAoB,MAAO,CAAE43E,UAAW,KAAG,iBAAkB,CACrD,mBAAoBqD,KAExB,gBAAoB4nI,GAAoB,MACxC,gBAAoB,MAAO,CAAEjrI,UAAW,wCACpC,gBAAoBkmI,GAAkB,CAAE2G,eAAgBrF,GAAiCrB,wBAAyBgG,GAAgBj4B,qCAAsCk4B,GAA6B9R,qCAAsCkS,KAC3O,gBAAoB,MAAO,CAAExsI,UAAW,mBACpC,gBAAoB,MAAO,CAAEA,UAAW,yDAA0DxlG,IAAKmyO,GACnG,gBAAoB,MAA2B,CAAEv9G,kBAAmB,IAChE,gBAAoBi2G,GAAiB,QAC7C,gBAAoBY,GAAsB,CAAEzrO,IAAKi6I,IACjD,gBAAoB,MAAO,CAAEz0C,UAAW,gCAAiCxlG,IAAKoyO,MACtF,gBAAoBH,GAAS,OAAQ,EC7BpCK,GAAoB/0O,IAC7B,MAAM,QAAEqjB,EAAO,MAAEzW,EAAK,OAAElF,GAAWkiF,GAAqBiR,KAClD,eAAEuI,EAAc,iBAAEC,GAAqB2B,KAC7C,OAAIp4F,EACO,gBAAoBw2F,EAAgB,CAAEt0F,QAASlC,EAAMkC,UAE5DuU,IAAY3b,EACL,gBAAoB27F,EAAkB,MAE1C,gBAAoBsxI,GAAgB/1O,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,E,4BCVjE,MAAMg1O,GAAiC,IAClC,gBAAoB,MAAO,CAAE/sI,UAAW,yDAC5C,gBAAoB4qB,GAAA,EAAY,CAAE7L,QAAS,MACvC,gBAAoB,KAAkB,CAAE5oH,GAAI,yBCelD,GAAoBsjG,GAAkB41B,YvmBpBF,KumBwB7B29G,GAAqBj1O,IAC9B,IAAIqE,EAAIswB,EAAIK,EAAIoB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIo+M,EAAIC,EAAIC,EACpE,MAAM,QAAEp2O,EAAO,UAAEuB,EAAS,iBAAE80O,EAAgB,eAAEC,EAAc,wBAAE54B,EAAuB,mBAAE64B,EAAkB,eAAEC,EAAc,gBAAE3S,EAAe,oBAAE4S,EAAmB,0BAAEC,EAAyB,oBAAEC,EAAmB,yBAAEC,EAAwB,YAAE/N,EAAW,0BAAEgO,EAAyB,sBAAEC,EAAqB,4BAAEC,GCrBlR,CAAC/1O,IACzB,MAAM,UAAEkE,EAAS,0CAAEqgG,EAAyC,qCAAEC,EAAoC,wBAAEX,EAAuB,yBAAEN,EAAwB,6BAAEC,EAA4B,mCAAEC,EAAkC,yBAAEgiB,EAAwB,6BAAE/hB,EAA4B,kCAAEC,EAAiC,4BAAEqyI,EAA2B,qBAAEpyI,GAA0B5jG,EACrWhB,GAAU,QAAiBgB,EAAMhB,SACjCuB,GAAY,QAAmBP,EAAMO,WACrCm8M,GAA0B,IAAAtxH,cAAa7lF,IACzC,MAAM0wO,EAAgB1xI,aAA6G,EAASA,EAA0Ch/F,GACtL,OAAO0wO,QAAqDA,EAAgBjtC,EAA+B,GAC5G,CAACzkG,IACEgxI,GAAqB,IAAAnqJ,cAAa7lF,IACpC,MAAM0wO,EAAgBzxI,aAAmG,EAASA,EAAqCj/F,GACvK,OAAO0wO,QAAqDA,EAAgB58B,EAA0B,GACvG,CAAC70G,IACEgxI,GAAiB,IAAApqJ,cAAahnF,IAChC,MAAM6xO,EAAgBpyI,aAAyE,EAASA,EAAwBz/F,GAChI,OAAO6xO,QAAqDA,EAAgBjjG,EAAsB,GACnG,CAACnvC,IACEg/H,GAAkB,IAAAz3I,cAAY,CAAClqE,EAAS9c,KAC1C,MAAM6xO,EAAgB1yI,aAA2E,EAASA,EAAyBriF,EAAS9c,GAC5I,OAAO6xO,QAAqDA,EAAgBvtB,EAAuB,GACpG,CAACnlH,IACEkyI,GAAsB,IAAArqJ,cAAY,CAAClqE,EAAS9c,KAC9C,MAAM6xO,EAAgBzyI,aAAmF,EAASA,EAA6BtiF,EAAS9c,GACxJ,OAAO6xO,QAAqDA,EAAgBttB,EAAkB,GAC/F,CAACnlH,IACEkyI,GAA4B,IAAAtqJ,cAAY,CAAClqE,EAAS9c,KACpD,MAAM6xO,EAAgBxyI,aAA+F,EAASA,EAAmCviF,EAAS9c,GAK1K,OAAO6xO,QAAqDA,EAHZxwH,EAC1CsjG,GACAE,EAC6G,GACpH,CAACxlH,IACEkyI,GAAsB,IAAAvqJ,cAAY,CAAClqE,EAAS9c,KAC9C,MAAM6xO,EAAgBvyI,aAAmF,EAASA,EAA6BxiF,EAAS9c,GAKxJ,OAAO6xO,QAAqDA,EAHlBxwH,EACpCulG,GACAI,EACuG,GAC9G,CAAC1nH,IACEkyI,GAA2B,IAAAxqJ,cAAY,CAAClqE,EAAS9c,KACnD,MAAM6xO,EAAgBtyI,aAA6F,EAASA,EAAkCziF,EAAS9c,GACvK,OAAO6xO,QAAqDA,EAAgB1qB,EAAgC,GAC7G,CAAC5nH,IACEkkI,GAAc,IAAAz8I,cAAY,CAACrpE,EAAK3d,KAClC,MAAM6xO,EAAgBryI,aAAmE,EAASA,EAAqB7hF,EAAK3d,GAC5H,OAAO6xO,QAAqDA,EAAgBhV,EAAmB,GAChG,CAACr9H,IACE0xI,GAAiB,IAAA9oO,UAAQ,IACC,iBAAdtI,GAAyB,QAAMA,GAAaA,GAC3D,CAACA,IACE2xO,GAA4B,IAAArpO,UAAQ,KACtC,MAAM0pO,EAAsBtT,GAA2CC,GACvE,OAAOmT,EACDA,EAA4BE,GAC5BA,CAAmB,GAC1B,CAACF,EAA6BnT,IAC3BiT,GAAwB,IAAAtpO,UAAQ,IAC3Bo7N,GAAuCC,IAC/C,CAACA,IACEkO,GAA8B,IAAAvpO,UAAQ,IACjCiwM,GAAmDC,IAC3D,CAACA,IAGJ,MAAO,CACH19M,UACAuB,YACA80O,sBAJwCpxO,KADrB,WAMnBqxO,iBACA54B,0BACA64B,qBACAC,iBACA3S,kBACA4S,sBACAC,4BACAC,sBACAC,2BACA/N,cACAgO,4BACAC,wBACAC,8BACH,ED7D0UI,CAAan2O,GAClVo2O,EAAmB,gBAAoB,KAAiB,CAAEp3O,QAASA,GACrE,gBAAoB,KAAmB,CAAEuB,UAAWA,GAChD,gBAAoB,MAA2B,CAAE82H,kBAAmB,IAChE,gBAAoBxtC,GAAwB,CAAE7qF,QAASgB,EAAMhB,QAASuB,UAAWP,EAAMO,UAAW2D,UAAWoxO,EAAgBl+N,mBAAoBpX,EAAMoX,mBAAoBsnC,iBAAkB1+C,EAAM0+C,iBAAkB2e,cAAer9D,EAAMq9D,cAAeh+D,OAAQW,EAAMX,OAAQmC,YAAaxB,EAAMwB,YAAa4mF,cAAepoF,EAAMooF,cAAec,sBAAuBlpF,EAAMkpF,sBAAuB8B,uBAAwBhrF,EAAMgrF,uBAAwBF,iBAAkB9qF,EAAM8qF,iBAAkBjwC,iBAAkB76C,EAAM66C,kBAC3f,gBAAoB0zC,GAA6B,KAC7C,gBAAoBkU,GAA6B,KAC7C,gBAAoBQ,GAAiC,CAAEwiB,yBAA0BzlH,EAAMylH,0BACnF,gBAAoBtgB,GAA6B,CAAE/B,eAAgD,QAA/B/+F,EAAKrE,EAAMojG,sBAAmC,IAAP/+F,EAAgBA,EAAK,KAAcg/F,iBAAoD,QAAjC1uE,EAAK30B,EAAMqjG,wBAAqC,IAAP1uE,EAAgBA,EAAK,KAAgB2uE,gBAAkD,QAAhCtuE,EAAKh1B,EAAMsjG,uBAAoC,IAAPtuE,EAAgBA,EAAKgrH,GAAwBz8C,yBAA0Bs/H,EAAiBr/H,6BAA8BiyI,EAAqBhyI,mCAAoCiyI,EAA2B/xI,kCAAmCiyI,EAA0BlyI,6BAA8BiyI,EAAqB/xI,qBAAsBikI,EAAahkI,wBAAyB2xI,EAAgB1xI,mBAAwD,QAAnC1tE,EAAKp2B,EAAM8jG,0BAAuC,IAAP1tE,EAAgBA,EAAKiiJ,GAAkBt0E,oBAA0D,QAApC1tE,EAAKr2B,EAAM+jG,2BAAwC,IAAP1tE,EAAgBA,EAAKuiJ,GAAmB30E,gBAAkD,QAAhC3tE,EAAKt2B,EAAMikG,uBAAoC,IAAP3tE,EAAgBA,EAAKslJ,GAAe13E,iBAAoD,QAAjC3tE,EAAKv2B,EAAMkkG,wBAAqC,IAAP3tE,EAAgBA,EAAK2lJ,GAAel4E,eAAgD,QAA/BxtE,EAAKx2B,EAAMgkG,sBAAmC,IAAPxtE,EAAgBA,EAAKylJ,GAAsB93E,8BAA8E,QAA9C1tE,EAAKz2B,EAAMmkG,qCAAkD,IAAP1tE,EAAgBA,EAAK+lI,GAA6Bp4D,wCAAkG,QAAxD1tE,EAAK12B,EAAMokG,+CAA4D,IAAP1tE,EAAgBA,EAAK,GAAuC2tE,qBAA4D,QAArC1tE,EAAK32B,EAAMqkG,4BAAyC,IAAP1tE,EAAgBA,EAAKy+I,GAAoB9wE,sBAA8D,QAAtC1tE,EAAK52B,EAAMskG,6BAA0C,IAAP1tE,EAAgBA,EAAKosH,GAAqBz+C,0CAA2Cm4G,EAAyBl4G,qCAAsC+wI,EAAoB9wI,mBAAwD,QAAnC5tE,EAAK72B,EAAMykG,0BAAuC,IAAP5tE,EAAgBA,EAAKq8E,GAAkBxO,iBAAoD,QAAjC5tE,EAAK92B,EAAM0kG,wBAAqC,IAAP5tE,EAAgBA,EAAK24M,GAAiC9qI,0BAA2BkxI,EAA2BjxI,sBAAuBkxI,EAAuBjxI,4BAA6BkxI,EAA6BjxI,iCAAoF,QAAjDowI,EAAKl1O,EAAM8kG,wCAAqD,IAAPowI,EAAgBA,EAAKF,GAAgCjwI,oBAA0D,QAApCowI,EAAKn1O,EAAM+kG,2BAAwC,IAAPowI,EAAgBA,EAAKh6D,IACr4E,gBAAoB71E,GAAyB,CAAED,iBAAkBrlG,EAAMqlG,kBACnE,gBAAoBgxI,GAAA,EAAa,CAAEr3O,QAAS,OACxC,gBAAoBivG,GAA2B,KAC3C,gBAAoB8mI,GAAkBn2O,OAAOiI,OAAO,CAAC,EAAG7G,eACpG,OAAIA,EAAMqrG,QAAWgqI,IAAqBr1O,EAAMs2O,oBACpC,gBAAoBC,GAAA,EAAe,CAAElrI,MAAOrrG,EAAMqrG,MAAOmrI,SAAyC,QAA9BpB,EAAKp1O,EAAMy2O,qBAAkC,IAAPrB,EAAgBA,EAAKj5D,GAA+Bn9K,QAASA,EAASuB,UAAWA,EAI/Lm2O,4BAA6B12O,EAAMs2O,qBAAuBF,GAE3DA,CAAe,EEzCbO,GAAa32O,IACtB,IAAIqE,EACJ,MAAMuyO,ErhCmEU,aAAiBlqO,GAClBC,OqhCnETkqO,EAAsB/pO,IAE5B,IrhC0FgB,aAAiBJ,GAClBG,cqhC1FX,OAAO,gBAAoBooO,GAAmBr2O,OAAOiI,OAAO,CAAC,EAAG7G,IAEpE,MAAMqjG,EAAqD,QAAjCh/F,EAAKrE,EAAMqjG,wBAAqC,IAAPh/F,EAAgBA,EAAK,KAKxF,MAAwB,YAApBuyO,EACO,gBAAoBvzI,EAAkB,MAE1C,gBAAoB4xI,GAAmBr2O,OAAOiI,OAAO,CAAEtG,UAAWs2O,EAAoBt2O,WAAaP,GAAO,EChBxG82O,GAAiC,IACnC,KCFEC,GAAkB,IACpB,KCDEC,GAAmB,IACrB,KCDEC,GAAc,IAChB,KCFEC,GAA2Bl3O,IACpC,MAAM,SAAEuM,GAAavM,EACrB,OAAO,gBAAoB,MAAO,CAAEioG,UAAW,4CAA8C17F,EAAS,ECF7F4qO,GAAgCn3O,IACzC,MAAM,SAAEuM,EAAQ,MAAE9D,GAAUzI,EAC5B,OAAQ,gBAAoB,MAAO,CAAEioG,UAAW,oBAC5C,gBAAoB,OAAQ,CAAEA,UAAW,0BAA4Bx/F,GACrE8D,EAAU,ECLZ,GAAe,CAAC,CAAE0/F,MAAO,QAAS1iG,OAAQ,CAAEk0B,EAAG,EAAGyuE,GAAI,KACtDkrI,GAAuCp3O,IACzC,MAAM,QAAE+hH,EAAO,SAAEx1G,GAAavM,EAC9B,OAAK+hH,EAGG,gBAAoBvW,GAAA,GAAoB,CAAEvD,UAAW,6BACzD17F,EACA,gBAAoBw/F,GAAA,GAAQ,CAAEC,YAAa,IAAgB+V,IAJpD,gBAAoB,MAAO,CAAE9Z,UAAW,6BAA+B17F,EAIT,EAKhE8qO,GAAiCr3O,IAC1C,MAAM,QAAE+hH,EAAO,SAAEG,EAAQ,KAAEzW,EAAI,QAAEsE,EAAO,SAAE/H,GAAahoG,EACvD,OAAQ,gBAAoBo3O,GAAqC,CAAEr1H,QAASA,GACxE,gBAAoBia,GAAA,EAAQ,CAAE/zB,UAAW,KAAG,sBAAuB,CAAE,CAAC,WAAWwD,KAASA,EAAM,YAAazD,IAAaka,SAAUA,EAAUnS,QAASA,IAAY,ECVpK,SAASunI,IAAiC,OAAElzO,EAAM,UAAEtD,EAAS,SAAEmzH,EAAQ,QAAE12D,EAAO,UAAE24F,EAAS,UAAEC,EAAS,UAAE14F,IAC3G,IAAIp5D,EACJ,MAAMkzO,EAAkBh2B,GAAiBn9M,GACnCozO,EAAelgB,GAAqB,CACtCx2N,UAAWA,EACLlC,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG/F,GAAY,CAAEqG,QAASowO,EAAgB7vO,cAAYzD,EACzFgwH,WACA12D,UACA24F,YACAC,YACA14F,cAEEg6K,GAAc,IAAAjrO,UAAQ,KACxB,GAA+B,aAA3B+qO,EAAgB5qO,OAChB,OAAO,IAAI,MAAmB,uCAElB,GACjB,CAAC4qO,EAAgB5qO,SAWpB,OAVA,IAAAO,YAAU,KACyB,aAA3BqqO,EAAgB5qO,QAAyB8qO,IACzCl6K,SAAkDA,EAAQk6K,GAC9D,GACD,CAACF,EAAgB5qO,OAAQ4wD,EAASk6K,KACrC,IAAAvqO,YAAU,KACyB,UAA3BqqO,EAAgB5qO,SAChB4wD,SAAkDA,EAAQg6K,EAAgB3qO,OAC9E,GACD,CAAC2qO,EAAgB3qO,MAAO2qO,EAAgB5qO,OAAQ4wD,IACpB,YAA3Bg6K,EAAgB5qO,QAAgD,YAAxB6qO,EAAa7qO,OAC9C,CACHC,WAAO3I,EACPyD,YAAQzD,EACR0I,OAAQ,WAGe,YAA3B4qO,EAAgB5qO,QAAgD,YAAxB6qO,EAAa7qO,OAC9C,CACHC,WAAO3I,EACPyD,YAAQzD,EACR0I,OAAQ,WAGe,UAA3B4qO,EAAgB5qO,QAA8C,UAAxB6qO,EAAa7qO,OAC5C,CACHC,MAAyC,QAAhCvI,EAAKkzO,EAAgB3qO,aAA0B,IAAPvI,EAAgBA,EAAKmzO,EAAa5qO,MACnFlF,YAAQzD,EACR0I,OAAQ,SAGe,aAA3B4qO,EAAgB5qO,OACT,CACHC,MAAO6qO,EACP/vO,YAAQzD,EACR0I,OAAQ,SAGT,CACHC,WAAO3I,EACPyD,OAAQ8vO,EAAa9vO,OACrBiF,OAAQ,UAEhB,CC3DO,SAAS+qO,IAA+B,OAAEtzO,EAAM,QAAE8c,EAAO,SAAE+yG,EAAQ,QAAE12D,EAAO,UAAE24F,EAAS,UAAEC,EAAS,UAAE14F,IACvG,IAAIp5D,EACJ,MAAMrF,GAAU,UACVuB,GAAY,UACZo3O,GAAuB,QAAqB,CAC9C/5K,QAAS18C,EACHpf,UACS,QAAUof,GACXA,EACAliB,EACGuB,UAAUA,GACVW,WACA89C,WAAW99B,GAEtB,KACN+yG,WACAkiC,YACA54F,UACA24F,aACD,CAACl3J,EAASuB,EAAW2gB,IAClBq2N,EAAkBh2B,GAExBo2B,EAAqBjwO,OAAStD,OAASH,EAAW0zO,EAAqBjwO,QACjEk9M,GAA0B,IAAAp4M,UAAQ,IAAMmrO,EAAqBjwO,QAC7D,QAAkBiwO,EAAqBjwO,OAAQ6vO,EAAgB7vO,aAC/DzD,GAAW,CACb0zO,EAAqBjwO,OAMrB,KAAU6vO,EAAgB7vO,UAOxB8vO,EAAelgB,GAAqB,CACtCx2N,WANqB,IAAA0L,UAAQ,IACtBo4M,EACD5lN,EAAQuB,UAAUA,GAAWO,YAAY82O,WAAWhzB,QACpD3gN,GACP,CAACjF,EAASuB,EAAWqkN,EAAyBxgN,IAG7C6vH,WACA12D,UACAE,cAQJ,OANA,IAAAvwD,YAAU,KACyB,UAA3BqqO,EAAgB5qO,SAChB4wD,SAAkDA,EAAQg6K,EAAgB3qO,OAC9E,GACD,CAAC2qO,EAAgB3qO,MAAO2qO,EAAgB5qO,OAAQ4wD,IAEf,UAAhCo6K,EAAqBhrO,QACW,YAAhCgrO,EAAqBhrO,QACW,YAAhCgrO,EAAqBhrO,OACd,CACHC,MAAO+qO,EAAqB/qO,MAC5BlF,YAAQzD,EACR0I,OAAQgrO,EAAqBhrO,QAGN,YAA3B4qO,EAAgB5qO,QAAgD,YAAxB6qO,EAAa7qO,OAC9C,CACHC,WAAO3I,EACPyD,YAAQzD,EACR0I,OAAQ,WAGe,YAA3B4qO,EAAgB5qO,QAAgD,YAAxB6qO,EAAa7qO,OAC9C,CACHC,WAAO3I,EACPyD,YAAQzD,EACR0I,OAAQ,WAGe,UAA3B4qO,EAAgB5qO,QAA8C,UAAxB6qO,EAAa7qO,OAC5C,CACHC,MAAsC,QAA7BvI,EAAKmzO,EAAa5qO,aAA0B,IAAPvI,EAAgBA,EAAKkzO,EAAgB3qO,MACnFlF,YAAQzD,EACR0I,OAAQ,SAGT,CACHC,WAAO3I,EACPyD,OAAQ8vO,EAAa9vO,OACrBiF,OAAQ,UAEhB,CCpFO,SAASkrO,GAAyBx4O,GACrC,MAAM,cAAEmtC,EAAa,SAAEynF,EAAQ,QAAE12D,EAAO,UAAE24F,EAAS,UAAEC,EAAS,UAAE14F,GAAcp+D,EACxEL,GAAU,UACVuB,GAAY,UACZ2gB,EAAU0oE,GAAqBx5B,GAAmB5jB,aAAqD,EAASA,EAActrB,UAC9H42N,EAAuBv2B,GAAiB/0K,GACxCo4K,GAA0B,IAAAp4M,UAAQ,KAAM,QAAkB0U,EAAS42N,EAAqBpwO,SAAS,CACnGwZ,EAMA,KAAU42N,EAAqBpwO,UAOnC,OAAO4vN,GAAqB,CACxBx2N,WANqB,IAAA0L,UAAQ,IACtBo4M,GAA2Bp4K,EAC5BxtC,EAAQuB,UAAUA,GAAWO,YAAY82O,WAAWhzB,QACpD3gN,GACP,CAACjF,EAASuB,EAAWqkN,EAAyBp4K,IAG7CynF,WACA12D,UACA24F,YACAC,YACA14F,aAER,CCpCO,MAAM,GAA8Bz9D,IACvC,MAAM,QAAEkhB,EAAO,OAAE9c,GAAWpE,GACtB,mCAAEyjG,GAAuCuB,KACzC6gB,GAA6B,IAAAr5G,UAAQ,IAAMi3F,EAAmCviF,EAAS9c,IAAS,CAACq/F,EAAoCviF,EAAS9c,IACpJ,OAAO,gBAAoByhH,EAA4BjnH,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECJvE,GAAwBA,IACjC,MAAM,QAAEkhB,EAAO,OAAE9c,GAAWpE,GACtB,6BAAE0jG,GAAiCsB,KACnC8gB,GAAuB,IAAAt5G,UAAQ,IAAMk3F,EAA6BxiF,EAAS9c,IAAS,CAACs/F,EAA8BxiF,EAAS9c,IAClI,OAAO,gBAAoB0hH,EAAsBlnH,OAAOiI,OAAO,CAAC,EAAG7G,GAAO,ECDvE,MAAM+3O,GACTh5O,cACIG,KAAK84O,eAAiB,MACtB94O,KAAK+4O,iBAAmB,UACxB/4O,KAAKg5O,iBAAmB,SAC5B,ECTJ,MAAMC,GAA2C,IACtCzvB,GAEL0vB,GAAsC,IACjCzvB,GAEX,MAAM0vB,GACFt5O,YAAYu5O,EAAQC,EAAqBC,GAMrCt5O,KAAKu5O,mBAAqB,CAAC,EAI3Bv5O,KAAKw5O,aAAe,CAACx3N,EAAS9c,KAC1B,MAAMu0O,EAAgB,IAAIz5O,KAAK05O,mBAAmBn2N,UAClD,IAAK,MAAM5iB,KAAY84O,EAAe,CAClC,MAAMl3I,EAAY5hG,EAASqhB,EAAS9c,GACpC,GAAIq9F,EACA,OAAOA,CAEf,CAGA,MAAM,IAAI,IAAgB,EAK9BviG,KAAK25O,wBAA0B,CAAC33N,EAAS9c,KACrC,MAAMu0O,EAAgB,IAAIz5O,KAAK45O,0BAA0Br2N,UACzD,IAAK,MAAM5iB,KAAY84O,EAAe,CAClC,MAAMl3I,EAAY5hG,EAASqhB,EAAS9c,GACpC,GAAIq9F,EACA,OAAOA,CAEf,CAGA,MAAM,IAAI,IAAgB,EAU9BviG,KAAK65O,aAAe75O,KAAKw5O,aACzBx5O,KAAKo5O,OAASA,EACdp5O,KAAK05O,kBAAoB,CAACL,GAC1Br5O,KAAK45O,yBAA2B,CAACN,EACrC,CACAQ,eAAe96J,EAAKr+E,GAEhB,MAAMo5O,EAAc/5O,KAAKu5O,mBAAmBv6J,QACxBj6E,IAAhBg1O,GACA/5O,KAAKo5O,OAAOjyO,KAAK,kDAAkD63E,OAGnEh/E,KAAK05O,kBAAkBK,GAAep5O,IAItCX,KAAKu5O,mBAAmBv6J,GAAOh/E,KAAK05O,kBAAkBjvO,OACtDzK,KAAK05O,kBAAkBn1O,KAAK5D,GAEpC,CACAq5O,kBAAkBr5O,GACdX,KAAK05O,kBAAkBn1O,KAAK5D,EAChC,CACAs5O,uBAAuBt5O,GACnBX,KAAK45O,yBAAyBr1O,KAAK5D,EACvC,CACAu5O,kBACI,OAAOl6O,KAAK65O,YAChB,CACAM,kCACI,OAAOn6O,KAAK25O,uBAChB,CACAS,mBAAmBz5O,GACfX,KAAK65O,aAAel5O,CACxB,EAWJ,MAAM05O,GACFx6O,YAAYu5O,EAAQlgO,GAChBlZ,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQA,EACblZ,KAAKg6O,kBAAoB,KAErBh6O,KAAKo5O,OAAOjyO,KAAK,sFAAsF,EAG3GnH,KAAKi6O,uBAAyB,KAE1Bj6O,KAAKo5O,OAAOjyO,KAAK,sFAAsF,EAG3GnH,KAAK85O,eAAkBQ,IAEnBt6O,KAAKo5O,OAAOjyO,KAAK,sFAAsF,EAG3GnH,KAAKo6O,mBAAqB,KAEtBp6O,KAAKo5O,OAAOjyO,KAAK,sFAAsF,EAE3GnH,KAAKk6O,gBAAkB,IACZl6O,KAAKkZ,MAAMghO,kBAEtBl6O,KAAKm6O,gCAAkC,IAC5Bn6O,KAAKkZ,MAAMihO,iCAE1B,EAaG,MAAMI,GACT16O,YAAYu5O,EAAQoB,EAAiBnB,EAAsBJ,GAA0CK,EAA6BJ,IAC9Hl5O,KAAKy6O,QAAU,CAACz7J,EAAKssJ,IACZtsJ,GASLh/E,KAAKkZ,MAAM4gO,eAAe96J,GALLh9D,IACjB,GAAI,MAAS,QAAYA,GAAUg9D,GAC/B,OAAOssJ,CACX,IAGJtrO,KAAKw6O,gBAAgBx4N,QAAU,KAAMhiB,KAAKw6O,gBAAgBx4N,QAAS,CAAC,QAC7DhiB,OAVHA,KAAKo5O,OAAOjyO,KAAK,uFACVnH,MAWfA,KAAK06O,mBAAsB/5O,IACvBX,KAAKkZ,MAAM8gO,kBAAkBr5O,GAC7BX,KAAKw6O,gBAAgBx4N,QAAU,KAAMhiB,KAAKw6O,gBAAgBx4N,QAAS,CAAC,aAC7DhiB,MAEXA,KAAK26O,oBAAuBC,IAExB,MAAMC,EAAe76O,KAAKkZ,MAAMghO,kBAG1BY,EAAoBF,EAAgBC,GAc1C,OAFA76O,KAAKkZ,MAAMkhO,oBATa,CAACp4N,EAAS9c,IACZ41O,EAAkB94N,EAAS9c,IAItC21O,EAAa74N,EAAS9c,KAKjClF,KAAKw6O,gBAAgBx4N,QAAU,KAAMhiB,KAAKw6O,gBAAgBx4N,QAAS,CAAC,cAC7DhiB,IAAI,EAEfA,KAAK+6O,mBAAqB,IACf/6O,KAAKkZ,MAAMghO,kBAEtBl6O,KAAKm6O,gCAAkC,IAC5Bn6O,KAAKkZ,MAAMihO,kCAEtBn6O,KAAKg7O,eAAiB,KAClBh7O,KAAKkZ,MAAQ,IAAImhO,GAA6Br6O,KAAKo5O,OAAQp5O,KAAKkZ,MAAM,EAE1ElZ,KAAKo5O,OAASA,EACdp5O,KAAKw6O,gBAAkBA,EACvBx6O,KAAKkZ,MAAQ,IAAIigO,GAA8BC,EAAQC,EAAqBC,EAChF,CACA2B,8BAA8Bt6O,GAG1B,OAFAX,KAAKkZ,MAAM+gO,uBAAuBt5O,GAClCX,KAAKw6O,gBAAgBx4N,QAAU,KAAMhiB,KAAKw6O,gBAAgBx4N,QAAS,CAAC,SAC7DhiB,IACX,ECrMG,SAASk7O,GAAeC,GAC3B,IAAIh2O,EACJ,MAAO,GAA+B,QAA3BA,EAAKg2O,EAAOC,iBAA8B,IAAPj2O,EAAgBA,EAAKg2O,EAAOluO,eAAekuO,EAAOE,SACpG,CCPA,SAASC,GAAuBH,EAAQvrO,GACpC,OAAOurO,EAAS,GAAGD,GAAeC,OAAYvrO,IAAYA,CAC9D,CAKO,MAAM2rO,GACT17O,cACIG,KAAKw7O,iBAAoBL,IACrBn7O,KAAKy7O,cAAgBN,CAAM,EAE/Bn7O,KAAKu1B,IAAM,CAAC3lB,KAAY8rO,KAEpBx0O,QAAQquB,IAAI+lN,GAAuBt7O,KAAKy7O,cAAe7rO,GAAU8rO,EAAe,EAEpF17O,KAAKmH,KAAO,CAACyI,KAAY8rO,KACrBx0O,QAAQC,KAAKm0O,GAAuBt7O,KAAKy7O,cAAe7rO,GAAU8rO,EAAe,EAErF17O,KAAK0N,MAAQ,CAACkC,KAAY8rO,KACtBx0O,QAAQwG,MAAM4tO,GAAuBt7O,KAAKy7O,cAAe7rO,GAAU8rO,EAAe,CAE1F,ECrBJ,MAAMC,GAA6B,IACxB5Z,GAEX,MAAM6Z,GACF/7O,YAAYg8O,GAIR77O,KAAKw5O,aAAe,CAAC32N,EAAK3d,KACtB,MAAMu0O,EAAgB,IAAIz5O,KAAK05O,mBAAmBn2N,UAClD,IAAK,MAAM5iB,KAAY84O,EAAe,CAClC,MAAMl3I,EAAY5hG,EAASkiB,EAAK3d,GAChC,GAAIq9F,EACA,OAAOA,CAEf,CAGA,MAAM,IAAI,IAAgB,EAU9BviG,KAAK65O,aAAe75O,KAAKw5O,aACzBx5O,KAAK05O,kBAAoB,CAACmC,EAC9B,CACA7B,kBAAkBr5O,GACdX,KAAK05O,kBAAkBn1O,KAAK5D,EAChC,CACAu5O,kBACI,OAAOl6O,KAAK65O,YAChB,CACAO,mBAAmBz5O,GACfX,KAAK65O,aAAel5O,CACxB,EAWJ,MAAMm7O,GACFj8O,YAAYu5O,EAAQlgO,GAChBlZ,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQA,EACblZ,KAAKg6O,kBAAqB+B,IAEtB/7O,KAAKo5O,OAAOjyO,KAAK,kFAAkF,EAGvGnH,KAAKo6O,mBAAsB2B,IAEvB/7O,KAAKo5O,OAAOjyO,KAAK,kFAAkF,EAEvGnH,KAAKk6O,gBAAkB,IACZl6O,KAAKkZ,MAAMghO,iBAE1B,EAaG,MAAM8B,GACTn8O,YAAYu5O,EAAQoB,EAAiBqB,EAAkBF,IACnD37O,KAAK06O,mBAAsB/5O,IACvBX,KAAKkZ,MAAM8gO,kBAAkBr5O,GAC7BX,KAAKw6O,gBAAgB33N,IAAM,KAAM7iB,KAAKw6O,gBAAgB33N,IAAK,CAAC,aACrD7iB,MAEXA,KAAK26O,oBAAuBC,IAExB,MAAMC,EAAe76O,KAAKkZ,MAAMghO,kBAG1BY,EAAoBF,EAAgBC,GAc1C,OAFA76O,KAAKkZ,MAAMkhO,oBATa,CAACv3N,EAAK3d,IACR41O,EAAkBj4N,EAAK3d,IAIlC21O,EAAah4N,EAAK3d,KAK7BlF,KAAKw6O,gBAAgB33N,IAAM,KAAM7iB,KAAKw6O,gBAAgB33N,IAAK,CAAC,cACrD7iB,IAAI,EAEfA,KAAKi8O,eAAiB,IACXj8O,KAAKkZ,MAAMghO,kBAEtBl6O,KAAKg7O,eAAiB,KAClBh7O,KAAKkZ,MAAQ,IAAI4iO,GAAyB97O,KAAKo5O,OAAQp5O,KAAKkZ,MAAM,EAEtElZ,KAAKo5O,OAASA,EACdp5O,KAAKw6O,gBAAkBA,EACvBx6O,KAAKkZ,MAAQ,IAAI0iO,GAA0BC,EAC/C,ECrHJ,MAAMK,GACFr8O,YAAYu5O,GACRp5O,KAAKo5O,OAASA,EACdp5O,KAAKm8O,gBAAkB,IAAIrlO,IAC3B9W,KAAKo8O,cAAiB1zL,IACd1oD,KAAKm8O,gBAAgB/0O,IAAIshD,EAAW18C,aACpChM,KAAKo5O,OAAOjyO,KAAK,iCAAiCuhD,EAAW18C,sDAEjEhM,KAAKm8O,gBAAgB7kO,IAAIoxC,EAAW18C,WAAY08C,EAAW,EAE/D1oD,KAAKq8O,mBAAqB,IACfr8O,KAAKm8O,eAEpB,EAEJ,MAAMG,GACFz8O,YAAYqZ,EAAOkgO,GACfp5O,KAAKkZ,MAAQA,EACblZ,KAAKo5O,OAASA,EACdp5O,KAAKo8O,cAAiBG,IAClBv8O,KAAKo5O,OAAOjyO,KAAK,6EAA6E,EAElGnH,KAAKq8O,mBAAqB,IACfr8O,KAAKkZ,MAAMmjO,oBAE1B,EAEG,MAAMG,GACT38O,YAAYu5O,GACRp5O,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQ,IAAIgjO,GAAsBl8O,KAAKo5O,QAC5Cp5O,KAAKy8O,gBAAkB,CAACzwO,EAAYu2F,KAChCviG,KAAKkZ,MAAMkjO,cAAc,CACrBpwO,aACA0wO,iBAAkBn6I,IAEfviG,MAEXA,KAAKg7O,eAAiB,KAClBh7O,KAAKkZ,MAAQ,IAAIojO,GAAsBt8O,KAAKkZ,MAAOlZ,KAAKo5O,QACjDp5O,MAEXA,KAAK28O,2BAA6B,KAC9B,MAAMR,EAAkBn8O,KAAKkZ,MAAMmjO,qBACnC,OAAQn3O,IACJ,IAAKwG,EAAexG,GAChB,OAEJ,MAAMwjD,EAAayzL,EAAgBp1O,IAAI7B,EAAOqG,YAC9C,OAAKm9C,EAGEA,EAAWg0L,sBAHlB,CAGkC,CACrC,CAET,ECpDG,MAAME,GACT/8O,YAAYu5O,EAAQoB,GAChBx6O,KAAKo5O,OAASA,EACdp5O,KAAKw6O,gBAAkBA,EACvBx6O,KAAK68O,WAAa,GAClB78O,KAAK88O,cAAgB,GACrB98O,KAAK4F,QAAU,CAAC2vC,EAAYE,EAAS5vC,IAC5BA,EAAKX,QAIVlF,KAAK68O,WAAWt4O,KAAK,CACjBgxC,aACAE,UACA5vC,KAAM,IAAUA,KAEb7F,OARHA,KAAKo5O,OAAOjyO,KAAK,0BAA0BouC,cAAuBE,oEAA2E5vC,GACtI7F,MASfA,KAAKkgB,WAAa,CAACq1B,EAAYnkC,KAC3B,GAAI,IAAQA,EAAQ9L,OAEhB,OADAtF,KAAKo5O,OAAOjyO,KAAK,2BAA2BouC,6DAAuEnkC,GAC5GpR,KAEX,MAAM+8O,EAAqB3rO,EAAQ9L,MAAMe,QAAQR,QAAyBd,IAAhBc,EAAKX,SAC/D,OAAK,IAAQ63O,IAIb/8O,KAAK88O,cAAcv4O,KAAK,CACpBgxC,aACAnkC,QAAS,IAAUA,KAEhBpR,OAPHA,KAAKo5O,OAAOjyO,KAAK,2BAA2BouC,0FAAoGnkC,GACzIpR,KAMA,EAEfA,KAAKg9O,qBAAwBl/N,IACzB,MAAMm/N,EAAUhtM,GAAA,IAA2BnyB,GACrCmwB,EAASgvM,EAAQhvM,UACjB,QAAEivM,GAAYl9O,KAAKw6O,gBAqBzB,OApBAx6O,KAAK68O,WAAWn2O,SAAS07D,IACrB,MAAM,WAAE7sB,EAAU,QAAEE,EAAO,KAAE5vC,GAASu8D,EAChC+6K,GAAmC,IAAhB5nM,EAAoBtH,EAAOnvB,WAAWirB,QAAUwL,EACzE0nM,EAAQ5sM,cAAc8sM,GAAmBnvM,IACrCA,EAAepoC,QAAQC,GAAmB,IAAb4vC,OAAiB1wC,EAAY0wC,GACtD5vC,EAAKX,SACLg4O,GAAQ,EAAA/xO,EAAA,IAAetF,EAAKX,SAAW,YAEpC8oC,IACT,IAENhuC,KAAK88O,cAAcp2O,SAAS07D,IACxB,MAAM,WAAE7sB,EAAU,QAAEnkC,GAAYgxD,EAChC66K,EAAQ/8N,WAAW9O,GAAyB,IAAhBmkC,OAAoBxwC,EAAYwwC,GAC5DnkC,EAAQ9L,MAAMoB,SAASb,IACfA,EAAKX,SACLg4O,GAAQ,EAAA/xO,EAAA,IAAetF,EAAKX,SAAW,WAC3C,GACF,IAEC+3O,EAAQ7uM,OAAO,CAE9B,EChEG,MAAMgvM,GACTv9O,YAAYu5O,EAAQoB,GAChBx6O,KAAKo5O,OAASA,EACdp5O,KAAKw6O,gBAAkBA,EACvBx6O,KAAKq9O,QAAS,EACdr9O,KAAKs9O,2BAA6B,GAClCt9O,KAAKu9O,qBAAwBC,IACpBx9O,KAAKq9O,OAINr9O,KAAKo5O,OAAOjyO,KAAK,oFAHjBnH,KAAKs9O,2BAA2B/4O,KAAKi5O,GAKlCx9O,MAEXA,KAAKg7O,eAAiB,KAClBh7O,KAAKq9O,QAAS,EACPr9O,MAEXA,KAAKy9O,gCAAkC,KACnC,MAAMC,EAAW,IAAI19O,KAAKs9O,4BAC1B,OAAQt4O,IACJ,MAAM,OAAE8Y,GAAW9Y,EASnB,IAAK8Y,GAA0B,qBAAhBA,EAAOpY,KAClB,OAEJ,MAAMi4O,EAAYD,EAASr0O,QAAO,CAACyhD,EAAe8yL,KAE9C,MAAMC,EAAa,IAAIjB,GAAsB58O,KAAKo5O,OAAQp5O,KAAKw6O,iBAC/D,IASI,OAJAoD,EAAG9yL,EAAe+yL,GAIXA,EAAWb,qBAAqBlyL,EAC3C,CACA,MAAOxrD,GAEH,OADAU,KAAKo5O,OAAO1rO,MAAM,mGAAoGpO,GAC/GwrD,CACX,IACDhtC,GACH,OAAOpe,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG3C,GAAY,CAAE8Y,OAAQ6/N,GAAY,CAC5E,CAET,ECvDJ,MAAMG,GACFj+O,YAAYu5O,GACRp5O,KAAKo5O,OAASA,EACdp5O,KAAK+9O,mBAAgBh5O,EACrB/E,KAAKg+O,iBAAmB,KACpB,IAAI74O,EACJ,OAAqC,QAA7BA,EAAKnF,KAAK+9O,qBAAkC,IAAP54O,EAAgBA,EAAK,SAAS,EAE/EnF,KAAKi+O,iBAAoBF,IACjB/9O,KAAK+9O,eACL/9O,KAAKo5O,OAAOjyO,KAAK,4CAA4C42O,8CAEjE/9O,KAAK+9O,cAAgBA,CAAa,CAE1C,EAEJ,MAAMG,GACFr+O,YAAYqZ,EAAOkgO,GACfp5O,KAAKkZ,MAAQA,EACblZ,KAAKo5O,OAASA,EACdp5O,KAAKg+O,iBAAmB,IACbh+O,KAAKkZ,MAAM8kO,mBAEtBh+O,KAAKi+O,iBAAoBE,IACrBn+O,KAAKo5O,OAAOjyO,KAAK,wFAAwF,CAEjH,EAKG,MAAMi3O,GACTv+O,YAAYu5O,GACRp5O,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQ,IAAI4kO,GAAyB99O,KAAKo5O,QAC/Cp5O,KAAKi+O,iBAAoB91L,IACrBnoD,KAAKkZ,MAAM+kO,iBAAiB91L,GACrBnoD,MAEXA,KAAKq+O,oBAAsB,KAChB,CAIH94I,mBAAsD,WAAlCvlG,KAAKkZ,MAAM8kO,mBAAkCtqI,QAAkB3uG,IAG3F/E,KAAKg7O,eAAiB,KAClBh7O,KAAKkZ,MAAQ,IAAIglO,GAA+Bl+O,KAAKkZ,MAAOlZ,KAAKo5O,QAC1Dp5O,KAEf,ECnDJ,MAAMs+O,GAAyC,IACpCx0C,GAEX,MAAMy0C,GACF1+O,YAAYg8O,GAIR77O,KAAKw5O,aAAgB//N,IACjB,MAAMggO,EAAgB,IAAIz5O,KAAK05O,mBAAmBn2N,UAClD,IAAK,MAAM5iB,KAAY84O,EAAe,CAClC,MAAMl3I,EAAY5hG,EAAS8Y,GAC3B,GAAI8oF,EACA,OAAOA,CAEf,CAGA,MAAM,IAAI,IAAgB,EAU9BviG,KAAK65O,aAAe75O,KAAKw5O,aACzBx5O,KAAK05O,kBAAoB,CAACmC,EAC9B,CACA7B,kBAAkBr5O,GACdX,KAAK05O,kBAAkBn1O,KAAK5D,EAChC,CACAu5O,kBACI,OAAOl6O,KAAK65O,YAChB,CACAO,mBAAmBz5O,GACfX,KAAK65O,aAAel5O,CACxB,EAWJ,MAAM69O,GACF3+O,YAAYu5O,EAAQlgO,GAChBlZ,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQA,EACblZ,KAAKg6O,kBAAqB+B,IAEtB/7O,KAAKo5O,OAAOjyO,KAAK,8FAA8F,EAGnHnH,KAAKo6O,mBAAsB2B,IAEvB/7O,KAAKo5O,OAAOjyO,KAAK,8FAA8F,EAEnHnH,KAAKk6O,gBAAkB,IACZl6O,KAAKkZ,MAAMghO,iBAE1B,EAaG,MAAMuE,GACT5+O,YAAYu5O,EAAQyC,EAAkByC,IAClCt+O,KAAK06O,mBAAsB/5O,IACvBX,KAAKkZ,MAAM8gO,kBAAkBr5O,GACtBX,MAEXA,KAAK0+O,2BAA6B,IACvB1+O,KAAKkZ,MAAMghO,kBAEtBl6O,KAAKg7O,eAAiB,KAClBh7O,KAAKkZ,MAAQ,IAAIslO,GAAsCx+O,KAAKo5O,OAAQp5O,KAAKkZ,MAAM,EAEnFlZ,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQ,IAAIqlO,GAAuC1C,EAC5D,EC7FJ,MAAM8C,GAAoC,IAC/BxkC,GAEX,MAAMykC,GACF/+O,YAAYg8O,GAIR77O,KAAKw5O,aAAgB7/N,IACjB,MAAM8/N,EAAgB,IAAIz5O,KAAK05O,mBAAmBn2N,UAClD,IAAK,MAAM5iB,KAAY84O,EAAe,CAClC,MAAMl3I,EAAY5hG,EAASgZ,GAC3B,GAAI4oF,EACA,OAAOA,CAEf,CAGA,MAAM,IAAI,IAAgB,EAU9BviG,KAAK65O,aAAe75O,KAAKw5O,aACzBx5O,KAAK05O,kBAAoB,CAACmC,EAC9B,CACA7B,kBAAkBr5O,GACdX,KAAK05O,kBAAkBn1O,KAAK5D,EAChC,CACAu5O,kBACI,OAAOl6O,KAAK65O,YAChB,CACAO,mBAAmBz5O,GACfX,KAAK65O,aAAel5O,CACxB,EAWJ,MAAMk+O,GACFh/O,YAAYu5O,EAAQlgO,GAChBlZ,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQA,EACblZ,KAAKg6O,kBAAqB+B,IAEtB/7O,KAAKo5O,OAAOjyO,KAAK,yFAAyF,EAG9GnH,KAAKo6O,mBAAsB2B,IAEvB/7O,KAAKo5O,OAAOjyO,KAAK,yFAAyF,EAE9GnH,KAAKk6O,gBAAkB,IACZl6O,KAAKkZ,MAAMghO,iBAE1B,EAaG,MAAM4E,GACTj/O,YAAYu5O,EAAQyC,EAAkB8C,IAClC3+O,KAAK06O,mBAAsB/5O,IACvBX,KAAKkZ,MAAM8gO,kBAAkBr5O,GACtBX,MAEXA,KAAK++O,sBAAwB,IAClB/+O,KAAKkZ,MAAMghO,kBAEtBl6O,KAAKg7O,eAAiB,KAClBh7O,KAAKkZ,MAAQ,IAAI2lO,GAAiC7+O,KAAKo5O,OAAQp5O,KAAKkZ,MAAM,EAE9ElZ,KAAKo5O,OAASA,EACdp5O,KAAKkZ,MAAQ,IAAI0lO,GAAkC/C,EACvD,EC7FG,MAAMmD,GACTn/O,YAAYu5O,GACRp5O,KAAKo5O,OAASA,EACdp5O,KAAKi/O,2BAA6B,IAAIR,GAAkCz+O,KAAKo5O,QAC7Ep5O,KAAKk/O,sBAAwB,IAAIJ,GAA6B9+O,KAAKo5O,QACnEp5O,KAAKg7O,eAAiB,KAClBh7O,KAAKi/O,2BAA2BjE,iBAChCh7O,KAAKk/O,sBAAsBlE,iBACpBh7O,KAEf,CACAg/B,YACI,OAAOh/B,KAAKi/O,0BAChB,CACA33N,OACI,OAAOtnB,KAAKk/O,qBAChB,ECJG,MAAMC,GACTt/O,cACIG,KAAKo/O,UCdF,CACHp9N,QAAS,GACTa,IAAK,GACLq6N,QAAS,CAAC,GDYVl9O,KAAKo5O,OAAS,IAAImC,GAClBv7O,KAAKq/O,kBAAoB,IAAI9E,GAAyBv6O,KAAKo5O,OAAQp5O,KAAKo/O,WACxEp/O,KAAKs/O,cAAgB,IAAItD,GAAqBh8O,KAAKo5O,OAAQp5O,KAAKo/O,WAChEp/O,KAAKu/O,iBAAmB,IAAI/C,GAAwBx8O,KAAKo5O,QACzDp5O,KAAKw/O,iBAAmB,IAAIpC,GAAwBp9O,KAAKo5O,OAAQp5O,KAAKo/O,WACtEp/O,KAAKy/O,oBAAsB,IAAIrB,GAA2Bp+O,KAAKo5O,QAC/Dp5O,KAAK0/O,kBAAoB,IAAIV,GAAyBh/O,KAAKo5O,QAC3Dp5O,KAAK2/O,eAAiB,CAAC,EACvB3/O,KAAK4/O,gBAAkB,KACnB5/O,KAAKq/O,kBAAkBrE,iBACvBh7O,KAAKs/O,cAActE,iBACnBh7O,KAAKu/O,iBAAiBvE,iBACtBh7O,KAAK0/O,kBAAkB1E,iBACvBh7O,KAAKw/O,iBAAiBxE,gBAAgB,EAE1Ch7O,KAAK6/O,kBAAqBF,IACtB3/O,KAAK2/O,eAAiBA,GAAkB,CAAC,CAAC,EAE9C3/O,KAAK8wJ,eAAiB,IACX9wJ,KAAKq/O,kBAEhBr/O,KAAK8/O,WAAa,IACP9/O,KAAKs/O,cAEhBt/O,KAAK8mD,cAAgB,IACV9mD,KAAKu/O,iBAEhBv/O,KAAK8d,OAAS,IACH9d,KAAKw/O,iBAEhBx/O,KAAK2gC,UAAY,IACN3gC,KAAKy/O,oBAEhBz/O,KAAKiI,QAAU,IACJjI,KAAK0/O,kBAEhB1/O,KAAK+/O,uBAA0B5E,IAC3Bn7O,KAAKo5O,OAAOoC,iBAAiBL,GAC7Bn7O,KAAKo5O,OAAO7jN,IAAI,yBAAyB,EAE7Cv1B,KAAKggP,sBAAwB,KACzBhgP,KAAKo5O,OAAO7jN,IAAI,0BAChBv1B,KAAKo5O,OAAOoC,sBAAiBz2O,EAAU,EAG3C/E,KAAKigP,sBAAyBvyO,IAC1B1N,KAAKo5O,OAAO1rO,MAAM,oFAAqFA,GACvG1N,KAAKo5O,OAAOoC,sBAAiBz2O,EAAU,EAE3C/E,KAAKouC,MAAQ,KACT,MAAM8xM,EAA4BlgP,KAAKy/O,oBAAoBpB,sBACrDv9O,EAAQpB,OAAOiI,OAAO,CAAE08F,yBAA0BrkG,KAAKq/O,kBAAkBtE,qBAAsBz2I,6BAA8BtkG,KAAKq/O,kBAAkBlF,kCAAmCz1I,qBAAsB1kG,KAAKs/O,cAAcrD,iBAAkBt3I,wBAAyB3kG,KAAKu/O,iBAAiB5C,6BAA8Bt3I,0CAA2CrlG,KAAK0/O,kBAC5W1gN,YACA0/M,6BAA8Bp5I,qCAAsCtlG,KAAK0/O,kBAAkBp4N,OAAOy3N,wBAAyBnzJ,iBAAkB,CAC9IpwC,6BAA8Bx7C,KAAKw/O,iBAAiB/B,mCACrD9hM,iBAAkB37C,KAAKmgP,uBAA0BD,EAA0B36I,mBAC5E,CAAEA,mBAAoB26I,EAA0B36I,oBAChD,CAAC,GAEP,OADAvlG,KAAK4/O,kBACE9+O,CAAK,CAEpB,CACAq/O,sBACI,OAAQn7O,IACJ,MAAM29F,EAAWjjG,OAAOiI,OAAO,CAAC,EAAG3H,KAAK2/O,iBAClC,QAAE39N,EAAO,IAAEa,EAAG,QAAEq6N,GAAYl9O,KAAKo/O,WACjC,OAAEthO,GAAW9Y,EAoBnB,OAnBA,SAAW8Y,EAAQ,CACfsiO,aAAev6O,MACN,QAAgBA,EAAKX,UAAW,QAA0BW,EAAKX,WAChE,QAASW,EAAKX,SACd8c,EAAQvX,OAAS,GACjB41O,GAAc19I,GAAU,EAAAx3F,EAAA,IAAetF,EAAKX,SAAS,EAAM,sBAE1D,QAAYW,EAAKX,UAAW,QAAsBW,EAAKX,WACxD,QAASW,EAAKX,SACd2d,EAAIpY,OAAS,GACb41O,GAAc19I,GAAU,EAAAx3F,EAAA,IAAetF,EAAKX,SAAS,EAAM,mBAC/D,IAGRxF,OAAOD,KAAKy9O,GAASx2O,SAASnD,IACL,aAAjB25O,EAAQ35O,IACR88O,GAAc19I,EAAUp/F,GAAK,EAAM,mBACvC,IAEGo/F,CAAQ,CAEvB,EAEJ,SAAS09I,GAAc19I,EAAUp/F,EAAK4hC,EAAa4tD,GAC/C,MAAM9kF,EAAU00F,EAASp/F,GACnBozD,EAAU,CACZxxB,cACA4tD,gBAEJ4P,EAASp/F,GAAO7D,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAGgvD,GAAW1oD,GAAoB,CAAC,EACpF,C,2BE1GA,MAAMqyO,GAA+BC,GACzB/2J,GACGA,IAAY+2J,GAAU/2J,EAAQA,UAAY+2J,EAAM/2J,SAAWA,EAAQK,OAAS02J,EAAM12J,KAc1F,MAAM22J,GACT3gP,cACIG,KAAKygP,SAAW,GAChBzgP,KAAK0gP,qBAAsB,EAC3B1gP,KAAK2gP,oBAAsB,GAC3B3gP,KAAK4gP,sBAAwB,GAC7B5gP,KAAK6gP,kBAAoB,GACzB7gP,KAAK8gP,UAAY,IAAIhqO,IACrB9W,KAAK+gP,yBAA2B,CAAC7nO,EAAOmwE,KACpCrpF,KAAK6gP,kBAAkBn6O,SAASqrL,IAC5B,IACIA,EAAG74K,EAAOmwE,EACd,CACA,MAAO/pF,GACH4H,QAAQC,KAAK,0BAA0B4qL,wBAA0BzyL,EACrE,IACF,EASNU,KAAKgqF,sBAAwB,CAACg3J,EAAUC,KACpCjhP,KAAK+M,gBAAkBi0O,EACvBhhP,KAAKgN,kBAAoBi0O,EACzBjhP,KAAK2gP,oBAAoBj6O,QAAQ1G,KAAK+M,iBACtC/M,KAAK4gP,sBAAsBl6O,QAAQ1G,KAAKgN,mBACxChN,KAAK2gP,oBAAsB,GAC3B3gP,KAAK4gP,sBAAwB,EAAE,EAEnC5gP,KAAKkhP,kBAAqBtrO,IACtB,MAAMurO,EAASnhP,KAAK8gP,UAAU/5O,IAAI6O,GAClC,QAAe7Q,IAAXo8O,EACA,OAAOA,EAEX,MAAMC,EAjDlB,SAAsBxrO,GAClB,MAAkB,MAAdA,EACO,KAAM,EAETisF,GACGA,EAAIn8F,OAASkQ,CAE5B,CA0C8ByrO,CAAazrO,GAE/B,OADA5V,KAAK8gP,UAAUxpO,IAAI1B,EAAWwrO,GACvBA,CAAS,EAEpBphP,KAAKshP,gBAAkB,CAAC1rO,EAAWi2B,KAC/B,MAAM2uJ,EAAa,CACf3wG,KAAM7pF,KAAKkhP,kBAAkBtrO,GAC7B4zE,QAAS39C,GAEb,OAAO7rC,KAAKuhP,sBAAsB/mD,EAAW,EAEjDx6L,KAAKwhP,mBAAqB,CAAC5rO,EAAWi2B,KAClC,MAAM29C,EAAU,CACZK,KAAM7pF,KAAKkhP,kBAAkBtrO,GAC7B4zE,QAAS39C,GAEb,OAAO7rC,KAAKyhP,yBAAyBj4J,EAAQ,EAEjDxpF,KAAK0hP,WAAcl4J,IAGf,GAAKxpF,KAAK0gP,oBAKV,QAA6B37O,IAAzB/E,KAAK+M,gBAA+B,CAGpC/M,KAAK2gP,oBAAoBp8O,KAAKilF,GAC9B,MAAMm4J,EAAa,KAAU3hP,KAAK4gP,sBAAuBN,GAA4B92J,IACjFm4J,GAAc,GACd3hP,KAAK4gP,sBAAsB7lO,OAAO4mO,EAAY,EAEtD,MAGI3hP,KAAK+M,gBAAgBy8E,EACzB,EAEJxpF,KAAKuhP,sBAAyB/3J,GACtB,KAAUxpF,KAAKygP,SAAUH,GAA4B92J,KAAa,GAClEtiF,QAAQC,KAAK,sDAAsDqiF,gBAC5DxpF,OAGXA,KAAKygP,SAASl8O,KAAKilF,GAEnBxpF,KAAK0hP,WAAWl4J,GACTxpF,MAEXA,KAAK4hP,aAAgBp4J,IAGjB,GAAKxpF,KAAK0gP,oBAKV,QAA+B37O,IAA3B/E,KAAKgN,kBAAiC,CAItC,MAAM20O,EAAa,KAAU3hP,KAAK2gP,oBAAqBL,GAA4B92J,IAC/Em4J,GAAc,EAGd3hP,KAAK2gP,oBAAoB5lO,OAAO4mO,EAAY,GAK5C3hP,KAAK4gP,sBAAsBr8O,KAAKilF,EAExC,MAEIxpF,KAAKgN,kBAAkBw8E,EAC3B,EAEJxpF,KAAKyhP,yBAA4Bj4J,IAC7B,MAAMpkC,EAAM,KAAUplD,KAAKygP,SAAUH,GAA4B92J,IACjE,IAAa,IAATpkC,EAEA,OADAl+C,QAAQC,KAAK,0CAA0CqiF,gBAChDxpF,KAIX,MAAM6hP,EAAqB7hP,KAAKygP,SAASr7L,GAMzC,OAHAplD,KAAKygP,SAAS1lO,OAAOqqC,EAAK,GAE1BplD,KAAK4hP,aAAaC,GACX7hP,IAAI,EAEfA,KAAK8hP,wBAA2Bj2M,GACxB,KAAU7rC,KAAK6gP,mBAAoBjD,GAAOA,IAAO/xM,KAAa,GAC9D3kC,QAAQC,KAAK,oEAAoE0kC,gBAC1E7rC,OAEXA,KAAK6gP,kBAAkBt8O,KAAKsnC,GACrB7rC,MAEXA,KAAK+hP,4BAA+Bl2M,IAChC,MAAMuZ,EAAM,KAAUplD,KAAK6gP,mBAAoBjD,GAAOA,IAAO/xM,IAC7D,OAAa,IAATuZ,GAGJplD,KAAK6gP,kBAAkB9lO,OAAOqqC,EAAK,GAFxBplD,IAGA,CAEnB,CACAgiP,uBAKI,OADAhiP,KAAK0gP,qBAAsB,EACpB,CACHviL,cAAe,IAAIn+D,KAAKygP,UACxBv3J,cAAelpF,KAAK+gP,yBACpB/2J,sBAAuBhqF,KAAKgqF,sBAEpC,ECtLG,MAAMi4J,GAAc,cCapB,SAASC,KACZ,MAAO,CACH7G,QAAS4G,GACTE,kBAAkBzzO,EAAKsxC,GACnB,IAAI76C,EACJ,MAAMi9O,EAAuB,IAAIjD,GAC3BkD,EAAoB,IAAI7B,GAE9Bt5O,QAAQquB,IAAI,mBAAmBv1B,KAAKq7O,sCAAsCr7L,EACrEjhD,IAAIm8O,IACJh3O,KAAK,SACVk+O,EAAqBvC,kBAAwC,QAArB16O,EAAKuJ,EAAIvO,cAA2B,IAAPgF,OAAgB,EAASA,EAAGszB,gBACjG,IAAK,MAAM0iN,KAAUn7L,EAAS,CAC1BoiM,EAAqBrC,uBAAuB5E,GAC5C,IACIA,EAAO6F,SAAStyO,EAAK0zO,EAAsBC,GAC3CD,EAAqBpC,uBACzB,CACA,MAAO1gP,GACH8iP,EAAqBnC,sBAAsB3gP,EAC/C,CACJ,CACA,MAAMgjP,EAAiBF,EAAqBh0M,QACtCm0M,EAAgBF,EAAkBL,uBACxC,OAAOtiP,OAAOiI,OAAOjI,OAAOiI,OAAO,CAAC,EAAG26O,GAAiBC,EAC5D,EACAC,sBAAqB,IACV/K,GAGnB,CClCO,SAAS,GAAiBz1N,EAASssB,EAAgB,MACtD,MAAM/qC,GAAM,QAAWye,GACjBzY,GAAQ,QAAayY,GAE3B,OAAOssB,EADS,IAAI,GAAqB/qC,EAAKgG,IAChB6kC,OAClC,CAUO,MAAM,GACTvuC,YAAYgiB,EAAYtY,GACpBvJ,KAAKkF,OAAS,CACV8c,SAAS,QAAO,IAChBtc,KAAM,UACNua,uBAAwB,GACxBZ,OAAQ,GACR9V,MAAO,GACP+X,YAAa,IAEjBthB,KAAKkF,OAAO8c,QAAUH,EACtB7hB,KAAKkF,OAAOqE,MAAQA,CACxB,CACAk5O,2BAA2BxiO,GAEvB,OADAjgB,KAAKkF,OAAO+a,uBAAyBA,EAC9BjgB,IACX,CACA0iP,WAAWrjO,GAEP,OADArf,KAAKkF,OAAOma,OAASA,EACdrf,IACX,CACA2iP,UAAUp5O,GAEN,OADAvJ,KAAKkF,OAAOqE,MAAQA,EACbvJ,IACX,CACA4iP,gBAAgBthO,GAEZ,OADAthB,KAAKkF,OAAOoc,YAAcA,EACnBthB,IACX,CACA6iP,kBAAkBprK,GAEd,OADAz3E,KAAKkF,OAAOuyE,cAAgBA,EACrBz3E,IACX,CACA8iP,eAAephO,GAEX,OADA1hB,KAAKkF,OAAOwc,WAAaA,EAClB1hB,IACX,CACAouC,QACI,OAAO1uC,OAAOiI,OAAO,CAAC,EAAG3H,KAAKkF,OAClC,E","sources":["webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/de-DE.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/en-US.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/es-ES.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/fr-FR.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/ja-JP.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/nl-NL.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/pt-BR.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/pt-PT.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/ru-RU.json","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/bundles/zh-Hans.json","webpack://@gooddata/sdk-ui-web-components/../../common/temp/node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync (zh-CN%7Cfr%7Cde%7Ces%7Cru%7Cnl%7Cpt-br%7Cpt%7Cja)\\.js/","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/decoratedBackend/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/drillUrl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/kpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/scheduledMail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/metadata/objRefMap.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/common/filterValuesResolver.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/types/layoutTypes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/types/drillTypes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/types/alertTypes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/DashboardEventsContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/ClientWorkspaceContext/ClientWorkspaceContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/usePrevious.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dashboard/dashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/base.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/util.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/dashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/general.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/filters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/layout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/kpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/insight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/widget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/alerts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/scheduledEmail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/drill.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/drillTargets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/userInteraction.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/render.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/renderMode.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/lab.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/events/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/render/renderingWorker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/dashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/filterContext/filterContextReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/filterContext/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/filterContext/filterContextState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/undoEnhancer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/layout/layoutState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/arrayOps.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/objectUtils/setOrDelete.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/layout/layoutUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/layout/layoutReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/layout/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/loading/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/loading/loadingState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/loading/loadingReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/saving/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/saving/savingState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/saving/savingReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/insights/insightsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/insights/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/eventDispatcher.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/constants/i18n.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/constants/Platform.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/constants/config.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/dateFilterConfig/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/DateConversions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/locales.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/validation/OptionValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/PeriodExclusion.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/interfaces/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/OptionUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/Translations/DateFilterTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/AFMConversions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/defaultConfig.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/base/dateGranularities.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/validation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/settings/conversion.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dateFilterConfig/dateFilterConfigReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dateFilterConfig/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dateFilterConfig/dateFilterConfigState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/types/commonTypes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/disabledUnfinishedFeatureSettings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/sanitizeUnfinishedFeatureSettings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/onDateFilterConfigValidationError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/resolveDashboardConfig.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/config/configReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/config/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/config/configState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/entitlements/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/entitlements/entitlementsState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/entitlements/entitlementsReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/sanitization.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/merge.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/mergeDateFilterConfigs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/resolvePermissions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/permissions/permissionsReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/permissions/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/permissions/permissionsState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadCatalog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadDashboardAlerts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/catalog/catalogReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/catalog/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/catalog/catalogState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/alerts/alertsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/alerts/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadUser.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/user/userReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/user/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/user/userState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/drills/drillingUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/ui/uiReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/ui/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/ui/uiState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/renderMode/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/renderMode/renderModeState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/renderMode/renderModeReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadDashboardList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/listedDashboards/listedDashboardsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/listedDashboards/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/backendCapabilities/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/backendCapabilities/backendCapabilitiesState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/backendCapabilities/backendCapabilitiesReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/dateFilterConfigConverters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/dateFilterOptionMapping.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/defaultFilterContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateFilterConfig/dateFilterOptionConverters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/meta/metaState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/meta/metaReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/meta/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/dashboardFilterContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/config.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/facade/item.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/facade/items.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/facade/section.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/facade/sections.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/facade/layout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/ldmFactories/dashboard/widgetFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/ldmFactories/dashboard/insightWidgetFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/ldmFactories/dashboard/kpiWidgetFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/builder/item.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/builder/section.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/fluidLayout/builder/layout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/layout/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/layout/sizing.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/constants/layout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/utils/sizing.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/dashboardLayout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/backendCapabilities/backendCapabilitiesSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/catalog/displayFormMap.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/catalog/catalogSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/catalog/dateAttributeWithDatasetMap.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/displayFormResolver.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/filterResolver.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/contexts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/common/loadAvailableDisplayFormRefs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/common/stateInitializers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/executionResults/executionResultsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/executionResults/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/accessibleDashboards/accessibleDashboardsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/accessibleDashboards/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadAccessibleDashboardList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadLegacyDashboards.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/legacyDashboards/legacyDashboardsReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/legacyDashboards/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/legacyDashboards/legacyDashboardsState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadDashboardPermissions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dashboardPermissions/dashboardPermissionsReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dashboardPermissions/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dashboardPermissions/dashboardPermissionsState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/resolveEntitlements.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/renderMode.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/selectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/filterContext/filterContextSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/converters/filterConverters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/widgets/placeholders/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/layout/layoutSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/renderMode/renderModeSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dateFilterConfig/dateFilterConfigSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/meta/metaSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/dashboardItemUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/config/configSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/insights/insightsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/insightResolver.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/resetDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/common/insightReferences.js","webpack://@gooddata/sdk-ui-web-components/../util/esm/typesUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/common/isDisplayFormRelevantToDrill.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/insightDrillDefinitionUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drillTargets/drillTargetsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/objRef.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drillTargets/drillTargetsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/accessibleDashboards/accessibleDashboardsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/inaccessibleDashboards/inaccessibleDashboardsEntityAdapter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/inaccessibleDashboards/inaccessibleDashboardsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/insightDrillDefinitionValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/common/validateDrills.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/common/validateDrillToCustomUrlParams.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/inaccessibleDashboards/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/initializeDashboardHandler/loadInaccessibleDashboards.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/renderMode/changeRenderModeHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/listedDashboard/listedDashboardUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/saveDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/user/userSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/saveAsDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/deleteDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/exportUtils/filterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/exportDashboardToPdfHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/changeSharingHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/common.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/attributeResolver.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/changeFilterContextSelectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/validation/uniqueFiltersValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/validation/parentFiltersValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/validation/layoutValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/validation/stashValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/insights.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/kpis.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/queryProcessing.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/queryCall.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/filterValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/validation/itemValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/removeSectionItemHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/undoLayoutChangesHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/widgetValidations.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeKpiWidgetMeasureHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/common/filterOperations.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeKpiWidgetFilterSettingsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeInsightWidgetFilterSettingsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/insight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/errors/errorPredicates.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/permissions/permissionsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/executionResults/executionResultsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/exportInsightWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/alerts/createAlertHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/alerts/updateAlertHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/alerts/alertsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/alerts/removeAlertsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/scheduledEmail/createScheduledEmailHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/scheduledEmail/saveScheduledEmailHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillToDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/getElementTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/resolveDrillToAttributeUrl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/widgets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/getDrillToUrlFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/resolveDrillToCustomUrl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drill/drillReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drill/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drill/drillState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drillTargets/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/validation/filterDisplayFormValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/attributes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/legacyDashboards/legacyDashboardsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/kpiDrillValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/kpiDrillValidationUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/common/loadInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/dashboard/renameDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/events/triggerEventHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/executionResults/upsertExecutionResultHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/dateFilter/changeDateFilterSelectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/addAttributeFilterHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/removeAttributeFiltersHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/moveAttributeFilterHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/changeAttributeFilterSelectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/setAttributeFilterParentHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/changeAttributeDisplayFormHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/changeAttributeTitleHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/filterContext/attributeFilter/changeAttributeSelectionModeHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/addLayoutSectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/moveLayoutSectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/removeLayoutSectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/changeLayoutSectionHeaderHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/resizeHeightHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/resizeWidthHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/addSectionItemsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/moveSectionItemHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/moveSectionItemToNewSectionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/removeSectionItemByWidgetRefHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/layout/replaceSectionItemHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeKpiWidgetHeaderHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/types/widgetTypes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeKpiWidgetComparisonHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/removeDrillForKpiWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/setDrillForKpiWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeKpiWidgetDescriptionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeKpiWidgetConfigurationHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeInsightWidgetHeaderHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeInsightWidgetDescriptionHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeInsightWidgetVisPropertiesHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeInsightWidgetVisConfigurationHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/changeInsightWidgetInsightHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/modifyDrillsForInsightWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/removeDrillsForInsightWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/validation/removeDrillsSelectorValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/widgets/refreshInsightWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/alerts/validation/alertsValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillDownHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillToInsightHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillToAttributeUrlHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillToCustomUrlHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/drillToLegacyDashboardHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drill/changeDrillableItemsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drillTargets/addDrillTargetsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/drillTargets/validation/availableDrillTargetsValidation.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/render/requestAsyncRenderHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commandHandlers/render/resolveAsyncRenderHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/rootCommandHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/queryService.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/catalog/dateDatasetOrdering.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/loadAvailableDateDatasets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryInsightDateDatasets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryInsightAttributesMeta.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryWidgetFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/insight/factory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryMeasureDateDatasets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryWidgetBrokenAlerts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/utils/alertsUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryWidgetAlertCount.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryConnectingAttributes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryAttributeByDisplayForm.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryAttributeDataset.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/queryAttributeElements.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queryServices/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dashboardStore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/rootEventEmitter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useInitializeDashboardStore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/DashboardStoreProvider.js","webpack://@gooddata/sdk-ui-web-components/../util/esm/objectUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardCommand.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardCommandProcessing.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/events.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardEventDispatch.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/queryAndWaitFor.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardQueryProcessing.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardUserInteraction.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/render.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDispatchDashboardCommand.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardAsyncRender.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/executionResults.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useWidgetExecutionsHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Messages/ToastMessageContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Messages/useToastMessage.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/ui/uiSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/locales.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useDashboardScheduledEmails.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/react/useWidgetSelection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/filters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/layout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/alerts.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/scheduledEmail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/drill.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/kpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/commands/drillTargets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/connectingAttributes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/attributeDataSet.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/queries/attributeElements.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/loading/loadingSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/saving/savingSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/entitlements/entitlementsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/dashboardPermissions/dashboardPermissionsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/drill/drillSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/widgetDrills/widgetDrillSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/listedDashboards/listedDashboardsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/_infra/dispatchAndWaitFor.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/storeAccessors/DashboardStoreAccessor.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/storeAccessors/DashboardStoreAccessorRepository.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/store/storeAccessors/SingleDashboardStoreAccessor.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/eventHandlers/eventHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/eventHandlers/drillToSameDashboardHandlerFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/model/headlessDashboard/HeadlessDashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/componentDefinition/renderModeAware.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Overlay/OverlayController.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardContexts/ExportDialogContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardContexts/DashboardCustomizationsContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardContexts/DashboardComponentsContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardContexts/DashboardConfigContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/debug.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/useDashboardDrop.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableAttributeFilter/AttributeFilterDropZoneHint.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/utils/drag.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/useBeforeDrag.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/useDashboardDrag.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/legacyFilterConvertors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableAttributeFilter/DraggableAttributeFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableAttributeFilter/AttributeFilterDropZone.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/dateFilter/HiddenDashboardDateFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/translations.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/localization/IntlWrapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/LayoutResizeContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/BulletsBar/Bullet.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/BulletsBar/BulletsBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/ShowAllFiltersButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/hooks/useRowsCalculator.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/DefaultFilterBarContainer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/hooks/useFilterBarState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/hooks/useFilterExpansionByDragAndDrop.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/HiddenFilterBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/DefaultFilterBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/useFiltersWithAddedPlaceholder.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/layout/coordinates.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useWidgetDragEndHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/ResizeOverlay.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useInsightListItemDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useInsightPlaceholderDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useKpiPlaceholderDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useMoveWidgetHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useWidgetDragHoverHandlers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/Hotspot.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/WidthResizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DragLayerPreview/sizeLimiting.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DragLayerPreview/WidthResizerDragPreview.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/WidthResizerHotspot.js","webpack://@gooddata/sdk-ui-web-components/../sdk-backend-base/esm/eventingBackend/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/metadata/safeSerializeObjRef.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DashboardKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/DefaultDashboardKpiWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemContent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemContentWrapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemVisualization.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemHeadlineContainer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemHeadline.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/DashboardInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/fileUtils/downloadFile.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useExportHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useInsightExport.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/LegacyDefaultDashboardInsightMenu/getDefaultLegacyInsightMenuItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/getDefaultInsightMenuItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/useInsightMenu.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/DashboardWidgetInsightGuard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/DescriptionPanel/EllipsisText.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/DescriptionPanel/DescriptionPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/description/DescriptionClickTrigger.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/description/InsightWidgetDescriptionTrigger.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/DefaultDashboardInsightWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/ScrollablePanel/ScrollContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/utils/scroll.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/ScrollablePanel/ScrollablePanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/constants/zIndex.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/DateFilterCheckbox.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/ShortenedText/ShortenedText.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/DateDatasets/dateDatasets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/ScrollablePanel/ScrollableItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/DateDatasetDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/DateDatasetPicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dateDatasets/getRecommendedCatalogDateDataset.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/DateDatasetFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/useIsSelectedDatasetHidden.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/useDateFilterConfigurationHandling.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/useDateDatasetFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDateDataSetFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/AttributeFilterConfigurationItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/useIsFilterNotApplied.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/useAttributeFilterConfigurationHandling.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/sharedHooks/useAttributes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/AttributeFilterConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightTitleConfig.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/TextAreaWithSubmit/TextAreaWithSubmit.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDescriptionConfig/InsightDescription.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDescriptionConfig/InsightDescriptionConfig.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDrillConfigPanel/drillConfigMapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDrillConfigPanel/useInsightDrillConfigPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDrillConfigPanel/useDrillConfigIncompleteItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/ButtonWithIcon.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargetType.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/PromiseCache.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/usePromiseCache.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InsightListItemDate.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InsightListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/insightList/InsightListNoData.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/insightList/InsightList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/usePagedResource.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/InsightDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/DrillTargetInsightItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/DropdownSectionHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/CustomUrlSection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/ParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/ProjectIdParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/DashboardIdParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/WidgetIdParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/InsightIdParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/ClientIdParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/DataProductIdParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/CustomUrlEditorParametersSections/Parameter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/CustomUrlEditorParametersSections/IdentifierParametersSection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/ParameterDetails/AttributeDisplayFormParameterDetail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/CustomUrlEditorParametersSections/InsightParametersSection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/CustomUrlEditorParameters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/CustomUrlEditor.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/AttributeUrlSectionItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillConfigPanel/DrillToUrl/AttributeUrlSection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/useAttributesWithDisplayForms.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/DrillTargetUrlItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/useInvalidAttributeDisplayFormIdentifier.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardList/DashboardListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardList/DashboardListButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/utils/dashboardPredicate.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboardList/DashboardList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/DrillTargetDashboardItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillTargets/DrillTargets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDrillConfigItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDrillConfigList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/useDrillTargetTypeItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginSelector/DrillMeasureSelectorItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginSelector/DrillMeasureSelectorList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginSelector/DrillAttributeSelectorItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginSelector/DrillAttributeSelectorList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginSelector/DrillOriginSelectorBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/DrillOriginSelector/DrillOriginSelector.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/ZoomInsightConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightDrillConfigPanel/InsightDrillConfigPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/configuration/InsightInteractions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/getDefaultInsightEditMenuItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/EditableLabel/EditableLabel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/EditableHeadline.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/EditableDashboardInsightWidgetHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/EditableDashboardInsightWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/useEditableInsightMenu.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/InsightWidget/RenderModeAwareDashboardInsightWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/DefaultDashboardWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useNewSectionInsightListItemDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useNewSectionKpiPlaceholderDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useNewSectionInsightPlaceholderDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/EmptyDashboardDropZone.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/LoadingDots/LoadingDots.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/LoadingDashboardWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/widget/DashboardWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DashboardItemOverlay/DashboardItemOverlay.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/refs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DashboardLayoutWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/WidgetDropZoneBox.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/WidgetDropZone.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/WidgetDropZoneColumn.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/RowEndHotspot.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutItemViewRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutItemRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useIsDraggingCurrentItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutWidgetRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutGridRow.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutSectionHeaderDescription.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutSectionHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/utils/emptyFacade.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutSectionHeaderRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutSectionRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DashboardItemOverlay/DashboardItemOverlayController.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useIsDraggingWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/HeightResizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/HeightResizerHotspot.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutGridRowEdit.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutSection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/DashboardLayoutSectionBorder/DashboardLayoutSectionBorderMarker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/DashboardLayoutSectionBorder/DashboardLayoutSectionBorderLine.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/DashboardLayoutSectionBorder/DashboardLayoutSectionBorder.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/EditableDashboardLayoutSectionRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/RenderModeAwareDashboardLayoutSectionRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/EditableHeader/EditableLabelWithBubble.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/EditableHeader/sectionHeaderHelper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/EditableHeader/SectionHeaderEditable.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/SectionDropZoneBox.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/SectionHotspot.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/useMoveWidgetToNewSectionDropHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/RenderModeAwareDashboardLayoutSectionHeaderRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutRenderer/DashboardLayoutEditSectionHeaderRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/EmptyDashboardLayout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/EmptyDashboardError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DefaultDashboardLayoutUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ConfirmDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/saveAs/DefaultSaveAsDialog/SaveAsDialogRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/constants/dashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/saveAs/DefaultSaveAsDialog/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/saveAs/DefaultSaveAsDialog/useSaveAs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Timepicker/utils/timeUtilities.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/interfaces.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/datetime.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/repeat.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/scheduledMailRecipients.js","webpack://@gooddata/sdk-ui-web-components/../sdk-model/esm/user/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/timezone.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/validate.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/responsive.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Textarea.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RepeatSelect/RepeatExecuteOnSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RepeatSelect/RepeatFrequencySelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RepeatSelect/RepeatPeriodSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RepeatSelect/RepeatTypeSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RepeatSelect/RepeatSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Input.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Datepicker/Datepicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/constants/platform.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Timepicker/Timepicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/DateTime.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Icon/InsightIcon.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Attachments/ScheduleDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Attachments/AttachmentsSelectionDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Attachments/FormatOptionsDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Attachments/Attachments.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RecipientsSelect/RecipientsSelectRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/RecipientsSelect/RecipientsSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/useWorkspaceUsers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/Attachments/AttachmentNoWidgets.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/ScheduledMailDialogRenderer/ScheduledMailDialogRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/scheduledMailSummary.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/utils/stripLocalIdentifierFromFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/useScheduledEmail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/useCreateScheduledEmail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailDialog/useSaveScheduledEmail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/Dialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailManagementDialog/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailManagementDialog/ScheduledEmail.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/constants/colors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailManagementDialog/ScheduledEmails.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailManagementDialog/DeleteScheduleConfirmDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailManagementDialog/ScheduledEmailManagementDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/DefaultScheduledEmailManagementDialog/useScheduledEmailManagement.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/ContentDivider.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/AddGranteeButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/ComponentLabelsContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranteeIcons.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Bubble/withBubble.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/GranularPermissionItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/ComponentInteractionContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/GranularPermissionsDropdownBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/GranularPermissionsDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/usePermissionsDropdownState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/permissionsLogic.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/GranularGranteeUserItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranularPermissions/GranularGranteeGroupItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranteeItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranteeListEmpty.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranteeList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/GranteeListLoading.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/ShareGranteeContent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/SharedObjectCheckboxControl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/SharedObjectUnderLenientControl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/SharedObjectLockControl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/useAdminInformationMessage.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/AdminInformationMessage.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/ShareGranteeBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/AsyncSelectComponents.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/shareDialogMappers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/AddGranteeSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/backend/loadGranteeOptionsPromise.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/AddGranteeContent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/AddGranteeBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/useShareDialogBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/backend/useGetAccessList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialogBase/ShareDialogBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ShareDialog/ShareDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/shareDialog/DefaultShareDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/cancelButton/DefaultCancelButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/cancelButton/CancelButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/saveButton/SaveButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/selectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/editButton/DefaultEditButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/editButton/EditButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/saveAsButton/DefaultSaveAsNewButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/saveAsButton/SaveAsNewButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/shareButton/HiddenShareButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/shareButton/DefaultShareButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/shareButton/ShareButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/DefaultButtonBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/menuButton/DefaultMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/ButtonBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/menuButton/useDefaultMenuItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/menuButton/MenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/title/Title.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/topBar/HiddenTopBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/shareIndicators/lockedStatus/LockedStatusIndicator.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/shareIndicators/lockedStatus/DefaultLockedStatus.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/shareIndicators/shareStatus/ShareStatusIndicator.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/shareIndicators/shareStatus/DefaultShareStatus.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/button/saveButton/DefaultSaveButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/topBar/DefaultTopBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/title/TitleWrapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/title/DefaultTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/title/EditableTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/title/RenderModeAwareTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/toolbar/HiddenToolbar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/defaultDashboardThemeModifier.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Addons/AttributeDatasetInfo.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/DropdownButton/AttributeFilterButtonTooltip.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/DropdownButton/AttributeFilterDropdownButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/AsyncList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelectSearchBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelectAllCheckbox.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelectLimitWarning.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelectStatusBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelectNoResultsMatch.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelectItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/InvertableSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/List/InvertableSelect/useInvertableSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Context/AttributeFilterComponentsContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/placeholders/base.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/placeholders/context.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/placeholders/resolve.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useResolveFilterInput.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useResolveParentFiltersInput.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/base/react/placeholders/hooks.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadAttribute/loadAttributeReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/common/selectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadCustomElements/loadCustomElementsReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadInitialElementsPage/loadInitialElementsPageReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadNextElementsPage/loadNextElementsPageReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/selection/selectionSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/selection/selectionReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/elementsReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/store/rootReducers.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/store/state.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/store/slice.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/common/sagas.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/filter/filterSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadAttribute/loadAttributeByDisplayForm.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadAttribute/loadAttributeSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadAttribute/loadAttributeSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/elementsSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/InMemoryPaging.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/loadElementsFromStaticElements.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/loadElementsFromBackend.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/loadElements.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/elementsSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadInitialElementsPage/loadLimitingAttributeFiltersAttributes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadInitialElementsPage/loadInitialElementsPageSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadNextElementsPage/loadNextElementsPageSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadNextElementsPage/loadNextElementsPageSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadCustomElements/loadCustomElementsSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initAttributeSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initSelectionSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initElementsPageSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initTotalCount.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/elements/initTotalCountSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/store/rootSaga.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/store/createStore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/init/initSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/redux/loadInitialElementsPage/loadInitialElementsPageSelectors.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/callbacks.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/bridge.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/loader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/multiSelectHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/internal/singleSelectHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useAttributeFilterHandler.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useAttributeFilterController.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilterHandler/factory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useAttributeFilterControllerData.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useAttributeFilterHandlerState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Context/AttributeFilterContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/AttributeFilterElementsSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/AttributeFilterElementsSelectItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/EmptyResult/AttributeFilterEmptySearchResult.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/EmptyResult/AttributeFilterEmptyAttributeResult.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/EmptyResult/AttributeFilterEmptyFilteredResult.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/StatusBar/AttributeFilterFilteredStatus.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/StatusBar/AttributeFilterSelectionStatus.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/CustomizableCheckmark/CustomizableCheckmark.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/SingleSelectionAttributeFilterElementsSelectItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/SingleSelectionAttributeFilterElementsActions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/StatusBar/SingleSelectionAttributeFilterStatusBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Dropdown/SingleSelectionAttributeFilterDropdownActions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/AttributeFilterDefaultComponents.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/AttributeFilterError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/AttributeFilterLoading.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Dropdown/AttributeFilterDropdownBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Dropdown/AttributeFilterDropdownActions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/AttributeFilterElementsSearchBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/AttributeFilterElementsSelectError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/AttributeFilterElementsSelectLoading.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/AttributeFilterElementsActions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/EmptyResult/AttributeFilterEmptyResult.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/ElementsSelect/StatusBar/AttributeFilterStatusBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/AttributeFilterProviders.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/DropdownButton/AttributeFilterButtonErrorTooltip.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Dropdown/AttributeFilterDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/hooks/useResolveAttributeFilterSubtitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/AttributeFilterBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/AttributeFilterButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/_staging/dashboard/dashboardFilterConverter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/useParentFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/ConfigurationCategory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/ConfigurationPanelHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/parentFilters/ParentFiltersDisabledItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/connectingAttribute/ConnectingAttributeItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/connectingAttribute/ConnectingAttributeDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/parentFilters/ParentFiltersListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/parentFilters/ParentFiltersList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/displayForms/AttributeDisplayFormDropdownButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/displayForms/AttributeDisplayFormDropDownItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/displayForms/AttributeDisplayFormsDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useSelectionModeConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/AttributeFilterParentFilteringContext.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useParentsConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useOriginalConfigurationState.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useDisplayFormConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useTitleConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/title/AttributeTitleRenaming.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/selectionMode/SelectionModeItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/selectionMode/SelectionModeButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/selectionMode/SelectionMode.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/AttributeFilterConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useConnectingAttributes.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Addons/AttributeFilterDeleteButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Addons/AttributeFilterConfigurationButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/CustomDropdownActions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useAttributeDataSet.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/DefaultDashboardAttributeFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Addons/hooks/useAutoOpenAttributeFilterDropdownButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/AttributeFilter/Components/Addons/hooks/useOnCloseAttributeFilterDropdownButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/FormattingUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/constants/MediaQueries.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterButton/DateFilterButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterTextLocalized/DateFilterTextLocalized.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterButtonLocalized/DateFilterButtonLocalized.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/ListItem/ListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/ExcludeCurrentPeriodToggle/ExcludeCurrentPeriodToggleLabel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/ExcludeCurrentPeriodToggle/ExcludeCurrentPeriodToggle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/VisibleScrollbar/VisibleScrollbar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/AllTimeFilterItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterFormWrapper/DateFilterFormWrapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateRangePicker/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateRangePicker/DateRangePickerError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateRangePicker/DateRangePickerInputFieldBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateRangePicker/DateTimePicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateRangePicker/DateRangePicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/AbsoluteDateFilterForm/conversions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/AbsoluteDateFilterForm/AbsoluteDateFilterForm.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/ListItemTooltip/ListItemTooltip.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Tabs/Tabs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/RelativeDateFilterForm/GranularityTabs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Select/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Select/SelectOption.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Select/SelectHeading.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Separator/Separator.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Select/SelectSeparator.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/Select/VirtualizedSelectMenu.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DynamicSelect/utils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DynamicSelect/DynamicSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/RelativeRangePicker/RelativeRangePicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/RelativeDateFilterForm/RelativeDateFilterForm.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/ListHeading/ListHeading.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/RelativePresetTitleTranslated/RelativePresetTitleTranslated.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/RelativePresetFilterItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/EditModeMessage.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/DateFilterHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/DateFilterBodyButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/AbsolutePresetFilterItems.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterBody/DateFilterBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilterCore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/DateFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-filters/esm/DateFilter/utils/FilterOptionNormalization.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/dateFilter/DefaultDashboardDateFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableAttributeFilter/DefaultAttributeFilterDraggingComponent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/AddAttributeFilterButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/attributeListItemTooltip/AttributeListItemTooltipContent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/attributeListItemTooltip/AttributeListItemTooltip.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/dashboardDropdownBody/configuration/hooks/useAttributeElements.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/AttributeListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/addAttributeFilterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/AttributesDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DraggableCreatePanelItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableAttributeFilter/DraggableAttributeFilterCreatePanelItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/addAttributeFilter/AddAttributeFilterPlaceholder.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/CreatableAttributeFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/DefaultDashboardAttributeFilterComponentSetFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/utils/drillDownUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillSelect/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillSelect/DrillSelectListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillSelect/DrillSelectList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillSelect/DrillSelectListBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillSelect/DrillSelectDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrill.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrillDown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrillToInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrillToDashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrillToAttributeUrl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrillToCustomUrl.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrillToLegacyDashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/DrillSelect/WithDrillSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/drill/hooks/useDrills.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/useResolveDashboardInsightProperties.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useWidgetFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/Insight/useDashboardInsightDrills.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/CompactContentError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/ErrorContainer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/ExecuteProtectedError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/DataTooLargeError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/NoDataError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/OtherError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/CustomError.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/CustomError/sizingUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/InsightBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/Insight/DashboardInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/Insight/useHandlePropertiesPushData.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/Insight/DashboardInsightWithDrillSelect.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/PoweredByGDLogo.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/DrillModalExportOptions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/DrillModalFooter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/getTitleWithBreadcrumbs.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/DrillDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/DrillDialogInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/useDrillDialogInsightDrills.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/ThemedLoadingEqualizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/InsightDrillDialog/InsightDrillDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/DashboardInsightWithDrillDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/DefaultDashboardInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/ViewModeDashboardInsight/ViewModeDashboardInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/EditModeDashboardInsight/EditModeDashboardInsight.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/DefaultInsightBody/DefaultInsightBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DefaultDashboardInsightMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/LegacyDefaultDashboardInsightMenu/LegacyInsightMenu/LegacyInsightMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/LegacyDefaultDashboardInsightMenu/LegacyDashboardInsightMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DashboardInsightMenuTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/DashboardInsightMenuContainer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/DashboardInsightMenuItemButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/DashboardInsightSubmenuHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/DashboardInsightSubmenuContainer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/DashboardInsightMenuBubble.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/configuration/ConfigurationBubble.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/DashboardInsightEditMenuBubble.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DashboardInsightMenu/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DefaultDashboardInsightMenu.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/LegacyDefaultDashboardInsightMenu/LegacyInsightMenu/LegacyInsightMenuItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/LegacyDefaultDashboardInsightMenu/LegacyInsightMenu/index.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/LegacyDefaultDashboardInsightMenu/LegacyDashboardInsightMenu.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DefaultDashboardInsightMenu/DefaultDashboardInsightMenuTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/utils/translationUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Spinner/Spinner.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/KpiAlertDialogDateRange.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/alignPoints.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/FilterLabel/FilterLabel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/KpiAlertDialogBrokenFilters/KpiAlertDialogBrokenFilters.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/KpiAlertDialogBrokenFilters/utils/filterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/utils/alertThresholdUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/KpiAlertDialogWhenTriggeredPicker.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/KpiAlertDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiAlertDialog/utils/filterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlertDialogWrapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/useBrokenAlertFiltersMeta.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/utils/brokenFilterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/useKpiAlertOperations.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/presentationComponents/DashboardItems/DashboardItemKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/KpiDescriptionTrigger.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/DashboardItemWithKpiAlert.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiAlerts/utils/filterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/execution/useExecutionDataView.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui/esm/execution/createExecution.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/useKpiExecutionDataView.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/resultUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/filterUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiContent/utils/format.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiContent/KpiValue.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiContent/utils/pop.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiContent/KpiPop.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiContent/KpiContent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiContent/utils/translations.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/KpiRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/KpiExecutor.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useWidgetBrokenAlertsQuery.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/useKpiData.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/DashboardKpiCore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/common/useKpiDrill.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/DefaultDashboardKpiWithDrills.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/EditModeDashboardKpi/EditModeKpiHeadline.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultDashboardKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/ViewModeDashboardKpi/ViewModeDashboardKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/EditModeDashboardKpi/EditModeDashboardKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/EditModeDashboardKpi/useOptimisticMeasureUpdate.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/DraggableInsightListItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/DraggableInsightList/DraggableInsightListItemWrapper.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/InsightDraggingComponent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insight/DefaultDashboardInsightComponentSetFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/KpiDraggingComponent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/constants.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiComparison/KpiComparisonTypeDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiComparison/KpiComparisonDirectionDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiComparison/KpiComparison.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiWidgetDateDatasetFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiMetricDropdown/MetricDropdownItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiMetricDropdown/MetricDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiMetricDropdown/KpiMetricDropdown.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiConfigurationPanelHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiConfigurationMessages.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiDrill/KpiDrillConfiguration.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiDescriptionConfig.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/KpiConfigurationPanelCore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpiPlaceholder/KpiPlaceholderConfigurationPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpiPlaceholder/DefaultDashboardKpiPlaceholderWidget.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/DraggableKpiCreatePanelItem.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/AddKpiWidgetButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/CreatableKpi.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultKpiConfigurationPanel/DefaultKpiConfigurationPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/kpi/DefaultDashboardKpiComponentSetFactory.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ExportDialogBase.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Dialog/ExportDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dialogs/ExportDialogProvider.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/topBar/TopBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/saveAs/SaveAsDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/filterBar/FilterBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/shareDialog/ShareDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardHeader/ShareDialogDashboardHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/ScheduledEmailManagementDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/scheduledEmail/ScheduledEmailDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardHeader/ScheduledEmailDialogProvider.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/deleteDialog/DefaultDeleteDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/deleteDialog/DeleteDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/kpiDeleteDialog/DefaultKpiDeleteDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/kpiDeleteDialog/KpiDeleteDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/cancelEditDialog/DefaultCancelEditDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/cancelEditDialog/CancelEditDialog.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/Messages/Messages.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/useDrillValidationMessages.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/ToastMessages.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardHeader/DashboardHeader.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/layout/DashboardLayout.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/DateFilterConfigWarnings.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/DashboardMainContent.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/DashboardSidebar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-kit/esm/FlexDimensions/FlexDimensions.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/DraggableInsightList/DraggableInsightListCore.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/DraggableInsightList/DraggableInsightList.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/CreationPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/SidebarConfigurationPanel.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/DashboardSidebar/RenderModeAwareDashboardSidebar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/useDashboardDragScroll.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/useInterval.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DragLayerPreview/ContentDragPreview.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DragLayerPreview/HeightResizerDragPreview.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/Resize/useScrollCorrection.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DragLayer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/DeleteDropZone.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/WrapCreatePanelItemWithDrag.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/WrapInsightListItemWithDrag.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/toolbar/Toolbar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/DashboardInner.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/DashboardLoading.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dragAndDrop/draggableWidget/DefaultEmptyLayoutDropZoneBody.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/components/DashboardRenderer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/hooks/useDashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/dashboard/Dashboard.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/filterBar/attributeFilter/HiddenDashboardAttributeFilter.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/buttonBar/HiddenButtonBar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/menuButton/HiddenMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/topBar/title/HiddenTitle.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/toolbar/DefaultDashboardToolbar/DefaultDashboardToolbar.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/toolbar/DefaultDashboardToolbar/DefaultDashboardToolbarGroup.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/toolbar/DefaultDashboardToolbar/DefaultDashboardToolbarButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useCustomWidgetExecutionDataView.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useCustomWidgetInsightDataView.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/common/useInsightWidgetDataView.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DashboardInsightMenuButton.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/presentation/widget/insightMenu/DashboardInsightMenu.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/plugin.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/insightCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/pluginUtils.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/customizationLogging.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/kpiCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/widgetCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/fluidLayoutCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/layoutCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/filterBarCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/attributeFiltersCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/dateFiltersCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/filtersCustomizer.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/customizationBuilder.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/types.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/customizationApis/dashboardEventHandling.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/__version.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/plugins/engine.js","webpack://@gooddata/sdk-ui-web-components/../sdk-ui-dashboard/esm/tools/InsightWidgetBuilder.js"],"sourcesContent":["module.exports = {\"loading\":\"Lädt…\",\"untitled\":\"Unbenannt\",\"empty_value\":\"leerer Wert\",\"gs.list.cancel\":\"Abbrechen\",\"gs.list.apply\":\"Übernehmen\",\"gs.list.only\":\"Nur\",\"messages.dashboardSaveSuccess\":\"Super. Wir haben Ihr Dashboard gespeichert.\",\"options.menu.save.as\":\"Als neu speichern\",\"options.menu.save.as.tooltip\":\"Ein leeres Dashboard kann nicht gespeichert werden.\",\"messages.dashboardSaveFailed\":\"Speichern des Dashboards fehlgeschlagen. Bitte versuchen Sie es noch einmal.\",\"messages.dashboard.invalidDrills.title\":\"<b>Einige Interaktionen wurden entfernt.</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Ein oder mehrere Dashboards/Betrachtungen/Messungen/Attribute wurden geändert oder gelöscht, wodurch einige Interaktionen von folgenden Widgets entfernt wurden: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Ein oder mehrere Dashboards/Betrachtungen/Metriken/Attribute wurden geändert oder gelöscht, wodurch einige Interaktionen von folgenden Widgets entfernt wurden: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Einige Interaktionen für die URL-Verfeinerung wurden deaktiviert</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Einige Drill-in-URL-Interaktionen für die folgenden Widgets wurden aufgrund von Änderungen in Betrachtungsattributen deaktiviert: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Mehr anzeigen\",\"messages.dashboard.expandable.showLess\":\"Weniger anzeigen\",\"messages.drill.InteractionConfiguredSuccess\":\"Interaktion konfiguriert.\",\"messages.drill.InteractionUpdatedSuccess\":\"Interaktion aktualisiert.\",\"filterBar.showAll\":\"Alle anzeigen\",\"filterBar.showLess\":\"Weniger anzeigen\",\"options.menu.export.PDF\":\"Nach PFD exportieren\",\"options.menu.schedule.email\":\"E-Mailing planen\",\"options.menu.delete\":\"Löschen\",\"dialogs.export.cells\":\"ZELLEN\",\"dialogs.export.filters\":\"BETRACHTUNGSKONTEXT\",\"dialogs.export.includeFilters\":\"Angewendete Filter einschließen\",\"dialogs.export.headline\":\"Nach XLSX exportieren\",\"dialogs.export.mergeHeaders\":\"Zusammengeführte Attributzellen so belassen\",\"dialogs.export.submit\":\"Exportieren\",\"dialogs.schedule.email.delete.success\":\"Erfolgreich! Ihre geplante E-Mail wurde gelöscht.\",\"dialogs.schedule.email.submit.success\":\"Erfolgreich! Ihr Dashboard ist jetzt für E-Mails eingerichtet.\",\"dialogs.schedule.email.submit.error\":\"Fehler! E-Mails für das Dashboard konnten nicht eingerichtet werden. Bitte später erneut versuchen.\",\"dialogs.schedule.email.save.success\":\"Erfolgreich! Ihr Zeitplan wurde gespeichert.\",\"dialogs.schedule.email.save.error\":\"Der Zeitplan konnte nicht gespeichert werden. Bitte später erneut versuchen.\",\"dialogs.save.as.new.title\":\"Dashboard als \\\"Neu\\\" speichern\",\"dialogs.save.as.new.desc\":\"Geben Sie Ihrem neuen Dashboard einen aussagekräftigen Namen, um es später einfacher zu finden.\",\"dialogs.save.as.new.default.title\":\"Kopie von {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"Warnmeldungen und E-Mail-Zeitpläne werden nicht dupliziert\",\"dialogs.save.as.new.alertsMessage\":\"Warnmeldungen werden nicht dupliziert\",\"dialogs.save.as.new.emailsMessage\":\"Warnmeldungen und E-Mail-Zeitpläne werden nicht dupliziert\",\"cancelConfirmationDialog.headline\":\"Änderungen verwerfen?\",\"cancelConfirmationDialog.message\":\"Alle Änderungen gehen verloren\",\"cancelConfirmationDialog.submitButtonText\":\"Änderungen verwerfen\",\"deleteDashboardDialog.headline\":\"Dashboard löschen?\",\"deleteDashboardDialog.submitButtonText\":\"Löschen\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Alle Warnmeldungen und geplanten E-Mails für dieses Dashboard werden ebenfalls gelöscht.\",\"deleteDashboardDialog.alertsMessage\":\"Alle für dieses Dashboard eingerichteten Alarme werden ebenfalls gelöscht.\",\"deleteDashboardDialog.emailsMessage\":\"Alle geplanten E-Mails für dieses Dashboard werden ebenfalls gelöscht.\",\"deleteDashboardDialog.drillMessage\":\"Jegliches Drilling in diesem Dashboard von anderen Dashboards wird entfernt.\",\"create.dashboard\":\"Dashboard erstellen\",\"drill_modal_picker.drill-down\":\"Drill-Down\",\"drill_modal_picker.drill-into\":\"Verfeinern von\",\"drill_modal_picker.more.details\":\"Mehr Infos\",\"drillModal.backToTop\":\"Nach oben\",\"filters.allTime.previousPeriod\":\"vorh. Zeitraum\",\"filters.allTime.lastYear\":\"Vorjahr\",\"filters.minute.previousPeriod\":\"vorh. Minute\",\"filters.hour.previousPeriod\":\"vorh. Stunde\",\"filters.day.previousPeriod\":\"vorh. {n, plural, one {Tag} other {#T}}\",\"filters.week.previousPeriod\":\"vorh. {n, plural, one {Woche} other {#W}}\",\"filters.month.previousPeriod\":\"vorh. {n, plural, one {Monat} other {#M}}\",\"filters.quarter.previousPeriod\":\"vorh. {n, plural, one {Quartal} other {#Q}}\",\"filters.year.previousPeriod\":\"vorh. {n, plural, one {Jahr} other {#J}}\",\"filters.alertMessage.relativePreset\":\"in {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"im Zeitraum {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"Mit diesem Projekt ist mehr als ein Projektdatumsfilter verknüpft. Der erste Filter wird verwendet.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"Mit diesem Workspace sind mehrere Datumsfilterkonfigurationen verknüpft. Es wurde die erste Konfiguration verwendet.\",\"filters.config.warning.selectedFilterNotValid\":\"Die Standardfilteroption ist ungültig. Stattdessen wird die erste gültige Filteroption verwendet.\",\"filters.config.warning.allOptionsHidden\":\"Die Dashboard-Datumsfiltereinstellung wurde ignoriert, weil sie alle Filteroptionen verborgen hätte.\",\"filters.config.warning.conflictingIdentifiers\":\"Die Dashboard-Datumsfiltereinstellung wurde ignoriert, weil sie Datenfilteroptionen mit identischen Identifikatoren enthält.\",\"filters.config.warning.notAvailable\":\"Die Konfiguration des Projektdatumsfilters wurde entweder noch nicht definiert oder Sie haben keine Zugriffsberechtigung dafür.\",\"filters.config.warning.workspace.notAvailable\":\"Die Datumsfilterkonfiguration des Workspaces ist entweder nicht definiert oder Sie verfügen nicht über die nötigen Zugriffsrechte.\",\"kpi.noData\":\"Keine Daten für die aktuellen Filtereinstellungen. Versuchen Sie, die Filter zu ändern.\",\"kpiPop.change\":\"Veränderung\",\"dialogs.schedule.email.filters\":\"Das Dashboard enthält Filteränderungen, die im Zeitplan gespeichert werden.\",\"dialogs.schedule.email.filters.not.saved\":\"Dashboard-Filter, die im Zeitplan gespeichert wurden, sind nicht davon betroffen.\",\"dialogs.schedule.email.attachment.filter\":\"(mit derzeit festgelegten Filtern)\",\"dialogs.schedule.email.attachment.label\":\"Anhang:\",\"dialogs.schedule.email.attachments.label\":\"Anhänge:\",\"dialogs.schedule.email.attachment.select\":\"Anhänge auswählen\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Dieses Dashboard enthält keine Betrachtungen.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Dashboard (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Betrachtungen (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Planen Sie die E-Mail-Zustellung\",\"dialogs.schedule.email.heading\":\"Exportvorgang planen\",\"dialogs.schedule.email.message.label\":\"Nachricht:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 Empfänger hat} other {# Empfänger haben}} diesen Zeitplan nicht mehr abonniert.\",\"dialogs.schedule.email.repeats.label\":\"Wiederholungen:\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"am {date}\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"am {week, select, 1 {ersten} 2 {zweiten} 3 {dritten} 4 {vierten} other {letzten}} {day}\",\"dialogs.schedule.email.repeats.every\":\"alle\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {Tag} other {Tage}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {Monat} other {Monate}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {Woche} other {Wochen}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Benutzerdefiniert\",\"dialogs.schedule.email.repeats.types.daily\":\"Täglich\",\"dialogs.schedule.email.repeats.types.monthly\":\"Monatlich am {week, select, 1 {ersten} 2 {zweiten} 3 {dritten} 4 {vierten} other {letzten}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Wöchentlich am {day}\",\"dialogs.schedule.email.subject.label\":\"Betreff:\",\"dialogs.schedule.email.time.label\":\"Erste E-Mail:\",\"dialogs.schedule.email.to.label\":\"An:\",\"dialogs.schedule.email.message.placeholder\":\"Hallo,\\n\\nIhre geplante E-Mail ist bereit. Sie können das Dashboard in Anhänge herunterladen.\",\"dialogs.schedule.email.submit\":\"Planen\",\"dialogs.schedule.email.save\":\"Speichern\",\"dialogs.schedule.email.format.options\":\"Formatoptionen\",\"dialogs.schedule.email.insight.format\":\"Format der Betrachtung:\",\"dialogs.schedule.email.attribute.merged\":\"Zusammengeführte Attributzellen so belassen\",\"dialogs.schedule.email.show.filters\":\"Angewendete Filter anzeigen\",\"dialogs.schedule.management.title\":\"Geplante Exportvorgänge\",\"dialogs.schedule.management.delete\":\"Löschen Sie den Zeitplan.\",\"dialogs.schedule.management.delete.dialog\":\"Zeitplan löschen?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>Der Zeitplan</b> wird unwiderruflich gelöscht.\",\"dialogs.schedule.management.noSchedules\":\"Das Dashboard enthält keine geplanten Exporte.{br}Jetzt hinzufügen.\",\"dialogs.schedule.management.noSchedules.byUser\":\"Sie haben noch keine Exporte geplant.{br}Jetzt hinzufügen.\",\"dialogs.schedule.management.addSchedule\":\"Zeitplan hinzufügen\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# Empfänger} other {# Empfänger}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Nur Sie\",\"dialogs.schedule.management.attachments.dashboard\":\"Dashboard\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# Betrachtung} other {# Betrachtungen}}\",\"dialogs.schedule.management.attachments.mixed\":\"Dashboard und {n, plural, one {# Betrachtung} other {# Betrachtungen}}\",\"dialogs.schedule.management.load.error\":\"Laden fehlgeschlagen. Später erneut versuchen.\",\"dialogs.schedule.management.delete.error\":\"Der Zeitplan konnte nicht gelöscht werden. Später erneut versuchen.\",\"dialogs.schedule.management.tab.all\":\"alle\",\"dialogs.schedule.management.tab.user\":\"von mir erstellt\",\"options.menu.schedule.email.recipient.invalid\":\"Dies ist keine gültige E-Mail-Adresse.\",\"options.menu.schedule.email.recipient.warning.existed\":\"Sie haben diesen Empfänger bereits hinzugefügt.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Diese E-Mail-Adresse ist nicht bei diesem Workspace registriert. Der Empfänger könnte sensible Daten erhalten.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Diese E-Mail-Adresse ist nicht bei diesem Workspace registriert. Nur der Ersteller des Zeitplans kann diese E-Mail-Adresse hinzufügen.\",\"delete\":\"Löschen\",\"close\":\"Schließen\",\"cancel\":\"Abbrechen\",\"gs.date.at\":\"um\",\"gs.date.today\":\"Heute\",\"gs.date.tomorrow\":\"Morgen\",\"gs.date.yesterday\":\"Gestern\",\"kpi.alertBox.title\":\"Alarm bei KPI-Änderung setzen\",\"kpi.alertBox.example\":\"z. B.\",\"kpi.alertBox.unverifiedEmail\":\"Leider können Sie keinen Alarm sehen. Überprüfen Sie Ihre E-Mail. Wenn das nichts nützt, bitten Sie Ihren Administrator, Ihre Berechtigungen zu aktualisieren.\",\"kpi.alertBox.disabledInReadOnly\":\"Warnmeldungen im schreibgeschützten Modus deaktiviert\",\"kpi.error.view\":\"KPI kann nicht angezeigt werden. Setzen Sie sich mit Ihrem Administrator in Verbindung, um die KPI-Definition festzulegen.\",\"kpiAlertDialog.delete\":\"Löschen\",\"kpiAlertDialog.deleting\":\"Wird gelöscht…\",\"kpiAlertDialog.emailMe\":\"Schicken Sie mir eine E-Mail\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe}, wenn dieser KPI ist\",\"kpiAlertDialog.emailInfo\":\"E-Mail wird gesendet an {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Diese Nummer ist ungültig.</strong>{br}Bitte überprüfen und erneut versuchen.\",\"kpiAlertDialog.filtersDiffer\":\"Der KPI wird jetzt anders gefiltert als beim Einrichten des Alarms.\",\"kpiAlertDialog.filtersApply\":\"Alarmfilter auf Dashboard anwenden\",\"kpiAlertDialog.savingFailed\":\"Speichern des Alarms fehlgeschlagen. Bitte versuchen Sie es noch einmal.\",\"kpiAlertDialog.deleteingFailed\":\"Löschen des Alarms fehlgeschlagen. Bitte versuchen Sie es noch einmal.\",\"kpiAlertDialog.brokenAlert\":\"Gebrochene Warnmeldung\",\"kpiAlertDialog.brokenAlertAppeal\":\"Um den richtigen KPI-Wert anzuzeigen, aktivieren Sie die Filter in dieser Warnmeldung. Sie können die Warnmeldung auch entfernen.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Datum\",\"kpiAlertDialog.removedFilters\":\"Die Filter wurden aus dem Dashboard entfernt\",\"kpiAlertDialog.ignoredFilters\":\"Unbekannte Filter für diesen KPI\",\"kpiAlertDialog.updateTitle\":\"Aktualisieren\",\"kpiAlertDialog.updateBrokenTitle\":\"Filter aktualisieren\",\"kpiAlertDialog.updatingTitle\":\"Wird aktualisiert…\",\"kpiAlertDialog.updateBrokenFailed\":\"Aktualisieren der Filter fehlgeschlagen. Bitte versuchen Sie es erneut.\",\"kpiAlertDialog.setTitle\":\"Alarm einstellen\",\"kpiAlertDialog.settingTitle\":\"Wird eingestellt…\",\"kpiAlertDialog.threshold.above\":\"über\",\"kpiAlertDialog.threshold.below\":\"unter\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} weitere {numFilters, select, 1 {Filter} other {Filter}} angewandt\",\"messages.exportResultError\":\"Daten konnten nicht exportiert werden. Versuchen Sie es später noch einmal.\",\"messages.exportResultRestrictedError\":\"Sie können die Betrachtungsansicht nicht exportieren, weil sie zugriffsbeschränkte Daten enthält.\",\"messages.exportResultStart\":\"Export wird durchgeführt\",\"messages.exportResultSuccess\":\"Export erfolgreich abgeschlossen.\",\"messages.sharingChangedSuccess\":\"Freigabe aktualisiert.\",\"messages.sharingChangedError.general\":\"Fehler beim Aktualisieren der Freigabeeinstellungen. Bitte später erneut versuchen.\",\"messages.sharingDialogError.general\":\"Fehler beim Laden der Freigabeeinstellungen. Bitte später erneut versuchen.\",\"visualization.dataTooLarge.headline\":\"Zu viele Datenpunkte zum Anzeigen\",\"visualization.dataTooLarge.text\":\"Versuchen Sie, einen oder mehrere Filter auf Ihr Dashboard anzuwenden.\",\"visualization.execute_protected_report.headline\":\"Sie sind nicht berechtigt, diesen Bericht anzuzeigen.\",\"visualization.execute_protected_report.text\":\"Setzen Sie sich mit Ihrem Administrator in Verbindung.\",\"visualization.alert_not_supported\":\"Warnmeldungen für den statischen Zeitraum werden nicht unterstützt.\",\"visualization.empty.headline\":\"Keine Daten für Ihre Filterauswahl\",\"visualization.error.headline\":\"Leider können wir diese Betrachtung nicht anzeigen\",\"visualization.error.text\":\"Setzen Sie sich mit Ihrem Administrator in Verbindung.\",\"options.button.bubble\":\"Betrachtungsdaten exportieren\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"Die Betrachtung kann momentan nicht exportiert werden. Versuchen Sie andere Filter anzuwenden bzw. andere Messungen oder Attribute.\",\"options.menu.unsupported.error._metric\":\"Die Betrachtungen können derzeit nicht exportiert werden. Wählen Sie andere Filter, Metriken oder Attribute aus.\",\"options.menu.unsupported.loading\":\"Die Betrachtung kann momentan nicht exportiert werden. \",\"export.defaultTitle\":\"Betrachtung ohne Namen\",\"export_unsupported.disabled\":\"Es wird kein Export unterstützt\",\"widget.options.menu.exportToCSV\":\"Als CSV exportieren\",\"widget.options.menu.exportToXLSX\":\"Nach XLSX exportieren\",\"widget.options.menu.scheduleExport\":\"Exportvorgang planen\",\"share.button.text\":\"Teilen\",\"dashboard.error.empty.heading\":\"Dieses Dashboard ist leer\",\"dashboard.error.empty.text\":\"Alle Betrachtungen wurden entfernt.\",\"dashboard.shareDialog.underLenientControl.label\":\"Andere Benutzer können auf dieses Dashboard zugreifen, wenn sie danach suchen\",\"dashboard.shareDialog.lock.label\":\"Nur Administratoren können dieses Dashboard bearbeiten\",\"header.lockStatus.tooltip\":\"<b>Dieses Dashboard ist gesperrt.</b> Nur Administratoren können dieses Dashboard bearbeiten.\",\"header.shareStatus.private.text\":\"Privat\",\"header.shareStatus.private.strict.tooltip\":\"Nur Sie können dieses Dashboard ansehen und bearbeiten.\",\"header.shareStatus.private.not.strict.tooltip\":\"Der Ersteller kann dieses Dashboard bearbeiten. Andere Benutzer mit entsprechenden Benutzerrollen können dieses Dashboard bearbeiten, wenn sie danach suchen.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Entfernt den Zugriff auf dieses Dashboard.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"Dies ist der Benutzer, der dieses Dashboard erstellt hat. Ersteller können nicht entfernt werden.\",\"attributesDropdown.placeholder\":\"Sucht…\",\"attributesDropdown.configuration\":\"Konfiguration\",\"attributesDropdown.itemsFiltered\":\"Elemente wurden gefiltert\",\"attributesDropdown.allItemsFiltered\":\"Alle Elemente sind ausgefiltert.\",\"attributesDropdown.itemsFiltered.tooltip\":\"Elemente wurden nach: <strong>{filters}</strong> gefiltert\",\"attributesDropdown.save\":\"Speichern\",\"attributesDropdown.filterBy\":\"Filtern nach\",\"attributesDropdown.displayValuesAs\":\"Werte anzeigen als\",\"attributesDropdown.title\":\"Titel\",\"attributesDropdown.title.reset\":\"Zurücksetzen\",\"attributesDropdown.selectionMode\":\"Auswahl\",\"attributesDropdown.selectionMode.multi\":\"Mehrere Werte\",\"attributesDropdown.selectionMode.single\":\"Einzelner Wert\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"Die Auswahl einzelner Werte ist nicht zulässig, wenn Filter in den Filtereinstellungen ausgewählt sind. Um einzelne Werte auswählen zu können, deaktivieren Sie bitte alle Filter.\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"Das Filtern nach anderen Filtern ist für die Auswahl von einzelnen Werten deaktiviert. Um Filtereinstellungen festzulegen, wählen Sie die Auswahl von mehreren Werten.\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> kann nicht nach <strong>{parentTitle}</strong> gefiltert werden. Es besteht keine Verbindung zwischen den Filterattributen und dem Datenmodell.\",\"attributesDropdown.details.dataset\":\"Dataset\",\"attributesDropdown.details.values\":\"Werte\",\"attributesDropdown.details.shortening_decoration\":\"…und {count} weitere\",\"attributesDropdown.removeTooltip\":\"Vom Dashboard entfernen\",\"layout.header.characters.left\":\"Noch {currentCharactersCount}/{maximumCharactersCount} Zeichen\",\"layout.header.add.title.placeholder\":\"Titel hier hinzufügen...\",\"layout.header.add.description.placeholder\":\"Beschreibung hier hinzufügen...\",\"error\":\"Fehler\",\"controlButtons.edit.value\":\"Bearbeiten\",\"controlButtons.saveAndPublish.value\":\"Speichern und veröffentlichen\",\"controlButtons.save.value\":\"Speichern\",\"controlButtons.saveAndPublish.title\":\"Alle Änderungen sind sofort für alle sichtbar, die auf dieses Dashboard zugreifen können.\",\"controlButtons.saveAsPrivate.title\":\"Alle Änderungen werden gespeichert.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"Leere Dashboards können nicht gespeichert werden\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"Es gibt keine Änderungen, die gespeichert werden könnten\",\"controlButtons.saving.value\":\"Speichert…\",\"gs.visualizationsList.tabs.all\":\"alle\",\"gs.visualizationsList.tabs.my\":\"von mir erstellt\",\"visualizationsList.noInsights\":\"Dieser Workspace enthält keine Betrachtungen.\",\"visualizationsList.create\":\"Betrachtung erstellen\",\"visualizationsList.noUserInsights\":\"Keine Betrachtungen erstellt.\",\"visualizationsList.noVisualizationsFound\":\"Keine übereinstimmende Betrachtung.\",\"search_insights\":\"Alle durchsuchen…\",\"save.as.new\":\"Als neu speichern\",\"addPanel.deleteItem\":\"Zum Entfernen loslassen\",\"addPanel.newItem\":\"Neues Element\",\"addPanel.attributeFilter\":\"Attributsfilter\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"Der Attributfilter erfordert ein Attribut.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"Weitere Informationen\",\"addPanel.kpi\":\"Kritischer Leistungsindikator\",\"addPanel.kpi.tooltip.no_measures._measure\":\"Der Kritische Leistungsindikator erfordert eine berechnete Messung.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"Der Kritische Leistungsindikator erfordert eine Metrik.\",\"addPanel.kpi.tooltip.no_measures.link\":\"Weitere Informationen\",\"visualizationsList.dragToAdd\":\"Zum Hinzufügen loslassen\",\"visualizationsList.savedVisualizations\":\"Gespeicherte Betrachtungen\",\"configurationPanel.drillConfig.selectDashboard\":\"Dashboard auswählen…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Alle Dashboards durchsuchen…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(Nicht mit Ihnen geteilt)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"Dieses Dashboard wird nicht mit Ihnen geteilt, aber andere Benutzer haben Zugriff auf dieses Dashboard.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"Dieses Dashboard wird nicht mit Ihnen geteilt, aber alle Benutzer können darauf zugreifen, wenn sie danach suchen.\",\"configurationPanel.remove.form.dashboard\":\"Vom Dashboard entfernen\",\"filterBar.filter.drop\":\"zum Hinzufügen loslassen\",\"filterBar.filter.addFilterPlaceholder\":\"{icon} hierher ziehen\",\"filterBar.filter.dropzone.tooltip\":\"Ziehen Sie den Attributfilter hierher.\",\"configurationPanel.title\":\"Konfiguration\",\"configurationPanel.comparison\":\"Vergleich\",\"configurationPanel.compareWith\":\"Vergleichen mit\",\"configurationPanel.increasingNumberIs\":\"Steigender Wert ist\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Vorheriger Zeitraum\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Gleicher Zeitraum des Vorjahres\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Kein Vergleich\",\"configurationPanel.comparisonDirectionItems.green\":\"Grün\",\"configurationPanel.comparisonDirectionItems.red\":\"Rot\",\"configurationPanel.unlistedMetric._measure\":\"Nicht aufgeführte Messung\",\"configurationPanel.unlistedMetric._metric\":\"Nicht aufgeführte Metrik\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Diese Messung wird ausgeblendet. Nur Sie können sie sehen.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Diese Metrik ist ausgeblendet. Nur Sie können sie sehen.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Messung auswählen…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Metrik auswählen…\",\"configurationPanel.selectComparisonPlaceholder\":\"Wählt Vergleich aus…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Positive/negative auswählen\",\"configurationPanel.measure._measure\":\"Messung\",\"configurationPanel.measure._metric\":\"Metrik\",\"configurationPanel.filterBy\":\"Filtern nach\",\"configurationPanel.date\":\"Datum\",\"configurationPanel.dateAs\":\"als\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"Die Betrachtung kann nicht nach {attributeName} gefiltert werden. Deaktivieren Sie das Kontrollfeld.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"KPI kann nicht nach {attributeName} gefiltert werden. Markierung des Kontrollfelds entfernen.\",\"configurationPanel.vizCantBeFilteredByDate\":\"Die Betrachtung kann nicht nach Datum gefiltert werden. Deaktivieren Sie das Kontrollfeld.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"KPI kann nicht nach Datum gefiltert werden. Markierung des Kontrollfelds entfernen.\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" kann nicht mehr auf die Betrachtung angewandt werden. Wählen Sie eine andere Einheit oder bearbeiten Sie die Betrachtung.\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\" kann nicht mehr auf den kpi angewandt werden. Wählen Sie eine andere Dimension oder bearbeiten Sie den KPI.\",\"configurationPanel.breakAlertWarning\":\"\\n            Nutzer haben {numAlerts} {numAlerts, select, 1 {Benachrichtigung} other {Benachrichtigungen}}\\n            für diese KPI eingerichtet. Eine Änderung der KPI wirkt sich auf {numAlerts, select, 1 {dies Benachrichtungen} other {diese Benachrichtungen}} aus.\\n\",\"configurationPanel.drillIntoDashboard\":\"Dashboard verfeinern\",\"configurationPanel.noLinkableDashboards\":\"Kein Dashboard zum Verbinden mit\",\"configurationPanel.selectDashboard\":\"Ein Dashboard auswählen\",\"configurationPanel.interactions\":\"Interaktionen\",\"configurationPanel.drillConfig.interactions\":\"Drill-Interaktionen\",\"configurationPanel.drillConfig.addInteraction\":\"Interaktion hinzufügen\",\"configurationPanel.drillConfig.clickHint\":\"Beim Klicken auf\",\"configurationPanel.drillConfig.measureValue._measure\":\"Messwert\",\"configurationPanel.drillConfig.measureValue._metric\":\"Wert von Metrik\",\"configurationPanel.drillConfig.attributeValue\":\"Attributwert\",\"configurationPanel.drillConfig.selectTarget\":\"Ich möchte\",\"configurationPanel.drillConfig.clickHintItem\":\"Wenn ich auf <addon>(Wert von)</addon> klicke\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Dashboard verfeinern\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Betrachtung verfeinern\",\"configurationPanel.drillConfig.drillIntoUrl\":\"URL-Ansicht verfeinern\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Ungültige URL-Parameter\",\"configurationPanel.drillConfig.select\":\"Befehl auswählen…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"Der Datumsattributwert aus der Betrachtung wird nicht übertragen, um das Ziel-Dashboard zu filtern.\",\"configurationPanel.unlistedDashboardTab\":\"Nicht aufgeführtes Dashboard\",\"configurationPanel.visualprops.sectionTitle\":\"Titel\",\"configurationPanel.visualprops.hideTitle\":\"Titel ausblenden\",\"configurationPanel.visualprops.sectionDescription\":\"Beschreibung\",\"configurationPanel.visualprops.inheritDescription\":\"Erben\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Übernehmen Sie die Beschreibung aus der Betrachtung.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Übernehmen Sie die Beschreibung von der Metrik.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Übernehmen Sie die Beschreibung von der Messung.\",\"configurationPanel.visualprops.customDescription\":\"Benutzerdefiniert\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Fügen Sie eine benutzerdefinierte Beschreibung für diese Instanz der Betrachtung hinzu.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Fügen Sie eine benutzerdefinierte Beschreibung hinzu.\",\"configurationPanel.visualprops.noneDescription\":\"Keine\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Messbeschreibungen einbeziehen\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Metrikbeschreibungen einbeziehen\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Anzeigebereich mit einer Liste der Messungen einer Betrachtung und deren Beschreibung.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Anzeigebereich mit einer Liste der Metriken einer Betrachtung und deren Beschreibung.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Beschreibung hinzufügen…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"URL auswählen\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Hyperlink in Attributsbeschriftung\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"Eigene URL\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Eigene URL hinzufügen\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Eigene URL bearbeiten\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Parameter\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Parameter sind Platzhalter, die beim Verfeinern mit dynamischen Werten ersetzt werden.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Hinzufügen\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Typ\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Bezeichnung\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {Wert} other {Werte}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"... und {count} weitere\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"Betrachtungs-ID\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"Client-ID\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"Daten Produkt-ID\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"Projekt-ID\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"Workspace-ID\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"Widget-ID\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"Dashboard-ID\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Kennung\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Betrachtung\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Identifikatoren\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Übernehmen\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Abbrechen\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"URL eingeben und Parameter aus dem rechten Bereich einfügen.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"Wie erstelle ich eigene URL?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Ungültige Parameter: {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Eigene URL hinzufügen\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Eigene URL bearbeiten\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Attributsbeschriftungswert\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Geo-Attributswert\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"URL-Attributswert\",\"configurationPanel.zoomInsight\":\"Vergrößerbare Betrachtung\",\"configurationPanel.zoomInsight.help\":\"Aktivieren Sie Vergrößern der Betrachtung für eine detaillierte Ansicht. Halten Sie die Umschalttaste gedrückt, um den vergrößerten Bereich zu verschieben.\",\"configurationPanel.zoomInsight.notice\":\"Vergrößern wird nicht auf exportierte Dashboards angewendet\",\"configurationPanel.drillConfig.selectInsight\":\"Betrachtung auswählen…\",\"gs.date.date-dataset.recommended\":\"Empfohlen\",\"gs.date.date-dataset.other\":\"Andere\",\"gs.date.date-dataset.related\":\"Zugehörig\",\"gs.date.date-dataset.unrelated\":\"Nicht zugehörig\",\"layout.widget.width.min\":\"Widget hat minimale Breite\",\"layout.widget.width.max\":\"Das Widget kann nicht breiter sein\",\"layout.widget.height.min\":\"Das Widget befindet sich auf der minimalen Höhe\",\"layout.widget.height.max\":\"Das Widget befindet sich auf der maximalen Höhe\",\"layout.widget.addedByPlugin\":\"Über Plugin hinzugefügt\",\"layout.widget.modifiedByPlugin\":\"Über Plugin bearbeitet\",\"layout.widget.hideOverlay\":\"Overlay ausblenden\",\"dropzone.new.row.desc\":\"Zum Erstellen eines{nbsp}<b>neuen Bereichs</b> ablegen\",\"dropzone.widget.desc\":\"<b>Hier</b> ablegen\",\"dropzone.widget.last.in.row.desc\":\"Im <b>vorhandenen Abschnitt</b> ablegen\",\"deleteKpiConfirmationDialog.headline\":\"KPI löschen\",\"deleteKpiConfirmationDialog.message\":\"Alle für diesen KPI eingerichteten Alarme werden ebenfalls gelöscht.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Löschen\",\"newDashboard.title\":\"Betrachtungen hierher ziehen\",\"newDashboard.dropInsight\":\"Betrachtung ablegen\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> ist bereits durch <strong>{childTitle}</strong> gefiltert, filtern Sie direkt oder durch andere Filter.\",\"attributesDropdown.attributeNameWithData\":\"mit Daten von\"}","module.exports = {\"loading\":{\"value\":\"Loading…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"untitled\":{\"value\":\"Untitled\",\"comment\":\"\",\"limit\":0},\"empty_value\":{\"value\":\"empty value\",\"comment\":\"\",\"limit\":0},\"gs.list.cancel\":{\"value\":\"Cancel\",\"comment\":\"\",\"limit\":0},\"gs.list.apply\":{\"value\":\"Apply\",\"comment\":\"\",\"limit\":0},\"gs.list.only\":{\"value\":\"Only\",\"comment\":\"\",\"limit\":0},\"messages.dashboardSaveSuccess\":{\"value\":\"Great. We saved your dashboard.\",\"comment\":\"\",\"limit\":0},\"options.menu.save.as\":{\"value\":\"Save as new\",\"comment\":\"Save As New Dashboard\",\"limit\":0},\"options.menu.save.as.tooltip\":{\"value\":\"Empty dashboard cannot be saved.\",\"comment\":\"Empty dashboard cannot be saved.\",\"limit\":0},\"messages.dashboardSaveFailed\":{\"value\":\"Failed to save dashboard, please try again.\",\"comment\":\"\",\"limit\":0},\"messages.dashboard.invalidDrills.title\":{\"value\":\"<b>Some interactions were removed</b>\",\"comment\":\"Title of the warning message shown while editing KPI dashboard with some invalid drills.\",\"limit\":0},\"messages.dashboard.invalidDrills.body.modern._measure|insight\":{\"value\":\"One or more dashboard/insight/measure/attribute has been changed or deleted causing some interactions to be removed from following widgets: <b>{listOfWidgetTitles}</b>\",\"comment\":\"Expanded text of the warning message shown while editing KPI dashboard with some invalid drills. Don't translate placeholder '{listOfWidgetTitles}'.\",\"limit\":0},\"messages.dashboard.invalidDrills.body.modern._metric|insight\":{\"value\":\"One or more dashboard/insight/metric/attribute has been changed or deleted causing some interactions to be removed from following widgets: <b>{listOfWidgetTitles}</b>\",\"comment\":\"Expanded text of the warning message shown while editing KPI dashboard with some invalid drills. Don't translate placeholder '{listOfWidgetTitles}'.\",\"limit\":0},\"messages.dashboard.invalidDrills.body.modern._measure|report\":{\"value\":\"One or more dashboard/report/measure/attribute has been changed or deleted causing some interactions to be removed from following widgets: <b>{listOfWidgetTitles}</b>\",\"comment\":\"Expanded text of the warning message shown while editing KPI dashboard with some invalid drills. Don't translate placeholder '{listOfWidgetTitles}'.\",\"translate\":false,\"limit\":0},\"messages.dashboard.invalidDrills.body.modern._metric|report\":{\"value\":\"One or more dashboard/report/metric/attribute has been changed or deleted causing some interactions to be removed from following widgets: <b>{listOfWidgetTitles}</b>\",\"comment\":\"Expanded text of the warning message shown while editing KPI dashboard with some invalid drills. Don't translate placeholder '{listOfWidgetTitles}'.\",\"translate\":false,\"limit\":0},\"messages.dashboard.invalidCustomUrlDrills.title\":{\"value\":\"<b>Some drill into URL interactions were disabled</b>\",\"comment\":\"Title of the warning message shown while editing KPI dashboard with some invalid drills.\",\"limit\":0},\"messages.dashboard.invalidCustomUrlDrills.body.modern|insight\":{\"value\":\"Some of the drill into URL interactions on the following widgets were disabled because of changes in insight attributes: <b>{listOfWidgetTitles}</b>\",\"comment\":\"Expanded text of the warning message shown while editing KPI dashboard with some invalid drills. Don't translate placeholder '{listOfWidgetTitles}'.\",\"limit\":0},\"messages.dashboard.invalidCustomUrlDrills.body.modern|report\":{\"value\":\"Some of the drill into URL interactions on the following widgets were disabled because of changes in report attributes: <b>{listOfWidgetTitles}</b>\",\"comment\":\"Expanded text of the warning message shown while editing KPI dashboard with some invalid drills. Don't translate placeholder '{listOfWidgetTitles}'.\",\"translate\":false,\"limit\":0},\"messages.dashboard.expandable.showMore\":{\"value\":\"Show more\",\"comment\":\"Title of the link to show more text of a notification message.\",\"limit\":0},\"messages.dashboard.expandable.showLess\":{\"value\":\"Show less\",\"comment\":\"Title of the link to collapse text of a notification message.\",\"limit\":0},\"messages.drill.InteractionConfiguredSuccess\":{\"value\":\"Interaction configured.\",\"comment\":\"Dialog. Configure of drill interaction is created.\",\"limit\":0},\"messages.drill.InteractionUpdatedSuccess\":{\"value\":\"Interaction updated.\",\"comment\":\"Dialog. Configure of drill interaction is updated.\",\"limit\":0},\"filterBar.showAll\":{\"value\":\"Show all\",\"comment\":\"\",\"limit\":0},\"filterBar.showLess\":{\"value\":\"Show less\",\"comment\":\"\",\"limit\":0},\"options.menu.export.PDF\":{\"value\":\"Export to PDF\",\"comment\":\"Export whole KPI dashboard to PDF\",\"limit\":0},\"options.menu.schedule.email\":{\"value\":\"Schedule emailing\",\"comment\":\"Translate as imperative. Schedule emailing whole KPI dashboard\",\"limit\":0},\"options.menu.delete\":{\"value\":\"Delete\",\"comment\":\"Delete Dashboard\",\"limit\":0},\"dialogs.export.cells\":{\"value\":\"CELLS\",\"comment\":\"Cells of the table that is going to be exported to file\",\"limit\":0},\"dialogs.export.filters|insight\":{\"value\":\"INSIGHT CONTEXT\",\"comment\":\"The filters that are applied to the report\",\"limit\":0},\"dialogs.export.filters|report\":{\"value\":\"REPORT CONTEXT\",\"comment\":\"The filters that are applied to the report\",\"limit\":0,\"translate\":false},\"dialogs.export.includeFilters\":{\"value\":\"Include applied filters\",\"comment\":\"Include the applied filters to the exported file\",\"limit\":0},\"dialogs.export.headline\":{\"value\":\"Export to XLSX\",\"comment\":\"Export data to XLSX file\",\"limit\":0},\"dialogs.export.mergeHeaders\":{\"value\":\"Keep attribute cells merged\",\"comment\":\"Merge the similar cells of the table into one when exporting table to the file.\",\"limit\":0},\"dialogs.export.submit\":{\"value\":\"Export\",\"comment\":\"Start to export data to file\",\"limit\":0},\"dialogs.schedule.email.delete.success\":{\"value\":\"Success! Your scheduled email was deleted.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.submit.success\":{\"value\":\"Success! Your dashboard is scheduled for emailing.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.submit.error\":{\"value\":\"Failed to schedule the dashboard. Try again later.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.save.success\":{\"value\":\"Success! Your schedule has been saved.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.save.error\":{\"value\":\"Failed to save the schedule. Try again later.\",\"comment\":\"\",\"limit\":0},\"dialogs.save.as.new.title\":{\"value\":\"Save dashboard as new\",\"comment\":\"\",\"limit\":0},\"dialogs.save.as.new.desc\":{\"value\":\"Give your new dashboard a new descriptive name, so it's easier to find it later on.\",\"comment\":\"\",\"limit\":0},\"dialogs.save.as.new.default.title\":{\"value\":\"Copy of {title}\",\"comment\":\"\",\"limit\":0},\"dialogs.save.as.new.alertsAndEmailsMessage\":{\"value\":\"Alerts and email schedules will not be duplicated\",\"comment\":\"\",\"limit\":0},\"dialogs.save.as.new.alertsMessage\":{\"value\":\"Alerts will not be duplicated\",\"comment\":\"\",\"limit\":0},\"dialogs.save.as.new.emailsMessage\":{\"value\":\"Email schedules will not be duplicated\",\"comment\":\"\",\"limit\":0},\"cancelConfirmationDialog.headline\":{\"value\":\"Discard changes?\",\"comment\":\"\",\"limit\":0},\"cancelConfirmationDialog.message\":{\"value\":\"All changes will be lost\",\"comment\":\"\",\"limit\":0},\"cancelConfirmationDialog.submitButtonText\":{\"value\":\"Discard changes\",\"comment\":\"\",\"limit\":0},\"deleteDashboardDialog.headline\":{\"value\":\"Delete dashboard?\",\"comment\":\"\",\"limit\":0},\"deleteDashboardDialog.submitButtonText\":{\"value\":\"Delete\",\"comment\":\"\",\"limit\":0},\"deleteDashboardDialog.alertsAndEmailsMessage\":{\"value\":\"All alerts and scheduled emails set up for this dashboard will also be deleted.\",\"comment\":\"\",\"limit\":0},\"deleteDashboardDialog.alertsMessage\":{\"value\":\"All alerts set up for this dashboard will also be deleted.\",\"comment\":\"\",\"limit\":0},\"deleteDashboardDialog.emailsMessage\":{\"value\":\"All scheduled emails set up for this dashboard will also be deleted.\",\"comment\":\"\",\"limit\":0},\"deleteDashboardDialog.drillMessage\":{\"value\":\"All drilling into this dashboard from other dashboards will be removed.\",\"comment\":\"\",\"limit\":0},\"create.dashboard\":{\"value\":\"Create dashboard\",\"comment\":\"\",\"limit\":0},\"drill_modal_picker.drill-down\":{\"value\":\"Drill down\",\"comment\":\"Title of widget interactions\",\"limit\":0},\"drill_modal_picker.drill-into\":{\"value\":\"Drill into\",\"comment\":\"Title of widget interactions\",\"limit\":0},\"drill_modal_picker.more.details\":{\"value\":\"More details\",\"comment\":\"\",\"limit\":0},\"drillModal.backToTop\":{\"value\":\"Back to top\",\"comment\":\"\",\"limit\":0},\"filters.allTime.previousPeriod\":{\"value\":\"prev. period\",\"comment\":\"\",\"limit\":0},\"filters.allTime.lastYear\":{\"value\":\"prev. year\",\"comment\":\"\",\"limit\":0},\"filters.minute.previousPeriod\":{\"value\":\"prev. minute\",\"comment\":\"\",\"limit\":0},\"filters.hour.previousPeriod\":{\"value\":\"prev. hour\",\"comment\":\"\",\"limit\":0},\"filters.day.previousPeriod\":{\"value\":\"prev. {n, plural, one {day} other {#d}}\",\"comment\":\"In '{n, plural, one {DAY} other {#D}}' translate only uppercase words. Keep number placeholder '#' as is. Do not put dot character after period abbreviation (correct '{#d}', wrong '{#d.}').\",\"limit\":0},\"filters.week.previousPeriod\":{\"value\":\"prev. {n, plural, one {week} other {#w}}\",\"comment\":\"In '{n, plural, one {WEEK} other {#W}}' translate only uppercase words. Keep number placeholder '#' as is. Do not put dot character after period abbreviation (correct '{#w}', wrong '{#w.}').\",\"limit\":0},\"filters.month.previousPeriod\":{\"value\":\"prev. {n, plural, one {month} other {#m}}\",\"comment\":\"In '{n, plural, one {MONTH} other {#M}}' translate only uppercase words. Keep number placeholder '#' as is. Do not put dot character after period abbreviation (correct '{#m}', wrong '{#m.}').\",\"limit\":0},\"filters.quarter.previousPeriod\":{\"value\":\"prev. {n, plural, one {quarter} other {#q}}\",\"comment\":\"In '{n, plural, one {QUARTER} other {#Q}}' translate only uppercase words. Keep number placeholder '#' as is. Do not put dot character after period abbreviation (correct '{#q}', wrong '{#q.}').\",\"limit\":0},\"filters.year.previousPeriod\":{\"value\":\"prev. {n, plural, one {year} other {#y}}\",\"comment\":\"In '{n, plural, one {YEAR} other {#Y}}' translate only uppercase words. Keep number placeholder '#' as is. Do not put dot character after period abbreviation (correct '{#y}', wrong '{#y.}').\",\"limit\":0},\"filters.alertMessage.relativePreset\":{\"value\":\"in {calendarIcon} {range}\",\"comment\":\"Don't translate placeholders '{calendarIcon}', '{range}'.\",\"limit\":0},\"filters.alertMessage.relativePreset.inPeriod\":{\"value\":\"in period {calendarIcon} {range}\",\"comment\":\"Don't translate placeholders '{calendarIcon}', '{range}'. Example text: 'in period (calendar) from 2 months ago to 2 months ahead'\",\"limit\":0},\"filters.config.warning.multipleProjectConfigs\":{\"value\":\"There is more than one project date filter configuration associated with this project. The first one was used.\",\"comment\":\"Displayed if there is more than one project date filter configuration associated with the project.\",\"limit\":0},\"filters.config.warning.multipleWorkspacesConfigs\":{\"value\":\"There is more than one workspace date filter configuration associated with this workspace. The first one was used.\",\"comment\":\"Displayed if there is more than one workspace date filter configuration associated with the workspace.\",\"limit\":0},\"filters.config.warning.selectedFilterNotValid\":{\"value\":\"The default filter option is not valid, using the first option available instead.\",\"comment\":\"Displayed if the default option for new dashboards is not valid.\",\"limit\":0},\"filters.config.warning.allOptionsHidden\":{\"value\":\"The dashboard date filter configuration was ignored because it would have hidden all the filter options.\",\"comment\":\"Displayed if applying a dashboard config would make all the filter options hidden.\",\"limit\":0},\"filters.config.warning.conflictingIdentifiers\":{\"value\":\"The dashboard date filter configuration was ignored because it contains date filter options with identical identifiers.\",\"comment\":\"Displayed if applying a dashboard config would make it contain more than one option with the same identifier.\",\"limit\":0},\"filters.config.warning.notAvailable\":{\"value\":\"The project date filter configuration is either not defined or you do not have the permissions to access it.\",\"comment\":\"Displayed if there is an error getting the project level config.\",\"limit\":0},\"filters.config.warning.workspace.notAvailable\":{\"value\":\"The workspace date filter configuration is either not defined or you do not have the permissions to access it.\",\"comment\":\"Displayed if there is an error getting the workspace level config.\",\"limit\":0},\"kpi.noData\":{\"value\":\"No data for current filter settings. Try changing the filters.\",\"comment\":\"\",\"limit\":0},\"kpiPop.change\":{\"value\":\"change\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.filters\":{\"value\":\"Dashboard contains filter changes that will be saved in the schedule.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.filters.not.saved\":{\"value\":\"Dashboard filters saved in the schedule will not be affected.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.email.attachment.filter\":{\"value\":\"(with currently set filters)\",\"comment\":\"Keep the parentheses. Attachment with filters included.\",\"limit\":0},\"dialogs.schedule.email.attachment.label\":{\"value\":\"Attachment:\",\"comment\":\"Attachment of the scheduled email.\",\"limit\":0},\"dialogs.schedule.email.attachments.label\":{\"value\":\"Attachments:\",\"comment\":\"Attachments of the scheduled email.\",\"limit\":0},\"dialogs.schedule.email.attachment.select\":{\"value\":\"Select attachments\",\"comment\":\"Label of a button that opens attachment selection\",\"limit\":0},\"dialogs.schedule.email.attachment.select.disabled.message|insight\":{\"value\":\"This dashboard does not contain any insights.\",\"comment\":\"Message for button to add insights to the export, if there are no insights.\",\"limit\":0},\"dialogs.schedule.email.attachment.select.disabled.message|report\":{\"value\":\"This dashboard does not contain any reports.\",\"comment\":\"Message for button to add reports to the export, if there are no reports.\",\"limit\":0,\"translate\":false},\"dialogs.schedule.email.attachment.select.dashboard.header\":{\"value\":\"Dashboard (PDF)\",\"comment\":\"Heading of checkbox that selects dashboard to be exported in PDF file format\",\"limit\":0},\"dialogs.schedule.email.attachment.select.widgets.header|report\":{\"value\":\"Reports (CSV, XLSX)\",\"comment\":\"Heading of section of checkboxes for selecting reports to be exported as CSV of XLSX file\",\"limit\":0,\"translate\":false},\"dialogs.schedule.email.attachment.select.widgets.header|insight\":{\"value\":\"Insights (CSV, XLSX)\",\"comment\":\"Heading of section of checkboxes for selecting insights to be exported as CSV of XLSX file\",\"limit\":0},\"dialogs.schedule.email.headline\":{\"value\":\"Schedule email delivery\",\"comment\":\"Translate as imperative. Schedule emailing whole KPI dashboard.\",\"limit\":0},\"dialogs.schedule.email.heading\":{\"value\":\"Schedule export\",\"comment\":\"Translate as imperative. Schedule exporting whole dashboard and insights\",\"limit\":0},\"dialogs.schedule.email.message.label\":{\"value\":\"Message:\",\"comment\":\"Message of the scheduled email.\",\"limit\":0},\"dialogs.schedule.email.unsubscribed.recipients\":{\"value\":\"{n, plural, one {1 recipient unsubscribed} other {# recipients unsubscribed}} from this schedule.\",\"comment\":\"Translate only 'recipient unsubscribed'/'recipients unsubscribed' and 'from this schedule.' to form a proper sentence with correct plural form for given language\",\"limit\":0},\"dialogs.schedule.email.repeats.label\":{\"value\":\"Repeats:\",\"comment\":\"Count of repeats of the scheduled email.\",\"limit\":0},\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":{\"value\":\"on day {date}\",\"comment\":\"Example 'on day 2 of January'. Placeholder '{date}' refers to ordinal number of day of the month. Don't translate placeholder '{date}'.\",\"limit\":0},\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":{\"value\":\"on the {week, select, 1 {first} 2 {second} 3 {third} 4 {fourth} other {last}} {day}\",\"comment\":\"Example: 'on the first Friday'. Translate only uppercase in 'ON THE {week, select, 1 {FIRST} 2 {SECOND} 3 {THIRD} 4 {FOURTH} other {LAST}} {day}'\",\"limit\":0},\"dialogs.schedule.email.repeats.every\":{\"value\":\"every\",\"comment\":\"Example 'every 1 month'. FIXME: This needs to be split into variants 'every day', 'every week', ... since some languages uses different gramatical gender for the 'every' based on the subject.\",\"limit\":0},\"dialogs.schedule.email.repeats.frequencies.day\":{\"value\":\"{n, plural, one {day} other {days}}\",\"comment\":\"Translate only uppercase in '{n, plural, one {DAY} other {DAYS}}'.\",\"limit\":0},\"dialogs.schedule.email.repeats.frequencies.month\":{\"value\":\"{n, plural, one {month} other {months}}\",\"comment\":\"Translate only uppercase in '{n, plural, one {MONTH} other {MONTHS}}'.\",\"limit\":0},\"dialogs.schedule.email.repeats.frequencies.week\":{\"value\":\"{n, plural, one {week} other {weeks}}\",\"comment\":\"Translate only uppercase in '{n, plural, one {WEEK} other {WEEKS}}'.\",\"limit\":0},\"dialogs.schedule.email.repeats.types.custom\":{\"value\":\"Custom\",\"comment\":\"Repeats the schedule email using custom rules defined by the user.\",\"limit\":0},\"dialogs.schedule.email.repeats.types.daily\":{\"value\":\"Daily\",\"comment\":\"Repeats the schedule email daily.\",\"limit\":0},\"dialogs.schedule.email.repeats.types.monthly\":{\"value\":\"Monthly on the {week, select, 1 {first} 2 {second} 3 {third} 4 {fourth} other {last}} {day}\",\"comment\":\"Example: 'Monthly on the first Friday'. Translate only uppercase in 'MONTHLY ON THE {week, select, 1 {FIRST} 2 {SECOND} 3 {THIRD} 4 {FOURTH} other {LAST}} {day}'\",\"limit\":0},\"dialogs.schedule.email.repeats.types.weekly\":{\"value\":\"Weekly on {day}\",\"comment\":\"Example: 'Weekly on Friday'. Placeholder '{day}' refers to a day of a week. Don't translate placeholder '{day}'.\",\"limit\":0},\"dialogs.schedule.email.subject.label\":{\"value\":\"Subject:\",\"comment\":\"Subject of the schedule email.\",\"limit\":0},\"dialogs.schedule.email.time.label\":{\"value\":\"First occurrence:\",\"comment\":\"Translate as imperative. Date time of the schedule email.\",\"limit\":0},\"dialogs.schedule.email.to.label\":{\"value\":\"To:\",\"comment\":\"Emails of the schedule email.\",\"limit\":0},\"dialogs.schedule.email.message.placeholder\":{\"value\":\"Hello,\\n\\nYour scheduled email is ready. You can download the dashboard in attachments.\",\"comment\":\"Don't translate '\\n\\n' which adds 2 new lines to the text.\",\"limit\":0},\"dialogs.schedule.email.submit\":{\"value\":\"Schedule\",\"comment\":\"Translate as imperative. Submit the schedule config form.\",\"limit\":0},\"dialogs.schedule.email.save\":{\"value\":\"Save\",\"comment\":\"Translate as imperative. It's caption of a button for saving scheduled mail\",\"limit\":0},\"dialogs.schedule.email.format.options\":{\"value\":\"Format options\",\"comment\":\"Header of a formatting dialog. Not an imperative!\",\"limit\":0},\"dialogs.schedule.email.insight.format|insight\":{\"value\":\"Insight format:\",\"comment\":\"Label of a dropdown for selecting export format\",\"limit\":0},\"dialogs.schedule.email.insight.format|report\":{\"value\":\"Report format:\",\"comment\":\"Label of a dropdown for selecting export format\",\"limit\":0,\"translate\":false},\"dialogs.schedule.email.attribute.merged\":{\"value\":\"Keep attribute cells merged\",\"comment\":\"Label of a checkbox field\",\"limit\":0},\"dialogs.schedule.email.show.filters\":{\"value\":\"Show what filters are applied\",\"comment\":\"Label of a checkbox field\",\"limit\":0},\"dialogs.schedule.management.title\":{\"value\":\"Scheduled exports\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.delete\":{\"value\":\"Delete the schedule.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.delete.dialog\":{\"value\":\"Delete schedule?\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.delete.dialog.confirm\":{\"value\":\"<b>The schedule</b> will be permanently deleted.\",\"comment\":\"Do not translate html tags <b>, </b>\",\"limit\":0},\"dialogs.schedule.management.noSchedules\":{\"value\":\"The dashboard contains no scheduled exports.{br}Add one now.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.noSchedules.byUser\":{\"value\":\"You have not scheduled any exports yet.{br}Add one now.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.addSchedule\":{\"value\":\"Add schedule\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.recipients\":{\"value\":\"{n, plural, one {# recipient} other {# recipients}}\",\"comment\":\"Translate only uppercase in '{n, plural, one {# RECIPIENT} other {# RECIPIENTS}}'.\",\"limit\":0},\"dialogs.schedule.management.recipients.onlyYou\":{\"value\":\"Only you\",\"comment\":\"There is no other recipient than you.\",\"limit\":0},\"dialogs.schedule.management.attachments.dashboard\":{\"value\":\"Dashboard\",\"comment\":\"Type of attachment.\",\"limit\":0},\"dialogs.schedule.management.attachments.widgets|insight\":{\"value\":\"{n, plural, one {# insight} other {# insights}}\",\"comment\":\"Translate only uppercase in '{n, plural, one {# INSIGHT} other {# INSIGHTS}}'.\",\"limit\":0},\"dialogs.schedule.management.attachments.widgets|report\":{\"value\":\"{n, plural, one {# report} other {# reports}}\",\"comment\":\"Translate only uppercase in '{n, plural, one {# REPORT} other {# REPORTS}}'.\",\"limit\":0,\"translate\":false},\"dialogs.schedule.management.attachments.mixed|insight\":{\"value\":\"Dashboard and {n, plural, one {# insight} other {# insights}}\",\"comment\":\"In '{n, plural, one {# INSIGHT} other {# INSIGHTS}}', translate only uppercase words.\",\"limit\":0},\"dialogs.schedule.management.attachments.mixed|report\":{\"value\":\"Dashboard and {n, plural, one {# report} other {# reports}}\",\"comment\":\"In '{n, plural, one {# REPORT} other {# REPORTS}}', translate only uppercase words.\",\"limit\":0,\"translate\":false},\"dialogs.schedule.management.load.error\":{\"value\":\"Failed to load. Try again later.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.delete.error\":{\"value\":\"Failed to delete schedule. Try again later.\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.tab.all\":{\"value\":\"all\",\"comment\":\"\",\"limit\":0},\"dialogs.schedule.management.tab.user\":{\"value\":\"created by me\",\"comment\":\"\",\"limit\":0},\"options.menu.schedule.email.recipient.invalid\":{\"value\":\"This is not a valid email address.\",\"comment\":\"Translate as imperative. Error message for recipient email address\",\"limit\":0},\"options.menu.schedule.email.recipient.warning.existed\":{\"value\":\"You have already added this recipient.\",\"comment\":\"Translate as imperative. Warning email has been existed on recipient field in schedule email dialog\",\"limit\":0},\"options.menu.schedule.email.recipient.warning.belong.workspace\":{\"value\":\"This email address does not belong to this workspace. The recipient may receive sensitive data.\",\"comment\":\"Translate as imperative. Warning email on recipient field in schedule email dialog\",\"limit\":0},\"options.menu.schedule.email.recipient.external.not.allowed\":{\"value\":\"This email address does not belong to this workspace. Only the author of the schedule can add this email address.\",\"comment\":\"Translate as imperative. Warning email on recipient field in schedule email dialog\",\"limit\":0},\"delete\":{\"value\":\"Delete\",\"comment\":\"\",\"limit\":0},\"close\":{\"value\":\"Close\",\"comment\":\"Label of a button for closing a dialog window\",\"limit\":0},\"cancel\":{\"value\":\"Cancel\",\"comment\":\"\",\"limit\":0},\"gs.date.at\":{\"value\":\"at\",\"comment\":\"\",\"limit\":0},\"gs.date.today\":{\"value\":\"Today\",\"comment\":\"\",\"limit\":0},\"gs.date.tomorrow\":{\"value\":\"Tomorrow\",\"comment\":\"\",\"limit\":0},\"gs.date.yesterday\":{\"value\":\"Yesterday\",\"comment\":\"\",\"limit\":0},\"kpi.alertBox.title\":{\"value\":\"Set an alert on KPI change\",\"comment\":\"\",\"limit\":0},\"kpi.alertBox.example\":{\"value\":\"e.g.\",\"comment\":\"\",\"limit\":0},\"kpi.alertBox.unverifiedEmail\":{\"value\":\"Sorry, you can't set an alert. Make sure your email is verified. If that doesn't help, ask your administrator to update your permissions.\",\"comment\":\"\",\"limit\":0},\"kpi.alertBox.disabledInReadOnly\":{\"value\":\"Alerting is disabled in the read-only mode\",\"comment\":\"\",\"limit\":0},\"kpi.error.view\":{\"value\":\"KPI cannot be displayed. Contact your administrator to fix the KPI definition.\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.delete\":{\"value\":\"Delete\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.deleting\":{\"value\":\"Deleting…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"kpiAlertDialog.emailMe\":{\"value\":\"Email me\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.emailMeWhen\":{\"value\":\"{emailMe} when this KPI is\",\"comment\":\"Don't translate placeholder '{emailMe}'.\",\"limit\":0},\"kpiAlertDialog.emailInfo\":{\"value\":\"Email will be sent to {userEmail}\",\"comment\":\"Don't translate placeholder '{userEmail}'.\",\"limit\":0},\"kpiAlertDialog.invalidNumber\":{\"value\":\"<strong>This number is not valid.</strong>{br}Double-check it and try again.\",\"comment\":\"Do not translate HTML markup enclosed in <>.\",\"limit\":0},\"kpiAlertDialog.filtersDiffer\":{\"value\":\"KPI is now filtered differently than when the alert was set up.\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.filtersApply\":{\"value\":\"Apply alert filters to dashboard\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.savingFailed\":{\"value\":\"Saving alert failed. Please try again.\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.deleteingFailed\":{\"value\":\"Deleting alert failed. Please try again.\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.brokenAlert\":{\"value\":\"Broken alert\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.brokenAlertAppeal\":{\"value\":\"To see correct KPI value, update the filters in this alert. You can also remove the alert.\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.brokenAlertDefaultDateLabel\":{\"value\":\"Date\",\"comment\":\"Label used in broken alert dialog in case no other date label is found.\",\"limit\":0},\"kpiAlertDialog.removedFilters\":{\"value\":\"Filters removed from dashboard\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.ignoredFilters\":{\"value\":\"Filters ignored for this kpi\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.updateTitle\":{\"value\":\"Update\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.updateBrokenTitle\":{\"value\":\"Update filters\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.updatingTitle\":{\"value\":\"Updating…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"kpiAlertDialog.updateBrokenFailed\":{\"value\":\"Updating filters failed. Please try again.\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.setTitle\":{\"value\":\"Set alert\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.settingTitle\":{\"value\":\"Setting…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"kpiAlertDialog.threshold.above\":{\"value\":\"above\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.threshold.below\":{\"value\":\"below\",\"comment\":\"\",\"limit\":0},\"kpiAlertDialog.withAttributeFilters\":{\"value\":\"{numFilters} more {numFilters, select, 1 {filter} other {filters}} applied\",\"comment\":\"Don't translate placeholder '{numFilters}'. In '{numFilters, select, 1 {FILTER} other {FILTERS}}' translate only uppercase words.\",\"limit\":0},\"messages.exportResultError\":{\"value\":\"Failed to export the data. Try again later.\",\"comment\":\"Error dialog. Exporting insight to the file fails.\",\"limit\":0},\"messages.exportResultRestrictedError|insight\":{\"value\":\"You cannot export this insight because it contains restricted data.\",\"comment\":\"Error dialog. Exporting insight to the file fails because contains restricted data.\",\"limit\":0},\"messages.exportResultRestrictedError|report\":{\"value\":\"You cannot export this report because it contains restricted data.\",\"comment\":\"Error dialog. Exporting report to the file fails because contains restricted data.\",\"limit\":0,\"translate\":false},\"messages.exportResultStart\":{\"value\":\"Export in progress\",\"comment\":\"Dialog. Export of the visualization to the file is in progress.\",\"limit\":0},\"messages.exportResultSuccess\":{\"value\":\"Export successful.\",\"comment\":\"Dialog. Export of the visualization to the file is done.\",\"limit\":0},\"messages.sharingChangedSuccess\":{\"value\":\"Sharing updated.\",\"comment\":\"Global messages. Change of dashboard sharing is done.\",\"limit\":0},\"messages.sharingChangedError.general\":{\"value\":\"Failed to update the sharing settings. Try again later.\",\"comment\":\"Global messages. Change of dashboard sharing fails.\",\"limit\":0},\"messages.sharingDialogError.general\":{\"value\":\"Failed to load the sharing settings. Try again later.\",\"comment\":\"Global messages. Load of dashboard sharing dialog fails.\",\"limit\":0},\"visualization.dataTooLarge.headline\":{\"value\":\"Too many data points to display\",\"comment\":\"\",\"limit\":0},\"visualization.dataTooLarge.text\":{\"value\":\"Try applying one or more filters to your dashboard.\",\"comment\":\"\",\"limit\":0},\"visualization.execute_protected_report.headline\":{\"value\":\"You are not authorized to see this report\",\"comment\":\"\",\"limit\":0},\"visualization.execute_protected_report.text\":{\"value\":\"Contact your administrator.\",\"comment\":\"\",\"limit\":0},\"visualization.alert_not_supported\":{\"value\":\"Alerts are not supported for the static date period\",\"comment\":\"\",\"limit\":0},\"visualization.empty.headline\":{\"value\":\"No data for your filter selection\",\"comment\":\"\",\"limit\":0},\"visualization.error.headline|insight\":{\"value\":\"Sorry, we can't display this insight\",\"comment\":\"\",\"limit\":0},\"visualization.error.headline|report\":{\"value\":\"Sorry, we can't display this report\",\"comment\":\"\",\"limit\":0,\"translate\":false},\"visualization.error.text\":{\"value\":\"Contact your administrator.\",\"comment\":\"\",\"limit\":0},\"options.button.bubble|insight\":{\"value\":\"Export insight data\",\"comment\":\"Show this message when hovering on the options button\",\"limit\":0},\"options.button.bubble|report\":{\"value\":\"Export report data\",\"comment\":\"Show this message when hovering on the options button\",\"limit\":0,\"translate\":false},\"options.menu.export.CSV\":{\"value\":\"CSV\",\"comment\":\"Export to file with CSV extension.\",\"limit\":0},\"options.menu.export.XLSX\":{\"value\":\"XLSX\",\"comment\":\"Export to file with XLSX extension.\",\"limit\":0},\"options.menu.unsupported.error._measure|insight\":{\"value\":\"The insight cannot be exported at the moment. Try applying different filters, or using different measures or attributes.\",\"comment\":\"Error popup. Insight cannot be exported to the file because of wrong setting of filters, measures or attributes.\",\"limit\":0},\"options.menu.unsupported.error._metric|insight\":{\"value\":\"The insight cannot be exported at the moment. Try applying different filters, or using different metrics or attributes.\",\"comment\":\"Error popup. Insight cannot be exported to the file because of wrong setting of filters, metrics or attributes.\",\"limit\":0},\"options.menu.unsupported.error._measure|report\":{\"value\":\"The report cannot be exported at the moment. Try applying different filters, or using different measures or attributes.\",\"comment\":\"Error popup. Report cannot be exported to the file because of wrong setting of filters, measures or attributes.\",\"limit\":0,\"translate\":false},\"options.menu.unsupported.error._metric|report\":{\"value\":\"The report cannot be exported at the moment. Try applying different filters, or using different metrics or attributes.\",\"comment\":\"Error popup. Report cannot be exported to the file because of wrong setting of filters, metrics or attributes.\",\"limit\":0,\"translate\":false},\"options.menu.unsupported.loading|insight\":{\"value\":\"The insight cannot be exported at the moment.\",\"comment\":\"Error popup. Insight cannot be exported to the file.\",\"limit\":0},\"options.menu.unsupported.loading|report\":{\"value\":\"The report cannot be exported at the moment.\",\"comment\":\"Error popup. Report cannot be exported to the file.\",\"limit\":0,\"translate\":false},\"export.defaultTitle|insight\":{\"value\":\"Untitled insight\",\"comment\":\"Default title for exported file\",\"limit\":0},\"export.defaultTitle|report\":{\"value\":\"Untitled report\",\"comment\":\"Default title for exported file\",\"limit\":0,\"translate\":false},\"export_unsupported.disabled\":{\"value\":\"Export is not supported\",\"comment\":\"Export to the file not supported.\",\"limit\":0},\"widget.options.menu.exportToCSV\":{\"value\":\"Export to CSV\",\"comment\":\"Export to file with CSV extension.\",\"limit\":0},\"widget.options.menu.exportToXLSX\":{\"value\":\"Export to XLSX\",\"comment\":\"Export to file with XLSX extension.\",\"limit\":0},\"widget.options.menu.scheduleExport\":{\"value\":\"Schedule export\",\"comment\":\"\",\"limit\":0},\"share.button.text\":{\"value\":\"Share\",\"comment\":\"Text of button that opens share dialog\",\"limit\":0},\"dashboard.error.empty.heading\":{\"value\":\"This dashboard is empty\",\"comment\":\"The user has a dashboard that contains no widgets.\",\"limit\":0},\"dashboard.error.empty.text|insight\":{\"value\":\"All insights were removed.\",\"comment\":\"The user has a dashboard that contains no widgets.\",\"limit\":0},\"dashboard.error.empty.text|report\":{\"value\":\"All reports were removed.\",\"comment\":\"The user has a dashboard that contains no widgets.\",\"translate\":false,\"limit\":0},\"dashboard.shareDialog.underLenientControl.label\":{\"value\":\"Other users can access this dashboard if they drill to it\",\"comment\":\"Label of checkbox that sets if other users than the ones in the list above the checkbox will be able to access the dashboard if they drill into it from another dashboard.\",\"limit\":0},\"dashboard.shareDialog.lock.label\":{\"value\":\"Only admins can edit this dashboard\",\"comment\":\"Label of checkbox that sets edit right for the dashboard\",\"limit\":0},\"header.lockStatus.tooltip\":{\"value\":\"<b>This dashboard is locked.</b> Only administrators can edit this dashboard.\",\"comment\":\"Shown when hovering over lock indicator. Dont translate html tags <b>, </b>\",\"limit\":0},\"header.shareStatus.private.text\":{\"value\":\"Private\",\"comment\":\"Share indicator text when dashboard is private\",\"limit\":0},\"header.shareStatus.private.strict.tooltip\":{\"value\":\"Only you can view and edit this dashboard.\",\"comment\":\"Shown when hovering over share indicator of private dashboard and strict access.\",\"limit\":0},\"header.shareStatus.private.not.strict.tooltip\":{\"value\":\"The creator can edit this dashboard. Other users with appropriate user roles can edit this dashboard when they drill to it.\",\"comment\":\"Shown when hovering over share indicator of private dashboard and not strict access.\",\"limit\":0},\"dashboard.shareDialog.removeAccessGranteeTooltip\":{\"value\":\"Remove access to this dashboard.\",\"comment\":\"Text of the tooltip shown above button that removes user or group dashboard access right.\",\"limit\":0},\"dashboard.shareDialog.removeAccessCreatorTooltip\":{\"value\":\"The user that created this dashboard. Creators cannot be removed.\",\"comment\":\"Text of the tooltip shown above disabled button that removes user dashboard access right. Shown in the case when user cannot be removed because he is the creator of the dashboard.\",\"limit\":0},\"attributesDropdown.placeholder\":{\"value\":\"Search attributes…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"attributesDropdown.configuration\":{\"value\":\"Configuration\",\"comment\":\"Configuration button label in attribute filter dropdown\",\"limit\":0},\"attributesDropdown.itemsFiltered\":{\"value\":\"Items are filtered\",\"comment\":\"This message is displayed when attribute elements are being filtered out by parent filters\",\"limit\":0},\"attributesDropdown.allItemsFiltered\":{\"value\":\"All items are filtered out\",\"comment\":\"This message is displayed when there are no items available because they were filtered out by parent filters\",\"limit\":0},\"attributesDropdown.itemsFiltered.tooltip\":{\"value\":\"Items are filtered by: <strong>{filters}</strong>\",\"comment\":\"Do not translate HTML markup enclosed in <> and {filters} placeholder as it will be replaced by list of filter names.\",\"limit\":0},\"attributesDropdown.save\":{\"value\":\"Save\",\"comment\":\"Save button label in attribute filter dropdown configuration\",\"limit\":0},\"attributesDropdown.filterBy\":{\"value\":\"Filter by\",\"comment\":\"Filter section label in attribute filter dropdown configuration\",\"limit\":0},\"attributesDropdown.displayValuesAs\":{\"value\":\"Display values as\",\"comment\":\"Filter section label in attribute filter dropdown configuration. Displayed before dropdown button that changes form of the attribute used in insight. For example 'Display as: Shortened name'.\",\"limit\":0},\"attributesDropdown.title\":{\"value\":\"Title\",\"comment\":\"\",\"limit\":0},\"attributesDropdown.title.reset\":{\"value\":\"Reset\",\"comment\":\"\",\"limit\":0},\"attributesDropdown.selectionMode\":{\"value\":\"Selection\",\"comment\":\"Dropdown subsection title.\",\"limit\":0},\"attributesDropdown.selectionMode.multi\":{\"value\":\"Multiple values\",\"comment\":\"Input selection choice.\",\"limit\":0},\"attributesDropdown.selectionMode.single\":{\"value\":\"Single value\",\"comment\":\"Input selection choice.\",\"limit\":0},\"attributesDropdown.selectionMode.disabled.tooltip\":{\"value\":\"Single value selection is not allowed if any filters are selected in Filter by.To use the Single value selection, disable all filters in Filter by.\",\"comment\":\"Tooltip describing why selection value is disabled.\",\"limit\":0},\"attributesDropdown.parentFilter.disabled.tooltip\":{\"value\":\"Filtering by other filters is disabled for Single value selection. To set Filter by, select the multiple value selection.\",\"comment\":\"Tooltip describing why choosing parent filters is disabled.\",\"limit\":0},\"attributesDropdown.noConnectionMessage\":{\"value\":\"<strong>{childTitle}</strong> cannot be filtered by <strong>{parentTitle}</strong>. There is no connection between the filter attributes in the data model.\",\"comment\":\"Do not translate HTML markup enclosed in <> and placeholders enclosed in {}.\",\"limit\":0},\"attributesDropdown.details.dataset\":{\"value\":\"Dataset\",\"comment\":\"\",\"limit\":0},\"attributesDropdown.details.values\":{\"value\":\"Values\",\"comment\":\"\",\"limit\":0},\"attributesDropdown.details.shortening_decoration\":{\"value\":\"…and {count} more\",\"comment\":\"Don't translate placeholder '{count}'. Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"attributesDropdown.removeTooltip\":{\"value\":\"Remove from dashboard\",\"comment\":\"Tooltip text of button for deleting filter\",\"limit\":0},\"layout.header.characters.left\":{\"value\":\"{currentCharactersCount} / {maximumCharactersCount} characters left\",\"comment\":\"Number of characters that can be written e.g. : 4 /20 characters left\",\"limit\":0},\"layout.header.add.title.placeholder\":{\"value\":\"Add Title here...\",\"comment\":\"Add title component placeholder text\",\"limit\":0},\"layout.header.add.description.placeholder\":{\"value\":\"Add Description here...\",\"comment\":\"Add description component placeholder text\",\"limit\":0},\"error\":{\"value\":\"Error\",\"comment\":\"\",\"limit\":0},\"controlButtons.edit.value\":{\"value\":\"Edit\",\"comment\":\"\",\"limit\":0},\"controlButtons.saveAndPublish.value\":{\"value\":\"Save & Publish\",\"comment\":\"\",\"limit\":0},\"controlButtons.save.value\":{\"value\":\"Save\",\"comment\":\"\",\"limit\":0},\"controlButtons.saveAndPublish.title\":{\"value\":\"All changes will be immediately visible to everyone who can access this dashboard.\",\"comment\":\"\",\"limit\":0},\"controlButtons.saveAsPrivate.title\":{\"value\":\"All changes will be saved.\",\"comment\":\"\",\"limit\":0},\"controlButtons.saveAndPublish.disable.empty.title\":{\"value\":\"Empty dashboard cannot be saved\",\"comment\":\"\",\"limit\":0},\"controlButtons.saveAndPublish.disable.noChanges.title\":{\"value\":\"There are no changes to save\",\"comment\":\"\",\"limit\":0},\"controlButtons.saving.value\":{\"value\":\"Saving…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"gs.visualizationsList.tabs.all\":{\"value\":\"all\",\"comment\":\"\",\"limit\":0},\"gs.visualizationsList.tabs.my\":{\"value\":\"created by me\",\"comment\":\"\",\"limit\":0},\"visualizationsList.noInsights|insight\":{\"value\":\"This workspace contains no insights.\",\"comment\":\"\",\"limit\":0},\"visualizationsList.noInsights|report\":{\"value\":\"This workspace contains no reports.\",\"comment\":\"\",\"limit\":0,\"translate\":false},\"visualizationsList.create|insight\":{\"value\":\"Create insight\",\"comment\":\"\",\"limit\":0},\"visualizationsList.create|report\":{\"value\":\"Create report\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"visualizationsList.noUserInsights|insight\":{\"value\":\"No insights created.\",\"comment\":\"\",\"limit\":0},\"visualizationsList.noUserInsights|report\":{\"value\":\"No reports created.\",\"comment\":\"\",\"limit\":0,\"translate\":false},\"visualizationsList.noVisualizationsFound|insight\":{\"value\":\"No insight matched.\",\"comment\":\"\",\"limit\":0},\"visualizationsList.noVisualizationsFound|report\":{\"value\":\"No report matched.\",\"comment\":\"\",\"limit\":0,\"translate\":false},\"search_insights|insight\":{\"value\":\"Search all insights…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"search_insights|report\":{\"value\":\"Search all reports…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0,\"translate\":false},\"save.as.new\":{\"value\":\"Save as new\",\"comment\":\"\",\"limit\":0},\"addPanel.deleteItem\":{\"value\":\"Drop to remove\",\"comment\":\"\",\"limit\":0},\"addPanel.newItem\":{\"value\":\"New item\",\"comment\":\"\",\"limit\":0},\"addPanel.attributeFilter\":{\"value\":\"Attribute Filter\",\"comment\":\"\",\"limit\":0},\"addPanel.attributeFilter.tooltip.no_attributes\":{\"value\":\"The attribute filter requires an attribute.\",\"comment\":\"\",\"limit\":0},\"addPanel.attributeFilter.tooltip.no_attributes.link\":{\"value\":\"Learn more\",\"comment\":\"\",\"limit\":0},\"addPanel.kpi\":{\"value\":\"Key Performance Indicator\",\"comment\":\"\",\"limit\":0},\"addPanel.kpi.tooltip.no_measures._measure\":{\"value\":\"The Key Performance Indicator requires a calculated measure.\",\"comment\":\"\",\"limit\":0},\"addPanel.kpi.tooltip.no_measures._metric\":{\"value\":\"The Key Performance Indicator requires a metric.\",\"comment\":\"\",\"limit\":0},\"addPanel.kpi.tooltip.no_measures.link\":{\"value\":\"Learn more\",\"comment\":\"\",\"limit\":0},\"visualizationsList.dragToAdd\":{\"value\":\"Drag to add\",\"comment\":\"\",\"limit\":0},\"visualizationsList.savedVisualizations|insight\":{\"value\":\"Saved insights\",\"comment\":\"\",\"limit\":0},\"visualizationsList.savedVisualizations|report\":{\"value\":\"Saved reports\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.drillConfig.selectDashboard\":{\"value\":\"Choose dashboard…\",\"comment\":\"Hint guiding users that drill target dashboard in select box has to be selected. Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":{\"value\":\"Search all dashboards…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.drillConfig.forbiddenDashboard\":{\"value\":\"(Not shared with you)\",\"comment\":\"Placeholder used instead of the name of a dashboard in a list if dashboard name cannot be shown because dashboard was not shared with the user..\",\"limit\":0},\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":{\"value\":\"Dashboard is not shared with you, but other users have access to this dashboard.\",\"comment\":\"Tooltip explaining the accessibility of the dashboard.\",\"limit\":0},\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":{\"value\":\"Dashboard is not shared with you, but all users can access it if they drill to it.\",\"comment\":\"Tooltip explaining the accessibility of the dashboard.\",\"limit\":0},\"configurationPanel.remove.form.dashboard\":{\"value\":\"Remove from dashboard\",\"comment\":\"\",\"limit\":0},\"filterBar.filter.drop\":{\"value\":\"drop to add\",\"comment\":\"\",\"limit\":0},\"filterBar.filter.addFilterPlaceholder\":{\"value\":\"Drag {icon} here\",\"comment\":\"Do not translate variable enclosed in {}.\",\"limit\":0},\"filterBar.filter.dropzone.tooltip\":{\"value\":\"Drag the attribute filter here.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.title\":{\"value\":\"Configuration\",\"comment\":\"Label of widget configuration section\",\"limit\":0},\"configurationPanel.comparison\":{\"value\":\"Comparison\",\"comment\":\"\",\"limit\":0},\"configurationPanel.compareWith\":{\"value\":\"Compare with\",\"comment\":\"\",\"limit\":0},\"configurationPanel.increasingNumberIs\":{\"value\":\"Increasing number is\",\"comment\":\"\",\"limit\":0},\"configurationPanel.comparisonTypeItems.previousPeriod\":{\"value\":\"Previous period\",\"comment\":\"\",\"limit\":0},\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":{\"value\":\"Same period in previous year\",\"comment\":\"\",\"limit\":0},\"configurationPanel.comparisonTypeItems.noComparison\":{\"value\":\"No comparison\",\"comment\":\"\",\"limit\":0},\"configurationPanel.comparisonDirectionItems.green\":{\"value\":\"Green\",\"comment\":\"\",\"limit\":0},\"configurationPanel.comparisonDirectionItems.red\":{\"value\":\"Red\",\"comment\":\"\",\"limit\":0},\"configurationPanel.unlistedMetric._measure\":{\"value\":\"Unlisted measure\",\"comment\":\"\",\"limit\":0},\"configurationPanel.unlistedMetric._metric\":{\"value\":\"Unlisted metric\",\"comment\":\"\",\"limit\":0},\"configurationPanel.unlistedMetricIconTitle._measure\":{\"value\":\"This measure is hidden. Only you can see it.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.unlistedMetricIconTitle._metric\":{\"value\":\"This metric is hidden. Only you can see it.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.selectMeasurePlaceholder._measure\":{\"value\":\"Select measure…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.selectMeasurePlaceholder._metric\":{\"value\":\"Select metric…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.selectComparisonPlaceholder\":{\"value\":\"Select comparison…\",\"comment\":\"Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.selectComparisonDirectionPlaceholder\":{\"value\":\"Select positive/negative\",\"comment\":\"\",\"limit\":0},\"configurationPanel.measure._measure\":{\"value\":\"Measure\",\"comment\":\"\",\"limit\":0},\"configurationPanel.measure._metric\":{\"value\":\"Metric\",\"comment\":\"\",\"limit\":0},\"configurationPanel.filterBy\":{\"value\":\"Filter by\",\"comment\":\"\",\"limit\":0},\"configurationPanel.date\":{\"value\":\"Date\",\"comment\":\"\",\"limit\":0},\"configurationPanel.dateAs\":{\"value\":\"as\",\"comment\":\"\",\"limit\":0},\"configurationPanel.vizCantBeFilteredByAttribute|insight\":{\"value\":\"The insight cannot be filtered by {attributeName}. Unselect the check box.\",\"comment\":\"Don't translate placeholder '{attributeName}'.\",\"limit\":0},\"configurationPanel.vizCantBeFilteredByAttribute|report\":{\"value\":\"The report cannot be filtered by {attributeName}. Unselect the check box.\",\"comment\":\"Don't translate placeholder '{attributeName}'.\",\"translate\":false,\"limit\":0},\"configurationPanel.kpiCantBeFilteredByAttribute\":{\"value\":\"The kpi cannot be filtered by {attributeName}. Unselect the check box.\",\"comment\":\"Don't translate placeholder '{attributeName}'.\",\"limit\":0},\"configurationPanel.vizCantBeFilteredByDate|insight\":{\"value\":\"The insight cannot be filtered by Date. Unselect the check box.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.vizCantBeFilteredByDate|report\":{\"value\":\"The report cannot be filtered by Date. Unselect the check box.\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.kpiCantBeFilteredByDate\":{\"value\":\"The kpi cannot be filtered by Date. Unselect the check box.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.unrelatedVizDateInfo|insight\":{\"value\":\"\\\"{dateDataSet}\\\" can no longer be applied to the insight. Select a different dimension or edit the insight.\",\"comment\":\"Don't translate placeholder '{dateDataSet}' and keep '\\\"' characters as are.\",\"limit\":0},\"configurationPanel.unrelatedVizDateInfo|report\":{\"value\":\"\\\"{dateDataSet}\\\" can no longer be applied to the report. Select a different dimension or edit the report.\",\"comment\":\"Don't translate placeholder '{dateDataSet}' and keep '\\\"' characters as are.\",\"translate\":false,\"limit\":0},\"configurationPanel.unrelatedKpiDateInfo\":{\"value\":\"\\\"{dateDataSet}\\\" can no longer be applied to the kpi. Select a different dimension or edit the kpi.\",\"comment\":\"Don't translate placeholder '{dateDataSet}' and keep '\\\"' characters as are.\",\"limit\":0},\"configurationPanel.breakAlertWarning\":{\"value\":\"\\n            Users have set up {numAlerts} {numAlerts, select, 1 {alert} other {alerts}}\\n            for this KPI. Modifying the KPI will affect {numAlerts, select, 1 {this alert} other {these alerts}}.\\n        \",\"comment\":\"Don't translate placeholder '{numAlerts}'. Translate only uppercase '{numAlerts, select, 1 {ALERT} other {ALERTS}}'\",\"limit\":0},\"configurationPanel.drillIntoDashboard\":{\"value\":\"Drill into dashboard\",\"comment\":\"\",\"limit\":0},\"configurationPanel.noLinkableDashboards\":{\"value\":\"No dashboard to link to\",\"comment\":\"\",\"limit\":0},\"configurationPanel.selectDashboard\":{\"value\":\"Select a dashboard\",\"comment\":\"\",\"limit\":0},\"configurationPanel.interactions\":{\"value\":\"Interactions\",\"comment\":\"\",\"limit\":0},\"configurationPanel.drillConfig.interactions\":{\"value\":\"Drill interactions\",\"comment\":\"Header of a section where user can set drilling for some visualization widget containing some visualization (chart, table, etc). Interactions here stands for user interactions.\",\"limit\":0},\"configurationPanel.drillConfig.addInteraction\":{\"value\":\"Add interaction\",\"comment\":\"Use imperative. Button label that is related to \\\"Interactions\\\" section. This button adds some drilling to a widget.\",\"limit\":30},\"configurationPanel.drillConfig.clickHint\":{\"value\":\"When I click on\",\"comment\":\"Hint guiding users how to understand interaction (drilling) setting. Example in sentence: \\\"WHEN I CLICK ON on value of measure 'Number of user accounts', drill into detail.\\\"\",\"limit\":0},\"configurationPanel.drillConfig.measureValue._measure\":{\"value\":\"Value of measure\",\"comment\":\"Hint guiding users how to understand interaction (drilling) setting. Example in sentence: \\\"When I click on VALUE OF MEASURE 'Number of user accounts', drill into detail.\\\"\",\"limit\":0},\"configurationPanel.drillConfig.measureValue._metric\":{\"value\":\"Value of metric\",\"comment\":\"Hint guiding users how to understand interaction (drilling) setting. Example in sentence: \\\"When I click on VALUE OF METRIC 'Number of user accounts', drill into detail.\\\"\",\"limit\":0},\"configurationPanel.drillConfig.attributeValue\":{\"value\":\"Value of attribute\",\"comment\":\"Hint guiding users how to understand interaction (drilling) setting. Example in sentence: \\\"When I click on VALUE OF ATTRIBUTE 'Account', drill into detail.\\\"\",\"limit\":0},\"configurationPanel.drillConfig.selectTarget\":{\"value\":\"I want to\",\"comment\":\"\",\"limit\":0},\"configurationPanel.drillConfig.clickHintItem\":{\"value\":\"When I click on <addon>(value of)</addon>\",\"comment\":\"Do not translate <addon...> and </addon>, but translate (value of)\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoDashboard\":{\"value\":\"Drill into dashboard\",\"comment\":\"\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoInsight|insight\":{\"value\":\"Drill into insight\",\"comment\":\"\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoInsight|report\":{\"value\":\"Drill into report\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.drillConfig.drillIntoUrl\":{\"value\":\"Drill into URL\",\"comment\":\"Name of an option in dropdown that is used to select type of dashboard drill.\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":{\"value\":\"Invalid URL parameters\",\"comment\":\"Warning displayed in drill config when drill into URL has invalid parameters of custom URL.\",\"limit\":0},\"configurationPanel.drillConfig.select\":{\"value\":\"Choose action…\",\"comment\":\"Hint guiding users that drill actions in select box has to be selected. Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning|insight\":{\"value\":\"The date attribute value from the insight will not be transferred to filter the target dashboard.\",\"comment\":\"Warning displayed in drill config when drill into dashboard has date attribute as source or in intersection\",\"limit\":0},\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning|report\":{\"value\":\"The date attribute value from the report will not be transferred to filter the target dashboard.\",\"comment\":\"Warning displayed in drill config when drill into dashboard has date attribute as source or in intersection\",\"translate\":false,\"limit\":0},\"configurationPanel.unlistedDashboardTab\":{\"value\":\"Unlisted dashboard\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.sectionTitle\":{\"value\":\"Title\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.hideTitle\":{\"value\":\"Hide title\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.sectionDescription\":{\"value\":\"Description\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.inheritDescription\":{\"value\":\"Inherit\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.inheritDescriptionHelp|insight\":{\"value\":\"Inherit the description from the insight.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.inheritDescriptionHelp|report\":{\"value\":\"Inherit the description from the report.\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":{\"value\":\"Inherit the description from the metric.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":{\"value\":\"Inherit the description from the measure.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.customDescription\":{\"value\":\"Custom\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.customDescriptionHelp|insight\":{\"value\":\"Add a custom description for this instance of the insight.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.customDescriptionHelp|report\":{\"value\":\"Add a custom description for this instance of the report.\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.visualprops.customKpiDescriptionHelp\":{\"value\":\"Add a custom description.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.noneDescription\":{\"value\":\"None\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.includeMetrics._measure\":{\"value\":\"Include measure descriptions\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.includeMetrics._metric\":{\"value\":\"Include metric descriptions\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.includeMetricsHelp._measure|insight\":{\"value\":\"Display section with list of insight’s measures and their description.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.includeMetricsHelp._metric|insight\":{\"value\":\"Display section with list of insight’s metrics and their description.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.visualprops.includeMetricsHelp._measure|report\":{\"value\":\"Display section with list of report’s measures and their description.\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.visualprops.includeMetricsHelp._metric|report\":{\"value\":\"Display section with list of report’s metrics and their description.\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.visualprops.descriptionPlaceholder\":{\"value\":\"Add description…\",\"comment\":\"\",\"limit\":0},\"configurationPanel.drillIntoUrl.defaultButtonValue\":{\"value\":\"Choose URL\",\"comment\":\"Default value of 'Drill into URL' dropdown button before a value is selected.\",\"limit\":0},\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":{\"value\":\"Hyperlink in attribute label\",\"comment\":\"Title of 'Drill into URL' dropdown section.\",\"limit\":0},\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":{\"value\":\"Custom URL\",\"comment\":\"Title of 'Drill into URL' dropdown section.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":{\"value\":\"Add custom URL\",\"comment\":\"Title of Drill to URL 'Custom URL' editor when URL is not defined.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":{\"value\":\"Edit custom URL\",\"comment\":\"Title of Drill to URL 'Custom URL' editor when URL is defined.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":{\"value\":\"URL\",\"comment\":\"Label of the textarea in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":{\"value\":\"Parameters\",\"comment\":\"Label of the panel in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":{\"value\":\"Parameters are placeholders that are replaced by dynamic values during drilling.\",\"comment\":\"Tooltip displayed when user hovers over question mark icon next to label of the parameters panel in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":{\"value\":\"Add\",\"comment\":\"Label of the button that adds a parameter to URL in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":{\"value\":\"Type\",\"comment\":\"Title of type section in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":{\"value\":\"Label\",\"comment\":\"Title of label section in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":{\"value\":\"{numberOfValues, plural, one {Value} other {Values}}\",\"comment\":\"Translate only uppercase words in '{numberOfValues, plural, one {VALUE} other {VALUES}}'. Title of values section in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":{\"value\":\"...and {count} more\",\"comment\":\"Translate only uppercase words In '...AND {count} MORE'. Info about number of other values not shown in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel|insight\":{\"value\":\"Insight ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel|report\":{\"value\":\"Report ID\",\"comment\":\"Label of the report parameter in Drill to URL 'Custom URL' editor.\",\"translate\":false,\"limit\":0},\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":{\"value\":\"Client ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":{\"value\":\"Data product ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":{\"value\":\"Project ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":{\"value\":\"Workspace ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":{\"value\":\"Widget ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":{\"value\":\"Dashboard ID\",\"comment\":\"Label of the insight parameter in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":{\"value\":\"Identifier\",\"comment\":\"Type label of identifier in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel|insight\":{\"value\":\"Insight\",\"comment\":\"Label of the parameters section that contains attributes and measures in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel|report\":{\"value\":\"Report\",\"comment\":\"Label of the parameters section that contains attributes and measures in Drill to URL 'Custom URL' editor.\",\"translate\":false,\"limit\":0},\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":{\"value\":\"Identifiers\",\"comment\":\"Label of the parameters section that contains identifiers in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":{\"value\":\"Apply\",\"comment\":\"Label of the button that applies changes in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":{\"value\":\"Cancel\",\"comment\":\"Label of the button that cancels changes in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":{\"value\":\"Enter URL and add parameters from the right panel.\",\"comment\":\"Placeholder of textarea in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":{\"value\":\"How to create custom URLs?\",\"comment\":\"Help button label in Drill to URL 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":{\"value\":\"Invalid parameters: {invalidParameters}\",\"comment\":\"Help button label in Drill to URL 'Custom URL' editor. Do not translate '{invalidParameters}' placeholder.\",\"limit\":0},\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":{\"value\":\"Add custom URL\",\"comment\":\"Label of the button in 'Drill into URL' dropdown that is used for adding of the custom URL.\",\"limit\":0},\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":{\"value\":\"Edit custom URL\",\"comment\":\"Label of the button in 'Drill into URL' dropdown that is used for editing of the custom URL.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":{\"value\":\"Attribute label value\",\"comment\":\"Type label of default display form in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":{\"value\":\"Attribute geo value\",\"comment\":\"Type label of geo display form in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":{\"value\":\"Attribute URL value\",\"comment\":\"Type label of URL display form in parameter detail in 'Custom URL' editor.\",\"limit\":0},\"configurationPanel.zoomInsight|insight\":{\"value\":\"Zoomable insight\",\"comment\":\"\",\"limit\":0},\"configurationPanel.zoomInsight|report\":{\"value\":\"Zoomable report\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.zoomInsight.help|insight\":{\"value\":\"Enable to zoom the insight to display a detailed view. Hold the shift key to pan the zoomed area.\",\"comment\":\"\",\"limit\":0},\"configurationPanel.zoomInsight.help|report\":{\"value\":\"Enable to zoom the report to display a detailed view. Hold the shift key to pan the zoomed area.\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"configurationPanel.zoomInsight.notice\":{\"value\":\"Zoom will not be applied to exported dashboards\",\"comment\":\"\",\"limit\":0},\"configurationPanel.drillConfig.selectInsight|insight\":{\"value\":\"Choose insight…\",\"comment\":\"Hint guiding users that drill target insight in select box has to be selected. Use '…' as one character, not 3 dots ('...').\",\"limit\":0},\"configurationPanel.drillConfig.selectInsight|report\":{\"value\":\"Choose report…\",\"comment\":\"Hint guiding users that drill target report in select box has to be selected. Use '…' as one character, not 3 dots ('...').\",\"translate\":false,\"limit\":0},\"gs.date.date-dataset.recommended\":{\"value\":\"Recommended\",\"comment\":\"\",\"limit\":0},\"gs.date.date-dataset.other\":{\"value\":\"Other\",\"comment\":\"\",\"limit\":0},\"gs.date.date-dataset.related\":{\"value\":\"Related\",\"comment\":\"\",\"limit\":0},\"gs.date.date-dataset.unrelated\":{\"value\":\"Unrelated\",\"comment\":\"\",\"limit\":0},\"layout.widget.width.min\":{\"value\":\"Widget is at the minimal width\",\"comment\":\"Shown as red text inside of widget if resized under min limit.\",\"limit\":0},\"layout.widget.width.max\":{\"value\":\"Widget is at the maximal width\",\"comment\":\"Shown as red text inside of widget if resized under max limit.\",\"limit\":0},\"layout.widget.height.min\":{\"value\":\"Widget is at the minimal height\",\"comment\":\"Shown as red text inside of widget if resized under min limit.\",\"limit\":0},\"layout.widget.height.max\":{\"value\":\"Widget is at the maximal height\",\"comment\":\"Shown as red text inside of widget if resized under max limit.\",\"limit\":0},\"layout.widget.addedByPlugin\":{\"value\":\"Added by plugin\",\"comment\":\"\",\"limit\":0},\"layout.widget.modifiedByPlugin\":{\"value\":\"Modified by plugin\",\"comment\":\"\",\"limit\":0},\"layout.widget.hideOverlay\":{\"value\":\"Hide overlay\",\"comment\":\"\",\"limit\":0},\"dropzone.new.row.desc\":{\"value\":\"Drop to create a{nbsp}<b>new section</b>\",\"comment\":\"Used as placeholder when user drags some widget and tries to drop it on dashboard. Dropping the widget over such placeholder creates new section of a dashboard. Do not translate HTML markup enclosed in <>. Translate words 'new section'.\",\"limit\":0},\"dropzone.widget.desc\":{\"value\":\"Drop <b>here</b>\",\"comment\":\"Do not translate HTML markup enclosed in <>. Translate word 'here'.\",\"limit\":0},\"dropzone.widget.last.in.row.desc\":{\"value\":\"Drop to the <b>existing section</b>\",\"comment\":\"Used as placeholder when user drags some widget and tries to drop it on dashboard. Dropping the widget over such placeholder will cause adding the widget to an existing section of a dashboard. Do not translate HTML markup enclosed in <>. Translate words 'existing section'.\",\"limit\":0},\"deleteKpiConfirmationDialog.headline\":{\"value\":\"Delete KPI\",\"comment\":\"\",\"limit\":0},\"deleteKpiConfirmationDialog.message\":{\"value\":\"All alerts set up for this KPI will also be deleted.\",\"comment\":\"\",\"limit\":0},\"deleteKpiConfirmationDialog.submitButtonText\":{\"value\":\"Delete\",\"comment\":\"\",\"limit\":0},\"newDashboard.title|insight\":{\"value\":\"Drag insight here\",\"comment\":\"\",\"limit\":0},\"newDashboard.title|report\":{\"value\":\"Drag report here\",\"comment\":\"\",\"translate\":false,\"limit\":0},\"newDashboard.dropInsight|insight\":{\"value\":\"Drop insight\",\"comment\":\"A placeholder showed when user drags new insight into a dashboard canvas by cursor (drag and drop).\",\"limit\":0},\"newDashboard.dropInsight|report\":{\"value\":\"Drop report\",\"comment\":\"A placeholder showed when user drags new report into a dashboard canvas by cursor (drag and drop).\",\"translate\":false,\"limit\":0},\"attributesDropdown.filterConfiguredMessage\":{\"value\":\"<strong>{parentTitle}</strong> is already filtered by <strong>{childTitle}</strong> filter directly or through other filters.\",\"comment\":\"Do not translate HTML markup enclosed in <> and placeholders enclosed in {}.\",\"limit\":0},\"attributesDropdown.attributeNameWithData\":{\"value\":\"with data of\",\"comment\":\"Will be used in sentence between two nouns. For instance 'Filter by AttributeX with data of MetricY'\",\"limit\":0}}","module.exports = {\"loading\":\"Cargando…\",\"untitled\":\"Sin título\",\"empty_value\":\"valor vacío\",\"gs.list.cancel\":\"Cancelar\",\"gs.list.apply\":\"Aplicar\",\"gs.list.only\":\"Solo\",\"messages.dashboardSaveSuccess\":\"Genial. Hemos guardado su panel.\",\"options.menu.save.as\":\"Guardar como nuevo\",\"options.menu.save.as.tooltip\":\"No se puede guardar el panel vacío.\",\"messages.dashboardSaveFailed\":\"Error al guardar panel. Vuelva a intentarlo.\",\"messages.dashboard.invalidDrills.title\":\"<b>Se han eliminado algunas interacciones</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Se ha cambiado o eliminado algún(a) panel/perspectiva/medida/atributo, lo que ha provocado que se hayan quitado algunas interacciones de los siguientes widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Se ha cambiado o eliminado algún(a) panel/perspectiva/métrica/atributo, lo que ha provocado que se hayan quitado algunas interacciones de los siguientes widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Se han desactivado algunas interacciones de exploración hasta la URL</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Se han deshabilitado algunas interacciones de exploración hasta la URL en los siguientes widgets debido a cambios en atributos de perspectivas: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Mostrar más\",\"messages.dashboard.expandable.showLess\":\"Mostrar menos\",\"messages.drill.InteractionConfiguredSuccess\":\"Interacción configurada.\",\"messages.drill.InteractionUpdatedSuccess\":\"Interacción actualizada.\",\"filterBar.showAll\":\"Mostrar todo\",\"filterBar.showLess\":\"Mostrar menos\",\"options.menu.export.PDF\":\"Exportar a PDF\",\"options.menu.schedule.email\":\"Programar el envío de correos\",\"options.menu.delete\":\"Eliminar\",\"dialogs.export.cells\":\"CELDAS\",\"dialogs.export.filters\":\"CONTEXTO DE LA PERSPECTIVA\",\"dialogs.export.includeFilters\":\"Incluir filtros aplicados\",\"dialogs.export.headline\":\"Exportar a XLSX\",\"dialogs.export.mergeHeaders\":\"Mantener fusionadas las celdas de atributos\",\"dialogs.export.submit\":\"Exportar\",\"dialogs.schedule.email.delete.success\":\"¡Hecho! Se ha eliminado el correo electrónico programado.\",\"dialogs.schedule.email.submit.success\":\"¡Hecho! Su panel se ha configurado para el envío de correos.\",\"dialogs.schedule.email.submit.error\":\"Error al programar el panel. Inténtelo de nuevo más tarde.\",\"dialogs.schedule.email.save.success\":\"¡Hecho! Se ha guardado la programación.\",\"dialogs.schedule.email.save.error\":\"Error al guardar la programación. Inténtelo de nuevo más tarde.\",\"dialogs.save.as.new.title\":\"Guardar panel como nuevo\",\"dialogs.save.as.new.desc\":\"Póngale a su nuevo panel un nombre descriptivo nuevo para que después sea más fácil de encontrar.\",\"dialogs.save.as.new.default.title\":\"Copia de {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"La programación de los correos electrónicos y las alertas no se duplicará\",\"dialogs.save.as.new.alertsMessage\":\"Las alertas no se duplicarán\",\"dialogs.save.as.new.emailsMessage\":\"La programación de los correos no se duplicará\",\"cancelConfirmationDialog.headline\":\"¿Desea descartar los cambios?\",\"cancelConfirmationDialog.message\":\"Se perderán todos los cambios\",\"cancelConfirmationDialog.submitButtonText\":\"Descartar cambios\",\"deleteDashboardDialog.headline\":\"¿Desea eliminar el panel?\",\"deleteDashboardDialog.submitButtonText\":\"Eliminar\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Todas las alertas y los correos programados configurados para este panel también se eliminarán.\",\"deleteDashboardDialog.alertsMessage\":\"Todas las alertas establecidas para este panel también se eliminarán.\",\"deleteDashboardDialog.emailsMessage\":\"Todos los correos electrónicos programados configurados para este panel también se eliminarán.\",\"deleteDashboardDialog.drillMessage\":\"Se eliminarán todas las exploraciones de otros paneles que lleven a este panel.\",\"create.dashboard\":\"Crear panel\",\"drill_modal_picker.drill-down\":\"Exploración vertical\",\"drill_modal_picker.drill-into\":\"Explorar hasta\",\"drill_modal_picker.more.details\":\"Más detalles\",\"drillModal.backToTop\":\"Volver al principio\",\"filters.allTime.previousPeriod\":\"period. prev.\",\"filters.allTime.lastYear\":\"año prev.\",\"filters.minute.previousPeriod\":\"minuto prev.\",\"filters.hour.previousPeriod\":\"hora prev.\",\"filters.day.previousPeriod\":\"{n, plural, one {día} other {#d}} prev.\",\"filters.week.previousPeriod\":\"{n, plural, one {semana} other {#s}} prev.\",\"filters.month.previousPeriod\":\"{n, plural, one {mes} other {#m}} prev.\",\"filters.quarter.previousPeriod\":\"{n, plural, one {trimestre} other {#t}} prev.\",\"filters.year.previousPeriod\":\"{n, plural, one {año} other {#a}} prev.\",\"filters.alertMessage.relativePreset\":\"en {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"en el periodo {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"Hay más de una configuración de filtro de fechas de proyecto asociada a este proyecto. Se ha utilizado la primera.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"Hay más de una configuración de filtro de fechas de espacio de trabajo asociada a este espacio de trabajo. Se ha utilizado la primera.\",\"filters.config.warning.selectedFilterNotValid\":\"La opción de filtro predeterminada no es válida; utilice la primera opción disponible en su lugar.\",\"filters.config.warning.allOptionsHidden\":\"La configuración del filtro de fechas del panel se ha ignorado porque habría ocultado todas las opciones de filtros.\",\"filters.config.warning.conflictingIdentifiers\":\"La configuración del filtro de fechas del panel se ha ignorado porque contiene opciones de filtro de fechas con identificadores idénticos.\",\"filters.config.warning.notAvailable\":\"La configuración del filtro de fechas del proyecto no está definida o no tiene permiso para acceder a ella.\",\"filters.config.warning.workspace.notAvailable\":\"La configuración del filtro de fechas del espacio de trabajo no está definida o no tiene permiso para acceder a ella.\",\"kpi.noData\":\"No hay datos para la configuración actual de filtro. Intente cambiar los filtros.\",\"kpiPop.change\":\"cambio\",\"dialogs.schedule.email.filters\":\"El panel contiene cambios en los filtros que se guardarán en la programación.\",\"dialogs.schedule.email.filters.not.saved\":\"Los filtros del panel guardados en la programación no se verán afectados.\",\"dialogs.schedule.email.attachment.filter\":\"(con los filtros establecidos actualmente)\",\"dialogs.schedule.email.attachment.label\":\"Adjunto:\",\"dialogs.schedule.email.attachments.label\":\"Adjuntos:\",\"dialogs.schedule.email.attachment.select\":\"Seleccione los adjuntos\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Este panel no contiene ninguna perspectiva.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Panel (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Perspectivas (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Programe el envío de correos\",\"dialogs.schedule.email.heading\":\"Programe la exportación\",\"dialogs.schedule.email.message.label\":\"Mensaje:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 destinatario se dio de baja} other {# destinatarios se dieron de baja}} de esta programación.\",\"dialogs.schedule.email.repeats.label\":\"Repeticiones:\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"el {date} día\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"el {week, select, 1 {primer} 2 {segundo} 3 {tercer} 4 {cuarto} other {último}} {day}\",\"dialogs.schedule.email.repeats.every\":\"cada\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {día} other {días}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {mes} other {meses}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {semana} other {semanas}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Personalizado\",\"dialogs.schedule.email.repeats.types.daily\":\"Diario\",\"dialogs.schedule.email.repeats.types.monthly\":\"Mensualmente el {week, select, 1 {primer} 2 {segundo} 3 {tercer} 4 {cuarto} other {último}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Semanalmente el {day}\",\"dialogs.schedule.email.subject.label\":\"Asunto:\",\"dialogs.schedule.email.time.label\":\"Primer evento:\",\"dialogs.schedule.email.to.label\":\"Para:\",\"dialogs.schedule.email.message.placeholder\":\"Hola:\\n\\nEl correo programado está listo. Puede descargar el panel en los adjuntos.\",\"dialogs.schedule.email.submit\":\"Programar\",\"dialogs.schedule.email.save\":\"Guardar\",\"dialogs.schedule.email.format.options\":\"Opciones de formato\",\"dialogs.schedule.email.insight.format\":\"Formato de la perspectiva:\",\"dialogs.schedule.email.attribute.merged\":\"Mantener fusionadas las celdas de atributos\",\"dialogs.schedule.email.show.filters\":\"Mostrar qué filtros se aplican\",\"dialogs.schedule.management.title\":\"Exportaciones programadas\",\"dialogs.schedule.management.delete\":\"Eliminar la programación\",\"dialogs.schedule.management.delete.dialog\":\"¿Eliminar la programación?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>La programación</b> se eliminará permanentemente.\",\"dialogs.schedule.management.noSchedules\":\"El panel no contiene ninguna exportación programada.{br}Añada una ahora.\",\"dialogs.schedule.management.noSchedules.byUser\":\"Todavía no ha programado ninguna exportación.{br}Añada una ahora.\",\"dialogs.schedule.management.addSchedule\":\"Añadir programación\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# destinatario} other {# destinatarios}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Solo usted\",\"dialogs.schedule.management.attachments.dashboard\":\"Panel\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# perspectiva} other {# perspectivas}}\",\"dialogs.schedule.management.attachments.mixed\":\"Panel y {n, plural, one {# perspectiva} other {# perspectivas}}\",\"dialogs.schedule.management.load.error\":\"Error al cargar. Inténtelo de nuevo más tarde.\",\"dialogs.schedule.management.delete.error\":\"Error al eliminar la programación. Inténtelo de nuevo más tarde.\",\"dialogs.schedule.management.tab.all\":\"todo\",\"dialogs.schedule.management.tab.user\":\"creado por mí\",\"options.menu.schedule.email.recipient.invalid\":\"Debe introducir una dirección de correo electrónico válida.\",\"options.menu.schedule.email.recipient.warning.existed\":\"Ya ha añadido a este destinatario.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Esta dirección de correo electrónico no pertenece a este espacio de trabajo. Es posible que el destinatario reciba datos confidenciales.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Esta dirección de correo electrónico no pertenece a este espacio de trabajo. Solo el autor de la programación puede añadir esta dirección de correo electrónico.\",\"delete\":\"Eliminar\",\"close\":\"Cerrar\",\"cancel\":\"Cancelar\",\"gs.date.at\":\"en\",\"gs.date.today\":\"Hoy\",\"gs.date.tomorrow\":\"Mañana\",\"gs.date.yesterday\":\"Ayer\",\"kpi.alertBox.title\":\"Establecer una alerta para cambio en KPI\",\"kpi.alertBox.example\":\"p. ej.\",\"kpi.alertBox.unverifiedEmail\":\"Lo sentimos, no puede establecer una alerta. Asegúrese de que su correo electrónico está verificado. Si prosigue el problema, pídale a su administrador que actualice sus permisos.\",\"kpi.alertBox.disabledInReadOnly\":\"Las alertas están desactivadas en el modo de solo lectura\",\"kpi.error.view\":\"No se puede mostrar el KPI. Póngase en contacto con su administrador para solucionar la definición del KPI.\",\"kpiAlertDialog.delete\":\"Eliminar\",\"kpiAlertDialog.deleting\":\"Eliminando…\",\"kpiAlertDialog.emailMe\":\"Enviarme un correo electrónico\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe} cuando este KPI sea\",\"kpiAlertDialog.emailInfo\":\"El correo electrónico se enviará a {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Este número no es válido.</strong>{br}Compruébelo de nuevo e inténtelo otra vez.\",\"kpiAlertDialog.filtersDiffer\":\"El KPI está filtrado de manera distinta a cuando se estableció la alerta.\",\"kpiAlertDialog.filtersApply\":\"Aplicar filtros de alerta al panel\",\"kpiAlertDialog.savingFailed\":\"Error al guardar la alerta. Vuelva a intentarlo más tarde.\",\"kpiAlertDialog.deleteingFailed\":\"Error al eliminar la alerta. Vuelva a intentarlo más tarde.\",\"kpiAlertDialog.brokenAlert\":\"Alerta rota\",\"kpiAlertDialog.brokenAlertAppeal\":\"Para ver el valor KPI correcto, actualice los filtros de esta alerta. También puede quitar la alerta.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Fecha\",\"kpiAlertDialog.removedFilters\":\"Filtros quitados del panel\",\"kpiAlertDialog.ignoredFilters\":\"Filtros omitidos para este kpi\",\"kpiAlertDialog.updateTitle\":\"Actualizar\",\"kpiAlertDialog.updateBrokenTitle\":\"Actualizar filtros\",\"kpiAlertDialog.updatingTitle\":\"Actualizando…\",\"kpiAlertDialog.updateBrokenFailed\":\"Error al actualizar filtros. Inténtelo de nuevo.\",\"kpiAlertDialog.setTitle\":\"Establecer alerta\",\"kpiAlertDialog.settingTitle\":\"Estableciendo…\",\"kpiAlertDialog.threshold.above\":\"encima de\",\"kpiAlertDialog.threshold.below\":\"abajo de\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} {numFilters, select, 1 {filtro más aplicado} other {filtros más aplicados}}\",\"messages.exportResultError\":\"Error al exportar los datos. Inténtelo de nuevo más tarde.\",\"messages.exportResultRestrictedError\":\"No puede exportar esta perspectiva porque contiene datos restringidos.\",\"messages.exportResultStart\":\"Exportación en curso\",\"messages.exportResultSuccess\":\"Exportación correcta.\",\"messages.sharingChangedSuccess\":\"Uso compartido actualizado.\",\"messages.sharingChangedError.general\":\"Error al actualizar los ajustes de uso compartido. Inténtelo de nuevo más tarde.\",\"messages.sharingDialogError.general\":\"Error al cargar los ajustes de uso compartido. Inténtelo de nuevo más tarde.\",\"visualization.dataTooLarge.headline\":\"Demasiados puntos de datos para ser mostrados\",\"visualization.dataTooLarge.text\":\"Intente aplicar uno o más filtros a su panel.\",\"visualization.execute_protected_report.headline\":\"No tiene permiso para ver este informe.\",\"visualization.execute_protected_report.text\":\"Póngase en contacto con su administrador.\",\"visualization.alert_not_supported\":\"No se admiten alertas en los periodos de fecha estáticos\",\"visualization.empty.headline\":\"No existen datos para su selección de filtro\",\"visualization.error.headline\":\"Lo sentimos, no podemos mostrar esta perspectiva\",\"visualization.error.text\":\"Póngase en contacto con su administrador.\",\"options.button.bubble\":\"Exportar datos de la perspectiva\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"No se puede exportar la perspectiva en estos momentos. Intente aplicar otros filtros o utilice unas medidas o unos atributos diferentes.\",\"options.menu.unsupported.error._metric\":\"No se puede exportar la perspectiva en estos momentos. Intente aplicar otros filtros o utilice métricas o atributos diferentes.\",\"options.menu.unsupported.loading\":\"No se puede exportar la perspectiva en estos momentos.\",\"export.defaultTitle\":\"Perspectiva sin título\",\"export_unsupported.disabled\":\"La exportación no es compatible\",\"widget.options.menu.exportToCSV\":\"Exportar a CSV\",\"widget.options.menu.exportToXLSX\":\"Exportar a XLSX\",\"widget.options.menu.scheduleExport\":\"Programe la exportación\",\"share.button.text\":\"Compartir\",\"dashboard.error.empty.heading\":\"Este panel está vacío\",\"dashboard.error.empty.text\":\"Se eliminaron todas las perspectivas.\",\"dashboard.shareDialog.underLenientControl.label\":\"Otros usuarios pueden acceder a este panel si exploran hacia él\",\"dashboard.shareDialog.lock.label\":\"Solo los administradores pueden editar este panel\",\"header.lockStatus.tooltip\":\"<b>Este panel está bloqueado.</b> Solo los administradores pueden editar este panel.\",\"header.shareStatus.private.text\":\"Privado\",\"header.shareStatus.private.strict.tooltip\":\"Solo usted puede visualizar y editar este panel.\",\"header.shareStatus.private.not.strict.tooltip\":\"El creador puede editar este panel. Otros usuarios con funciones de usuario apropiadas pueden editar este panel cuando exploren hacia él.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Eliminar acceso a este panel.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"El usuario que creó este panel. Los creadores no se pueden eliminar.\",\"attributesDropdown.placeholder\":\"Buscar atributos…\",\"attributesDropdown.configuration\":\"Configuración\",\"attributesDropdown.itemsFiltered\":\"Los elementos se han filtrado\",\"attributesDropdown.allItemsFiltered\":\"Todos los elementos están filtrados\",\"attributesDropdown.itemsFiltered.tooltip\":\"Los elementos se han filtrado por: <strong>{filters}</strong>\",\"attributesDropdown.save\":\"Guardar\",\"attributesDropdown.filterBy\":\"Filtrar según\",\"attributesDropdown.displayValuesAs\":\"Mostrar valores como\",\"attributesDropdown.title\":\"Título\",\"attributesDropdown.title.reset\":\"Restablecer\",\"attributesDropdown.selectionMode\":\"Selección\",\"attributesDropdown.selectionMode.multi\":\"Varios valores\",\"attributesDropdown.selectionMode.single\":\"Valor único\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"No se pueden seleccionar valores únicos si hay filtros seleccionados en Filtrar por. Para usar la selección de valores únicos, desactive todos los filtros en Filtrar por.\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"La opción de filtrar por otros filtros está desactivada en la selección de valores únicos. Para usar Filtrar por, elija la selección de varios valores.\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> no se puede filtrar por <strong>{parentTitle}</strong>. No hay ninguna conexión entre los atributos de filtro en el modelo de datos.\",\"attributesDropdown.details.dataset\":\"Conjunto de datos\",\"attributesDropdown.details.values\":\"Valores\",\"attributesDropdown.details.shortening_decoration\":\"…y {count} más\",\"attributesDropdown.removeTooltip\":\"Quitar del panel\",\"layout.header.characters.left\":\"Quedan {currentCharactersCount} / {maximumCharactersCount} caracteres\",\"layout.header.add.title.placeholder\":\"Añadir título aquí...\",\"layout.header.add.description.placeholder\":\"Añadir descripción aquí...\",\"error\":\"Error\",\"controlButtons.edit.value\":\"Editar\",\"controlButtons.saveAndPublish.value\":\"Guardar y publicar\",\"controlButtons.save.value\":\"Guardar\",\"controlButtons.saveAndPublish.title\":\"Todos los cambios serán visibles inmediatamente para quienes accedan a este panel.\",\"controlButtons.saveAsPrivate.title\":\"Se guardarán todos los cambios.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"No se puede guardar un panel vacío\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"No hay cambios que guardar\",\"controlButtons.saving.value\":\"Guardando…\",\"gs.visualizationsList.tabs.all\":\"todo\",\"gs.visualizationsList.tabs.my\":\"creado por mí\",\"visualizationsList.noInsights\":\"Este espacio de trabajo no contiene perspectivas.\",\"visualizationsList.create\":\"Crear perspectiva\",\"visualizationsList.noUserInsights\":\"No se ha creado ninguna perspectiva.\",\"visualizationsList.noVisualizationsFound\":\"No coincide ninguna perspectiva.\",\"search_insights\":\"Buscar perspectivas…\",\"save.as.new\":\"Guardar como nuevo\",\"addPanel.deleteItem\":\"Arrastre para eliminar\",\"addPanel.newItem\":\"Nuevo elemento\",\"addPanel.attributeFilter\":\"Filtro de atributo\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"El filtro de atributo requiere un atributo.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"Más información\",\"addPanel.kpi\":\"Indicador clave de rendimiento\",\"addPanel.kpi.tooltip.no_measures._measure\":\"El indicador clave de rendimiento requiere una medida calculada.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"El indicador clave de rendimiento requiere una métrica.\",\"addPanel.kpi.tooltip.no_measures.link\":\"Más información\",\"visualizationsList.dragToAdd\":\"Arrastre para añadir\",\"visualizationsList.savedVisualizations\":\"Perspectivas guardadas\",\"configurationPanel.drillConfig.selectDashboard\":\"Elija un panel…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Buscar todos los paneles…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(No compartido con usted)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"El panel no se ha compartido con usted, pero otros usuarios tienen acceso a él.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"El panel no se ha compartido con usted, pero todos los usuarios pueden acceder a él si exploran hacia el panel.\",\"configurationPanel.remove.form.dashboard\":\"Quitar del panel\",\"filterBar.filter.drop\":\"arrastre para añadir\",\"filterBar.filter.addFilterPlaceholder\":\"Arrastre {icon} aquí\",\"filterBar.filter.dropzone.tooltip\":\"Arrastre el filtro de atributo aquí.\",\"configurationPanel.title\":\"Configuración\",\"configurationPanel.comparison\":\"Comparación\",\"configurationPanel.compareWith\":\"Comparar con\",\"configurationPanel.increasingNumberIs\":\"El número creciente es\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Periodo previo\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Mismo periodo en el año previo\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Sin comparación\",\"configurationPanel.comparisonDirectionItems.green\":\"Verde\",\"configurationPanel.comparisonDirectionItems.red\":\"Rojo\",\"configurationPanel.unlistedMetric._measure\":\"Medida no listada\",\"configurationPanel.unlistedMetric._metric\":\"Métrica no listada\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Esta medida está oculta. Solo usted puede verla.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Esta métrica está oculta. Solo usted puede verla.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Seleccione una medida…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Seleccione una métrica…\",\"configurationPanel.selectComparisonPlaceholder\":\"Seleccione una comparación…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Seleccione positivo/negativo\",\"configurationPanel.measure._measure\":\"Medida\",\"configurationPanel.measure._metric\":\"Métrica\",\"configurationPanel.filterBy\":\"Filtrar según\",\"configurationPanel.date\":\"Fecha\",\"configurationPanel.dateAs\":\"como\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"La perspectiva no puede filtrarse por {attributeName}. Desmarque la casilla de verificación.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"El KPI no se puede filtrar por {attributeName}. Deseleccione la casilla de verificación.\",\"configurationPanel.vizCantBeFilteredByDate\":\"No se puede filtrar la perspectiva por fecha. Desmarque la casilla de verificación.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"El KPI no se puede filtrar por fecha. Deseleccione la casilla de verificación.\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" no puede aplicarse más a la perspectiva. Seleccione una dimensión diferente o edite la perspectiva.\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\" ya no se puede aplicar al KPI. Seleccione otra dimensión o edite el KPI.\",\"configurationPanel.breakAlertWarning\":\"\\n Los usuarios han configurado {numAlerts} {numAlerts, select, 1 {alerta} other {alertas}}\\n            para este KPI. Modificar el KPI afectará a {numAlerts, select, 1 {esta alerta} other {estas alertas}}.\\n\",\"configurationPanel.drillIntoDashboard\":\"Explorar hasta el panel\",\"configurationPanel.noLinkableDashboards\":\"No hay ningún panel con el que vincular\",\"configurationPanel.selectDashboard\":\"Seleccione un panel\",\"configurationPanel.interactions\":\"Interacciones\",\"configurationPanel.drillConfig.interactions\":\"Interacciones de exploración\",\"configurationPanel.drillConfig.addInteraction\":\"Añadir interacción\",\"configurationPanel.drillConfig.clickHint\":\"Cuando haga clic en\",\"configurationPanel.drillConfig.measureValue._measure\":\"Valor de medida\",\"configurationPanel.drillConfig.measureValue._metric\":\"Valor de métrica\",\"configurationPanel.drillConfig.attributeValue\":\"Valor de atributo\",\"configurationPanel.drillConfig.selectTarget\":\"Deseo\",\"configurationPanel.drillConfig.clickHintItem\":\"Cuando haga clic en <addon>(valor de)</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Explorar hasta el panel\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Explorar hasta la perspectiva\",\"configurationPanel.drillConfig.drillIntoUrl\":\"Explorar hasta la URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Parámetros de URL no válidos\",\"configurationPanel.drillConfig.select\":\"Elija una acción…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"El valor del atributo de fecha de la perspectiva no se transferirá para filtrar el panel de destino.\",\"configurationPanel.unlistedDashboardTab\":\"Panel no listado\",\"configurationPanel.visualprops.sectionTitle\":\"Título\",\"configurationPanel.visualprops.hideTitle\":\"Ocultar título\",\"configurationPanel.visualprops.sectionDescription\":\"Descripción\",\"configurationPanel.visualprops.inheritDescription\":\"Heredado\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Heredar la descripción de la perspectiva.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Heredar la descripción de la métrica.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Heredar la descripción de la medida.\",\"configurationPanel.visualprops.customDescription\":\"Personalizado\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Añadir una descripción personalizada para esta instancia de la perspectiva.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Añadir una descripción personalizada.\",\"configurationPanel.visualprops.noneDescription\":\"Ninguno\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Incluir descripciones de las medidas\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Incluir descripciones de las métricas\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Mostrar sección con la lista de las medidas de la perspectiva y su descripción.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Mostrar sección con la lista de las métricas de la perspectiva y su descripción.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Añadir descripción…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"Elegir URL\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Hiperenlace en etiqueta de atributo\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"URL personalizada\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Añadir URL personalizada\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Editar URL personalizada\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Parámetros\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Los parámetros son marcadores de posición que se reemplazan con valores dinámicos durante la exploración.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Agregar\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Tipo\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Etiqueta\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {Valor} other {Valores}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...y {count} más\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"Id. de la perspectiva\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"Id. del cliente\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"Id. del producto de datos\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"Id. del proyecto\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"Id. del espacio de trabajo\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"Id. del widget\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"Id. del panel\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Identificador\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Perspectiva\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Identificadores\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Aplicar\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Cancelar\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"Introduzca la URL y añada parámetros desde el panel derecho.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"¿Cómo crear URL personalizadas?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Parámetros no válidos: {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Añadir URL personalizada\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Editar URL personalizada\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Valor de la etiqueta del atributo\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Valor geográfico del atributo\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"Valor de la URL del atributo\",\"configurationPanel.zoomInsight\":\"Perspectiva que se puede alejar/acercar\",\"configurationPanel.zoomInsight.help\":\"Actívelo para acercar/alejar la perspectiva y mostrar una vista más detallada. Mantenga pulsada la tecla Mayús para hacer una panorámica del área acercada/alejada.\",\"configurationPanel.zoomInsight.notice\":\"La opción de acercar/alejar no se aplica a los paneles exportados\",\"configurationPanel.drillConfig.selectInsight\":\"Elija una perspectiva…\",\"gs.date.date-dataset.recommended\":\"Recomendado\",\"gs.date.date-dataset.other\":\"Otros\",\"gs.date.date-dataset.related\":\"Relacionado\",\"gs.date.date-dataset.unrelated\":\"No relacionado\",\"layout.widget.width.min\":\"El widget tiene el tamaño mínimo\",\"layout.widget.width.max\":\"El widget está a su ancho máximo\",\"layout.widget.height.min\":\"El widget está a su altura mínima\",\"layout.widget.height.max\":\"El widget está a su altura máxima\",\"layout.widget.addedByPlugin\":\"Añadido por el complemento\",\"layout.widget.modifiedByPlugin\":\"Modificado por el complemento\",\"layout.widget.hideOverlay\":\"Ocultar superposición\",\"dropzone.new.row.desc\":\"Suelte para crear una{nbsp}<b>sección nueva</b>\",\"dropzone.widget.desc\":\"Suelte <b>aquí</b>\",\"dropzone.widget.last.in.row.desc\":\"Suelte en la <b>sección existente</b>\",\"deleteKpiConfirmationDialog.headline\":\"Eliminar KPI\",\"deleteKpiConfirmationDialog.message\":\"Todas las alertas establecidas para este KPI se eliminarán.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Eliminar\",\"newDashboard.title\":\"Arrastre aquí la perspectiva\",\"newDashboard.dropInsight\":\"Soltar perspectiva\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> ya se ha filtrado por el filtro <strong>{childTitle}</strong> directamente o mediante otros filtros.\",\"attributesDropdown.attributeNameWithData\":\"con datos de\"}","module.exports = {\"loading\":\"Chargement en cours…\",\"untitled\":\"Sans titre\",\"empty_value\":\"valeur vide\",\"gs.list.cancel\":\"Annuler\",\"gs.list.apply\":\"Appliquer\",\"gs.list.only\":\"Uniquement\",\"messages.dashboardSaveSuccess\":\"Votre tableau de bord a été enregistré.\",\"options.menu.save.as\":\"Enregistrer sous un nouveau nom\",\"options.menu.save.as.tooltip\":\"Un tableau de bord vide ne peut pas être enregistré.\",\"messages.dashboardSaveFailed\":\"Échec d'enregistrement du tableau de bord, réessayez.\",\"messages.dashboard.invalidDrills.title\":\"<b>Certaines interactions ont été supprimées.</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Un ou plusieurs tableaux de bord/perceptions/mesures/attributs ont été modifiés ou supprimés. Par conséquent, certaines interactions ont été retirées des widgets suivants : <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Un ou plusieurs tableaux de bord/perceptions/métriques/attributs ont été modifiés ou supprimés. Par conséquent, certaines interactions ont été retirées des widgets suivants : <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Certaines interactions d'exploration d'URL ont été désactivées.</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Certaines interactions d'exploration d'URL sur les widgets suivants ont été désactivées suite à la modification d'attributs de la perception : <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Montrer plus\",\"messages.dashboard.expandable.showLess\":\"Montrer moins\",\"messages.drill.InteractionConfiguredSuccess\":\"Interaction configurée\",\"messages.drill.InteractionUpdatedSuccess\":\"Interaction modifiée\",\"filterBar.showAll\":\"Afficher tout\",\"filterBar.showLess\":\"Montrer moins\",\"options.menu.export.PDF\":\"Exporter vers PDF\",\"options.menu.schedule.email\":\"Programmer l'envoi d'e-mails\",\"options.menu.delete\":\"Supprimer\",\"dialogs.export.cells\":\"CELLULES\",\"dialogs.export.filters\":\"CONTEXTE DE LA PERCEPTION\",\"dialogs.export.includeFilters\":\"Inclure les filtres appliqués\",\"dialogs.export.headline\":\"Exporter vers XLSX\",\"dialogs.export.mergeHeaders\":\"Garder les cellules d'attributs fusionnées\",\"dialogs.export.submit\":\"Exporter\",\"dialogs.schedule.email.delete.success\":\"Votre e-mail programmé a bien été supprimé.\",\"dialogs.schedule.email.submit.success\":\"Le tableau de bord est programmé pour envoyer des e-mails.\",\"dialogs.schedule.email.submit.error\":\"Échec de la programmation du tableau de bord. Réessayez plus tard.\",\"dialogs.schedule.email.save.success\":\"Bravo ! Votre programme a été enregistré.\",\"dialogs.schedule.email.save.error\":\"L'enregistrement du programme a échoué. Veuillez réessayer.\",\"dialogs.save.as.new.title\":\"Enregistrer en tant que nouveau tableau de bord\",\"dialogs.save.as.new.desc\":\"Donnez au nouveau tableau de bord un nom descriptif pour le retrouver facilement.\",\"dialogs.save.as.new.default.title\":\"Copie de {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"Les alertes et e-mails planifiés ne seront pas dupliqués.\",\"dialogs.save.as.new.alertsMessage\":\"Les alertes ne seront pas dupliquées.\",\"dialogs.save.as.new.emailsMessage\":\"Les e-mails planifiés ne seront pas dupliqués.\",\"cancelConfirmationDialog.headline\":\"Ignorez les modifications?\",\"cancelConfirmationDialog.message\":\"Toutes les modifications seront perdues\",\"cancelConfirmationDialog.submitButtonText\":\"Ignorer les modifications\",\"deleteDashboardDialog.headline\":\"Supprimez le tableau de bord?\",\"deleteDashboardDialog.submitButtonText\":\"Supprimer\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Tous les e-mails programmés et alertes configurés pour ce tableau de bord seront aussi supprimés.\",\"deleteDashboardDialog.alertsMessage\":\"Toutes les alertes configurées pour ce tableau de bord vont être également supprimées.\",\"deleteDashboardDialog.emailsMessage\":\"Tous les e-mails planifiés configurés pour ce tableau de bord seront également supprimés.\",\"deleteDashboardDialog.drillMessage\":\"Toutes les explorations de ce tableau de bord à partir d'autres tableaux de bord seront aussi supprimées.\",\"create.dashboard\":\"Créer un tableau de bord\",\"drill_modal_picker.drill-down\":\"Exploration descendante\",\"drill_modal_picker.drill-into\":\"Explorer\",\"drill_modal_picker.more.details\":\"Plus de détails\",\"drillModal.backToTop\":\"Haut de page\",\"filters.allTime.previousPeriod\":\"période préc.\",\"filters.allTime.lastYear\":\"année préc.\",\"filters.minute.previousPeriod\":\"minute préc.\",\"filters.hour.previousPeriod\":\"heure préc.\",\"filters.day.previousPeriod\":\"préc. {n, plural, one {jour} other {#j}}\",\"filters.week.previousPeriod\":\"préc. {n, plural, one {semaine} other {#s}}\",\"filters.month.previousPeriod\":\"préc. {n, plural, one {mois} other {#m}}\",\"filters.quarter.previousPeriod\":\"préc. {n, plural, one {trimestre} other {#t}}\",\"filters.year.previousPeriod\":\"préc. {n, plural, one {année} other {#a}}\",\"filters.alertMessage.relativePreset\":\"dans {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"de la période de {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"Il y a plus d'une configuration de filtre de date de projet associée à ce projet. La première a été utilisée.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"Il y a plus d'une configuration de filtre de date d'espace de travail associée à cet espace de travail. La première a été utilisée.\",\"filters.config.warning.selectedFilterNotValid\":\"L'option de filtre par défaut n'est pas valide, la première option disponible est utilisée à la place.\",\"filters.config.warning.allOptionsHidden\":\"La configuration de filtre de date de tableau de bord a été ignorée car elle aurait masqué toutes les options de filtre.\",\"filters.config.warning.conflictingIdentifiers\":\"La configuration de filtre de date de tableau de bord a été ignorée, car elle contient des options de filtre de date avec des identifiants identiques.\",\"filters.config.warning.notAvailable\":\"La configuration de filtre de date de projet est non définie ou vous n'avez pas les autorisations nécessaires pour y accéder.\",\"filters.config.warning.workspace.notAvailable\":\"La configuration de filtre de date d'espace de travail n'est pas définie ou vous n'avez pas les autorisations nécessaires pour y accéder.\",\"kpi.noData\":\"Aucune donnée pour les paramètres de filtre actuels. Essayez de modifier les filtres.\",\"kpiPop.change\":\"modifier\",\"dialogs.schedule.email.filters\":\"Le tableau de bord contient des modifications de filtres qui seront enregistrés dans la planification.\",\"dialogs.schedule.email.filters.not.saved\":\"Les filtres de tableau de bord enregistrés dans la planification ne sont pas affectés.\",\"dialogs.schedule.email.attachment.filter\":\"(avec les filtres configurés actuellement)\",\"dialogs.schedule.email.attachment.label\":\"Pièce jointe :\",\"dialogs.schedule.email.attachments.label\":\"Pièces jointes :\",\"dialogs.schedule.email.attachment.select\":\"Sélectionner les pièces jointes\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Ce tableau de bord ne contient aucune perception.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Tableau de bord (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Perception (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Programmer un envoi par e-mail\",\"dialogs.schedule.email.heading\":\"Programmer l'exportation\",\"dialogs.schedule.email.message.label\":\"Message:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 destinataire désinscrit} other {# destinataires désinscrits}} de ce programme.\",\"dialogs.schedule.email.repeats.label\":\"Se répète :\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"le {date} jour\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"le {week, select, 1 {premier} 2 {deuxième} 3 {troisième} 4 {quatrième} other {dernier}} {day}\",\"dialogs.schedule.email.repeats.every\":\"toutes les\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {jour} other {jours}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {mois} other {mois}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {semaine} other {semaines}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Personnalisé\",\"dialogs.schedule.email.repeats.types.daily\":\"Quotidiennement\",\"dialogs.schedule.email.repeats.types.monthly\":\"Mensuellement le {week, select, 1 {premier} 2 {deuxième} 3 {troisième} 4 {quatrième} other {dernier}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Hebdomadairement le {day}\",\"dialogs.schedule.email.subject.label\":\"Objet:\",\"dialogs.schedule.email.time.label\":\"Première occurrence :\",\"dialogs.schedule.email.to.label\":\"À:\",\"dialogs.schedule.email.message.placeholder\":\"Bonjour,\\n\\nvotre e-mail programmé est prêt. Vous pouvez télécharger le tableau de bord dans les pièces jointes.\",\"dialogs.schedule.email.submit\":\"Planifier\",\"dialogs.schedule.email.save\":\"Enregistrer\",\"dialogs.schedule.email.format.options\":\"Options de format\",\"dialogs.schedule.email.insight.format\":\"Format de perception:\",\"dialogs.schedule.email.attribute.merged\":\"Garder les cellules d'attributs fusionnées\",\"dialogs.schedule.email.show.filters\":\"Montrer les filtres appliqués\",\"dialogs.schedule.management.title\":\"Exportations programmées\",\"dialogs.schedule.management.delete\":\"Supprimer la planification.\",\"dialogs.schedule.management.delete.dialog\":\"Supprimer la planification ?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>La planification</b> sera supprimée de façon définitive.\",\"dialogs.schedule.management.noSchedules\":\"Le tableau de bord ne contient aucune exportation programmée.{br}Ajoutez-en une dès maintenant.\",\"dialogs.schedule.management.noSchedules.byUser\":\"Vous n'avez aucune exportation programmée.{br}Ajoutez-en une dès maintenant.\",\"dialogs.schedule.management.addSchedule\":\"Ajouter planification\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# destinataire} other {# destinataires}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Vous uniquement\",\"dialogs.schedule.management.attachments.dashboard\":\"Tableau de bord\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# perception} other {# perceptions}}\",\"dialogs.schedule.management.attachments.mixed\":\"Tableau de bord et {n, plural, one {# perception} other {# perceptions}}\",\"dialogs.schedule.management.load.error\":\"Le chargement a échoué. Veuillez réessayer plus tard.\",\"dialogs.schedule.management.delete.error\":\"La suppression de la planification a échoué. Veuillez réessayer plus tard.\",\"dialogs.schedule.management.tab.all\":\"tout\",\"dialogs.schedule.management.tab.user\":\"créées par moi\",\"options.menu.schedule.email.recipient.invalid\":\"Ceci n'est pas une adresse e-mail valide.\",\"options.menu.schedule.email.recipient.warning.existed\":\"Vous avez déjà ajouté ce destinataire.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Cette adresse e-mail ne fait pas partie de cet espace de travail. Le destinataire recevra peut-être des données sensibles.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Cette adresse e-mail ne fait pas partie de cet espace de travail. Seul l'auteur du programme peut ajouter cette adresse e-mail.\",\"delete\":\"Supprimer\",\"close\":\"Fermer\",\"cancel\":\"Annuler\",\"gs.date.at\":\"à\",\"gs.date.today\":\"Aujourd'hui\",\"gs.date.tomorrow\":\"Demain\",\"gs.date.yesterday\":\"Hier\",\"kpi.alertBox.title\":\"Définir une alerte lors de la modification du KPI\",\"kpi.alertBox.example\":\"Par ex.\",\"kpi.alertBox.unverifiedEmail\":\"Désolé, vous ne pouvez pas définir une alerte. Assurez-vous que votre e-mail est vérifié. Si cela n'aide pas, demandez à votre administrateur de mettre à jour vos autorisations.\",\"kpi.alertBox.disabledInReadOnly\":\"Les alertes sont désactivées en mode lecture seule\",\"kpi.error.view\":\"Impossible d'afficher le KPI. Contactez votre administrateur pour corriger la définition du KPI.\",\"kpiAlertDialog.delete\":\"Supprimer\",\"kpiAlertDialog.deleting\":\"Suppression en cours…\",\"kpiAlertDialog.emailMe\":\"Envoyez-moi un e-mail\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe} lorsque ce KPI est\",\"kpiAlertDialog.emailInfo\":\"L'e-mail sera envoyé à {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Ce nombre n'est pas valide.</strong>{br}Vérifiez-le et réessayez.\",\"kpiAlertDialog.filtersDiffer\":\"KPI est à présent filtré différemment que lors de la configuration de l'alerte.\",\"kpiAlertDialog.filtersApply\":\"Appliquer les filtres d'alerte au tableau de bord\",\"kpiAlertDialog.savingFailed\":\"Échec de l'enregistrement de l'alerte. Réessayez.\",\"kpiAlertDialog.deleteingFailed\":\"Échec de suppression de l'alerte. Réessayez.\",\"kpiAlertDialog.brokenAlert\":\"Alerte interrompue\",\"kpiAlertDialog.brokenAlertAppeal\":\"Pour voir la valeur correcte de KPI, mettez à jour les filtres dans cette alerte. Vous pouvez également supprimer l'alerte.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Date\",\"kpiAlertDialog.removedFilters\":\"Filtres supprimés du tableau de bord\",\"kpiAlertDialog.ignoredFilters\":\"Filtres ignorés pour ce KPI\",\"kpiAlertDialog.updateTitle\":\"Mettre à jour\",\"kpiAlertDialog.updateBrokenTitle\":\"Mettre à jour les filtres\",\"kpiAlertDialog.updatingTitle\":\"Mise à jour en cours…\",\"kpiAlertDialog.updateBrokenFailed\":\"Échec de mise à jour des filtres. Réessayez.\",\"kpiAlertDialog.setTitle\":\"Définir l'alerte\",\"kpiAlertDialog.settingTitle\":\"Définition en cours…\",\"kpiAlertDialog.threshold.above\":\"au-dessus de\",\"kpiAlertDialog.threshold.below\":\"au-dessous de\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} plus {numFilters, select, 1 {filtre} other {filtres}} appliqués\",\"messages.exportResultError\":\"Échec de l'exportation des données. Réessayez plus tard.\",\"messages.exportResultRestrictedError\":\"Vous ne pouvez pas exporter cette perception car elle contient des données à accès restreint.\",\"messages.exportResultStart\":\"Exportation en cours\",\"messages.exportResultSuccess\":\"Exportation effectuée\",\"messages.sharingChangedSuccess\":\"Partage mis à jour.\",\"messages.sharingChangedError.general\":\"La mise à jour des paramètres de partage a échoué. Veuillez réessayer ultérieurement.\",\"messages.sharingDialogError.general\":\"Le chargement des paramètres de partage a échoué. Veuillez réessayer ultérieurement.\",\"visualization.dataTooLarge.headline\":\"Trop de points de données à afficher\",\"visualization.dataTooLarge.text\":\"Essayez d'appliquer un ou plusieurs filtres à votre tableau de bord.\",\"visualization.execute_protected_report.headline\":\"Vous n'êtes pas autorisé à consulter ce rapport\",\"visualization.execute_protected_report.text\":\"Contactez votre administrateur.\",\"visualization.alert_not_supported\":\"Les alertes ne sont pas prises en charge sur la période de dates statique\",\"visualization.empty.headline\":\"Aucune donnée pour votre sélection de filtre\",\"visualization.error.headline\":\"Désolé, nous ne pouvons pas afficher cette perception\",\"visualization.error.text\":\"Contactez votre administrateur.\",\"options.button.bubble\":\"Exporter les données de perception\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"La perception ne peut pas être exportée à l'heure actuelle. Essayez d'appliquer d'autres filtres ou d'utiliser d'autres mesures ou attributs.\",\"options.menu.unsupported.error._metric\":\"La perception ne peut pas être exportée à l'heure actuelle. Essayez d'appliquer d'autres filtres ou d'utiliser d'autres métriques ou attributs.\",\"options.menu.unsupported.loading\":\"La perception ne peut pas être exportée à l'heure actuelle.\",\"export.defaultTitle\":\"Perception sans titre\",\"export_unsupported.disabled\":\"L'exportation n'est pas prise en charge.\",\"widget.options.menu.exportToCSV\":\"Exporter au format CSV\",\"widget.options.menu.exportToXLSX\":\"Exporter vers XLSX\",\"widget.options.menu.scheduleExport\":\"Programmer l'exportation\",\"share.button.text\":\"Partage\",\"dashboard.error.empty.heading\":\"Ce tableau de bord est vide\",\"dashboard.error.empty.text\":\"Toutes les perceptions ont été retirées.\",\"dashboard.shareDialog.underLenientControl.label\":\"D'autres utilisateurs peuvent accéder à ce tableau de bord s'ils l'explorent\",\"dashboard.shareDialog.lock.label\":\"Seuls les administrateurs peuvent modifier ce tableau de bord\",\"header.lockStatus.tooltip\":\"<b>Ce tableau de bord est verrouillé.</b> Seuls les administrateurs peuvent modifier ce tableau de bord.\",\"header.shareStatus.private.text\":\"Privé\",\"header.shareStatus.private.strict.tooltip\":\"Vous seul pouvez visualiser et modifier ce tableau de bord.\",\"header.shareStatus.private.not.strict.tooltip\":\"Le créateur du tableau de bord peut modifier celui-ci. Les autres utilisateurs avec des rôles adéquats peuvent modifier le tableau de bord lorsqu'ils l'explorent.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Retirer l'accès à ce tableau de bord.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"L'utilisateur qui a créé ce tableau de bord. Les créateurs ne peuvent pas être retirés.\",\"attributesDropdown.placeholder\":\"Rechercher…\",\"attributesDropdown.configuration\":\"Configuration\",\"attributesDropdown.itemsFiltered\":\"Les éléments sont filtrés.\",\"attributesDropdown.allItemsFiltered\":\"Tous les éléments ont été filtrés.\",\"attributesDropdown.itemsFiltered.tooltip\":\"Les éléments sont filtrés par : <strong>{filters}</strong>\",\"attributesDropdown.save\":\"Enregistrer\",\"attributesDropdown.filterBy\":\"Filtrer par\",\"attributesDropdown.displayValuesAs\":\"Affichage des valeurs\",\"attributesDropdown.title\":\"Titre\",\"attributesDropdown.title.reset\":\"Réinitialiser\",\"attributesDropdown.selectionMode\":\"Sélection\",\"attributesDropdown.selectionMode.multi\":\"Valeurs multiples\",\"attributesDropdown.selectionMode.single\":\"Valeur unique\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"La sélection d'une seule valeur n'est pas autorisée si un ou plusieurs filtres sont sélectionnés dans Filtrer par. Pour utiliser la sélection de valeur unique, désactivez tous les filtres dans Filtrer par.\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"L'utilisation d'autres filtres est désactivée pour la sélection de valeur unique. Pour configurer la section Filtrer par, choisissez la sélection de valeurs multiples.\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> ne peut pas être filtré par <strong>{parentTitle}</strong>. Il n'existe aucune connexion entre les attributs du filtre dans le modèle de données.\",\"attributesDropdown.details.dataset\":\"Ensemble de données\",\"attributesDropdown.details.values\":\"Valeurs\",\"attributesDropdown.details.shortening_decoration\":\"…et {count} de plus\",\"attributesDropdown.removeTooltip\":\"Retirer du tableau de bord\",\"layout.header.characters.left\":\"{currentCharactersCount}/{maximumCharactersCount} caractères restant\",\"layout.header.add.title.placeholder\":\"Ajouter un titre ici...\",\"layout.header.add.description.placeholder\":\"Ajouter une description ici...\",\"error\":\"Erreur\",\"controlButtons.edit.value\":\"Modifier\",\"controlButtons.saveAndPublish.value\":\"Enregistrer et publier\",\"controlButtons.save.value\":\"Enregistrer\",\"controlButtons.saveAndPublish.title\":\"Toutes les modifications seront immédiatement visibles pour tous les utilisateurs qui ont accès à ce tableau de bord.\",\"controlButtons.saveAsPrivate.title\":\"Toutes les modifications vont être enregistrées.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"Impossible d'enregistrer un tableau de bord vide\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"Il n'y a aucun changement à enregistrer\",\"controlButtons.saving.value\":\"Enregistrement en cours…\",\"gs.visualizationsList.tabs.all\":\"tout\",\"gs.visualizationsList.tabs.my\":\"créées par moi\",\"visualizationsList.noInsights\":\"Cet espace de travail ne contient aucune perception.\",\"visualizationsList.create\":\"Créer une perception\",\"visualizationsList.noUserInsights\":\"Aucune perception créée.\",\"visualizationsList.noVisualizationsFound\":\"Aucune perception correspondante.\",\"search_insights\":\"Rechercher tout…\",\"save.as.new\":\"Enregistrer sous un nouveau nom\",\"addPanel.deleteItem\":\"Déposer pour supprimer\",\"addPanel.newItem\":\"Nouvel élément\",\"addPanel.attributeFilter\":\"Filtre d'attribut\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"Le filtre d'attribut nécessite un attribut.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"En savoir plus\",\"addPanel.kpi\":\"Indicateur clé de performance\",\"addPanel.kpi.tooltip.no_measures._measure\":\"L'indicateur clé de performance nécessite une mesure calculée.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"L'indicateur clé de performance nécessite une métrique.\",\"addPanel.kpi.tooltip.no_measures.link\":\"En savoir plus\",\"visualizationsList.dragToAdd\":\"Faire glisser pour ajouter\",\"visualizationsList.savedVisualizations\":\"Perceptions enregistrées\",\"configurationPanel.drillConfig.selectDashboard\":\"Choisir un tableau de bord…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Rechercher dans tous les tableaux de bord…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(Non partagé avec vous)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"Le tableau de bord n'est pas partagé avec vous, mais d'autres utilisateurs y ont accès.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"Le tableau de bord n'est pas partagé avec vous, mais tous les utilisateurs peuvent y accéder s'ils l'explorent.\",\"configurationPanel.remove.form.dashboard\":\"Retirer du tableau de bord\",\"filterBar.filter.drop\":\"déposer pour ajouter\",\"filterBar.filter.addFilterPlaceholder\":\"Faites glisser {icon} ici\",\"filterBar.filter.dropzone.tooltip\":\"Faites glisser le filtre d'attribut ici.\",\"configurationPanel.title\":\"Configuration\",\"configurationPanel.comparison\":\"Comparaison\",\"configurationPanel.compareWith\":\"Comparer avec\",\"configurationPanel.increasingNumberIs\":\"Le nombre croissant est\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Période précédente\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Même période de l'année précédente\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Aucune comparaison\",\"configurationPanel.comparisonDirectionItems.green\":\"Vert\",\"configurationPanel.comparisonDirectionItems.red\":\"Rouge\",\"configurationPanel.unlistedMetric._measure\":\"Mesure non répertoriée\",\"configurationPanel.unlistedMetric._metric\":\"Métrique non répertoriée\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Cette mesure est cachée. Vous seul pouvez la voir.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Cette métrique est cachée. Vous seul pouvez la voir.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Sélectionner la mesure…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Sélectionner la métrique…\",\"configurationPanel.selectComparisonPlaceholder\":\"Sélectionner la comparaison…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Sélectionner positif/négatif\",\"configurationPanel.measure._measure\":\"Mesure\",\"configurationPanel.measure._metric\":\"Métrique\",\"configurationPanel.filterBy\":\"Filtrer par\",\"configurationPanel.date\":\"Date\",\"configurationPanel.dateAs\":\"comme\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"La perception ne peut pas être filtrée par {attributeName}. Décochez la case.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"Le KPI ne peut pas être filtré par {attributeName}. Décochez la case.\",\"configurationPanel.vizCantBeFilteredByDate\":\"La perception ne peut pas être filtrée par Date. Décochez la case.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"Le KPI ne peut pas être filtré par Date. Décochez la case.\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" ne peut plus être appliqué à la perception. Sélectionnez une dimension différente ou éditez la perception.\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\" ne peut plus être appliqué au KPI. Sélectionnez une dimension différente ou modifiez le KPI.\",\"configurationPanel.breakAlertWarning\":\"\\n            Les utilisateurs ont défini {numAlerts} {numAlerts, select, 1 {alerte} other {alertes}}\\n            pour ce KPI. Le fait de modifier le KPI affectera {numAlerts, select, 1 {cette alerte} other {ces alertes}}.\\n\",\"configurationPanel.drillIntoDashboard\":\"Explorer le tableau de bord\",\"configurationPanel.noLinkableDashboards\":\"Aucun tableau de bord vers lequel lier\",\"configurationPanel.selectDashboard\":\"Sélectionner un tableau de bord\",\"configurationPanel.interactions\":\"Interactions\",\"configurationPanel.drillConfig.interactions\":\"Explorer les interactions\",\"configurationPanel.drillConfig.addInteraction\":\"Ajouter une interaction\",\"configurationPanel.drillConfig.clickHint\":\"Lorsque je clique sur\",\"configurationPanel.drillConfig.measureValue._measure\":\"Valeur de mesure\",\"configurationPanel.drillConfig.measureValue._metric\":\"Valeur de métrique\",\"configurationPanel.drillConfig.attributeValue\":\"Valeur d'attribut\",\"configurationPanel.drillConfig.selectTarget\":\"Je veux\",\"configurationPanel.drillConfig.clickHintItem\":\"Lorsque je clique sur <addon>(valeur de)</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Explorer le tableau de bord\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Explorer la perception\",\"configurationPanel.drillConfig.drillIntoUrl\":\"Explorer l'URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Paramètres URL non valides\",\"configurationPanel.drillConfig.select\":\"Choisir une action…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"La valeur de l'attribut date de la perception ne sera pas transférée pour filtrer le tableau de bord cible.\",\"configurationPanel.unlistedDashboardTab\":\"Tableau de bord non répertorié\",\"configurationPanel.visualprops.sectionTitle\":\"Titre\",\"configurationPanel.visualprops.hideTitle\":\"Masquer le titre\",\"configurationPanel.visualprops.sectionDescription\":\"Description\",\"configurationPanel.visualprops.inheritDescription\":\"Hériter\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Hériter de la description de la perception.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Hériter de la description de la métrique.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Hériter de la description de la mesure.\",\"configurationPanel.visualprops.customDescription\":\"Personnalisé\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Ajouter une description personnalisée pour cette instance de la perception.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Ajouter une description personnalisée.\",\"configurationPanel.visualprops.noneDescription\":\"Aucun(e)\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Inclure les descriptions des mesures\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Inclure les descriptions des métriques\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Afficher une liste des mesures de la perception et leur description.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Afficher une liste des métriques de la perception et leur description.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Ajouter une description…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"Sélectionner une URL\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Hyperlien dans le libellé de l'attribut\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"URL personnalisée\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Ajouter une URL personnalisée\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Modifier une URL personnalisée\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Paramètres\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Les paramètres sont des éléments par défaut substitués par des valeurs dynamiques lors de l'exploration.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Ajouter\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Type\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Libellé\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {Valeur} other {Valeurs}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...et {count} de plus\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"ID de la perception\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"ID du client\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"ID du produit de données\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"ID du projet\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"ID de l'espace de travail\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"ID du widget\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"ID du tableau de bord\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Identificateur\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Perception\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Identificateurs\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Appliquer\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Annuler\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"Saisissez l'URL et ajoutez des paramètres à partir du panneau de droite.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"Comment créer des URL personnalisées ?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Paramètres non valides : {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Ajouter une URL personnalisée\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Modifier une URL personnalisée\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Valeur du libellé de l'attribut\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Valeur géographique de l'attribut\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"Valeur de l'URL de l'attribut\",\"configurationPanel.zoomInsight\":\"Zoom sur la perception\",\"configurationPanel.zoomInsight.help\":\"Zoomez sur une perception pour l'afficher en détail. Maintenez la touche Maj enfoncée pour parcourir la zone agrandie.\",\"configurationPanel.zoomInsight.notice\":\"Le zoom n'est pas appliqué aux tableaux de bord exportés\",\"configurationPanel.drillConfig.selectInsight\":\"Choisir une perception…\",\"gs.date.date-dataset.recommended\":\"Recommandé\",\"gs.date.date-dataset.other\":\"Autre\",\"gs.date.date-dataset.related\":\"Associé\",\"gs.date.date-dataset.unrelated\":\"Non associé\",\"layout.widget.width.min\":\"Le widget est à la largeur minimale\",\"layout.widget.width.max\":\"Le widget est à la largeur maximale\",\"layout.widget.height.min\":\"Le widget est à la hauteur minimale\",\"layout.widget.height.max\":\"Le widget est à la hauteur maximale\",\"layout.widget.addedByPlugin\":\"Ajouté par le plug-in\",\"layout.widget.modifiedByPlugin\":\"Modifié par le plug-in\",\"layout.widget.hideOverlay\":\"Masquer le chevauchement\",\"dropzone.new.row.desc\":\"Déposer l'élément pour créer une{nbsp}<b>nouvelle section</b>\",\"dropzone.widget.desc\":\"Déposer <b>ici</b>\",\"dropzone.widget.last.in.row.desc\":\"Déposer dans la <b>section existante</b>\",\"deleteKpiConfirmationDialog.headline\":\"Supprimer le KPI\",\"deleteKpiConfirmationDialog.message\":\"Toutes les alertes configurées pour ce KPI vont être supprimées.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Supprimer\",\"newDashboard.title\":\"Faire glisser une perception ici\",\"newDashboard.dropInsight\":\"Déposer une perception\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> est déjà filtré par le filtre <strong>{childTitle}</strong>, directement ou via d'autres filtres.\",\"attributesDropdown.attributeNameWithData\":\"avec les données de\"}","module.exports = {\"loading\":\"読み込んでいます…\",\"untitled\":\"無題\",\"empty_value\":\"空の値\",\"gs.list.cancel\":\"キャンセル\",\"gs.list.apply\":\"適用\",\"gs.list.only\":\"限定\",\"messages.dashboardSaveSuccess\":\"完了。ダッシュボードを保存しました。\",\"options.menu.save.as\":\"新規として保存\",\"options.menu.save.as.tooltip\":\"空のダッシュボードは保存されません。\",\"messages.dashboardSaveFailed\":\"ダッシュボードを保存できませんでした。再試行してください。\",\"messages.dashboard.invalidDrills.title\":\"<b>操作が削除されました</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"1 つ以上のダッシュボード/インサイト/測定値/属性が変更または削除されたため、以下のウィジェットからいくつかの操作が削除されました：<b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"1 つ以上のダッシュボード/インサイト/測定値/属性が変更または削除されたため、以下のウィジェットからいくつかの操作が削除されました：<b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>URL へのドリル操作が無効化されました</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"インサイト属性の変更により、以下のウィジェットの URL  へのドリル操作の一部が無効化されました：<b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"もっと表示\",\"messages.dashboard.expandable.showLess\":\"簡易表示\",\"messages.drill.InteractionConfiguredSuccess\":\"操作が設定されました。\",\"messages.drill.InteractionUpdatedSuccess\":\"操作が更新されました。\",\"filterBar.showAll\":\"すべて表示\",\"filterBar.showLess\":\"簡易表示\",\"options.menu.export.PDF\":\"PDF にエクスポート\",\"options.menu.schedule.email\":\"メール送信予定\",\"options.menu.delete\":\"削除\",\"dialogs.export.cells\":\"セル\",\"dialogs.export.filters\":\"インサイトのコンテキスト\",\"dialogs.export.includeFilters\":\"適用済みフィルターを含める\",\"dialogs.export.headline\":\"XLSX にエクスポート\",\"dialogs.export.mergeHeaders\":\"アトリビュートセルのマージを維持します\",\"dialogs.export.submit\":\"エクスポート\",\"dialogs.schedule.email.delete.success\":\"成功！メール送信予定は削除されました。\",\"dialogs.schedule.email.submit.success\":\"成功！あなたのダッシュボードでメール送信が予定されました。\",\"dialogs.schedule.email.submit.error\":\"ダッシュボードのスケジュールに失敗。後で再試行してください。\",\"dialogs.schedule.email.save.success\":\"スケジュールの保存に成功しました！\",\"dialogs.schedule.email.save.error\":\"スケジュールの保存に失敗。後で再試行してください。\",\"dialogs.save.as.new.title\":\"新規のダッシュボードとして保存\",\"dialogs.save.as.new.desc\":\"新規ダッシュボードにわかりやすい名前を付けて、後日見つけやすいようにします。\",\"dialogs.save.as.new.default.title\":\"{title}のコピー\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"警告とメールのスケジュールは重複しません\",\"dialogs.save.as.new.alertsMessage\":\"警告は重複しません\",\"dialogs.save.as.new.emailsMessage\":\"メールのスケジュールは重複しません\",\"cancelConfirmationDialog.headline\":\"変更を廃棄しますか？?\",\"cancelConfirmationDialog.message\":\"すべての変更が失われます\",\"cancelConfirmationDialog.submitButtonText\":\"変更を破棄\",\"deleteDashboardDialog.headline\":\"ダッシュボードを消去しますか？\",\"deleteDashboardDialog.submitButtonText\":\"削除\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"このダッシュボードのすべてのアラートとメールスケジュール設定も削除されます。\",\"deleteDashboardDialog.alertsMessage\":\"このダッシュボードに対して設定されたすべての通知が消去されます。\",\"deleteDashboardDialog.emailsMessage\":\"このダッシュボードで設定された予約メールはすべて消去されます。\",\"deleteDashboardDialog.drillMessage\":\"このダッシュボードから他のダッシュボードへのドリルが全て削除されます。\",\"create.dashboard\":\"ダッシュボードを作成\",\"drill_modal_picker.drill-down\":\"ドリルダウン\",\"drill_modal_picker.drill-into\":\"ドリル\",\"drill_modal_picker.more.details\":\"詳細\",\"drillModal.backToTop\":\"トップに戻る\",\"filters.allTime.previousPeriod\":\"前期\",\"filters.allTime.lastYear\":\"前年\",\"filters.minute.previousPeriod\":\"過去 1 分間\",\"filters.hour.previousPeriod\":\"過去 1 時間\",\"filters.day.previousPeriod\":\"前の {n, plural, one {日} other {#日}}\",\"filters.week.previousPeriod\":\"前の {n, plural, one {週間} other {#週間}}\",\"filters.month.previousPeriod\":\"前の {n, plural, one {ヶ月} other {#ヶ月}}\",\"filters.quarter.previousPeriod\":\"前の {n, plural, one {四半期} other {#四半期}}\",\"filters.year.previousPeriod\":\"前の {n, plural, one {年間} other {#年}}\",\"filters.alertMessage.relativePreset\":\"{calendarIcon} {range}で\",\"filters.alertMessage.relativePreset.inPeriod\":\"{calendarIcon}から {range}の期間\",\"filters.config.warning.multipleProjectConfigs\":\"このプロジェクトに関連付けされたプロジェクト用日付フィルター設定が複数あります。最初のフィルター設定が使用されました。\",\"filters.config.warning.multipleWorkspacesConfigs\":\"このワークスペースには、複数のワークスペース日付フィルター設定が関連付けられています。最初の設定が使用されました。\",\"filters.config.warning.selectedFilterNotValid\":\"デフォルトのフィルターオプションは使用できないため、代わりに使用可能な最初のオプションを適用しています。\",\"filters.config.warning.allOptionsHidden\":\"フィルターオプションをすべて隠す設定になっているため、ダッシュボード用日付フィルター設定は無視されました。\",\"filters.config.warning.conflictingIdentifiers\":\"同一の識別子を持つ日付フィルターオプションを含むため、ダッシュボード用日付フィルター設定は無視されました。\",\"filters.config.warning.notAvailable\":\"プロジェクト用日付フィルター設定が定義されていないか、アクセスが許可されていません。\",\"filters.config.warning.workspace.notAvailable\":\"ワークスペース日付フィルター設定が定義されていないか、アクセス権限がありません。\",\"kpi.noData\":\"現在のフィルター設定に対するデータがありません。フィルターを変更してみてください。\",\"kpiPop.change\":\"変更\",\"dialogs.schedule.email.filters\":\"ダッシュボードには、スケジュールに保存されるフィルターの変更が含まれています。\",\"dialogs.schedule.email.filters.not.saved\":\"スケジュールに保存されたダッシュボードフィルターは影響を受けません。\",\"dialogs.schedule.email.attachment.filter\":\"（現在設定されているフィルターを使用）\",\"dialogs.schedule.email.attachment.label\":\"添付：\",\"dialogs.schedule.email.attachments.label\":\"添付：\",\"dialogs.schedule.email.attachment.select\":\"添付ファイルを選択\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"このダッシュボードには、インサイトは含まれていません。\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"ダッシュボード（PDF）\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"インサイト（CSV、XLSX）\",\"dialogs.schedule.email.headline\":\"メール送信予定\",\"dialogs.schedule.email.heading\":\"エクスポート予定\",\"dialogs.schedule.email.message.label\":\"メッセージ:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1} other {#}} 名がこの予定の購読を中止しました。\",\"dialogs.schedule.email.repeats.label\":\"繰り返し：\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"{date}日目\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"{week, select, 1 {初週の} 2 {番目の} 3 {第三の} 4 {第四の} other {最後の}} {day}\",\"dialogs.schedule.email.repeats.every\":\"頻度\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {日} other {日}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {月} other {月}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {週} other {週}}\",\"dialogs.schedule.email.repeats.types.custom\":\"カスタム\",\"dialogs.schedule.email.repeats.types.daily\":\"日次\",\"dialogs.schedule.email.repeats.types.monthly\":\"毎月 {week, select, 1 {初週の} 2 {番目の} 3 {第三の} 4 {第四の} other {最後の}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"毎週 {day}\",\"dialogs.schedule.email.subject.label\":\"件名:\",\"dialogs.schedule.email.time.label\":\"開始日時：\",\"dialogs.schedule.email.to.label\":\"宛先:\",\"dialogs.schedule.email.message.placeholder\":\"スケジュールされたメールの準備ができました。ダッシュボードを添付ファイルとしてダウンロードできます。\",\"dialogs.schedule.email.submit\":\"スケジュール\",\"dialogs.schedule.email.save\":\"保存\",\"dialogs.schedule.email.format.options\":\"書式オプション\",\"dialogs.schedule.email.insight.format\":\"インサイト書式：\",\"dialogs.schedule.email.attribute.merged\":\"アトリビュートセルのマージを維持します\",\"dialogs.schedule.email.show.filters\":\"適用されたフィルターを表示\",\"dialogs.schedule.management.title\":\"エクスポート予定\",\"dialogs.schedule.management.delete\":\"スケジュールを削除\",\"dialogs.schedule.management.delete.dialog\":\"スケジュールを削除しますか？\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>スケジュール</b>は完全に削除されます。\",\"dialogs.schedule.management.noSchedules\":\"このダッシュボードには、エクスポート予定がありません。{br}新しく追加してください。\",\"dialogs.schedule.management.noSchedules.byUser\":\"あなたのエクスポート予定がありません。{br}新しく追加してください。\",\"dialogs.schedule.management.addSchedule\":\"予定を追加\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# 受信者} other {# 受信者}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"あなたのみ\",\"dialogs.schedule.management.attachments.dashboard\":\"ダッシュボード\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# インサイト} other {# インサイト}}\",\"dialogs.schedule.management.attachments.mixed\":\"ダッシュボードおよび {n, plural, one {# インサイト} other {# インサイト}}\",\"dialogs.schedule.management.load.error\":\"読み込みに失敗しました。後で再試行してください。\",\"dialogs.schedule.management.delete.error\":\"スケジュールの削除に失敗しました。後で再試行してください。\",\"dialogs.schedule.management.tab.all\":\"すべて\",\"dialogs.schedule.management.tab.user\":\"自分が作成\",\"options.menu.schedule.email.recipient.invalid\":\"これは有効なメールアドレスではありません。\",\"options.menu.schedule.email.recipient.warning.existed\":\"この受信者はすでに追加されています。\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"このメールアドレスはワークスペースに属していません。受信者は機密データを受け取る可能性があります。\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"このメールアドレスはこのワークスペースに属していません。このメールアドレスを追加できるのは、スケジュールの作成者のみです。\",\"delete\":\"削除\",\"close\":\"閉じる\",\"cancel\":\"キャンセル\",\"gs.date.at\":\"の時刻\",\"gs.date.today\":\"今日\",\"gs.date.tomorrow\":\"明日\",\"gs.date.yesterday\":\"昨日\",\"kpi.alertBox.title\":\"KPIの変更に通知を設定\",\"kpi.alertBox.example\":\"例:\",\"kpi.alertBox.unverifiedEmail\":\"申し訳ございませんが、通知を設定できません。電子メールが有効なことを確認してください。それでも問題が解決しない場合は、管理者にあなたの許可を更新するように要請してください。\",\"kpi.alertBox.disabledInReadOnly\":\"読み取り専用モードではアラートは無効になっています\",\"kpi.error.view\":\"KPIを表示できません。管理者にKPI定義を修正するように要請してください。\",\"kpiAlertDialog.delete\":\"削除\",\"kpiAlertDialog.deleting\":\"消去しています…\",\"kpiAlertDialog.emailMe\":\"メールで通知する\",\"kpiAlertDialog.emailMeWhen\":\"KPI が次の場合、{emailMe}\",\"kpiAlertDialog.emailInfo\":\"電子メールの送信先:{userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>この数値は無効です。</strong>{br}再確認して、再試行してください。\",\"kpiAlertDialog.filtersDiffer\":\"通知が設定されたときと異なるフィルターが、KPIに適用されています。\",\"kpiAlertDialog.filtersApply\":\"通知のフィルターをダッシュボードに適用\",\"kpiAlertDialog.savingFailed\":\"通知を保存できませんでした。もう一度やり直してください。\",\"kpiAlertDialog.deleteingFailed\":\"通知を消去できませんでした。もう一度やり直してください。\",\"kpiAlertDialog.brokenAlert\":\"通知が壊れています\",\"kpiAlertDialog.brokenAlertAppeal\":\"正しい KPI の値を確認するには、この通知のフィルターを更新します。通知を削除することもできます。\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"日付\",\"kpiAlertDialog.removedFilters\":\"フィルターをダッシュボードから削除しました\",\"kpiAlertDialog.ignoredFilters\":\"この kpi に対してフィルターが無視されました\",\"kpiAlertDialog.updateTitle\":\"更新\",\"kpiAlertDialog.updateBrokenTitle\":\"フィルターを更新\",\"kpiAlertDialog.updatingTitle\":\"更新中…\",\"kpiAlertDialog.updateBrokenFailed\":\"フィルターの更新に失敗しました。もう一度やり直してください。\",\"kpiAlertDialog.setTitle\":\"通知を設定\",\"kpiAlertDialog.settingTitle\":\"設定中…\",\"kpiAlertDialog.threshold.above\":\"次より上\",\"kpiAlertDialog.threshold.below\":\"次より下\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} 件の {numFilters, select, 1 {フィルター} other {フィルター}} をさらに適用済\",\"messages.exportResultError\":\"データをエクスポートできませんでした。後でもう一度お試しください。\",\"messages.exportResultRestrictedError\":\"制限されているデータを含んでいるため、このインサイトをエクスポートできません。\",\"messages.exportResultStart\":\"エクスポート実行中\",\"messages.exportResultSuccess\":\"正常にエクスポートしました。\",\"messages.sharingChangedSuccess\":\"共有を更新済み。\",\"messages.sharingChangedError.general\":\"共有設定を更新できませんでした。後で再試行してください。\",\"messages.sharingDialogError.general\":\"共有設定をロードできませんでした。後で再試行してください。\",\"visualization.dataTooLarge.headline\":\"表示するデータポイントが多すぎます\",\"visualization.dataTooLarge.text\":\"ダッシュボードに1つまたは複数のフィルターを適用してみてください。\",\"visualization.execute_protected_report.headline\":\"このレポートを表示する権限がありません\",\"visualization.execute_protected_report.text\":\"管理者に連絡してください.\",\"visualization.alert_not_supported\":\"一定日付期間のアラートはサポートされていません。\",\"visualization.empty.headline\":\"フィルターの選択肢にデータがありません\",\"visualization.error.headline\":\"申し訳ございませんが、この解析を表示できません\",\"visualization.error.text\":\"管理者に連絡してください.\",\"options.button.bubble\":\"インサイトデータをエクスポート\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"現在、このインサイトはエクスポートできません。別のフィルターを適用するか、別の測定値や属性をご利用ください。\",\"options.menu.unsupported.error._metric\":\"現在、このインサイトはエクスポートできません。別のフィルターを適用するか、別のメトリックや属性をご利用ください。\",\"options.menu.unsupported.loading\":\"現在、このインサイトはエクスポートできません。\",\"export.defaultTitle\":\"無題の解析\",\"export_unsupported.disabled\":\"エクスポートはサポートされていません\",\"widget.options.menu.exportToCSV\":\"CSV にエクスポート\",\"widget.options.menu.exportToXLSX\":\"XLSX にエクスポート\",\"widget.options.menu.scheduleExport\":\"エクスポート予定\",\"share.button.text\":\"共有する\",\"dashboard.error.empty.heading\":\"このダッシュボードは空欄です\",\"dashboard.error.empty.text\":\"すべてのインサイトは削除されました。\",\"dashboard.shareDialog.underLenientControl.label\":\"共有されていないユーザでも、ドリルによる遷移ではこのダッシュボードにアクセスできます\",\"dashboard.shareDialog.lock.label\":\"このダッシュボードを編集できるのは管理者のみです\",\"header.lockStatus.tooltip\":\"<b>このダッシュボードはロックされています。</b>このダッシュボードを編集できるのは管理者のみです。\",\"header.shareStatus.private.text\":\"プライベート\",\"header.shareStatus.private.strict.tooltip\":\"このダッシュボードを表示および編集できるのは、あなたのみです。\",\"header.shareStatus.private.not.strict.tooltip\":\"作成者はこのダッシュボードを編集できます。適切なユーザーロールを持つ他のユーザーは、ドリルすることでダッシュボードを編集できます。\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"このダッシュボードへのアクセス権を外す。\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"このダッシュボードを作成したユーザー。作成者は削除できません。\",\"attributesDropdown.placeholder\":\"アトリビュートを検索…\",\"attributesDropdown.configuration\":\"設定\",\"attributesDropdown.itemsFiltered\":\"アイテムはフィルター済み\",\"attributesDropdown.allItemsFiltered\":\"すべてのアイテムはフィルター済み\",\"attributesDropdown.itemsFiltered.tooltip\":\"アイテムのフィルター：<strong>{filters}</strong>\",\"attributesDropdown.save\":\"保存\",\"attributesDropdown.filterBy\":\"次によりフィルター:\",\"attributesDropdown.displayValuesAs\":\"値の表示方法\",\"attributesDropdown.title\":\"タイトル\",\"attributesDropdown.title.reset\":\"リセット\",\"attributesDropdown.selectionMode\":\"選択\",\"attributesDropdown.selectionMode.multi\":\"多値\",\"attributesDropdown.selectionMode.single\":\"単独値\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"「次によりフィルター:」でフィルタが選択されている場合、単一値選択はできません。単一値選択を使用するには、「次によりフィルター:」ですべてのフィルタを無効にしてください。\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"単一値選択では、他のフィルターによるフィルタリングは無効です。「次によりフィルター:」を設定するには、複数値選択を選択します。\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> フィルターが無効 <strong>{parentTitle}</strong>。フィルターアトリビュートとデータモデルが無関係です。\",\"attributesDropdown.details.dataset\":\"データセット\",\"attributesDropdown.details.values\":\"値\",\"attributesDropdown.details.shortening_decoration\":\"…その他{count}\",\"attributesDropdown.removeTooltip\":\"ダッシュボードから削除\",\"layout.header.characters.left\":\"残り {currentCharactersCount} / {maximumCharactersCount} 文字\",\"layout.header.add.title.placeholder\":\"こちらにタイトルを追加します…\",\"layout.header.add.description.placeholder\":\"こちらに説明を追加します…\",\"error\":\"エラー\",\"controlButtons.edit.value\":\"編集\",\"controlButtons.saveAndPublish.value\":\"保存して公開\",\"controlButtons.save.value\":\"保存\",\"controlButtons.saveAndPublish.title\":\"すべての変更はこのダッシュボードにアクセスできる人全員にすぐに見えるようになります。\",\"controlButtons.saveAsPrivate.title\":\"すべての変更が保存されます。\",\"controlButtons.saveAndPublish.disable.empty.title\":\"空のダッシュボードは保存できません\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"保存する変更はありません\",\"controlButtons.saving.value\":\"保存しています…\",\"gs.visualizationsList.tabs.all\":\"すべて\",\"gs.visualizationsList.tabs.my\":\"自分が作成\",\"visualizationsList.noInsights\":\"このワークスペースにはインサイトがありません。\",\"visualizationsList.create\":\"インサイトを作成\",\"visualizationsList.noUserInsights\":\"作成されたインサイトはありません。\",\"visualizationsList.noVisualizationsFound\":\"一致する解析はありません。\",\"search_insights\":\"全検索…\",\"save.as.new\":\"新規として保存\",\"addPanel.deleteItem\":\"ドロップして削除\",\"addPanel.newItem\":\"新規項目\",\"addPanel.attributeFilter\":\"アトリビュートフィルター\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"アトリビュートフィルターにはアトリビュートが必要です。\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"詳細\",\"addPanel.kpi\":\"KPI\",\"addPanel.kpi.tooltip.no_measures._measure\":\"キーパフォーマンスインジケーターには、計算済みメジャーが必要です。\",\"addPanel.kpi.tooltip.no_measures._metric\":\"キーパフォーマンスインジケーターには、メトリックが必要です。\",\"addPanel.kpi.tooltip.no_measures.link\":\"詳細\",\"visualizationsList.dragToAdd\":\"ドラッグして追加\",\"visualizationsList.savedVisualizations\":\"保存済みインサイト\",\"configurationPanel.drillConfig.selectDashboard\":\"ダッシュボードを選択…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"全てのダッシュボードを検索…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"（共有されていません）\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"ダッシュボードは共有されていませんが、他のユーザーはこのダッシュボードにアクセスできます。\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"ダッシュボードは共有されていませんが、このダッシュボードにドリルするとアクセスできるようになります。\",\"configurationPanel.remove.form.dashboard\":\"ダッシュボードから削除\",\"filterBar.filter.drop\":\"ドロップして追加\",\"filterBar.filter.addFilterPlaceholder\":\"{icon} をここにドラッグ\",\"filterBar.filter.dropzone.tooltip\":\"アトリビュートフィルターをここにドラッグします。\",\"configurationPanel.title\":\"設定\",\"configurationPanel.comparison\":\"比較\",\"configurationPanel.compareWith\":\"次と比較:\",\"configurationPanel.increasingNumberIs\":\"増加している数は\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"前期\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"前年の同期間\",\"configurationPanel.comparisonTypeItems.noComparison\":\"比較なし\",\"configurationPanel.comparisonDirectionItems.green\":\"緑\",\"configurationPanel.comparisonDirectionItems.red\":\"赤\",\"configurationPanel.unlistedMetric._measure\":\"リストにないメジャー\",\"configurationPanel.unlistedMetric._metric\":\"非公開のメトリック\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"このメジャーは隠されており、あなただけに表示されています。\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"このメトリックは非表示であり、あなただけに表示されています。\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"メジャーを選択…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"メトリックを選択…\",\"configurationPanel.selectComparisonPlaceholder\":\"比較を選択…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"正/負を選択\",\"configurationPanel.measure._measure\":\"メジャー\",\"configurationPanel.measure._metric\":\"メトリック\",\"configurationPanel.filterBy\":\"次によりフィルター:\",\"configurationPanel.date\":\"日付\",\"configurationPanel.dateAs\":\"として\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"解析を {attributeName} によりフィルターできません。チェックボックスをオフにしてください。\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"KPIは{attributeName}でフィルターできません。チェックボックスをオフにしてください。\",\"configurationPanel.vizCantBeFilteredByDate\":\"解析を日付によりフィルターできません。チェックボックスをオフにしてください。\",\"configurationPanel.kpiCantBeFilteredByDate\":\"KPIは日付でフィルターできません。チェックボックスをオフにしてください。\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" は解析に適用できなくなりました。別のディメンションを選ぶか、解析を編集してください。\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\"はKPIに適用できなくなりました。別のディメンションを選ぶか、KPIを編集してください。\",\"configurationPanel.breakAlertWarning\":\"\\n ユーザーがこのKPIで{numAlerts, select, 1 {通知} other {通知}}\\nを{numAlerts}件設定しました。このKPIを変更すると{numAlerts, select, 1 {その通知} other {その通知}}に影響が出ます。\\n\",\"configurationPanel.drillIntoDashboard\":\"ダッシュボードにドリル\",\"configurationPanel.noLinkableDashboards\":\"次にリンクされているダッシュボードはありません\",\"configurationPanel.selectDashboard\":\"ダッシュボードを選択\",\"configurationPanel.interactions\":\"操作\",\"configurationPanel.drillConfig.interactions\":\"ドリル操作\",\"configurationPanel.drillConfig.addInteraction\":\"操作を追加\",\"configurationPanel.drillConfig.clickHint\":\"次をクリックする際:\",\"configurationPanel.drillConfig.measureValue._measure\":\"メジャーの意味\",\"configurationPanel.drillConfig.measureValue._metric\":\"メトリックの値\",\"configurationPanel.drillConfig.attributeValue\":\"アトリビュートの値\",\"configurationPanel.drillConfig.selectTarget\":\"実行したいこと\",\"configurationPanel.drillConfig.clickHintItem\":\"次の<addon>（値）</addon>をクリックすると\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"ダッシュボードにドリル\",\"configurationPanel.drillConfig.drillIntoInsight\":\"インサイトにドリル\",\"configurationPanel.drillConfig.drillIntoUrl\":\"URL にドリル\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"無効な URL パラメーター\",\"configurationPanel.drillConfig.select\":\"アクションを選択…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"インサイトの日付アトリビュート値は、ターゲットダッシュボードをフィルタリングするために転送されません。\",\"configurationPanel.unlistedDashboardTab\":\"リストにないダッシュボード\",\"configurationPanel.visualprops.sectionTitle\":\"タイトル\",\"configurationPanel.visualprops.hideTitle\":\"タイトルを非表示\",\"configurationPanel.visualprops.sectionDescription\":\"説明\",\"configurationPanel.visualprops.inheritDescription\":\"継承\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"インサイトからの説明を継承します。\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"メトリックからの説明を継承します。\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"測定値からの説明を継承します。\",\"configurationPanel.visualprops.customDescription\":\"カスタム\",\"configurationPanel.visualprops.customDescriptionHelp\":\"インサイトのこのインスタンスでカスタムの説明を追加します。\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"カスタムの説明を追加します。\",\"configurationPanel.visualprops.noneDescription\":\"なし\",\"configurationPanel.visualprops.includeMetrics._measure\":\"測定値の説明を含める\",\"configurationPanel.visualprops.includeMetrics._metric\":\"メトリックの説明を含める\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"インサイトの測定値のリストとその説明があるセクションを表示します。\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"インサイトのメトリックのリストとその説明を含むセクションを表示します。\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"説明を追加する…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"URL を選択\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"アトリビュートラベルにハイパーリンク\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"カスタム URL\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"カスタム URL を追加\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"カスタム URL を編集\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"パラメーター\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"パラメーターはプレースホルダーであるため、ドリルした際には動的な値に切り替わります。\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"追加\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"タイプ\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"ラベル\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {値} other {値}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...そして更に {count} \",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"インサイト ID\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"クライアント ID\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"データプロダクト ID\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"プロジェクト ID\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"ワークスペース ID\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"ウィジェット ID\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"ダッシュボード ID\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"識別子\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"インサイト\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"識別子\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"適用\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"キャンセル\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"URL を入力後、右パネルよりパラメーターを追加してください。\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"カスタム URL の作成方法\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"無効なパラメーター： {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"カスタム URL を追加\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"カスタム URL を編集\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"アトリビュートラベル値\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"アトリビュートジオ値\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"アトリビュート URL 値\",\"configurationPanel.zoomInsight\":\"ズーム可能なインサイト\",\"configurationPanel.zoomInsight.help\":\"インサイトのズームを有効にして、詳細ビューを表示します。 Shiftキーを押し続けると、ズーム領域がスクロールできます。\",\"configurationPanel.zoomInsight.notice\":\"エクスポートされたダッシュボードにはズームは適用されません\",\"configurationPanel.drillConfig.selectInsight\":\"インサイトを選択…\",\"gs.date.date-dataset.recommended\":\"お勧め\",\"gs.date.date-dataset.other\":\"その他\",\"gs.date.date-dataset.related\":\"関係する\",\"gs.date.date-dataset.unrelated\":\"無関係な\",\"layout.widget.width.min\":\"現在ウィジェットの幅が最小です\",\"layout.widget.width.max\":\"ウィジェットの幅が最大です\",\"layout.widget.height.min\":\"ウィジェットの高さは最小になっています\",\"layout.widget.height.max\":\"ウィジェットの高さは最大になっています\",\"layout.widget.addedByPlugin\":\"プラグインで追加されました\",\"layout.widget.modifiedByPlugin\":\"プラグインで変更されました\",\"layout.widget.hideOverlay\":\"オーバーレイを隠す\",\"dropzone.new.row.desc\":\"<b>新規のセクション</b>を{nbsp}作成してドロップ\",\"dropzone.widget.desc\":\"<b>ここ</b>にドロップ\",\"dropzone.widget.last.in.row.desc\":\"<b>現行のセクション</b>にドロップ\",\"deleteKpiConfirmationDialog.headline\":\"KPIを消去する\",\"deleteKpiConfirmationDialog.message\":\"このKPIに対して設定されたすべての通知も消去されます。\",\"deleteKpiConfirmationDialog.submitButtonText\":\"削除\",\"newDashboard.title\":\"インサイトをここにドラッグ\",\"newDashboard.dropInsight\":\"インサイトをドラッグ&ドロップ\",\"attributesDropdown.filterConfiguredMessage\":\"直接フィルターか、他のフィルターで<strong>{parentTitle}</strong> すでにフィルター済み <strong>{childTitle}</strong>。\",\"attributesDropdown.attributeNameWithData\":\"データの\"}","module.exports = {\"loading\":\"Laden…\",\"untitled\":\"Zonder titel\",\"empty_value\":\"lege waarde\",\"gs.list.cancel\":\"Annuleren\",\"gs.list.apply\":\"Toepassen\",\"gs.list.only\":\"Alleen\",\"messages.dashboardSaveSuccess\":\"Top. We hebben uw dashboard opgeslagen.\",\"options.menu.save.as\":\"Opslaan als nieuw\",\"options.menu.save.as.tooltip\":\"Leeg dashboard kan niet worden opgeslagen.\",\"messages.dashboardSaveFailed\":\"Kon dashboard niet opslaan, probeer het later opnieuw.\",\"messages.dashboard.invalidDrills.title\":\"<b>Sommige interacties zijn verwijderd</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Een of meer dashboards/inzichten/maten/attributen zijn gewijzigd of verwijderd waardoor bepaalde interacties zijn verwijderd uit de volgende widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Een of meer dashboards/inzichten/meetgegevens/attributen zijn gewijzigd of verwijderd waardoor bepaalde interacties zijn verwijderd uit de volgende widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Sommige 'inzoomen op URL'-interacties zijn uitgeschakeld</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Sommige 'inzoomen op URL'-interacties van de volgende widgets zijn uitgeschakeld vanwege wijzigingen in inzichtattributen: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Meer weergeven\",\"messages.dashboard.expandable.showLess\":\"Minder weergeven\",\"messages.drill.InteractionConfiguredSuccess\":\"Interactie geconfigureerd.\",\"messages.drill.InteractionUpdatedSuccess\":\"Interactie bijgewerkt.\",\"filterBar.showAll\":\"Alle tonen\",\"filterBar.showLess\":\"Minder weergeven\",\"options.menu.export.PDF\":\"Exporteren naar PDF\",\"options.menu.schedule.email\":\"E-mail plannen\",\"options.menu.delete\":\"Verwijderen\",\"dialogs.export.cells\":\"CELLEN\",\"dialogs.export.filters\":\"CONTEXT INZICHT\",\"dialogs.export.includeFilters\":\"Inclusief toegepaste filters\",\"dialogs.export.headline\":\"Exporteren naar XLSX\",\"dialogs.export.mergeHeaders\":\"Attribuutcellen samengevoegd laten\",\"dialogs.export.submit\":\"Exporteren\",\"dialogs.schedule.email.delete.success\":\"Gelukt! Uw geplande e-mail is verwijderd.\",\"dialogs.schedule.email.submit.success\":\"Gelukt! Uw dashboard is ingesteld om te mailen.\",\"dialogs.schedule.email.submit.error\":\"Inplannen van dashboard mislukt. Probeer het later opnieuw.\",\"dialogs.schedule.email.save.success\":\"Gelukt! Uw schema is opgeslagen.\",\"dialogs.schedule.email.save.error\":\"Schema opslaan mislukt. Probeer het later opnieuw.\",\"dialogs.save.as.new.title\":\"Dashboard als nieuw opslaan\",\"dialogs.save.as.new.desc\":\"Geef uw nieuwe dashboard een beschrijvende naam zodat het later makkelijker te vinden is.\",\"dialogs.save.as.new.default.title\":\"Kopie van {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"Alarmen en e-mailschema's worden niet gedupliceerd\",\"dialogs.save.as.new.alertsMessage\":\"Alarmen worden niet gedupliceerd\",\"dialogs.save.as.new.emailsMessage\":\"E-mailschema's worden niet gedupliceerd\",\"cancelConfirmationDialog.headline\":\"Wijzigingen wegdoen?\",\"cancelConfirmationDialog.message\":\"Alle wijzigingen zullen verloren gaan\",\"cancelConfirmationDialog.submitButtonText\":\"Wijzigingen wegdoen\",\"deleteDashboardDialog.headline\":\"Dashboard verwijderen?\",\"deleteDashboardDialog.submitButtonText\":\"Verwijderen\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Alle alarmen en ingeplande e-mails voor dit dashboard worden ook verwijderd.\",\"deleteDashboardDialog.alertsMessage\":\"Alle ingestelde alarmen voor dit dashboard zullen ook worden verwijderd.\",\"deleteDashboardDialog.emailsMessage\":\"Alle ingeplande e-mails voor dit dashboard worden ook verwijderd.\",\"deleteDashboardDialog.drillMessage\":\"Alle detaillering voor dit dashboard van andere dashboards wordt verwijderd.\",\"create.dashboard\":\"Dashboard maken\",\"drill_modal_picker.drill-down\":\"Zoomen\",\"drill_modal_picker.drill-into\":\"Inzoomen op\",\"drill_modal_picker.more.details\":\"Meer details\",\"drillModal.backToTop\":\"Terug naar boven\",\"filters.allTime.previousPeriod\":\"vorige periode\",\"filters.allTime.lastYear\":\"vorig jaar\",\"filters.minute.previousPeriod\":\"vorige minuut\",\"filters.hour.previousPeriod\":\"vorig uur\",\"filters.day.previousPeriod\":\"vorige {n, plural, one {dag} other {#d}}\",\"filters.week.previousPeriod\":\"vorige {n, plural, one {week} other {#w}}\",\"filters.month.previousPeriod\":\"vorige {n, plural, one {maand} other {#m}}\",\"filters.quarter.previousPeriod\":\"vorig {n, plural, one {kwartaal} other {#k}}\",\"filters.year.previousPeriod\":\"vorig {n, plural, one {jaar} other {#j}}\",\"filters.alertMessage.relativePreset\":\"in {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"in periode {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"Er zijn meerdere filterconfiguraties voor de projectdatum gekoppeld aan dit project. De eerste is gebruikt.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"Er zijn meerdere filterconfiguraties voor de werkruimtedatum gekoppeld aan deze werkruimte. De eerste is gebruikt.\",\"filters.config.warning.selectedFilterNotValid\":\"De standaard filteroptie is ongeldig, in plaats daarvan wordt de eerste beschikbare optie gebruikt.\",\"filters.config.warning.allOptionsHidden\":\"De filterconfiguratie voor het dashboard werd genegeerd omdat deze alle filteropties zou hebben verborgen.\",\"filters.config.warning.conflictingIdentifiers\":\"De filterconfiguratie voor het dashboard werd genegeerd omdat deze datumfilteropties met identieke identificators bevat.\",\"filters.config.warning.notAvailable\":\"De filterconfiguratie voor de projectdatum is niet gedefinieerd of u hebt niet de machtigingen om deze te laden.\",\"filters.config.warning.workspace.notAvailable\":\"De filterconfiguratie voor de werkruimtedatum is niet gedefinieerd of u hebt niet de machtigingen om deze te laden.\",\"kpi.noData\":\"Geen data voor de huidige filterinstellingen. Probeer om de filters te wijzigen.\",\"kpiPop.change\":\"Wijziging\",\"dialogs.schedule.email.filters\":\"Dasboard bevat filterwijzigingen die worden opgeslagen in het schema.\",\"dialogs.schedule.email.filters.not.saved\":\"Geen gevolgen voor dashboardfilters die zijn opgeslagen in het schema.\",\"dialogs.schedule.email.attachment.filter\":\"(met momenteel ingestelde filters)\",\"dialogs.schedule.email.attachment.label\":\"Bijlage:\",\"dialogs.schedule.email.attachments.label\":\"Bijlagen:\",\"dialogs.schedule.email.attachment.select\":\"Bijlagen selecteren\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Dit dashboard bevat geen inzichten.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Dashboard (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Inzichten (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Planning e-mailbezorging \",\"dialogs.schedule.email.heading\":\"Planning export\",\"dialogs.schedule.email.message.label\":\"Bericht:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 ontvanger is afgemeld} other {# ontvangers zijn afgemeld}} van dit schema.\",\"dialogs.schedule.email.repeats.label\":\"Herhalingen:\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"op dag {date}\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"op de {week, select, 1 {eerste} 2 {tweede} 3 {derde} 4 {vierde} other {laatste}} {day}\",\"dialogs.schedule.email.repeats.every\":\"elke\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {dag} other {dagen}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {maand} other {maanden}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {week} other {weken}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Aangepast\",\"dialogs.schedule.email.repeats.types.daily\":\"Dagelijks\",\"dialogs.schedule.email.repeats.types.monthly\":\"Maandelijks op de {week, select, 1 {eerste} 2 {tweede} 3 {derde} 4 {vierde} other {laatste}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Wekelijks op {day}\",\"dialogs.schedule.email.subject.label\":\"Onderwerp:\",\"dialogs.schedule.email.time.label\":\"Eerste keer:\",\"dialogs.schedule.email.to.label\":\"Aan:\",\"dialogs.schedule.email.message.placeholder\":\"Hallo,\\n\\nUw geplande e-mail is klaar. U kunt het dashboard in bijlagen downloaden.\",\"dialogs.schedule.email.submit\":\"Plan\",\"dialogs.schedule.email.save\":\"Opslaan\",\"dialogs.schedule.email.format.options\":\"Opmaakopties\",\"dialogs.schedule.email.insight.format\":\"Indeling inzicht:\",\"dialogs.schedule.email.attribute.merged\":\"Attribuutcellen samengevoegd laten\",\"dialogs.schedule.email.show.filters\":\"Tonen welke filters zijn toegepast\",\"dialogs.schedule.management.title\":\"Planning exports\",\"dialogs.schedule.management.delete\":\"Verwijder het schema.\",\"dialogs.schedule.management.delete.dialog\":\"Schema verwijderen?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>Het schema</b> wordt voorgoed verwijderd.\",\"dialogs.schedule.management.noSchedules\":\"Het dashboard bevat geen geplande exports.{br}Voeg er nu een toe.\",\"dialogs.schedule.management.noSchedules.byUser\":\"U hebt nog geen geplande exports.{br}Voeg er nu een toe.\",\"dialogs.schedule.management.addSchedule\":\"Schema toevoegen\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# ontvanger} other {# ontvangers}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Alleen u\",\"dialogs.schedule.management.attachments.dashboard\":\"Dashboard\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# inzicht} other {# inzichten}}\",\"dialogs.schedule.management.attachments.mixed\":\"Dashboard en {n, plural, one {# inzicht} other {# inzichten}}\",\"dialogs.schedule.management.load.error\":\"Laden mislukt. Probeer het later opnieuw.\",\"dialogs.schedule.management.delete.error\":\"Verwijderen planning mislukt. Probeer het later opnieuw.\",\"dialogs.schedule.management.tab.all\":\"alle\",\"dialogs.schedule.management.tab.user\":\"door mij aangemaakt\",\"options.menu.schedule.email.recipient.invalid\":\"Dit is geen geldig e-mailadres.\",\"options.menu.schedule.email.recipient.warning.existed\":\"U hebt deze ontvanger al toegevoegd.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Het e-mailadres hoort niet bij deze werkruimte. De ontvanger ontvangt mogelijk vertrouwelijke gegevens.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Het e-mailadres hoort niet bij deze werkruimte. Alleen de auteur van het schema mag dit e-mailadres toevoegen.\",\"delete\":\"Verwijderen\",\"close\":\"Sluiten\",\"cancel\":\"Annuleren\",\"gs.date.at\":\"bij\",\"gs.date.today\":\"Vandaag\",\"gs.date.tomorrow\":\"Morgen\",\"gs.date.yesterday\":\"Gisteren\",\"kpi.alertBox.title\":\"Een alarm voor de KPI-wijziging instellen\",\"kpi.alertBox.example\":\"bijv.\",\"kpi.alertBox.unverifiedEmail\":\"Sorry, u kunt geen alarm instellen. Zorg ervoor dat uw e-mailadres is geverifieerd. Als dit niet helpt, vraag uw beheerder dan om uw machtigingen bij te werken.\",\"kpi.alertBox.disabledInReadOnly\":\"Alarmen zijn uitgeschakeld in alleen-lezen\",\"kpi.error.view\":\"KPI kan niet worden weergegeven. Neem contact op met uw beheerder om de KPI-definitie te corrigeren.\",\"kpiAlertDialog.delete\":\"Verwijderen\",\"kpiAlertDialog.deleting\":\"Verwijderen…\",\"kpiAlertDialog.emailMe\":\"E-mail mij\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe} wanneer deze KPI wordt\",\"kpiAlertDialog.emailInfo\":\"De e-mail zal worden verstuurd naar {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Dit nummer is ongeldig.</strong>{br}Controleer het nogmaals en probeer het opnieuw.\",\"kpiAlertDialog.filtersDiffer\":\"De KPI wordt nu anders gefilterd dan wanneer het alarm werd ingesteld.\",\"kpiAlertDialog.filtersApply\":\"Alarmfilters op het dashboard toepassen\",\"kpiAlertDialog.savingFailed\":\"Alamr kon niet worden opgeslagen. Probeer het opnieuw.\",\"kpiAlertDialog.deleteingFailed\":\"Het alarm kon niet worden verwijderd. Probeer het opnieuw.\",\"kpiAlertDialog.brokenAlert\":\"Niet-nagekomen waarschuwing\",\"kpiAlertDialog.brokenAlertAppeal\":\"Om de juist KPI-waarde te zien moet u de filters in deze waarschuwing bijwerken. U kunt de waarschuwing ook verwijderen.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Datum\",\"kpiAlertDialog.removedFilters\":\"Filters verwijderd uit dashboard\",\"kpiAlertDialog.ignoredFilters\":\"Geen rekening gehouden met de filters voor deze kpi\",\"kpiAlertDialog.updateTitle\":\"Update\",\"kpiAlertDialog.updateBrokenTitle\":\"Filters bijwerken\",\"kpiAlertDialog.updatingTitle\":\"Updaten…\",\"kpiAlertDialog.updateBrokenFailed\":\"Filters bijwerken mislukt. Probeer het opnieuw.\",\"kpiAlertDialog.setTitle\":\"Alarm instellen\",\"kpiAlertDialog.settingTitle\":\"Instellen…\",\"kpiAlertDialog.threshold.above\":\"boven\",\"kpiAlertDialog.threshold.below\":\"onder\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} meer {numFilters, select, 1 {filter} other {filters}} toegepast\",\"messages.exportResultError\":\"Exporteren van gegevens is mislukt. Probeer het later opnieuw.\",\"messages.exportResultRestrictedError\":\"U kunt dit inzicht niet exporteren omdat het beperkte gegevens bevat.\",\"messages.exportResultStart\":\"Bezig met exporteren\",\"messages.exportResultSuccess\":\"Exporteren geslaagd.\",\"messages.sharingChangedSuccess\":\"Delen bijgewerkt.\",\"messages.sharingChangedError.general\":\"Bijwerken van instellingen voor delen konden niet worden bijgewerkt. Probeer het later opnieuw.\",\"messages.sharingDialogError.general\":\"Laden van instellingen voor delen mislukt. Probeer het later opnieuw.\",\"visualization.dataTooLarge.headline\":\"Te veel datapunten om weer te geven\",\"visualization.dataTooLarge.text\":\"Probeer om een of meerdere filters op uw dashboard toe te passen.\",\"visualization.execute_protected_report.headline\":\"U bent niet gemachtigd om dit rapport te bekijken\",\"visualization.execute_protected_report.text\":\"Neem contact op met uw beheerder.\",\"visualization.alert_not_supported\":\"Alarmen worden niet ondersteund voor de statische datumperiode\",\"visualization.empty.headline\":\"Geen data voor uw filterselectie\",\"visualization.error.headline\":\"Sorry, we kunnen dit inzicht niet weergeven\",\"visualization.error.text\":\"Neem contact op met uw beheerder.\",\"options.button.bubble\":\"Inzichtgegevens exporteren\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"U kunt het inzicht momenteel niet exporteren. Probeer verschillende filters toe te passen of verschillende maten of attributen te gebruiken.\",\"options.menu.unsupported.error._metric\":\"Het inzicht kan momenteel niet worden geëxporteerd. Probeer verschillende filters toe te passen of diverse meetgegevens of attributen te gebruiken.\",\"options.menu.unsupported.loading\":\"U kunt het inzicht momenteel niet exporteren.\",\"export.defaultTitle\":\"Inzicht zonder naam\",\"export_unsupported.disabled\":\"Exporteren wordt niet ondersteund\",\"widget.options.menu.exportToCSV\":\"Exporteren naar CSV\",\"widget.options.menu.exportToXLSX\":\"Exporteren naar XLSX\",\"widget.options.menu.scheduleExport\":\"Planning export\",\"share.button.text\":\"Deel\",\"dashboard.error.empty.heading\":\"Dit dashboard is leeg\",\"dashboard.error.empty.text\":\"Alle inzichten zijn verwijderd.\",\"dashboard.shareDialog.underLenientControl.label\":\"Andere gebruikers hebben toegang tot dit dashboard als ze erop inzoomen\",\"dashboard.shareDialog.lock.label\":\"Alleen beheerders kunnen dit dashboard bewerken\",\"header.lockStatus.tooltip\":\"<b>Dit dashboard is vergrendeld.</b> Alleeb beheerders kunnen dit dashboard bewerken.\",\"header.shareStatus.private.text\":\"Privé\",\"header.shareStatus.private.strict.tooltip\":\"Alleen u kunt dit dashboard bekijken en bewerken.\",\"header.shareStatus.private.not.strict.tooltip\":\"De maker kan dit dashboard bewerken. Andere gebruikers met geschikte gebruikersrollen kunnen dit dashboard bewerken als ze erop inzoomen.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Verwijder de toegang tot dit dashboard.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"De gebruiker die dit dashboard heeft gemaakt. Makers kunnen niet worden verwijderd.\",\"attributesDropdown.placeholder\":\"Zoeken…\",\"attributesDropdown.configuration\":\"Configuratie\",\"attributesDropdown.itemsFiltered\":\"Items zijn gefilterd\",\"attributesDropdown.allItemsFiltered\":\"Alle items zijn uitgefilterd\",\"attributesDropdown.itemsFiltered.tooltip\":\"Items zijn gefilterd op: <strong>{filters}</strong> \",\"attributesDropdown.save\":\"Opslaan\",\"attributesDropdown.filterBy\":\"Filteren volgens\",\"attributesDropdown.displayValuesAs\":\"Waarden weergeven als\",\"attributesDropdown.title\":\"titel\",\"attributesDropdown.title.reset\":\"Reset\",\"attributesDropdown.selectionMode\":\"Selectie\",\"attributesDropdown.selectionMode.multi\":\"Meerdere waarden\",\"attributesDropdown.selectionMode.single\":\"Enkele waarde\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"Selectie van enkele waarde is niet toegestaan als filters worden geselecteerd in Filteren op. Schakel om de selectie van een enkele waarde te gebruiken alle filters uit in Filteren op.\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"Filteren op andere filters is uitgeschakeld voor de selectie van een enkele waarde. Om Filteren op in te stellen, selecteert u de selectie van meerdere waarden.\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> kan niet worden gefilterd op <strong>{parentTitle}</strong>. Er is geen verbinding tussen de filterattributen in het gegevensmodel.\",\"attributesDropdown.details.dataset\":\"Dataset\",\"attributesDropdown.details.values\":\"Waarden\",\"attributesDropdown.details.shortening_decoration\":\"…en {count} meer\",\"attributesDropdown.removeTooltip\":\"Verwijderen van dashboard\",\"layout.header.characters.left\":\"Nog {currentCharactersCount} / {maximumCharactersCount} tekens\",\"layout.header.add.title.placeholder\":\"Titel hier toevoegen...\",\"layout.header.add.description.placeholder\":\"Beschrijving hier toevoegen...\",\"error\":\"Fout\",\"controlButtons.edit.value\":\"Bewerken\",\"controlButtons.saveAndPublish.value\":\"Opslaan & publiceren\",\"controlButtons.save.value\":\"Opslaan\",\"controlButtons.saveAndPublish.title\":\"Alle wijzigingen zijn meteen zichtbaar voor iedereen die toegang heeft tot dit dashboard.\",\"controlButtons.saveAsPrivate.title\":\"Alle wijzigingen worden opgeslagen.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"Een leeg dashboard kan niet worden opgeslagen\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"Er zijn geen wijzigingen om op te slaan\",\"controlButtons.saving.value\":\"Opslaan…\",\"gs.visualizationsList.tabs.all\":\"alle\",\"gs.visualizationsList.tabs.my\":\"door mij aangemaakt\",\"visualizationsList.noInsights\":\"Deze werkruimte bevat geen inzichten.\",\"visualizationsList.create\":\"Inzicht maken\",\"visualizationsList.noUserInsights\":\"Geen inzichten gemaakt.\",\"visualizationsList.noVisualizationsFound\":\"Geen overeenkomstig inzicht.\",\"search_insights\":\"Alle doorzoeken…\",\"save.as.new\":\"Opslaan als nieuw\",\"addPanel.deleteItem\":\"Laat los om te verwijderen\",\"addPanel.newItem\":\"Nieuw item\",\"addPanel.attributeFilter\":\"Kenmerkfilter\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"Het attributenfilter vereist een attribuut.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"Meer weten\",\"addPanel.kpi\":\"Key Performance Indicator\",\"addPanel.kpi.tooltip.no_measures._measure\":\"De Key Performance Indicator vereist een berekende maat.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"De Key Performance Indicator vereist meetgegevens.\",\"addPanel.kpi.tooltip.no_measures.link\":\"Meer weten\",\"visualizationsList.dragToAdd\":\"Versleep om toe te voegen\",\"visualizationsList.savedVisualizations\":\"Opgeslagen inzichten\",\"configurationPanel.drillConfig.selectDashboard\":\"Dashboard kiezen…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Zoeken in alle dashboards…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(Niet gedeeld met u)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"Dashboard is niet gedeeld met u, maar andere gebruikers hebben toegang tot dit dashboard.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"Dashboard is niet gedeeld met u, maar andere gebruikers hebben er toegang tot als zij inzoomen.\",\"configurationPanel.remove.form.dashboard\":\"Verwijderen van dashboard\",\"filterBar.filter.drop\":\"laat los om toe te voegen\",\"filterBar.filter.addFilterPlaceholder\":\"Sleep {icon} hierheen\",\"filterBar.filter.dropzone.tooltip\":\"Sleep het attributenfilter hierheen.\",\"configurationPanel.title\":\"Configuratie\",\"configurationPanel.comparison\":\"Vergelijking\",\"configurationPanel.compareWith\":\"Vergelijken met\",\"configurationPanel.increasingNumberIs\":\"Stijgend aantal is\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Vorige periode\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Dezelfde periode in het vorige jaar\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Geen vergelijking\",\"configurationPanel.comparisonDirectionItems.green\":\"Groen\",\"configurationPanel.comparisonDirectionItems.red\":\"Rood\",\"configurationPanel.unlistedMetric._measure\":\"Niet-vermelde maat\",\"configurationPanel.unlistedMetric._metric\":\"Niet-weergegeven meetgegevens\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Deze maat is verborgen en is alleen voor u zichtbaar.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Deze meetgegevens zijn verborgen en alleen voor u zichtbaar.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Maat selecteren…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Meetgegevens selecteren…\",\"configurationPanel.selectComparisonPlaceholder\":\"Vergelijking selecteren…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Positief/negatief selecteren\",\"configurationPanel.measure._measure\":\"Maat\",\"configurationPanel.measure._metric\":\"Meetgegeven\",\"configurationPanel.filterBy\":\"Filteren volgens\",\"configurationPanel.date\":\"Datum\",\"configurationPanel.dateAs\":\"als\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"Het inzicht kan niet worden gefilterd op {attributeName}, verwijder het keuzevinkje.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"De KPI kan niet worden gefilterd op {attributeName}. Vink het selectievakje af.\",\"configurationPanel.vizCantBeFilteredByDate\":\"Het Inzicht kan niet worden gefilterd volgens Datum, verwijder het keuzevinkje.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"De KPI kan niet worden gefilterd op Datum. Vink het selectievakje af.\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" kan niet langer op het inzicht worden toegepast. Selecteer een andere dimensie of bewerk het inzicht.\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\" kan niet langer op de KPI worden toegepast. Selecteer een andere dimensie of bewerk de KPI.\",\"configurationPanel.breakAlertWarning\":\"\\n            Gebruikers hebben {numAlerts} {numAlerts, select, 1 {alarm} other {alarmen}}\\n            ingesteld voor deze KPI. Het aanpassen van de KPI heeft gevolgen voor {numAlerts, select, 1 {dit alarm} other {deze alarmen}}.\\n\",\"configurationPanel.drillIntoDashboard\":\"Drill in dashboard\",\"configurationPanel.noLinkableDashboards\":\"Geen dashboard om te linken\",\"configurationPanel.selectDashboard\":\"Een dashboard selecteren\",\"configurationPanel.interactions\":\"Interacties\",\"configurationPanel.drillConfig.interactions\":\"Inzoomen-interacties\",\"configurationPanel.drillConfig.addInteraction\":\"Interactie toevoegen\",\"configurationPanel.drillConfig.clickHint\":\"Als ik klik op\",\"configurationPanel.drillConfig.measureValue._measure\":\"Waarde van maat\",\"configurationPanel.drillConfig.measureValue._metric\":\"Waarde van meetgegevens\",\"configurationPanel.drillConfig.attributeValue\":\"Waarde van attribuut\",\"configurationPanel.drillConfig.selectTarget\":\"Ik wil\",\"configurationPanel.drillConfig.clickHintItem\":\"Als ik klik op <addon>(waarde van)</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Drill in dashboard\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Inzoomen op inzicht\",\"configurationPanel.drillConfig.drillIntoUrl\":\"Inzoomen op URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Ongeldige URL-parameters\",\"configurationPanel.drillConfig.select\":\"Actie kiezen…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"De datum-attribuutwaarde van het inzicht wordt niet overgedragen om het doel-dashboard te filteren.\",\"configurationPanel.unlistedDashboardTab\":\"Niet-vermeld dashboard\",\"configurationPanel.visualprops.sectionTitle\":\"titel\",\"configurationPanel.visualprops.hideTitle\":\"Titel verbergen\",\"configurationPanel.visualprops.sectionDescription\":\"Beschrijving\",\"configurationPanel.visualprops.inheritDescription\":\"Erven\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Erf de beschrijving van het inzicht.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Erf de beschrijving van de meetgegevens.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Erf de beschrijving van de maat.\",\"configurationPanel.visualprops.customDescription\":\"Aangepast\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Voeg een aangepaste beschrijving toe voor dit exemplaar van het inzicht.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Voeg een aangepaste beschrijving toe.\",\"configurationPanel.visualprops.noneDescription\":\"Geen\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Beschrijvingen van maten insluiten\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Beschrijvingen van meetgegevens insluiten\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Weergavegedeelte met lijst met maten van het inzicht en de beschrijvingen ervan.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Weergavegedeelte met lijst met meetgegevens van het inzicht en de beschrijvingen ervan.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Beschrijving toevoegen…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"URL kiezen\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Hyperlink in attributenlabel\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"Aangepaste URL\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Aangepaste URL toevoegen\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Aangepaste URL bewerken\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Parameters\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Parameters en tijdelijke aanduidingen die worden vervangen door dynamische waarden tijdens het inzoomen.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Toevoegen\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Type\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Label\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {waarde} other {waarden}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...en nog {count}\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"Inzicht-ID\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"Client-ID\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"Gegevensproduct-ID\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"Project-ID\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"Werkruimte-ID\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"Widget-ID\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"Dashboard-ID\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Identificator\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Inzicht\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Identifiers\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Toepassen\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Annuleren\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"Voer de URL in en voeg parameters toe vanuit het rechterpaneel.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"Hoe kan ik aangepaste URL's maken?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Ongeldige parameters: {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Aangepaste URL toevoegen\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Aangepaste URL bewerken\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Waarde attributenlabel\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Waarde attribuut-geo\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"Waarde attribuut-URL\",\"configurationPanel.zoomInsight\":\"Zoombaar inzicht\",\"configurationPanel.zoomInsight.help\":\"Schakel inzoomen op het inzicht in voor een gedetailleerd overzicht. Houd de Shift-toets ingedrukt om het ingezoomde gebied zijwaarts te schuiven.\",\"configurationPanel.zoomInsight.notice\":\"Zoomen wordt niet toegepast op geëxporteerde dashboards\",\"configurationPanel.drillConfig.selectInsight\":\"Inzicht kiezen…\",\"gs.date.date-dataset.recommended\":\"Aanbevolen\",\"gs.date.date-dataset.other\":\"Overige\",\"gs.date.date-dataset.related\":\"Verwant\",\"gs.date.date-dataset.unrelated\":\"Niet verwant\",\"layout.widget.width.min\":\"Widget heeft de minimale breedte\",\"layout.widget.width.max\":\"Widget heeft de maximale breedte\",\"layout.widget.height.min\":\"Widget heeft de minimale hoogte\",\"layout.widget.height.max\":\"Widget heeft de maximale hoogte\",\"layout.widget.addedByPlugin\":\"Toegevoegd door plugin\",\"layout.widget.modifiedByPlugin\":\"Aangepast door plugin\",\"layout.widget.hideOverlay\":\"Overlay verbergen\",\"dropzone.new.row.desc\":\"Op de <b>nieuwe sectie</b> laten vallen\",\"dropzone.widget.desc\":\"<b>Hier</b> laten vallen\",\"dropzone.widget.last.in.row.desc\":\"Op de <b>bestaande sectie</b> laten vallen\",\"deleteKpiConfirmationDialog.headline\":\"KPI verwijderen\",\"deleteKpiConfirmationDialog.message\":\"Alle ingestelde alarmen voor deze KPI zullen ook worden verwijderd.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Verwijderen\",\"newDashboard.title\":\"Inzicht hierheen slepen\",\"newDashboard.dropInsight\":\"Inzicht laten vallen\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> is al gefilterd op <strong>{childTitle}</strong>, rechtstreeks of via andere filters.\",\"attributesDropdown.attributeNameWithData\":\"met gegevens van\"}","module.exports = {\"loading\":\"Carregando…\",\"untitled\":\"Sem título\",\"empty_value\":\"valor vazio\",\"gs.list.cancel\":\"Cancelar\",\"gs.list.apply\":\"Aplicar\",\"gs.list.only\":\"Só\",\"messages.dashboardSaveSuccess\":\"Ótimo. Salvamos seu dashboard.\",\"options.menu.save.as\":\"Salvar como novo\",\"options.menu.save.as.tooltip\":\"Não é possível salvar dashboards vazios.\",\"messages.dashboardSaveFailed\":\"Falha ao salvar painel. Tente novamente.\",\"messages.dashboard.invalidDrills.title\":\"<b>Algumas interações foram removidas</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Um ou mais dashboards/insights/medidas/atributos foram alterados ou excluídos, causando a remoção de algumas interações dos seguintes widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Um ou mais dashboards/insights/métricas/atributos foram alterados ou excluídos, causando a remoção de algumas interações dos seguintes widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Algumas interações de detalhamento da URL foram desativadas</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Algumas interações de detalhamento da URL nos widgets a seguir foram desativadas por causa das alterações nos atributos do insight: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Exibir mais\",\"messages.dashboard.expandable.showLess\":\"Exibir menos\",\"messages.drill.InteractionConfiguredSuccess\":\"Interação configurada.\",\"messages.drill.InteractionUpdatedSuccess\":\"Interação atualizada.\",\"filterBar.showAll\":\"Exibir tudo\",\"filterBar.showLess\":\"Exibir menos\",\"options.menu.export.PDF\":\"Exportar para PDF\",\"options.menu.schedule.email\":\"Agendar envio por e-mail\",\"options.menu.delete\":\"Excluir\",\"dialogs.export.cells\":\"CÉLULAS\",\"dialogs.export.filters\":\"CONTEXTO DO INSIGHT\",\"dialogs.export.includeFilters\":\"Incluir filtros aplicados\",\"dialogs.export.headline\":\"Exportar para XLSX\",\"dialogs.export.mergeHeaders\":\"Manter células de atributo mescladas\",\"dialogs.export.submit\":\"Exportar\",\"dialogs.schedule.email.delete.success\":\"Sucesso! Seu e-mail agendado foi excluído.\",\"dialogs.schedule.email.submit.success\":\"Sucesso! Seu painel está agendado para envio por e-mail.\",\"dialogs.schedule.email.submit.error\":\"Erro ao agendar o painel. Tente novamente mais tarde.\",\"dialogs.schedule.email.save.success\":\"Sucesso! Seu agendamento foi salvo.\",\"dialogs.schedule.email.save.error\":\"Não foi possível salvar o agendamento. Tente novamente mais tarde.\",\"dialogs.save.as.new.title\":\"Salvar dashboard como novo\",\"dialogs.save.as.new.desc\":\"Dê um nome descritivo ao seu novo dashboard para que seja mais fácil localizá-lo depois.\",\"dialogs.save.as.new.default.title\":\"Copiar de {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"As programações de alertas e e-mails não serão duplicadas.\",\"dialogs.save.as.new.alertsMessage\":\"Os alertas não serão duplicados\",\"dialogs.save.as.new.emailsMessage\":\"Os agendamentos de e-mail não serão duplicados\",\"cancelConfirmationDialog.headline\":\"Descartar alterações?\",\"cancelConfirmationDialog.message\":\"Todas as alterações serão perdidas\",\"cancelConfirmationDialog.submitButtonText\":\"Descartar alterações\",\"deleteDashboardDialog.headline\":\"Excluir painel?\",\"deleteDashboardDialog.submitButtonText\":\"Excluir\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Todos os alertas e e-mails agendados configurados para este painel também serão excluídos.\",\"deleteDashboardDialog.alertsMessage\":\"Todos os alertas configurados para este painel também serão excluídos.\",\"deleteDashboardDialog.emailsMessage\":\"Todos os e-mails programados para este dashboard também serão excluídos.\",\"deleteDashboardDialog.drillMessage\":\"Todos os detalhamentos de outros painéis dentro deste painel serão removidos.\",\"create.dashboard\":\"Criar dashboard\",\"drill_modal_picker.drill-down\":\"Detalhamento aprofundado\",\"drill_modal_picker.drill-into\":\"Detalhar\",\"drill_modal_picker.more.details\":\"Mais detalhes\",\"drillModal.backToTop\":\"Voltar ao início\",\"filters.allTime.previousPeriod\":\"período ant.\",\"filters.allTime.lastYear\":\"ano anter.\",\"filters.minute.previousPeriod\":\"minuto anter.\",\"filters.hour.previousPeriod\":\"hora anter.\",\"filters.day.previousPeriod\":\"{n, plural, one {dia} other {#d}} ant.\",\"filters.week.previousPeriod\":\"{n, plural, one {semana} other {#s}} ant.\",\"filters.month.previousPeriod\":\"{n, plural, one {mês} other {#m}} ant.\",\"filters.quarter.previousPeriod\":\"{n, plural, one {trimestre} other {#t}} ant.\",\"filters.year.previousPeriod\":\"{n, plural, one {ano} other {#a}} ant.\",\"filters.alertMessage.relativePreset\":\"em {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"no período de {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"Há mais de uma configuração de filtro de data associada a este projeto. O primeiro foi usado.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"Há mais de uma configuração de filtro de data associada a este espaço de trabalho. O primeiro foi usado.\",\"filters.config.warning.selectedFilterNotValid\":\"A opção de filtro padrão não é válida. Use a primeira opção disponível.\",\"filters.config.warning.allOptionsHidden\":\"A configuração do filtro de data do painel foi ignorada porque teria ocultado todas as opções de filtro.\",\"filters.config.warning.conflictingIdentifiers\":\"A configuração do filtro de data do dashboard foi ignorada porque contém opções de filtro de data com identificadores idênticos.\",\"filters.config.warning.notAvailable\":\"A configuração do filtro de data do projeto não foi definida ou você não tem as permissões para acessá-la.\",\"filters.config.warning.workspace.notAvailable\":\"A configuração do filtro de data do espaço de trabalho  não foi definida ou você não tem as permissões para acessá-la.\",\"kpi.noData\":\"Sem dados para configurações atuais do filtro. Tente alterar os filtros.\",\"kpiPop.change\":\"alterado\",\"dialogs.schedule.email.filters\":\"O dashboard contém alterações no filtro que serão salvas conforme o agendamento.\",\"dialogs.schedule.email.filters.not.saved\":\"Filtros de dashboard salvos conforme o agendamento não serão afetados.\",\"dialogs.schedule.email.attachment.filter\":\"(com filtros definidos)\",\"dialogs.schedule.email.attachment.label\":\"Anexar:\",\"dialogs.schedule.email.attachments.label\":\"Anexos:\",\"dialogs.schedule.email.attachment.select\":\"Selecionar anexos\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Este dashboard não contém insights.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Dashboard (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Insights (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Agendar entrega de e-mail\",\"dialogs.schedule.email.heading\":\"Agendar exportação\",\"dialogs.schedule.email.message.label\":\"Mensagem:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 destinatário descadastrado} other {# destinatários descadastrados}} deste agendamento.\",\"dialogs.schedule.email.repeats.label\":\"Repetições:\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"no dia {date}\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"ao {week, select, 1 {primeira} 2 {segunda} 3 {terceira} 4 {quarta} other {última}} {day}\",\"dialogs.schedule.email.repeats.every\":\"a cada\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {dia} other {dias}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {mês} other {meses}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {semana} other {semanas}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Personalizado\",\"dialogs.schedule.email.repeats.types.daily\":\"Diariamente\",\"dialogs.schedule.email.repeats.types.monthly\":\"Mensalmente ao {week, select, 1 {primeiro} 2 {segundo} 3 {terceiro} 4 {quarto} other {último}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Semanalmente às {day}\",\"dialogs.schedule.email.subject.label\":\"Assunto:\",\"dialogs.schedule.email.time.label\":\"Primeira ocorrência:\",\"dialogs.schedule.email.to.label\":\"Para:\",\"dialogs.schedule.email.message.placeholder\":\"Olá,\\n\\nSeu e-mail agendado está pronto. Você pode baixar o dashboard nos anexos.\",\"dialogs.schedule.email.submit\":\"Agendar\",\"dialogs.schedule.email.save\":\"Salvar\",\"dialogs.schedule.email.format.options\":\"Opções de formato\",\"dialogs.schedule.email.insight.format\":\"Formato de insight:\",\"dialogs.schedule.email.attribute.merged\":\"Manter células de atributo mescladas\",\"dialogs.schedule.email.show.filters\":\"Mostrar que filtros são aplicados\",\"dialogs.schedule.management.title\":\"Exportações agendadas\",\"dialogs.schedule.management.delete\":\"Excluir o agendamento.\",\"dialogs.schedule.management.delete.dialog\":\"Excluir agendamento?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>O agendamento</b> será excluído permanentemente.\",\"dialogs.schedule.management.noSchedules\":\"Este dashboard não contém exportações agendadas.{br}Adicione uma agora.\",\"dialogs.schedule.management.noSchedules.byUser\":\"Você ainda não agendou nenhuma exportação.{br}Adicione uma agora.\",\"dialogs.schedule.management.addSchedule\":\"Adicionar agendamento\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# recipiente} other {# recipientes}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Apenas você\",\"dialogs.schedule.management.attachments.dashboard\":\"Dashboard\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# insight} other {# insights}}\",\"dialogs.schedule.management.attachments.mixed\":\"Dashboard e {n, plural, one {# insight} other {# insights}}\",\"dialogs.schedule.management.load.error\":\"Não foi possível carregar. Tente novamente mais tarde.\",\"dialogs.schedule.management.delete.error\":\"Não foi possível excluir o agendamento. Tente novamente mais tarde.\",\"dialogs.schedule.management.tab.all\":\"todos\",\"dialogs.schedule.management.tab.user\":\"criado por mim\",\"options.menu.schedule.email.recipient.invalid\":\"Este não é um endereço de e-mail válido.\",\"options.menu.schedule.email.recipient.warning.existed\":\"Você já adicionou este destinatário.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Este endereço de e-mail não pertence a este espaço de trabalho. O destinatário pode receber dados sigilosos.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Este endereço de e-mail não pertence a este espaço de trabalho. Apenas o autor do agendamento pode adicionar este endereço de e-mail.\",\"delete\":\"Excluir\",\"close\":\"Fechar\",\"cancel\":\"Cancelar\",\"gs.date.at\":\"em\",\"gs.date.today\":\"Hoje\",\"gs.date.tomorrow\":\"Amanhã\",\"gs.date.yesterday\":\"Ontem\",\"kpi.alertBox.title\":\"Definir alerta na alteração de KPI\",\"kpi.alertBox.example\":\"p. ex.,\",\"kpi.alertBox.unverifiedEmail\":\"Infelizmente, você não pode definir um alerta. Garanta que seu e-mail seja verificado. Se isso não ajudar, peça para o administrador atualizar suas permissões.\",\"kpi.alertBox.disabledInReadOnly\":\"Os alertas estão desabilitados no modo somente leitura\",\"kpi.error.view\":\"Não é possível exibir o KPI. Entre em contato com seu administrador para corrigir a definição do KPI.\",\"kpiAlertDialog.delete\":\"Excluir\",\"kpiAlertDialog.deleting\":\"Excluindo…\",\"kpiAlertDialog.emailMe\":\"Enviar-me e-mail\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe} quando este KPI for\",\"kpiAlertDialog.emailInfo\":\"O e-mail será enviado para {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Número inválido.</strong>{br}Verifique e tente novamente.\",\"kpiAlertDialog.filtersDiffer\":\"O KPI foi filtrado de outra maneira em relação a quando o alerta foi configurado.\",\"kpiAlertDialog.filtersApply\":\"Aplicar filtros de alerta ao painel\",\"kpiAlertDialog.savingFailed\":\"Falha ao salvar alerta. Tente novamente.\",\"kpiAlertDialog.deleteingFailed\":\"Falha ao excluir alerta. Tente novamente.\",\"kpiAlertDialog.brokenAlert\":\"Alerta interrompido\",\"kpiAlertDialog.brokenAlertAppeal\":\"Para ver o valor KPI correcto, atualize os filtros nesta alerta. Você também poderá remover o alerta.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Data\",\"kpiAlertDialog.removedFilters\":\"Filtros removidos do painel\",\"kpiAlertDialog.ignoredFilters\":\"Filtros ignorados por este KPI\",\"kpiAlertDialog.updateTitle\":\"Atualizar\",\"kpiAlertDialog.updateBrokenTitle\":\"Atualizar filtros\",\"kpiAlertDialog.updatingTitle\":\"Atualizando…\",\"kpiAlertDialog.updateBrokenFailed\":\"Falha ao atualizar os filtros. Tente novamente.\",\"kpiAlertDialog.setTitle\":\"Definir alerta\",\"kpiAlertDialog.settingTitle\":\"Definindo…\",\"kpiAlertDialog.threshold.above\":\"acima\",\"kpiAlertDialog.threshold.below\":\"abaixo\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} mais {numFilters, select, 1 {filtro aplicado} other {filtros aplicados}}\",\"messages.exportResultError\":\"Falha ao exportar os dados. Tente novamente.\",\"messages.exportResultRestrictedError\":\"Você não pode exportar esse insight porque ele contém dados restritos.\",\"messages.exportResultStart\":\"Exportação em curso\",\"messages.exportResultSuccess\":\"Exportação concluída com sucesso.\",\"messages.sharingChangedSuccess\":\"Compartilhamento atualizado.\",\"messages.sharingChangedError.general\":\"Não foi possível atualizar as configurações do compartilhamento. Tente novamente mais tarde.\",\"messages.sharingDialogError.general\":\"Não foi possível carregar as configurações do compartilhamento. Tente novamente mais tarde.\",\"visualization.dataTooLarge.headline\":\"Muitos pontos de dados a serem exibidos\",\"visualization.dataTooLarge.text\":\"Tente aplicar um ou mais filtros ao seu painel.\",\"visualization.execute_protected_report.headline\":\"Você não tem autorização para ver este relatório\",\"visualization.execute_protected_report.text\":\"Entre em contato com seu administrador.\",\"visualization.alert_not_supported\":\"Não há suporte para alertas no período de datas estático\",\"visualization.empty.headline\":\"Sem dados para seleção de filtro\",\"visualization.error.headline\":\"Lamentamos, não é possível exibir este insight\",\"visualization.error.text\":\"Entre em contato com seu administrador.\",\"options.button.bubble\":\"Exportar dados do insight\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"O insight não pode ser exportado no momento. Tente aplicar filtros diferentes, ou usar medidas e atributos diferentes.\",\"options.menu.unsupported.error._metric\":\"Não é possível exportar o insight no momento. Tente aplicar outros filtros ou usar métricas ou atributos diferentes.\",\"options.menu.unsupported.loading\":\"O insight não pode ser exportado no momento.\",\"export.defaultTitle\":\"Insight sem título\",\"export_unsupported.disabled\":\"Exportação não é compatível.\",\"widget.options.menu.exportToCSV\":\"Exportar para CSV\",\"widget.options.menu.exportToXLSX\":\"Exportar para XLSX\",\"widget.options.menu.scheduleExport\":\"Agendar exportação\",\"share.button.text\":\"Compartilhar\",\"dashboard.error.empty.heading\":\"Dashboard vazio\",\"dashboard.error.empty.text\":\"Todos os insights foram removidos.\",\"dashboard.shareDialog.underLenientControl.label\":\"Outros usuários podem acessar o dashboard pelo detalhamento\",\"dashboard.shareDialog.lock.label\":\"Somente administradores podem editar o dashboard\",\"header.lockStatus.tooltip\":\"<b>Dashboard bloqueado.</b> Somente administradores podem editá-lo.\",\"header.shareStatus.private.text\":\"Privado\",\"header.shareStatus.private.strict.tooltip\":\"Somente você pode ver e editar o dashboard.\",\"header.shareStatus.private.not.strict.tooltip\":\"O criador não consegue editar este dashboard. Outros usuários com funções apropriadas poderão editá-lo no detalhamento.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Remover acesso a este dashboard.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"O usuário que criou o dashboard. Não é possível remover os criadores.\",\"attributesDropdown.placeholder\":\"Pesquisar atributos…\",\"attributesDropdown.configuration\":\"Configuração\",\"attributesDropdown.itemsFiltered\":\"Os itens estão filtrados\",\"attributesDropdown.allItemsFiltered\":\"Todos os itens estão filtrados\",\"attributesDropdown.itemsFiltered.tooltip\":\"Os itens estão filtrados por: <strong>{filters}</strong>\",\"attributesDropdown.save\":\"Salvar\",\"attributesDropdown.filterBy\":\"Filtrar por\",\"attributesDropdown.displayValuesAs\":\"Exibir valores como\",\"attributesDropdown.title\":\"Título\",\"attributesDropdown.title.reset\":\"Restaurar\",\"attributesDropdown.selectionMode\":\"Seleção\",\"attributesDropdown.selectionMode.multi\":\"Vários valores\",\"attributesDropdown.selectionMode.single\":\"Valor único\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"Não é permitido selecionar um único valor se houver filtros selecionados em Filtrar por. Para usar Selecionar um único valor, desative todos os filtros em Filtrar por.\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"Filtrar por outros filtros está desativado para Selecionar um único valor. Para ajustar Filtrar por, escolha a seleção de múltiplos valores.\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> não pode ser filtrado por <strong>{parentTitle}</strong>. Não há conexão entre os atributos do filtro e o modelo de dados.\",\"attributesDropdown.details.dataset\":\"Conjunto de Dados\",\"attributesDropdown.details.values\":\"Valores\",\"attributesDropdown.details.shortening_decoration\":\"…e mais {count}\",\"attributesDropdown.removeTooltip\":\"Remover do dashboard\",\"layout.header.characters.left\":\"{currentCharactersCount}/{maximumCharactersCount} caracteres restantes\",\"layout.header.add.title.placeholder\":\"Adicione o título aqui...\",\"layout.header.add.description.placeholder\":\"Adicione a descrição aqui...\",\"error\":\"Erro\",\"controlButtons.edit.value\":\"Editar\",\"controlButtons.saveAndPublish.value\":\"Salvar e publicar\",\"controlButtons.save.value\":\"Salvar\",\"controlButtons.saveAndPublish.title\":\"Todas as alterações serão vistas imediatamente por todos que tiverem acesso ao dashboard.\",\"controlButtons.saveAsPrivate.title\":\"Todas as alterações serão salvas.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"Não é possível salvar um dashboard vazio\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"Não há alterações para salvar\",\"controlButtons.saving.value\":\"Salvando…\",\"gs.visualizationsList.tabs.all\":\"todos\",\"gs.visualizationsList.tabs.my\":\"criado por mim\",\"visualizationsList.noInsights\":\"O espaço de trabalho não contém nenhum insight.\",\"visualizationsList.create\":\"Criar insight\",\"visualizationsList.noUserInsights\":\"Nenhum insight foi criado.\",\"visualizationsList.noVisualizationsFound\":\"Sem resultado de insights.\",\"search_insights\":\"Pesquisar insights…\",\"save.as.new\":\"Salvar como novo\",\"addPanel.deleteItem\":\"Solte para remover\",\"addPanel.newItem\":\"Novo item\",\"addPanel.attributeFilter\":\"Filtro de atributo\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"O filtro de atributo requer um atributo.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"Saber mais\",\"addPanel.kpi\":\"Indicador Chave de Desempenho\",\"addPanel.kpi.tooltip.no_measures._measure\":\"O indicador chave de desempenho requer uma medida calculada.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"O indicador chave de desempenho requer uma métrica.\",\"addPanel.kpi.tooltip.no_measures.link\":\"Saber mais\",\"visualizationsList.dragToAdd\":\"Arraste para adicionar\",\"visualizationsList.savedVisualizations\":\"Insights salvos\",\"configurationPanel.drillConfig.selectDashboard\":\"Escolher painel…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Pesquisar em todos os painéis…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(Não compartilhado com você)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"O dashboard não foi compartilhado com você, mas outros usuários têm acesso a ele.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"O dashboard não foi compartilhado com você, mas todos os usuários podem acessá-lo pelo detalhamento.\",\"configurationPanel.remove.form.dashboard\":\"Remover do dashboard\",\"filterBar.filter.drop\":\"solte para adicionar\",\"filterBar.filter.addFilterPlaceholder\":\"Arraste {icon} para aqui\",\"filterBar.filter.dropzone.tooltip\":\"Arraste o filtro de atributo até aqui.\",\"configurationPanel.title\":\"Configuração\",\"configurationPanel.comparison\":\"Comparação\",\"configurationPanel.compareWith\":\"Comparar com\",\"configurationPanel.increasingNumberIs\":\"O número ascendente é\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Período anterior\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Mesmo período no ano anterior\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Sem comparação\",\"configurationPanel.comparisonDirectionItems.green\":\"Verde\",\"configurationPanel.comparisonDirectionItems.red\":\"Vermelho\",\"configurationPanel.unlistedMetric._measure\":\"Medida não listada\",\"configurationPanel.unlistedMetric._metric\":\"Métrica não listada\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Esta medida está oculta. Apenas você poderá vê-la.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Essa métrica está oculta. Só você pode vê-la.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Selecionar medida…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Selecionar métrica…\",\"configurationPanel.selectComparisonPlaceholder\":\"Selecionar comparação…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Selecionar positivo/negativo\",\"configurationPanel.measure._measure\":\"Medida\",\"configurationPanel.measure._metric\":\"Métrica\",\"configurationPanel.filterBy\":\"Filtrar por\",\"configurationPanel.date\":\"Data\",\"configurationPanel.dateAs\":\"como\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"O insight não pode ser filtrado por {attributeName}. Desmarque a caixa de seleção.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"O KPI não pode ser filtrado por {attributeName}. Desmarque a caixa de seleção.\",\"configurationPanel.vizCantBeFilteredByDate\":\"Não é possível filtrar o insight por data. Desmarque a caixa de seleção.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"O KPI não pode ser filtrado por Data. Desmarque a caixa de seleção.\",\"configurationPanel.unrelatedVizDateInfo\":\"Não é possível aplicar \\\"{dateDataSet}\\\" ao insight. Selecione uma dimensão diferente ou edite o insight.\",\"configurationPanel.unrelatedKpiDateInfo\":\"Não é possível aplicar \\\"{dateDataSet}\\\" ao KPI. Selecione uma dimensão diferente ou edite o KPI.\",\"configurationPanel.breakAlertWarning\":\"\\n            Usuários configuraram {numAlerts} {numAlerts, select, 1 {alerta} other {alertas}}\\n            para este KPI. Modificar o KPI afetará {numAlerts, select, 1 {este alerta} other {estes alertas}}.\\n\",\"configurationPanel.drillIntoDashboard\":\"Detalhar painel\",\"configurationPanel.noLinkableDashboards\":\"Nenhum dashboard para vincular\",\"configurationPanel.selectDashboard\":\"Selecionar um painel\",\"configurationPanel.interactions\":\"Interações\",\"configurationPanel.drillConfig.interactions\":\"Interações de detalhamento\",\"configurationPanel.drillConfig.addInteraction\":\"Adicionar interação\",\"configurationPanel.drillConfig.clickHint\":\"Quando clicar em\",\"configurationPanel.drillConfig.measureValue._measure\":\"Valor da medição\",\"configurationPanel.drillConfig.measureValue._metric\":\"Valor da métrica\",\"configurationPanel.drillConfig.attributeValue\":\"Valor do atributo\",\"configurationPanel.drillConfig.selectTarget\":\"Eu quero\",\"configurationPanel.drillConfig.clickHintItem\":\"Quando eu clique no <addon>(valor de)</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Detalhar painel\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Detalhar insight\",\"configurationPanel.drillConfig.drillIntoUrl\":\"Detalhar URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Parâmetros inválidos da URL\",\"configurationPanel.drillConfig.select\":\"Escolher ação…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"O valor do atributo de data do insight não será transferido para filtrar o painel de destino.\",\"configurationPanel.unlistedDashboardTab\":\"Painel não listado\",\"configurationPanel.visualprops.sectionTitle\":\"Título\",\"configurationPanel.visualprops.hideTitle\":\"Ocultar o título\",\"configurationPanel.visualprops.sectionDescription\":\"Descrição\",\"configurationPanel.visualprops.inheritDescription\":\"Herdado\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Herdar a descrição do insight.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Herdar a descrição da métrica.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Herdar a descrição da medida.\",\"configurationPanel.visualprops.customDescription\":\"Personalizado\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Adicionar uma descrição personalizada para esta insância do insight.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Adicionar uma descrição personalizada.\",\"configurationPanel.visualprops.noneDescription\":\"Nenhum\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Incluir descrições de medida\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Incluir descrições de métrica\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Exibir seção com lista de medidas de insight e sua descrição.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Exibir seção com lista de métricas de insight e sua descrição.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Adicionar descrição…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"Escolher URL\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Hiperlink no rótulo do atributo\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"URL personalizada\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Adicionar URL personalizada\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Editar URL personalizada\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Parâmetros\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Os parâmetros são espaços reservados que são substituídos por valores dinâmicos durante o detalhamento.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Adicionar\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Tipo\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Rótulo\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {Valor} other {Valores}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"... e {count} mais\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"ID do insight\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"ID do cliente\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"ID do produto de dados\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"ID do projeto\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"ID do espaço de trabalho\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"ID do widget\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"ID do dashboard\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Identificador\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Insight\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Identificadores\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Aplicar\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Cancelar\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"Insira a URL e adicione parâmetros do painel à direita.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"Como criar URLs personalizadas?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Parâmetros inválidos: {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Adicionar URL personalizada\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Editar URL personalizada\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Valor do rótulo de atributo\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Valor do atributo geográfico\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"Valor da URL do atributo\",\"configurationPanel.zoomInsight\":\"Insight com zoom\",\"configurationPanel.zoomInsight.help\":\"Permite ampliar o insight para ter uma visualização detalhada. Mantenha pressionada a tecla Shift para ver uma panorâmica da área ampliada.\",\"configurationPanel.zoomInsight.notice\":\"O zoom não será aplicado a dashboards exportados\",\"configurationPanel.drillConfig.selectInsight\":\"Escolher insight…\",\"gs.date.date-dataset.recommended\":\"Recomendado\",\"gs.date.date-dataset.other\":\"Outros\",\"gs.date.date-dataset.related\":\"Relacionado\",\"gs.date.date-dataset.unrelated\":\"Não relacionado\",\"layout.widget.width.min\":\"O widget está na largura mínima\",\"layout.widget.width.max\":\"O widget está com a largura máxima\",\"layout.widget.height.min\":\"O widget já está com a altura mínima\",\"layout.widget.height.max\":\"O widget já está com a altura máxima\",\"layout.widget.addedByPlugin\":\"Adicionado por plugin\",\"layout.widget.modifiedByPlugin\":\"Modificado por plugin\",\"layout.widget.hideOverlay\":\"Esconder sobreposição\",\"dropzone.new.row.desc\":\"Arraste para criar uma{nbsp}<b>seção</b>\",\"dropzone.widget.desc\":\"Solte <b>aqui</b>\",\"dropzone.widget.last.in.row.desc\":\"Arraste até a <b>seção existente</b>\",\"deleteKpiConfirmationDialog.headline\":\"Excluir KPI\",\"deleteKpiConfirmationDialog.message\":\"Todos os alertas configurados para este KPI também serão excluídos.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Excluir\",\"newDashboard.title\":\"Arraste o insight para cá\",\"newDashboard.dropInsight\":\"Soltar insight\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> já foi filtrado por <strong>{childTitle}</strong> diretamente ou por meio de outros filtros.\",\"attributesDropdown.attributeNameWithData\":\"com dados de\"}","module.exports = {\"loading\":\"A carregar…\",\"untitled\":\"Sem título\",\"empty_value\":\"valor vazio\",\"gs.list.cancel\":\"Cancelar\",\"gs.list.apply\":\"Aplicar\",\"gs.list.only\":\"Só\",\"messages.dashboardSaveSuccess\":\"Excelente. Guardámos o seu dashboard.\",\"options.menu.save.as\":\"Guardar como novo\",\"options.menu.save.as.tooltip\":\"Não é possível guardar um dashboard vazio.\",\"messages.dashboardSaveFailed\":\"Falha ao guardar dashboard, tente de novo.\",\"messages.dashboard.invalidDrills.title\":\"<b>Algumas interações foram removidas</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Um ou vários dashboards/insights/medidas/atributos foram alterados ou eliminados, removendo algumas interações dos seguintes widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Um ou vários dashboards/insights/métricas/atributos foram alterados ou eliminados, removendo algumas interações dos seguintes widgets: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Algumas interações de aprofundamento de URL foram desativadas</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Algumas das interações de aprofundamento de URL nos seguintes widgets foram desativadas devido a alterações dos atributos de insights: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Mostrar mais\",\"messages.dashboard.expandable.showLess\":\"Mostrar menos\",\"messages.drill.InteractionConfiguredSuccess\":\"Interação configurada.\",\"messages.drill.InteractionUpdatedSuccess\":\"Interação atualizada.\",\"filterBar.showAll\":\"Mostrar tudo\",\"filterBar.showLess\":\"Mostrar menos\",\"options.menu.export.PDF\":\"Exportar para PDF\",\"options.menu.schedule.email\":\"Agenda envio de e-mail\",\"options.menu.delete\":\"Eliminar\",\"dialogs.export.cells\":\"CÉLULAS\",\"dialogs.export.filters\":\"CONTEXTO DO INSIGHT\",\"dialogs.export.includeFilters\":\"Incluir filtros aplicados\",\"dialogs.export.headline\":\"Exportar para XLSX\",\"dialogs.export.mergeHeaders\":\"Manter células de atributo unidas\",\"dialogs.export.submit\":\"Exportar\",\"dialogs.schedule.email.delete.success\":\"Êxito! O seu e-mail agendado foi eliminado.\",\"dialogs.schedule.email.submit.success\":\"Êxito! O seu dashboard está agendado para envio de e-mail.\",\"dialogs.schedule.email.submit.error\":\"Não foi possível agendar o dashboard. Tente mais tarde.\",\"dialogs.schedule.email.save.success\":\"Parabéns! O seu horário foi guardado.\",\"dialogs.schedule.email.save.error\":\"Falha ao guardar o horário. Tente mais tarde.\",\"dialogs.save.as.new.title\":\"Guardar dashboard como novo\",\"dialogs.save.as.new.desc\":\"Dê ao seu novo dashboard um novo nome descritivo, para que seja mais fácil encontrá-lo depois.\",\"dialogs.save.as.new.default.title\":\"Cópia de {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"Os alertas e agendamentos de e-mail não serão duplicados\",\"dialogs.save.as.new.alertsMessage\":\"Os alertas não serão duplicados\",\"dialogs.save.as.new.emailsMessage\":\"Os agendamentos de e-mail não serão duplicados\",\"cancelConfirmationDialog.headline\":\"Rejeitar alterações?\",\"cancelConfirmationDialog.message\":\"Todas as alterações serão perdidas\",\"cancelConfirmationDialog.submitButtonText\":\"Rejeitar alterações\",\"deleteDashboardDialog.headline\":\"Eliminar dashboard?\",\"deleteDashboardDialog.submitButtonText\":\"Eliminar\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Serão também eliminados todos os alertas e e-mails agendados configurados para este dashboard.\",\"deleteDashboardDialog.alertsMessage\":\"Todos os alertas configurados para este dashboard serão também eliminados.\",\"deleteDashboardDialog.emailsMessage\":\"Serão também eliminados todos os e-mails agendados configurados para este dashboard.\",\"deleteDashboardDialog.drillMessage\":\"Toda a exploração neste dashboard a partir de outros dashboards será removida.\",\"create.dashboard\":\"Criar dashboard\",\"drill_modal_picker.drill-down\":\"Exploração descendente\",\"drill_modal_picker.drill-into\":\"Aprofundar\",\"drill_modal_picker.more.details\":\"Mais informações\",\"drillModal.backToTop\":\"Regressar ao início\",\"filters.allTime.previousPeriod\":\"período ant.\",\"filters.allTime.lastYear\":\"ano ant.\",\"filters.minute.previousPeriod\":\"minuto ant.\",\"filters.hour.previousPeriod\":\"hora ant.\",\"filters.day.previousPeriod\":\"ant. {n, plural, one {dia} other {#d}}\",\"filters.week.previousPeriod\":\"ant. {n, plural, one {semana} other {#s}}\",\"filters.month.previousPeriod\":\"ant. {n, plural, one {mês} other {#m}}\",\"filters.quarter.previousPeriod\":\"ant. {n, plural, one {trimestre} other {#t}}\",\"filters.year.previousPeriod\":\"ant. {n, plural, one {ano} other {#a}}\",\"filters.alertMessage.relativePreset\":\"em {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"no período {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"Existe mais que uma configuração de filtro de datas de projeto associada a este projeto. Foi utilizada a primeira configuração.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"Existe mais do que uma configuração de filtro de data de área de trabalho associada a esta área de trabalho. Foi utilizada a primeira.\",\"filters.config.warning.selectedFilterNotValid\":\"A opção de filtro predefinida não é válida. Em vez disso, será utilizada a primeira opção disponível.\",\"filters.config.warning.allOptionsHidden\":\"A configuração de filtro de data de dashboard foi ignorada porque teria ocultado todas as opções de filtro.\",\"filters.config.warning.conflictingIdentifiers\":\"A configuração de filtro de data de dashboard foi ignorada porque contém opções de filtro de data com identificadores idênticos.\",\"filters.config.warning.notAvailable\":\"A configuração de filtro de data do projeto não se encontra definida ou não tem permissões para aceder à mesma.\",\"filters.config.warning.workspace.notAvailable\":\"A configuração de filtro de data de área de trabalho não se encontra definida ou não tem permissões para aceder à mesma.\",\"kpi.noData\":\"Sem dados para as definições atuais dos filtros. Tente alterar os filtros.\",\"kpiPop.change\":\"alterar\",\"dialogs.schedule.email.filters\":\"O dashboard contém alterações de filtros que serão guardadas na programação.\",\"dialogs.schedule.email.filters.not.saved\":\"Os filtros de dashboard guardados no agendamento não serão afetados.\",\"dialogs.schedule.email.attachment.filter\":\"(com os filtros atualmente definidos)\",\"dialogs.schedule.email.attachment.label\":\"Anexo:\",\"dialogs.schedule.email.attachments.label\":\"Anexos:\",\"dialogs.schedule.email.attachment.select\":\"Selecionar anexos\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Este dashboard não contém quaisquer insights.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Dashboard (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Insights (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Agendar entrega do e-mail\",\"dialogs.schedule.email.heading\":\"Exportação de programação\",\"dialogs.schedule.email.message.label\":\"Mensagem:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 subscrição de destinatário anulada} other {# subscrições de destinatários anuladas}} deste agendamento.\",\"dialogs.schedule.email.repeats.label\":\"Repetições:\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"no dia {date}\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"no {week, select, 1 {primeiro} 2 {segundo} 3 {terceiro} 4 {quarto} other {último}} {day}\",\"dialogs.schedule.email.repeats.every\":\"a cada\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {dia} other {dias}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {mês} other {meses}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {semana} other {semanas}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Personalizado\",\"dialogs.schedule.email.repeats.types.daily\":\"Diariamente\",\"dialogs.schedule.email.repeats.types.monthly\":\"Mensalmente no {week, select, 1 {primeiro} 2 {segundo} 3 {terceiro} 4 {quarto} other {último}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Semanalmente à {day}\",\"dialogs.schedule.email.subject.label\":\"Assunto:\",\"dialogs.schedule.email.time.label\":\"Primeira ocorrência:\",\"dialogs.schedule.email.to.label\":\"Para:\",\"dialogs.schedule.email.message.placeholder\":\"Olá,\\n\\nO seu e-mail agendado está pronto. Pode transferir o dashboard nos anexos.\",\"dialogs.schedule.email.submit\":\"Agendar\",\"dialogs.schedule.email.save\":\"Guardar\",\"dialogs.schedule.email.format.options\":\"Opções de formatação\",\"dialogs.schedule.email.insight.format\":\"Formato do insight:\",\"dialogs.schedule.email.attribute.merged\":\"Manter células de atributo unidas\",\"dialogs.schedule.email.show.filters\":\"Mostrar filtros aplicados\",\"dialogs.schedule.management.title\":\"Exportações agendadas\",\"dialogs.schedule.management.delete\":\"Eliminar a programação.\",\"dialogs.schedule.management.delete.dialog\":\"Eliminar programação?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>A programação</b> será eliminada de forma permanente.\",\"dialogs.schedule.management.noSchedules\":\"O dashboard não contém quaisquer exportações agendadas.{br}Adicione uma agora.\",\"dialogs.schedule.management.noSchedules.byUser\":\"Ainda não agendou quaisquer exportações.{br}Adicione uma agora.\",\"dialogs.schedule.management.addSchedule\":\"Adicionar programação\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# destinatário} other {# destinatários}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Apenas o Utilizador\",\"dialogs.schedule.management.attachments.dashboard\":\"Dashboard\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# insight} other {# insights}}\",\"dialogs.schedule.management.attachments.mixed\":\"Dashboard e {n, plural, one {# insight} other {# insights}}\",\"dialogs.schedule.management.load.error\":\"Falha ao carregar. Tente mais tarde.\",\"dialogs.schedule.management.delete.error\":\"Falha ao eliminar programação. Tente mais tarde.\",\"dialogs.schedule.management.tab.all\":\"todos\",\"dialogs.schedule.management.tab.user\":\"criadas por mim\",\"options.menu.schedule.email.recipient.invalid\":\"Este não é um endereço de e-mail válido.\",\"options.menu.schedule.email.recipient.warning.existed\":\"Já adicionou este destinatário.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Este endereço de e-mail não pertence a esta área de trabalho. O destinatário poderá receber dados sensíveis.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Este endereço de e-mail não pertence a esta área de trabalho. Só o autor do agendamento pode adicionar este endereço de e-mail.\",\"delete\":\"Eliminar\",\"close\":\"Fechar\",\"cancel\":\"Cancelar\",\"gs.date.at\":\"em\",\"gs.date.today\":\"Hoje\",\"gs.date.tomorrow\":\"Amanhã\",\"gs.date.yesterday\":\"Ontem\",\"kpi.alertBox.title\":\"Definir um alerta na alteração do KPI\",\"kpi.alertBox.example\":\"por ex.\",\"kpi.alertBox.unverifiedEmail\":\"Lamentamos, não pode definir um alerta. Certifique-se de que o seu e-mail foi verificado. Se isso não ajudar, solicite a atualização das suas permissões ao administrador.\",\"kpi.alertBox.disabledInReadOnly\":\"Os alertas encontram-se desativados no modo só de leitura\",\"kpi.error.view\":\"Não é possível apresentar o KPI. Contacte o administrador para corrigir a definição do KPI.\",\"kpiAlertDialog.delete\":\"Eliminar\",\"kpiAlertDialog.deleting\":\"A eliminar…\",\"kpiAlertDialog.emailMe\":\"Enviar-me um e-mail\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe} quando este KPI for\",\"kpiAlertDialog.emailInfo\":\"O e-mail será enviado para {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Este número não é válido.</strong>{br}Verifique-o e tente novamente.\",\"kpiAlertDialog.filtersDiffer\":\"O KPI está agora filtrado de forma diferente do que quando o alerta foi configurado.\",\"kpiAlertDialog.filtersApply\":\"Aplicar filtros de alerta ao dashboard\",\"kpiAlertDialog.savingFailed\":\"Guardar o alerta falhou. Tente de novo.\",\"kpiAlertDialog.deleteingFailed\":\"Eliminar o alerta falhou. Tente de novo.\",\"kpiAlertDialog.brokenAlert\":\"Alerta infringido\",\"kpiAlertDialog.brokenAlertAppeal\":\"Para ver o valor KPI correto, atualize os filtros neste alerta. Pode também remover o alerta.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Data\",\"kpiAlertDialog.removedFilters\":\"Filtros removidos do dashboard\",\"kpiAlertDialog.ignoredFilters\":\"Filtros ignorados para este kpi\",\"kpiAlertDialog.updateTitle\":\"Atualizar\",\"kpiAlertDialog.updateBrokenTitle\":\"Atualizar filtros\",\"kpiAlertDialog.updatingTitle\":\"A atualizar…\",\"kpiAlertDialog.updateBrokenFailed\":\"Falha ao atualizar filtros. Tente de novo.\",\"kpiAlertDialog.setTitle\":\"Definir alerta\",\"kpiAlertDialog.settingTitle\":\"A definir…\",\"kpiAlertDialog.threshold.above\":\"acima\",\"kpiAlertDialog.threshold.below\":\"abaixo\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} mais {numFilters, select, 1 {filtro} other {filtros}} aplicados\",\"messages.exportResultError\":\"Falha ao exportar os dados. Tente mais tarde.\",\"messages.exportResultRestrictedError\":\"Não é possível exportar este insight porque contém dados confidenciais.\",\"messages.exportResultStart\":\"Exportação em curso\",\"messages.exportResultSuccess\":\"Exportação bem sucedida.\",\"messages.sharingChangedSuccess\":\"Partilha atualizada.\",\"messages.sharingChangedError.general\":\"Falha ao atualizar as definições de partilha. Tente mais tarde.\",\"messages.sharingDialogError.general\":\"Falha ao carregar as definições de partilha. Tente mais tarde.\",\"visualization.dataTooLarge.headline\":\"Demasiados pontos de dados para apresentar\",\"visualization.dataTooLarge.text\":\"Tente aplicar um ou mais filtros ao dashboard.\",\"visualization.execute_protected_report.headline\":\"Não tem autorização para ver este relatório\",\"visualization.execute_protected_report.text\":\"Contacte o seu administrador.\",\"visualization.alert_not_supported\":\"Não são suportados alertas para o período de datas estático\",\"visualization.empty.headline\":\"Sem dados para a seleção de filtros\",\"visualization.error.headline\":\"Lamentamos, não podemos apresentar este insight\",\"visualization.error.text\":\"Contacte o seu administrador.\",\"options.button.bubble\":\"Exportar dados de insight\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"De momento não é possível exportar o insight. Experimente aplicar outros filtros ou utilizar outras medidas ou atributos.\",\"options.menu.unsupported.error._metric\":\"De momento não é possível exportar o insight. Experimente aplicar outros filtros ou utilizar outras métricas ou atributos.\",\"options.menu.unsupported.loading\":\"De momento não é possível exportar o insight.\",\"export.defaultTitle\":\"Insight sem título\",\"export_unsupported.disabled\":\"A exportação não é suportada\",\"widget.options.menu.exportToCSV\":\"Exportar para CSV\",\"widget.options.menu.exportToXLSX\":\"Exportar para XLSX\",\"widget.options.menu.scheduleExport\":\"Exportação de programação\",\"share.button.text\":\"Partilhar\",\"dashboard.error.empty.heading\":\"Este dashboard está vazio\",\"dashboard.error.empty.text\":\"Todos os insights foram removidos.\",\"dashboard.shareDialog.underLenientControl.label\":\"Os outros utilizadores podem aceder a este dashboard se desagregarem até ele\",\"dashboard.shareDialog.lock.label\":\"Este dashboard só pode ser editado por administradores\",\"header.lockStatus.tooltip\":\"<b>Este dashboard encontra-se bloqueado.</b> Só pode ser editado por administradores.\",\"header.shareStatus.private.text\":\"Privado\",\"header.shareStatus.private.strict.tooltip\":\"Só o utilizador pode visualizar e editar este dashboard.\",\"header.shareStatus.private.not.strict.tooltip\":\"O criador pode editar este dashboard. Outros utilizadores com funções de utilizador adequadas podem editá-lo quando o exploram.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Remover acesso a este dashboard.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"O utilizador que criou este dashboard. Não é possível remover criadores.\",\"attributesDropdown.placeholder\":\"Pesquisar atributos…\",\"attributesDropdown.configuration\":\"Configuração\",\"attributesDropdown.itemsFiltered\":\"Há itens filtrados\",\"attributesDropdown.allItemsFiltered\":\"Todos os itens foram filtrados\",\"attributesDropdown.itemsFiltered.tooltip\":\"Os itens foram filtrados por: <strong>{filters}</strong>\",\"attributesDropdown.save\":\"Guardar\",\"attributesDropdown.filterBy\":\"Filtrar por\",\"attributesDropdown.displayValuesAs\":\"Apresentar valores como\",\"attributesDropdown.title\":\"Título\",\"attributesDropdown.title.reset\":\"Repor\",\"attributesDropdown.selectionMode\":\"Seleção\",\"attributesDropdown.selectionMode.multi\":\"Vários valores\",\"attributesDropdown.selectionMode.single\":\"Valor único\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"A opção Valor único não é permitida se houver filtros selecionados em Filtrar por. Para utilizar a opção Valor único, desative todos os filtros em Filtrar por.\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"A filtragem por outros filtros encontra-se desativada para a opção Valor único. Para definir Filtrar por, selecione a opção de valor múltiplo.\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> não pode ser filtrado por <strong>{parentTitle}</strong>. Não há ligação entre os atributos de filtro no modelo de dados.\",\"attributesDropdown.details.dataset\":\"Conjunto de dados\",\"attributesDropdown.details.values\":\"Valores\",\"attributesDropdown.details.shortening_decoration\":\"…e {count} mais\",\"attributesDropdown.removeTooltip\":\"Remover do dashboard\",\"layout.header.characters.left\":\"{currentCharactersCount} / {maximumCharactersCount} carateres remanescentes\",\"layout.header.add.title.placeholder\":\"Adicionar Título aqui...\",\"layout.header.add.description.placeholder\":\"Adicionar Descrição aqui...\",\"error\":\"Erro\",\"controlButtons.edit.value\":\"Editar\",\"controlButtons.saveAndPublish.value\":\"Guardar e Publicar\",\"controlButtons.save.value\":\"Guardar\",\"controlButtons.saveAndPublish.title\":\"Todas as alterações serão visíveis de imediato para todos os utilizadores que consigam aceder a este dashboard.\",\"controlButtons.saveAsPrivate.title\":\"Todas as alterações serão guardadas.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"Não é possível guardar um dashboard vazio\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"Não há alterações para guardar\",\"controlButtons.saving.value\":\"A guardar…\",\"gs.visualizationsList.tabs.all\":\"todos\",\"gs.visualizationsList.tabs.my\":\"criadas por mim\",\"visualizationsList.noInsights\":\"Esta área de trabalho não contém quaisquer insights.\",\"visualizationsList.create\":\"Criar insight\",\"visualizationsList.noUserInsights\":\"Nenhuns insights criados.\",\"visualizationsList.noVisualizationsFound\":\"Nenhum insight correspondente.\",\"search_insights\":\"Pesquisar todos os insights…\",\"save.as.new\":\"Guardar como novo\",\"addPanel.deleteItem\":\"Largar para remover\",\"addPanel.newItem\":\"Novo item\",\"addPanel.attributeFilter\":\"Filtro de Atributo\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"O filtro de atributo requer um atributo.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"Saber mais\",\"addPanel.kpi\":\"Indicador Chave de Desempenho\",\"addPanel.kpi.tooltip.no_measures._measure\":\"O Indicador Chave de Desempenho requer uma medida calculada.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"O Indicador Chave de Desempenho requer uma métrica.\",\"addPanel.kpi.tooltip.no_measures.link\":\"Saber mais\",\"visualizationsList.dragToAdd\":\"Arrastar para adicionar\",\"visualizationsList.savedVisualizations\":\"Insights guardados\",\"configurationPanel.drillConfig.selectDashboard\":\"Escolher dashboard…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Pesquisar todos os dashboards…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(Não partilhados consigo)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"O dashboard não está partilhado consigo, mas outros utilizadores têm acesso a este dashboard.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"O dashboard não está partilhado consigo, mas todos os utilizadores têm acesso ao mesmo se desagregarem até ele.\",\"configurationPanel.remove.form.dashboard\":\"Remover do dashboard\",\"filterBar.filter.drop\":\"largar para adicionar\",\"filterBar.filter.addFilterPlaceholder\":\"Arraste o {icon} para aqui\",\"filterBar.filter.dropzone.tooltip\":\"Arraste o filtro de atributos para aqui.\",\"configurationPanel.title\":\"Configuração\",\"configurationPanel.comparison\":\"Comparação\",\"configurationPanel.compareWith\":\"Comparar com\",\"configurationPanel.increasingNumberIs\":\"Número crescente é\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Período anterior\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Mesmo período do ano anterior\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Sem comparação\",\"configurationPanel.comparisonDirectionItems.green\":\"Verde\",\"configurationPanel.comparisonDirectionItems.red\":\"Vermelho\",\"configurationPanel.unlistedMetric._measure\":\"Medida não listada\",\"configurationPanel.unlistedMetric._metric\":\"Métrica não listada\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Esta medida está oculta. Só o utilizador a pode ver.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Esta métrica está oculta. Só o utilizador a consegue ver.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Selecionar medida…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Selecione a métrica…\",\"configurationPanel.selectComparisonPlaceholder\":\"Selecionar comparação…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Selecionar positivo/negativo\",\"configurationPanel.measure._measure\":\"Medir\",\"configurationPanel.measure._metric\":\"Métrica\",\"configurationPanel.filterBy\":\"Filtrar por\",\"configurationPanel.date\":\"Data\",\"configurationPanel.dateAs\":\"como\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"Não é possível filtrar o insight por {attributeName}. Desmarque a caixa de verificação.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"Não é possível filtrar o kpi por {attributeName}. Desmarque a caixa de verificação.\",\"configurationPanel.vizCantBeFilteredByDate\":\"Não é possível filtrar o insight por Data. Desmarque a caixa de verificação.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"Não é possível filtrar o kpi por Data. Desmarque a caixa de verificação.\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" já não pode ser aplicado ao insight. Selecione uma dimensão diferente ou edite o insight.\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\" já não pode ser aplicado ao kpi. Selecione uma dimensão diferente ou edite o kpi.\",\"configurationPanel.breakAlertWarning\":\"\\n            Os utilizadores configuraram {numAlerts} {numAlerts, select, 1 {alerta} other {alertas}}\\n            para este KPI. A modificação do KPI afetará {numAlerts, select, 1 {este alerta} other {estes alertas}}.\\n\",\"configurationPanel.drillIntoDashboard\":\"Exploração aprofundada do dashboard\",\"configurationPanel.noLinkableDashboards\":\"Nenhum dashboard para ligação\",\"configurationPanel.selectDashboard\":\"Selecionar um dashboard\",\"configurationPanel.interactions\":\"Interações\",\"configurationPanel.drillConfig.interactions\":\"Aprofundar interações\",\"configurationPanel.drillConfig.addInteraction\":\"Adicionar interação\",\"configurationPanel.drillConfig.clickHint\":\"Quando clicar em\",\"configurationPanel.drillConfig.measureValue._measure\":\"Valor da medida\",\"configurationPanel.drillConfig.measureValue._metric\":\"Valor da métrica\",\"configurationPanel.drillConfig.attributeValue\":\"Valor do atributo\",\"configurationPanel.drillConfig.selectTarget\":\"Quero\",\"configurationPanel.drillConfig.clickHintItem\":\"Quando clicar em <addon>(valor de)</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Exploração aprofundada do dashboard\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Aprofundar insight\",\"configurationPanel.drillConfig.drillIntoUrl\":\"Aprofundar URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Parâmetros de URL inválidos\",\"configurationPanel.drillConfig.select\":\"Escolher ação…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"O valor do atributo de data do insight não será transferido para filtrar o dashboard de destino.\",\"configurationPanel.unlistedDashboardTab\":\"Dashboard não listado\",\"configurationPanel.visualprops.sectionTitle\":\"Título\",\"configurationPanel.visualprops.hideTitle\":\"Ocultar título\",\"configurationPanel.visualprops.sectionDescription\":\"Descrição\",\"configurationPanel.visualprops.inheritDescription\":\"Herdar\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Herdar a descrição do insight.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Herdar a descrição da métrica.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Herdar a descrição da medida.\",\"configurationPanel.visualprops.customDescription\":\"Personalizado\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Adicione uma descrição personalizada para esta instância do insight.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Adicione uma descrição personalizada.\",\"configurationPanel.visualprops.noneDescription\":\"Nenhum\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Incluir descrições de medidas\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Incluir descrições de métricas\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Apresentar secção com a lista das medidas do insight e respetiva descrição.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Apresentar secção com a lista das métricas do insight e respetiva descrição.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Adicionar descrição…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"Escolher URL\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Hiperligação da etiqueta do atributo\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"URL personalizado\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Adicionar URL personalizado\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Editar URL personalizado\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Parâmetros\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Os parâmetros são marcadores de posição substituídos por valores dinâmicos durante a exploração.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Adicionar\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Tipo\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Etiqueta\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {Valor} other {Valores}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...e outros {count}\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"ID do Insight\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"ID de Cliente\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"ID de produto dos dados\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"ID do Projeto\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"ID da área de trabalho\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"ID do Widget\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"ID do Dashboard\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Identificador\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Insight\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Identificadores\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Aplicar\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Cancelar\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"Introduza o URL e adicione parâmetros no painel da direita.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"Como criar URLs personalizados?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Parâmetros inválidos: {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Adicionar URL personalizado\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Editar URL personalizado\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Valor da etiqueta do atributo\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Valor geográfico do atributo\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"Valor do URL do atributo\",\"configurationPanel.zoomInsight\":\"Insight passível de zoom\",\"configurationPanel.zoomInsight.help\":\"Ative para ampliar o insight e apresentar uma vista detalhada. Mantenha premida a tecla Shift para rodar a zona ampliada.\",\"configurationPanel.zoomInsight.notice\":\"O zoom não será aplicado aos dashboards exportados\",\"configurationPanel.drillConfig.selectInsight\":\"Escolher insight…\",\"gs.date.date-dataset.recommended\":\"Recomendado\",\"gs.date.date-dataset.other\":\"Outros\",\"gs.date.date-dataset.related\":\"Relacionado\",\"gs.date.date-dataset.unrelated\":\"Não relacionado\",\"layout.widget.width.min\":\"O widget tem a largura mínima\",\"layout.widget.width.max\":\"O widget já tem a largura máxima\",\"layout.widget.height.min\":\"O widget já tem a altura mínima\",\"layout.widget.height.max\":\"O widget já tem a altura máxima\",\"layout.widget.addedByPlugin\":\"Adicionado por plug-in\",\"layout.widget.modifiedByPlugin\":\"Modificado por plug-in\",\"layout.widget.hideOverlay\":\"Ocultar sobreposição\",\"dropzone.new.row.desc\":\"Largue para criar uma{nbsp}<b>nova seção</b>\",\"dropzone.widget.desc\":\"Largar <b>aqui</b>\",\"dropzone.widget.last.in.row.desc\":\"Largar na <b>secção existente</b>\",\"deleteKpiConfirmationDialog.headline\":\"Eliminar KPI\",\"deleteKpiConfirmationDialog.message\":\"Todos os alertas configurados para este KPI serão também eliminados.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Eliminar\",\"newDashboard.title\":\"Arraste o insight para aqui\",\"newDashboard.dropInsight\":\"Largar insight\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> já se encontra filtrado pelo filtro <strong>{childTitle}</strong>, de forma direta ou através de outros filtros.\",\"attributesDropdown.attributeNameWithData\":\"com dados de\"}","module.exports = {\"loading\":\"Загрузка…\",\"untitled\":\"Без названия\",\"empty_value\":\"значение отсутствует\",\"gs.list.cancel\":\"Отмена\",\"gs.list.apply\":\"Применить\",\"gs.list.only\":\"Только\",\"messages.dashboardSaveSuccess\":\"Отлично. Мы сохранили ваш дашборд.\",\"options.menu.save.as\":\"Сохранить как новую\",\"options.menu.save.as.tooltip\":\"Пустой дашборд нельзя сохранить.\",\"messages.dashboardSaveFailed\":\"Не удалось сохранить дашборд, повторите попытку.\",\"messages.dashboard.invalidDrills.title\":\"<b>Некоторые взаимодействия были удалены</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"Один или несколько дашбордов/анализов/показателей/атрибутов были изменены или удалены, в результате чего некоторые взаимодействия были удалены из следующих виджетов: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"Один или несколько дашбордов/анализов/метрик/атрибутов были изменены или удалены, в результате чего некоторые взаимодействия были удалены из следующих виджетов: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>Некоторая детализация взаимодействий с URL-адресами была отключена</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"Некоторая детализация взаимодействий с URL-адресами была отключена в следующих виджетах из-за изменений в атрибутах аналитики: <b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"Раскрыть\",\"messages.dashboard.expandable.showLess\":\"Скрыть\",\"messages.drill.InteractionConfiguredSuccess\":\"Взаимодействие настроено.\",\"messages.drill.InteractionUpdatedSuccess\":\"Взаимодействие обновлено.\",\"filterBar.showAll\":\"Показать все\",\"filterBar.showLess\":\"Скрыть\",\"options.menu.export.PDF\":\"Экспорт в PDF\",\"options.menu.schedule.email\":\"Запланируйте отправку по электронной почте\",\"options.menu.delete\":\"Удалить\",\"dialogs.export.cells\":\"ЯЧЕЙКИ\",\"dialogs.export.filters\":\"КОНТЕКСТ АНАЛИЗА\",\"dialogs.export.includeFilters\":\"Включить примененные фильтры\",\"dialogs.export.headline\":\"Экспорт в XLSX\",\"dialogs.export.mergeHeaders\":\"Сохранить ячейки атрибутов объединенными\",\"dialogs.export.submit\":\"Экспортировать\",\"dialogs.schedule.email.delete.success\":\"Получилось! Запланированное электронное письмо было удалено.\",\"dialogs.schedule.email.submit.success\":\"Получилось! Запланирована отправка вашего дашборда по электронной почте.\",\"dialogs.schedule.email.submit.error\":\"Не удалось запланировать отправку дашборда. Повторите попытку позже.\",\"dialogs.schedule.email.save.success\":\"Получилось! Ваше расписание сохранено.\",\"dialogs.schedule.email.save.error\":\"Не удалось сохранить расписание. Повторите попытку позже.\",\"dialogs.save.as.new.title\":\"Сохранить дашборд как новый\",\"dialogs.save.as.new.desc\":\"Дайте новому дашборду описательное имя, чтобы его было легче найти в дальнейшем.\",\"dialogs.save.as.new.default.title\":\"Копия {title}\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"Оповещения и запланированные электронные письма не будут дублироваться\",\"dialogs.save.as.new.alertsMessage\":\"Оповещения не будут дублироваться\",\"dialogs.save.as.new.emailsMessage\":\"Запланированные электронные письма не будут дублироваться\",\"cancelConfirmationDialog.headline\":\"Отменить изменения?\",\"cancelConfirmationDialog.message\":\"Все изменения будут потеряны\",\"cancelConfirmationDialog.submitButtonText\":\"Отменить изменения\",\"deleteDashboardDialog.headline\":\"Удалить дашборд?\",\"deleteDashboardDialog.submitButtonText\":\"Удалить\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"Все оповещения и запланированные электронные письма, настроенные для этого дашборда, также будут удалены.\",\"deleteDashboardDialog.alertsMessage\":\"Все оповещения, настроенные для этого дашборда, также будут удалены.\",\"deleteDashboardDialog.emailsMessage\":\"Все запланированные электронные письма, настроенные для этого дашборда, также будут удалены.\",\"deleteDashboardDialog.drillMessage\":\"Все данные, полученные на этом дашборде с других дашбордов, будут удалены.\",\"create.dashboard\":\"Создать дашборд\",\"drill_modal_picker.drill-down\":\"Углубиться\",\"drill_modal_picker.drill-into\":\"Углубиться\",\"drill_modal_picker.more.details\":\"Подробнее\",\"drillModal.backToTop\":\"Наверх\",\"filters.allTime.previousPeriod\":\"пред. период\",\"filters.allTime.lastYear\":\"пред. год\",\"filters.minute.previousPeriod\":\"пред. минута\",\"filters.hour.previousPeriod\":\"пред. час\",\"filters.day.previousPeriod\":\"пред. {n, plural, one {день} other {#д}}\",\"filters.week.previousPeriod\":\"пред. {n, plural, one {неделя} other {#н}}\",\"filters.month.previousPeriod\":\"пред. {n, plural, one {месяц} other {#м}}\",\"filters.quarter.previousPeriod\":\"пред. {n, plural, one {квартал} other {#к}}\",\"filters.year.previousPeriod\":\"пред. {n, plural, one {год} other {#г}}\",\"filters.alertMessage.relativePreset\":\"за {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"за период {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"С этим проектом связано несколько конфигураций фильтра по дате проекта. Была использована первая.\",\"filters.config.warning.multipleWorkspacesConfigs\":\"С этой рабочей областью связано несколько конфигураций фильтра по дате проекта. Была использована первая.\",\"filters.config.warning.selectedFilterNotValid\":\"Параметр фильтра по умолчанию недействителен, вместо него используется первый доступный вариант.\",\"filters.config.warning.allOptionsHidden\":\"Конфигурация фильтра даты дашборда была проигнорирована, поскольку она скрыла бы все параметры фильтра.\",\"filters.config.warning.conflictingIdentifiers\":\"Конфигурация фильтра даты дашборда была проигнорирована, поскольку она содержит параметры фильтра даты с идентичными идентификаторами.\",\"filters.config.warning.notAvailable\":\"Конфигурация фильтра даты проекта либо не определена, либо у вас нет прав доступа к ней.\",\"filters.config.warning.workspace.notAvailable\":\"Конфигурация фильтра даты рабочей области либо не определена, либо у вас нет прав доступа к ней.\",\"kpi.noData\":\"Нет данных для текущих настроек фильтра. Попробуйте изменить фильтры.\",\"kpiPop.change\":\"изменить\",\"dialogs.schedule.email.filters\":\"Дашборд содержит изменения фильтра, которые будут сохранены в расписании.\",\"dialogs.schedule.email.filters.not.saved\":\"Фильтры дашборда, сохраненные в расписании, не будут затронуты.\",\"dialogs.schedule.email.attachment.filter\":\"(с текущими установленными фильтрами)\",\"dialogs.schedule.email.attachment.label\":\"Вложение:\",\"dialogs.schedule.email.attachments.label\":\"Вложения:\",\"dialogs.schedule.email.attachment.select\":\"Выбрать вложения\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"Этот дашборд не содержит никаких анализов.\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"Дашборд (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"Анализы (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"Запланируйте доставку электронной почты\",\"dialogs.schedule.email.heading\":\"Запланировать экспорт\",\"dialogs.schedule.email.message.label\":\"Сообщение:\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 получатель отказался от подписки} few {# получателя отказались от подписки} many {# получателей отказались от подписки} other {# получателей отказались от подписки}} на это расписаниеe.\",\"dialogs.schedule.email.repeats.label\":\"Повторы:\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"{date}\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"в {week, select, 1 {первый} 2 {второй} 3 {третий} 4 {четвертый} other {последний}} {day}\",\"dialogs.schedule.email.repeats.every\":\"каждый\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {день} few {дня} many {дней} other {дней}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {месяц} few {месяца} many {месяцев} other {месяцев}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {неделя} few {недели} many {недель} other {недель}}\",\"dialogs.schedule.email.repeats.types.custom\":\"Свои правила\",\"dialogs.schedule.email.repeats.types.daily\":\"Ежедневно\",\"dialogs.schedule.email.repeats.types.monthly\":\"Ежемесячно в {week, select, 1 {первый} 2 {второй} 3 {третий} 4 {четвертый} other {последний}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"Еженедельно в: {day}\",\"dialogs.schedule.email.subject.label\":\"Тема:\",\"dialogs.schedule.email.time.label\":\"Первый раз:\",\"dialogs.schedule.email.to.label\":\"Кому:\",\"dialogs.schedule.email.message.placeholder\":\"Здравствуйте,\\n\\nВы получили запланированное электронное письмо. Вы можете посмотреть дашборд во вложении.\",\"dialogs.schedule.email.submit\":\"Запланировать\",\"dialogs.schedule.email.save\":\"Сохранить\",\"dialogs.schedule.email.format.options\":\"Параметры формата\",\"dialogs.schedule.email.insight.format\":\"Формат анализа:\",\"dialogs.schedule.email.attribute.merged\":\"Сохранить ячейки атрибутов объединенными\",\"dialogs.schedule.email.show.filters\":\"Показать, какие фильтры применяются\",\"dialogs.schedule.management.title\":\"Запланированные экспорты\",\"dialogs.schedule.management.delete\":\"Удалить расписание.\",\"dialogs.schedule.management.delete.dialog\":\"Удалить расписание?\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>Расписание</b> будет удалено навсегда.\",\"dialogs.schedule.management.noSchedules\":\"На дашборде нет запланированных экспортов.{br}Добавьте их прямо сейчас.\",\"dialogs.schedule.management.noSchedules.byUser\":\"Вы еще не запланировали ни одного экспорта.{br}Добавьте их прямо сейчас.\",\"dialogs.schedule.management.addSchedule\":\"Добавить расписание\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# получатель} few {# получателя} many {# получателей} other {# получателей}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"Только вы\",\"dialogs.schedule.management.attachments.dashboard\":\"Дашборд\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# анализ} few {# анализа} many {# анализов} other {# анализов}}\",\"dialogs.schedule.management.attachments.mixed\":\"Дашборд и {n, plural, one {# анализ} few {# анализа} many {# анализов} other {# анализов}}\",\"dialogs.schedule.management.load.error\":\"Не удалось загрузить. Повторите попытку позже.\",\"dialogs.schedule.management.delete.error\":\"Не удалось удалить расписание. Повторите попытку позже.\",\"dialogs.schedule.management.tab.all\":\"все\",\"dialogs.schedule.management.tab.user\":\"создано мной\",\"options.menu.schedule.email.recipient.invalid\":\"Это недействительный адрес электронной почты.\",\"options.menu.schedule.email.recipient.warning.existed\":\"Вы уже добавили этого получателя.\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"Этот адрес электронной почты не принадлежит этому рабочему пространству. Получатель может получить конфиденциальные данные.\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"Этот адрес электронной почты не принадлежит этому рабочему пространству. Только автор расписания может добавить этот адрес электронной почты.\",\"delete\":\"Удалить\",\"close\":\"Закрыть\",\"cancel\":\"Отмена\",\"gs.date.at\":\"в\",\"gs.date.today\":\"Сегодня\",\"gs.date.tomorrow\":\"Завтра\",\"gs.date.yesterday\":\"Вчера\",\"kpi.alertBox.title\":\"Установите оповещение об изменении КПЭ\",\"kpi.alertBox.example\":\"напр.\",\"kpi.alertBox.unverifiedEmail\":\"К сожалению, вы не можете установить оповещение. Убедитесь, что ваш адрес электронной почты подтвержден. Если это не поможет, попросите администратора обновить ваши разрешения.\",\"kpi.alertBox.disabledInReadOnly\":\"Оповещение отключено в режиме только для чтения\",\"kpi.error.view\":\"КПЭ не может быть отображен. Обратитесь к администратору, чтобы исправить определение КПЭ.\",\"kpiAlertDialog.delete\":\"Удалить\",\"kpiAlertDialog.deleting\":\"Удаление…\",\"kpiAlertDialog.emailMe\":\"Отправить мне\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe} когда этот КПЭ\",\"kpiAlertDialog.emailInfo\":\"Эл. письмо будет отправлено на {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>Этот число недопустимо.</strong>{br}Еще раз проверьте его и повторите попытку.\",\"kpiAlertDialog.filtersDiffer\":\"КПЭ теперь фильтруется иначе, чем когда было настроено оповещение.\",\"kpiAlertDialog.filtersApply\":\"Применить фильтры оповещения к дашбордам\",\"kpiAlertDialog.savingFailed\":\"Не удалось сохранить оповещение. Повторите попытку.\",\"kpiAlertDialog.deleteingFailed\":\"Не удалось удалить оповещение. Повторите попытку.\",\"kpiAlertDialog.brokenAlert\":\"Неработающее оповещение\",\"kpiAlertDialog.brokenAlertAppeal\":\"Чтобы увидеть правильное значение КПЭ, обновите фильтры в этом оповещении. Вы также можете удалить оповещение.\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"Дата\",\"kpiAlertDialog.removedFilters\":\"Фильтры удалены с дашборда\",\"kpiAlertDialog.ignoredFilters\":\"Фильтры игнорируются для этого КПЭ\",\"kpiAlertDialog.updateTitle\":\"Обновить\",\"kpiAlertDialog.updateBrokenTitle\":\"Обновить фильтры\",\"kpiAlertDialog.updatingTitle\":\"Обновление…\",\"kpiAlertDialog.updateBrokenFailed\":\"Не удалось обновить фильтры. Повторите попытку.\",\"kpiAlertDialog.setTitle\":\"Установить оповещение\",\"kpiAlertDialog.settingTitle\":\"Установка…\",\"kpiAlertDialog.threshold.above\":\"выше\",\"kpiAlertDialog.threshold.below\":\"ниже\",\"kpiAlertDialog.withAttributeFilters\":\"еще {numFilters} {numFilters, select, 1 {фильтр применен} few {фильтра применено} many {фильтров применено} other {фильтров применено}}\",\"messages.exportResultError\":\"Не удалось экспортировать данные. Попробуйте позже.\",\"messages.exportResultRestrictedError\":\"Вы не можете экспортировать этот анализ, так как он содержит данные с ограниченным доступом.\",\"messages.exportResultStart\":\"Выполняется экспорт\",\"messages.exportResultSuccess\":\"Экспорт успешно завершен.\",\"messages.sharingChangedSuccess\":\"Общий доступ обновлен.\",\"messages.sharingChangedError.general\":\"Не удалось обновить настройки общего доступа. Попробуйте позже.\",\"messages.sharingDialogError.general\":\"Не удалось загрузить настройки общего доступа. Попробуйте позже.\",\"visualization.dataTooLarge.headline\":\"Слишком много точек данных для отображения\",\"visualization.dataTooLarge.text\":\"Попробуйте применить один или несколько фильтров к своему дашборду.\",\"visualization.execute_protected_report.headline\":\"У вас нет прав для просмотра этого отчета\",\"visualization.execute_protected_report.text\":\"Свяжитесь со своим администратором.\",\"visualization.alert_not_supported\":\"Оповещения не поддерживаются для статического периода даты.\",\"visualization.empty.headline\":\"Нет данных при вашем выборе фильтров\",\"visualization.error.headline\":\"К сожалению, мы не можем отобразить этот анализ\",\"visualization.error.text\":\"Свяжитесь со своим администратором.\",\"options.button.bubble\":\"Экспорт данных анализа\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"В настоящий момент анализ нельзя экспортировать. Попробуйте применить другие фильтры или использовать другие показатели или атрибуты.\",\"options.menu.unsupported.error._metric\":\"В настоящий момент анализ нельзя экспортировать. Попробуйте применить другие фильтры или использовать другие метрики или атрибуты.\",\"options.menu.unsupported.loading\":\"В настоящий момент анализ нельзя экспортировать.\",\"export.defaultTitle\":\"Анализ без названия\",\"export_unsupported.disabled\":\"Экспорт не поддерживается\",\"widget.options.menu.exportToCSV\":\"Экспорт в CSV\",\"widget.options.menu.exportToXLSX\":\"Экспорт в XLSX\",\"widget.options.menu.scheduleExport\":\"Запланировать экспорт\",\"share.button.text\":\"Поделиться\",\"dashboard.error.empty.heading\":\"Этот дашборд пуст\",\"dashboard.error.empty.text\":\"Все анализы были удалены.\",\"dashboard.shareDialog.underLenientControl.label\":\"Другие пользователи могут получить доступ к этому дашборду, если они перейдут к нему в ходе детализации.\",\"dashboard.shareDialog.lock.label\":\"Только администраторы могут редактировать этот дашборд\",\"header.lockStatus.tooltip\":\"<b>Этот дашборд заблокирован.</b> Только администраторы могут редактировать его.\",\"header.shareStatus.private.text\":\"Приватные\",\"header.shareStatus.private.strict.tooltip\":\"Только вы можете просматривать и редактировать этот дашборд.\",\"header.shareStatus.private.not.strict.tooltip\":\"Создатель может редактировать этот дашборд. Другие пользователи с соответствующими ролями могут редактировать этот дашборд при переходе к нему.\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"Удалить доступ к этому дашборду.\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"Это пользователь, создавший этот дашборд. Создателя невозможно удалить.\",\"attributesDropdown.placeholder\":\"Поиск атрибутов…\",\"attributesDropdown.configuration\":\"Конфигурация\",\"attributesDropdown.itemsFiltered\":\"Элементы фильтруются\",\"attributesDropdown.allItemsFiltered\":\"Все элементы отфильтрованы\",\"attributesDropdown.itemsFiltered.tooltip\":\"Элементы фильтруются по: <strong>{filters}</strong>\",\"attributesDropdown.save\":\"Сохранить\",\"attributesDropdown.filterBy\":\"Фильтровать по\",\"attributesDropdown.displayValuesAs\":\"Отображать значения как\",\"attributesDropdown.title\":\"Заголовок\",\"attributesDropdown.title.reset\":\"Сброс\",\"attributesDropdown.selectionMode\":\"Выделение\",\"attributesDropdown.selectionMode.multi\":\"Несколько значений\",\"attributesDropdown.selectionMode.single\":\"Одно значение\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"Выбор одного значения не допускается, если какие-либо фильтры выбраны в поле «Фильтровать по». Чтобы использовать выбор «Одно значение», отключите все фильтры в поле «Фильтровать по».\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"Фильтрация другими фильтрами отключена для выбора «Одно значение». Чтобы установить «Фильтровать по», выберите «Несколько значений».\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> нельзя фильтровать по <strong>{parentTitle}</strong>. В модели данных нет связи между атрибутами фильтра.\",\"attributesDropdown.details.dataset\":\"Датасет\",\"attributesDropdown.details.values\":\"Значения\",\"attributesDropdown.details.shortening_decoration\":\"…и еще {count}\",\"attributesDropdown.removeTooltip\":\"Удалить с дашборда\",\"layout.header.characters.left\":\"осталось символов: {currentCharactersCount}/{maximumCharactersCount}\",\"layout.header.add.title.placeholder\":\"Добавьте заголовок здесь...\",\"layout.header.add.description.placeholder\":\"Добавьте описание здесь...\",\"error\":\"Ошибка\",\"controlButtons.edit.value\":\"Изменить\",\"controlButtons.saveAndPublish.value\":\"Сохранить и опубликовать\",\"controlButtons.save.value\":\"Сохранить\",\"controlButtons.saveAndPublish.title\":\"Все изменения будут немедленно видны всем, у кого есть доступ к этому дашборду.\",\"controlButtons.saveAsPrivate.title\":\"Все изменения будут сохранены.\",\"controlButtons.saveAndPublish.disable.empty.title\":\"Пустой дашборд нельзя сохранить\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"Нет изменений для сохранения\",\"controlButtons.saving.value\":\"Сохранение…\",\"gs.visualizationsList.tabs.all\":\"все\",\"gs.visualizationsList.tabs.my\":\"создано мной\",\"visualizationsList.noInsights\":\"Эта рабочая область не содержит анализов.\",\"visualizationsList.create\":\"Создать анализ\",\"visualizationsList.noUserInsights\":\"Нет созданных анализов.\",\"visualizationsList.noVisualizationsFound\":\"Нет подходящего анализа.\",\"search_insights\":\"Поиск по всем анализам…\",\"save.as.new\":\"Сохранить как новую\",\"addPanel.deleteItem\":\"Сбросьте, чтобы удалить\",\"addPanel.newItem\":\"Новый элемент\",\"addPanel.attributeFilter\":\"Фильтр атрибутов\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"Фильтру атрибутов требуется атрибут.\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"Подробнее\",\"addPanel.kpi\":\"Ключевой показатель эффективности\",\"addPanel.kpi.tooltip.no_measures._measure\":\"Ключевому показателю эффективности требуется вычисляемый показатель.\",\"addPanel.kpi.tooltip.no_measures._metric\":\"Ключевому показателю эффективности требуется метрика.\",\"addPanel.kpi.tooltip.no_measures.link\":\"Подробнее\",\"visualizationsList.dragToAdd\":\"Перетащите, чтобы добавить\",\"visualizationsList.savedVisualizations\":\"Сохраненные анализы\",\"configurationPanel.drillConfig.selectDashboard\":\"Выберите дашборд…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"Поиск по всем дашбордам…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"(Не предоставлена вам)\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"Дашборд не предоставлен вам, но другие пользователи имеют доступ к нему.\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"Дашборд не предоставлен вам, но все пользователи могут получить к нему доступ, если они перейдут к нему в ходе детализации.\",\"configurationPanel.remove.form.dashboard\":\"Удалить с дашборда\",\"filterBar.filter.drop\":\"сбросьте, чтобы добавить\",\"filterBar.filter.addFilterPlaceholder\":\"Перетащите {icon} сюда\",\"filterBar.filter.dropzone.tooltip\":\"Перетащите фильтр атрибутов сюда.\",\"configurationPanel.title\":\"Конфигурация\",\"configurationPanel.comparison\":\"Сравнение\",\"configurationPanel.compareWith\":\"Сравнить с\",\"configurationPanel.increasingNumberIs\":\"Увеличение числа\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"Предыдущий период\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"Тот же период предыдущего года\",\"configurationPanel.comparisonTypeItems.noComparison\":\"Без сравнения\",\"configurationPanel.comparisonDirectionItems.green\":\"Зеленый\",\"configurationPanel.comparisonDirectionItems.red\":\"Красный\",\"configurationPanel.unlistedMetric._measure\":\"Показатель вне списка\",\"configurationPanel.unlistedMetric._metric\":\"Метрика вне списка\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"Этот показатель скрыт. Только вы можете видеть его.\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"Эта метрика скрыта. Только вы можете видеть ее.\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"Выбрать показатель…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"Выбрать метрику…\",\"configurationPanel.selectComparisonPlaceholder\":\"Выбрать сравнение…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"Выберите положительный/отрицательный\",\"configurationPanel.measure._measure\":\"Показатель\",\"configurationPanel.measure._metric\":\"Метрика\",\"configurationPanel.filterBy\":\"Фильтровать по\",\"configurationPanel.date\":\"Дата\",\"configurationPanel.dateAs\":\"как\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"Этот анализ нельзя фильтровать по {attributeName}. Снимите флажок.\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"Этот КПЭ нельзя фильтровать по {attributeName}. Снимите флажок.\",\"configurationPanel.vizCantBeFilteredByDate\":\"Этот анализ нельзя фильтровать по дате. Снимите флажок.\",\"configurationPanel.kpiCantBeFilteredByDate\":\"Этот КПЭ нельзя фильтровать по дате. Снимите флажок.\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\" больше нельзя применять к анализу. Выберите другое измерение или отредактируйте анализ.\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\" больше нельзя применять к КПЭ. Выберите другое измерение или отредактируйте анализ.\",\"configurationPanel.breakAlertWarning\":\"\\n            Пользователи настроили {numAlerts} {numAlerts, select, 1 {оповещение} few {оповещения} many {оповещений} other {оповещений}}\\n            для этого КПЭ. Изменение КПЭ повлияет на {numAlerts, select, 1 {это оповещение} few {этих оповещения} many {этих оповещений} other {тих оповещений}}.\\n        \",\"configurationPanel.drillIntoDashboard\":\"Углубиться в дашборд\",\"configurationPanel.noLinkableDashboards\":\"Нет дашборда для ссылки\",\"configurationPanel.selectDashboard\":\"Выберите дашборд\",\"configurationPanel.interactions\":\"Взаимодействия\",\"configurationPanel.drillConfig.interactions\":\"Детализация взаимодействий\",\"configurationPanel.drillConfig.addInteraction\":\"Добавить взаимодействие\",\"configurationPanel.drillConfig.clickHint\":\"Когда я щелкну\",\"configurationPanel.drillConfig.measureValue._measure\":\"значение показателя\",\"configurationPanel.drillConfig.measureValue._metric\":\"значение метрики\",\"configurationPanel.drillConfig.attributeValue\":\"значение атрибута\",\"configurationPanel.drillConfig.selectTarget\":\"Я хочу\",\"configurationPanel.drillConfig.clickHintItem\":\"Когда я щелкну <addon>(значение)</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"Углубиться в дашборд\",\"configurationPanel.drillConfig.drillIntoInsight\":\"Углубиться в анализ\",\"configurationPanel.drillConfig.drillIntoUrl\":\"Углубиться в URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"Неверные параметры URL\",\"configurationPanel.drillConfig.select\":\"Выбрать действие…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"Значение атрибута даты из анализа не будет передано для фильтрации целевого дашборда.\",\"configurationPanel.unlistedDashboardTab\":\"Дашборд вне списка\",\"configurationPanel.visualprops.sectionTitle\":\"Заголовок\",\"configurationPanel.visualprops.hideTitle\":\"Скрыть заголовок\",\"configurationPanel.visualprops.sectionDescription\":\"Описание\",\"configurationPanel.visualprops.inheritDescription\":\"Унаследованное\",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"Наследовать описание из анализа.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"Наследовать описание из метрики.\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"Наследовать описание из показателя.\",\"configurationPanel.visualprops.customDescription\":\"Свои правила\",\"configurationPanel.visualprops.customDescriptionHelp\":\"Добавьте собственное описание для этого экземпляра анализа.\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"Добавьте собственное описание.\",\"configurationPanel.visualprops.noneDescription\":\"Нет\",\"configurationPanel.visualprops.includeMetrics._measure\":\"Включать описания показателей\",\"configurationPanel.visualprops.includeMetrics._metric\":\"Включать описания метрик\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"Отобразить раздел со списком показателей анализа и их описанием.\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"Отобразить раздел со списком метрик анализа и их описанием.\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"Добавить описание…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"Выбрать URL\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"Гиперссылка в метке атрибута\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"Пользовательский URL\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"Добавить польз. URL\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"Редак. польз. URL\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"Параметры\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"Параметры – это заполнители, которые заменяются динамическими значениями во время детализации.\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"Добавить\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"Тип\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"Метка\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {значение} few {значения} many {значений} other {значений}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...и еще {count}\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"ИД анализа\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"ИД клиента\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"ИД данных продукта\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"ИД проекта\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"ИД рабочей области\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"ИД виджета\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"ИД дашборда\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"Идентификатор\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"Анализ\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"Идентификаторы\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"Применить\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"Отмена\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"Введите URL и добавьте параметры с правой панели.\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"Как создать пользовательский URL?\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"Неверные параметры: {invalidParameters}\",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"Добавить польз. URL\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"Редак. польз. URL\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"Значение метки атрибута\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"Значение гео-атрибута\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"Значение URL атрибута\",\"configurationPanel.zoomInsight\":\"Масштабируемый анализ\",\"configurationPanel.zoomInsight.help\":\"Включите масштабирование анализа для отображения подробного представления. Удерживайте клавишу shift, чтобы перемещать масштабируемую область.\",\"configurationPanel.zoomInsight.notice\":\"Масштабирование не будет применяться к экспортированным дашбордам.\",\"configurationPanel.drillConfig.selectInsight\":\"Выбрать анализ…\",\"gs.date.date-dataset.recommended\":\"Рекомендуемые\",\"gs.date.date-dataset.other\":\"Прочие\",\"gs.date.date-dataset.related\":\"Связанные\",\"gs.date.date-dataset.unrelated\":\"Несвязанные\",\"layout.widget.width.min\":\"Виджет имеет минимальную ширину\",\"layout.widget.width.max\":\"Виджет имеет максимальную ширину\",\"layout.widget.height.min\":\"Виджет имеет минимальную высоту\",\"layout.widget.height.max\":\"Виджет имеет максимальную высоту\",\"layout.widget.addedByPlugin\":\"Добавлено плагином\",\"layout.widget.modifiedByPlugin\":\"Изменено плагином\",\"layout.widget.hideOverlay\":\"Скрыть оверлей\",\"dropzone.new.row.desc\":\"Сбросьте, чтобы создать{nbsp}<b>новый раздел</b>\",\"dropzone.widget.desc\":\"Сбросьте <b>сюда</b>\",\"dropzone.widget.last.in.row.desc\":\"Сбросьте в <b>имеющийся раздел</b>\",\"deleteKpiConfirmationDialog.headline\":\"Удалить КПЭ\",\"deleteKpiConfirmationDialog.message\":\"Все оповещения, настроенные для этого КПЭ, также будут удалены.\",\"deleteKpiConfirmationDialog.submitButtonText\":\"Удалить\",\"newDashboard.title\":\"Перетащите анализ сюда\",\"newDashboard.dropInsight\":\"Сбросьте анализ\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> уже отфильтрован фильтром <strong>{childTitle}</strong> напрямую или через другие фильтры.\",\"attributesDropdown.attributeNameWithData\":\"с данными\"}","module.exports = {\"loading\":\"正在加载…\",\"untitled\":\"无标题\",\"empty_value\":\"空值\",\"gs.list.cancel\":\"取消\",\"gs.list.apply\":\"应用\",\"gs.list.only\":\"仅\",\"messages.dashboardSaveSuccess\":\"太棒了，我们已保存您的控制面板。\",\"options.menu.save.as\":\"另存为新的\",\"options.menu.save.as.tooltip\":\"空控制面板无法保存。\",\"messages.dashboardSaveFailed\":\"无法保存控制面板，请重试。\",\"messages.dashboard.invalidDrills.title\":\"<b>某些互动已被删除</b>\",\"messages.dashboard.invalidDrills.body.modern._measure\":\"一个或多个控制面板/洞察/度量/属性已更改或删除，导致某些交互从以下构件中删除：<b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidDrills.body.modern._metric\":\"一个或多个控制面板/洞察/指标/属性已更改或删除，导致某些交互从以下构件中删除：<b>{listOfWidgetTitles}</b>\",\"messages.dashboard.invalidCustomUrlDrills.title\":\"<b>某些对 URL 交互的深入了解被禁用</b>\",\"messages.dashboard.invalidCustomUrlDrills.body.modern\":\"由于洞察属性更改，下列构件的某些对 URL 交互的深入了解被禁用：<b>{listOfWidgetTitles}</b>\",\"messages.dashboard.expandable.showMore\":\"显示更多\",\"messages.dashboard.expandable.showLess\":\"显示更少\",\"messages.drill.InteractionConfiguredSuccess\":\"交互已配置。\",\"messages.drill.InteractionUpdatedSuccess\":\"交互已更新。\",\"filterBar.showAll\":\"显示全部\",\"filterBar.showLess\":\"显示更少\",\"options.menu.export.PDF\":\"导出为 PDF\",\"options.menu.schedule.email\":\"安排电子邮件发送\",\"options.menu.delete\":\"删除\",\"dialogs.export.cells\":\"单元格\",\"dialogs.export.filters\":\"洞察上下文\",\"dialogs.export.includeFilters\":\"包含已应用的筛选器\",\"dialogs.export.headline\":\"导出为 XLSX\",\"dialogs.export.mergeHeaders\":\"保持属性单元格合并\",\"dialogs.export.submit\":\"出口\",\"dialogs.schedule.email.delete.success\":\"成功！您的计划的电子邮件已删除。\",\"dialogs.schedule.email.submit.success\":\"成功！您的控制面板已计划发送电子邮件。\",\"dialogs.schedule.email.submit.error\":\"计划控制面板失败，请稍后重试。\",\"dialogs.schedule.email.save.success\":\"成功！您的计划已保存。\",\"dialogs.schedule.email.save.error\":\"计划保存失败，请稍后重试。\",\"dialogs.save.as.new.title\":\"另存为新的控制面板\",\"dialogs.save.as.new.desc\":\"为新的控制面板指定新的描述性名称，以便以后方便查找。\",\"dialogs.save.as.new.default.title\":\"{title} 的副本\",\"dialogs.save.as.new.alertsAndEmailsMessage\":\"警报和电子邮件时间表将不会被复制\",\"dialogs.save.as.new.alertsMessage\":\"警报将不会被复制\",\"dialogs.save.as.new.emailsMessage\":\"电子邮件时间表将不会被复制\",\"cancelConfirmationDialog.headline\":\"放弃更改？\",\"cancelConfirmationDialog.message\":\"所有更改都将丢失\",\"cancelConfirmationDialog.submitButtonText\":\"放弃更改\",\"deleteDashboardDialog.headline\":\"删除控制面板？\",\"deleteDashboardDialog.submitButtonText\":\"删除\",\"deleteDashboardDialog.alertsAndEmailsMessage\":\"为此控制面板设置的所有警报和计划的电子邮件也将被删除。\",\"deleteDashboardDialog.alertsMessage\":\"为此控制面板设置的所有警报也将被删除。\",\"deleteDashboardDialog.emailsMessage\":\"为此控制面板设置的所有计划的电子邮件也将被删除。\",\"deleteDashboardDialog.drillMessage\":\"从其他控制面板到该控制面板的所有深入查看都将被删除。\",\"create.dashboard\":\"创建控制面板\",\"drill_modal_picker.drill-down\":\"深入查看\",\"drill_modal_picker.drill-into\":\"深入了解\",\"drill_modal_picker.more.details\":\"更多详情\",\"drillModal.backToTop\":\"返回顶部\",\"filters.allTime.previousPeriod\":\"前一时间段\",\"filters.allTime.lastYear\":\"前一年\",\"filters.minute.previousPeriod\":\"前一分钟\",\"filters.hour.previousPeriod\":\"前一小时\",\"filters.day.previousPeriod\":\"前 {n, plural, one {天} other {#天}}\",\"filters.week.previousPeriod\":\"前 {n, plural, one {周} other {#周}}\",\"filters.month.previousPeriod\":\"前 {n, plural, one {月} other {#月}}\",\"filters.quarter.previousPeriod\":\"前 {n, plural, one {季度} other {#季度}}\",\"filters.year.previousPeriod\":\"前 {n, plural, one {年} other {#年}}\",\"filters.alertMessage.relativePreset\":\"在 {calendarIcon} {range}\",\"filters.alertMessage.relativePreset.inPeriod\":\"在时间段 {calendarIcon} {range}\",\"filters.config.warning.multipleProjectConfigs\":\"此项目关联了多个项目日期筛选器配置，使用第一个。\",\"filters.config.warning.multipleWorkspacesConfigs\":\"工作区关联了多个工作区日期筛选器配置，使用第一个。\",\"filters.config.warning.selectedFilterNotValid\":\"默认筛选器选项无效，使用第一个可用选项。\",\"filters.config.warning.allOptionsHidden\":\"已忽略控制面板日期筛选器配置，因为它隐藏了所有筛选器选项。\",\"filters.config.warning.conflictingIdentifiers\":\"已忽略控制面板日期筛选器配置，因为它包含具有相同标识符的日期筛选器选项。\",\"filters.config.warning.notAvailable\":\"项目的日期筛选器配置未定义，或者您没有其访问权限。\",\"filters.config.warning.workspace.notAvailable\":\"工作区日期筛选器配置未定义，或者您没有其访问权限。\",\"kpi.noData\":\"当前筛选器设置无数据。请更改筛选器。\",\"kpiPop.change\":\"变化\",\"dialogs.schedule.email.filters\":\"控制面板包含将要保存在计划中的筛选器更改。\",\"dialogs.schedule.email.filters.not.saved\":\"保存在计划中的控制面板筛选器不会受到影响。\",\"dialogs.schedule.email.attachment.filter\":\"（使用当前设置的筛选器）\",\"dialogs.schedule.email.attachment.label\":\"附件：\",\"dialogs.schedule.email.attachments.label\":\"附件：\",\"dialogs.schedule.email.attachment.select\":\"选择附件\",\"dialogs.schedule.email.attachment.select.disabled.message\":\"此控制面板不包含任何洞察。\",\"dialogs.schedule.email.attachment.select.dashboard.header\":\"控制面板 (PDF)\",\"dialogs.schedule.email.attachment.select.widgets.header\":\"洞察 (CSV, XLSX)\",\"dialogs.schedule.email.headline\":\"安排电子邮件发送\",\"dialogs.schedule.email.heading\":\"计划导出\",\"dialogs.schedule.email.message.label\":\"消息：\",\"dialogs.schedule.email.unsubscribed.recipients\":\"{n, plural, one {1 收件人退订} other {# 收件人退订}} 此计划。\",\"dialogs.schedule.email.repeats.label\":\"重复：\",\"dialogs.schedule.email.repeats.execute.on.dayOfMonth\":\"在第 {date} 天\",\"dialogs.schedule.email.repeats.execute.on.dayOfWeek\":\"在 {week, select, 1 {第一个} 2 {第二个} 3 {第三个} 4 {第四个} other {最后一个}} {day}\",\"dialogs.schedule.email.repeats.every\":\"每\",\"dialogs.schedule.email.repeats.frequencies.day\":\"{n, plural, one {天} other {天}}\",\"dialogs.schedule.email.repeats.frequencies.month\":\"{n, plural, one {月} other {月}}\",\"dialogs.schedule.email.repeats.frequencies.week\":\"{n, plural, one {周} other {周}}\",\"dialogs.schedule.email.repeats.types.custom\":\"自定义\",\"dialogs.schedule.email.repeats.types.daily\":\"每日\",\"dialogs.schedule.email.repeats.types.monthly\":\"每月 {week, select, 1 {第一个} 2 {第二个} 3 {第三个} 4 {第四个} other {最后一个}} {day}\",\"dialogs.schedule.email.repeats.types.weekly\":\"每周 {day}\",\"dialogs.schedule.email.subject.label\":\"主题：\",\"dialogs.schedule.email.time.label\":\"第一次出现：\",\"dialogs.schedule.email.to.label\":\"收件人：\",\"dialogs.schedule.email.message.placeholder\":\"您好，\\n\\n 您的计划的电子邮件已准备就绪。您可以在附件中下载控制面板。\",\"dialogs.schedule.email.submit\":\"时间表\",\"dialogs.schedule.email.save\":\"保存\",\"dialogs.schedule.email.format.options\":\"格式选项\",\"dialogs.schedule.email.insight.format\":\"洞察格式：\",\"dialogs.schedule.email.attribute.merged\":\"保持属性单元格合并\",\"dialogs.schedule.email.show.filters\":\"显示应用了哪些筛选器\",\"dialogs.schedule.management.title\":\"已计划的导出\",\"dialogs.schedule.management.delete\":\"删除此计划。\",\"dialogs.schedule.management.delete.dialog\":\"删除计划？\",\"dialogs.schedule.management.delete.dialog.confirm\":\"<b>此计划</b>将被永久删除。\",\"dialogs.schedule.management.noSchedules\":\"此控制面板不包含任何计划的导出。{br}立即添加一个。\",\"dialogs.schedule.management.noSchedules.byUser\":\"您尚未计划任何导出。{br}立即添加一个。\",\"dialogs.schedule.management.addSchedule\":\"添加计划\",\"dialogs.schedule.management.recipients\":\"{n, plural, one {# 收件人} other {# 收件人}}\",\"dialogs.schedule.management.recipients.onlyYou\":\"只有您\",\"dialogs.schedule.management.attachments.dashboard\":\"控制面板\",\"dialogs.schedule.management.attachments.widgets\":\"{n, plural, one {# 洞察} other {# 洞察}}\",\"dialogs.schedule.management.attachments.mixed\":\"控制面板和{n, plural, one {# 洞察} other {# 洞察}}\",\"dialogs.schedule.management.load.error\":\"加载失败，请稍后重试。\",\"dialogs.schedule.management.delete.error\":\"计划删除失败，请稍后再试。\",\"dialogs.schedule.management.tab.all\":\"全部\",\"dialogs.schedule.management.tab.user\":\"由我创建\",\"options.menu.schedule.email.recipient.invalid\":\"此电子邮件地址无效。\",\"options.menu.schedule.email.recipient.warning.existed\":\"您已经添加了此收件人。\",\"options.menu.schedule.email.recipient.warning.belong.workspace\":\"此电子邮件地址不属于此工作区。收件人可能会收到敏感数据。\",\"options.menu.schedule.email.recipient.external.not.allowed\":\"此电子邮件地址不属于此工作区。只有此计划的作者才能添加此电子邮件地址。\",\"delete\":\"删除\",\"close\":\"关\",\"cancel\":\"取消\",\"gs.date.at\":\"在\",\"gs.date.today\":\"今天\",\"gs.date.tomorrow\":\"明天\",\"gs.date.yesterday\":\"昨天\",\"kpi.alertBox.title\":\"设置 KPI 更改警报\",\"kpi.alertBox.example\":\"例如\",\"kpi.alertBox.unverifiedEmail\":\"抱歉，您无法设置警报。请确保您的电子邮件地址已经过验证。如果还未解决问题，请让管理员更新您的权限。\",\"kpi.alertBox.disabledInReadOnly\":\"在只读模式下禁用警报\",\"kpi.error.view\":\"无法显示 KPI。请与您的管理员联系以修复 KPI 定义。\",\"kpiAlertDialog.delete\":\"删除\",\"kpiAlertDialog.deleting\":\"正在删除…\",\"kpiAlertDialog.emailMe\":\"给我发邮件\",\"kpiAlertDialog.emailMeWhen\":\"{emailMe}，当此 KPI 是\",\"kpiAlertDialog.emailInfo\":\"电子邮件将发送至 {userEmail}\",\"kpiAlertDialog.invalidNumber\":\"<strong>此号码无效。</strong>{br}请仔细检查并重试。\",\"kpiAlertDialog.filtersDiffer\":\"现在 KPI 的筛选方式与设置警报时的筛选方式不同。\",\"kpiAlertDialog.filtersApply\":\"将警报筛选器应用于控制面板\",\"kpiAlertDialog.savingFailed\":\"保存警报失败。请重试。\",\"kpiAlertDialog.deleteingFailed\":\"删除警报失败。请重试。\",\"kpiAlertDialog.brokenAlert\":\"损坏的警报\",\"kpiAlertDialog.brokenAlertAppeal\":\"要查看正确的 KPI 值，请更新此警报中的筛选器。您也可以删除此警报。\",\"kpiAlertDialog.brokenAlertDefaultDateLabel\":\"日期\",\"kpiAlertDialog.removedFilters\":\"从控制面板删除的筛选器\",\"kpiAlertDialog.ignoredFilters\":\"忽略此 KPI 的筛选器\",\"kpiAlertDialog.updateTitle\":\"更新\",\"kpiAlertDialog.updateBrokenTitle\":\"更新筛选器\",\"kpiAlertDialog.updatingTitle\":\"正在更新…\",\"kpiAlertDialog.updateBrokenFailed\":\"更新筛选器失败。请重试。\",\"kpiAlertDialog.setTitle\":\"设置警报\",\"kpiAlertDialog.settingTitle\":\"设置…\",\"kpiAlertDialog.threshold.above\":\"高于\",\"kpiAlertDialog.threshold.below\":\"低于\",\"kpiAlertDialog.withAttributeFilters\":\"{numFilters} 更多{numFilters, select, 1 {筛选器} other {筛选器}} 已应用\",\"messages.exportResultError\":\"数据导出失败，请稍后重试。\",\"messages.exportResultRestrictedError\":\"您不能导出此洞察，因为它包含限制数据。\",\"messages.exportResultStart\":\"正在导出\",\"messages.exportResultSuccess\":\"导出成功！\",\"messages.sharingChangedSuccess\":\"共享已更新。\",\"messages.sharingChangedError.general\":\"无法更新共享设置。请稍后再试。\",\"messages.sharingDialogError.general\":\"无法加载共享设置。请稍后再试。\",\"visualization.dataTooLarge.headline\":\"要显示的数据点太多\",\"visualization.dataTooLarge.text\":\"尝试将一个或多个筛选器应用于控制面板。\",\"visualization.execute_protected_report.headline\":\"您无权查看此报告\",\"visualization.execute_protected_report.text\":\"请联系您的管理员。\",\"visualization.alert_not_supported\":\"静态日期时间段不支持警报\",\"visualization.empty.headline\":\"对于您的筛选器选项，找不到数据\",\"visualization.error.headline\":\"抱歉，我们无法显示此洞察。\",\"visualization.error.text\":\"请联系您的管理员。\",\"options.button.bubble\":\"导出洞察数据\",\"options.menu.export.CSV\":\"CSV\",\"options.menu.export.XLSX\":\"XLSX\",\"options.menu.unsupported.error._measure\":\"目前无法导出此洞察。请使用其他筛选器，或使用其他度量或属性。\",\"options.menu.unsupported.error._metric\":\"此洞察暂时无法导出。请尝试应用不同的筛选器，或使用不同的指标或属性。\",\"options.menu.unsupported.loading\":\"目前无法导出此洞察。\",\"export.defaultTitle\":\"无标题洞察\",\"export_unsupported.disabled\":\"不支持导出\",\"widget.options.menu.exportToCSV\":\"导出至 CSV\",\"widget.options.menu.exportToXLSX\":\"导出为 XLSX\",\"widget.options.menu.scheduleExport\":\"计划导出\",\"share.button.text\":\"共享\",\"dashboard.error.empty.heading\":\"此控制面板为空\",\"dashboard.error.empty.text\":\"已删除所有洞察。\",\"dashboard.shareDialog.underLenientControl.label\":\"如果其他用户要深入了解此控制面板，他们可以访问此控制面板\",\"dashboard.shareDialog.lock.label\":\"只有管理员才可以编辑此控制面板\",\"header.lockStatus.tooltip\":\"<b>此控制面板已锁定。</b>只有管理员才可以编辑此控制面板。\",\"header.shareStatus.private.text\":\"私密\",\"header.shareStatus.private.strict.tooltip\":\"只有您可以查看和编辑此控制面板。\",\"header.shareStatus.private.not.strict.tooltip\":\"创建者可以编辑此控制面板。具有适当用户角色的其他用户可在深入查看此控制面板时对其进行编辑。\",\"dashboard.shareDialog.removeAccessGranteeTooltip\":\"删除对此控制面板的访问权限。\",\"dashboard.shareDialog.removeAccessCreatorTooltip\":\"创建此控制面板的用户。无法删除创建者。\",\"attributesDropdown.placeholder\":\"搜索属性…\",\"attributesDropdown.configuration\":\"配置\",\"attributesDropdown.itemsFiltered\":\"各项已筛选\",\"attributesDropdown.allItemsFiltered\":\"所有各项都被筛选掉\",\"attributesDropdown.itemsFiltered.tooltip\":\"各项已筛选： <strong>{filters}</strong>\",\"attributesDropdown.save\":\"保存\",\"attributesDropdown.filterBy\":\"筛选条件\",\"attributesDropdown.displayValuesAs\":\"将数值显示为\",\"attributesDropdown.title\":\"标题\",\"attributesDropdown.title.reset\":\"重启\",\"attributesDropdown.selectionMode\":\"选择\",\"attributesDropdown.selectionMode.multi\":\"多个值\",\"attributesDropdown.selectionMode.single\":\"单个值\",\"attributesDropdown.selectionMode.disabled.tooltip\":\"如果在筛选条件中选择了任何筛选器，则不允许选择单值。要使用单值选择，请在筛选条件中禁用所有筛选器。\",\"attributesDropdown.parentFilter.disabled.tooltip\":\"对于单值选择，禁用其他筛选器筛选。要设置筛选条件，请选择多值选择。\",\"attributesDropdown.noConnectionMessage\":\"<strong>{childTitle}</strong> 无法被 <strong>{parentTitle}</strong> 筛选。数据模型中的筛选器属性之间没有关联。\",\"attributesDropdown.details.dataset\":\"数据集\",\"attributesDropdown.details.values\":\"数值\",\"attributesDropdown.details.shortening_decoration\":\"…和另外 {count} 个\",\"attributesDropdown.removeTooltip\":\"从控制面板中移除\",\"layout.header.characters.left\":\"还剩 {currentCharactersCount} / {maximumCharactersCount} 个字符\",\"layout.header.add.title.placeholder\":\"在此处添加标题...\",\"layout.header.add.description.placeholder\":\"在此处添加说明...\",\"error\":\"错误\",\"controlButtons.edit.value\":\"编辑\",\"controlButtons.saveAndPublish.value\":\"保存并发布\",\"controlButtons.save.value\":\"保存\",\"controlButtons.saveAndPublish.title\":\"可访问此控制面板的每个人都能立即看到所有更改。\",\"controlButtons.saveAsPrivate.title\":\"所有更改都将被保存。\",\"controlButtons.saveAndPublish.disable.empty.title\":\"无法保存空的控制面板\",\"controlButtons.saveAndPublish.disable.noChanges.title\":\"没有要保存的更改\",\"controlButtons.saving.value\":\"正在保存…\",\"gs.visualizationsList.tabs.all\":\"全部\",\"gs.visualizationsList.tabs.my\":\"由我创建\",\"visualizationsList.noInsights\":\"该工作区不包含任何洞察。\",\"visualizationsList.create\":\"创建洞察\",\"visualizationsList.noUserInsights\":\"未创建任何洞察。\",\"visualizationsList.noVisualizationsFound\":\"未找到匹配的洞察。\",\"search_insights\":\"搜索所有洞察…\",\"save.as.new\":\"另存为新的\",\"addPanel.deleteItem\":\"放置以删除\",\"addPanel.newItem\":\"新条目\",\"addPanel.attributeFilter\":\"属性筛选器\",\"addPanel.attributeFilter.tooltip.no_attributes\":\"属性筛选器需要一个属性。\",\"addPanel.attributeFilter.tooltip.no_attributes.link\":\"了解更多\",\"addPanel.kpi\":\"关键绩效指标\",\"addPanel.kpi.tooltip.no_measures._measure\":\"关键绩效指标需要一个计算度量。\",\"addPanel.kpi.tooltip.no_measures._metric\":\"关键绩效指标需要一个指标。\",\"addPanel.kpi.tooltip.no_measures.link\":\"了解更多\",\"visualizationsList.dragToAdd\":\"拖动以添加\",\"visualizationsList.savedVisualizations\":\"已保存的见解\",\"configurationPanel.drillConfig.selectDashboard\":\"选择控制面板…\",\"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\":\"搜索所有控制面板…\",\"configurationPanel.drillConfig.forbiddenDashboard\":\"（未共享给您）\",\"configurationPanel.drillConfig.forbiddenDashboard.tooltip\":\"控制面板未共享给您，但其他用户可以访问此控制面板。\",\"configurationPanel.drillConfig.notSharedDashboard.tooltip\":\"控制面板未共享给您，但所有用户都可以访问它，如果想深入了解。\",\"configurationPanel.remove.form.dashboard\":\"从控制面板中移除\",\"filterBar.filter.drop\":\"放置即可添加\",\"filterBar.filter.addFilterPlaceholder\":\"拖动 {icon} 至此处\",\"filterBar.filter.dropzone.tooltip\":\"将属性筛选器拖至此处。\",\"configurationPanel.title\":\"配置\",\"configurationPanel.comparison\":\"比较\",\"configurationPanel.compareWith\":\"对比于\",\"configurationPanel.increasingNumberIs\":\"增加的数字是\",\"configurationPanel.comparisonTypeItems.previousPeriod\":\"上一时间段\",\"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\":\"上年同期\",\"configurationPanel.comparisonTypeItems.noComparison\":\"无比较\",\"configurationPanel.comparisonDirectionItems.green\":\"绿色\",\"configurationPanel.comparisonDirectionItems.red\":\"红色\",\"configurationPanel.unlistedMetric._measure\":\"未列出的度量\",\"configurationPanel.unlistedMetric._metric\":\"未列出的指标\",\"configurationPanel.unlistedMetricIconTitle._measure\":\"此度量是隐藏的。只有您能看到它。\",\"configurationPanel.unlistedMetricIconTitle._metric\":\"此指标是隐藏的。只有您能看到它。\",\"configurationPanel.selectMeasurePlaceholder._measure\":\"选择度量…\",\"configurationPanel.selectMeasurePlaceholder._metric\":\"选择指标…\",\"configurationPanel.selectComparisonPlaceholder\":\"选择比较…\",\"configurationPanel.selectComparisonDirectionPlaceholder\":\"选择正/负\",\"configurationPanel.measure._measure\":\"度量\",\"configurationPanel.measure._metric\":\"指标\",\"configurationPanel.filterBy\":\"筛选条件\",\"configurationPanel.date\":\"日期\",\"configurationPanel.dateAs\":\"作为\",\"configurationPanel.vizCantBeFilteredByAttribute\":\"此洞察无法按 {attributeName} 筛选。请取消选中该复选框。\",\"configurationPanel.kpiCantBeFilteredByAttribute\":\"KPI 无法按 {attributeName} 筛选。请取消选中该复选框。\",\"configurationPanel.vizCantBeFilteredByDate\":\"此洞察无法按日期筛选。请取消选中该复选框。\",\"configurationPanel.kpiCantBeFilteredByDate\":\"KPI 无法按日期筛选。请取消选中该复选框。\",\"configurationPanel.unrelatedVizDateInfo\":\"\\\"{dateDataSet}\\\"无法再应用于该洞察。请选择其他范围或编辑此洞察。\",\"configurationPanel.unrelatedKpiDateInfo\":\"\\\"{dateDataSet}\\\"无法再应用于该 KPI。请选择其他范围或编辑该 KPI。\",\"configurationPanel.breakAlertWarning\":\"\\n           用户为此 KPI 设置了 {numAlerts} {numAlerts, select, 1 {警报} other {警报}}\\n 。修该此 KPI 将影响 {numAlerts, select, 1 {此警报} other {这些警报}}。\\n\",\"configurationPanel.drillIntoDashboard\":\"深入控制面板\",\"configurationPanel.noLinkableDashboards\":\"没有控制面板链接至\",\"configurationPanel.selectDashboard\":\"选择控制面板\",\"configurationPanel.interactions\":\"交互\",\"configurationPanel.drillConfig.interactions\":\"深入查看交互\",\"configurationPanel.drillConfig.addInteraction\":\"添加交互\",\"configurationPanel.drillConfig.clickHint\":\"当我点击\",\"configurationPanel.drillConfig.measureValue._measure\":\"度量值\",\"configurationPanel.drillConfig.measureValue._metric\":\"指标值\",\"configurationPanel.drillConfig.attributeValue\":\"属性值\",\"configurationPanel.drillConfig.selectTarget\":\"我想要\",\"configurationPanel.drillConfig.clickHintItem\":\"当我点击<addon>（其数值）</addon>\",\"configurationPanel.drillConfig.drillIntoDashboard\":\"深入控制面板\",\"configurationPanel.drillConfig.drillIntoInsight\":\"深入了解\",\"configurationPanel.drillConfig.drillIntoUrl\":\"深入查看 URL\",\"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\":\"URL 参数无效\",\"configurationPanel.drillConfig.select\":\"选择操作…\",\"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\":\"筛选目标控制面板时，洞察中的日期属性值不会被传输。\",\"configurationPanel.unlistedDashboardTab\":\"未列出的控制面板\",\"configurationPanel.visualprops.sectionTitle\":\"标题\",\"configurationPanel.visualprops.hideTitle\":\"隐藏标题\",\"configurationPanel.visualprops.sectionDescription\":\"描述\",\"configurationPanel.visualprops.inheritDescription\":\"继承 \",\"configurationPanel.visualprops.inheritDescriptionHelp\":\"从洞察继承说明。\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._metric\":\"从指标继承说明。\",\"configurationPanel.visualprops.inheritKpiDescriptionHelp._measure\":\"从度量继承说明。\",\"configurationPanel.visualprops.customDescription\":\"自定义\",\"configurationPanel.visualprops.customDescriptionHelp\":\"为此洞察实例添加自定义说明。\",\"configurationPanel.visualprops.customKpiDescriptionHelp\":\"添加自定义说明。\",\"configurationPanel.visualprops.noneDescription\":\"无\",\"configurationPanel.visualprops.includeMetrics._measure\":\"包括度量说明\",\"configurationPanel.visualprops.includeMetrics._metric\":\"包括指标说明\",\"configurationPanel.visualprops.includeMetricsHelp._measure\":\"显示包含洞察度量列表及其说明的部分。\",\"configurationPanel.visualprops.includeMetricsHelp._metric\":\"显示包含洞察指标列表及其说明的部分。\",\"configurationPanel.visualprops.descriptionPlaceholder\":\"添加说明…\",\"configurationPanel.drillIntoUrl.defaultButtonValue\":\"选择 URL\",\"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\":\"属性标签中的超链接\",\"configurationPanel.drillIntoUrl.customUrlSectionTitle\":\"自定义 URL\",\"configurationPanel.drillIntoUrl.editor.addUrlTitle\":\"添加自定义 URL\",\"configurationPanel.drillIntoUrl.editor.editUrlTitle\":\"编辑自定义 URL\",\"configurationPanel.drillIntoUrl.editor.textAreaLabel\":\"URL\",\"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\":\"参数\",\"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\":\"参数是占位符，在深入了解过程中将被动态值替换。\",\"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\":\"添加\",\"configurationPanel.drillIntoUrl.editor.parameterDetailType\":\"类型\",\"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\":\"标签\",\"configurationPanel.drillIntoUrl.editor.parameterDetailValues\":\"{numberOfValues, plural, one {数值} other {数值}}\",\"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\":\"...以及再多 {count} 个\",\"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\":\"洞察 ID\",\"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\":\"客户 ID\",\"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\":\"数据产品 ID\",\"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\":\"项目 ID\",\"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\":\"工作区 ID\",\"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\":\"构件 ID\",\"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\":\"控制面板 ID\",\"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\":\"标识符\",\"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\":\"洞察\",\"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\":\"标识符\",\"configurationPanel.drillIntoUrl.editor.applyButtonLabel\":\"应用\",\"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\":\"取消\",\"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\":\"输入 URL 并从右侧面板添加参数。\",\"configurationPanel.drillIntoUrl.editor.helpButtonLabel\":\"如何创建自定义 URL？\",\"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\":\"无效参数：{invalidParameters} \",\"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\":\"添加自定义 URL\",\"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\":\"编辑自定义 URL\",\"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\":\"属性标签值\",\"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\":\"属性地理值\",\"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\":\"属性 URL 值\",\"configurationPanel.zoomInsight\":\"可缩放的洞察\",\"configurationPanel.zoomInsight.help\":\"启用以放大洞察以显示详细视图。按住 Shift 键可平移缩放区域。\",\"configurationPanel.zoomInsight.notice\":\"缩放不会应用于导出的控制面板\",\"configurationPanel.drillConfig.selectInsight\":\"选择洞察…\",\"gs.date.date-dataset.recommended\":\"已推荐\",\"gs.date.date-dataset.other\":\"其他\",\"gs.date.date-dataset.related\":\"相关\",\"gs.date.date-dataset.unrelated\":\"无关\",\"layout.widget.width.min\":\"构件处于最小宽度\",\"layout.widget.width.max\":\"构件处于最大宽度\",\"layout.widget.height.min\":\"构件处于最小高度\",\"layout.widget.height.max\":\"构件处于最大高度\",\"layout.widget.addedByPlugin\":\"由插件添加\",\"layout.widget.modifiedByPlugin\":\"由插件修改\",\"layout.widget.hideOverlay\":\"隐藏覆盖\",\"dropzone.new.row.desc\":\"拖放以创建{nbsp}<b>新部分</b>\",\"dropzone.widget.desc\":\"放至<b>此处</b>\",\"dropzone.widget.last.in.row.desc\":\"放至<b>现有区域</b>\",\"deleteKpiConfirmationDialog.headline\":\"删除 KPI\",\"deleteKpiConfirmationDialog.message\":\"为此 KPI 设置的所有警报也将被删除。\",\"deleteKpiConfirmationDialog.submitButtonText\":\"删除\",\"newDashboard.title\":\"将洞察拖至此处\",\"newDashboard.dropInsight\":\"放置洞察\",\"attributesDropdown.filterConfiguredMessage\":\"<strong>{parentTitle}</strong> 已被 <strong>{childTitle}</strong> 筛选器直接筛选或已通过其他筛选器筛选。\",\"attributesDropdown.attributeNameWithData\":\"带下列数据\"}","var map = {\n\t\"./de.js\": 210,\n\t\"./es.js\": 9014,\n\t\"./fr.js\": 49691,\n\t\"./ja.js\": 63929,\n\t\"./nl.js\": 84460,\n\t\"./pt-br.js\": 74371,\n\t\"./pt.js\": 81256,\n\t\"./ru.js\": 58144,\n\t\"./zh-cn.js\": 44956\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4792;","// (C) 2019-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nclass BackendWithDecoratedServices {\n    constructor(backend, factories = {}) {\n        this.decorated = backend;\n        this.factories = factories;\n        this.capabilities = backend.capabilities;\n        this.config = backend.config;\n    }\n    authenticate(force) {\n        return this.decorated.authenticate(force);\n    }\n    deauthenticate() {\n        return this.decorated.deauthenticate();\n    }\n    isAuthenticated() {\n        return this.decorated.isAuthenticated();\n    }\n    onHostname(hostname) {\n        return new BackendWithDecoratedServices(this.decorated.onHostname(hostname), this.factories);\n    }\n    withAuthentication(provider) {\n        return new BackendWithDecoratedServices(this.decorated.withAuthentication(provider), this.factories);\n    }\n    withTelemetry(componentName, props) {\n        return new BackendWithDecoratedServices(this.decorated.withTelemetry(componentName, props), this.factories);\n    }\n    organization(organizationId) {\n        return new OrganizationDecorator(this.decorated.organization(organizationId), this.factories);\n    }\n    organizations() {\n        return new OrganizationsDecorator(this.decorated.organizations(), this.factories);\n    }\n    currentUser() {\n        return this.decorated.currentUser();\n    }\n    workspace(id) {\n        return new AnalyticalWorkspaceDecorator(this.decorated.workspace(id), this.factories);\n    }\n    entitlements() {\n        return this.decorated.entitlements();\n    }\n    workspaces() {\n        return this.decorated.workspaces();\n    }\n}\nclass AnalyticalWorkspaceDecorator {\n    constructor(decorated, factories) {\n        this.decorated = decorated;\n        this.factories = factories;\n        this.workspace = decorated.workspace;\n    }\n    getDescriptor() {\n        return this.decorated.getDescriptor();\n    }\n    getParentWorkspace() {\n        return this.decorated.getParentWorkspace();\n    }\n    attributes() {\n        const { attributes } = this.factories;\n        if (attributes) {\n            return attributes(this.decorated.attributes(), this.workspace);\n        }\n        return this.decorated.attributes();\n    }\n    execution() {\n        const { execution } = this.factories;\n        if (execution) {\n            return execution(this.decorated.execution());\n        }\n        return this.decorated.execution();\n    }\n    catalog() {\n        const { catalog } = this.factories;\n        if (catalog) {\n            return catalog(this.decorated.catalog());\n        }\n        return this.decorated.catalog();\n    }\n    measures() {\n        return this.decorated.measures();\n    }\n    facts() {\n        return this.decorated.facts();\n    }\n    insights() {\n        return this.decorated.insights();\n    }\n    dashboards() {\n        const { dashboards } = this.factories;\n        if (dashboards) {\n            return dashboards(this.decorated.dashboards(), this.workspace);\n        }\n        return this.decorated.dashboards();\n    }\n    settings() {\n        const { workspaceSettings } = this.factories;\n        if (workspaceSettings) {\n            return workspaceSettings(this.decorated.settings(), this.workspace);\n        }\n        return this.decorated.settings();\n    }\n    styling() {\n        return this.decorated.styling();\n    }\n    datasets() {\n        return this.decorated.datasets();\n    }\n    permissions() {\n        return this.decorated.permissions();\n    }\n    users() {\n        return this.decorated.users();\n    }\n    dateFilterConfigs() {\n        return this.decorated.dateFilterConfigs();\n    }\n    userGroups() {\n        return this.decorated.userGroups();\n    }\n    accessControl() {\n        return this.decorated.accessControl();\n    }\n}\nclass OrganizationDecorator {\n    constructor(decorated, factories) {\n        this.decorated = decorated;\n        this.factories = factories;\n        this.organizationId = decorated.organizationId;\n    }\n    getDescriptor() {\n        return this.decorated.getDescriptor();\n    }\n    securitySettings() {\n        const { securitySettings } = this.factories;\n        if (securitySettings) {\n            return securitySettings(this.decorated.securitySettings());\n        }\n        return this.decorated.securitySettings();\n    }\n    styling() {\n        return this.decorated.styling();\n    }\n    settings() {\n        return this.decorated.settings();\n    }\n}\nclass OrganizationsDecorator {\n    constructor(decorated, factories) {\n        this.decorated = decorated;\n        this.factories = factories;\n    }\n    async getCurrentOrganization() {\n        const fromDecorated = await this.decorated.getCurrentOrganization();\n        return new OrganizationDecorator(fromDecorated, this.factories);\n    }\n}\n/**\n * Decorated backend is a wrapper of any other backend implementations that can be used to enrich\n * functionality of the services that the wrapped backend normally provides.\n *\n * It can be for instance used to decorate execution factories and in conjunction with {@link DecoratedPreparedExecution}\n * also create decorated prepared executions.\n *\n * @param backend - instance of backend to decorate\n * @param decorators - configuration for the decorations\n * @returns new decorated backend\n * @alpha\n */\nexport function decoratedBackend(backend, decorators) {\n    if (isEmpty(decorators)) {\n        return backend;\n    }\n    return new BackendWithDecoratedServices(backend, decorators);\n}\n//# sourceMappingURL=index.js.map","// (C) 2022 GoodData Corporation\nimport isString from \"lodash/isString.js\";\nimport { isIdentifierRef } from \"../objRef/index.js\";\nimport { idRef } from \"../objRef/factory.js\";\nfunction matchAll(regex, text) {\n    const matches = [];\n    let match = null;\n    while ((match = regex.exec(text)) !== null) {\n        matches.push(match);\n    }\n    return matches;\n}\nconst identifierSplitRegexp = /(\\{attribute_title\\(.*?\\)\\})/g;\nconst identifierMatchRegexp = /\\{attribute_title\\((.*?)\\)\\}/g;\nconst identifierToPlaceholder = (ref) => `{attribute_title(${ref.identifier})}`;\nconst matchToUrlPlaceholder = (match) => ({\n    placeholder: match[0],\n    identifier: match[1],\n    ref: idRef(match[1], \"displayForm\"),\n    toBeEncoded: match.index !== 0,\n});\nconst splitUrl = (url) => url.split(identifierSplitRegexp);\n/**\n * @internal\n */\nexport const splitDrillUrlParts = (url) => {\n    return splitUrl(url).map((urlPart) => {\n        const match = identifierMatchRegexp.exec(urlPart);\n        if (match !== null) {\n            return matchToUrlPlaceholder(match).ref;\n        }\n        return urlPart;\n    });\n};\n/**\n * @internal\n */\nexport const joinDrillUrlParts = (parts) => {\n    // Back compatibility\n    if (isString(parts)) {\n        return parts;\n    }\n    return parts\n        .map((urlPart) => {\n        if (isIdentifierRef(urlPart)) {\n            return identifierToPlaceholder(urlPart);\n        }\n        return urlPart;\n    })\n        .join(\"\");\n};\n/**\n * @internal\n */\nexport const getAttributeIdentifiersPlaceholdersFromUrl = (url) => matchAll(identifierMatchRegexp, url).map(matchToUrlPlaceholder);\n//# sourceMappingURL=drillUrl.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpi}.\n * @alpha\n */\nexport function isKpi(obj) {\n    return isKpiWithComparison(obj) || isKpiWithoutComparison(obj);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpiWithComparison}.\n * @alpha\n */\nexport function isKpiWithComparison(obj) {\n    return (!isEmpty(obj) &&\n        (obj.comparisonType === \"previousPeriod\" ||\n            obj.comparisonType === \"lastYear\"));\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IKpiWithoutComparison}.\n * @alpha\n */\nexport function isKpiWithoutComparison(obj) {\n    return !isEmpty(obj) && obj.comparisonType === \"none\";\n}\n//# sourceMappingURL=kpi.js.map","// (C) 2020-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardAttachment}.\n *\n * @alpha\n */\nexport function isDashboardAttachment(obj) {\n    return !isEmpty(obj) && obj.dashboard !== undefined;\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IWidgetAttachment}.\n *\n * @alpha\n */\nexport function isWidgetAttachment(obj) {\n    return !isEmpty(obj) && obj.widget !== undefined;\n}\n//# sourceMappingURL=scheduledMail.js.map","var _a;\n// (C) 2021-2022 GoodData Corporation\nimport { insightId, insightRef, insightUri, isIdentifierRef, } from \"@gooddata/sdk-model\";\nimport values from \"lodash/values.js\";\n/**\n * Utility class that assists with type-agnostic mapping of metadata objects by ObjRef.\n *\n * Problem\n * =======\n *\n * The challenges with ObjRef's start in context of backend that supports both uri and id ref (e.g. bear) and the client.\n *\n * Backend according to contract creates one type of ref - uri ref - so that is fine. However when instances of `ref` are created\n * by the client code and are passed in through the public API (as is the case with the dashboard component) - problems start.\n *\n * For clients it is often more convenient to use ID refs.. because they are transferable across workspaces and because\n * they appear in the catalog export.\n *\n * Doing strict ref-to-ref matching between user input and the data stored in state will result in no matches because\n * the types of ref's do not match.\n *\n * ---\n *\n * This class addresses the problem by having the `get` method check the type of ObjRef first and then perform\n * lookups into either id to item or uri to item mapping.\n *\n * @alpha\n */\nexport class ObjRefMap {\n    constructor(config) {\n        this.config = config;\n        this[_a] = \"ObjRefMap\";\n        this.size = 0;\n        this.items = [];\n        this.itemsByIdentifier = {};\n        this.itemsByUri = {};\n        this.idRefToKey = (identifier, type) => {\n            return !this.config.strictTypeCheck || !type ? identifier : `${identifier}#${type}`;\n        };\n        this.addItem = (item) => {\n            const { refExtract, uriExtract, idExtract } = this.config;\n            const uri = uriExtract(item);\n            const identifier = idExtract(item);\n            this.itemsByUri[uri] = item;\n            this.itemsByIdentifier[this.idRefToKey(identifier, this.config.type)] = item;\n            this.items.push([refExtract(item), item]);\n            this.size++;\n        };\n        this.cleanupUnmappedItems = () => {\n            const allItems = values(this.itemsByUri).concat(values(this.itemsByIdentifier));\n            this.items = this.items.filter(([_, item]) => {\n                return allItems.find((mappedItem) => mappedItem === item);\n            });\n        };\n        this.fromItems = (items) => {\n            items.forEach(this.addItem);\n            this.cleanupUnmappedItems();\n            return this;\n        };\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.items[Symbol.iterator]();\n    }\n    entries() {\n        return this.items[Symbol.iterator]();\n    }\n    get(key) {\n        if (isIdentifierRef(key)) {\n            const strictMatch = this.itemsByIdentifier[this.idRefToKey(key.identifier, key.type)];\n            if (!strictMatch && !key.type && this.config.strictTypeCheck) {\n                console.warn(\"You are working with an analytical backend which can only match entities by idRefs that contain both identifier and type. However, while trying to find match an object by ref your code supplied just the identifier without type.\");\n            }\n            return strictMatch;\n        }\n        return this.itemsByUri[key.uri];\n    }\n    has(key) {\n        return this.get(key) !== undefined;\n    }\n    keys() {\n        return this.items.map((i) => i[0])[Symbol.iterator]();\n    }\n    values() {\n        return this.items.map((i) => i[1])[Symbol.iterator]();\n    }\n}\nconst metadataObjectExtractors = {\n    idExtract: (i) => i.id,\n    uriExtract: (i) => i.uri,\n    refExtract: (i) => i.ref,\n};\n/**\n * Creates {@link ObjRefMap} for catalog date datasets. Either normal attributes or catalog date attributes.\n *\n * @param items - items to add into mapping\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newCatalogDateDatasetMap(items, strictTypeCheck = false) {\n    const map = new ObjRefMap({\n        type: \"dataSet\",\n        strictTypeCheck,\n        idExtract: (i) => i.dataSet.id,\n        uriExtract: (i) => i.dataSet.uri,\n        refExtract: (i) => i.dataSet.ref,\n    });\n    return map.fromItems(items);\n}\n/**\n * Creates {@link ObjRefMap} for catalog attribute items. Either normal attributes or catalog date attributes.\n *\n * @param items - items to add into mapping\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newCatalogAttributeMap(items, strictTypeCheck = false) {\n    const map = new ObjRefMap({\n        type: \"attribute\",\n        strictTypeCheck,\n        idExtract: (i) => i.attribute.id,\n        uriExtract: (i) => i.attribute.uri,\n        refExtract: (i) => i.attribute.ref,\n    });\n    return map.fromItems(items);\n}\n/**\n * Creates {@link ObjRefMap} for catalog measure items.\n *\n * @param items - items to add into mapping\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newCatalogMeasureMap(items, strictTypeCheck = false) {\n    const map = new ObjRefMap({\n        type: \"measure\",\n        strictTypeCheck,\n        idExtract: (i) => i.measure.id,\n        uriExtract: (i) => i.measure.uri,\n        refExtract: (i) => i.measure.ref,\n    });\n    return map.fromItems(items);\n}\n/**\n * Creates {@link ObjRefMap} for attribute display form metadata objects.\n *\n * @param items - items to add into map\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newDisplayFormMap(items, strictTypeCheck = false) {\n    const map = new ObjRefMap(Object.assign({ type: \"displayForm\", strictTypeCheck }, metadataObjectExtractors));\n    return map.fromItems(items);\n}\n/**\n * Creates {@link ObjRefMap} for attribute metadata objects.\n *\n * @param items - items to add into map\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newAttributeMap(items, strictTypeCheck = false) {\n    const map = new ObjRefMap(Object.assign({ type: \"attribute\", strictTypeCheck }, metadataObjectExtractors));\n    return map.fromItems(items);\n}\n/**\n * Creates {@link ObjRefMap} for any object of any type granted that it contains `ref` property with ObjRef.\n *\n * The map will be setup so that it extracts id and uri from the `ref` - thus ensuring that objects that are\n * both uri and identifier refs are indexed properly.\n *\n * Storing objects whose `ref` is of both types then allows lookup of those objects externally using either id\n * or uri.\n *\n * @param items - items to insert\n * @param type - type of objects, may be undefined\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newMapForObjectWithIdentity(items, type, strictTypeCheck = false) {\n    const map = new ObjRefMap({\n        type,\n        strictTypeCheck,\n        idExtract: (i) => i.identifier,\n        uriExtract: (i) => i.uri,\n        refExtract: (i) => i.ref,\n    });\n    return map.fromItems(items);\n}\n/**\n * Creates {@link ObjRefMap} for insights.\n *\n * @param items - items to add into mapping\n * @param strictTypeCheck - whether to do strict type checking when getting by identifierRef\n * @alpha\n */\nexport function newInsightMap(items, strictTypeCheck = false) {\n    const map = new ObjRefMap({\n        type: \"insight\",\n        strictTypeCheck,\n        idExtract: insightId,\n        uriExtract: insightUri,\n        refExtract: insightRef,\n    });\n    return map.fromItems(items);\n}\n//# sourceMappingURL=objRefMap.js.map","// (C) 2021-2023 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { attributeElementsCount, filterAttributeElements, filterObjRef, isAbsoluteDateFilter, isDateFilter, objRefToString, isAttributeFilter, isObjRef, } from \"@gooddata/sdk-model\";\nconst MAX_ELEMENTS_COUNT_PER_REQUEST = 500; // should cover all attribute filters created by UI where we have 500 elements limit\n/**\n * Resolves filter values\n *\n * @param filters - Filters with resolvable values\n *  = all selected elements of attribute filter\n *  + from/to limits of relative date filter\n *  + from/to limits of absolute date filter\n *  @param backend - Analytical backend instance\n *  @param workspace - Workspace id\n * @returns Map of resolved filter values per filter's identifier (date dimension ref or attribute DF ref)\n * @alpha\n */\nexport async function resolveFilterValues(filters, backend, workspace) {\n    const promises = filters.map((filter) => {\n        if (isAbsoluteDateFilter(filter)) {\n            const resolved = {\n                from: filter.absoluteDateFilter.from,\n                to: filter.absoluteDateFilter.to,\n            };\n            return Promise.resolve(resolved);\n        }\n        invariant(backend, `backend needs to be provided for this type of filter: ${filter}`);\n        invariant(workspace, `workspace needs to be provided for this type of filter: ${filter}`);\n        if (isAttributeFilter(filter)) {\n            return resolveAttributeFilterValues(filter, backend, workspace);\n        }\n        else {\n            return resolveRelativeDateFilterValues(filter, backend, workspace);\n        }\n    });\n    return Promise.all(promises).then((resolvedValues) => {\n        const resolvedValuesMap = {\n            dateFilters: [],\n            attributeFilters: {},\n        };\n        return resolvedValues.reduce((result, _resolvedValue, index) => {\n            const filter = filters[index];\n            const ref = filterObjRef(filter);\n            invariant(ref, `filter without reference not supported: ${filter}`);\n            if (isDateFilter(filter)) {\n                const value = getResolvedFilterValues(resolvedValues, filter, index);\n                value && result.dateFilters.push(value);\n            }\n            if (isAttributeFilter(filter)) {\n                const refString = objRefToString(ref);\n                const value = getResolvedFilterValues(resolvedValues, filter, index);\n                if (value) {\n                    result.attributeFilters[refString] = value;\n                }\n            }\n            return result;\n        }, resolvedValuesMap);\n    });\n}\nasync function resolveRelativeDateFilterValues(filter, backend, workspace) {\n    let foundDayDisplayForm;\n    if (isObjRef(filter.relativeDateFilter.dataSet)) {\n        const dataSet = await backend\n            .workspace(workspace)\n            .catalog()\n            .forDataset(filter.relativeDateFilter.dataSet)\n            .withGroups(false)\n            .load();\n        if (dataSet.dateDatasets()[0]) {\n            const dateDataSetAttributes = dataSet.dateDatasets()[0].dateAttributes;\n            const foundDayAttribute = dateDataSetAttributes.find((dateDataSetAttr) => dateDataSetAttr.granularity === \"GDC.time.date\");\n            foundDayDisplayForm = foundDayAttribute === null || foundDayAttribute === void 0 ? void 0 : foundDayAttribute.defaultDisplayForm;\n        }\n    }\n    const attributesService = backend.workspace(workspace).attributes();\n    const elementsQuery = attributesService.elements().forFilter(filter, foundDayDisplayForm === null || foundDayDisplayForm === void 0 ? void 0 : foundDayDisplayForm.ref);\n    const elements = await elementsQuery.query();\n    // check for next page to see if we need to use skipped response\n    const hasNextPage = elements.limit + elements.offset < elements.totalCount;\n    // last page of the response to get last element\n    const result = hasNextPage\n        ? await elements.goTo(Math.ceil(elements.totalCount / elements.limit) - 1)\n        : elements;\n    return {\n        from: elements.items[0].title,\n        to: getLastTitle(result.items),\n    };\n}\nasync function resolveAttributeFilterValues(filter, backend, workspace) {\n    const result = {};\n    const attributesService = backend.workspace(workspace).attributes();\n    const elementsQuery = attributesService.elements().forFilter(filter);\n    const selectedElements = filterAttributeElements(filter);\n    const selectedElementsCount = attributeElementsCount(selectedElements);\n    // nothing to resolve at all (eg. ALL filter)\n    if (selectedElementsCount === 0) {\n        return result;\n    }\n    const requestLimit = Math.min(selectedElementsCount, MAX_ELEMENTS_COUNT_PER_REQUEST);\n    let elementsPage = await elementsQuery.withLimit(requestLimit).query();\n    const elements = [];\n    while (!isEmpty(elementsPage.items)) {\n        elements.push(...elementsPage.items);\n        elementsPage = await elementsPage.next();\n    }\n    return elements.reduce((map, element) => {\n        //Object keys in JavaScript are, always strings\n        //console.log(map[\"null\"]===map[null]); // true\n        const key = element.uri === null ? \"null\" : element.uri;\n        map[key] = element.title;\n        return map;\n    }, result);\n}\nfunction getResolvedFilterValues(array, filter, index) {\n    if (isDateFilter(filter)) {\n        return array[index];\n    }\n    return array[index];\n}\nfunction getLastTitle(items) {\n    return items[items.length - 1].title;\n}\n//# sourceMappingURL=filterValuesResolver.js.map","// (C) 2021-2023 GoodData Corporation\nimport { idRef, isWidget, } from \"@gooddata/sdk-model\";\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Creates a new custom widget.\n *\n * @param identifier - identifier for custom widget; once added onto a dashboard, widget will be referencable using this identifier\n * @param customType - custom widget type\n * @param extras - provide extra data to include on the custom widget; the content of this argument can be an\n *  arbitrary plain object. note: the factory will make a copy of all the extra data. at this moment it is not possible\n *  to modify the data once the widget is added onto a dashboard.\n * @public\n */\nexport function newCustomWidget(identifier, customType, extras) {\n    const extrasCopy = extras ? cloneDeep(extras) : {};\n    return Object.assign({ type: \"customWidget\", customType,\n        identifier, uri: `_custom_widget_uri/${identifier}`, ref: idRef(identifier) }, extrasCopy);\n}\n/**\n * Type-guard that tests whether an object is an instance of {@link ICustomWidget}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isCustomWidget(obj) {\n    const w = obj;\n    return !isEmpty(w) && w.type === \"customWidget\" && w.customType !== undefined && w.ref !== undefined;\n}\n/**\n * Type-guard that tests whether an object is an instance of {@link ICustomWidgetDefinition}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isCustomWidgetDefinition(obj) {\n    const w = obj;\n    return !isEmpty(w) && w.type === \"customWidget\" && w.customType !== undefined && w.ref === undefined;\n}\n/**\n * Type-guard that tests whether an object is an instance of {@link ICustomWidgetBase}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isCustomWidgetBase(obj) {\n    const w = obj;\n    return !isEmpty(w) && w.type === \"customWidget\" && w.customType !== undefined;\n}\n/**\n * Dumps debug information about a widget into a string.\n *\n * @param widget - widget to dump info from\n * @internal\n */\nexport function extendedWidgetDebugStr(widget) {\n    const widgetId = `${widget.identifier}`;\n    let widgetType = \"unknown widget type\";\n    if (isWidget(widget)) {\n        widgetType = widget.type;\n    }\n    else if (isCustomWidget(widget)) {\n        widgetType = `${widget.type}/${widget.customType}`;\n    }\n    return `${widgetId}(${widgetType})`;\n}\n/**\n * Creates a new dashboard item containing the provided custom widget.\n *\n * @param widget - custom widget to include\n * @param sizeOrColSize - item size specification; for convenience you can specify the size as number which will be\n *  interpreted as number of columns in a 12-col grid that the item should use when rendered on an XL screen.\n * @public\n */\nexport function newDashboardItem(widget, sizeOrColSize) {\n    const size = typeof sizeOrColSize === \"number\" ? { xl: { gridWidth: sizeOrColSize } } : sizeOrColSize;\n    return {\n        type: \"IDashboardLayoutItem\",\n        size,\n        widget: cloneDeep(widget),\n    };\n}\nfunction getOrCreateSectionHeader(titleOrHeader) {\n    if (!titleOrHeader) {\n        return undefined;\n    }\n    if (typeof titleOrHeader === \"string\") {\n        if (isEmpty(titleOrHeader)) {\n            return undefined;\n        }\n        return {\n            title: titleOrHeader,\n        };\n    }\n    return titleOrHeader;\n}\n/**\n * Creates a new dashboard section.\n *\n * @param titleOrHeader - header to use for this section (if any); for convenience, you may provide just string containing the title instead\n * of specifying full header. if you specify empty string for title, then there will be no header.\n * @param items - dashboard items to include in the section; note: a deep copy of each item will be used on the new section\n *\n * @public\n */\nexport function newDashboardSection(titleOrHeader, ...items) {\n    const header = getOrCreateSectionHeader(titleOrHeader);\n    const itemsClone = cloneDeep(items);\n    return {\n        type: \"IDashboardLayoutSection\",\n        items: itemsClone,\n        header,\n    };\n}\n/**\n * Tests whether object is an instance of {@link StashedDashboardItemsId};\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isStashedDashboardItemsId(obj) {\n    return typeof obj === \"string\";\n}\n//# sourceMappingURL=layoutTypes.js.map","// (C) 2022 GoodData Corporation\n/**\n * @internal\n */\nexport var DRILL_TO_URL_PLACEHOLDER;\n(function (DRILL_TO_URL_PLACEHOLDER) {\n    DRILL_TO_URL_PLACEHOLDER[\"PROJECT_ID\"] = \"{project_id}\";\n    DRILL_TO_URL_PLACEHOLDER[\"WORKSPACE_ID\"] = \"{workspace_id}\";\n    DRILL_TO_URL_PLACEHOLDER[\"INSIGHT_ID\"] = \"{insight_id}\";\n    DRILL_TO_URL_PLACEHOLDER[\"WIDGET_ID\"] = \"{widget_id}\";\n    DRILL_TO_URL_PLACEHOLDER[\"DASHBOARD_ID\"] = \"{dashboard_id}\";\n    DRILL_TO_URL_PLACEHOLDER[\"CLIENT_ID\"] = \"{client_id}\";\n    DRILL_TO_URL_PLACEHOLDER[\"DATA_PRODUCT_ID\"] = \"{data_product_id}\";\n})(DRILL_TO_URL_PLACEHOLDER = DRILL_TO_URL_PLACEHOLDER || (DRILL_TO_URL_PLACEHOLDER = {}));\n//# sourceMappingURL=drillTypes.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isDashboardAttributeFilter, isDashboardDateFilter, } from \"@gooddata/sdk-model\";\n/**\n * Tests whether the provided object is an instance of {@link BrokenAlertDateFilterInfo}\n *\n * @param item - object to test\n *\n * @alpha\n */\nexport function isBrokenAlertDateFilterInfo(item) {\n    return isDashboardDateFilter(item.alertFilter);\n}\n/**\n * Tests whether the provided object is an instance of {@link BrokenAlertAttributeFilterInfo}\n *\n * @param item - object to test\n *\n * @alpha\n */\nexport function isBrokenAlertAttributeFilterInfo(item) {\n    return isDashboardAttributeFilter(item.alertFilter);\n}\n//# sourceMappingURL=alertTypes.js.map","// (C) 2019 GoodData Corporation\nimport React, { createContext, useContext, useMemo } from \"react\";\nimport noop from \"lodash/noop.js\";\n/**\n * @alpha\n */\nconst DashboardEventsContext = createContext({\n    registerHandler: noop,\n    unregisterHandler: noop,\n});\nDashboardEventsContext.displayName = \"DashboardEventsContext\";\n/**\n * @alpha\n */\nexport const useDashboardEventsContext = () => useContext(DashboardEventsContext);\n/**\n * @internal\n */\nexport function DashboardEventsProvider(props) {\n    const { children, registerHandler, unregisterHandler } = props;\n    const value = useMemo(() => {\n        return {\n            registerHandler,\n            unregisterHandler,\n        };\n    }, [registerHandler, unregisterHandler]);\n    return React.createElement(DashboardEventsContext.Provider, { value: value }, children);\n}\n//# sourceMappingURL=DashboardEventsContext.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { useBackendStrict } from \"../BackendContext.js\";\nimport { useCancelablePromise, } from \"../useCancelablePromise.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { resolveLCMWorkspaceIdentifiers } from \"./resolveLCMWorkspaceIdentifiers.js\";\nimport { useWorkspace, WorkspaceProvider } from \"../WorkspaceContext.js\";\nimport { invariant } from \"ts-invariant\";\nconst ClientWorkspaceContext = React.createContext({\n    status: \"pending\",\n    error: undefined,\n    result: undefined,\n    isInitialized: false,\n});\nClientWorkspaceContext.displayName = \"ClientWorkspace\";\n/**\n * ClientWorkspaceProvider can be used as a replacement of the {@link WorkspaceProvider},\n * if you want to work with the workspace in LCM context.\n *\n * It allows you to:\n * - Use dataProduct and client identifier as a replacement of the workspace identifier.\n *   Workspace identifier is resolved and provided to the {@link WorkspaceProvider} automatically.\n *\n * - Use workspace identifier to obtain dataProduct, client and segment identifiers by the {@link useClientWorkspaceIdentifiers} hooks.\n *\n * If the backend does not support clientId / dataProduct LCM provisioning,\n * or the workspace is not provisioned via LCM, segment / client / dataProduct values will be undefined.\n *\n * To read more details about LCM, see: {@link https://help.gooddata.com/pages/viewpage.action?pageId=86796865}\n *\n * @alpha\n */\nexport const ClientWorkspaceProvider = (props) => {\n    var _a;\n    const { children, backend: customBackend } = props;\n    const { client, dataProduct, workspace: customWorkspace } = getInputLCMIdentifiersFromProps(props);\n    const backend = useBackendStrict(customBackend, \"ClientWorkspaceProvider\");\n    const workspace = useWorkspace(customWorkspace);\n    const lcmIdentifiers = useCancelablePromise({\n        promise: () => resolveLCMWorkspaceIdentifiers(backend, { client, dataProduct, workspace }),\n    }, [client, dataProduct, workspace, backend]);\n    const ws = (_a = lcmIdentifiers.result) === null || _a === void 0 ? void 0 : _a.workspace;\n    return (React.createElement(ClientWorkspaceContext.Provider, { value: Object.assign(Object.assign({}, lcmIdentifiers), { isInitialized: true }) },\n        React.createElement(WorkspaceProvider, { workspace: ws }, children)));\n};\n/**\n * ResolvedClientWorkspaceProvider can be used as a replacement of the {@link WorkspaceProvider}, if you are accessing\n * workspace in LCM context.\n *\n * This provider expects that the client workspace is already resolved on input to the provider. The provider\n * will then establish a client workspace and workspace contexts so that the resolved information can\n * be accessed by the children.\n *\n * Note: check out the {@link ClientWorkspaceProvider} for version of provider that performs the resolution of\n * client workspace identifiers to workspace.\n *\n * @alpha\n */\nexport const ResolvedClientWorkspaceProvider = (props) => {\n    invariant(props.dataProduct);\n    invariant(props.client);\n    invariant(props.workspace);\n    const context = {\n        status: \"success\",\n        result: props,\n        error: undefined,\n        isInitialized: true,\n    };\n    return (React.createElement(ClientWorkspaceContext.Provider, { value: context },\n        React.createElement(WorkspaceProvider, { workspace: props.workspace }, props.children)));\n};\n/**\n * Hook to obtain loading status of the {@link ClientWorkspaceProvider} - \"success\", \"error\", \"loading\" or \"pending\".\n * @alpha\n */\nexport const useClientWorkspaceStatus = () => {\n    const context = React.useContext(ClientWorkspaceContext);\n    return context.status;\n};\n/**\n * Hook to obtain loading error of the {@link ClientWorkspaceProvider}.\n * @alpha\n */\nexport const useClientWorkspaceError = () => {\n    const context = React.useContext(ClientWorkspaceContext);\n    return context.error;\n};\n/**\n * Hook to obtain all resolved identifiers from the {@link ClientWorkspaceProvider} - workspace, segment, dataProduct and client.\n * @alpha\n */\nexport const useClientWorkspaceIdentifiers = () => {\n    var _a;\n    const context = React.useContext(ClientWorkspaceContext);\n    return (_a = context.result) !== null && _a !== void 0 ? _a : {};\n};\n/**\n * Hook to check if client workspace is initialized.\n *\n * @alpha\n */\nexport const useClientWorkspaceInitialized = () => {\n    const context = React.useContext(ClientWorkspaceContext);\n    return context.isInitialized;\n};\n//\n//\n//\nfunction hasWorkspaceProp(obj) {\n    return !isEmpty(obj) && !!obj.workspace;\n}\nfunction getInputLCMIdentifiersFromProps(props) {\n    if (hasWorkspaceProp(props)) {\n        return {\n            workspace: props.workspace,\n        };\n    }\n    invariant(props.client && props.dataProduct, \"ClientWorkspaceProvider: You must specify either - the workspace identifier, or the client and dataProduct identifier.\");\n    return {\n        client: props.client,\n        dataProduct: props.dataProduct,\n    };\n}\n//# sourceMappingURL=ClientWorkspaceContext.js.map","// (C) 2021 GoodData Corporation\nimport { useEffect, useRef } from \"react\";\n/**\n * Hook for tracking the previous value of the React component prop.\n * This is useful as a replacement for the componentWillReceiveProps lifecycle method.\n * See: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @internal\n */\nexport const usePrevious = (props) => {\n    const previousProps = useRef(props);\n    useEffect(() => {\n        previousProps.current = props;\n    });\n    return previousProps.current;\n};\n//# sourceMappingURL=usePrevious.js.map","// (C) 2019-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Tests whether the provided object is an instance of {@link IDashboard}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isDashboard(obj) {\n    const asDash = obj;\n    return !isEmpty(asDash) && asDash.type === \"IDashboard\" && asDash.ref !== undefined;\n}\n/**\n * Tests whether the provided object is an instance of {@link IDashboardDefinition}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isDashboardDefinition(obj) {\n    const asDash = obj;\n    return !isEmpty(asDash) && asDash.type === \"IDashboard\";\n}\n//# sourceMappingURL=dashboard.js.map","// (C) 2021-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Tests whether object is an instance of {@link IDashboardEvent}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isDashboardEvent(obj) {\n    var _a;\n    return !isEmpty(obj) && ((_a = obj.type) === null || _a === void 0 ? void 0 : _a.startsWith(\"GDC.DASH/EVT\"));\n}\n/**\n * Tests whether object is an instance of {@link ICustomDashboardEvent}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isCustomDashboardEvent(obj) {\n    var _a;\n    return !isEmpty(obj) && ((_a = obj.type) === null || _a === void 0 ? void 0 : _a.startsWith(\"CUSTOM/EVT\"));\n}\n/**\n * Tests whether object is an instance of {@link IDashboardEvent} or {@link ICustomDashboardEvent}.\n *\n * @param obj - object to test\n * @public\n */\nexport function isDashboardEventOrCustomDashboardEvent(obj) {\n    return isDashboardEvent(obj) || isCustomDashboardEvent(obj);\n}\n//# sourceMappingURL=base.js.map","// (C) 2021 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Creates a type guard for a given {@link IDashboardEvent} subtype.\n *\n * @param type - type discriminator of the given type\n * @typeParam TEvent - type of the event to check\n */\nexport const eventGuard = (type) => (obj) => {\n    return !isEmpty(obj) && obj.type === type;\n};\n//# sourceMappingURL=util.js.map","// (C) 2021-2023 GoodData Corporation\nimport { eventGuard } from \"./util.js\";\nexport function dashboardInitialized(ctx, dashboard, insights, config, permissions, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INITIALIZED\",\n        ctx,\n        correlationId,\n        payload: {\n            dashboard,\n            insights,\n            config,\n            permissions,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInitialized}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardInitialized = eventGuard(\"GDC.DASH/EVT.INITIALIZED\");\nexport function dashboardDeinitialized(ctx, dashboard, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DEINITIALIZED\",\n        ctx,\n        correlationId,\n        payload: {\n            dashboard,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDeinitialized}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardDeinitialized = eventGuard(\"GDC.DASH/EVT.DEINITIALIZED\");\nexport function dashboardSaved(ctx, dashboard, newDashboard, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.SAVED\",\n        ctx,\n        correlationId,\n        payload: {\n            dashboard,\n            newDashboard,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardSaved}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardSaved = eventGuard(\"GDC.DASH/EVT.SAVED\");\nexport function dashboardCopySaved(ctx, dashboard, isOriginalDashboardLocked, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.COPY_SAVED\",\n        ctx,\n        correlationId,\n        payload: {\n            dashboard,\n            isOriginalDashboardLocked,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardCopySaved}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardCopySaved = eventGuard(\"GDC.DASH/EVT.COPY_SAVED\");\nexport function dashboardRenamed(ctx, newTitle, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RENAMED\",\n        ctx,\n        correlationId,\n        payload: {\n            newTitle,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardRenamed}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardRenamed = eventGuard(\"GDC.DASH/EVT.RENAMED\");\nexport function dashboardWasReset(ctx, dashboard, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RESET\",\n        ctx,\n        correlationId,\n        payload: {\n            dashboard,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardWasReset}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardWasReset = eventGuard(\"GDC.DASH/EVT.RESET\");\nexport function dashboardDeleted(ctx, dashboard, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DELETED\",\n        ctx,\n        correlationId,\n        payload: {\n            dashboard,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDeleted}\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardDeleted = eventGuard(\"GDC.DASH/EVT.DELETED\");\nexport function dateFilterValidationFailed(ctx, result, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.DATE_FILTER.VALIDATION.FAILED\",\n        ctx,\n        correlationId,\n        payload: {\n            result,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DateFilterValidationFailed}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDateFilterValidationFailed = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.DATE_FILTER.VALIDATION.FAILED\");\nexport function dashboardExportToPdfRequested(ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.EXPORT.PDF.REQUESTED\",\n        ctx,\n        correlationId,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardExportToPdfRequested}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardExportToPdfRequested = eventGuard(\"GDC.DASH/EVT.EXPORT.PDF.REQUESTED\");\nexport function dashboardExportToPdfResolved(ctx, result, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.EXPORT.PDF.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            resultUri: result.uri,\n            result,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardExportToPdfResolved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardExportToPdfResolved = eventGuard(\"GDC.DASH/EVT.EXPORT.PDF.RESOLVED\");\nexport function dashboardSharingChanged(ctx, newSharingProperties, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.SHARING.CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            newSharingProperties,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardSharingChanged}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardSharingChanged = eventGuard(\"GDC.DASH/EVT.SHARING.CHANGED\");\n//# sourceMappingURL=dashboard.js.map","// (C) 2021-2023 GoodData Corporation\nimport { eventGuard } from \"./util.js\";\nexport function dashboardCommandStarted(ctx, command) {\n    return {\n        type: \"GDC.DASH/EVT.COMMAND.STARTED\",\n        ctx,\n        correlationId: command.correlationId,\n        payload: {\n            command,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardCommandStarted}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardCommandStarted = eventGuard(\"GDC.DASH/EVT.COMMAND.STARTED\");\nexport function internalErrorOccurred(ctx, command, message, error) {\n    return {\n        type: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        ctx,\n        correlationId: command.correlationId,\n        payload: {\n            reason: \"INTERNAL_ERROR\",\n            command,\n            message,\n            error,\n        },\n    };\n}\nexport function invalidArgumentsProvided(ctx, command, message) {\n    return {\n        type: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        ctx,\n        correlationId: command.correlationId,\n        payload: {\n            reason: \"USER_ERROR\",\n            command,\n            message,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardCommandFailed}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardCommandFailed = eventGuard(\"GDC.DASH/EVT.COMMAND.FAILED\");\nexport function commandRejected(ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.COMMAND.REJECTED\",\n        ctx,\n        correlationId,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardCommandRejected}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardCommandRejected = eventGuard(\"GDC.DASH/EVT.COMMAND.REJECTED\");\nexport function queryRejected(ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.QUERY.REJECTED\",\n        ctx,\n        correlationId,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardQueryRejected}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardQueryRejected = eventGuard(\"GDC.DASH/EVT.QUERY.REJECTED\");\nexport function internalQueryErrorOccurred(ctx, message, error, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.QUERY.FAILED\",\n        ctx,\n        correlationId,\n        payload: {\n            reason: \"INTERNAL_ERROR\",\n            message,\n            error,\n        },\n    };\n}\nexport function invalidQueryArguments(ctx, message, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.QUERY.FAILED\",\n        ctx,\n        correlationId,\n        payload: {\n            reason: \"USER_ERROR\",\n            message,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardCommandFailed}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardQueryFailed = eventGuard(\"GDC.DASH/EVT.QUERY.FAILED\");\nexport function queryStarted(ctx, query, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.QUERY.STARTED\",\n        ctx,\n        correlationId,\n        payload: {\n            query,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardQueryStarted}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardQueryStarted = eventGuard(\"GDC.DASH/EVT.QUERY.STARTED\");\nexport function queryCompleted(ctx, query, result, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.QUERY.COMPLETED\",\n        ctx,\n        correlationId,\n        payload: {\n            query,\n            result,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardQueryCompleted}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardQueryCompleted = eventGuard(\"GDC.DASH/EVT.QUERY.COMPLETED\");\n//# sourceMappingURL=general.js.map","import { eventGuard } from \"./util.js\";\nexport function dateFilterChanged(ctx, filter, dateFilterOptionLocalId, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.DATE_FILTER.SELECTION_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filter,\n            dateFilterOptionLocalId,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDateFilterSelectionChanged}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardDateFilterSelectionChanged = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.DATE_FILTER.SELECTION_CHANGED\");\nexport function attributeFilterAdded(ctx, added, index, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.ADDED\",\n        ctx,\n        correlationId,\n        payload: {\n            added,\n            index,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeFilterAdded}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAttributeFilterAdded = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.ADDED\");\nexport function attributeFilterRemoved(ctx, removed, children, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.REMOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            removed,\n            children,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeFilterRemoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAttributeFilterRemoved = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.REMOVED\");\nexport function attributeFilterMoved(ctx, moved, fromIndex, toIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.MOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            moved,\n            fromIndex,\n            toIndex,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeFilterMoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAttributeFilterMoved = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.MOVED\");\nexport function attributeFilterSelectionChanged(ctx, filter, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.SELECTION_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filter,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeFilterSelectionChanged}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardAttributeFilterSelectionChanged = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.SELECTION_CHANGED\");\nexport function attributeFilterParentChanged(ctx, filter, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.PARENT_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filter,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeFilterParentChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAttributeFilterParentChanged = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.PARENT_CHANGED\");\nexport function attributeDisplayTitleChanged(ctx, filter, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.TITLE_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filter,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeTitleChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAttributeFilterTitleChanged = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.TITLE_CHANGED\");\nexport function attributeDisplayFormChanged(ctx, filter, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.DISPLAY_FORM_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filter,\n        },\n    };\n}\nexport function attributeSelectionModeChanged(ctx, filter, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.SELECTION_MODE_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filter,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAttributeSelectionModeChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAttributeFilterSelectionModeChanged = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.SELECTION_MODE_CHANGED\");\nexport function filterContextChanged(ctx, filterContext, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FILTER_CONTEXT.CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            filterContext,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardFilterContextChanged}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardFilterContextChanged = eventGuard(\"GDC.DASH/EVT.FILTER_CONTEXT.CHANGED\");\n//# sourceMappingURL=filters.js.map","import { eventGuard } from \"./util.js\";\nexport function layoutSectionAdded(ctx, section, index, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_ADDED\",\n        ctx,\n        correlationId,\n        payload: {\n            section,\n            index,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionAdded}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionAdded = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_ADDED\");\nexport function layoutSectionMoved(ctx, section, fromIndex, toIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_MOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            section,\n            fromIndex,\n            toIndex,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionMoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionMoved = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_MOVED\");\nexport function layoutSectionRemoved(ctx, section, index, eagerRemoval, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_REMOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            section,\n            index,\n            eagerRemoval,\n            stashIdentifier,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionRemoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionRemoved = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_REMOVED\");\nexport function layoutSectionHeaderChanged(ctx, newHeader, sectionIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_HEADER_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            newHeader,\n            sectionIndex,\n        },\n    };\n}\nexport function layoutSectionItemsHeightResized(ctx, sectionIndex, itemIndexes, newHeight, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_ITEMS_HEIGHT_RESIZED\",\n        ctx,\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndexes,\n            newHeight,\n        },\n    };\n}\nexport function layoutSectionItemWidthResized(ctx, sectionIndex, itemIndex, newWidth, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_ITEM_WIDTH_RESIZED\",\n        ctx,\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            newWidth,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionHeaderChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionHeaderChanged = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_HEADER_CHANGED\");\nexport function layoutSectionItemsAdded(ctx, sectionIndex, startIndex, itemsAdded, stashesUsed, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEMS_ADDED\",\n        ctx,\n        correlationId,\n        payload: {\n            sectionIndex,\n            startIndex,\n            itemsAdded,\n            stashesUsed,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionItemsAdded}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionItemsAdded = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.ITEMS_ADDED\");\nexport function layoutSectionItemReplaced(ctx, sectionIndex, itemIndex, items, previousItem, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REPLACED\",\n        ctx,\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            items,\n            previousItem,\n            stashIdentifier,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionItemReplaced}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionItemReplaced = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REPLACED\");\nexport function layoutSectionItemMoved(ctx, item, fromSectionIndex, toSectionIndex, fromIndex, toIndex, originalSectionRemoved, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_MOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            item,\n            fromSectionIndex,\n            toSectionIndex,\n            fromIndex,\n            toIndex,\n            originalSectionRemoved,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionItemMoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionItemMoved = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_MOVED\");\nexport function layoutSectionItemMovedToNewSection(ctx, item, fromSectionIndex, toSectionIndex, fromIndex, toIndex, originalSectionRemoved, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_MOVED_TO_NEW_SECTION\",\n        ctx,\n        correlationId,\n        payload: {\n            item,\n            fromSectionIndex,\n            toSectionIndex,\n            fromIndex,\n            toIndex,\n            originalSectionRemoved,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionItemMovedToNewSection}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionItemMovedToNewSection = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_MOVED_TO_NEW_SECTION\");\nexport function layoutSectionItemRemoved(ctx, item, itemIndex, section, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REMOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            item,\n            itemIndex,\n            section,\n            stashIdentifier,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutSectionItemRemoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutSectionItemRemoved = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REMOVED\");\nexport function layoutChanged(ctx, layout, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.FLUID_LAYOUT.LAYOUT_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            layout,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardLayoutChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardLayoutChanged = eventGuard(\"GDC.DASH/EVT.FLUID_LAYOUT.LAYOUT_CHANGED\");\n//# sourceMappingURL=layout.js.map","// (C) 2021-2023 GoodData Corporation\nimport { eventGuard } from \"./util.js\";\nexport function kpiWidgetHeaderChanged(ctx, ref, header, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.HEADER_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            header,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetHeaderChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetHeaderChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.HEADER_CHANGED\");\nexport function kpiWidgetDescriptionChanged(ctx, ref, description, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.DESCRIPTION_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            description,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetDescriptionChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetDescriptionChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.DESCRIPTION_CHANGED\");\nexport function kpiWidgetConfigurationChanged(ctx, ref, configuration, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.CONFIGURATION_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            configuration,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetConfigurationChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetConfigurationChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.CONFIGURATION_CHANGED\");\nexport function kpiWidgetMeasureChanged(ctx, ref, kpiWidget, measure, header, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.MEASURE_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            kpiWidget,\n            measure,\n            header,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetMeasureChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetMeasureChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.MEASURE_CHANGED\");\nexport function kpiWidgetFilterSettingsChanged(ctx, ref, ignoredAttributeFilters, dateDatasetForFiltering, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            ignoredAttributeFilters,\n            dateDatasetForFiltering,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetFilterSettingsChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetFilterSettingsChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\");\nexport function kpiWidgetComparisonChanged(ctx, ref, kpi, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.COMPARISON_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            kpi,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetComparisonChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetComparisonChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.COMPARISON_CHANGED\");\nexport function kpiWidgetDrillRemoved(ctx, ref, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.DRILL_REMOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetDrillRemoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetDrillRemoved = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.DRILL_REMOVED\");\nexport function kpiWidgetDrillSet(ctx, ref, drill, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.DRILL_SET\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            drill,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetDrillSet}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetDrillSet = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.DRILL_SET\");\nexport function kpiWidgetChanged(ctx, kpiWidget, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.KPI_WIDGET.WIDGET_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            kpiWidget,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardKpiWidgetChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardKpiWidgetChanged = eventGuard(\"GDC.DASH/EVT.KPI_WIDGET.WIDGET_CHANGED\");\n//# sourceMappingURL=kpi.js.map","import { eventGuard } from \"./util.js\";\nexport function insightWidgetHeaderChanged(ctx, ref, header, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.HEADER_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            header,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetHeaderChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetHeaderChanged = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.HEADER_CHANGED\");\nexport function insightWidgetDescriptionChanged(ctx, ref, description, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.DESCRIPTION_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            description,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetDescriptionChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetDescriptionChanged = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.DESCRIPTION_CHANGED\");\nexport function insightWidgetFilterSettingsChanged(ctx, ref, ignoredAttributeFilters, dateDatasetForFiltering, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            ignoredAttributeFilters,\n            dateDatasetForFiltering,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetFilterSettingsChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetFilterSettingsChanged = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\");\nexport function insightWidgetVisPropertiesChanged(ctx, ref, properties, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.PROPERTIES_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            properties,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetVisPropertiesChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetVisPropertiesChanged = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.PROPERTIES_CHANGED\");\nexport function insightWidgetVisConfigurationChanged(ctx, ref, newConfig, oldConfig, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.CONFIGURATION_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            newConfig,\n            oldConfig,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetVisConfigurationChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetVisConfigurationChanged = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.CONFIGURATION_CHANGED\");\nexport function insightWidgetInsightChanged(ctx, ref, insight, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.INSIGHT_SWITCHED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            insight,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetInsightSwitched}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetInsightSwitched = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.INSIGHT_SWITCHED\");\nexport function insightWidgetDrillsModified(ctx, ref, added, updated, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.DRILLS_MODIFIED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            added,\n            updated,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetDrillsModified}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetDrillsModified = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.DRILLS_MODIFIED\");\nexport function insightWidgetDrillsRemoved(ctx, ref, removed, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.DRILLS_REMOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            removed,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetDrillsRemoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetDrillsRemoved = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.DRILLS_REMOVED\");\nexport function insightWidgetChanged(ctx, insightWidget, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.WIDGET_CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            insightWidget,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetChanged = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.WIDGET_CHANGED\");\n/**\n * @beta\n */\nexport function insightWidgetExportRequested(ctx, ref, config, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.EXPORT_REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            config,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetExportRequested}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetExportRequested = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.EXPORT_REQUESTED\");\n/**\n * @beta\n */\nexport function insightWidgetExportResolved(ctx, result, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.EXPORT_RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            resultUri: result.uri,\n            result,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetExportResolved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetExportResolved = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.EXPORT_RESOLVED\");\n/**\n * @beta\n */\nexport function insightWidgetRefreshed(ctx, insight, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.INSIGHT_WIDGET.REFRESHED\",\n        ctx,\n        correlationId,\n        payload: {\n            insight,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardInsightWidgetRefreshed}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardInsightWidgetRefreshed = eventGuard(\"GDC.DASH/EVT.INSIGHT_WIDGET.REFRESHED\");\n//# sourceMappingURL=insight.js.map","// (C) 2021-2023 GoodData Corporation\nimport { eventGuard } from \"./util.js\";\n/**\n * @beta\n */\nexport function widgetExecutionStarted(widgetRef, executionDefinition, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.WIDGET.EXECUTION_STARTED\",\n        correlationId,\n        payload: {\n            widgetRef,\n            executionDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardWidgetExecutionStarted}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardWidgetExecutionStarted = eventGuard(\"GDC.DASH/EVT.WIDGET.EXECUTION_STARTED\");\n/**\n * @beta\n */\nexport function widgetExecutionFailed(widgetRef, error, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.WIDGET.EXECUTION_FAILED\",\n        correlationId,\n        payload: {\n            widgetRef,\n            error,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardWidgetExecutionFailed}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardWidgetExecutionFailed = eventGuard(\"GDC.DASH/EVT.WIDGET.EXECUTION_FAILED\");\n/**\n * @beta\n */\nexport function widgetExecutionSucceeded(widgetRef, dataView, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.WIDGET.EXECUTION_SUCCEEDED\",\n        correlationId,\n        payload: {\n            dataView,\n            widgetRef,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardWidgetExecutionSucceeded}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardWidgetExecutionSucceeded = eventGuard(\"GDC.DASH/EVT.WIDGET.EXECUTION_SUCCEEDED\");\n//# sourceMappingURL=widget.js.map","import { eventGuard } from \"./util.js\";\nexport function alertCreated(ctx, alert, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.ALERT.CREATED\",\n        ctx,\n        correlationId,\n        payload: {\n            alert,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAlertCreated}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAlertCreated = eventGuard(\"GDC.DASH/EVT.ALERT.CREATED\");\nexport function alertsRemoved(ctx, alerts, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.ALERTS.REMOVED\",\n        ctx,\n        correlationId,\n        payload: {\n            alerts,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAlertsRemoved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAlertsRemoved = eventGuard(\"GDC.DASH/EVT.ALERTS.REMOVED\");\nexport function alertUpdated(ctx, updated, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.ALERT.UPDATED\",\n        ctx,\n        correlationId,\n        payload: {\n            updated,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAlertUpdated}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardAlertUpdated = eventGuard(\"GDC.DASH/EVT.ALERT.UPDATED\");\n//# sourceMappingURL=alerts.js.map","import { eventGuard } from \"./util.js\";\nexport function scheduledEmailCreated(ctx, scheduledEmail, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.SCHEDULED_EMAIL.CREATED\",\n        ctx,\n        correlationId,\n        payload: {\n            scheduledEmail,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardScheduledEmailCreated}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardScheduledEmailCreated = eventGuard(\"GDC.DASH/EVT.SCHEDULED_EMAIL.CREATED\");\nexport function scheduledEmailSaved(ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.SCHEDULED_EMAIL.SAVED\",\n        ctx,\n        correlationId,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardScheduledEmailSaved}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardScheduledEmailSaved = eventGuard(\"GDC.DASH/EVT.SCHEDULED_EMAIL.SAVED\");\n//# sourceMappingURL=scheduledEmail.js.map","import { eventGuard } from \"./util.js\";\n/**\n * @alpha\n */\nexport function drillRequested(ctx, drillEvent, drillContext, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillContext,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillRequested = eventGuard(\"GDC.DASH/EVT.DRILL.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillResolved(ctx, drillEvent, drillContext, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillContext,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillResolved = eventGuard(\"GDC.DASH/EVT.DRILL.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillDownRequested(ctx, insight, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_DOWN.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            insight,\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillDownRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillDownRequested = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_DOWN.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillDownResolved(ctx, insight, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_DOWN.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            insight,\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillDownResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillDownResolved = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_DOWN.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillToInsightRequested(ctx, insight, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            insight,\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToInsightRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToInsightRequested = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillToInsightResolved(ctx, insight, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            insight,\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToInsightResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToInsightResolved = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillToDashboardRequested(ctx, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToDashboardRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToDashboardRequested = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillToDashboardResolved(ctx, filters, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            filters,\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToDashboardResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToDashboardResolved = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillToCustomUrlRequested(ctx, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToCustomUrlRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToCustomUrlRequested = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillToCustomUrlResolved(ctx, url, drillDefinition, drillEvent, filtersInfo, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            url,\n            drillEvent,\n            drillDefinition,\n            filtersInfo,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToCustomUrlResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToCustomUrlResolved = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillToAttributeUrlRequested(ctx, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToAttributeUrlRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToAttributeUrlRequested = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillToAttributeUrlResolved(ctx, url, drillDefinition, drillEvent, filtersInfo, isImplicit, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillDefinition,\n            url,\n            filtersInfo,\n            isImplicit,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToAttributeUrlResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToAttributeUrlResolved = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillToLegacyDashboardRequested(ctx, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.REQUESTED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToLegacyDashboardRequested}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToLegacyDashboardRequested = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.REQUESTED\");\n/**\n * @alpha\n */\nexport function drillToLegacyDashboardResolved(ctx, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.RESOLVED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillEvent,\n            drillDefinition,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillToLegacyDashboardResolved}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillToLegacyDashboardResolved = eventGuard(\"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.RESOLVED\");\n/**\n * @alpha\n */\nexport function drillableItemsChanged(ctx, drillableItems, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL.DRILLABLE_ITEMS.CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            drillableItems,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardDrillableItemsChanged}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDashboardDrillableItemsChanged = eventGuard(\"GDC.DASH/EVT.DRILL.DRILLABLE_ITEMS.CHANGED\");\n//# sourceMappingURL=drill.js.map","import { eventGuard } from \"./util.js\";\n/**\n * Create DrillTargetsAdded {@link DrillTargetsAdded} event.\n *\n * @param ref - Unique widget ref\n * @param availableDrillTargets - Available widget drill targets {@link @gooddata/sdk-ui#IAvailableDrillTargets}\n * @param correlationId - correlationId\n * @returns - DrillTargetsAdded command\n *\n * @alpha\n */\nexport function drillTargetsAdded(ctx, ref, availableDrillTargets, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.DRILL_TARGETS.ADDED\",\n        ctx,\n        correlationId,\n        payload: {\n            ref,\n            availableDrillTargets,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DrillTargetsAdded}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport const isDrillTargetsAdded = eventGuard(\"GDC.DASH/EVT.DRILL_TARGETS.ADDED\");\n//# sourceMappingURL=drillTargets.js.map","import isString from \"lodash/isString.js\";\nimport { eventGuard } from \"./util.js\";\n/**\n * Creates the {@link DashboardUserInteractionTriggered} event body.\n *\n * @param interactionPayloadOrType - interaction payload or a type of a user interaction without extra data (for convenience)\n * @param correlationId - specify correlation id to use for this event. this can be used to correlate this event to a command that caused it.\n * @beta\n */\nexport function userInteractionTriggered(interactionPayloadOrType, correlationId) {\n    const payload = isString(interactionPayloadOrType)\n        ? { interaction: interactionPayloadOrType }\n        : interactionPayloadOrType;\n    return {\n        type: \"GDC.DASH/EVT.USER_INTERACTION.TRIGGERED\",\n        correlationId,\n        payload,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardUserInteractionTriggered}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardUserInteractionTriggered = eventGuard(\"GDC.DASH/EVT.USER_INTERACTION.TRIGGERED\");\n//# sourceMappingURL=userInteraction.js.map","import { eventGuard } from \"./util.js\";\n/**\n * @public\n */\nexport function renderRequested(ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RENDER.REQUESTED\",\n        correlationId,\n        ctx,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardRenderRequested}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardRenderRequested = eventGuard(\"GDC.DASH/EVT.RENDER.REQUESTED\");\n/**\n * @public\n */\nexport function asyncRenderRequested(id, ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RENDER.ASYNC.REQUESTED\",\n        correlationId,\n        ctx,\n        payload: {\n            id,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAsyncRenderRequested}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardAsyncRenderRequested = eventGuard(\"GDC.DASH/EVT.RENDER.ASYNC.REQUESTED\");\n/**\n * @public\n */\nexport function asyncRenderResolved(id, ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RENDER.ASYNC.RESOLVED\",\n        correlationId,\n        ctx,\n        payload: {\n            id,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardAsyncRenderResolved}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardAsyncRenderResolved = eventGuard(\"GDC.DASH/EVT.RENDER.ASYNC.RESOLVED\");\n/**\n * This event is emitted as soon as the dashboard component is fully rendered,\n * and asynchronous rendering of each component is complete.\n *\n * @public\n */\nexport function renderResolved(ctx, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RENDER.RESOLVED\",\n        correlationId,\n        ctx,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardRenderResolved}.\n *\n * @param obj - object to test\n * @public\n */\nexport const isDashboardRenderResolved = eventGuard(\"GDC.DASH/EVT.RENDER.RESOLVED\");\n//# sourceMappingURL=render.js.map","// (C) 2022-2023 GoodData Corporation\nimport { eventGuard } from \"./util.js\";\n/**\n * @beta\n */\nexport function renderModeChanged(ctx, renderMode, correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.RENDER_MODE.CHANGED\",\n        ctx,\n        correlationId,\n        payload: {\n            renderMode,\n        },\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link DashboardRenderModeChanged}.\n *\n * @param obj - object to test\n * @beta\n */\nexport const isDashboardRenderModeChanged = eventGuard(\"GDC.DASH/EVT.RENDER_MODE.CHANGED\");\n//# sourceMappingURL=renderMode.js.map","// (C) 2021-2023 GoodData Corporation\nimport { eventGuard } from \"./util.js\";\n/**\n * Create {@link CreateInsightRequested} event\n *\n * @internal\n */\nexport function createInsightRequested(correlationId) {\n    return {\n        type: \"GDC.DASH/EVT.CREATE_INSIGHT_REQUESTED\",\n        correlationId,\n    };\n}\n/**\n * Tests whether the provided object is an instance of {@link CreateInsightRequested}.\n *\n * @param obj - object to test\n * @internal\n */\nexport const isCreateInsightRequested = eventGuard(\"GDC.DASH/EVT.CREATE_INSIGHT_REQUESTED\");\n//# sourceMappingURL=lab.js.map","export { isDashboardEvent, isCustomDashboardEvent, isDashboardEventOrCustomDashboardEvent, } from \"./base.js\";\nexport { isDashboardSaved, isDashboardCopySaved, isDashboardInitialized, isDashboardDeinitialized, isDashboardRenamed, isDashboardWasReset, isDashboardDeleted, isDateFilterValidationFailed, isDashboardExportToPdfRequested, isDashboardExportToPdfResolved, isDashboardSharingChanged, } from \"./dashboard.js\";\nexport { isDashboardCommandStarted, isDashboardCommandFailed, isDashboardQueryFailed, isDashboardCommandRejected, isDashboardQueryCompleted, isDashboardQueryRejected, isDashboardQueryStarted, } from \"./general.js\";\nexport { isDashboardAttributeFilterAdded, isDashboardAttributeFilterMoved, isDashboardAttributeFilterParentChanged, isDashboardAttributeFilterRemoved, isDashboardAttributeFilterSelectionChanged, isDashboardAttributeFilterSelectionModeChanged, isDashboardAttributeFilterTitleChanged, isDashboardDateFilterSelectionChanged, isDashboardFilterContextChanged, } from \"./filters.js\";\nexport { isDashboardLayoutChanged, isDashboardLayoutSectionAdded, isDashboardLayoutSectionHeaderChanged, isDashboardLayoutSectionItemMoved, isDashboardLayoutSectionItemRemoved, isDashboardLayoutSectionItemReplaced, isDashboardLayoutSectionItemsAdded, isDashboardLayoutSectionMoved, isDashboardLayoutSectionRemoved, } from \"./layout.js\";\nexport { isDashboardKpiWidgetChanged, isDashboardKpiWidgetComparisonChanged, isDashboardKpiWidgetFilterSettingsChanged, isDashboardKpiWidgetHeaderChanged, isDashboardKpiWidgetDescriptionChanged, isDashboardKpiWidgetConfigurationChanged, isDashboardKpiWidgetMeasureChanged, isDashboardKpiWidgetDrillRemoved, isDashboardKpiWidgetDrillSet, } from \"./kpi.js\";\nexport { isDashboardInsightWidgetChanged, isDashboardInsightWidgetDrillsModified, isDashboardInsightWidgetDrillsRemoved, isDashboardInsightWidgetFilterSettingsChanged, isDashboardInsightWidgetHeaderChanged, isDashboardInsightWidgetDescriptionChanged, isDashboardInsightWidgetInsightSwitched, isDashboardInsightWidgetVisPropertiesChanged, isDashboardInsightWidgetVisConfigurationChanged, isDashboardInsightWidgetExportRequested, isDashboardInsightWidgetExportResolved, isDashboardInsightWidgetRefreshed, } from \"./insight.js\";\nexport { isDashboardWidgetExecutionStarted, isDashboardWidgetExecutionSucceeded, isDashboardWidgetExecutionFailed, } from \"./widget.js\";\nexport { isDashboardAlertCreated, isDashboardAlertsRemoved, isDashboardAlertUpdated, } from \"./alerts.js\";\nexport { isDashboardScheduledEmailCreated, isDashboardScheduledEmailSaved, } from \"./scheduledEmail.js\";\nexport { isDashboardDrillDownRequested, isDashboardDrillDownResolved, isDashboardDrillRequested, isDashboardDrillResolved, isDashboardDrillToAttributeUrlRequested, isDashboardDrillToAttributeUrlResolved, isDashboardDrillToCustomUrlRequested, isDashboardDrillToCustomUrlResolved, isDashboardDrillToDashboardRequested, isDashboardDrillToDashboardResolved, isDashboardDrillToInsightRequested, isDashboardDrillToInsightResolved, isDashboardDrillToLegacyDashboardRequested, isDashboardDrillToLegacyDashboardResolved, isDashboardDrillableItemsChanged, } from \"./drill.js\";\nexport { drillTargetsAdded, isDrillTargetsAdded, } from \"./drillTargets.js\";\nexport * from \"./userInteraction.js\";\nexport { isDashboardAsyncRenderRequested, isDashboardAsyncRenderResolved, isDashboardRenderRequested, isDashboardRenderResolved, } from \"./render.js\";\nexport { isDashboardRenderModeChanged, } from \"./renderMode.js\";\nexport { createInsightRequested, isCreateInsightRequested } from \"./lab.js\";\n/**\n * Creates DashboardEvent predicate that test whether the provided event matches it.\n *\n * @alpha\n * @param eventType - dashboard event type\n * @param pred - predicate to test\n * @returns boolean - matches?\n */\nexport function newDashboardEventPredicate(eventType, pred) {\n    return (event) => {\n        var _a;\n        if ((event === null || event === void 0 ? void 0 : event.type) !== eventType) {\n            return false;\n        }\n        return (_a = pred === null || pred === void 0 ? void 0 : pred(event)) !== null && _a !== void 0 ? _a : true;\n    };\n}\n//# sourceMappingURL=index.js.map","import { put, delay, take, join, race, call, all, spawn, cancel, actionChannel } from \"redux-saga/effects\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { newDashboardEventPredicate } from \"../../events/index.js\";\nimport { renderRequested, renderResolved } from \"../../events/render.js\";\nfunction* wait(ms) {\n    yield delay(ms);\n    return true;\n}\nconst isAsyncRenderResolvedEvent = (id) => newDashboardEventPredicate(\"GDC.DASH/EVT.RENDER.ASYNC.RESOLVED\", id ? (e) => e.payload.id === id : () => true);\nconst isAsyncRenderRequestedEvent = (id) => newDashboardEventPredicate(\"GDC.DASH/EVT.RENDER.ASYNC.REQUESTED\", id ? (e) => e.payload.id === id : () => true);\nexport function newRenderingWorker(config = {\n    asyncRenderRequestedTimeout: 2000,\n    asyncRenderResolvedTimeout: 2000,\n    maxTimeout: 20 * 60000,\n    correlationIdGenerator: uuidv4,\n}) {\n    return function* renderingWorker(ctx) {\n        try {\n            // Provide a correlation id so that event handlers can correlate the start and end of the rendering\n            const correlationId = config.correlationIdGenerator();\n            // First, notify that the rendering of the whole dashboard started.\n            yield put(renderRequested(ctx, correlationId));\n            // Wait for the dashboard initialization.\n            yield take(\"GDC.DASH/EVT.INITIALIZED\");\n            // Collect async rendering requests.\n            const asyncRenderTasks = yield call(collectAsyncRenderTasks, config);\n            // Wait for the resolution of all async rendering tasks.\n            yield call(waitForAsyncRenderTasksResolution, asyncRenderTasks, config);\n            // Notify that the dashboard is fully rendered.\n            yield put(renderResolved(ctx, correlationId));\n        }\n        catch (err) {\n            console.error(\"Rendering worker failed\", err);\n        }\n    };\n}\nfunction* collectAsyncRenderTasks(config) {\n    const asyncRenderTasks = new Map();\n    const timeout = yield spawn(wait, config.asyncRenderRequestedTimeout);\n    const renderRequestedChannel = yield actionChannel(isAsyncRenderRequestedEvent());\n    while (true) {\n        const { asyncRenderRequested, timeoutResolved } = yield race({\n            asyncRenderRequested: take(renderRequestedChannel),\n            timeoutResolved: join(timeout),\n        });\n        if (timeoutResolved) {\n            break;\n        }\n        const asyncRenderId = asyncRenderRequested.payload.id;\n        // Check whether async render is already registered.\n        // If so, skip it, because possible re-executions are covered in the async render task itself.\n        if (asyncRenderTasks.has(asyncRenderId)) {\n            continue;\n        }\n        // New async render requested, spawn it.\n        const asyncRenderTask = yield spawn(waitForAsyncRenderResolution, asyncRenderId, config);\n        asyncRenderTasks.set(asyncRenderId, asyncRenderTask);\n    }\n    return asyncRenderTasks;\n}\nfunction* waitForAsyncRenderTasksResolution(asyncRenderTasks, config) {\n    const timeout = yield spawn(wait, config.maxTimeout - config.asyncRenderRequestedTimeout);\n    const renderRequestedChannel = yield actionChannel(isAsyncRenderRequestedEvent());\n    while (true) {\n        // Now, wait for resolution of all the requested async renders, or max `config.maxTimeout` milliseconds.\n        // Accept also new async render requests, but only in case that all tasks are not already resolved.\n        const asyncRenderTasksList = Array.from(asyncRenderTasks, ([, task]) => task);\n        const { asyncTasksResolved, asyncRenderRequested, timeoutResolved } = yield race({\n            asyncRenderRequested: take(renderRequestedChannel),\n            asyncTasksResolved: all(asyncRenderTasksList.map((task) => join(task))),\n            timeoutResolved: join(timeout),\n        });\n        if (timeoutResolved || asyncTasksResolved) {\n            asyncRenderTasksList.forEach((task) => task.cancel());\n            yield cancel(timeout);\n            return;\n        }\n        // If the previous async rendering tasks have not yet been resolved,\n        // also accept the new asynchronous rendering requests.\n        if (asyncRenderRequested) {\n            const asyncRenderId = asyncRenderRequested.payload.id;\n            // Check whether async render is already registered.\n            // If so, skip it, because possible re-executions are covered in the async render task itself.\n            if (asyncRenderTasks.has(asyncRenderId)) {\n                continue;\n            }\n            // New async render requested, track it.\n            const asyncRenderTask = yield spawn(waitForAsyncRenderResolution, asyncRenderId, config);\n            asyncRenderTasks.set(asyncRenderId, asyncRenderTask);\n        }\n    }\n}\nfunction* waitForAsyncRenderResolution(id, config) {\n    // Avoid infinite loop\n    const maxRetries = 3;\n    let retries = 0;\n    const renderResolvedChannel = yield actionChannel(isAsyncRenderResolvedEvent(id));\n    while (true) {\n        yield take(renderResolvedChannel);\n        // Wait for possible re-execution to cover executions\n        // invoked by changed execution definition after visualization render.\n        // (e.g. by data received from PluggableVisualization pushData callback)\n        const { timeout } = yield race({\n            timeout: call(wait, config.asyncRenderResolvedTimeout),\n            anotherExecution: take(isAsyncRenderRequestedEvent(id)),\n        });\n        retries += 1;\n        // No re-execution, or max retry limit reached - leave the loop\n        if (timeout || retries === maxRetries) {\n            return;\n        }\n    }\n}\n//# sourceMappingURL=renderingWorker.js.map","// (C) 2021-2023 GoodData Corporation\n/**\n * The initial load of the dashboard will use this correlation id.\n *\n * @beta\n */\nexport const InitialLoadCorrelationId = \"initialLoad\";\n/**\n * Creates the InitializeDashboard command.\n *\n * @remarks\n * Dispatching this command will result in the load of all the essential data from the backend and initializing\n * the state of Dashboard to a point where the dashboard can be rendered.\n *\n * Note that the command takes the dashboard to initialize from context - from the properties of the Dashboard\n * component in which it runs:\n *\n * -  If Dashboard component is referencing an existing, persisted dashboard, then the dashboard will be loaded and\n *    rendered.\n *\n * -  If Dashboard component does not reference any dashboard, then the component will initialize for an empty\n *    dashboard with default filter setup.\n *\n * In both cases the essential configuration, permissions and additional metadata gets loaded from the backend.\n *\n * @param config - specify configuration to use for for the Dashboard; you MAY provide partial configuration.\n *  During the LoadDashboard processing the Dashboard component will resolve all the missing parts by reading them\n *  from the backend.\n * @param permissions - specify permissions to use when determining whether the user is eligible for some\n *  actions with the dashboard; if you do not specify permissions Dashboard component will load the permissions\n *  from the backend.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @public\n */\nexport function initializeDashboard(config, permissions, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INITIALIZE\",\n        correlationId,\n        payload: {\n            config,\n            permissions,\n        },\n    };\n}\n/**\n * Creates the InitializeDashboard command with the persisted dashboard overridden.\n *\n * @remarks\n * Dispatching this command will result in the load of all the essential data from the backend and initializing\n * the state of Dashboard to a point where the dashboard can be rendered.\n *\n * Note that the command takes the dashboard to initialize from context - from the properties of the Dashboard\n * component in which it runs:\n *\n * -  If Dashboard component is referencing an existing, persisted dashboard, then the dashboard will be loaded and\n *    rendered.\n *\n * -  If Dashboard component does not reference any dashboard, then the component will initialize for an empty\n *    dashboard with default filter setup.\n *\n * In both cases the essential configuration, permissions and additional metadata gets loaded from the backend.\n *\n * @param config - specify configuration to use for for the Dashboard; you MAY provide partial configuration.\n *  During the LoadDashboard processing the Dashboard component will resolve all the missing parts by reading them\n *  from the backend.\n * @param permissions - specify permissions to use when determining whether the user is eligible for some\n *  actions with the dashboard; if you do not specify permissions Dashboard component will load the permissions\n *  from the backend.\n * @param persistedDashboard - dashboard to use for the persisted dashboard state slice in case it needs to be\n *  different from the dashboard param\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @internal\n */\nexport function initializeDashboardWithPersistedDashboard(config, permissions, persistedDashboard, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INITIALIZE\",\n        correlationId,\n        payload: {\n            config,\n            permissions,\n            persistedDashboard,\n        },\n    };\n}\n/**\n * Creates the SaveDashboard command. Dispatching this command will result in persisting all the accumulated\n * dashboard modification to backend.\n *\n * The command will not have any effect if dashboard is not initialized or is empty.\n *\n * @param title - new title for the dashboard; if not specified, the current title of the dashboard will be used\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function saveDashboard(title, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.SAVE\",\n        correlationId,\n        payload: {\n            title,\n        },\n    };\n}\n/**\n * Creates the SaveDashboardAs command.\n *\n * @remarks\n * Dispatching this command will result in creation of a copy of the\n * current dashboard. The copy will reflect the current state of the dashboard including any modifications done\n * on top of the original dashboard.\n *\n * Upon success, a copy of the dashboard will be persisted on the backend. The context of the dashboard component\n * that processed the command is unchanged - it still works with the original dashboard.\n *\n * @param title - new title for the dashboard; if not specified, the title of original dashboard will be used\n * @param switchToCopy - indicate whether the dashboard component should switch to the dashboard that will\n *  be created during save-as; the default is false\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *  @param useOriginalFilterContext - indicate whether new dashboard should use original filter context\n *  or the one with current filter selection.\n * @public\n */\nexport function saveDashboardAs(title, switchToCopy, useOriginalFilterContext, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.SAVEAS\",\n        correlationId,\n        payload: {\n            title,\n            switchToCopy,\n            useOriginalFilterContext,\n        },\n    };\n}\n/**\n * Creates the RenameDashboard command. Dispatching this command will result in rename of the dashboard. The changes\n * will be done only in-memory and have to be flushed to backend using the SaveDashboard command.\n *\n * @param newTitle - new dashboard title\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @beta\n */\nexport function renameDashboard(newTitle, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.RENAME\",\n        correlationId,\n        payload: {\n            newTitle,\n        },\n    };\n}\n/**\n * Creates the ChangeSharing command. Dispatching this command will result in change of sharing status of dashboard. The changes\n * will be done in-memory and also propagated to the backend.\n *\n * @param newSharingProperties - new dashboard sharing properties\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @beta\n */\nexport function changeSharing(newSharingProperties, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.SHARING.CHANGE\",\n        correlationId,\n        payload: {\n            newSharingProperties,\n        },\n    };\n}\n/**\n * Creates the ResetDashboard command. Dispatching this command will result in dropping all in-memory modifications\n * of the dashboard and reverting to a state that is persisted on the backend. In other words reset will get\n * dashboard to a state after the last save.\n *\n * Note: if a dashboard is not saved on a backend, then reset will clear the dashboard to an empty state.\n *\n * Limitation: reset command will have no impact on alerts or scheduled emails. These entites are persisted outside\n * of the dashboard and have their own lifecycle.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function resetDashboard(correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.RESET\",\n        correlationId,\n    };\n}\n/**\n * Creates the DeleteDashboard command. Dispatching this command will result in removal of the currently\n * rendered dashboard from analytical backend and reverting the dashboard component to an 'empty' state where\n * it is initialized to create a new dashboard.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function deleteDashboard(correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DELETE\",\n        correlationId,\n    };\n}\n/**\n * Creates the {@link ExportDashboardToPdf} command. Dispatching this command will result in a request to export\n * the dashboard to a PDF file. If successful, an instance of {@link DashboardExportToPdfResolved} will be emitted\n * with the URL of the resulting file.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function exportDashboardToPdf(correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.EXPORT.PDF\",\n        correlationId,\n    };\n}\n//# sourceMappingURL=dashboard.js.map","// (C) 2021-2023 GoodData Corporation\nimport { v4 as uuidv4 } from \"uuid\";\nimport { invariant } from \"ts-invariant\";\nimport partition from \"lodash/partition.js\";\nimport { areObjRefsEqual, attributeElementsIsEmpty, isAttributeElementsByRef, isDashboardAttributeFilter, isDashboardDateFilter, } from \"@gooddata/sdk-model\";\nconst generateFilterLocalIdentifier = () => uuidv4().replace(/-/g, \"\");\nconst setFilterContext = (state, action) => {\n    var _a;\n    const { filterContextDefinition, originalFilterContextDefinition, filterContextIdentity, attributeFilterDisplayForms, } = action.payload;\n    // make sure attribute filters always have localId\n    const filtersWithLocalId = (_a = filterContextDefinition.filters) === null || _a === void 0 ? void 0 : _a.map((filter) => {\n        var _a;\n        return isDashboardAttributeFilter(filter)\n            ? {\n                attributeFilter: Object.assign(Object.assign({}, filter.attributeFilter), { localIdentifier: (_a = filter.attributeFilter.localIdentifier) !== null && _a !== void 0 ? _a : generateFilterLocalIdentifier() }),\n            }\n            : filter;\n    });\n    // make sure that date filter is always first if present (when DateFilter is set to all time than is missing in filterContextDefinition and originalFilterContextDefinition)\n    // we have to keep order of rest of array (attributeFilters) it represent order of filters in filter bar\n    const [dateFilter, attributeFilters] = partition(filtersWithLocalId, isDashboardDateFilter);\n    const filters = [...dateFilter, ...attributeFilters];\n    state.filterContextDefinition = Object.assign(Object.assign({}, filterContextDefinition), { filters: filters });\n    state.originalFilterContextDefinition = originalFilterContextDefinition;\n    state.filterContextIdentity = filterContextIdentity;\n    state.attributeFilterDisplayForms = attributeFilterDisplayForms;\n};\nconst updateFilterContextIdentity = (state, action) => {\n    state.filterContextIdentity = action.payload.filterContextIdentity;\n};\n//\n//\n//\nconst removeAttributeFilterDisplayForms = (state, action) => {\n    invariant(state.attributeFilterDisplayForms, \"attempting to work with uninitialized state\");\n    state.attributeFilterDisplayForms = state.attributeFilterDisplayForms.filter((df) => {\n        return !areObjRefsEqual(df, action.payload);\n    });\n};\nconst addAttributeFilterDisplayForm = (state, action) => {\n    invariant(state.attributeFilterDisplayForms, \"attempting to work with uninitialized state\");\n    // if there is already a display form with the same ref, replace it\n    const existing = state.attributeFilterDisplayForms.find((df) => areObjRefsEqual(df, action.payload.ref));\n    if (existing) {\n        state.attributeFilterDisplayForms = state.attributeFilterDisplayForms.filter((df) => !areObjRefsEqual(df, action.payload));\n    }\n    state.attributeFilterDisplayForms.push(action.payload);\n};\nconst upsertDateFilter = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const existingFilterIndex = state.filterContextDefinition.filters.findIndex((item) => isDashboardDateFilter(item));\n    /**\n     * TODO: This will cause problems once we support dateDataset-specific date filters (then, we might want\n     * to keep even the all time filters to carry the information about the selected dateDataset).\n     */\n    if (action.payload.type === \"allTime\") {\n        if (existingFilterIndex >= 0) {\n            // if allTime remove the date filter altogether\n            state.filterContextDefinition.filters.splice(existingFilterIndex, 1);\n        }\n    }\n    else if (existingFilterIndex >= 0) {\n        const { type, granularity, from, to } = action.payload;\n        const dateFilter = state.filterContextDefinition.filters[existingFilterIndex];\n        if (isDashboardDateFilter(dateFilter)) {\n            dateFilter.dateFilter.type = type;\n            dateFilter.dateFilter.granularity = granularity;\n            dateFilter.dateFilter.from = from;\n            dateFilter.dateFilter.to = to;\n        }\n    }\n    else {\n        const { type, granularity, from, to } = action.payload;\n        state.filterContextDefinition.filters.unshift({\n            dateFilter: {\n                granularity,\n                type,\n                from,\n                to,\n            },\n        });\n    }\n};\nconst updateAttributeFilterSelection = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { elements, filterLocalId, negativeSelection } = action.payload;\n    const existingFilterIndex = state.filterContextDefinition.filters.findIndex((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n    invariant(existingFilterIndex >= 0, \"Attempt to update non-existing filter\");\n    state.filterContextDefinition.filters[existingFilterIndex] = {\n        attributeFilter: Object.assign(Object.assign({}, state.filterContextDefinition.filters[existingFilterIndex]\n            .attributeFilter), { attributeElements: elements, negativeSelection }),\n    };\n};\nconst addAttributeFilter = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { displayForm, index, initialIsNegativeSelection, initialSelection, parentFilters, selectionMode } = action.payload;\n    const hasSelection = initialSelection && !attributeElementsIsEmpty(initialSelection);\n    const isNegative = selectionMode !== \"single\" && (initialIsNegativeSelection || !hasSelection);\n    const filter = {\n        attributeFilter: Object.assign({ attributeElements: initialSelection !== null && initialSelection !== void 0 ? initialSelection : { uris: [] }, displayForm, negativeSelection: isNegative, localIdentifier: generateFilterLocalIdentifier(), filterElementsBy: parentFilters ? [...parentFilters] : undefined }, (selectionMode !== undefined ? { selectionMode } : {})),\n    };\n    // Filters are indexed just for attribute filters, if DateFilter is present should be always first item\n    const isDateFilterPresent = state.filterContextDefinition.filters.findIndex(isDashboardDateFilter) >= 0;\n    if (index === -1) {\n        state.filterContextDefinition.filters.push(filter);\n    }\n    else {\n        // If DateFilter is present we have to move index by 1 because index of filter is calculated just for AttributeFilers array\n        const attributeFilterIndex = isDateFilterPresent ? index + 1 : index;\n        state.filterContextDefinition.filters.splice(attributeFilterIndex, 0, filter);\n    }\n};\nconst removeAttributeFilter = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { filterLocalId } = action.payload;\n    state.filterContextDefinition.filters = state.filterContextDefinition.filters.filter((item) => isDashboardDateFilter(item) || item.attributeFilter.localIdentifier !== filterLocalId);\n};\nconst moveAttributeFilter = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { filterLocalId, index } = action.payload;\n    const currentFilterIndex = state.filterContextDefinition.filters.findIndex((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n    invariant(currentFilterIndex >= 0, \"Attempt to move non-existing filter\");\n    const filter = state.filterContextDefinition.filters[currentFilterIndex];\n    state.filterContextDefinition.filters.splice(currentFilterIndex, 1);\n    // Filters are indexed just for attribute filters, if DateFilter is present should be always first item\n    const isDateFilterPresent = state.filterContextDefinition.filters.findIndex(isDashboardDateFilter) >= 0;\n    if (index === -1) {\n        state.filterContextDefinition.filters.push(filter);\n    }\n    else {\n        // If DateFilter is present we have to move index by 1 because index of filter is calculated just for AttributeFilers array\n        const attributeFilterIndex = isDateFilterPresent ? index + 1 : index;\n        state.filterContextDefinition.filters.splice(attributeFilterIndex, 0, filter);\n    }\n};\nconst setAttributeFilterParents = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { filterLocalId, parentFilters } = action.payload;\n    const currentFilterIndex = state.filterContextDefinition.filters.findIndex((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n    invariant(currentFilterIndex >= 0, \"Attempt to set parent of a non-existing filter\");\n    state.filterContextDefinition.filters[currentFilterIndex].attributeFilter.filterElementsBy = [...parentFilters];\n};\nconst clearAttributeFiltersSelection = (state, action) => {\n    const { filterLocalIds } = action.payload;\n    filterLocalIds.forEach((filterLocalId) => {\n        invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n        const currentFilterIndex = state.filterContextDefinition.filters.findIndex((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n        invariant(currentFilterIndex >= 0, \"Attempt to clear selection of a non-existing filter\");\n        const currentFilter = state.filterContextDefinition.filters[currentFilterIndex];\n        const isMultiSelect = currentFilter.attributeFilter.selectionMode !== \"single\";\n        currentFilter.attributeFilter.negativeSelection = isMultiSelect;\n        currentFilter.attributeFilter.attributeElements = isAttributeElementsByRef(currentFilter.attributeFilter.attributeElements)\n            ? { uris: [] }\n            : { values: [] };\n    });\n};\n/**\n * Changes the display form for the filter given by its local identifier.\n */\nconst changeAttributeDisplayForm = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { filterLocalId, displayForm, supportsElementUris } = action.payload;\n    const currentFilterIndex = state.filterContextDefinition.filters.findIndex((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n    invariant(currentFilterIndex >= 0, \"Attempt to set parent of a non-existing filter\");\n    const currentFilter = state.filterContextDefinition.filters[currentFilterIndex];\n    currentFilter.attributeFilter.displayForm = Object.assign({}, displayForm);\n    const isMultiSelect = currentFilter.attributeFilter.selectionMode !== \"single\";\n    if (!supportsElementUris) {\n        currentFilter.attributeFilter.negativeSelection = isMultiSelect;\n        currentFilter.attributeFilter.attributeElements = isAttributeElementsByRef(currentFilter.attributeFilter.attributeElements)\n            ? { uris: [] }\n            : { values: [] };\n    }\n};\n/**\n * Changes the title for the filter given by its local identifier.\n */\nconst changeAttributeTitle = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { filterLocalId, title } = action.payload;\n    const findFilter = state.filterContextDefinition.filters.find((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n    invariant(findFilter, \"Attempt to change title of a non-existing filter\");\n    findFilter.attributeFilter.title = title;\n};\n/**\n * Changes the selection mode for the filter given by its local identifier.\n */\nconst changeSelectionMode = (state, action) => {\n    invariant(state.filterContextDefinition, \"Attempt to edit uninitialized filter context\");\n    const { filterLocalId, selectionMode } = action.payload;\n    const findFilter = state.filterContextDefinition.filters.find((item) => isDashboardAttributeFilter(item) && item.attributeFilter.localIdentifier === filterLocalId);\n    invariant(findFilter, \"Attempt to change selection mode of a non-existing filter\");\n    findFilter.attributeFilter.selectionMode = selectionMode;\n};\n//\n//\n//\nexport const filterContextReducers = {\n    setFilterContext,\n    updateFilterContextIdentity,\n    removeAttributeFilterDisplayForms,\n    addAttributeFilterDisplayForm,\n    addAttributeFilter,\n    removeAttributeFilter,\n    moveAttributeFilter,\n    updateAttributeFilterSelection,\n    setAttributeFilterParents,\n    clearAttributeFiltersSelection,\n    upsertDateFilter,\n    changeAttributeDisplayForm,\n    changeAttributeTitle,\n    changeSelectionMode,\n};\n//# sourceMappingURL=filterContextReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { filterContextReducers } from \"./filterContextReducers.js\";\nimport { filterContextInitialState } from \"./filterContextState.js\";\nconst filterContextSlice = createSlice({\n    name: \"filterContext\",\n    initialState: filterContextInitialState,\n    reducers: filterContextReducers,\n});\nexport const filterContextSliceReducer = filterContextSlice.reducer;\nexport const filterContextActions = filterContextSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const filterContextInitialState = {\n    filterContextDefinition: undefined,\n    filterContextIdentity: undefined,\n    attributeFilterDisplayForms: undefined,\n};\n//# sourceMappingURL=filterContextState.js.map","// (C) 2021-2023 GoodData Corporation\nimport { produce, applyPatches, enablePatches, original, produceWithPatches } from \"immer\";\nimport { invariant } from \"ts-invariant\";\nimport flatMap from \"lodash/flatMap.js\";\n/*\n * Undo relies on immer's patching functionality. It has to be turned on explicitly.\n */\nenablePatches();\n/**\n * Initial value of the undo state.\n */\nexport const InitialUndoState = {\n    _undo: {\n        undoPointer: -1,\n        undoStack: [],\n    },\n};\nfunction unwrapProxy(value) {\n    try {\n        return JSON.parse(JSON.stringify(value));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\nfunction safeOriginal(value) {\n    var _a;\n    /*\n     * original() can return undefined in case the Proxy is corrupted (this happens with immer > 9.0.12 with react-scripts for some reason),\n     * so we fallback to \"poor man's\" getting rid of the Proxy to prevent null references down the line\n     */\n    const originalState = (_a = original(value)) !== null && _a !== void 0 ? _a : unwrapProxy(value);\n    invariant(originalState, \"Unexpected value received as state in undo enhancer (not a draft).\");\n    return originalState; // this cast is necessary because immer typings of original() are wrong (not unwrapping Draft<T> to T)\n}\n/**\n * Decorates a reducer with capability to construct undo and redo patches for the state modification done by the underlying reducer.\n *\n * The essential undo metadata will be stored next to the modified state in the `undo` section.\n *\n * @param originalReducer - reducer to decorate\n */\nexport const withUndo = (originalReducer) => {\n    return (state, action) => {\n        const { undo } = action.payload;\n        const originalState = safeOriginal(state);\n        const [nextState, redoPatches, undoPatches] = produceWithPatches(originalState, (draft) => {\n            originalReducer(draft, action);\n        });\n        return produce(nextState, (draft) => {\n            draft._undo.undoPointer++;\n            draft._undo.undoStack.push({\n                /*\n                 * TODO: Getting this error, struggling to type things correctly\n                 *\n                 * Type 'IDashboardCommand' is not assignable to type 'Draft<Immutable<TCmd>>'\n                 */\n                cmd: undo.cmd,\n                redoPatches,\n                undoPatches,\n            });\n        });\n    };\n};\n/**\n * A generic undo reducer that works with any UndoEnhancedState and the undo stack stored within. When triggered,\n * it will roll the state back to particular point in history.\n *\n * Note that this reducer is not concerned by the transaction boundaries of command processing. It is responsibility\n * of the caller to create an undo action that\n */\nexport const undoReducer = (state, action) => {\n    const { undoDownTo } = action.payload;\n    const originalState = safeOriginal(state);\n    const { _undo } = originalState;\n    // if this happens then the issuer has incorrectly calculated point to which to rollback.\n    invariant(undoDownTo <= _undo.undoStack.length, `invalid undo point ${undoDownTo} while the undo stack has ${_undo.undoStack.length} item(s)`);\n    /*\n     * Get entries to apply, they are on the stack from oldest to the newest. The undo 'unwinds' from the newest up to the\n     * 'undoDownTo' index. Slice everything from that index to the end of stack, then reverse to get the right order.\n     */\n    const entriesToUndo = _undo.undoStack.slice(undoDownTo);\n    entriesToUndo.reverse();\n    /*\n     * Concat all the undo patches from all undo stack entries. Since the entries are ordered from the newest to the\n     * oldest order, this naturally translates to ordering of the patches.\n     */\n    const allPatches = flatMap(entriesToUndo, (entry) => entry.undoPatches);\n    /*\n     * Apply patches to restore the state.\n     */\n    const restoredState = applyPatches(originalState, allPatches);\n    return produce(restoredState, (draft) => {\n        draft._undo.undoPointer = undoDownTo - 1;\n        // see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length#shortening_an_array\n        draft._undo.undoStack.length = undoDownTo;\n    });\n};\n/**\n * A reducer to reset the undo state. This will clear the undo stack (the 'history').\n *\n * @param state - undo enhanced state whose undo to reset\n */\nexport const resetUndoReducer = (state) => {\n    state._undo = InitialUndoState._undo;\n};\n/**\n * Given the undo information stored in state, this function produces an array of commands that can be un-done. The commands\n * are ordered from the newest (0 index) to the oldest.\n *\n * For each command, the function includes pointer to the undo stack up-to which the undo should be done in order\n * to roll back the command's effects.\n */\nexport function createUndoableCommandsMapping(state) {\n    const result = [];\n    let lastCmdUuid = \"\";\n    const seenCmdUuids = new Set();\n    state._undo.undoStack.forEach((entry, idx) => {\n        const { cmd, cmd: { meta: { uuid } = {} }, } = entry;\n        // if this bombs then the command stamping middleware does not do its job properly\n        invariant(uuid);\n        if (lastCmdUuid !== uuid) {\n            // if this bombs then things are getting serious as it means command handlers execute in a way that\n            // the reducer actions from two commands interleave which leads to undo stack containing 'zipped'\n            // entries (entry for cmd A, entry from cmd B, entry from cmd A). Undo will lead to undesired\n            // results.\n            invariant(!seenCmdUuids.has(uuid), \"jackpot winner 🥳\");\n            result.unshift({\n                cmd,\n                firstOccurrenceOnStack: idx,\n            });\n            lastCmdUuid = uuid;\n            seenCmdUuids.add(uuid);\n        }\n    });\n    return result;\n}\n//# sourceMappingURL=undoEnhancer.js.map","// (C) 2021-2023 GoodData Corporation\nimport { InitialUndoState } from \"../_infra/undoEnhancer.js\";\nexport const layoutInitialState = Object.assign({ layout: undefined, stash: {} }, InitialUndoState);\n//# sourceMappingURL=layoutState.js.map","import { invariant } from \"ts-invariant\";\nexport function addArrayElements(arr, index, items) {\n    if (index === 0) {\n        arr.unshift(...items);\n    }\n    else if (index < 0) {\n        arr.push(...items);\n    }\n    else {\n        arr.splice(index, 0, ...items);\n    }\n}\nexport function removeArrayElement(arr, index) {\n    if (index === 0) {\n        return arr.shift();\n    }\n    else if (index < 0) {\n        return arr.pop();\n    }\n    else {\n        const element = arr.splice(index, 1);\n        return element[0];\n    }\n}\nexport function moveArrayElement(arr, fromIndex, toIndex) {\n    const element = removeArrayElement(arr, fromIndex);\n    // if this happens then there is error in the validation (or no validation) before the call\n    invariant(element);\n    addArrayElements(arr, toIndex, [element]);\n}\n/**\n * Given array and a relative index, this function will return the absolute index of that item.\n */\nexport function resolveRelativeIndex(arr, index) {\n    invariant(index < arr.length && index >= -1);\n    return index < 0 ? arr.length - 1 : index;\n}\n/**\n * Given array and a relative index of a new array item to place, this function will return the absolute index\n * where the new item _will be_ placed.\n */\nexport function resolveIndexOfNewItem(arr, index) {\n    // using <= here so that we can add to the last place not only by using -1 by also by using (lastIndex+1)\n    invariant(index === 0 || (index <= arr.length && index >= -1));\n    return index < 0 ? arr.length : index;\n}\n//# sourceMappingURL=arrayOps.js.map","// (C) 2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nexport function setOrDelete(object, prop, value) {\n    if (isEmpty(value)) {\n        delete object[prop];\n    }\n    else {\n        object[prop] = value;\n    }\n}\n//# sourceMappingURL=setOrDelete.js.map","// (C) 2021-2023 GoodData Corporation\nimport { areObjRefsEqual, isInsightWidget, isKpiWidget, } from \"@gooddata/sdk-model\";\nexport function getWidgetCoordinates(layout, ref) {\n    const itemData = getWidgetCoordinatesAndItem(layout, ref);\n    if (itemData) {\n        return {\n            sectionIndex: itemData.sectionIndex,\n            itemIndex: itemData.itemIndex,\n        };\n    }\n    return undefined;\n}\nexport function getWidgetCoordinatesAndItem(layout, ref) {\n    var _a;\n    for (let sectionIndex = 0; sectionIndex < layout.sections.length; sectionIndex++) {\n        const section = layout.sections[sectionIndex];\n        for (let itemIndex = 0; itemIndex < section.items.length; itemIndex++) {\n            const item = section.items[itemIndex];\n            if (areObjRefsEqual((_a = item.widget) === null || _a === void 0 ? void 0 : _a.ref, ref)) {\n                return {\n                    sectionIndex,\n                    itemIndex,\n                    item,\n                };\n            }\n        }\n    }\n    return undefined;\n}\nexport function isItemWithBaseWidget(obj) {\n    const widget = obj.widget;\n    return isInsightWidget(widget) || isKpiWidget(widget);\n}\nexport function resizeInsightWidget(size, sizeInfo) {\n    const { width, height } = sizeInfo;\n    const { heightAsRatio } = size;\n    let { gridWidth = 0, gridHeight } = size;\n    //width\n    if (width.max && gridWidth > width.max) {\n        gridWidth = width.max;\n    }\n    if (width.min && gridWidth < width.min) {\n        gridWidth = width.min;\n    }\n    //height\n    if (!heightAsRatio) {\n        if (height.max && (gridHeight || 0) > height.max) {\n            gridHeight = height.max;\n        }\n        if (height.min && (gridHeight || 0) < height.min) {\n            gridHeight = height.min;\n        }\n    }\n    return {\n        gridWidth,\n        gridHeight,\n        heightAsRatio,\n    };\n}\n//# sourceMappingURL=layoutUtils.js.map","import { invariant } from \"ts-invariant\";\nimport { resetUndoReducer, undoReducer, withUndo } from \"../_infra/undoEnhancer.js\";\nimport { isCustomWidget, } from \"../../types/layoutTypes.js\";\nimport { addArrayElements, moveArrayElement, removeArrayElement } from \"../../utils/arrayOps.js\";\nimport { areObjRefsEqual, isDashboardDateFilterReference, isKpiWidget, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport flatMap from \"lodash/flatMap.js\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nimport { setOrDelete } from \"../../../_staging/objectUtils/setOrDelete.js\";\nimport { getWidgetCoordinatesAndItem, resizeInsightWidget } from \"./layoutUtils.js\";\n//\n//\n//\nconst setLayout = (state, action) => {\n    state.layout = action.payload;\n    resetUndoReducer(state);\n};\n//\n//\n//\nfunction recurseLayoutAndUpdateWidgetIds(layout, mapping) {\n    layout.sections.forEach((section) => {\n        section.items.forEach((item) => {\n            var _a;\n            const widget = item.widget;\n            if (!isInsightWidget(widget) && !isKpiWidget(widget)) {\n                return;\n            }\n            const { updated: newIdentity } = (_a = mapping.get(widget.ref)) !== null && _a !== void 0 ? _a : {};\n            if (!newIdentity) {\n                return;\n            }\n            widget.ref = newIdentity.ref;\n            widget.uri = newIdentity.uri;\n            widget.identifier = newIdentity.identifier;\n        });\n    });\n}\nconst updateWidgetIdentities = (state, action) => {\n    invariant(state.layout);\n    recurseLayoutAndUpdateWidgetIds(state.layout, action.payload);\n};\nconst addSection = (state, action) => {\n    invariant(state.layout);\n    const { index, section, usedStashes } = action.payload;\n    addArrayElements(state.layout.sections, index, [section]);\n    usedStashes.forEach((stashIdentifier) => {\n        delete state.stash[stashIdentifier];\n    });\n};\nconst removeSection = (state, action) => {\n    invariant(state.layout);\n    const { index, stashIdentifier } = action.payload;\n    if (stashIdentifier) {\n        const items = state.layout.sections[index].items;\n        state.stash[stashIdentifier] = items;\n    }\n    removeArrayElement(state.layout.sections, index);\n};\nconst changeSectionHeader = (state, action) => {\n    invariant(state.layout);\n    const { index, header } = action.payload;\n    state.layout.sections[index].header = header;\n};\nconst changeItemsHeight = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, itemIndexes, height } = action.payload;\n    const section = state.layout.sections[sectionIndex];\n    itemIndexes.forEach((itemIndex) => {\n        const item = section.items[itemIndex];\n        if (isCustomWidget(item.widget)) {\n            return;\n        }\n        const newSize = Object.assign(Object.assign({}, item.size), { xl: Object.assign(Object.assign({}, item.size.xl), { gridHeight: height }) });\n        item.size = newSize;\n    });\n};\nconst changeItemWidth = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, itemIndex, width } = action.payload;\n    const section = state.layout.sections[sectionIndex];\n    const item = section.items[itemIndex];\n    const newSize = Object.assign(Object.assign({}, item.size), { xl: Object.assign(Object.assign({}, item.size.xl), { gridWidth: width }) });\n    item.size = newSize;\n};\nconst moveSection = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, toIndex } = action.payload;\n    moveArrayElement(state.layout.sections, sectionIndex, toIndex);\n};\nconst addSectionItems = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, itemIndex, items, usedStashes } = action.payload;\n    const section = state.layout.sections[sectionIndex];\n    invariant(section);\n    addArrayElements(section.items, itemIndex, items);\n    usedStashes.forEach((stashIdentifier) => {\n        delete state.stash[stashIdentifier];\n    });\n};\nconst moveSectionItem = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, itemIndex, toSectionIndex, toItemIndex } = action.payload;\n    const fromSection = state.layout.sections[sectionIndex];\n    const toSection = state.layout.sections[toSectionIndex];\n    invariant(fromSection);\n    invariant(toSection);\n    const item = removeArrayElement(fromSection.items, itemIndex);\n    invariant(item);\n    addArrayElements(toSection.items, toItemIndex, [item]);\n};\nconst removeSectionItem = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, itemIndex, stashIdentifier } = action.payload;\n    const section = state.layout.sections[sectionIndex];\n    invariant(section);\n    const item = removeArrayElement(section.items, itemIndex);\n    invariant(item);\n    if (stashIdentifier) {\n        state.stash[stashIdentifier] = [item];\n    }\n};\nconst replaceSectionItem = (state, action) => {\n    invariant(state.layout);\n    const { sectionIndex, itemIndex, newItems, stashIdentifier, usedStashes } = action.payload;\n    const section = state.layout.sections[sectionIndex];\n    invariant(section);\n    const item = removeArrayElement(section.items, itemIndex);\n    invariant(item);\n    if (stashIdentifier) {\n        state.stash[stashIdentifier] = [item];\n    }\n    addArrayElements(section.items, itemIndex, newItems);\n    usedStashes.forEach((usedStash) => {\n        /*\n         * It is a valid case that the new item is taken from a stash and the replaced item is then\n         * used to replace the same stash.\n         */\n        if (stashIdentifier !== undefined && usedStash === stashIdentifier) {\n            return;\n        }\n        delete state.stash[usedStash];\n    });\n};\n//\n// Layout-widget specific reducers\n//\nconst getWidgetByRef = (state, widgetRef) => {\n    var _a;\n    const allWidgets = flatMap((_a = state === null || state === void 0 ? void 0 : state.layout) === null || _a === void 0 ? void 0 : _a.sections, (section) => section.items.map((item) => item.widget));\n    const widgets = allWidgets.filter(Boolean);\n    const widgetMap = newMapForObjectWithIdentity(widgets);\n    return widgetMap.get(widgetRef);\n};\nconst replaceWidgetHeader = (state, action) => {\n    var _a;\n    invariant(state.layout);\n    const { header, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    // this means command handler did not correctly validate that the widget exists before dispatching the\n    // reducer action\n    invariant(widget && (isKpiWidget(widget) || isInsightWidget(widget)));\n    widget.title = (_a = header.title) !== null && _a !== void 0 ? _a : \"\";\n};\nconst replaceWidgetDescription = (state, action) => {\n    var _a;\n    invariant(state.layout);\n    const { description, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    // this means command handler did not correctly validate that the widget exists before dispatching the\n    // reducer action\n    invariant(widget && (isKpiWidget(widget) || isInsightWidget(widget)));\n    widget.description = (_a = description.description) !== null && _a !== void 0 ? _a : \"\";\n};\nconst replaceWidgetDrill = (state, action) => {\n    invariant(state.layout);\n    const { drillDefinitions, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    // this means command handler did not correctly validate that the widget exists before dispatching the\n    // reducer action\n    invariant(widget && (isKpiWidget(widget) || isInsightWidget(widget)));\n    widget.drills = drillDefinitions !== null && drillDefinitions !== void 0 ? drillDefinitions : [];\n};\nconst replaceInsightWidgetVisProperties = (state, action) => {\n    invariant(state.layout);\n    const { properties, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && isInsightWidget(widget));\n    setOrDelete(widget, \"properties\", properties);\n};\nconst replaceInsightWidgetVisConfiguration = (state, action) => {\n    invariant(state.layout);\n    const { config, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && isInsightWidget(widget));\n    setOrDelete(widget, \"configuration\", config);\n};\nconst replaceInsightWidgetInsight = (state, action) => {\n    invariant(state.layout, \"State of layout is empty\");\n    const { insightRef, properties, ref, header, newSize } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    const data = getWidgetCoordinatesAndItem(state.layout, ref);\n    invariant(isInsightWidget(widget), \"IInsightWidget is missing in state\");\n    if (properties) {\n        widget.properties = properties;\n    }\n    if (header === null || header === void 0 ? void 0 : header.title) {\n        widget.title = header.title;\n    }\n    widget.insight = insightRef;\n    if (newSize && (data === null || data === void 0 ? void 0 : data.item)) {\n        data.item.size.xl = resizeInsightWidget(data.item.size.xl, newSize);\n    }\n};\nconst replaceWidgetFilterSettings = (state, action) => {\n    invariant(state.layout);\n    const { ignoreDashboardFilters, dateDataSet, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && (isInsightWidget(widget) || isKpiWidget(widget)));\n    widget.dateDataSet = dateDataSet;\n    widget.ignoreDashboardFilters = ignoreDashboardFilters !== null && ignoreDashboardFilters !== void 0 ? ignoreDashboardFilters : [];\n};\nconst removeIgnoredAttributeFilter = (state, action) => {\n    invariant(state.layout);\n    const { displayFormRefs } = action.payload;\n    state.layout.sections.forEach((section) => {\n        section.items.forEach((item) => {\n            const widget = item.widget;\n            if (isInsightWidget(widget) || isKpiWidget(widget)) {\n                const updatedFilters = widget.ignoreDashboardFilters.filter((filter) => {\n                    if (isDashboardDateFilterReference(filter)) {\n                        return true;\n                    }\n                    return (displayFormRefs.find((removed) => areObjRefsEqual(removed, filter.displayForm)) ===\n                        undefined);\n                });\n                widget.ignoreDashboardFilters = updatedFilters;\n            }\n        });\n    });\n};\nconst replaceWidgetDateDataset = (state, action) => {\n    invariant(state.layout);\n    const { dateDataSet, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && (isInsightWidget(widget) || isKpiWidget(widget)));\n    widget.dateDataSet = dateDataSet;\n};\nconst replaceKpiWidgetMeasure = (state, action) => {\n    invariant(state.layout);\n    const { ref, measureRef } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && isKpiWidget(widget));\n    widget.kpi.metric = measureRef;\n};\nconst replaceKpiWidgetComparison = (state, action) => {\n    invariant(state.layout);\n    const { ref, comparisonType, comparisonDirection } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && isKpiWidget(widget));\n    widget.kpi.comparisonType = comparisonType;\n    widget.kpi.comparisonDirection = comparisonDirection;\n};\nconst replaceKpiWidgetDrill = (state, action) => {\n    invariant(state.layout);\n    const { ref, drill } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && isKpiWidget(widget));\n    widget.drills = drill ? [drill] : [];\n};\nconst replaceKpiWidgetConfiguration = (state, action) => {\n    invariant(state.layout);\n    const { config, ref } = action.payload;\n    const widget = getWidgetByRef(state, ref);\n    invariant(widget && isKpiWidget(widget));\n    setOrDelete(widget, \"configuration\", config);\n};\nexport const layoutReducers = {\n    setLayout,\n    updateWidgetIdentities,\n    removeIgnoredAttributeFilter,\n    addSection: withUndo(addSection),\n    removeSection: withUndo(removeSection),\n    moveSection: withUndo(moveSection),\n    changeSectionHeader: withUndo(changeSectionHeader),\n    addSectionItems: withUndo(addSectionItems),\n    moveSectionItem: withUndo(moveSectionItem),\n    removeSectionItem: withUndo(removeSectionItem),\n    replaceSectionItem: withUndo(replaceSectionItem),\n    replaceWidgetHeader: withUndo(replaceWidgetHeader),\n    replaceWidgetDescription: withUndo(replaceWidgetDescription),\n    replaceWidgetDrillWithoutUndo: replaceWidgetDrill,\n    replaceWidgetDrills: withUndo(replaceWidgetDrill),\n    replaceInsightWidgetVisProperties: withUndo(replaceInsightWidgetVisProperties),\n    replaceInsightWidgetVisConfiguration: withUndo(replaceInsightWidgetVisConfiguration),\n    replaceInsightWidgetInsight: withUndo(replaceInsightWidgetInsight),\n    replaceWidgetFilterSettings: withUndo(replaceWidgetFilterSettings),\n    replaceWidgetDateDataset: withUndo(replaceWidgetDateDataset),\n    replaceKpiWidgetMeasure: withUndo(replaceKpiWidgetMeasure),\n    replaceKpiWidgetComparison: withUndo(replaceKpiWidgetComparison),\n    replaceKpiWidgetDrillWithoutUndo: replaceKpiWidgetDrill,\n    replaceKpiWidgetDrill: withUndo(replaceKpiWidgetDrill),\n    replaceKpiWidgetConfiguration: withUndo(replaceKpiWidgetConfiguration),\n    undoLayout: undoReducer,\n    clearLayoutHistory: resetUndoReducer,\n    changeItemsHeight: changeItemsHeight,\n    changeItemWidth: changeItemWidth,\n};\n//# sourceMappingURL=layoutReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { layoutInitialState } from \"./layoutState.js\";\nimport { layoutReducers } from \"./layoutReducers.js\";\nconst layoutSlice = createSlice({\n    name: \"layout\",\n    initialState: layoutInitialState,\n    reducers: layoutReducers,\n});\nexport const layoutSliceReducer = layoutSlice.reducer;\nexport const layoutActions = layoutSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { loadingInitialState } from \"./loadingState.js\";\nimport { loadingReducers } from \"./loadingReducers.js\";\nconst loadingSlice = createSlice({\n    name: \"loadingSlice\",\n    initialState: loadingInitialState,\n    reducers: loadingReducers,\n});\nexport const loadingSliceReducer = loadingSlice.reducer;\nexport const loadingActions = loadingSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const loadingInitialState = { loading: false };\n//# sourceMappingURL=loadingState.js.map","const setLoadingStart = (state) => {\n    state.loading = true;\n    state.result = undefined;\n    state.error = undefined;\n};\nconst setLoadingSuccess = (state) => {\n    state.loading = false;\n    state.result = true;\n    state.error = undefined;\n};\nconst setLoadingError = (state, action) => {\n    state.loading = false;\n    state.result = false;\n    state.error = action.payload;\n};\nexport const loadingReducers = {\n    setLoadingStart,\n    setLoadingSuccess,\n    setLoadingError,\n};\n//# sourceMappingURL=loadingReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { savingInitialState } from \"./savingState.js\";\nimport { savingReducers } from \"./savingReducers.js\";\nconst savingSlice = createSlice({\n    name: \"savingSlice\",\n    initialState: savingInitialState,\n    reducers: savingReducers,\n});\nexport const savingSliceReducer = savingSlice.reducer;\nexport const savingActions = savingSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const savingInitialState = { saving: false };\n//# sourceMappingURL=savingState.js.map","const setSavingStart = (state) => {\n    state.saving = true;\n    state.result = undefined;\n    state.error = undefined;\n};\nconst setSavingSuccess = (state) => {\n    state.saving = false;\n    state.result = true;\n    state.error = undefined;\n};\nconst setSavingError = (state, action) => {\n    state.saving = false;\n    state.result = false;\n    state.error = action.payload;\n};\nexport const savingReducers = {\n    setSavingStart,\n    setSavingSuccess,\n    setSavingError,\n};\n//# sourceMappingURL=savingReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { insightRef, serializeObjRef } from \"@gooddata/sdk-model\";\nexport const insightsAdapter = createEntityAdapter({\n    selectId: (insight) => serializeObjRef(insightRef(insight)),\n});\n//# sourceMappingURL=insightsEntityAdapter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { insightsAdapter } from \"./insightsEntityAdapter.js\";\nconst insightsSlice = createSlice({\n    name: \"insights\",\n    initialState: insightsAdapter.getInitialState(),\n    reducers: {\n        setInsights: insightsAdapter.setAll,\n        addInsights: insightsAdapter.addMany,\n        upsertInsight: insightsAdapter.upsertOne,\n    },\n});\nexport const insightsSliceReducer = insightsSlice.reducer;\nexport const insightsActions = insightsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021 GoodData Corporation\nimport { put } from \"redux-saga/effects\";\n/**\n * Creates an effect which will dispatch the provided event. Yield whatever this function returns\n *\n * @param event - event to dispatch\n */\nexport function dispatchDashboardEvent(event) {\n    return put(event);\n}\n//# sourceMappingURL=eventDispatcher.js.map","export const granularityIntlCodes = {\n    \"GDC.time.minute\": \"minute\",\n    \"GDC.time.hour\": \"hour\",\n    \"GDC.time.date\": \"day\",\n    \"GDC.time.week_us\": \"week\",\n    \"GDC.time.month\": \"month\",\n    \"GDC.time.quarter\": \"quarter\",\n    \"GDC.time.year\": \"year\",\n};\n//# sourceMappingURL=i18n.js.map","// (C) 2019-2022 GoodData Corporation\n// date format used on server\nexport const platformDateFormat = \"YYYY-MM-DD\";\nexport const platformDateTimeFormat = \"YYYY-MM-DD HH:mm\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const TIME_FORMAT_WITH_SEPARATOR = \", HH:mm\";\nexport const DAY_START_TIME = \"00:00\";\nexport const DAY_END_TIME = \"23:59\";\n// default date format used on client\nexport const DEFAULT_DATE_FORMAT = \"MM/dd/yyyy\";\nexport const DEFAULT_DATE_FORMAT_WITH_TIME = DEFAULT_DATE_FORMAT + TIME_FORMAT_WITH_SEPARATOR;\n//# sourceMappingURL=Platform.js.map","// (C) 2007-2019 GoodData Corporation\nimport moment from \"moment\";\nimport { platformDateFormat } from \"./Platform.js\";\n/**\n * The default set of date filter options.\n *\n * @public\n */\nexport const defaultDateFilterOptions = {\n    allTime: {\n        localIdentifier: \"ALL_TIME\",\n        type: \"allTime\",\n        name: \"\",\n        visible: true,\n    },\n    absoluteForm: {\n        localIdentifier: \"ABSOLUTE_FORM\",\n        type: \"absoluteForm\",\n        from: moment().subtract(1, \"month\").startOf(\"day\").format(platformDateFormat),\n        to: moment().startOf(\"day\").format(platformDateFormat),\n        name: \"\",\n        visible: true,\n    },\n    absolutePreset: [],\n    relativeForm: {\n        localIdentifier: \"RELATIVE_FORM\",\n        type: \"relativeForm\",\n        granularity: \"GDC.time.month\",\n        from: undefined,\n        to: undefined,\n        name: \"\",\n        visible: true,\n    },\n    relativePreset: {\n        \"GDC.time.date\": [\n            {\n                from: -6,\n                to: 0,\n                granularity: \"GDC.time.date\",\n                localIdentifier: \"LAST_7_DAYS\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -29,\n                to: 0,\n                granularity: \"GDC.time.date\",\n                localIdentifier: \"LAST_30_DAYS\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -89,\n                to: 0,\n                granularity: \"GDC.time.date\",\n                localIdentifier: \"LAST_90_DAYS\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n        ],\n        \"GDC.time.month\": [\n            {\n                from: 0,\n                to: 0,\n                granularity: \"GDC.time.month\",\n                localIdentifier: \"THIS_MONTH\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -1,\n                to: -1,\n                granularity: \"GDC.time.month\",\n                localIdentifier: \"LAST_MONTH\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -11,\n                to: 0,\n                granularity: \"GDC.time.month\",\n                localIdentifier: \"LAST_12_MONTHS\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n        ],\n        \"GDC.time.quarter\": [\n            {\n                from: 0,\n                to: 0,\n                granularity: \"GDC.time.quarter\",\n                localIdentifier: \"THIS_QUARTER\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -1,\n                to: -1,\n                granularity: \"GDC.time.quarter\",\n                localIdentifier: \"LAST_QUARTER\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -3,\n                to: 0,\n                granularity: \"GDC.time.quarter\",\n                localIdentifier: \"LAST_4_QUARTERS\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n        ],\n        \"GDC.time.year\": [\n            {\n                from: 0,\n                to: 0,\n                granularity: \"GDC.time.year\",\n                localIdentifier: \"THIS_YEAR\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n            {\n                from: -1,\n                to: -1,\n                granularity: \"GDC.time.year\",\n                localIdentifier: \"LAST_YEAR\",\n                type: \"relativePreset\",\n                visible: true,\n                name: \"\",\n            },\n        ],\n    },\n};\n//# sourceMappingURL=config.js.map","// (C) 2007-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nconst dateFilterGranularity = [\n    \"GDC.time.minute\",\n    \"GDC.time.hour\",\n    \"GDC.time.date\",\n    \"GDC.time.week_us\",\n    \"GDC.time.month\",\n    \"GDC.time.quarter\",\n    \"GDC.time.year\",\n];\n/**\n * Type-guard testing whether the provided object is an instance of {@link DateFilterGranularity}.\n * @alpha\n */\nexport const isDateFilterGranularity = (obj) => !isEmpty(obj) && dateFilterGranularity.some((granularity) => granularity === obj);\n/**\n * Type-guard testing whether the provided object is an instance of {@link IAllTimeDateFilterOption}.\n * @alpha\n */\nexport const isAllTimeDateFilterOption = (obj) => !isEmpty(obj) && obj.type === \"allTime\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IAbsoluteDateFilterForm}.\n * @alpha\n */\nexport const isAbsoluteDateFilterForm = (obj) => !isEmpty(obj) && obj.type === \"absoluteForm\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IAbsoluteDateFilterPreset}.\n * @alpha\n */\nexport const isAbsoluteDateFilterPreset = (obj) => !isEmpty(obj) && obj.type === \"absolutePreset\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IRelativeDateFilterForm}.\n * @alpha\n */\nexport const isRelativeDateFilterForm = (obj) => !isEmpty(obj) && obj.type === \"relativeForm\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IRelativeDateFilterPreset}.\n * @alpha\n */\nexport const isRelativeDateFilterPreset = (obj) => !isEmpty(obj) && obj.type === \"relativePreset\";\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport moment from \"moment\";\nimport isString from \"lodash/isString.js\";\nimport isDate from \"lodash/isDate.js\";\nimport { platformDateFormat, platformDateTimeFormat } from \"../constants/Platform.js\";\nexport const convertDateToPlatformDateString = (date, dateFormat = platformDateFormat) => (isDate(date) ? moment(date).local().format(dateFormat) : date);\nexport const convertPlatformDateStringToDate = (platformDate) => {\n    if (!isString(platformDate)) {\n        return platformDate;\n    }\n    /**\n     * Create date object with correct day from string\n     * Example: \"2019-11-28\" with local time zone is GTM-0600\n     *   local time is \"2019-11-27T18:00:00 GTM-0600\"\n     *   after converting the local time will be \"2019-11-28T00:00:00 GTM-0600\"\n     *\n     * Example: \"2019-11-28\" with local time zone is GTM+0600\n     *   local time is \"2019-11-28T06:00:00 GTM+0600\"\n     *   after converting the local time will be \"2019-11-28T00:00:00 GTM+0600\"\n     */\n    // unfortunately moment does not correctly export date via toDate method (always uses system time)\n    // therefore it needs to be created via standard Date object to satisfy unit tests\n    return new Date(moment(platformDate, platformDateTimeFormat).format());\n};\n//# sourceMappingURL=DateConversions.js.map","// (C) 2019-2023 GoodData Corporation\nimport { defineMessages } from \"react-intl\";\n//NOTE: Follow up ticket for move all messages: https://gooddata.atlassian.net/browse/FET-1050\nexport const messages = defineMessages({\n    minute: { id: \"filters.granularity.minutes\" },\n    hour: { id: \"filters.granularity.hours\" },\n    day: { id: \"filters.granularity.days\" },\n    week: { id: \"filters.granularity.weeks\" },\n    month: { id: \"filters.granularity.months\" },\n    quarter: { id: \"filters.granularity.quarters\" },\n    year: { id: \"filters.granularity.years\" },\n    allTimeExcluded: { id: \"filters.allTime.excludeCurrentPeriod\" },\n    minuteExcluded: { id: \"filters.minute.excludeCurrentPeriod\" },\n    hourExcluded: { id: \"filters.hour.excludeCurrentPeriod\" },\n    dayExcluded: { id: \"filters.day.excludeCurrentPeriod\" },\n    weekExcluded: { id: \"filters.week.excludeCurrentPeriod\" },\n    monthExcluded: { id: \"filters.month.excludeCurrentPeriod\" },\n    quarterExcluded: { id: \"filters.quarter.excludeCurrentPeriod\" },\n    yearExcluded: { id: \"filters.year.excludeCurrentPeriod\" },\n    minute_history: { id: \"filters.floatingRange.option.minute.offset.history\" },\n    minute_today: { id: \"filters.floatingRange.option.minute.offset.today\" },\n    minute_future: { id: \"filters.floatingRange.option.minute.offset.future\" },\n    hour_history: { id: \"filters.floatingRange.option.hour.offset.history\" },\n    hour_today: { id: \"filters.floatingRange.option.hour.offset.today\" },\n    hour_future: { id: \"filters.floatingRange.option.hour.offset.future\" },\n    day_history: { id: \"filters.floatingRange.option.day.offset.history\" },\n    day_today: { id: \"filters.floatingRange.option.day.offset.today\" },\n    day_future: { id: \"filters.floatingRange.option.day.offset.future\" },\n    week_history: { id: \"filters.floatingRange.option.week.offset.history\" },\n    week_today: { id: \"filters.floatingRange.option.week.offset.today\" },\n    week_future: { id: \"filters.floatingRange.option.week.offset.future\" },\n    month_history: { id: \"filters.floatingRange.option.month.offset.history\" },\n    month_today: { id: \"filters.floatingRange.option.month.offset.today\" },\n    month_future: { id: \"filters.floatingRange.option.month.offset.future\" },\n    quarter_history: { id: \"filters.floatingRange.option.quarter.offset.history\" },\n    quarter_today: { id: \"filters.floatingRange.option.quarter.offset.today\" },\n    quarter_future: { id: \"filters.floatingRange.option.quarter.offset.future\" },\n    year_history: { id: \"filters.floatingRange.option.year.offset.history\" },\n    year_today: { id: \"filters.floatingRange.option.year.offset.today\" },\n    year_future: { id: \"filters.floatingRange.option.year.offset.future\" },\n    \"GDC.time.minute\": { id: \"filters.minute.title\" },\n    \"GDC.time.hour\": { id: \"filters.hour.title\" },\n    \"GDC.time.date\": { id: \"filters.day.title\" },\n    \"GDC.time.week_us\": { id: \"filters.week.title\" },\n    \"GDC.time.month\": { id: \"filters.month.title\" },\n    \"GDC.time.quarter\": { id: \"filters.quarter.title\" },\n    \"GDC.time.year\": { id: \"filters.year.title\" },\n    top: { id: \"rankingFilter.top\" },\n    bottom: { id: \"rankingFilter.bottom\" },\n    topWithAttr: { id: \"rankingFilter.preview.top_with_attribute\" },\n    topWithoutAttr: { id: \"rankingFilter.preview.top_without_attribute\" },\n    bottomWithAttr: { id: \"rankingFilter.preview.bottom_with_attribute\" },\n    bottomWithoutAttr: { id: \"rankingFilter.preview.bottom_without_attribute\" },\n    ALL: { id: \"mvf.operator.all\" },\n    GREATER_THAN: { id: \"mvf.operator.greaterThan\" },\n    GREATER_THAN_OR_EQUAL_TO: { id: \"mvf.operator.greaterThanOrEqualTo\" },\n    LESS_THAN: { id: \"mvf.operator.lessThan\" },\n    LESS_THAN_OR_EQUAL_TO: { id: \"mvf.operator.lessThanOrEqualTo\" },\n    EQUAL_TO: { id: \"mvf.operator.equalTo\" },\n    NOT_EQUAL_TO: { id: \"mvf.operator.notEqualTo\" },\n    BETWEEN: { id: \"mvf.operator.between\" },\n    NOT_BETWEEN: { id: \"mvf.operator.notBetween\" },\n    incorrectFormat: { id: \"filters.staticPeriod.incorrectFormat\" },\n    endDateBeforeStartDate: { id: \"filters.staticPeriod.endDateBeforeStartDate\" },\n    thisMinute: { id: \"filters.thisMinute.title\" },\n    lastMinute: { id: \"filters.lastMinute.title\" },\n    nextMinute: { id: \"filters.nextMinute.title\" },\n    thisHour: { id: \"filters.thisHour.title\" },\n    lastHour: { id: \"filters.lastHour.title\" },\n    nextHour: { id: \"filters.nextHour.title\" },\n    thisDay: { id: \"filters.thisDay.title\" },\n    lastDay: { id: \"filters.lastDay.title\" },\n    nextDay: { id: \"filters.nextDay.title\" },\n    thisWeek: { id: \"filters.thisWeek.title\" },\n    lastWeek: { id: \"filters.lastWeek.title\" },\n    nextWeek: { id: \"filters.nextWeek.title\" },\n    thisMonth: { id: \"filters.thisMonth.title\" },\n    lastMonth: { id: \"filters.lastMonth.title\" },\n    nextMonth: { id: \"filters.nextMonth.title\" },\n    thisQuarter: { id: \"filters.thisQuarter.title\" },\n    lastQuarter: { id: \"filters.lastQuarter.title\" },\n    nextQuarter: { id: \"filters.nextQuarter.title\" },\n    thisYear: { id: \"filters.thisYear.title\" },\n    lastYear: { id: \"filters.lastYear.title\" },\n    nextYear: { id: \"filters.nextYear.title\" },\n    lastNMinutes: { id: \"filters.lastNMinutes\" },\n    lastNHours: { id: \"filters.lastNHours\" },\n    lastNDays: { id: \"filters.lastNDays\" },\n    lastNWeeks: { id: \"filters.lastNWeeks\" },\n    lastNMonths: { id: \"filters.lastNMonths\" },\n    lastNQuarters: { id: \"filters.lastNQuarters\" },\n    lastNYears: { id: \"filters.lastNYears\" },\n    nextNMinutes: { id: \"filters.nextNMinutes\" },\n    nextNHours: { id: \"filters.nextNHours\" },\n    nextNDays: { id: \"filters.nextNDays\" },\n    nextNWeeks: { id: \"filters.nextNWeeks\" },\n    nextNMonths: { id: \"filters.nextNMonths\" },\n    nextNQuarters: { id: \"filters.nextNQuarters\" },\n    nextNYears: { id: \"filters.nextNYears\" },\n    \"minutes.past\": { id: \"filters.interval.minutes.past\" },\n    \"minutes.past.sameValue\": { id: \"filters.interval.minutes.past.sameValue\" },\n    \"minutes.future\": { id: \"filters.interval.minutes.future\" },\n    \"minutes.future.sameValue\": { id: \"filters.interval.minutes.future.sameValue\" },\n    \"minutes.mixed\": { id: \"filters.interval.minutes.mixed\" },\n    \"hours.past\": { id: \"filters.interval.hours.past\" },\n    \"hours.past.sameValue\": { id: \"filters.interval.hours.past.sameValue\" },\n    \"hours.future\": { id: \"filters.interval.hours.future\" },\n    \"hours.future.sameValue\": { id: \"filters.interval.hours.future.sameValue\" },\n    \"hours.mixed\": { id: \"filters.interval.hours.mixed\" },\n    \"days.past\": { id: \"filters.interval.days.past\" },\n    \"days.past.sameValue\": { id: \"filters.interval.days.past.sameValue\" },\n    \"days.future\": { id: \"filters.interval.days.future\" },\n    \"days.future.sameValue\": { id: \"filters.interval.days.future.sameValue\" },\n    \"days.mixed\": { id: \"filters.interval.days.mixed\" },\n    \"weeks.past\": { id: \"filters.interval.weeks.past\" },\n    \"weeks.past.sameValue\": { id: \"filters.interval.weeks.past.sameValue\" },\n    \"weeks.future\": { id: \"filters.interval.weeks.future\" },\n    \"weeks.future.sameValue\": { id: \"filters.interval.weeks.future.sameValue\" },\n    \"weeks.mixed\": { id: \"filters.interval.weeks.mixed\" },\n    \"months.past\": { id: \"filters.interval.months.past\" },\n    \"months.past.sameValue\": { id: \"filters.interval.months.past.sameValue\" },\n    \"months.future\": { id: \"filters.interval.months.future\" },\n    \"months.future.sameValue\": { id: \"filters.interval.months.future.sameValue\" },\n    \"months.mixed\": { id: \"filters.interval.months.mixed\" },\n    \"quarters.past\": { id: \"filters.interval.quarters.past\" },\n    \"quarters.past.sameValue\": { id: \"filters.interval.quarters.past.sameValue\" },\n    \"quarters.future\": { id: \"filters.interval.quarters.future\" },\n    \"quarters.future.sameValue\": { id: \"filters.interval.quarters.future.sameValue\" },\n    \"quarters.mixed\": { id: \"filters.interval.quarters.mixed\" },\n    \"years.past\": { id: \"filters.interval.years.past\" },\n    \"years.past.sameValue\": { id: \"filters.interval.years.past.sameValue\" },\n    \"years.future\": { id: \"filters.interval.years.future\" },\n    \"years.future.sameValue\": { id: \"filters.interval.years.future.sameValue\" },\n    \"years.mixed\": { id: \"filters.interval.years.mixed\" },\n});\n//# sourceMappingURL=locales.js.map","import { isAbsoluteDateFilterForm, isRelativeDateFilterForm } from \"@gooddata/sdk-model\";\nimport { convertPlatformDateStringToDate } from \"../utils/DateConversions.js\";\nimport { messages } from \"../../locales.js\";\nconst validateVisibility = (filterOption) => {\n    const errors = {};\n    if (!filterOption.visible) {\n        // indicate that the Apply button should be disabled, it makes no sense for hidden forms\n        errors[filterOption.type] = {};\n    }\n    return errors;\n};\nconst validateAbsoluteForm = (filterOption) => {\n    const errors = validateVisibility(filterOption);\n    const absoluteFormKeys = [\"from\", \"to\"];\n    absoluteFormKeys.forEach((field) => {\n        if (!filterOption[field]) {\n            errors.absoluteForm = errors.absoluteForm || {};\n            // null means empty, undefined means invalid\n            // this is dictated by react-day-picker that returns undefined on invalid values\n            if (filterOption[field] === undefined) {\n                errors.absoluteForm[field] = messages.incorrectFormat.id;\n            }\n        }\n    });\n    if (!errors.absoluteForm) {\n        const start = convertPlatformDateStringToDate(filterOption.from);\n        const end = convertPlatformDateStringToDate(filterOption.to);\n        if (start > end) {\n            errors.absoluteForm = { to: messages.endDateBeforeStartDate.id };\n        }\n    }\n    return errors.absoluteForm ? errors : {};\n};\nconst validateRelativeForm = (filterOption) => {\n    const errors = validateVisibility(filterOption);\n    const relativeFormKeys = [\"from\", \"to\"];\n    relativeFormKeys.forEach((field) => {\n        if (filterOption[field] === undefined) {\n            errors.relativeForm = errors.relativeForm || {};\n            // There is no validation message as we have no place to show it\n        }\n    });\n    return errors.relativeForm ? errors : {};\n};\nexport const validateFilterOption = (filterOption) => {\n    if (isAbsoluteDateFilterForm(filterOption)) {\n        return validateAbsoluteForm(filterOption);\n    }\n    else if (isRelativeDateFilterForm(filterOption)) {\n        return validateRelativeForm(filterOption);\n    }\n    else {\n        return validateVisibility(filterOption);\n    }\n};\n//# sourceMappingURL=OptionValidation.js.map","// (C) 2007-2022 GoodData Corporation\nimport { isAllTimeDateFilterOption, isAbsoluteDateFilterForm, isAbsoluteDateFilterPreset, isRelativeDateFilterForm, isRelativeDateFilterPreset, } from \"@gooddata/sdk-model\";\n/**\n * Returns the date filter option with excludeCurrentPeriod applied if applicable.\n */\nexport const applyExcludeCurrentPeriod = (dateFilterOption, excludeCurrentPeriod) => {\n    if (!dateFilterOption || !excludeCurrentPeriod) {\n        return dateFilterOption;\n    }\n    if (isAllTimeDateFilterOption(dateFilterOption) ||\n        isAbsoluteDateFilterForm(dateFilterOption) ||\n        isAbsoluteDateFilterPreset(dateFilterOption) ||\n        isRelativeDateFilterForm(dateFilterOption)) {\n        return dateFilterOption;\n    }\n    else if (isRelativeDateFilterPreset(dateFilterOption)) {\n        const { from, to } = dateFilterOption;\n        const shouldExcludeCurrent = to === 0 && from < to;\n        return Object.assign(Object.assign({}, dateFilterOption), { from: shouldExcludeCurrent ? dateFilterOption.from - 1 : dateFilterOption.from, to: shouldExcludeCurrent ? -1 : to });\n    }\n    else {\n        throw new Error(\"Unknown date filter value type\");\n    }\n};\nexport const canExcludeCurrentPeriod = (dateFilterOption) => {\n    if (!dateFilterOption.visible) {\n        return false;\n    }\n    if (isRelativeDateFilterPreset(dateFilterOption)) {\n        return dateFilterOption.to === 0 && dateFilterOption.from < dateFilterOption.to;\n    }\n    return false;\n};\n//# sourceMappingURL=PeriodExclusion.js.map","// (C) 2007-2022 GoodData Corporation\nimport { isAbsoluteDateFilterForm, isAbsoluteDateFilterPreset, isRelativeDateFilterForm, isRelativeDateFilterPreset, } from \"@gooddata/sdk-model\";\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IUiRelativeDateFilterForm}.\n * @public\n */\nexport const isUiRelativeDateFilterForm = (obj) => {\n    return !isEmpty(obj) && obj.type === \"relativeForm\";\n};\n/**\n * Type-guard testing whether the provided object is an instance of {@link AbsoluteDateFilterOption}.\n * @public\n */\nexport const isAbsoluteDateFilterOption = (obj) => isAbsoluteDateFilterForm(obj) || isAbsoluteDateFilterPreset(obj);\n/**\n * Type-guard testing whether the provided object is an instance of {@link RelativeDateFilterOption}.\n * @public\n */\nexport const isRelativeDateFilterOption = (obj) => isRelativeDateFilterForm(obj) || isRelativeDateFilterPreset(obj);\n//# sourceMappingURL=index.js.map","// (C) 2019-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { isUiRelativeDateFilterForm, } from \"../interfaces/index.js\";\nimport { isRelativeDateFilterPreset, } from \"@gooddata/sdk-model\";\nexport function getDateFilterOptionGranularity(dateFilterOption) {\n    return isUiRelativeDateFilterForm(dateFilterOption) || isRelativeDateFilterPreset(dateFilterOption)\n        ? dateFilterOption.granularity\n        : undefined;\n}\nfunction isDateFilterOptionVisible(option) {\n    return option === null || option === void 0 ? void 0 : option.visible;\n}\nfunction pickDateFilterOptionIfVisible(option) {\n    return isDateFilterOptionVisible(option) ? option : undefined;\n}\nfunction filterVisibleRelativePresets(relativePreset) {\n    return Object.keys(relativePreset).reduce((filtered, granularity) => {\n        const presetsOfGranularity = relativePreset[granularity];\n        const visiblePresetsOfGranularity = presetsOfGranularity.filter(isDateFilterOptionVisible);\n        if (visiblePresetsOfGranularity.length) {\n            filtered[granularity] = visiblePresetsOfGranularity;\n        }\n        return filtered;\n    }, {});\n}\nfunction removeEmptyKeysFromDateFilterOptions(dateFilterOptions) {\n    const { absoluteForm, absolutePreset, allTime, relativeForm, relativePreset } = dateFilterOptions;\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (allTime && { allTime })), (absoluteForm && { absoluteForm })), (!isEmpty(absolutePreset) && { absolutePreset })), (relativeForm && { relativeForm })), (!isEmpty(relativePreset) && { relativePreset }));\n}\n/**\n * Returns dateFilterOptions with only items that have visible set to true.\n *\n * @param dateFilterOptions - options to filter\n * @public\n */\nexport function filterVisibleDateFilterOptions(dateFilterOptions) {\n    var _a;\n    const allTime = pickDateFilterOptionIfVisible(dateFilterOptions.allTime);\n    const absoluteForm = pickDateFilterOptionIfVisible(dateFilterOptions.absoluteForm);\n    const relativeForm = pickDateFilterOptionIfVisible(dateFilterOptions.relativeForm);\n    const absolutePreset = (_a = dateFilterOptions.absolutePreset) === null || _a === void 0 ? void 0 : _a.filter(isDateFilterOptionVisible);\n    const relativePreset = dateFilterOptions.relativePreset && filterVisibleRelativePresets(dateFilterOptions.relativePreset);\n    return removeEmptyKeysFromDateFilterOptions({\n        allTime,\n        absoluteForm,\n        absolutePreset,\n        relativeForm,\n        relativePreset,\n    });\n}\nfunction sanitizePreset(option) {\n    if (option.from > option.to) {\n        return Object.assign(Object.assign({}, option), { from: option.to, to: option.from });\n    }\n    return option;\n}\nfunction sanitizeRelativePresets(relativePreset) {\n    return Object.keys(relativePreset).reduce((filtered, granularity) => {\n        const presetsOfGranularity = relativePreset[granularity];\n        filtered[granularity] = presetsOfGranularity.map(sanitizePreset);\n        return filtered;\n    }, {});\n}\n/**\n * Returns dateFilterOptions with all the presets sanitized, i.e. having `from <= to`.\n * @param dateFilterOptions - options to sanitize\n */\nexport function sanitizePresetIntervals(dateFilterOptions) {\n    var _a;\n    const absolutePreset = (_a = dateFilterOptions.absolutePreset) === null || _a === void 0 ? void 0 : _a.map(sanitizePreset);\n    const relativePreset = dateFilterOptions.relativePreset && sanitizeRelativePresets(dateFilterOptions.relativePreset);\n    return removeEmptyKeysFromDateFilterOptions(Object.assign(Object.assign({}, dateFilterOptions), { absolutePreset,\n        relativePreset }));\n}\n//# sourceMappingURL=OptionUtils.js.map","// (C) 2019-2022 GoodData Corporation\nimport format from \"date-fns/format/index.js\";\nimport isString from \"lodash/isString.js\";\nimport capitalize from \"lodash/capitalize.js\";\nimport { getIntl } from \"@gooddata/sdk-ui\";\nimport { granularityIntlCodes } from \"../../constants/i18n.js\";\nimport { convertPlatformDateStringToDate } from \"../DateConversions.js\";\nimport { isAllTimeDateFilterOption, isAbsoluteDateFilterForm, isAbsoluteDateFilterPreset, isRelativeDateFilterForm, isRelativeDateFilterPreset, } from \"@gooddata/sdk-model\";\nimport { DAY_END_TIME, DAY_START_TIME, DEFAULT_DATE_FORMAT, TIME_FORMAT, TIME_FORMAT_WITH_SEPARATOR, } from \"../../constants/Platform.js\";\nimport { messages } from \"../../../locales.js\";\nimport moment from \"moment\";\nexport const getTimeRange = (dateFrom, dateTo) => {\n    const fromTime = format(dateFrom, TIME_FORMAT);\n    const toTime = format(dateTo, TIME_FORMAT);\n    return fromTime === toTime ? fromTime : `${fromTime} \\u2013 ${toTime}`;\n};\nconst isTimeForWholeDay = (dateFrom, dateTo) => dateFrom.getHours() === 0 &&\n    dateFrom.getMinutes() === 0 &&\n    dateTo.getHours() === 23 &&\n    dateTo.getMinutes() === 59;\nconst adjustDatetime = (date, isTimeEnabled, defaultTime = DAY_START_TIME) => {\n    if (!isString(date)) {\n        return date;\n    }\n    if (isTimeEnabled && date.split(\" \").length === 1) {\n        return `${date} ${defaultTime}`;\n    }\n    return date;\n};\nexport const formatAbsoluteDateRange = (from, to, dateFormat) => {\n    const isTimeEnabled = dateFormat.includes(TIME_FORMAT);\n    const dateFormatWithoutTime = dateFormat.replace(TIME_FORMAT_WITH_SEPARATOR, \"\");\n    // append start and end times if necessary\n    const adjustedFrom = adjustDatetime(from, isTimeEnabled, DAY_START_TIME);\n    const adjustedTo = adjustDatetime(to, isTimeEnabled, DAY_END_TIME);\n    const fromDate = convertPlatformDateStringToDate(adjustedFrom);\n    const toDate = convertPlatformDateStringToDate(adjustedTo);\n    const coversWholeDay = isTimeForWholeDay(fromDate, toDate);\n    if (moment(fromDate).isSame(toDate, \"day\")) {\n        if (isTimeEnabled && !coversWholeDay) {\n            return `${format(fromDate, dateFormatWithoutTime)}, ${getTimeRange(fromDate, toDate)}`;\n        }\n        else {\n            return format(fromDate, dateFormatWithoutTime);\n        }\n    }\n    // do not show time in case of whole day coverage\n    const displayDateFormat = coversWholeDay ? dateFormatWithoutTime : dateFormat;\n    const fromTitle = format(fromDate, displayDateFormat);\n    const toTitle = format(toDate, displayDateFormat);\n    return `${fromTitle} \\u2013 ${toTitle}`;\n};\nconst relativeDateRangeFormatters = [\n    {\n        // Today, This month\n        predicate: (from, to) => from === 0 && to === 0,\n        formatter: (_from, _to, intlGranularity, translator) => translator.formatMessage(messages[`this${capitalize(intlGranularity)}`]),\n    },\n    {\n        // Tomorrow, Next month\n        predicate: (from, to) => from === 1 && to === 1,\n        formatter: (_from, _to, intlGranularity, translator) => translator.formatMessage(messages[`next${capitalize(intlGranularity)}`]),\n    },\n    {\n        // Yesterday, Last month\n        predicate: (from, to) => from === -1 && to === -1,\n        formatter: (_from, _to, intlGranularity, translator) => translator.formatMessage(messages[`last${capitalize(intlGranularity)}`]),\n    },\n    {\n        // Next N days (months)\n        predicate: (from) => from === 0,\n        formatter: (_from, to, intlGranularity, translator) => translator.formatMessage(messages[`nextN${capitalize(intlGranularity)}s`], {\n            n: Math.abs(to) + 1,\n        }),\n    },\n    {\n        // Last N days (months)\n        predicate: (_from, to) => to === 0,\n        formatter: (from, _to, intlGranularity, translator) => translator.formatMessage(messages[`lastN${capitalize(intlGranularity)}s`], {\n            n: Math.abs(from) + 1,\n        }),\n    },\n    {\n        // From N days ago to N days ago\n        predicate: (from, to) => from < 0 && from === to,\n        formatter: (from, _to, intlGranularity, translator) => translator.formatMessage(messages[`${intlGranularity}s.past.sameValue`], {\n            value: Math.abs(from),\n        }),\n    },\n    {\n        // From N days ago to N days ahead\n        predicate: (from, to) => from > 0 && from === to,\n        formatter: (from, _to, intlGranularity, translator) => translator.formatMessage(messages[`${intlGranularity}s.future.sameValue`], {\n            value: Math.abs(from),\n        }),\n    },\n    {\n        // From N days ago to M days ago\n        predicate: (from, to) => from < 0 && to < 0,\n        formatter: (from, to, intlGranularity, translator) => translator.formatMessage(messages[`${intlGranularity}s.past`], {\n            from: Math.abs(from),\n            to: Math.abs(to),\n        }),\n    },\n    {\n        // From N days ahead to M days ahead\n        predicate: (from, to) => from > 0 && to > 0,\n        formatter: (from, to, intlGranularity, translator) => translator.formatMessage(messages[`${intlGranularity}s.future`], {\n            from: Math.abs(from),\n            to: Math.abs(to),\n        }),\n    },\n    {\n        // From N days ago to M days ahead\n        predicate: () => true,\n        formatter: (from, to, intlGranularity, translator) => translator.formatMessage(messages[`${intlGranularity}s.mixed`], {\n            from: Math.abs(from),\n            to: Math.abs(to),\n        }),\n    },\n];\nexport const formatRelativeDateRange = (from, to, granularity, translator) => {\n    const intlGranularity = granularityIntlCodes[granularity];\n    const { formatter } = relativeDateRangeFormatters.find((f) => f.predicate(from, to));\n    return formatter(from, to, intlGranularity, translator);\n};\nconst getAllTimeFilterRepresentation = (translator) => translator.formatMessage({ id: \"filters.allTime.title\" });\nconst getAbsoluteFormFilterRepresentation = (filter, dateFormat) => filter.from && filter.to ? formatAbsoluteDateRange(filter.from, filter.to, dateFormat) : \"\";\nconst getAbsolutePresetFilterRepresentation = (filter, dateFormat) => formatAbsoluteDateRange(filter.from, filter.to, dateFormat);\nconst getRelativeFormFilterRepresentation = (filter, translator) => typeof filter.from === \"number\" && typeof filter.to === \"number\"\n    ? formatRelativeDateRange(filter.from, filter.to, filter.granularity, translator)\n    : \"\";\nconst getRelativePresetFilterRepresentation = (filter, translator) => formatRelativeDateRange(filter.from, filter.to, filter.granularity, translator);\nconst getDateFilterRepresentationByFilterType = (filter, translator, dateFormat) => {\n    if (isAbsoluteDateFilterForm(filter) || isRelativeDateFilterForm(filter)) {\n        return getDateFilterRepresentationUsingTranslator(filter, translator, dateFormat);\n    }\n    else if (isAllTimeDateFilterOption(filter) ||\n        isAbsoluteDateFilterPreset(filter) ||\n        isRelativeDateFilterPreset(filter)) {\n        return filter.name || getDateFilterRepresentationUsingTranslator(filter, translator, dateFormat);\n    }\n    else {\n        throw new Error(\"Unknown DateFilterOption type\");\n    }\n};\n// excludeCurrentPeriod is extra metadata that is needed by translation, but it is only used by relative filters\n// so the data structure is little inconsistent - for example when we translate absoluteForm we need to pass\n// excludeCurrentPeriod that is completely unrelated to absolute filter and is not used in absolute translations.\n// So in the future, if there will be need for more metadata, consider adding wrapper union type that would wrap\n// DateFilterOption along with additional metadata related to given filter. eg.:\n// | { filter: IRelativeDateFilterPreset, excludeCurrentPeriod: boolean } |\n// | { filter: IAbsoluteFilterForm } |\n// ...\n/**\n * Gets the filter title favoring custom name if specified.\n * @returns Representation of the filter (e.g. \"My preset\", \"From 2 weeks ago to 1 week ahead\")\n */\nexport const getDateFilterTitle = (filter, locale, dateFormat = DEFAULT_DATE_FORMAT) => {\n    const translator = getIntl(locale);\n    return getDateFilterRepresentationByFilterType(filter, translator, dateFormat);\n};\n/**\n * Gets the filter title favoring custom name if specified. This function is only for mock purpose.\n * @returns Representation of the filter (e.g. \"My preset\", \"From 2 weeks ago to 1 week ahead\")\n */\nexport const getDateFilterTitleUsingTranslator = (filter, translator, dateFormat = DEFAULT_DATE_FORMAT) => getDateFilterRepresentationByFilterType(filter, translator, dateFormat);\n/**\n * Gets the filter representation regardless of custom name.\n * @returns Representation of the filter (e.g. \"From 2 weeks ago to 1 week ahead\")\n */\nconst getDateFilterRepresentationUsingTranslator = (filter, translator, dateFormat) => {\n    if (isAbsoluteDateFilterForm(filter)) {\n        return getAbsoluteFormFilterRepresentation(filter, dateFormat);\n    }\n    else if (isAbsoluteDateFilterPreset(filter)) {\n        return getAbsolutePresetFilterRepresentation(filter, dateFormat);\n    }\n    else if (isAllTimeDateFilterOption(filter)) {\n        return getAllTimeFilterRepresentation(translator);\n    }\n    else if (isRelativeDateFilterForm(filter)) {\n        return getRelativeFormFilterRepresentation(filter, translator);\n    }\n    else if (isRelativeDateFilterPreset(filter)) {\n        return getRelativePresetFilterRepresentation(filter, translator);\n    }\n    else {\n        throw new Error(\"Unknown DateFilterOption type\");\n    }\n};\nexport const getDateFilterRepresentation = (filter, locale, dateFormat = DEFAULT_DATE_FORMAT) => {\n    const translator = getIntl(locale);\n    return getDateFilterRepresentationUsingTranslator(filter, translator, dateFormat);\n};\n//# sourceMappingURL=DateFilterTitle.js.map","// (C) 2007-2022 GoodData Corporation\nimport { granularityIntlCodes } from \"./constants/i18n.js\";\nimport { defaultDateFilterOptions } from \"./constants/config.js\";\nimport { validateFilterOption } from \"./validation/OptionValidation.js\";\nimport { mapOptionToAfm } from \"./utils/AFMConversions.js\";\nimport { applyExcludeCurrentPeriod, canExcludeCurrentPeriod } from \"./utils/PeriodExclusion.js\";\nimport { filterVisibleDateFilterOptions } from \"./utils/OptionUtils.js\";\nimport { getDateFilterTitle, getDateFilterRepresentation, getDateFilterTitleUsingTranslator, formatAbsoluteDateRange, formatRelativeDateRange, } from \"./utils/Translations/DateFilterTitle.js\";\nimport { DateFilter, } from \"./DateFilter.js\";\n/**\n * @beta\n */\nconst DateFilterHelpers = {\n    validateFilterOption,\n    getDateFilterTitle,\n    getDateFilterTitleUsingTranslator,\n    getDateFilterRepresentation,\n    granularityIntlCodes,\n    applyExcludeCurrentPeriod,\n    defaultDateFilterOptions,\n    canExcludeCurrentPeriod,\n    mapOptionToAfm,\n    formatAbsoluteDateRange,\n    formatRelativeDateRange,\n    filterVisibleDateFilterOptions,\n};\n// This is 1:1 reexported by root index.ts and is part of SDK's public API\nexport { DateFilter, DateFilterHelpers, filterVisibleDateFilterOptions, };\nexport { isAbsoluteDateFilterOption, isRelativeDateFilterOption, isUiRelativeDateFilterForm, } from \"./interfaces/index.js\";\nexport { defaultDateFilterOptions } from \"./constants/config.js\";\nexport { getLocalizedIcuDateFormatPattern } from \"./utils/FormattingUtils.js\";\n//# sourceMappingURL=index.js.map","// (C) 2007-2022 GoodData Corporation\nimport { isAllTimeDateFilterOption, } from \"@gooddata/sdk-model\";\nimport { applyExcludeCurrentPeriod } from \"./PeriodExclusion.js\";\nimport { isAbsoluteDateFilterOption, isRelativeDateFilterOption, } from \"../interfaces/index.js\";\nexport const mapAbsoluteFilterToAfm = (value, dataSet) => ({\n    absoluteDateFilter: {\n        dataSet,\n        from: value.from,\n        to: value.to,\n    },\n});\nexport const mapRelativeFilterToAfm = (value, dataSet) => ({\n    relativeDateFilter: {\n        dataSet,\n        from: value.from,\n        to: value.to,\n        granularity: value.granularity,\n    },\n});\nexport const mapOptionToAfm = (value, dateDataSet, excludeCurrentPeriod) => {\n    const excludeApplied = applyExcludeCurrentPeriod(value, excludeCurrentPeriod);\n    if (isAllTimeDateFilterOption(excludeApplied)) {\n        return null;\n    }\n    if (isAbsoluteDateFilterOption(excludeApplied)) {\n        return mapAbsoluteFilterToAfm(excludeApplied, dateDataSet);\n    }\n    if (isRelativeDateFilterOption(excludeApplied)) {\n        return mapRelativeFilterToAfm(excludeApplied, dateDataSet);\n    }\n    throw new Error(\"Unknown date filter value provided\");\n};\n//# sourceMappingURL=AFMConversions.js.map","// (C) 2021-2023 GoodData Corporation\nimport { idRef, } from \"@gooddata/sdk-model\";\nimport { DateFilterHelpers } from \"@gooddata/sdk-ui-filters\";\n/**\n * Default implementation of the date filter config. This should be used in case the workspace\n * does not have\n */\nexport const defaultDateFilterConfig = {\n    ref: idRef(\"defaultDateFilterProjectConfig\"),\n    selectedOption: \"THIS_MONTH\",\n    allTime: DateFilterHelpers.defaultDateFilterOptions.allTime,\n    absoluteForm: DateFilterHelpers.defaultDateFilterOptions.absoluteForm,\n    relativeForm: {\n        type: \"relativeForm\",\n        // month has to be the first as it should be the default selected option\n        availableGranularities: [\"GDC.time.month\", \"GDC.time.date\", \"GDC.time.quarter\", \"GDC.time.year\"],\n        localIdentifier: DateFilterHelpers.defaultDateFilterOptions.relativeForm.localIdentifier,\n        name: DateFilterHelpers.defaultDateFilterOptions.relativeForm.name,\n        visible: true,\n    },\n    relativePresets: Object.keys(DateFilterHelpers.defaultDateFilterOptions.relativePreset).reduce((presets, granularityKey) => {\n        const granularityPresets = DateFilterHelpers.defaultDateFilterOptions.relativePreset[granularityKey];\n        presets.push(...granularityPresets);\n        return presets;\n    }, []),\n    absolutePresets: [],\n};\n//# sourceMappingURL=defaultConfig.js.map","// (C) 2019-2022 GoodData Corporation\n/**\n * Defines shortcuts for commonly used date dataset attribute granularities.\n *\n * @public\n */\nexport const DateGranularity = {\n    date: \"GDC.time.date\",\n    week: \"GDC.time.week_us\",\n    month: \"GDC.time.month\",\n    quarter: \"GDC.time.quarter\",\n    year: \"GDC.time.year\",\n};\n//# sourceMappingURL=dateGranularities.js.map","// (C) 2021-2022 GoodData Corporation\nimport groupBy from \"lodash/groupBy.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { DateGranularity, } from \"@gooddata/sdk-model\";\nimport includes from \"lodash/includes.js\";\nimport { defaultDateFilterConfig } from \"./defaultConfig.js\";\nconst isNotWeekGranularity = (granularity) => granularity !== DateGranularity.week;\nconst isNotWeekPreset = (preset) => preset.granularity !== DateGranularity.week;\nfunction getDuplicateIdentifiers(options) {\n    const groups = groupBy(options, (filter) => filter.localIdentifier);\n    const duplicates = Object.keys(groups).filter((localIdentifier) => groups[localIdentifier].length > 1);\n    if (duplicates.length) {\n        console.warn(`There were duplicate localIdentifiers in the date filter config: ${duplicates.join(\",\")}`);\n    }\n    return duplicates;\n}\nfunction isFilterVisible(filter) {\n    var _a;\n    return (_a = filter === null || filter === void 0 ? void 0 : filter.visible) !== null && _a !== void 0 ? _a : false;\n}\nfunction containsVisibleFilter(filters) {\n    var _a;\n    return (_a = filters === null || filters === void 0 ? void 0 : filters.some(isFilterVisible)) !== null && _a !== void 0 ? _a : false;\n}\nfunction isRelativeFormVisible(filter) {\n    var _a;\n    return isFilterVisible(filter) && !isEmpty((_a = filter === null || filter === void 0 ? void 0 : filter.availableGranularities) !== null && _a !== void 0 ? _a : []);\n}\nfunction isAnyFilterVisible(config) {\n    return (isFilterVisible(config.allTime) ||\n        isFilterVisible(config.absoluteForm) ||\n        isRelativeFormVisible(config.relativeForm) ||\n        containsVisibleFilter(config.absolutePresets) ||\n        containsVisibleFilter(config.relativePresets));\n}\nfunction getAllOptionsFlattened(config) {\n    const allPresets = [\n        config.allTime,\n        config.absoluteForm,\n        config.relativeForm,\n        ...(config.absolutePresets || []),\n        ...(config.relativePresets || []),\n    ];\n    return allPresets.filter((item) => item !== undefined);\n}\nfunction isSelectedOptionValid(config) {\n    // only presets and all time are allowed for now (RAIL-1598), so look only there\n    const candidateOptions = [\n        config.allTime,\n        ...(config.absolutePresets || []),\n        ...(config.relativePresets || []),\n    ];\n    const matchingOption = candidateOptions.find((option) => (option === null || option === void 0 ? void 0 : option.localIdentifier) === config.selectedOption);\n    return matchingOption ? matchingOption.visible : false;\n}\n/**\n * Validates the provided date filter config. The config has a lot of options and not all of them can be\n * covered by the typing.\n *\n * @param config - config to validate\n * @param shouldCheckSelectedOption - indicate whether validation should check that a valid option is selected\n */\nexport function validateDateFilterConfig(config, shouldCheckSelectedOption = true) {\n    if (!isAnyFilterVisible(config)) {\n        return \"NoVisibleOptions\";\n    }\n    const allOptions = getAllOptionsFlattened(config);\n    const duplicateIdentifiers = getDuplicateIdentifiers(allOptions);\n    if (duplicateIdentifiers.length) {\n        return \"ConflictingIdentifiers\";\n    }\n    return !shouldCheckSelectedOption || isSelectedOptionValid(config) ? \"Valid\" : \"SelectedOptionInvalid\";\n}\n/**\n * Filters out all weekly presets from the filter config.\n */\nexport function filterOutWeeks(config) {\n    var _a, _b;\n    const { relativeForm, relativePresets } = config;\n    const relativeFormProp = relativeForm\n        ? {\n            relativeForm: Object.assign(Object.assign({}, relativeForm), { availableGranularities: (_b = (_a = relativeForm === null || relativeForm === void 0 ? void 0 : relativeForm.availableGranularities) === null || _a === void 0 ? void 0 : _a.filter(isNotWeekGranularity)) !== null && _b !== void 0 ? _b : [] }),\n        }\n        : {};\n    return Object.assign(Object.assign(Object.assign({}, config), relativeFormProp), { relativePresets: relativePresets === null || relativePresets === void 0 ? void 0 : relativePresets.filter(isNotWeekPreset) });\n}\nconst FallbackToDefault = [\"ConflictingIdentifiers\", \"NoVisibleOptions\"];\n/**\n * Given the date filter config loaded from backend and the settings, this function will perform validation\n * of the config and if needed also cleanup of invalid/disabled presets.\n */\nexport function getValidDateFilterConfig(config, settings) {\n    const configValidation = validateDateFilterConfig(config);\n    const validConfig = !includes(FallbackToDefault, configValidation) ? config : defaultDateFilterConfig;\n    const dateFilterConfig = !settings.enableWeekFilters ? filterOutWeeks(validConfig) : validConfig;\n    return [dateFilterConfig, configValidation];\n}\n//# sourceMappingURL=validation.js.map","import { __rest } from \"tslib\";\n/**\n * Given an object with settings that include user and workspace information, convert to a new object that\n * contains just the settings.\n *\n * @param userWorkspaceSettings - full object to strip of extra user and workspace data\n */\nexport function stripUserAndWorkspaceProps(userWorkspaceSettings) {\n    const { userId: _userId, locale: _locale, separators: _separators, workspace: _workspace } = userWorkspaceSettings, rest = __rest(userWorkspaceSettings, [\"userId\", \"locale\", \"separators\", \"workspace\"]);\n    return rest;\n}\n//# sourceMappingURL=conversion.js.map","// (C) 2021-2022 GoodData Corporation\nconst setDateFilterConfig = (state, action) => {\n    const { dateFilterConfig, effectiveDateFilterConfig, isUsingDashboardOverrides } = action.payload;\n    state.dateFilterConfig = dateFilterConfig;\n    state.effectiveDateFilterConfig = effectiveDateFilterConfig;\n    state.isUsingDashboardOverrides = isUsingDashboardOverrides;\n};\nconst addDateFilterConfigValidationWarning = (state, action) => {\n    if (!state.dateFilterConfigValidationWarnings) {\n        state.dateFilterConfigValidationWarnings = [];\n    }\n    state.dateFilterConfigValidationWarnings.push(action.payload);\n};\nconst clearDateFilterConfigValidationWarning = (state) => {\n    state.dateFilterConfigValidationWarnings = [];\n};\nexport const dateFilterConfigReducers = {\n    setDateFilterConfig,\n    addDateFilterConfigValidationWarning,\n    clearDateFilterConfigValidationWarning,\n};\n//# sourceMappingURL=dateFilterConfigReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { dateFilterConfigReducers } from \"./dateFilterConfigReducers.js\";\nimport { dateFilterConfigInitialState } from \"./dateFilterConfigState.js\";\nconst configSlice = createSlice({\n    name: \"dateFilterConfig\",\n    initialState: dateFilterConfigInitialState,\n    reducers: dateFilterConfigReducers,\n});\nexport const dateFilterConfigSliceReducer = configSlice.reducer;\nexport const dateFilterConfigActions = configSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const dateFilterConfigInitialState = {\n    dateFilterConfig: undefined,\n    effectiveDateFilterConfig: undefined,\n    isUsingDashboardOverrides: undefined,\n    dateFilterConfigValidationWarnings: undefined,\n};\n//# sourceMappingURL=dateFilterConfigState.js.map","import keys from \"lodash/keys.js\";\nimport includes from \"lodash/includes.js\";\nconst RequiredConfigKeys = [\n    \"dateFilterConfig\",\n    \"locale\",\n    \"separators\",\n    \"colorPalette\",\n    \"settings\",\n];\n/**\n * Tests whether the provided config is fully resolved - it contains all the necessary values.\n *\n * @param config - config to test\n */\nexport function isResolvedConfig(config) {\n    if (!config) {\n        return false;\n    }\n    const specifiedConfig = keys(config);\n    return RequiredConfigKeys.every((key) => includes(specifiedConfig, key));\n}\n//# sourceMappingURL=commonTypes.js.map","/**\n * As plugins now allow to use KD with some old version of UI SDK,\n * development of new features can not rely only on development feature flags:\n *\n * When new UI SDK version is release in the middle of feature development,\n * this not final version of feature can still be turned on\n * by its development platform setting later because some old plugin\n * is still using old UI SDK version on new KD.\n */\n/**\n * Turns off development settings for unfinished features which cant be turned on in this version of UI SDK.\n * Add disabled FF for your feature, when it is not completed yet, but UI SDK needs to be released.\n * It will prevent this feature from being accidentally turned on in WIP state by its platform setting when used in this version of UI SDK as part of old plugin.\n */\nexport const disabledUnfinishedFeatureSettings = {};\n//# sourceMappingURL=disabledUnfinishedFeatureSettings.js.map","// (C) 2021-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { disabledUnfinishedFeatureSettings } from \"../../../disabledUnfinishedFeatureSettings.js\";\nexport const sanitizeUnfinishedFeatureSettings = (settings) => {\n    invariant(settings, \"cannot sanitize undefined settings\");\n    return Object.assign(Object.assign({}, settings), disabledUnfinishedFeatureSettings);\n};\n//# sourceMappingURL=sanitizeUnfinishedFeatureSettings.js.map","// (C) 2022 GoodData Corporation\nimport { put } from \"redux-saga/effects\";\nimport { dateFilterValidationFailed } from \"../../../events/dashboard.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { dateFilterConfigActions } from \"../../../store/dateFilterConfig/index.js\";\nexport function* onDateFilterConfigValidationError(ctx, validationResult, correlationId) {\n    yield dispatchDashboardEvent(dateFilterValidationFailed(ctx, validationResult, correlationId));\n    yield put(dateFilterConfigActions.addDateFilterConfigValidationWarning(validationResult));\n}\n//# sourceMappingURL=onDateFilterConfigValidationError.js.map","import { all, call, put } from \"redux-saga/effects\";\nimport { resolveLocale } from \"@gooddata/sdk-ui\";\nimport { defaultDateFilterConfig } from \"../../../../_staging/dateFilterConfig/defaultConfig.js\";\nimport { getValidDateFilterConfig } from \"../../../../_staging/dateFilterConfig/validation.js\";\nimport { stripUserAndWorkspaceProps } from \"../../../../_staging/settings/conversion.js\";\nimport { dateFilterConfigActions } from \"../../../store/dateFilterConfig/index.js\";\nimport { isResolvedConfig, } from \"../../../types/commonTypes.js\";\nimport { sanitizeUnfinishedFeatureSettings } from \"./sanitizeUnfinishedFeatureSettings.js\";\nimport { onDateFilterConfigValidationError } from \"./onDateFilterConfigValidationError.js\";\nfunction loadDateFilterConfig(ctx) {\n    const { backend, workspace } = ctx;\n    return backend\n        .workspace(workspace)\n        .dateFilterConfigs()\n        .withLimit(1)\n        .query()\n        .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.log(\"An error has occurred while loading date filter config. Will fall back to default date filter config.\", e);\n        return undefined;\n    });\n}\nfunction loadSettingsForCurrentUser(ctx) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).settings().getSettingsForCurrentUser();\n}\nfunction loadColorPalette(ctx) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).styling().getColorPalette();\n}\nfunction* resolveDateFilterConfig(ctx, config, cmd) {\n    var _a, _b;\n    if (config.dateFilterConfig !== undefined) {\n        return config.dateFilterConfig;\n    }\n    const result = yield call(loadDateFilterConfig, ctx);\n    if (((_a = result === null || result === void 0 ? void 0 : result.totalCount) !== null && _a !== void 0 ? _a : 0) > 1) {\n        yield call(onDateFilterConfigValidationError, ctx, \"TOO_MANY_CONFIGS\", cmd.correlationId);\n    }\n    const firstConfig = result === null || result === void 0 ? void 0 : result.items[0];\n    if (!firstConfig) {\n        yield call(onDateFilterConfigValidationError, ctx, \"NO_CONFIG\", cmd.correlationId);\n    }\n    return (_b = result === null || result === void 0 ? void 0 : result.items[0]) !== null && _b !== void 0 ? _b : defaultDateFilterConfig;\n}\nfunction resolveUserSettings(ctx, config) {\n    if (config.settings && config.locale && config.separators) {\n        return Promise.resolve({\n            locale: config.locale,\n            separators: config.separators,\n            settings: config.settings,\n        });\n    }\n    return loadSettingsForCurrentUser(ctx).then((res) => {\n        var _a, _b, _c;\n        return ({\n            locale: (_a = config.locale) !== null && _a !== void 0 ? _a : resolveLocale(res.locale),\n            separators: (_b = config.separators) !== null && _b !== void 0 ? _b : res.separators,\n            settings: (_c = config.settings) !== null && _c !== void 0 ? _c : stripUserAndWorkspaceProps(res),\n        });\n    });\n}\nfunction resolveColorPalette(ctx, config) {\n    if (config.colorPalette) {\n        return Promise.resolve(config.colorPalette);\n    }\n    return loadColorPalette(ctx);\n}\n/**\n * Loads all essential dashboard configuration from the backend if needed. The load command may specify their\n * own inline config - if that is the case the config is bounced back immediately. Otherwise, the necessary\n * backend queries and post-processing is done.\n */\nexport function* resolveDashboardConfig(ctx, cmd) {\n    const { payload: { config = {} }, } = cmd;\n    yield put(dateFilterConfigActions.clearDateFilterConfigValidationWarning());\n    if (isResolvedConfig(config)) {\n        /*\n         * Config coming in props is fully specified. There is nothing to do. Bail out immediately.\n         */\n        if (config.allowUnfinishedFeatures || !config.settings) {\n            return applyConfigDefaults(config);\n        }\n        return Object.assign(Object.assign({}, applyConfigDefaults(config)), { settings: sanitizeUnfinishedFeatureSettings(config.settings) });\n    }\n    /*\n     * Resolve the config values. The resolve* functions will take value from config if it is defined,\n     * otherwise they will obtain the config from backend.\n     *\n     * Note: the user settings include locale, separators and the ISettings that should be in effect\n     * for the current user in the context of the workspace.\n     */\n    const [dateFilterConfig, settings, colorPalette] = yield all([\n        call(resolveDateFilterConfig, ctx, config, cmd),\n        call(resolveUserSettings, ctx, config),\n        call(resolveColorPalette, ctx, config),\n    ]);\n    const [validDateFilterConfig, configValidation] = getValidDateFilterConfig(dateFilterConfig, settings.settings);\n    if (configValidation !== \"Valid\") {\n        yield call(onDateFilterConfigValidationError, ctx, configValidation, cmd.correlationId);\n    }\n    const configWithDefaults = applyConfigDefaults(config);\n    return Object.assign(Object.assign({}, configWithDefaults), { locale: settings.locale, separators: settings.separators, dateFilterConfig: validDateFilterConfig, settings: configWithDefaults.allowUnfinishedFeatures\n            ? settings.settings\n            : sanitizeUnfinishedFeatureSettings(settings.settings), colorPalette, mapboxToken: config.mapboxToken });\n}\nfunction applyConfigDefaults(config) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    return Object.assign(Object.assign({}, config), { objectAvailability: (_a = config.objectAvailability) !== null && _a !== void 0 ? _a : {}, isReadOnly: (_b = config.isReadOnly) !== null && _b !== void 0 ? _b : false, isEmbedded: (_c = config.isEmbedded) !== null && _c !== void 0 ? _c : false, isExport: (_d = config.isExport) !== null && _d !== void 0 ? _d : false, isWhiteLabeled: (_e = config.isWhiteLabeled) !== null && _e !== void 0 ? _e : false, disableDefaultDrills: (_f = config.disableDefaultDrills) !== null && _f !== void 0 ? _f : false, enableFilterValuesResolutionInDrillEvents: (_g = config.enableFilterValuesResolutionInDrillEvents) !== null && _g !== void 0 ? _g : false, menuButtonItemsVisibility: (_h = config.menuButtonItemsVisibility) !== null && _h !== void 0 ? _h : {}, allowUnfinishedFeatures: (_j = config.allowUnfinishedFeatures) !== null && _j !== void 0 ? _j : false, allowCreateInsightRequest: (_k = config.allowCreateInsightRequest) !== null && _k !== void 0 ? _k : false, initialRenderMode: (_l = config.initialRenderMode) !== null && _l !== void 0 ? _l : \"view\", hideSaveAsNewButton: (_m = config.hideSaveAsNewButton) !== null && _m !== void 0 ? _m : false, hideShareButton: (_o = config.hideShareButton) !== null && _o !== void 0 ? _o : false, widgetsOverlay: (_p = config.widgetsOverlay) !== null && _p !== void 0 ? _p : {} });\n}\n//# sourceMappingURL=resolveDashboardConfig.js.map","// (C) 2021 GoodData Corporation\nconst setConfig = (state, action) => {\n    state.config = action.payload;\n};\nexport const configReducers = {\n    setConfig,\n};\n//# sourceMappingURL=configReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { configReducers } from \"./configReducers.js\";\nimport { configInitialState } from \"./configState.js\";\nconst configSlice = createSlice({\n    name: \"config\",\n    initialState: configInitialState,\n    reducers: configReducers,\n});\nexport const configSliceReducer = configSlice.reducer;\nexport const configActions = configSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const configInitialState = { config: undefined };\n//# sourceMappingURL=configState.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { entitlementsReducers } from \"./entitlementsReducers.js\";\nimport { entitlementsInitialState } from \"./entitlementsState.js\";\nconst entitlementsSlice = createSlice({\n    name: \"entitlements\",\n    initialState: entitlementsInitialState,\n    reducers: entitlementsReducers,\n});\nexport const entitlementsSliceReducer = entitlementsSlice.reducer;\nexport const entitlementsActions = entitlementsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const entitlementsInitialState = { entitlements: undefined };\n//# sourceMappingURL=entitlementsState.js.map","// (C) 2023 GoodData Corporation\nconst setEntitlements = (state, action) => {\n    state.entitlements = action.payload;\n};\nexport const entitlementsReducers = {\n    setEntitlements,\n};\n//# sourceMappingURL=entitlementsReducers.js.map","const max = (a, b) => (a > b ? a : b);\nconst min = (a, b) => (a <= b ? a : b);\nexport const sanitizeDateFilterOption = (option) => (Object.assign(Object.assign({}, option), { from: min(option.from, option.to), to: max(option.from, option.to) }));\n//# sourceMappingURL=sanitization.js.map","import { __rest } from \"tslib\";\n// (C) 2019-2022 GoodData Corporation\nimport flow from \"lodash/flow.js\";\nimport uniqBy from \"lodash/uniqBy.js\";\nimport stringify from \"json-stable-stringify\";\nimport { sanitizeDateFilterOption } from \"./sanitization.js\";\n/**\n * Merges presets so that presets that are semantically unique are de-duplicated.\n */\nconst mergePresets = (projectPresets, dashboardPresets) => {\n    const merged = [...(projectPresets || []), ...(dashboardPresets || [])].map(sanitizeDateFilterOption);\n    return uniqBy(merged, stringify);\n};\nconst addPresets = (dashboardConfig) => (projectConfig) => {\n    var _a, _b, _c, _d, _e, _f;\n    if (!dashboardConfig.addPresets) {\n        return projectConfig;\n    }\n    const absolutePresets = mergePresets((_a = projectConfig === null || projectConfig === void 0 ? void 0 : projectConfig.absolutePresets) !== null && _a !== void 0 ? _a : [], (_c = (_b = dashboardConfig.addPresets) === null || _b === void 0 ? void 0 : _b.absolutePresets) !== null && _c !== void 0 ? _c : []);\n    const relativePresets = mergePresets((_d = projectConfig === null || projectConfig === void 0 ? void 0 : projectConfig.relativePresets) !== null && _d !== void 0 ? _d : [], (_f = (_e = dashboardConfig.addPresets) === null || _e === void 0 ? void 0 : _e.relativePresets) !== null && _f !== void 0 ? _f : []);\n    return Object.assign(Object.assign(Object.assign({}, projectConfig), (absolutePresets.length ? { absolutePresets } : null)), (relativePresets.length ? { relativePresets } : null));\n};\nconst hideNonArrayOptionType = (key) => (dashboardConfig) => (projectConfig) => {\n    var _a;\n    const configKey = projectConfig[key];\n    if (!configKey) {\n        return projectConfig;\n    }\n    if (!configKey.visible || !dashboardConfig.hideOptions) {\n        return projectConfig;\n    }\n    return ((_a = dashboardConfig.hideOptions) === null || _a === void 0 ? void 0 : _a.includes(configKey.localIdentifier))\n        ? Object.assign(Object.assign({}, projectConfig), { [key]: Object.assign(Object.assign({}, projectConfig[key]), { visible: false }) }) : projectConfig;\n};\nconst hideAllTime = hideNonArrayOptionType(\"allTime\");\nconst hideAbsoluteForm = hideNonArrayOptionType(\"absoluteForm\");\nconst hideRelativeForm = hideNonArrayOptionType(\"relativeForm\");\nconst shouldHideRelativePreset = (preset, dashboardConfig) => {\n    var _a, _b;\n    const hideForGranularity = (_a = dashboardConfig.hideGranularities) === null || _a === void 0 ? void 0 : _a.includes(preset.granularity);\n    const hideForId = (_b = dashboardConfig.hideOptions) === null || _b === void 0 ? void 0 : _b.includes(preset.localIdentifier);\n    return hideForGranularity || hideForId || false;\n};\nconst hideAbsolutePresets = (dashboardConfig) => (projectConfig) => {\n    var _a;\n    if (!((_a = projectConfig.absolutePresets) === null || _a === void 0 ? void 0 : _a.length) || !dashboardConfig.hideOptions) {\n        return projectConfig;\n    }\n    const absolutePresets = projectConfig.absolutePresets.map((preset) => {\n        var _a;\n        return ((_a = dashboardConfig.hideOptions) === null || _a === void 0 ? void 0 : _a.includes(preset.localIdentifier))\n            ? Object.assign(Object.assign({}, preset), { visible: false }) : preset;\n    });\n    return Object.assign(Object.assign({}, projectConfig), { absolutePresets });\n};\nconst hideRelativePresets = (dashboardConfig) => (projectConfig) => {\n    var _a;\n    const canDashboardConfigHideRelativePreset = dashboardConfig.hideOptions || dashboardConfig.hideGranularities;\n    if (!((_a = projectConfig.relativePresets) === null || _a === void 0 ? void 0 : _a.length) || !canDashboardConfigHideRelativePreset) {\n        return projectConfig;\n    }\n    const relativePresets = projectConfig.relativePresets.map((preset) => shouldHideRelativePreset(preset, dashboardConfig)\n        ? Object.assign(Object.assign({}, preset), { visible: false }) : preset);\n    return Object.assign(Object.assign({}, projectConfig), { relativePresets });\n};\nconst hideRelativeFormGranularities = (dashboardConfig) => (projectConfig) => {\n    var _a;\n    if (!((_a = projectConfig.relativeForm) === null || _a === void 0 ? void 0 : _a.visible) || !dashboardConfig.hideGranularities) {\n        return projectConfig;\n    }\n    const granularities = projectConfig.relativeForm.availableGranularities.filter((granularity) => { var _a, _b; return !((_b = (_a = dashboardConfig.hideGranularities) === null || _a === void 0 ? void 0 : _a.includes(granularity)) !== null && _b !== void 0 ? _b : false); });\n    const { relativeForm } = projectConfig, projectConfigWithoutRelativeForm = __rest(projectConfig, [\"relativeForm\"]);\n    return granularities.length > 0\n        ? Object.assign(Object.assign({}, projectConfig), { relativeForm: Object.assign(Object.assign({}, relativeForm), { availableGranularities: granularities }) }) : projectConfigWithoutRelativeForm;\n};\n/**\n * Merges the date filter config with the dashboard-level overrides. The overrides may hide some presets\n * or add custom presets. This function addresses all that and returns the final merged Date Filter Config.\n *\n * @param config - date filter config\n * @param dashboardOverrides - dashboard-level overrides.\n */\nexport function mergeDateFilterConfigs(config, dashboardOverrides) {\n    const pipeline = flow(addPresets(dashboardOverrides), hideAllTime(dashboardOverrides), hideAbsoluteForm(dashboardOverrides), hideRelativeForm(dashboardOverrides), hideRelativeFormGranularities(dashboardOverrides), hideAbsolutePresets(dashboardOverrides), hideRelativePresets(dashboardOverrides));\n    return pipeline(config);\n}\n//# sourceMappingURL=merge.js.map","import { call } from \"redux-saga/effects\";\nimport { mergeDateFilterConfigs } from \"../../../../_staging/dateFilterConfig/merge.js\";\nimport { validateDateFilterConfig } from \"../../../../_staging/dateFilterConfig/validation.js\";\nimport { onDateFilterConfigValidationError } from \"./onDateFilterConfigValidationError.js\";\nexport function* mergeDateFilterConfigWithOverrides(ctx, cmd, config, dashboardOverrides) {\n    if (!dashboardOverrides) {\n        return {\n            config,\n            source: \"workspace\",\n        };\n    }\n    const mergedConfig = mergeDateFilterConfigs(config, dashboardOverrides);\n    /*\n     * KD's validation logic did not include selected option. The validation of workspace-level configs was\n     * doing that explicitly outside of validate logic. That logic was not part of the dashboard-level override\n     * processing where just the plain validation was used.\n     *\n     * The flag below ensures matching behavior.\n     */\n    const mergedConfigValidation = validateDateFilterConfig(mergedConfig, false);\n    if (mergedConfigValidation !== \"Valid\") {\n        yield call(onDateFilterConfigValidationError, ctx, mergedConfigValidation, cmd.correlationId);\n        return {\n            config,\n            source: \"workspace\",\n        };\n    }\n    return {\n        config: mergedConfig,\n        source: \"dashboard\",\n    };\n}\n//# sourceMappingURL=mergeDateFilterConfigs.js.map","import { call } from \"redux-saga/effects\";\nfunction loadPermissionsFromBackend(ctx) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).permissions().getPermissionsForCurrentUser();\n}\nexport function* resolvePermissions(ctx, cmd) {\n    const { permissions } = cmd.payload;\n    if (permissions) {\n        return permissions;\n    }\n    const result = yield call(loadPermissionsFromBackend, ctx);\n    return result;\n}\n//# sourceMappingURL=resolvePermissions.js.map","// (C) 2021-2022 GoodData Corporation\nconst setPermissions = (state, action) => {\n    state.permissions = action.payload;\n};\nexport const permissionsReducers = {\n    setPermissions,\n};\n//# sourceMappingURL=permissionsReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { permissionsReducers } from \"./permissionsReducers.js\";\nimport { permissionsInitialState } from \"./permissionsState.js\";\nconst permissionsSlice = createSlice({\n    name: \"permissions\",\n    initialState: permissionsInitialState,\n    reducers: permissionsReducers,\n});\nexport const permissionsSliceReducer = permissionsSlice.reducer;\nexport const permissionsActions = permissionsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const permissionsInitialState = { permissions: undefined };\n//# sourceMappingURL=permissionsState.js.map","const SupportedCatalogGranularity = [\n    \"GDC.time.day_in_week\",\n    \"GDC.time.day_in_month\",\n    \"GDC.time.day_in_quarter\",\n    \"GDC.time.day_in_year\",\n    \"GDC.time.week_in_quarter\",\n    \"GDC.time.week_in_year\",\n    \"GDC.time.month_in_quarter\",\n    \"GDC.time.month_in_year\",\n    \"GDC.time.quarter_in_year\",\n];\nexport function loadCatalog(ctx) {\n    const { backend, workspace } = ctx;\n    const options = {\n        excludeTags: [],\n        includeTags: [],\n        types: [\"attribute\", \"fact\", \"measure\", \"dateDataset\", \"attributeHierarchy\"],\n        includeDateGranularities: SupportedCatalogGranularity,\n        loadGroups: false,\n    };\n    return backend.workspace(workspace).catalog().withOptions(options).load();\n}\n//# sourceMappingURL=loadCatalog.js.map","export function loadDashboardAlerts(ctx) {\n    const { backend, workspace, dashboardRef } = ctx;\n    // no need to load anything if the backend does not support setting the alerts in the first place\n    if (!backend.capabilities.supportsKpiWidget) {\n        return Promise.resolve([]);\n    }\n    return backend.workspace(workspace).dashboards().getDashboardWidgetAlertsForCurrentUser(dashboardRef);\n}\n//# sourceMappingURL=loadDashboardAlerts.js.map","// (C) 2021-2022 GoodData Corporation\nconst setCatalogItems = (state, action) => {\n    const { attributes, measures, dateDatasets, facts, attributeHierarchies } = action.payload;\n    state.attributes = attributes;\n    state.measures = measures;\n    state.facts = facts;\n    state.dateDatasets = dateDatasets;\n    state.attributeHierarchies = attributeHierarchies;\n};\nexport const catalogReducers = {\n    setCatalogItems,\n};\n//# sourceMappingURL=catalogReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { catalogReducers } from \"./catalogReducers.js\";\nimport { catalogInitialState } from \"./catalogState.js\";\nconst catalogSlice = createSlice({\n    name: \"catalog\",\n    initialState: catalogInitialState,\n    reducers: catalogReducers,\n});\nexport const catalogSliceReducer = catalogSlice.reducer;\nexport const catalogActions = catalogSlice.actions;\n//# sourceMappingURL=index.js.map","export const catalogInitialState = {\n    attributes: undefined,\n    measures: undefined,\n    dateDatasets: undefined,\n    facts: undefined,\n    attributeHierarchies: undefined,\n};\n//# sourceMappingURL=catalogState.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nexport const alertsAdapter = createEntityAdapter({\n    selectId: (alert) => objRefToString(alert.ref),\n});\n//# sourceMappingURL=alertsEntityAdapter.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { alertsAdapter } from \"./alertsEntityAdapter.js\";\nconst alertsSlice = createSlice({\n    name: \"alerts\",\n    initialState: alertsAdapter.getInitialState(),\n    reducers: {\n        setAlerts: alertsAdapter.setAll,\n        addAlert: alertsAdapter.addOne,\n        updateAlert: alertsAdapter.updateOne,\n        removeAlert: alertsAdapter.removeOne,\n        removeAlerts: alertsAdapter.removeMany,\n    },\n});\nexport const alertsSliceReducer = alertsSlice.reducer;\nexport const alertsActions = alertsSlice.actions;\n//# sourceMappingURL=index.js.map","export function loadUser(ctx) {\n    const { backend } = ctx;\n    return backend.currentUser().getUser();\n}\n//# sourceMappingURL=loadUser.js.map","// (C) 2021-2022 GoodData Corporation\nconst setUser = (state, action) => {\n    state.user = action.payload;\n};\nexport const userReducers = {\n    setUser,\n};\n//# sourceMappingURL=userReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { userReducers } from \"./userReducers.js\";\nimport { userInitialState } from \"./userState.js\";\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: userInitialState,\n    reducers: userReducers,\n});\nexport const userSliceReducer = userSlice.reducer;\nexport const userActions = userSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const userInitialState = { user: undefined };\n//# sourceMappingURL=userState.js.map","// (C) 2020-2022 GoodData Corporation\nimport compact from \"lodash/compact.js\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nimport { isLocalIdRef, isIdentifierRef, isUriRef, areObjRefsEqual, localIdRef, isDrillFromAttribute, isDrillFromMeasure, isDrillToLegacyDashboard, isMeasureDescriptor, } from \"@gooddata/sdk-model\";\nimport { HeaderPredicates, getMappingHeaderLocalIdentifier, } from \"@gooddata/sdk-ui\";\nimport first from \"lodash/first.js\";\nimport last from \"lodash/last.js\";\nimport isEqual from \"lodash/isEqual.js\";\nexport { getAttributeIdentifiersPlaceholdersFromUrl } from \"@gooddata/sdk-model/internal\";\nfunction widgetDrillToDrillPredicates(drill) {\n    let origin;\n    if (isDrillFromMeasure(drill.origin)) {\n        origin = drill.origin.measure;\n    }\n    else if (isDrillFromAttribute(drill.origin)) {\n        origin = drill.origin.attribute;\n    }\n    else {\n        throw new UnexpectedError(\"Unknown drill origin!\");\n    }\n    // add drillable items for all three types of objRefs that the origin measure can be\n    return compact([\n        isLocalIdRef(origin) && HeaderPredicates.localIdentifierMatch(origin.localIdentifier),\n        isIdentifierRef(origin) && HeaderPredicates.identifierMatch(origin.identifier),\n        isUriRef(origin) && HeaderPredicates.uriMatch(origin.uri),\n    ]);\n}\nfunction insightWidgetImplicitDrills(insightWidgetDrills) {\n    return insightWidgetDrills.map((drill) => {\n        return {\n            drillDefinition: drill,\n            predicates: widgetDrillToDrillPredicates(drill),\n        };\n    });\n}\nfunction insightDrillDownImplicitDrills(possibleDrills, attributesWithDrillDown) {\n    const drillsWitDrillDown = possibleDrills.filter((candidate) => {\n        return attributesWithDrillDown.some((attr) => areObjRefsEqual(attr.attribute.ref, candidate.attribute.attributeHeader.formOf.ref));\n    });\n    return drillsWitDrillDown.map((drill) => {\n        const matchingCatalogAttribute = attributesWithDrillDown.find((attr) => areObjRefsEqual(attr.attribute.ref, drill.attribute.attributeHeader.formOf.ref));\n        return {\n            drillDefinition: {\n                type: \"drillDown\",\n                origin: localIdRef(drill.attribute.attributeHeader.localIdentifier),\n                target: matchingCatalogAttribute.attribute.drillDownStep,\n            },\n            predicates: [\n                HeaderPredicates.localIdentifierMatch(drill.attribute.attributeHeader.localIdentifier),\n            ],\n        };\n    });\n}\n/**\n * Returns a collection of pairs consisting of a drill definition and all its predicates.\n *\n * @param insightWidgetDrills - drills from the insight widget itself\n * @param possibleDrills - possible drill targets returned by pushData (this contains all attributes in the visualization)\n * @param attributesWithDrillDown - all the attributes in the catalog that have drill down step defined\n */\nexport function getImplicitDrillsWithPredicates(insightWidgetDrills, possibleDrills, attributesWithDrillDown, disableWidgetDrills) {\n    let drills = insightDrillDownImplicitDrills(possibleDrills, attributesWithDrillDown);\n    if (!disableWidgetDrills) {\n        drills = [...drills, ...insightWidgetImplicitDrills(insightWidgetDrills)];\n    }\n    return drills;\n}\nexport function getDrillsBySourceLocalIdentifiers(widgetDrillDefinition, drillSourceLocalIdentifiers) {\n    return widgetDrillDefinition.filter((d) => isDrillToLegacyDashboard(d) ||\n        drillSourceLocalIdentifiers.includes(getDrillOriginLocalIdentifier(d)));\n}\nexport function getLocalIdentifiersFromEvent(drillEvent) {\n    var _a;\n    const drillIntersection = ((_a = drillEvent === null || drillEvent === void 0 ? void 0 : drillEvent.drillContext) === null || _a === void 0 ? void 0 : _a.intersection) || [];\n    return drillIntersection.map((x) => x.header).map(getMappingHeaderLocalIdentifier);\n}\nconst getMeasureLocalIdentifier = (drillEvent) => {\n    var _a;\n    return first((((_a = drillEvent === null || drillEvent === void 0 ? void 0 : drillEvent.drillContext) === null || _a === void 0 ? void 0 : _a.intersection) || [])\n        .map((intersection) => intersection.header)\n        .filter(isMeasureDescriptor)\n        .map(getMappingHeaderLocalIdentifier));\n};\nexport function getDrillSourceLocalIdentifierFromEvent(drillEvent) {\n    const localIdentifiersFromEvent = getLocalIdentifiersFromEvent(drillEvent);\n    if (drillEvent.drillContext.type === \"table\") {\n        /*\n        For tables, the event is always triggered on the individual column and there is no hierarchy involved.\n        */\n        const measureLocalIdentifier = getMeasureLocalIdentifier(drillEvent);\n        return [measureLocalIdentifier ? measureLocalIdentifier : last(localIdentifiersFromEvent)];\n    }\n    return localIdentifiersFromEvent;\n}\nexport function filterDrillsByDrillEvent(drillDefinitions, drillEvent) {\n    if (!drillDefinitions || !drillEvent) {\n        return [];\n    }\n    const drillSourceLocalIdentifiers = getDrillSourceLocalIdentifierFromEvent(drillEvent);\n    return getDrillsBySourceLocalIdentifiers(drillDefinitions, drillSourceLocalIdentifiers);\n}\nexport function getDrillOriginLocalIdentifier(drillDefinition) {\n    const { origin } = drillDefinition;\n    if (isLocalIdRef(origin)) {\n        return origin.localIdentifier;\n    }\n    if (isDrillFromMeasure(origin)) {\n        return getLocalIdentifierOrDie(origin.measure);\n    }\n    if (isDrillFromAttribute(origin)) {\n        return getLocalIdentifierOrDie(origin.attribute);\n    }\n    throw new Error(\"InsightDrillDefinition has invalid drill origin\");\n}\nexport function getLocalIdentifierOrDie(ref) {\n    if (isLocalIdRef(ref)) {\n        return ref.localIdentifier;\n    }\n    throw new Error(\"Invalid ObjRef invariant expecting LocalIdRef\");\n}\nexport function isDrillConfigured(drill, configuredDrills) {\n    if (isDrillToLegacyDashboard(drill)) {\n        return false;\n    }\n    return configuredDrills.some((configDrill) => {\n        if (isDrillToLegacyDashboard(configDrill)) {\n            return false;\n        }\n        return isEqual(drill, configDrill);\n    });\n}\nexport function getValidDrillOriginAttributes(supportedItemsForWidget, localIdentifier) {\n    var _a, _b, _c;\n    const measureItems = (_a = supportedItemsForWidget.measures) !== null && _a !== void 0 ? _a : [];\n    const measureSupportedItems = measureItems.find((item) => item.measure.measureHeaderItem.localIdentifier === localIdentifier);\n    if (measureSupportedItems) {\n        return measureSupportedItems.attributes;\n    }\n    const attributeItems = (_b = supportedItemsForWidget.attributes) !== null && _b !== void 0 ? _b : [];\n    const attributeSupportedItems = attributeItems.find((attrItem) => attrItem.attribute.attributeHeader.localIdentifier === localIdentifier);\n    return (_c = attributeSupportedItems === null || attributeSupportedItems === void 0 ? void 0 : attributeSupportedItems.intersectionAttributes) !== null && _c !== void 0 ? _c : [];\n}\n//# sourceMappingURL=drillingUtils.js.map","import { areObjRefsEqual, objRefToString, widgetId, widgetRef, widgetUri, } from \"@gooddata/sdk-model\";\nimport { getDrillOriginLocalIdentifier } from \"../../../_staging/drills/drillingUtils.js\";\nconst openScheduleEmailDialog = (state) => {\n    state.scheduleEmailDialog.open = true;\n};\nconst closeScheduleEmailDialog = (state) => {\n    state.scheduleEmailDialog.open = false;\n};\nconst setScheduleEmailDialogDefaultAttachment = (state, action) => {\n    state.scheduleEmailDialog.defaultAttachmentRef = action.payload;\n};\nconst resetScheduleEmailDialogDefaultAttachment = (state) => {\n    state.scheduleEmailDialog.defaultAttachmentRef = undefined;\n};\nconst openScheduleEmailManagementDialog = (state) => {\n    state.scheduleEmailManagementDialog.open = true;\n};\nconst closeScheduleEmailManagementDialog = (state) => {\n    state.scheduleEmailManagementDialog.open = false;\n};\nconst openSaveAsDialog = (state) => {\n    state.saveAsDialog.open = true;\n};\nconst closeSaveAsDialog = (state) => {\n    state.saveAsDialog.open = false;\n};\nconst openShareDialog = (state) => {\n    state.shareDialog.open = true;\n};\nconst closeShareDialog = (state) => {\n    state.shareDialog.open = false;\n};\nconst openDeleteDialog = (state) => {\n    state.deleteDialog.open = true;\n};\nconst closeDeleteDialog = (state) => {\n    state.deleteDialog.open = false;\n};\nconst openKpiDeleteDialog = (state, action) => {\n    state.kpiDeleteDialog.widgetCoordinates = action.payload;\n};\nconst closeKpiDeleteDialog = (state) => {\n    state.kpiDeleteDialog.widgetCoordinates = undefined;\n};\nconst setFilterBarExpanded = (state, action) => {\n    state.filterBar.expanded = action.payload;\n};\nconst openKpiAlertDialog = (state, action) => {\n    state.kpiAlerts.openedWidgetRef = action.payload;\n};\nconst closeKpiAlertDialog = (state) => {\n    state.kpiAlerts.openedWidgetRef = undefined;\n};\nconst openCancelEditModeDialog = (state) => {\n    state.cancelEditModeDialog.open = true;\n};\nconst closeCancelEditModeDialog = (state) => {\n    state.cancelEditModeDialog.open = false;\n};\nconst highlightKpiAlert = (state, action) => {\n    state.kpiAlerts.highlightedWidgetRef = action.payload;\n};\nconst setMenuButtonItemsVisibility = (state, action) => {\n    state.menuButton.itemsVisibility = action.payload;\n};\nconst selectWidget = (state, action) => {\n    state.selectedWidgetRef = action.payload;\n};\nconst clearWidgetSelection = (state) => {\n    state.selectedWidgetRef = undefined;\n};\nconst setConfigurationPanelOpened = (state, action) => {\n    state.configurationPanelOpened = action.payload;\n};\nconst setWidgetDateDatasetAutoSelect = (state, action) => {\n    state.widgetDateDatasetAutoSelect = action.payload;\n};\nconst requestInsightListUpdate = (state) => {\n    state.insightListLastUpdateRequested = +new Date();\n};\nconst setWidgetLoadingAdditionalDataStarted = (state, action) => {\n    state.widgetsLoadingAdditionalData.push(action.payload);\n};\nconst setWidgetLoadingAdditionalDataStopped = (state, action) => {\n    state.widgetsLoadingAdditionalData = state.widgetsLoadingAdditionalData.filter((item) => !areObjRefsEqual(item, action.payload));\n};\nconst setFilterAttributeSelectionOpen = (state, action) => {\n    state.filterAttributeSelectionOpen = action.payload;\n};\nconst selectFilterIndex = (state, action) => {\n    state.selectedFilterIndex = action.payload;\n};\nconst clearFilterIndexSelection = (state) => {\n    state.selectedFilterIndex = undefined;\n};\nconst setActiveSectionIndex = (state, action) => {\n    state.activeSectionIndex = action.payload;\n};\nconst clearActiveSectionIndex = (state) => {\n    state.activeSectionIndex = undefined;\n};\nconst resetInvalidDrillWidgetRefs = (state) => {\n    state.drillValidationMessages.invalidDrillWidgetRefs = [];\n};\nconst resetAllInvalidCustomUrlDrillParameterWidgets = (state) => {\n    state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets = [];\n};\nconst resetAllInvalidCustomUrlDrillParameterWidgetsWarnings = (state) => {\n    state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets =\n        state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets.map((item) => {\n            return Object.assign(Object.assign({}, item), { showMessage: false });\n        });\n};\nconst addInvalidDrillWidgetRefs = (state, action) => {\n    action.payload.forEach((toAdd) => {\n        if (!state.drillValidationMessages.invalidDrillWidgetRefs.some((existing) => areObjRefsEqual(existing, toAdd))) {\n            state.drillValidationMessages.invalidDrillWidgetRefs.push(toAdd);\n        }\n    });\n};\nconst setInvalidCustomUrlDrillParameterWidgets = (state, action) => {\n    action.payload.forEach((item) => {\n        const existingIndex = state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets.findIndex((i) => i.widgetId === widgetId(item.widget));\n        const itemToStore = {\n            drillsWithInvalidParametersLocalIds: item.invalidDrills.map(getDrillOriginLocalIdentifier),\n            widgetId: widgetId(item.widget),\n            widgetRef: widgetRef(item.widget),\n            widgetUri: widgetUri(item.widget),\n            showMessage: true,\n        };\n        if (existingIndex >= 0) {\n            state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets[existingIndex] = itemToStore;\n        }\n        else {\n            state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets.push(itemToStore);\n        }\n    });\n};\nconst resetInvalidCustomUrlDrillParameterWidget = (state, action) => {\n    action.payload.forEach((widget) => {\n        const existingIndex = state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets.findIndex((i) => i.widgetId === widgetId(widget));\n        if (existingIndex >= 0) {\n            state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets.splice(existingIndex, 1);\n        }\n    });\n};\nconst removeInvalidDrillWidgetRefs = (state, action) => {\n    state.drillValidationMessages.invalidDrillWidgetRefs =\n        state.drillValidationMessages.invalidDrillWidgetRefs.filter((existing) => !action.payload.some((toRemove) => areObjRefsEqual(toRemove, existing)));\n};\nconst setDraggingWidgetSource = (state, action) => {\n    state.draggingWidgetSource = action.payload;\n};\nconst clearDraggingWidgetSource = (state) => {\n    state.draggingWidgetSource = undefined;\n};\nconst setDraggingWidgetTarget = (state, action) => {\n    state.draggingWidgetTarget = action.payload;\n    state.activeSectionIndex = action.payload.sectionIndex;\n};\nconst clearDraggingWidgetTarget = (state) => {\n    state.draggingWidgetTarget = undefined;\n    state.activeSectionIndex = undefined;\n};\nconst setWidgetsOverlay = (state, action) => {\n    state.widgetsOverlay = action.payload;\n};\nconst toggleWidgetsOverlay = (state, action) => {\n    const { visible, refs } = action.payload;\n    refs.forEach((ref) => {\n        if (!ref) {\n            return;\n        }\n        const refId = objRefToString(ref);\n        const overlay = (state.widgetsOverlay[refId] = state.widgetsOverlay[refId] || {\n            showOverlay: visible,\n        });\n        overlay.showOverlay = visible;\n    });\n};\nconst hideAllWidgetsOverlay = (state) => {\n    state.widgetsOverlay = Object.keys(state.widgetsOverlay).reduce((prev, key) => {\n        return Object.assign(Object.assign({}, prev), { [key]: Object.assign(Object.assign({}, state.widgetsOverlay[key]), { showOverlay: false }) });\n    }, {});\n};\nexport const uiReducers = {\n    openScheduleEmailDialog,\n    closeScheduleEmailDialog,\n    setScheduleEmailDialogDefaultAttachment,\n    resetScheduleEmailDialogDefaultAttachment,\n    openScheduleEmailManagementDialog,\n    closeScheduleEmailManagementDialog,\n    openSaveAsDialog,\n    closeSaveAsDialog,\n    setFilterBarExpanded,\n    closeKpiAlertDialog,\n    openKpiAlertDialog,\n    highlightKpiAlert,\n    openShareDialog,\n    closeShareDialog,\n    openDeleteDialog,\n    closeDeleteDialog,\n    openKpiDeleteDialog,\n    closeKpiDeleteDialog,\n    setMenuButtonItemsVisibility,\n    selectWidget,\n    clearWidgetSelection,\n    setConfigurationPanelOpened,\n    setWidgetDateDatasetAutoSelect,\n    requestInsightListUpdate,\n    setWidgetLoadingAdditionalDataStarted,\n    setWidgetLoadingAdditionalDataStopped,\n    setFilterAttributeSelectionOpen,\n    selectFilterIndex,\n    clearFilterIndexSelection,\n    setActiveSectionIndex,\n    clearActiveSectionIndex,\n    openCancelEditModeDialog,\n    closeCancelEditModeDialog,\n    resetInvalidDrillWidgetRefs,\n    resetAllInvalidCustomUrlDrillParameterWidgets,\n    resetAllInvalidCustomUrlDrillParameterWidgetsWarnings,\n    addInvalidDrillWidgetRefs,\n    setInvalidCustomUrlDrillParameterWidgets,\n    removeInvalidDrillWidgetRefs,\n    resetInvalidCustomUrlDrillParameterWidget,\n    setDraggingWidgetSource,\n    clearDraggingWidgetSource,\n    setDraggingWidgetTarget,\n    clearDraggingWidgetTarget,\n    toggleWidgetsOverlay,\n    setWidgetsOverlay,\n    hideAllWidgetsOverlay,\n};\n//# sourceMappingURL=uiReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { uiInitialState } from \"./uiState.js\";\nimport { uiReducers } from \"./uiReducers.js\";\nconst uiSlice = createSlice({\n    name: \"uiSlice\",\n    initialState: uiInitialState,\n    reducers: uiReducers,\n});\nexport const uiSliceReducer = uiSlice.reducer;\n/**\n * Actions to control ui state of the dashboard.\n *\n * @internal\n */\nexport const uiActions = uiSlice.actions;\n//# sourceMappingURL=index.js.map","export const uiInitialState = {\n    scheduleEmailManagementDialog: {\n        open: false,\n    },\n    scheduleEmailDialog: {\n        open: false,\n        defaultAttachmentRef: undefined,\n    },\n    saveAsDialog: {\n        open: false,\n    },\n    shareDialog: {\n        open: false,\n    },\n    deleteDialog: {\n        open: false,\n    },\n    kpiDeleteDialog: {\n        widgetCoordinates: undefined,\n    },\n    cancelEditModeDialog: {\n        open: false,\n    },\n    filterBar: {\n        expanded: false,\n    },\n    kpiAlerts: {\n        highlightedWidgetRef: undefined,\n        openedWidgetRef: undefined,\n    },\n    menuButton: {\n        itemsVisibility: {},\n    },\n    selectedWidgetRef: undefined,\n    configurationPanelOpened: true,\n    widgetDateDatasetAutoSelect: false,\n    insightListLastUpdateRequested: 0,\n    widgetsLoadingAdditionalData: [],\n    filterAttributeSelectionOpen: false,\n    selectedFilterIndex: undefined,\n    activeSectionIndex: undefined,\n    drillValidationMessages: {\n        invalidDrillWidgetRefs: [],\n        invalidCustomUrlDrillParameterWidgets: [],\n    },\n    draggingWidgetSource: undefined,\n    draggingWidgetTarget: undefined,\n    widgetsOverlay: {},\n};\n//# sourceMappingURL=uiState.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { renderModeInitialState } from \"./renderModeState.js\";\nimport { renderModeReducers } from \"./renderModeReducers.js\";\nconst renderModeSlice = createSlice({\n    name: \"renderModeSlice\",\n    initialState: renderModeInitialState,\n    reducers: renderModeReducers,\n});\nexport const renderModeSliceReducer = renderModeSlice.reducer;\n/**\n * Actions to control renderMode state of the dashboard.\n *\n * @internal\n */\nexport const renderModeActions = renderModeSlice.actions;\n//# sourceMappingURL=index.js.map","export const renderModeInitialState = {\n    renderMode: \"view\",\n};\n//# sourceMappingURL=renderModeState.js.map","const setRenderMode = (state, action) => {\n    state.renderMode = action.payload;\n};\nconst setEditRenderMode = (state) => {\n    state.renderMode = \"edit\";\n};\nconst setViewRenderMode = (state) => {\n    state.renderMode = \"view\";\n};\nexport const renderModeReducers = {\n    setRenderMode,\n    setEditRenderMode,\n    setViewRenderMode,\n};\n//# sourceMappingURL=renderModeReducers.js.map","export function loadDashboardList(ctx) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().getDashboards();\n}\n//# sourceMappingURL=loadDashboardList.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nexport const listedDashboardsEntityAdapter = createEntityAdapter({\n    selectId: (dashboard) => objRefToString(dashboard.ref),\n});\n//# sourceMappingURL=listedDashboardsEntityAdapter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { listedDashboardsEntityAdapter } from \"./listedDashboardsEntityAdapter.js\";\nconst listedDashboardsSlice = createSlice({\n    name: \"listedDashboards\",\n    initialState: listedDashboardsEntityAdapter.getInitialState(),\n    reducers: {\n        setListedDashboards: listedDashboardsEntityAdapter.setAll,\n        addListedDashboard: listedDashboardsEntityAdapter.upsertOne,\n    },\n});\nexport const listedDashboardsSliceReducer = listedDashboardsSlice.reducer;\nexport const listedDashboardsActions = listedDashboardsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { backendCapabilitiesInitialState } from \"./backendCapabilitiesState.js\";\nimport { backendCapabilitiesReducers } from \"./backendCapabilitiesReducers.js\";\nconst backendCapabilitiesSlice = createSlice({\n    name: \"backendCapabilities\",\n    initialState: backendCapabilitiesInitialState,\n    reducers: backendCapabilitiesReducers,\n});\nexport const backendCapabilitiesSliceReducer = backendCapabilitiesSlice.reducer;\nexport const backendCapabilitiesActions = backendCapabilitiesSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nexport const backendCapabilitiesInitialState = { backendCapabilities: undefined };\n//# sourceMappingURL=backendCapabilitiesState.js.map","// (C) 2021 GoodData Corporation\nconst setBackendCapabilities = (state, action) => {\n    state.backendCapabilities = action.payload;\n};\nexport const backendCapabilitiesReducers = {\n    setBackendCapabilities,\n};\n//# sourceMappingURL=backendCapabilitiesReducers.js.map","// (C) 2019-2022 GoodData Corporation\nimport groupBy from \"lodash/groupBy.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport min from \"lodash/min.js\";\nimport max from \"lodash/max.js\";\nimport format from \"date-fns/format/index.js\";\nimport startOfDay from \"date-fns/startOfDay/index.js\";\nimport subMonths from \"date-fns/subMonths/index.js\";\n// TODO: this import was coming from internal/esm and was wrecking tests\nconst PLATFORM_DATE_FORMAT = \"yyyy-MM-dd\";\n/**\n * Converts date filter config - as stored on the backend - into the date filter options that are aimed for\n * consumption by the actual date filtering view components.\n *\n * @param config - date filter config from backend\n */\nexport function convertDateFilterConfigToDateFilterOptions(config) {\n    const allTime = convertAllTime(config.allTime);\n    const absoluteForm = convertAbsoluteForm(config.absoluteForm);\n    const relativeForm = convertRelativeForm(config.relativeForm);\n    const absolutePreset = convertAbsolutePresets(config.absolutePresets);\n    const relativePreset = convertRelativePresets(config.relativePresets);\n    return removeEmptyKeysFromDateFilterOptions({\n        allTime,\n        absoluteForm,\n        absolutePreset,\n        relativeForm,\n        relativePreset,\n    });\n}\nfunction convertAllTime(filter) {\n    return (filter && Object.assign(Object.assign({}, filter), { type: \"allTime\" }));\n}\nfunction convertAbsoluteForm(filter) {\n    return (filter && Object.assign(Object.assign({}, filter), { from: format(startOfDay(subMonths(new Date(), 1)), PLATFORM_DATE_FORMAT), to: format(startOfDay(new Date()), PLATFORM_DATE_FORMAT), type: \"absoluteForm\" }));\n}\nfunction convertRelativeForm(filter) {\n    return (filter && {\n        from: undefined,\n        // we order the granularities anyway, this lets the user to config the default\n        granularity: filter.availableGranularities[0],\n        localIdentifier: filter.localIdentifier,\n        name: filter.name,\n        to: undefined,\n        type: \"relativeForm\",\n        visible: filter.visible,\n    });\n}\nfunction convertAbsolutePresets(filters) {\n    return filters === null || filters === void 0 ? void 0 : filters.map((preset) => sanitizeDateFilterOption(Object.assign(Object.assign({}, preset), { type: \"absolutePreset\" })));\n}\nfunction convertRelativePresets(filters) {\n    return (filters &&\n        groupBy(filters.map((preset) => sanitizeDateFilterOption(Object.assign(Object.assign({}, preset), { type: \"relativePreset\" }))), (preset) => preset.granularity));\n}\nfunction removeEmptyKeysFromDateFilterOptions(dateFilterOptions) {\n    const { absoluteForm, absolutePreset, allTime, relativeForm, relativePreset } = dateFilterOptions;\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (allTime && { allTime })), (absoluteForm && { absoluteForm })), (!isEmpty(absolutePreset) && { absolutePreset })), (relativeForm && { relativeForm })), (!isEmpty(relativePreset) && { relativePreset }));\n}\nfunction sanitizeDateFilterOption(option) {\n    return Object.assign(Object.assign({}, option), { from: min([option.from, option.to]), to: max([option.from, option.to]) });\n}\n//# sourceMappingURL=dateFilterConfigConverters.js.map","import { isAbsoluteDateFilterOption, isRelativeDateFilterOption, } from \"@gooddata/sdk-ui-filters\";\nimport compact from \"lodash/compact.js\";\nimport flatten from \"lodash/flatten.js\";\nimport values from \"lodash/values.js\";\nconst VIRTUAL_PRESET_IDENTIFIER = \"GDC__VIRTUAL_PRESET\";\nconst virtualPresetBase = {\n    localIdentifier: VIRTUAL_PRESET_IDENTIFIER,\n    name: \"\",\n    visible: false,\n};\n/**\n * Tries to match a preset or a form with the provided value. Prioritizes the provided option if possible.\n *\n * @remarks\n * This is to handle cases when user picked a form and filled values that match an existing preset.\n * In those cases we want to show the form as picked even though a preset would otherwise be preferred.\n *\n * @param dateFilter - value to match against\n * @param availableOptions - date options available\n * @param preferredOptionId - id of the option that should be matched first if possible\n */\nexport function matchDateFilterToDateFilterOptionWithPreference(dateFilter, availableOptions, preferredOptionId) {\n    const preferredOption = preferredOptionId\n        ? findDateFilterOptionById(preferredOptionId, availableOptions)\n        : undefined;\n    // we only really need to handle the cases when the selected option is a form\n    // other cases are correctly handled by the unbiased matching function\n    if (dateFilter &&\n        ((preferredOption === null || preferredOption === void 0 ? void 0 : preferredOption.type) === \"absoluteForm\" || (preferredOption === null || preferredOption === void 0 ? void 0 : preferredOption.type) === \"relativeForm\") &&\n        canReconstructFormForStoredFilter(availableOptions, dateFilter)) {\n        return reconstructFormForStoredFilter(availableOptions, dateFilter);\n    }\n    return matchDateFilterToDateFilterOption(dateFilter, availableOptions);\n}\n/**\n * Tries to match a preset or a form with the provided value. Prioritizes presets over forms.\n * @param dateFilterValue - value to match against\n * @param availableOptions - date options available\n */\nexport function matchDateFilterToDateFilterOption(dateFilter, availableOptions) {\n    var _a;\n    // no value means All Time, try matching against All time (if it is available) or create virtual preset for it\n    if (!dateFilter) {\n        const { allTime } = availableOptions;\n        return allTime\n            ? { dateFilterOption: allTime, excludeCurrentPeriod: false }\n            : createVirtualPresetForStoredFilter(undefined);\n    }\n    // try matching the filter as is\n    const matchingFilter = findDateFilterOptionByValue(dateFilter, availableOptions);\n    if (matchingFilter) {\n        return { dateFilterOption: matchingFilter, excludeCurrentPeriod: false };\n    }\n    // try matching the filter with excludeCurrentPeriod === true, but only for relativeFormPresets\n    if (dateFilter.dateFilter.type === \"relative\" && ((_a = dateFilter.dateFilter.to) === null || _a === void 0 ? void 0 : _a.toString()) === \"-1\") {\n        const filterToMatch = {\n            dateFilter: Object.assign(Object.assign({}, dateFilter.dateFilter), { from: Number.parseInt(dateFilter.dateFilter.from.toString(), 10) + 1, to: 0 }),\n        };\n        const matchingFilter = findDateFilterOptionByValueAndType(filterToMatch, availableOptions, \"relativePreset\");\n        if (matchingFilter) {\n            return { dateFilterOption: matchingFilter, excludeCurrentPeriod: true };\n        }\n    }\n    // the stored filter must be a form with custom values\n    if (canReconstructFormForStoredFilter(availableOptions, dateFilter)) {\n        return reconstructFormForStoredFilter(availableOptions, dateFilter);\n    }\n    // we cannot use the form because it is disabled or otherwise incompatible\n    // -> we must create a virtual hidden preset\n    return createVirtualPresetForStoredFilter(dateFilter);\n}\n/**\n * Flattens the provided date filter options. The flattening maintains a stable, predefined order in which\n * the options should be rendered by the date filter component.\n *\n * @param dateFilterOptions - available options to flatten\n */\nexport function flattenDateFilterOptions(dateFilterOptions) {\n    const relativePresets = flatten(values(dateFilterOptions.relativePreset));\n    // the order is significant here\n    // the first visible filter is selected for new dashboards if none is specified in config\n    return compact([\n        dateFilterOptions.allTime,\n        ...(dateFilterOptions.absolutePreset || []),\n        ...relativePresets,\n        dateFilterOptions.absoluteForm,\n        dateFilterOptions.relativeForm,\n    ]);\n}\nfunction canReconstructFormForStoredFilter(options, dateFilter) {\n    switch (dateFilter.dateFilter.type) {\n        case \"absolute\":\n            return isDateFilterOptionVisible(options.absoluteForm);\n        case \"relative\":\n            return isDateFilterOptionVisible(options.relativeForm);\n        default:\n            throw new Error(\"Unknown dateFilterValue type\");\n    }\n}\nfunction reconstructFormForStoredFilter(options, dateFilter) {\n    if (dateFilter.dateFilter.type === \"absolute\") {\n        const dateFilterOption = Object.assign(Object.assign({}, options.absoluteForm), { from: dateFilter.dateFilter.from.toString(), to: dateFilter.dateFilter.to.toString(), type: \"absoluteForm\" });\n        return { dateFilterOption, excludeCurrentPeriod: false };\n    }\n    else {\n        const dateFilterOption = Object.assign(Object.assign({}, options.relativeForm), { from: Number.parseInt(dateFilter.dateFilter.from.toString(), 10), to: Number.parseInt(dateFilter.dateFilter.to.toString(), 10), granularity: dateFilter.dateFilter.granularity, type: \"relativeForm\" });\n        return { dateFilterOption, excludeCurrentPeriod: false };\n    }\n}\nfunction isDateFilterOptionVisible(option) {\n    return !!(option === null || option === void 0 ? void 0 : option.visible);\n}\nfunction findDateFilterOptionById(id, dateFilterOptions) {\n    return flattenDateFilterOptions(dateFilterOptions).find((option) => option.localIdentifier === id);\n}\nexport function findDateFilterOptionByValue(dateFilter, dateFilterOptions) {\n    return flattenDateFilterOptions(dateFilterOptions).find(filterMatchesData(dateFilter));\n}\nfunction findDateFilterOptionByValueAndType(dateFilter, dateFilterOptions, type) {\n    return flattenDateFilterOptions(dateFilterOptions)\n        .filter((option) => option.type === type)\n        .find(filterMatchesData(dateFilter));\n}\nconst filterMatchesData = (dateFilter) => (filter) => {\n    var _a, _b;\n    if (!filter) {\n        return false;\n    }\n    const data = dateFilter.dateFilter;\n    if (isAbsoluteDateFilterOption(filter)) {\n        return data.type === \"absolute\" && filter.from === data.from && filter.to === data.to;\n    }\n    if (isRelativeDateFilterOption(filter)) {\n        return (data.type === \"relative\" &&\n            filter.from !== undefined &&\n            filter.from.toString() === ((_a = data.from) === null || _a === void 0 ? void 0 : _a.toString()) &&\n            filter.to !== undefined &&\n            filter.to.toString() === ((_b = data.to) === null || _b === void 0 ? void 0 : _b.toString()) &&\n            filter.granularity === data.granularity);\n    }\n    return false;\n};\n/**\n * Creates a virtual preset with values corresponding to a provided server-side value.\n * This is used in situations when a dashboard was saved with setting\n * that can no longer be reproduced by the available options (e.g. relativeForm was used and later, was disabled)\n */\nfunction createVirtualPresetForStoredFilter(dateFilter) {\n    if (!dateFilter) {\n        const dateFilterOption = Object.assign(Object.assign({}, virtualPresetBase), { type: \"allTime\" });\n        return { dateFilterOption, excludeCurrentPeriod: false };\n    }\n    const { type, from, to, granularity } = dateFilter.dateFilter;\n    if (type === \"absolute\") {\n        const dateFilterOption = Object.assign(Object.assign({}, virtualPresetBase), { from: from.toString(), to: to.toString(), type: \"absolutePreset\" });\n        return { dateFilterOption, excludeCurrentPeriod: false };\n    }\n    else {\n        const dateFilterOption = Object.assign(Object.assign({}, virtualPresetBase), { from: Number.parseInt(from.toString(), 10), to: Number.parseInt(to.toString(), 10), granularity, type: \"relativePreset\" });\n        return { dateFilterOption, excludeCurrentPeriod: false };\n    }\n}\n//# sourceMappingURL=dateFilterOptionMapping.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isAllTimeDateFilterOption, isAbsoluteDateFilterPreset, isRelativeDateFilterPreset, } from \"@gooddata/sdk-model\";\nimport { convertDateFilterConfigToDateFilterOptions } from \"../dateFilterConfig/dateFilterConfigConverters.js\";\nimport { flattenDateFilterOptions } from \"../dateFilterConfig/dateFilterOptionMapping.js\";\nimport { convertOptionToDateFilter } from \"../dateFilterConfig/dateFilterOptionConverters.js\";\n/**\n * Returns the date filter option that should be used for new dashboards (respecting the selectedOption configuration).\n *\n * @remarks\n * If the date filter option defined by selectedOption value cannot be used (or the value is not specified)\n * or this is disabled by the second parameter, the function falls back to the first visible date filter option.\n *\n * @param dateFilterConfig - configuration to use\n * @param respectSelectedOption - whether to try to use the item in the selectedOption configuration\n * @returns undefined if no usable filter is found\n */\nfunction getDefaultDateFilterOption(dateFilterConfig, respectSelectedOption) {\n    const { selectedOption: candidateOptionId } = dateFilterConfig;\n    const dateFilterOptions = convertDateFilterConfigToDateFilterOptions(dateFilterConfig);\n    const flattenedOptions = flattenDateFilterOptions(dateFilterOptions);\n    if (respectSelectedOption) {\n        const candidateOption = flattenedOptions.find((option) => option.localIdentifier === candidateOptionId);\n        if (candidateOption) {\n            // only presets and all time are allowed for now (RAIL-1598)\n            const canCandidateFilterBeSelected = candidateOption.visible &&\n                (isAllTimeDateFilterOption(candidateOption) ||\n                    isAbsoluteDateFilterPreset(candidateOption) ||\n                    isRelativeDateFilterPreset(candidateOption));\n            if (canCandidateFilterBeSelected) {\n                return candidateOption;\n            }\n        }\n    }\n    return flattenedOptions.find((option) => option.visible);\n}\nfunction getDefaultDateFilter(dateFilterConfig, respectSelectedOption) {\n    const defaultFilterOption = getDefaultDateFilterOption(dateFilterConfig, respectSelectedOption);\n    if (!defaultFilterOption) {\n        return;\n    }\n    return convertOptionToDateFilter(defaultFilterOption);\n}\nexport function createDefaultFilterContext(dateFilterConfig, \n/**\n * TODO: we should probably get to a state where this parameter is not needed and the selectedOption\n * is always respected (for both new and existing dashboards without filterContext).\n * Done like this for now because it is the way gdc-dashboards behave.\n */\nrespectSelectedOption = true) {\n    const defaultDateFilter = getDefaultDateFilter(dateFilterConfig, respectSelectedOption);\n    return {\n        title: \"filterContext\",\n        description: \"\",\n        filters: defaultDateFilter ? [defaultDateFilter] : [],\n    };\n}\n//# sourceMappingURL=defaultFilterContext.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isAbsoluteDateFilterOption, isRelativeDateFilterOption, } from \"@gooddata/sdk-ui-filters\";\nimport { isAllTimeDateFilterOption } from \"@gooddata/sdk-model\";\nimport { InvariantError } from \"ts-invariant\";\nexport function convertOptionToDateFilter(option) {\n    var _a;\n    if (isAllTimeDateFilterOption(option)) {\n        return;\n    }\n    if (isAbsoluteDateFilterOption(option)) {\n        return {\n            dateFilter: {\n                type: \"absolute\",\n                granularity: \"GDC.time.date\",\n                from: option.from,\n                to: option.to,\n            },\n        };\n    }\n    else if (isRelativeDateFilterOption(option)) {\n        return {\n            dateFilter: {\n                type: \"relative\",\n                granularity: (_a = option.granularity) !== null && _a !== void 0 ? _a : \"GDC.time.date\",\n                from: option.from,\n                to: option.to,\n            },\n        };\n    }\n    throw new InvariantError(\"Unexpected option type when converting date filter option to filter.\");\n}\n//# sourceMappingURL=dateFilterOptionConverters.js.map","// (C) 2021-2023 GoodData Corporation\nexport const EmptyDashboardDescriptor = {\n    title: \"\",\n    description: \"\",\n    shareStatus: \"private\",\n};\nexport const metaInitialState = {\n    descriptor: EmptyDashboardDescriptor,\n    persistedDashboard: undefined,\n};\n//# sourceMappingURL=metaState.js.map","// (C) 2021-2022 GoodData Corporation\nimport { EmptyDashboardDescriptor } from \"./metaState.js\";\nimport { invariant } from \"ts-invariant\";\nconst setMeta = (state, action) => {\n    const { dashboard } = action.payload;\n    state.persistedDashboard = dashboard;\n    state.descriptor = dashboard\n        ? {\n            title: dashboard.title,\n            description: dashboard.description,\n            tags: dashboard.tags,\n            shareStatus: dashboard.shareStatus,\n            isUnderStrictControl: dashboard.isUnderStrictControl,\n            isLocked: dashboard.isLocked,\n        }\n        : Object.assign({}, EmptyDashboardDescriptor);\n};\nconst setDashboardTitle = (state, action) => {\n    invariant(state.descriptor);\n    state.descriptor.title = action.payload;\n};\nexport const metaReducers = {\n    setMeta,\n    setDashboardTitle,\n};\n//# sourceMappingURL=metaReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { metaReducers } from \"./metaReducers.js\";\nimport { metaInitialState } from \"./metaState.js\";\nconst metaSlice = createSlice({\n    name: \"meta\",\n    initialState: metaInitialState,\n    reducers: metaReducers,\n});\nexport const metaSliceReducer = metaSlice.reducer;\nexport const metaActions = metaSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isDashboardAttributeFilter, isTempFilterContext, } from \"@gooddata/sdk-model\";\nimport { createDefaultFilterContext } from \"./defaultFilterContext.js\";\n/**\n * Given a dashboard, this function will inspect its filter context and always return a valid instance of IFilterContextDefinition to use.\n *\n * The filter context definition represents a filter context that may or may not be already persisted on the backend. As such, this is\n * ideal to represent all possible states:\n *\n * 1. Dashboard has a persisted filter context\n * 2. Dashboard has no persisted filter context, in which case a new, default context should be used\n * 3. Dashboard is being exported and uses a temporary filter context that may stored in a different persistence store and\n *    possibly in a different format - while holding the same information.\n *\n * The filter context will be validated and sanitized so that any bad items (that may be added through rest API without validation)\n * will be removed.\n *\n * TODO: it's worth considering whether the temp filter context should be rather hidden as an impl detail and not exposed via SPI.\n *\n * @param dashboard - dashboard to get filter context from\n * @param dateFilterConfig - date filter config to use in case default filter context has to be created\n */\nexport function dashboardFilterContextDefinition(dashboard, dateFilterConfig) {\n    const { filterContext } = dashboard;\n    if (!filterContext) {\n        return createDefaultFilterContext(dateFilterConfig, !dashboard.ref);\n    }\n    if (isTempFilterContext(filterContext)) {\n        // Temp filter context is not sanitized.. not sure why, but this is how KD was doing it.\n        return {\n            title: \"filterContext\",\n            description: \"\",\n            filters: filterContext.filters,\n        };\n    }\n    const result = Object.assign({}, dashboardFilterContextSanitize(filterContext));\n    delete result.ref;\n    delete result.uri;\n    delete result.identifier;\n    return result;\n}\n/**\n * Given a dashboard, this function will return identity information about the filter context used by the dashboard.\n *\n * If the dashboard has no filter context or a temporary filter context (used during exports) the identity\n * will be undefined. This should be indication to the caller that whatever the filter context the dashboard\n * is working with is not persisted.\n *\n * @param dashboard - dashboard to get filter context from.\n */\nexport function dashboardFilterContextIdentity(dashboard) {\n    const { filterContext } = dashboard;\n    if (!filterContext || isTempFilterContext(filterContext) || !filterContext.ref) {\n        return undefined;\n    }\n    return {\n        ref: filterContext.ref,\n        uri: filterContext.uri,\n        identifier: filterContext.identifier,\n    };\n}\n/**\n * This function will sanitize the filter context and remove invalid entries:\n *\n * 1.  Attribute filters that are setup with parent filters, but those parent filters do not exist in the contex.\n */\nexport function dashboardFilterContextSanitize(filterContext) {\n    const filters = filterContext.filters;\n    const filterLocalIdentifiers = filters\n        .filter(isDashboardAttributeFilter)\n        .map((filter) => filter.attributeFilter.localIdentifier);\n    const sanitizedFilters = filters.map((filter) => {\n        if (!isDashboardAttributeFilter(filter) || !filter.attributeFilter.filterElementsBy) {\n            return filter;\n        }\n        const sanitizedFilterElementsBy = filter.attributeFilter.filterElementsBy.filter((filterElementsBy) => filterLocalIdentifiers.indexOf(filterElementsBy.filterLocalIdentifier) !== -1);\n        return {\n            attributeFilter: Object.assign(Object.assign({}, filter.attributeFilter), { filterElementsBy: sanitizedFilterElementsBy }),\n        };\n    });\n    return Object.assign(Object.assign({}, filterContext), { filters: sanitizedFilters });\n}\n//# sourceMappingURL=dashboardFilterContext.js.map","// (C) 2019-2021 GoodData Corporation\n// Grid configuration\nexport const DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT = 12;\n//# sourceMappingURL=config.js.map","// (C) 2019-2022 GoodData Corporation\nimport isEqual from \"lodash/isEqual.js\";\nimport isNil from \"lodash/isNil.js\";\nimport { areObjRefsEqual, isWidget, isWidgetDefinition, isKpiWidgetDefinition, isKpiWidget, isInsightWidgetDefinition, isInsightWidget, isDashboardLayout, isDashboardLayoutItem, isObjRef, } from \"@gooddata/sdk-model\";\n/**\n * @alpha\n */\nexport class DashboardLayoutItemFacade {\n    constructor(sectionFacade, item, itemIndex) {\n        this.sectionFacade = sectionFacade;\n        this.item = item;\n        this.itemIndex = itemIndex;\n    }\n    static for(sectionFacade, item, index) {\n        return new DashboardLayoutItemFacade(sectionFacade, item, index);\n    }\n    raw() {\n        return this.item;\n    }\n    section() {\n        return this.sectionFacade;\n    }\n    index() {\n        return this.itemIndex;\n    }\n    indexIs(index) {\n        return this.index() === index;\n    }\n    isFirst() {\n        return this.indexIs(0);\n    }\n    isLast() {\n        return this.indexIs(this.sectionFacade.items().count() - 1);\n    }\n    widget() {\n        return this.item.widget;\n    }\n    ref() {\n        if (isObjRef(this.item.widget)) {\n            return this.item.widget;\n        }\n        return undefined;\n    }\n    widgetEquals(widget) {\n        return isEqual(this.widget(), widget);\n    }\n    widgetIs(widget) {\n        return this.widget() === widget;\n    }\n    isEmpty() {\n        return isNil(this.widget());\n    }\n    size() {\n        return this.item.size;\n    }\n    sizeForScreen(screen) {\n        return this.size()[screen];\n    }\n    hasSizeForScreen(screen) {\n        return !isNil(this.sizeForScreen(screen));\n    }\n    testRaw(pred) {\n        return pred(this.raw());\n    }\n    test(pred) {\n        return pred(this);\n    }\n    isWidgetItem() {\n        return isWidget(this.widget());\n    }\n    isWidgetDefinitionItem() {\n        return isWidgetDefinition(this.widget());\n    }\n    isKpiWidgetItem() {\n        return isKpiWidget(this.widget());\n    }\n    isKpiWidgetDefinitionItem() {\n        return isKpiWidgetDefinition(this.widget());\n    }\n    isInsightWidgetItem() {\n        return isInsightWidget(this.widget());\n    }\n    isInsightWidgetDefinitionItem() {\n        return isInsightWidgetDefinition(this.widget());\n    }\n    isLayoutItem() {\n        return isDashboardLayout(this.widget());\n    }\n    isCustomItem() {\n        return !isDashboardLayoutItem(this.widget());\n    }\n    isWidgetItemWithRef(ref) {\n        var _a;\n        if (this.isWidgetItem()) {\n            return areObjRefsEqual((_a = this.item.widget) === null || _a === void 0 ? void 0 : _a.ref, ref);\n        }\n        return false;\n    }\n    isWidgetItemWithInsightRef(ref) {\n        var _a;\n        if (this.isInsightWidgetItem() || this.isInsightWidgetDefinitionItem()) {\n            return areObjRefsEqual((_a = this.item.widget) === null || _a === void 0 ? void 0 : _a.insight, ref);\n        }\n        return false;\n    }\n    isWidgetItemWithKpiRef(ref) {\n        var _a;\n        if (this.isKpiWidgetItem() || this.isKpiWidgetDefinitionItem()) {\n            return areObjRefsEqual((_a = this.item.widget) === null || _a === void 0 ? void 0 : _a.ref, ref);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=item.js.map","import flatMap from \"lodash/flatMap.js\";\nimport { DashboardLayoutItemFacade } from \"./item.js\";\nimport { invariant } from \"ts-invariant\";\nimport { DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT } from \"../config.js\";\n/**\n * @alpha\n */\nexport class DashboardLayoutItemsFacade {\n    constructor(itemFacades) {\n        this.itemFacades = itemFacades;\n    }\n    static for(sectionFacade, items) {\n        const itemFacades = items.map((column, index) => DashboardLayoutItemFacade.for(sectionFacade, column, index));\n        return new DashboardLayoutItemsFacade(itemFacades);\n    }\n    raw() {\n        return this.itemFacades.map((item) => item.raw());\n    }\n    item(index) {\n        return this.itemFacades[index];\n    }\n    all() {\n        return this.itemFacades;\n    }\n    asGridRows(screen) {\n        const renderedRows = [];\n        let currentRowWidth = 0;\n        let currentRow = [];\n        this.itemFacades.forEach((itemFacade) => {\n            const itemSize = itemFacade.sizeForScreen(screen);\n            invariant(itemSize, `Item size for ${screen} screen is not defined.`);\n            if (currentRowWidth + itemSize.gridWidth > DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT) {\n                renderedRows.push(currentRow);\n                currentRow = [];\n                currentRowWidth = 0;\n            }\n            currentRow.push(itemFacade);\n            currentRowWidth = currentRowWidth + itemSize.gridWidth;\n        });\n        if (currentRow.length > 0) {\n            renderedRows.push(currentRow);\n        }\n        return renderedRows;\n    }\n    flatMap(callback) {\n        return flatMap(this.itemFacades, callback);\n    }\n    count() {\n        return this.itemFacades.length;\n    }\n    map(callback) {\n        return this.itemFacades.map(callback);\n    }\n    reduce(callback, initialValue) {\n        return this.itemFacades.reduce(callback, initialValue);\n    }\n    every(pred) {\n        return this.itemFacades.every(pred);\n    }\n    some(pred) {\n        return this.itemFacades.some(pred);\n    }\n    find(pred) {\n        return this.itemFacades.find(pred);\n    }\n    filter(pred) {\n        return this.itemFacades.filter(pred);\n    }\n}\n//# sourceMappingURL=items.js.map","// (C) 2019-2022 GoodData Corporation\nimport isEqual from \"lodash/isEqual.js\";\nimport isNil from \"lodash/isNil.js\";\nimport { DashboardLayoutItemFacade } from \"./item.js\";\nimport { DashboardLayoutItemsFacade } from \"./items.js\";\n/**\n * @alpha\n */\nexport class DashboardLayoutSectionFacade {\n    constructor(layoutFacade, section, sectionIndex) {\n        this.layoutFacade = layoutFacade;\n        this.section = section;\n        this.sectionIndex = sectionIndex;\n    }\n    static for(layoutFacade, section, index) {\n        return new DashboardLayoutSectionFacade(layoutFacade, section, index);\n    }\n    raw() {\n        return this.section;\n    }\n    header() {\n        return this.section.header;\n    }\n    title() {\n        var _a;\n        return (_a = this.header()) === null || _a === void 0 ? void 0 : _a.title;\n    }\n    description() {\n        var _a;\n        return (_a = this.header()) === null || _a === void 0 ? void 0 : _a.description;\n    }\n    index() {\n        return this.sectionIndex;\n    }\n    isFirst() {\n        return this.indexIs(0);\n    }\n    isLast() {\n        return this.indexIs(this.layoutFacade.sections().count() - 1);\n    }\n    testRaw(pred) {\n        return pred(this.raw());\n    }\n    test(pred) {\n        return pred(this);\n    }\n    indexIs(index) {\n        return this.index() === index;\n    }\n    headerEquals(header) {\n        return isEqual(this.header(), header);\n    }\n    hasHeader() {\n        return !isNil(this.header());\n    }\n    hasTitle() {\n        return !isNil(this.title());\n    }\n    hasDescription() {\n        return !isNil(this.description());\n    }\n    titleEquals(title) {\n        return isEqual(this.title(), title);\n    }\n    descriptionEquals(description) {\n        return isEqual(this.description(), description);\n    }\n    isEmpty() {\n        return this.items().count() === 0;\n    }\n    items() {\n        return DashboardLayoutItemsFacade.for(this, this.section.items);\n    }\n    item(index) {\n        const column = this.section.items[index];\n        if (!column) {\n            return undefined;\n        }\n        return DashboardLayoutItemFacade.for(this, column, index);\n    }\n    layout() {\n        return this.layoutFacade;\n    }\n}\n//# sourceMappingURL=section.js.map","// (C) 2019-2022 GoodData Corporation\nimport flatMap from \"lodash/flatMap.js\";\nimport { DashboardLayoutSectionFacade } from \"./section.js\";\n/**\n * @alpha\n */\nexport class DashboardLayoutSectionsFacade {\n    constructor(layoutFacade, sectionFacades) {\n        this.layoutFacade = layoutFacade;\n        this.sectionFacades = sectionFacades;\n    }\n    static for(layoutFacade, sections) {\n        const sectionFacades = sections.map((section, index) => DashboardLayoutSectionFacade.for(layoutFacade, section, index));\n        return new DashboardLayoutSectionsFacade(layoutFacade, sectionFacades);\n    }\n    raw() {\n        return this.sectionFacades.map((s) => s.raw());\n    }\n    all() {\n        return this.sectionFacades;\n    }\n    section(index) {\n        return this.sectionFacades[index];\n    }\n    flatMap(callback) {\n        return flatMap(this.sectionFacades, callback);\n    }\n    count() {\n        return this.sectionFacades.length;\n    }\n    map(callback) {\n        return this.sectionFacades.map(callback);\n    }\n    reduce(callback, initialValue) {\n        return this.sectionFacades.reduce(callback, initialValue);\n    }\n    every(pred) {\n        return this.sectionFacades.every(pred);\n    }\n    some(pred) {\n        return this.sectionFacades.some(pred);\n    }\n    find(pred) {\n        return this.sectionFacades.find(pred);\n    }\n    filter(pred) {\n        return this.sectionFacades.filter(pred);\n    }\n}\n//# sourceMappingURL=sections.js.map","// (C) 2019-2023 GoodData Corporation\nimport { isDashboardLayout } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { DashboardLayoutSectionsFacade } from \"./sections.js\";\n/**\n * @alpha\n */\nexport class DashboardLayoutFacade {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    /**\n     * Creates an instance of DashboardLayoutFacade\n     * @param layout - layout to wrap\n     */\n    static for(layout) {\n        invariant(isDashboardLayout(layout), \"Provided data must be IDashboardLayout.\");\n        return new DashboardLayoutFacade(layout);\n    }\n    sections() {\n        if (this.sectionsCache === undefined) {\n            this.sectionsCache = DashboardLayoutSectionsFacade.for(this, this.layout.sections);\n        }\n        return this.sectionsCache;\n    }\n    section(rowIndex) {\n        return this.sections().section(rowIndex);\n    }\n    size() {\n        return this.layout.size;\n    }\n    raw() {\n        return this.layout;\n    }\n}\n//# sourceMappingURL=layout.js.map","import { Builder, resolveValueOrUpdateCallback } from \"../builder.js\";\n/**\n * @alpha\n */\nexport class WidgetBaseBuilder extends Builder {\n    constructor() {\n        super(...arguments);\n        this.setWidget = (updateCallback) => {\n            this.item = updateCallback(this.item);\n            return this;\n        };\n        this.setWidgetProp = (prop, valueOrUpdateCallback) => {\n            this.setWidget((w) => (Object.assign(Object.assign({}, w), { [prop]: resolveValueOrUpdateCallback(valueOrUpdateCallback, w[prop]) })));\n            return this;\n        };\n        this.title = (valueOrUpdateCallback) => this.setWidgetProp(\"title\", valueOrUpdateCallback);\n        this.description = (valueOrUpdateCallback) => this.setWidgetProp(\"description\", valueOrUpdateCallback);\n        this.ignoreDashboardFilters = (valueOrUpdateCallback) => this.setWidgetProp(\"ignoreDashboardFilters\", valueOrUpdateCallback);\n        this.dateDataSet = (valueOrUpdateCallback) => this.setWidgetProp(\"dateDataSet\", valueOrUpdateCallback);\n        this.ref = (valueOrUpdateCallback) => this.setWidgetProp(\"ref\", valueOrUpdateCallback);\n        this.id = (valueOrUpdateCallback) => this.setWidgetProp(\"identifier\", valueOrUpdateCallback);\n        this.uri = (valueOrUpdateCallback) => this.setWidgetProp(\"uri\", valueOrUpdateCallback);\n    }\n}\n//# sourceMappingURL=widgetFactory.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isInsightWidgetDefinition, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport { WidgetBaseBuilder } from \"./widgetFactory.js\";\n/**\n * @alpha\n */\nexport class InsightWidgetBuilder extends WidgetBaseBuilder {\n    constructor(item, validator) {\n        super(item, validator);\n        this.item = item;\n        this.validator = validator;\n        this.drills = (valueOrUpdateCallback) => this.setWidgetProp(\"drills\", valueOrUpdateCallback);\n        this.insight = (valueOrUpdateCallback) => this.setWidgetProp(\"insight\", valueOrUpdateCallback);\n        this.properties = (valueOrUpdateCallback) => this.setWidgetProp(\"properties\", valueOrUpdateCallback);\n    }\n    static for(insightWidget) {\n        invariant(isInsightWidgetDefinition(insightWidget) || isInsightWidget(insightWidget), \"Provided data must be IInsightWidget or IInsightWidgetDefinition!\");\n        return new InsightWidgetBuilder(insightWidget);\n    }\n    static forNew(insight) {\n        const emptyInsightWidget = {\n            description: \"\",\n            drills: [],\n            ignoreDashboardFilters: [],\n            title: \"\",\n            type: \"insight\",\n            insight,\n        };\n        return InsightWidgetBuilder.for(emptyInsightWidget);\n    }\n}\n/**\n * @alpha\n */\nexport const newInsightWidget = (insight, modifications) => {\n    return InsightWidgetBuilder.forNew(insight).modify(modifications).build();\n};\n//# sourceMappingURL=insightWidgetFactory.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isKpiWidgetDefinition, isKpiWidget, } from \"@gooddata/sdk-model\";\nimport { WidgetBaseBuilder } from \"./widgetFactory.js\";\nimport { resolveValueOrUpdateCallback } from \"../builder.js\";\n/**\n * @alpha\n */\nexport class KpiWidgetBuilder extends WidgetBaseBuilder {\n    constructor(item, validator) {\n        super(item, validator);\n        this.item = item;\n        this.validator = validator;\n        // TODO: un-nest legacy kpi\n        this.setKpiWidgetProp = (prop, valueOrUpdateCallback) => {\n            this.setWidget((w) => (Object.assign(Object.assign({}, w), { kpi: Object.assign(Object.assign({}, w.kpi), { [prop]: resolveValueOrUpdateCallback(valueOrUpdateCallback, w.kpi[prop]) }) })));\n            return this;\n        };\n        this.drills = (valueOrUpdateCallback) => this.setWidgetProp(\"drills\", valueOrUpdateCallback);\n        this.measure = (valueOrUpdateCallback) => this.setKpiWidgetProp(\"metric\", valueOrUpdateCallback);\n        this.comparisonType = (valueOrUpdateCallback) => this.setKpiWidgetProp(\"comparisonType\", valueOrUpdateCallback);\n        this.comparisonDirection = (valueOrUpdateCallback) => this.setKpiWidgetProp(\"comparisonDirection\", valueOrUpdateCallback);\n    }\n    static for(kpiWidget) {\n        invariant(isKpiWidgetDefinition(kpiWidget) || isKpiWidget(kpiWidget), \"Provided data must be IKpiWidget or IKpiWidgetDefinition!\");\n        return new KpiWidgetBuilder(kpiWidget);\n    }\n    static forNew(measure) {\n        const emptyKpiWidget = {\n            description: \"\",\n            drills: [],\n            ignoreDashboardFilters: [],\n            title: \"\",\n            type: \"kpi\",\n            kpi: {\n                metric: measure,\n                comparisonType: \"none\",\n            },\n        };\n        return KpiWidgetBuilder.for(emptyKpiWidget);\n    }\n}\n/**\n * @alpha\n */\nexport const newKpiWidget = (measure, modifications) => {\n    return KpiWidgetBuilder.forNew(measure).modify(modifications).build();\n};\n//# sourceMappingURL=kpiWidgetFactory.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { InsightWidgetBuilder, KpiWidgetBuilder, resolveValueOrUpdateCallback, } from \"@gooddata/sdk-backend-base\";\nimport { isKpiWidgetDefinition, isKpiWidget, isInsightWidgetDefinition, isInsightWidget, isDashboardLayoutItem, } from \"@gooddata/sdk-model\";\nimport identity from \"lodash/identity.js\";\n/**\n * @alpha\n */\nexport class DashboardLayoutItemBuilder {\n    constructor(setSection, getItemFacade, itemIndex) {\n        this.setSection = setSection;\n        this.getItemFacade = getItemFacade;\n        this.itemIndex = itemIndex;\n    }\n    /**\n     * Creates an instance of DashboardLayoutItemBuilder for particular layout item.\n     *\n     * @param item - item to modify\n     */\n    static for(sectionBuilder, itemIndex) {\n        var _a;\n        invariant(isDashboardLayoutItem((_a = sectionBuilder.facade().item(itemIndex)) === null || _a === void 0 ? void 0 : _a.raw()), `Provided data must be IDashboardLayoutItem! ${itemIndex} ${sectionBuilder\n            .facade()\n            .item(itemIndex)}`);\n        return new DashboardLayoutItemBuilder((section) => sectionBuilder.setSection(section), () => sectionBuilder.facade().item(itemIndex), itemIndex);\n    }\n    size(valueOrUpdateCallback) {\n        this.setItem((item) => (Object.assign(Object.assign({}, item), { size: resolveValueOrUpdateCallback(valueOrUpdateCallback, item.size) })));\n        return this;\n    }\n    widget(valueOrUpdateCallback) {\n        this.setItem((item) => (Object.assign(Object.assign({}, item), { widget: resolveValueOrUpdateCallback(valueOrUpdateCallback, item.widget) })));\n        return this;\n    }\n    setItem(valueOrUpdateCallback) {\n        this.setSection((section) => {\n            const updatedItems = [...section.items];\n            updatedItems[this.itemIndex] = resolveValueOrUpdateCallback(valueOrUpdateCallback, this.build());\n            return Object.assign(Object.assign({}, section), { items: updatedItems });\n        });\n        return this;\n    }\n    modify(modifications) {\n        modifications(this, this.facade());\n        return this;\n    }\n    build() {\n        return this.facade().raw();\n    }\n    facade() {\n        return this.getItemFacade();\n    }\n    newInsightWidget(insight, create = identity) {\n        this.widget(create(InsightWidgetBuilder.forNew(insight)).build());\n        return this;\n    }\n    modifyInsightWidget(modify) {\n        const content = this.facade().widget();\n        invariant(isInsightWidgetDefinition(content) || isInsightWidget(content), \"Content of the item is not a kpi widget.\");\n        this.widget(modify(InsightWidgetBuilder.for(content)).build());\n        return this;\n    }\n    newKpiWidget(measure, create = identity) {\n        this.widget(create(KpiWidgetBuilder.forNew(measure)).build());\n        return this;\n    }\n    modifyKpiWidget(modify) {\n        const content = this.facade().widget();\n        invariant(isKpiWidgetDefinition(content) || isKpiWidget(content), \"Content of the item is not a kpi widget.\");\n        this.widget(modify(KpiWidgetBuilder.for(content)).build());\n        return this;\n    }\n}\n//# sourceMappingURL=item.js.map","// (C) 2019-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport identity from \"lodash/identity.js\";\nimport isArray from \"lodash/isArray.js\";\nimport difference from \"lodash/difference.js\";\nimport { isDashboardLayoutSection, } from \"@gooddata/sdk-model\";\nimport { resolveValueOrUpdateCallback } from \"@gooddata/sdk-backend-base\";\nimport { DashboardLayoutItemBuilder } from \"./item.js\";\n/**\n * @alpha\n */\nexport class DashboardLayoutSectionBuilder {\n    constructor(sectionIndex, getSectionFacade, setLayout) {\n        this.sectionIndex = sectionIndex;\n        this.getSectionFacade = getSectionFacade;\n        this.setLayout = setLayout;\n        this.removeEmptyItems = () => {\n            return this.removeItems((items) => items.filter((item) => item.isEmpty()));\n        };\n    }\n    /**\n     * Creates an instance of DashboardLayoutSectionBuilder for particular layout item.\n     */\n    static for(layoutBuilder, sectionIndex) {\n        var _a;\n        invariant(isDashboardLayoutSection((_a = layoutBuilder.facade().sections().section(sectionIndex)) === null || _a === void 0 ? void 0 : _a.raw()), `Provided data must be IDashboardLayoutSection.`);\n        const sectionBuilder = new DashboardLayoutSectionBuilder(sectionIndex, () => layoutBuilder.facade().section(sectionIndex), (layout) => layoutBuilder.setLayout(layout));\n        return sectionBuilder;\n    }\n    header(valueOrUpdateCallback) {\n        return this.setSection((section) => (Object.assign(Object.assign({}, section), { header: resolveValueOrUpdateCallback(valueOrUpdateCallback, section.header) })));\n    }\n    createItem(xlSize, create = identity, index = this.facade().items().count()) {\n        const emptyItem = {\n            type: \"IDashboardLayoutItem\",\n            size: {\n                xl: xlSize,\n            },\n        };\n        this.setSection((section) => {\n            const updatedItems = [...section.items];\n            updatedItems.splice(index, 0, emptyItem);\n            return Object.assign(Object.assign({}, section), { items: updatedItems });\n        });\n        DashboardLayoutItemBuilder.for(this, index).modify(create);\n        return this;\n    }\n    addItem(item, index = this.facade().items().count()) {\n        this.setSection((section) => {\n            const updatedItems = [...section.items];\n            updatedItems.splice(index, 0, item);\n            return Object.assign(Object.assign({}, section), { items: updatedItems });\n        });\n        return this;\n    }\n    modifyItem(index, modify) {\n        const itemFacade = this.facade().items().item(index);\n        invariant(itemFacade, `Cannot modify the item - item at index ${index} does not exist.`);\n        DashboardLayoutItemBuilder.for(this, index).modify(modify);\n        return this;\n    }\n    removeItem(index) {\n        const itemFacade = this.facade().items().item(index);\n        invariant(itemFacade, `Cannot remove the item - item at index ${index} does not exist.`);\n        return this.setSection((section) => {\n            const updatedItems = [...section.items];\n            updatedItems.splice(index, 1);\n            return Object.assign(Object.assign({}, section), { items: updatedItems });\n        });\n    }\n    moveItem(fromIndex, toIndex) {\n        const itemFacade = this.facade().item(fromIndex);\n        invariant(itemFacade, `Cannot move the item - item at index ${fromIndex} does not exist.`);\n        const maxToIndex = Math.min(toIndex, this.facade().items().count() - 1);\n        this.removeItem(fromIndex);\n        this.createItem(itemFacade.sizeForScreen(\"xl\"), (c) => c.setItem(itemFacade.raw()), maxToIndex);\n        return this;\n    }\n    removeItems(selector = (items) => items.all()) {\n        const itemsToRemove = selector(this.facade().items());\n        if (isArray(itemsToRemove)) {\n            this.setSection((section) => {\n                const updatedItems = difference(section.items, itemsToRemove.map((r) => r.raw()));\n                return Object.assign(Object.assign({}, section), { items: updatedItems });\n            });\n        }\n        else if (itemsToRemove) {\n            this.removeItem(itemsToRemove.index());\n        }\n        return this;\n    }\n    modifyItems(modify, selector = (items) => items.all()) {\n        const itemsToModify = selector(this.facade().items());\n        if (isArray(itemsToModify)) {\n            itemsToModify.forEach((item) => {\n                this.modifyItem(item.index(), modify);\n            });\n        }\n        else if (itemsToModify) {\n            this.modifyItem(itemsToModify.index(), modify);\n        }\n        return this;\n    }\n    setSection(valueOrUpdateCallback) {\n        this.setLayout((layout) => {\n            const updatedRows = [...layout.sections];\n            updatedRows[this.sectionIndex] = resolveValueOrUpdateCallback(valueOrUpdateCallback, this.build());\n            return Object.assign(Object.assign({}, layout), { sections: updatedRows });\n        });\n        return this;\n    }\n    facade() {\n        return this.getSectionFacade();\n    }\n    modify(modifications) {\n        modifications(this, this.facade());\n        return this;\n    }\n    build() {\n        return this.facade().raw();\n    }\n}\n//# sourceMappingURL=section.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isDashboardLayout, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport difference from \"lodash/difference.js\";\nimport isArray from \"lodash/isArray.js\";\nimport identity from \"lodash/identity.js\";\nimport { DashboardLayoutFacade } from \"../facade/layout.js\";\nimport { DashboardLayoutSectionBuilder } from \"./section.js\";\nimport { resolveValueOrUpdateCallback } from \"@gooddata/sdk-backend-base\";\n/**\n * @alpha\n */\nexport class DashboardLayoutBuilder {\n    constructor(layoutFacade, layoutFacadeConstructor) {\n        this.layoutFacade = layoutFacade;\n        this.layoutFacadeConstructor = layoutFacadeConstructor;\n    }\n    /**\n     * Creates an instance of DashboardLayoutBuilder for particular layout.\n     *\n     * @param layout - layout to modify\n     */\n    static for(layout) {\n        invariant(isDashboardLayout(layout), \"Provided data must be IDashboardLayout.\");\n        const dashboardLayoutBuilder = new DashboardLayoutBuilder(DashboardLayoutFacade.for(layout), DashboardLayoutFacade.for);\n        return dashboardLayoutBuilder;\n    }\n    /**\n     * Creates an instance of DashboardLayoutBuilder with empty layout.\n     */\n    static forNewLayout() {\n        const emptyLayout = {\n            type: \"IDashboardLayout\",\n            sections: [],\n        };\n        return DashboardLayoutBuilder.for(emptyLayout);\n    }\n    size(valueOrUpdateCallback) {\n        return this.setLayout((layout) => (Object.assign(Object.assign({}, layout), { size: resolveValueOrUpdateCallback(valueOrUpdateCallback, this.facade().size()) })));\n    }\n    createSection(create = identity, index = this.facade().sections().count()) {\n        const emptySection = {\n            type: \"IDashboardLayoutSection\",\n            items: [],\n        };\n        this.setLayout((layout) => {\n            const updatedRows = [...layout.sections];\n            updatedRows.splice(index, 0, emptySection);\n            return Object.assign(Object.assign({}, layout), { sections: updatedRows });\n        });\n        DashboardLayoutSectionBuilder.for(this, index).modify(create);\n        return this;\n    }\n    addSection(section, index = this.facade().sections().count()) {\n        this.setLayout((layout) => {\n            const updatedRows = [...layout.sections];\n            updatedRows.splice(index, 0, section);\n            return Object.assign(Object.assign({}, layout), { sections: updatedRows });\n        });\n        return this;\n    }\n    modifySection(index, modify) {\n        const sectionFacade = this.facade().sections().section(index);\n        invariant(sectionFacade, `Cannot modify the section - section at index ${index} does not exist.`);\n        DashboardLayoutSectionBuilder.for(this, index).modify(modify);\n        return this;\n    }\n    removeSection(index) {\n        const sectionFacade = this.facade().sections().section(index);\n        invariant(sectionFacade, `Cannot remove the section - section at index ${index} does not exist.`);\n        return this.setLayout((layout) => {\n            const updatedRows = [...layout.sections];\n            updatedRows.splice(index, 1);\n            return Object.assign(Object.assign({}, layout), { sections: updatedRows });\n        });\n    }\n    moveSection(fromIndex, toIndex) {\n        var _a;\n        const section = (_a = this.facade().sections().section(fromIndex)) === null || _a === void 0 ? void 0 : _a.raw();\n        invariant(section, `Cannot move the section - section at index ${fromIndex} does not exist.`);\n        const maxToIndex = Math.min(toIndex, this.facade().sections().count() - 1);\n        this.removeSection(fromIndex);\n        this.createSection((r) => {\n            return r.setSection(section);\n        }, maxToIndex);\n        return this;\n    }\n    removeSections(selector = (sections) => sections.all()) {\n        const sectionsToRemove = selector(this.facade().sections());\n        if (isArray(sectionsToRemove)) {\n            this.setLayout((layout) => {\n                const updatedRows = difference(layout.sections, sectionsToRemove.map((r) => r.raw()));\n                return Object.assign(Object.assign({}, layout), { sections: updatedRows });\n            });\n        }\n        else if (sectionsToRemove) {\n            this.removeSection(sectionsToRemove.index());\n        }\n        return this;\n    }\n    removeEmptySections() {\n        return this.removeSections((sections) => sections.filter((section) => section.isEmpty()));\n    }\n    modifySections(modify, selector = (sections) => sections.all()) {\n        const sectionsToModify = selector(this.facade().sections());\n        if (isArray(sectionsToModify)) {\n            sectionsToModify.forEach((section) => {\n                this.modifySection(section.index(), modify);\n            });\n        }\n        else if (sectionsToModify) {\n            this.modifySection(sectionsToModify.index(), modify);\n        }\n        return this;\n    }\n    setLayout(valueOrUpdateCallback) {\n        const updatedLayout = resolveValueOrUpdateCallback(valueOrUpdateCallback, this.build());\n        this.layoutFacade = this.layoutFacadeConstructor(updatedLayout);\n        return this;\n    }\n    facade() {\n        return this.layoutFacade;\n    }\n    modify(modifications) {\n        modifications(this, this.facade());\n        return this;\n    }\n    build() {\n        return this.layoutFacade.raw();\n    }\n}\n//# sourceMappingURL=layout.js.map","export const GRID_ROW_HEIGHT_IN_PX = 20;\nexport const KPI_WITHOUT_COMPARISON_SIZE_INFO = {\n    width: {\n        min: 2,\n        default: 2,\n    },\n    height: {\n        default: 8,\n        min: 6,\n        max: 40,\n    },\n};\nexport const KPI_WITH_COMPARISON_SIZE_INFO = {\n    width: {\n        min: 2,\n        default: 2,\n    },\n    height: {\n        default: 11,\n        min: 10,\n        max: 40,\n    },\n};\n//# sourceMappingURL=constants.js.map","// (C) 2019-2023 GoodData Corporation\nimport { isDashboardWidget, isInsight, isInsightWidget, isKpi, isKpiWidget, isKpiWithoutComparison, isWidget, widgetType as getWidgetType, } from \"@gooddata/sdk-model\";\nimport { fluidLayoutDescriptor, getInsightSizeInfo, INSIGHT_WIDGET_SIZE_INFO_DEFAULT, INSIGHT_WIDGET_SIZE_INFO_DEFAULT_LEGACY, KPI_WIDGET_SIZE_INFO_DEFAULT, KPI_WIDGET_SIZE_INFO_DEFAULT_LEGACY, } from \"@gooddata/sdk-ui-ext\";\nimport { KPI_WITHOUT_COMPARISON_SIZE_INFO, KPI_WITH_COMPARISON_SIZE_INFO, GRID_ROW_HEIGHT_IN_PX, } from \"./constants.js\";\n/**\n * @internal\n */\nexport function getSizeInfo(settings, widgetType, widgetContent) {\n    if (widgetType === \"kpi\") {\n        return getKpiSizeInfo(settings, widgetContent);\n    }\n    return getVisualizationSizeInfo(settings, widgetContent);\n}\n/**\n * @internal\n */\nexport function getInsightPlaceholderSizeInfo(settings) {\n    return getVisualizationSizeInfo(settings);\n}\nfunction getVisualizationSizeInfo(settings, insight) {\n    let sizeInfo;\n    if (isInsight(insight)) {\n        sizeInfo = getInsightSizeInfo(insight, settings);\n    }\n    if (!sizeInfo) {\n        if (!settings.enableKDWidgetCustomHeight) {\n            return INSIGHT_WIDGET_SIZE_INFO_DEFAULT_LEGACY;\n        }\n        return INSIGHT_WIDGET_SIZE_INFO_DEFAULT;\n    }\n    return sizeInfo;\n}\nfunction getKpiSizeInfo(settings, kpi) {\n    if (!settings.enableKDWidgetCustomHeight) {\n        return KPI_WIDGET_SIZE_INFO_DEFAULT_LEGACY;\n    }\n    if (!isKpi(kpi)) {\n        return KPI_WIDGET_SIZE_INFO_DEFAULT;\n    }\n    return isKpiWithoutComparison(kpi) ? KPI_WITHOUT_COMPARISON_SIZE_INFO : KPI_WITH_COMPARISON_SIZE_INFO;\n}\n/**\n * @internal\n */\nexport function getDashboardLayoutWidgetDefaultHeight(settings, widgetType, widgetContent) {\n    const sizeInfo = getSizeInfo(settings, widgetType, widgetContent);\n    return fluidLayoutDescriptor.toHeightInPx(sizeInfo.height.default);\n}\n/**\n * @internal\n */\nexport function getDashboardLayoutWidgetMinGridHeight(settings, widgetType, widgetContent) {\n    const sizeInfo = getSizeInfo(settings, widgetType, widgetContent);\n    return sizeInfo.height.min;\n}\n/**\n * @internal\n */\nexport function getDashboardLayoutWidgetMaxGridHeight(settings, widgetType, widgetContent) {\n    const sizeInfo = getSizeInfo(settings, widgetType, widgetContent);\n    return sizeInfo.height.max;\n}\n/**\n * @internal\n */\nexport function getMinHeight(widgets, insightMap, defaultMin = 0) {\n    const mins = widgets\n        .filter(isDashboardWidget)\n        .map((widget) => getDashboardLayoutWidgetMinGridHeight({ enableKDWidgetCustomHeight: true }, getWidgetType(widget), isKpiWidget(widget) ? widget.kpi : insightMap.get(widget.insight)));\n    return Math.max(defaultMin, ...mins);\n}\n/**\n * @internal\n */\nexport function getMaxHeight(widgets, insightMap) {\n    const maxs = widgets\n        .filter(isDashboardWidget)\n        .map((widget) => getDashboardLayoutWidgetMaxGridHeight({ enableKDWidgetCustomHeight: true }, getWidgetType(widget), isKpiWidget(widget) ? widget.kpi : insightMap.get(widget.insight)));\n    return Math.min(...maxs);\n}\n/**\n * @internal\n */\nexport function getDashboardLayoutWidgetMinGridWidth(settings, widgetType, widgetContent) {\n    const sizeInfo = getSizeInfo(settings, widgetType, widgetContent);\n    return sizeInfo.width.min;\n}\n/**\n * @internal\n */\nexport function getMinWidth(widget, insightMap) {\n    return getDashboardLayoutWidgetMinGridWidth({ enableKDWidgetCustomHeight: true }, getWidgetType(widget), isKpiWidget(widget) ? widget.kpi : insightMap.get(widget.insight));\n}\n/**\n * @internal\n */\nexport function calculateWidgetMinHeight(widget, currentSize, insightMap, settings) {\n    let widgetType;\n    let insight;\n    let content;\n    if (isWidget(widget)) {\n        widgetType = getWidgetType(widget);\n    }\n    if (isInsightWidget(widget)) {\n        insight = insightMap.get(widget.insight);\n        content = insight;\n    }\n    if (isKpiWidget(widget)) {\n        content = widget.kpi;\n    }\n    return currentSize\n        ? getDashboardLayoutItemHeight(currentSize) ||\n            (!currentSize.heightAsRatio\n                ? getDashboardLayoutWidgetDefaultHeight(settings, widgetType, content)\n                : undefined)\n        : undefined;\n}\nexport const getDashboardLayoutItemHeight = (size) => {\n    const { gridHeight } = size;\n    if (gridHeight) {\n        return getDashboardLayoutItemHeightForGrid(gridHeight);\n    }\n    return undefined;\n};\nexport const getDashboardLayoutItemHeightForGrid = (gridHeight) => gridHeight * GRID_ROW_HEIGHT_IN_PX;\n//# sourceMappingURL=sizing.js.map","export const ALL_SCREENS = [\"xl\", \"lg\", \"md\", \"sm\", \"xs\"];\n// Breakpoints\nexport const SCREEN_BREAKPOINT_XS = 320;\nexport const SCREEN_BREAKPOINT_SM = 640;\nexport const SCREEN_BREAKPOINT_MD = 940;\nexport const SCREEN_BREAKPOINT_LG = 1170;\nexport const SCREEN_BREAKPOINT_XL = 1590;\nexport const SCREEN_BREAKPOINT_XXL = 99999999;\nconst DASHBOARD_LAYOUT_GUTTER_WIDTH = 0;\nconst DASHBOARD_LAYOUT_BREAKPOINT_XS = SCREEN_BREAKPOINT_XS + 1;\nconst DASHBOARD_LAYOUT_BREAKPOINT_SM = SCREEN_BREAKPOINT_SM + 1;\nconst DASHBOARD_LAYOUT_BREAKPOINT_MD = SCREEN_BREAKPOINT_LG + 1;\nconst DASHBOARD_LAYOUT_BREAKPOINT_LG = SCREEN_BREAKPOINT_XL + 1;\nconst DASHBOARD_LAYOUT_BREAK_POINTS = [\n    DASHBOARD_LAYOUT_BREAKPOINT_XS,\n    DASHBOARD_LAYOUT_BREAKPOINT_SM,\n    DASHBOARD_LAYOUT_BREAKPOINT_MD,\n    DASHBOARD_LAYOUT_BREAKPOINT_LG,\n];\nexport const DASHBOARD_LAYOUT_GRID_CONFIGURATION = {\n    // https://github.com/sealninja/react-grid-system#%EF%B8%8F-upgrading-to-v7\n    maxScreenClass: \"xl\",\n    defaultScreenClass: undefined,\n    gutterWidth: DASHBOARD_LAYOUT_GUTTER_WIDTH,\n    breakpoints: DASHBOARD_LAYOUT_BREAK_POINTS,\n};\n// Default widget sizes\nconst DASHBOARD_LAYOUT_PADDING = 8;\n// measured from '.s-fluid-layout-container' element\nexport const DASHBOARD_LAYOUT_CONTAINER_WIDTHS = {\n    xs: 310 - DASHBOARD_LAYOUT_PADDING,\n    sm: 630 - DASHBOARD_LAYOUT_PADDING,\n    md: 980 - DASHBOARD_LAYOUT_PADDING,\n    lg: 1330 - DASHBOARD_LAYOUT_PADDING,\n    xl: 1660 - DASHBOARD_LAYOUT_PADDING, // measured at empirically derived value 1920\n};\nexport const DASHBOARD_LAYOUT_RESPONSIVE_SMALL_WIDTH = 180;\nexport const DASHBOARD_LAYOUT_MAX_HEIGHT_AS_RATIO_XS = 150;\n//# sourceMappingURL=layout.js.map","import { __rest } from \"tslib\";\n// (C) 2019-2023 GoodData Corporation\nimport { isDashboardLayout, isWidget, isWidgetDefinition, } from \"@gooddata/sdk-model\";\nimport { fluidLayoutDescriptor } from \"@gooddata/sdk-ui-ext\";\nimport clamp from \"lodash/clamp.js\";\nimport flatten from \"lodash/flatten.js\";\nimport isEqual from \"lodash/isEqual.js\";\nimport isNil from \"lodash/isNil.js\";\nimport round from \"lodash/round.js\";\nimport { invariant } from \"ts-invariant\";\nimport { DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT } from \"../../../../_staging/dashboard/fluidLayout/index.js\";\nimport { DashboardLayoutBuilder } from \"../../../../_staging/dashboard/fluidLayout/builder/layout.js\";\nimport { DashboardLayoutFacade } from \"../../../../_staging/dashboard/fluidLayout/facade/layout.js\";\nimport { getDashboardLayoutItemHeightForGrid, getSizeInfo, getDashboardLayoutWidgetMinGridWidth, getDashboardLayoutWidgetMinGridHeight, getDashboardLayoutWidgetMaxGridHeight, } from \"../../../../_staging/layout/sizing.js\";\nimport { ALL_SCREENS, DASHBOARD_LAYOUT_CONTAINER_WIDTHS, DASHBOARD_LAYOUT_MAX_HEIGHT_AS_RATIO_XS, } from \"../../../constants/index.js\";\nexport function unifyDashboardLayoutItemHeights(itemsOrLayout) {\n    if (isDashboardLayout(itemsOrLayout)) {\n        const updatedLayout = Object.assign(Object.assign({}, itemsOrLayout), { sections: DashboardLayoutFacade.for(itemsOrLayout)\n                .sections()\n                .reduce((acc, section) => {\n                acc.push(Object.assign(Object.assign({}, section.raw()), { items: unifyDashboardLayoutItemHeights(section.items().raw()) }));\n                return acc;\n            }, []) });\n        return updatedLayout;\n    }\n    const itemsWithSizeForAllScreens = itemsOrLayout.map((item) => (Object.assign(Object.assign({}, item), { size: implicitLayoutItemSizeFromXlSize(item.size.xl) })));\n    const itemsWithUnifiedHeightForAllScreens = ALL_SCREENS.reduce((acc, screen) => {\n        const itemsAsFutureGridRows = splitDashboardLayoutItemsAsRenderedGridRows(acc, screen);\n        return flatten(itemsAsFutureGridRows.map((futureGridRow) => unifyDashboardLayoutItemHeightsForScreen(futureGridRow, screen)));\n    }, itemsWithSizeForAllScreens);\n    return itemsWithUnifiedHeightForAllScreens;\n}\n/**\n * Derive dashboard layout size for all screens from dashboard layout size defined for xl screen.\n *\n * @param xlSize - dashboard layout size for xl screen\n */\nfunction implicitLayoutItemSizeFromXlSize(xlSize) {\n    const xlWidth = xlSize.gridWidth;\n    const xlHeight = xlSize.gridHeight;\n    const ratio = xlSize.heightAsRatio;\n    switch (xlWidth) {\n        case 0:\n            return dashboardLayoutItemSizeForAllScreens(0, 0, 0, 0, 0, 0, 0);\n        case 1:\n            return dashboardLayoutItemSizeForAllScreens(ratio, xlHeight, xlWidth, xlWidth, 2, 6, 12);\n        case 2:\n            return dashboardLayoutItemSizeForAllScreens(ratio, xlHeight, xlWidth, xlWidth, 4, 6, 12);\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n            return dashboardLayoutItemSizeForAllScreens(ratio, xlHeight, xlWidth, xlWidth, 6, 12, 12);\n        case 10:\n            return dashboardLayoutItemSizeForAllScreens(ratio, xlHeight, xlWidth, xlWidth, 12, 12, 12);\n        case 11:\n            return dashboardLayoutItemSizeForAllScreens(ratio, xlHeight, xlWidth, xlWidth, 12, 12, 12);\n        case 12:\n            return dashboardLayoutItemSizeForAllScreens(ratio, xlHeight, xlWidth, xlWidth, 12, 12, 12);\n        default:\n            invariant(false, `Unsupported xlWidth: ${xlWidth}`);\n    }\n}\n/**\n * Create dashboard layout item size for all screens,\n * with identical height, defined as ratio,\n * but different width, defined as grid items count.\n *\n * @param heightAsRatio - height as ratio to the width, defined in percents\n * @param gridHeight - height as number of grid rows\n * @param xl - width as grid items count for xl screen\n * @param lg - width as grid items count for lg screen\n * @param md - width as grid items count for md screen\n * @param sm - width as grid items count for sm screen\n * @param xs - width as grid items count for xs screen\n */\nfunction dashboardLayoutItemSizeForAllScreens(heightAsRatio, gridHeight, xl, lg, md, sm, xs) {\n    if (gridHeight) {\n        return {\n            xl: {\n                gridWidth: xl,\n                gridHeight,\n            },\n            lg: {\n                gridWidth: lg,\n                gridHeight,\n            },\n            md: {\n                gridWidth: md,\n                gridHeight,\n            },\n            sm: {\n                gridWidth: sm,\n                gridHeight,\n            },\n            xs: {\n                gridWidth: xs,\n                gridHeight,\n            },\n        };\n    }\n    return {\n        xl: {\n            gridWidth: xl,\n            heightAsRatio,\n        },\n        lg: {\n            gridWidth: lg,\n            heightAsRatio,\n        },\n        md: {\n            gridWidth: md,\n            heightAsRatio,\n        },\n        sm: {\n            gridWidth: sm,\n            heightAsRatio,\n        },\n        xs: {\n            gridWidth: xs,\n            heightAsRatio,\n        },\n    };\n}\n/**\n * Divide the items into a list representing the future rows of the grid.\n * This is useful for performing item transformations, depending on how they really appear in the grid.\n *\n * @param items - dashboard layout items\n * @param screen - responsive screen class\n */\nexport function splitDashboardLayoutItemsAsRenderedGridRows(items, screen) {\n    const renderedRows = [];\n    let currentRowWidth = 0;\n    let currentRow = [];\n    items.forEach((item) => {\n        const itemSize = item.size[screen];\n        if (isNil(itemSize)) {\n            throw Error(\"Item size for current screen is undefined\");\n        }\n        if (currentRowWidth + itemSize.gridWidth > DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT) {\n            renderedRows.push(currentRow);\n            currentRow = [];\n            currentRowWidth = 0;\n        }\n        currentRow.push(item);\n        currentRowWidth = currentRowWidth + itemSize.gridWidth;\n    });\n    if (currentRow.length > 0) {\n        renderedRows.push(currentRow);\n    }\n    return renderedRows;\n}\n/**\n * Calculate dashboard layout item height for the provided screen.\n * Result, if custom height is defined, is height of the item, defined\n * as grid items count, multiplied by {@link GRID_ROW_HEIGHT_IN_PX} or width of the item,\n * defined as grid items count, multiplied by height, defined as a ratio.\n *\n * @param item - dashboard layout item\n * @param screen - responsive screen class\n */\nfunction dashboardLayoutItemHeightForScreen(item, screen) {\n    var _a, _b;\n    const { gridWidth, gridHeight, heightAsRatio = 0 } = (_b = (_a = item.size) === null || _a === void 0 ? void 0 : _a[screen]) !== null && _b !== void 0 ? _b : {};\n    if (!gridWidth) {\n        return 0;\n    }\n    if (gridHeight) {\n        return getDashboardLayoutItemHeightForGrid(gridHeight);\n    }\n    return gridWidth * heightAsRatio;\n}\n/**\n * Unify dashboard layout items height, defined as ratio, for the provided screen.\n * It overrides height of all items to the highest item height found for the provided screen.\n *\n * @param items - dashboard layout items\n * @param screen -  responsive screen class\n */\nfunction unifyDashboardLayoutItemHeightsForScreen(items, screen) {\n    const heights = items.map((item) => dashboardLayoutItemHeightForScreen(item, screen));\n    const maxHeight = Math.max(0, ...heights);\n    if (maxHeight === 0) {\n        return items;\n    }\n    return items.map((item) => updateDashboardLayoutItemHeight(item, screen, maxHeight));\n}\nconst updateDashboardLayoutItemHeight = (item, screen, maxHeight) => {\n    const itemSizeForCurrentScreen = item.size[screen];\n    const heightAsRatio = (itemSizeForCurrentScreen === null || itemSizeForCurrentScreen === void 0 ? void 0 : itemSizeForCurrentScreen.gridWidth)\n        ? round(maxHeight / itemSizeForCurrentScreen.gridWidth, 2)\n        : 0;\n    let updatedColumn = item;\n    if (!(itemSizeForCurrentScreen === null || itemSizeForCurrentScreen === void 0 ? void 0 : itemSizeForCurrentScreen.gridHeight) &&\n        !isNil(itemSizeForCurrentScreen === null || itemSizeForCurrentScreen === void 0 ? void 0 : itemSizeForCurrentScreen.heightAsRatio) &&\n        (itemSizeForCurrentScreen === null || itemSizeForCurrentScreen === void 0 ? void 0 : itemSizeForCurrentScreen.heightAsRatio) !== heightAsRatio) {\n        if (isWidget(updatedColumn.widget) || isWidgetDefinition(updatedColumn.widget)) {\n            updatedColumn = Object.assign(Object.assign({}, updatedColumn), { widget: Object.assign({}, updatedColumn.widget) });\n        }\n        updatedColumn = Object.assign(Object.assign({}, updatedColumn), { size: Object.assign(Object.assign({}, updatedColumn.size), { [screen]: Object.assign(Object.assign({}, updatedColumn.size[screen]), { heightAsRatio }) }) });\n    }\n    if (screen === \"xs\" && heightAsRatio > DASHBOARD_LAYOUT_MAX_HEIGHT_AS_RATIO_XS) {\n        updatedColumn = Object.assign(Object.assign({}, updatedColumn), { size: Object.assign(Object.assign({}, updatedColumn.size), { xs: Object.assign(Object.assign({}, updatedColumn.size.xs), { heightAsRatio: DASHBOARD_LAYOUT_MAX_HEIGHT_AS_RATIO_XS }) }) });\n    }\n    return updatedColumn;\n};\n/**\n *\n * @internal\n */\nexport const getResizedItemPositions = (originalLayout, resizedLayout, positions = []) => {\n    const originalLayoutFacade = DashboardLayoutFacade.for(originalLayout);\n    return DashboardLayoutFacade.for(resizedLayout)\n        .sections()\n        .reduce((acc, section) => {\n        return section.items().reduce((acc, item) => {\n            const originalColumn = originalLayoutFacade\n                .sections()\n                .section(section.index())\n                .items()\n                .item(item.index());\n            // if this bombs there is something wrong with the layout\n            invariant(originalColumn);\n            const originalContent = originalColumn.widget();\n            const updatedContent = item.widget();\n            // Is nested layout?\n            if (isDashboardLayout(originalContent) && isDashboardLayout(updatedContent)) {\n                return getResizedItemPositions(originalContent, updatedContent, positions);\n            }\n            if (!isEqual(originalColumn.size(), item.size()) &&\n                (isWidget(updatedContent) || isWidgetDefinition(updatedContent))) {\n                acc.push([item.section().index(), item.index()]);\n            }\n            return acc;\n        }, acc);\n    }, positions);\n};\nexport const getDashboardLayoutItemHeightForRatioAndScreen = (size, screen) => {\n    // TODO is this default ok?\n    const { gridWidth, heightAsRatio = 1 } = size;\n    const actualWidth = DASHBOARD_LAYOUT_CONTAINER_WIDTHS[screen];\n    const actualColumnUnitWidth = actualWidth / DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT;\n    return actualColumnUnitWidth * gridWidth * (heightAsRatio / 100);\n};\nexport function getDashboardLayoutItemMaxGridWidth(item, screen) {\n    var _a, _b;\n    let gridRowWidth = 0;\n    const sectionItems = item.section().items().all();\n    for (const sectionItem of sectionItems) {\n        const newWidth = sectionItem.sizeForScreen(screen).gridWidth + gridRowWidth;\n        if (newWidth <= DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT) {\n            if (sectionItem.index() === item.index()) {\n                break;\n            }\n            gridRowWidth = newWidth;\n        }\n        else {\n            if (sectionItem.index() === item.index()) {\n                return DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT;\n            }\n            // TODO is this default ok?\n            gridRowWidth = (_b = (_a = sectionItem.sizeForScreen(screen)) === null || _a === void 0 ? void 0 : _a.gridWidth) !== null && _b !== void 0 ? _b : 1;\n        }\n    }\n    return DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT - gridRowWidth;\n}\nexport function getDashboardLayoutWidgetDefaultGridWidth(settings, widgetType, widgetContent) {\n    const sizeInfo = getSizeInfo(settings, widgetType, widgetContent);\n    return sizeInfo.width.default;\n}\nexport function getLayoutWithoutGridHeights(layout) {\n    const layoutBuilder = DashboardLayoutBuilder.for(layout);\n    return layoutBuilder\n        .modifySections((section) => section.modifyItems((itemBuilder, itemFacade) => {\n        const widget = itemFacade.widget();\n        if (isDashboardLayout(widget)) {\n            const updatedLayout = getLayoutWithoutGridHeights(widget);\n            return itemBuilder.widget(updatedLayout);\n        }\n        const itemWithoutGridHeight = removeGridHeightFromItemSize(itemFacade.raw());\n        return itemBuilder.setItem(itemWithoutGridHeight);\n    }))\n        .build();\n}\nfunction removeGridHeightFromItemSize(item) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = item.size.xl, { gridHeight } = _a, rest = __rest(_a, [\"gridHeight\"]);\n    return Object.assign(Object.assign({}, item), { size: Object.assign(Object.assign({}, item.size), { xl: Object.assign({}, rest) }) });\n}\n/**\n * @internal\n */\nexport function validateDashboardLayoutWidgetSize(currentWidth, currentHeight, widgetType, widgetContent, settings) {\n    const minWidth = getDashboardLayoutWidgetMinGridWidth(settings, widgetType, widgetContent);\n    const maxWidth = fluidLayoutDescriptor.gridColumnsCount;\n    const minHeight = getDashboardLayoutWidgetMinGridHeight(settings, widgetType, widgetContent);\n    const maxHeight = getDashboardLayoutWidgetMaxGridHeight(settings, widgetType, widgetContent);\n    const validWidth = currentWidth !== undefined ? clamp(currentWidth, minWidth, maxWidth) : currentWidth;\n    const validHeight = currentHeight !== undefined ? clamp(currentHeight, minHeight, maxHeight) : currentHeight;\n    return {\n        validWidth,\n        validHeight,\n    };\n}\n//# sourceMappingURL=sizing.js.map","// (C) 2021-2022 GoodData Corporation\nimport { insightRef, serializeObjRef, isKpiWidget, isInsightWidget, isDashboardLayout, } from \"@gooddata/sdk-model\";\nimport compact from \"lodash/compact.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { invariant, InvariantError } from \"ts-invariant\";\nimport { validateDashboardLayoutWidgetSize } from \"../../presentation/layout/DefaultDashboardLayoutRenderer/utils/sizing.js\";\nimport { ObjRefMap } from \"../metadata/objRefMap.js\";\nfunction extractContentFromWidget(widget, insightsById) {\n    if (isInsightWidget(widget)) {\n        const insightRef = widget.insight;\n        return {\n            type: \"insight\",\n            content: insightsById[serializeObjRef(insightRef)],\n        };\n    }\n    else if (isKpiWidget(widget)) {\n        return {\n            type: \"kpi\",\n            content: widget.kpi,\n        };\n    }\n    throw new InvariantError(`trying to extract content from unknown widget type ${widget.type}`);\n}\n/**\n * Sanitizes item. At this moment this function will ensure that Insight and KPI widgets conform to the sizing prescriptions.\n *\n * @param item - item in layout section\n * @param insightsById - list of insights available; insight widgets will be resolved using this\n * @param settings - settings that may impact the sizing\n */\nfunction dashboardLayoutItemSanitize(item, insightsById, settings) {\n    const { widget, size: { xl }, } = item;\n    // ignore items that point to no widget; this is model-level version of the fix to RAIL-3669\n    if (!widget) {\n        // eslint-disable-next-line no-console\n        console.log(`Found item ${item} that does not contain any widget. Removing from layout.`);\n        return undefined;\n    }\n    // only sanitize known widget types\n    if (!isInsightWidget(widget) || !isKpiWidget(widget)) {\n        return item;\n    }\n    const { type, content } = extractContentFromWidget(widget, insightsById);\n    // if the dashboard is inconsistent (can ultimately happen on tiger), then return no item => it will be removed\n    if (!content) {\n        return;\n    }\n    const { validWidth, validHeight } = validateDashboardLayoutWidgetSize(xl.gridWidth, xl.gridHeight, type, content, settings);\n    return Object.assign(Object.assign({}, item), { size: {\n            xl: Object.assign(Object.assign({}, xl), { gridWidth: validWidth, gridHeight: validHeight }),\n        } });\n}\n/**\n * This function sanitizes dashboard layout. It will:\n *\n * 1.  Ensure insight widgets have correct sizes - matching what the visualization used by the insight needs\n *     (this is essential as the insight visualization may change since the last time dashboard was created)\n * 2.  Ensure insight widgets reference existing insights.\n *\n * @param layout - layout\n * @param insights - existing insights that are referenced by the layout's widgets\n * @param settings - current settings; these may influence sizing of the widgets\n */\nexport function dashboardLayoutSanitize(layout, insights, settings) {\n    const insightsById = keyBy(insights, (insight) => serializeObjRef(insightRef(insight)));\n    const sanitizedSections = layout.sections.map((section) => {\n        const sanitizedItems = compact(section.items.map((item) => dashboardLayoutItemSanitize(item, insightsById, settings)));\n        return Object.assign(Object.assign({}, section), { items: sanitizedItems });\n    });\n    return Object.assign(Object.assign({}, layout), { sections: sanitizedSections });\n}\n/**\n * Creates {@link ObjRefMap} containing identity mapping..\n */\nfunction newIdentityMapping(items) {\n    const map = new ObjRefMap({\n        type: \"insight\",\n        strictTypeCheck: false,\n        idExtract: (e) => e.original.identifier,\n        uriExtract: (e) => e.original.uri,\n        refExtract: (e) => e.original.ref,\n    });\n    return map.fromItems(items);\n}\nfunction getWidgetIdentity(widget) {\n    const { ref, uri, identifier } = widget !== null && widget !== void 0 ? widget : {};\n    if (!ref || !uri || !identifier) {\n        return;\n    }\n    return {\n        ref,\n        uri,\n        identifier,\n    };\n}\nfunction getIdentityMapping(original, updated) {\n    const result = [];\n    original.sections.forEach((section, sectionIdx) => {\n        const updatedSection = updated.sections[sectionIdx];\n        invariant(updatedSection);\n        section.items.forEach((item, itemIdx) => {\n            const updatedItem = updatedSection.items[itemIdx];\n            invariant(updatedItem);\n            if (isDashboardLayout(item.widget)) {\n                invariant(isDashboardLayout(updatedItem.widget));\n                result.push(...getIdentityMapping(item.widget, updatedItem.widget));\n            }\n            else {\n                const originalIdentity = getWidgetIdentity(item.widget);\n                const updatedIdentity = getWidgetIdentity(updatedItem.widget);\n                invariant(originalIdentity && updatedIdentity);\n                result.push({\n                    original: originalIdentity,\n                    updated: updatedIdentity,\n                });\n            }\n        });\n    });\n    return result;\n}\n/**\n * Given two layouts, this function construct mapping between widget identities between the original and the\n * updated layout.\n *\n * Note that this function does not really verify that the layouts are effectively the same and differ just\n * in the widget identities. It checks that for each item in the original layout, there is item at the same\n * position in the updated layout. It can happen that two different layouts will be processed by this\n * function without errors.\n *\n * @param original - original layout, the original widget identities will be picked from here\n * @param updated - updated layout, the updated widget identities will be picked from here\n * @returns map between original widget identity and updated widget identity\n */\nexport function dashboardLayoutWidgetIdentityMap(original, updated) {\n    const result = getIdentityMapping(original, updated);\n    return newIdentityMapping(result);\n}\n/**\n * Given a layout, this function will go through all of it's item's widgets and remove widget's identity if\n * the provided predicate function evaluates true for the identity.\n *\n * A new layout with updated widgets will be returned.\n *\n * @param layout - layout to process\n * @param identityPredicate - function to evaluate for each widget identity; if this function returns true, the\n *  widget's identity will be removed\n */\nexport function dashboardLayoutRemoveIdentity(layout, identityPredicate) {\n    const updatedSections = layout.sections.map((section) => {\n        const updatedItems = section.items.map((item) => {\n            if (isDashboardLayout(item.widget)) {\n                return Object.assign(Object.assign({}, item), { widget: dashboardLayoutRemoveIdentity(layout, identityPredicate) });\n            }\n            else {\n                const identity = getWidgetIdentity(item.widget);\n                if (!identity || !identityPredicate(identity)) {\n                    return item;\n                }\n                return Object.assign(Object.assign({}, item), { widget: Object.assign(Object.assign({}, item.widget), { ref: undefined, uri: undefined, identifier: undefined }) });\n            }\n        });\n        return Object.assign(Object.assign({}, section), { items: updatedItems });\n    });\n    return Object.assign(Object.assign({}, layout), { sections: updatedSections });\n}\n//# sourceMappingURL=dashboardLayout.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.backendCapabilities);\n/**\n * This selector returns capabilities of the backend with which the dashboard works.\n *\n * @public\n */\nexport const selectBackendCapabilities = createSelector(selectSelf, (state) => {\n    invariant(state.backendCapabilities, \"attempting to access uninitialized backend capabilities\");\n    return state.backendCapabilities;\n});\n/**\n * This selector returns capability if parent child filtering is enabled.\n *\n * @public\n */\nexport const selectSupportsElementsQueryParentFiltering = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.supportsElementsQueryParentFiltering) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.supportsKpiWidget}\n *\n * @internal\n */\nexport const selectSupportsKpiWidgetCapability = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.supportsKpiWidget) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.supportsAccessControl}\n *\n * @internal\n */\nexport const selectSupportsAccessControlCapability = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.supportsAccessControl) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.supportsHierarchicalWorkspaces}\n *\n * @internal\n */\nexport const selectSupportsHierarchicalWorkspacesCapability = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.supportsHierarchicalWorkspaces) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.supportsElementUris}\n *\n * @internal\n */\nexport const selectSupportsElementUris = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.supportsElementUris) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.canExportCsv}\n *\n * @internal\n */\nexport const selectSupportsExportToCsv = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.canExportCsv) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.canExportXlsx}\n *\n * @internal\n */\nexport const selectSupportsExportToXlsx = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.canExportXlsx) !== null && _a !== void 0 ? _a : false; });\n/**\n * Selector for {@link @gooddata/sdk-backend-spi#IBackendCapabilities.supportsObjectUris}\n *\n * @internal\n */\nexport const selectSupportsObjectUris = createSelector(selectBackendCapabilities, (capabilities) => { var _a; return (_a = capabilities.supportsObjectUris) !== null && _a !== void 0 ? _a : false; });\n//# sourceMappingURL=backendCapabilitiesSelectors.js.map","// (C) 2021-2022 GoodData Corporation\nimport { newDisplayFormMap } from \"../metadata/objRefMap.js\";\nimport flatMap from \"lodash/flatMap.js\";\n/**\n * Factory function that extracts all display forms from catalog entities and returns a map indexing display\n * form `ref` to display form metadata object.\n *\n * The lookups into the map can be done by any type of ObjRef.\n *\n * @param attributes - catalog attributes\n * @param dateDatasets - catalog date datasets\n * @param strictTypeChecking - indicate whether strict type checking should be done using 'type' property of input `idRef`; default is false - the type information will be ignored\n * @alpha\n */\nexport function createDisplayFormMap(attributes, dateDatasets, strictTypeChecking = false) {\n    const nonDateDisplayForms = flatMap(attributes, (a) => [...a.displayForms, ...a.geoPinDisplayForms]);\n    const dateDisplayForms = flatMap(dateDatasets, (d) => flatMap(d.dateAttributes, (a) => a.attribute.displayForms));\n    return newDisplayFormMap([...nonDateDisplayForms, ...dateDisplayForms], strictTypeChecking);\n}\n/**\n * Factory function that extracts all display forms from workspace catalog and returns a map indexing\n * display form's `ref` to display form metadata object.\n *\n * The lookups into the map can be done by any type of ObjRef.\n *\n * @param catalog - workspace catalog\n * @param strictTypeChecking - indicate whether strict type checking should be done using 'type' property of input `idRef`; default is false - the type information will be ignored\n * @alpha\n */\nexport function createDisplayFormMapFromCatalog(catalog, strictTypeChecking = false) {\n    return createDisplayFormMap(catalog.attributes(), catalog.dateDatasets(), strictTypeChecking);\n}\n//# sourceMappingURL=displayFormMap.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport flatMap from \"lodash/flatMap.js\";\nimport { areObjRefsEqual, objRefToString, } from \"@gooddata/sdk-model\";\nimport { newCatalogDateAttributeWithDatasetMap, } from \"../../../_staging/catalog/dateAttributeWithDatasetMap.js\";\nimport { newCatalogAttributeMap, newCatalogDateDatasetMap, newCatalogMeasureMap, } from \"../../../_staging/metadata/objRefMap.js\";\nimport { selectBackendCapabilities } from \"../backendCapabilities/backendCapabilitiesSelectors.js\";\nimport { createDisplayFormMap } from \"../../../_staging/catalog/displayFormMap.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport negate from \"lodash/negate.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.catalog);\n/**\n * @public\n */\nexport const selectCatalogAttributes = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.attributes) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * @alpha\n */\nexport const selectHasCatalogAttributes = createSelector(selectCatalogAttributes, negate(isEmpty));\n/**\n * @public\n */\nexport const selectCatalogAttributeDisplayForms = createSelector(selectCatalogAttributes, (attributes) => {\n    return flatMap(attributes, (attribute) => [\n        ...attribute.displayForms,\n        ...attribute.geoPinDisplayForms,\n    ]);\n});\n/**\n * @public\n */\nexport const selectCatalogMeasures = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.measures) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * @alpha\n */\nexport const selectHasCatalogMeasures = createSelector(selectCatalogMeasures, negate(isEmpty));\n/**\n * @public\n */\nexport const selectCatalogFacts = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.facts) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * @alpha\n */\nexport const selectHasCatalogFacts = createSelector(selectCatalogFacts, negate(isEmpty));\n/**\n * @public\n */\nexport const selectCatalogDateDatasets = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.dateDatasets) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * @alpha\n */\nexport const selectHasCatalogDateDatasets = createSelector(selectCatalogDateDatasets, negate(isEmpty));\n/**\n * @public\n */\nexport const selectCatalogDateAttributes = createSelector(selectCatalogDateDatasets, (dateDatasets) => {\n    return flatMap(dateDatasets, (dd) => dd.dateAttributes);\n});\n/**\n * @beta\n */\nexport const selectCatalogAttributeHierarchies = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.attributeHierarchies) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * @alpha\n */\nexport const selectAttributesWithDrillDown = createSelector([selectCatalogAttributes, selectCatalogDateAttributes], (attributes = [], dateAttributes = []) => {\n    return [...attributes, ...dateAttributes].filter((attr) => attr.attribute.drillDownStep);\n});\n/**\n * Returns map of catalog attribute keys with all their descendants based on attribute hierarchies.\n *\n * This selector does descendant lookup for each existing catalog attribute. If an attribute is in any attribute hierarchy\n * and has at least one descendant, the attribute key is added to the map together with the descendant reference.\n *\n * @beta\n */\nexport const selectAttributesWithHierarchyDescendants = createSelector([selectCatalogAttributes, selectCatalogDateAttributes, selectCatalogAttributeHierarchies], (attributes = [], dateAttributes = [], attributeHierarchies = []) => {\n    const allCatalogAttributes = [...attributes, ...dateAttributes];\n    const attributeDescendants = {};\n    allCatalogAttributes.forEach((attribute) => {\n        const attributeRef = attribute.attribute.ref;\n        attributeHierarchies.forEach((hierarchy) => {\n            const hierarchyAttributes = hierarchy.attributeHierarchy.attributes;\n            const foundAttributeIndex = hierarchyAttributes.findIndex((ref) => areObjRefsEqual(ref, attributeRef));\n            if (foundAttributeIndex < 0) {\n                return;\n            }\n            const foundDescendant = hierarchyAttributes[foundAttributeIndex + 1];\n            if (!foundDescendant) {\n                return;\n            }\n            const attributeRefAsString = objRefToString(attributeRef);\n            if (attributeDescendants[attributeRefAsString]) {\n                attributeDescendants[attributeRefAsString].push(foundDescendant);\n            }\n            else {\n                attributeDescendants[attributeRefAsString] = [foundDescendant];\n            }\n        });\n    });\n    return attributeDescendants;\n});\n/**\n * @internal\n */\nexport const selectAttributesWithDisplayFormLink = createSelector([selectCatalogAttributes], (attributes = []) => {\n    return attributes.filter((attr) => attr.attribute.drillToAttributeLink);\n});\n/**\n * Selects all date datasets in the catalog as a mapping of obj ref to date dataset.\n *\n * @alpha\n */\nexport const selectAllCatalogDateDatasetsMap = createSelector([selectCatalogDateDatasets, selectBackendCapabilities], (dateDatasets, capabilities) => {\n    return newCatalogDateDatasetMap(dateDatasets, capabilities.hasTypeScopedIdentifiers);\n});\n/**\n * Selects all display forms in the catalog as a mapping of obj ref to display form\n *\n * @alpha\n */\nexport const selectAllCatalogDisplayFormsMap = createSelector([selectCatalogAttributes, selectCatalogDateDatasets, selectBackendCapabilities], (attributes, dateDatasets, capabilities) => {\n    return createDisplayFormMap(attributes, dateDatasets, capabilities.hasTypeScopedIdentifiers);\n});\n/**\n * Selects all attributes in the catalog as a mapping of ref to catalog's attribute object. The mapping\n * will include both 'normal' attributes and attributes from date datasets.\n *\n * @remarks see `isCatalogAttribute` guard; this can be used to determine type of attribute\n * @alpha\n */\nexport const selectAllCatalogAttributesMap = createSelector([selectCatalogAttributes, selectCatalogDateDatasets, selectBackendCapabilities], (attributes, dateDatasets, capabilities) => {\n    const dateAttributes = flatMap(dateDatasets, (d) => d.dateAttributes);\n    return newCatalogAttributeMap([...attributes, ...dateAttributes], capabilities.hasTypeScopedIdentifiers);\n});\n/**\n * Selects all measures in the catalog as a mapping of ref to catalog's measure object.\n *\n * @alpha\n */\nexport const selectAllCatalogMeasuresMap = createSelector([selectCatalogMeasures, selectBackendCapabilities], (measures, capabilities) => {\n    return newCatalogMeasureMap(measures, capabilities.hasTypeScopedIdentifiers);\n});\n/**\n * Selects lookup mapping between date dataset attributes and date datasets. The entry in lookup contains both the date dataset attribute\n * and the date dataset to which it belongs. The lookup is indexed by the date dataset attribute and entries can be obtained using\n * attribute refs.\n *\n * @alpha\n */\nexport const selectCatalogDateAttributeToDataset = createSelector([selectCatalogDateDatasets, selectBackendCapabilities], (dateDatasets, capabilities) => {\n    const attributesWithDatasets = flatMap(dateDatasets, (dataset) => dataset.dateAttributes.map((attribute) => {\n        return {\n            attribute,\n            dataset,\n        };\n    }));\n    return newCatalogDateAttributeWithDatasetMap(attributesWithDatasets, capabilities.hasTypeScopedIdentifiers);\n});\n//# sourceMappingURL=catalogSelectors.js.map","import { ObjRefMap } from \"../metadata/objRefMap.js\";\n/**\n * Creates an {@link ObjRefMap} mapping date attribute ObjRef to an entry that contains the date attribute and the date dataset to which it belongs\n *\n * @param items - items to add to mapping\n * @param strictTypeCheck - whether to do strict type checking in idRefs\n * @internal\n */\nexport function newCatalogDateAttributeWithDatasetMap(items, strictTypeCheck = false) {\n    const config = {\n        type: \"attribute\",\n        strictTypeCheck,\n        idExtract: (i) => i.attribute.attribute.id,\n        uriExtract: (i) => i.attribute.attribute.uri,\n        refExtract: (i) => i.attribute.attribute.ref,\n    };\n    const map = new ObjRefMap(config);\n    return map.fromItems(items);\n}\n//# sourceMappingURL=dateAttributeWithDatasetMap.js.map","import { selectAllCatalogDisplayFormsMap } from \"../store/catalog/catalogSelectors.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { newDisplayFormMap } from \"../../_staging/metadata/objRefMap.js\";\nasync function loadDisplayFormsMetadata(ctx, refs) {\n    if (!refs.length) {\n        return [];\n    }\n    return ctx.backend.workspace(ctx.workspace).attributes().getAttributeDisplayForms(refs);\n}\n/**\n * Given a set of display form refs (which may be of any type.. uri or id), this function returns a list of\n * attribute display form metadata objects.\n *\n * @param ctx - dashboard context in which the resolution is done\n * @param refs - ObjRefs of display forms; the type of ObjRef can be either uri or id ref, the function will resolve it regardless\n * @param displayForms - specify mapping of display forms to use for in-memory resolution of refs to metadata objects; if\n *  not specified, the generator will retrieve all catalog display forms from state\n */\nexport function* resolveDisplayFormMetadata(ctx, refs, displayForms) {\n    const catalogDisplayForms = displayForms\n        ? displayForms\n        : yield select(selectAllCatalogDisplayFormsMap);\n    const resolvedDisplayForms = [];\n    const tryLoadDisplayForms = [];\n    refs.forEach((ref) => {\n        const catalogDisplayForm = catalogDisplayForms.get(ref);\n        if (catalogDisplayForm) {\n            resolvedDisplayForms.push(catalogDisplayForm);\n        }\n        else {\n            tryLoadDisplayForms.push(ref);\n        }\n    });\n    const loadedDisplayForms = yield call(loadDisplayFormsMetadata, ctx, tryLoadDisplayForms);\n    const loadedDisplayFormsMap = newDisplayFormMap(loadedDisplayForms);\n    const missing = [];\n    tryLoadDisplayForms.forEach((ref) => {\n        const loadedDisplayForm = loadedDisplayFormsMap.get(ref);\n        if (loadedDisplayForm) {\n            resolvedDisplayForms.push(loadedDisplayForm);\n        }\n        else {\n            missing.push(ref);\n        }\n    });\n    return {\n        resolved: newDisplayFormMap(resolvedDisplayForms),\n        missing,\n    };\n}\n//# sourceMappingURL=displayFormResolver.js.map","import { call } from \"redux-saga/effects\";\nimport { resolveDisplayFormMetadata } from \"./displayFormResolver.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { objRefToString, isDashboardAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\n/**\n * This generator function resolves display form metadata objects for all attribute filters in the provided `filters`\n * parameter. The resolver will first check in-memory `displayForms` mapping; if some used display forms are not\n * found, it will consult the backend.\n *\n * @param ctx - dashboard context where the resolution is being done\n * @param filters - list of dashboard filters; resolver will extract just the attribute filters from here\n * @param displayForms - in-memory mapping of known display forms to use during the initial lookup; if not specified, the\n *  code will obtain all catalog display forms; note: this parameter is really only useful during the dashboard initialization\n *  where the catalog is not yet set. once the dashboard is initialized, the parameter is not needed\n */\nexport function* resolveFilterDisplayForms(ctx, filters, displayForms) {\n    const displayFormRefs = filters\n        .filter(isDashboardAttributeFilter)\n        .map((filter) => filter.attributeFilter.displayForm);\n    const resolvedDisplayForms = yield call(resolveDisplayFormMetadata, ctx, displayFormRefs, displayForms);\n    // TODO: this is too strict; instead of exploding, the resolver should communicate that some filters are invalid so\n    //  that the upstream code can remove the filter from the filter context\n    invariant(isEmpty(resolvedDisplayForms.missing), `Unable to resolve display forms used in filter context filters: ${resolvedDisplayForms.missing\n        .map((m) => objRefToString(m))\n        .join(\", \")}.`);\n    return Array.from(resolvedDisplayForms.resolved.values());\n}\n//# sourceMappingURL=filterResolver.js.map","// (C) 2021 GoodData Corporation\nimport { getContext } from \"redux-saga/effects\";\n/**\n * Gets the public dashboard context stored inside redux-saga context.\n */\nexport function* getDashboardContext() {\n    return yield getContext(\"dashboardContext\");\n}\n/**\n * Gets the private dashboard context stored inside redux-saga context.\n */\nexport function* getPrivateContext() {\n    return yield getContext(\"privateContext\");\n}\n//# sourceMappingURL=contexts.js.map","export function loadAvailableDisplayFormRefs(ctx, displayForms) {\n    const { backend, workspace } = ctx;\n    return backend\n        .workspace(workspace)\n        .attributes()\n        .getAttributeDisplayForms(displayForms)\n        .then((references) => references.map((df) => df.ref));\n}\n//# sourceMappingURL=loadAvailableDisplayFormRefs.js.map","// (C) 2021-2022 GoodData Corporation\nimport { alertsActions } from \"../../../store/alerts/index.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { createDefaultFilterContext } from \"../../../../_staging/dashboard/defaultFilterContext.js\";\nimport { layoutActions } from \"../../../store/layout/index.js\";\nimport { insightsActions } from \"../../../store/insights/index.js\";\nimport { metaActions } from \"../../../store/meta/index.js\";\nimport { uiActions } from \"../../../store/ui/index.js\";\nimport { areObjRefsEqual, isDashboardAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { dashboardFilterContextDefinition, dashboardFilterContextIdentity, } from \"../../../../_staging/dashboard/dashboardFilterContext.js\";\nimport { dashboardLayoutSanitize } from \"../../../../_staging/dashboard/dashboardLayout.js\";\nimport { resolveFilterDisplayForms } from \"../../../utils/filterResolver.js\";\nimport { call } from \"redux-saga/effects\";\nimport { getPrivateContext } from \"../../../store/_infra/contexts.js\";\nimport { loadAvailableDisplayFormRefs } from \"./loadAvailableDisplayFormRefs.js\";\nimport update from \"lodash/fp/update.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nexport const EmptyDashboardLayout = {\n    type: \"IDashboardLayout\",\n    sections: [],\n};\n/**\n * Returns a list of actions which when processed will initialize the essential parts of the dashboard\n * state so that it shows a new, empty dashboard.\n *\n * @param dateFilterConfig - date filter config to use for the new dashboard\n */\nexport function actionsToInitializeNewDashboard(dateFilterConfig) {\n    return [\n        alertsActions.setAlerts([]),\n        filterContextActions.setFilterContext({\n            filterContextDefinition: createDefaultFilterContext(dateFilterConfig),\n            attributeFilterDisplayForms: [],\n        }),\n        layoutActions.setLayout(EmptyDashboardLayout),\n        insightsActions.setInsights([]),\n        metaActions.setMeta({}),\n    ];\n}\nfunction* sanitizeFilterContext(ctx, filterContext) {\n    // we don't need sanitize filter references, if backend guarantees consistent references\n    if (!ctx.backend.capabilities.allowsInconsistentRelations) {\n        return filterContext;\n    }\n    if (!filterContext || isEmpty(filterContext.filters)) {\n        return filterContext;\n    }\n    const usedFilterDisplayForms = filterContext.filters\n        .filter(isDashboardAttributeFilter)\n        .map((f) => f.attributeFilter.displayForm);\n    const availableRefs = yield call(loadAvailableDisplayFormRefs, ctx, usedFilterDisplayForms);\n    return update(\"filters\", (filters) => filters.filter((filter) => {\n        if (!isDashboardAttributeFilter(filter)) {\n            return true;\n        }\n        return availableRefs.some((ref) => areObjRefsEqual(ref, filter.attributeFilter.displayForm));\n    }), filterContext);\n}\n/**\n * Returns a list of actions which when processed will initialize filter context, layout and meta parts\n * of the state for an existing dashboard.\n *\n * This generator will perform the essential cleanup, sanitization and resolution on top of of the input\n * dashboard and use the sanitized values to initialize the state:\n *\n * -  Layout sizing sanitization happens here\n * -  Resolution of attribute filter display forms happens here (this may be async)\n *\n * @param ctx - dashboard context in which the initialization is done\n * @param dashboard - dashboard to create initialization actions for\n * @param insights - insights used on the dashboard; note that this function will not create actions to store\n *  these insights in the state; it uses the insights to perform sanitization of the dashboard layout\n * @param settings - settings currently in effect; note that this function will not create actions to store\n *  the settings in the state; it uses the settings during layout sanitization\n * @param dateFilterConfig - effective date filter config to use; note that this function will not store\n *  the date filter config anywhere; it uses the config during filter context sanitization & determining\n *  which date option is selected\n * @param displayForms - specify display forms that should be used for in-memory resolution of\n *  attribute filter display forms to metadata objects\n * @param persistedDashboard - dashboard to use for the persisted dashboard state slice in case it needs to be different from the dashboard param\n */\nexport function* actionsToInitializeExistingDashboard(ctx, dashboard, insights, settings, dateFilterConfig, displayForms, persistedDashboard) {\n    var _a, _b, _c, _d, _e, _f;\n    const sanitizedFilterContext = yield call(sanitizeFilterContext, ctx, dashboard.filterContext);\n    const sanitizedDashboard = Object.assign(Object.assign({}, dashboard), { layout: (_a = dashboard.layout) !== null && _a !== void 0 ? _a : EmptyDashboardLayout, filterContext: sanitizedFilterContext });\n    const privateCtx = yield call(getPrivateContext);\n    const customizedDashboard = (_c = (_b = privateCtx === null || privateCtx === void 0 ? void 0 : privateCtx.existingDashboardTransformFn) === null || _b === void 0 ? void 0 : _b.call(privateCtx, sanitizedDashboard)) !== null && _c !== void 0 ? _c : sanitizedDashboard;\n    const modifiedWidgets = (_e = (_d = privateCtx === null || privateCtx === void 0 ? void 0 : privateCtx.widgetsOverlayFn) === null || _d === void 0 ? void 0 : _d.call(privateCtx, customizedDashboard)) !== null && _e !== void 0 ? _e : {};\n    const filterContextDefinition = dashboardFilterContextDefinition(customizedDashboard, dateFilterConfig);\n    const filterContextIdentity = dashboardFilterContextIdentity(customizedDashboard);\n    const attributeFilterDisplayForms = yield call(resolveFilterDisplayForms, ctx, filterContextDefinition.filters, displayForms);\n    /*\n     * NOTE: cannot do without the cast here. The layout in IDashboard is parameterized with IDashboardWidget\n     * which also includes KPI and Insight widget definitions = those without identity. That is however\n     * not valid: any widget for a persisted dashboard must have identity.\n     *\n     * Also note, nested layouts are not yet supported\n     */\n    const dashboardLayout = dashboardLayoutSanitize((_f = customizedDashboard.layout) !== null && _f !== void 0 ? _f : EmptyDashboardLayout, insights, settings);\n    return [\n        filterContextActions.setFilterContext({\n            originalFilterContextDefinition: filterContextDefinition,\n            filterContextDefinition,\n            filterContextIdentity,\n            attributeFilterDisplayForms,\n        }),\n        layoutActions.setLayout(dashboardLayout),\n        metaActions.setMeta({\n            dashboard: persistedDashboard !== null && persistedDashboard !== void 0 ? persistedDashboard : dashboard,\n        }),\n        insightsActions.setInsights(insights),\n        metaActions.setDashboardTitle(dashboard.title),\n        uiActions.clearWidgetSelection(),\n        uiActions.setWidgetsOverlay(modifiedWidgets),\n    ];\n}\n//# sourceMappingURL=stateInitializers.js.map","// (C) 2021 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nexport const executionResultsAdapter = createEntityAdapter({\n    selectId: (execution) => execution.id,\n});\n//# sourceMappingURL=executionResultsEntityAdapter.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { executionResultsAdapter } from \"./executionResultsEntityAdapter.js\";\nconst executionResultsSlice = createSlice({\n    name: \"executionResults\",\n    initialState: executionResultsAdapter.getInitialState(),\n    reducers: {\n        upsertExecutionResult: executionResultsAdapter.upsertOne,\n        clearAllExecutionResults: executionResultsAdapter.removeAll,\n    },\n});\nexport const executionResultsSliceReducer = executionResultsSlice.reducer;\nexport const executionResultsActions = executionResultsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nexport const accessibleDashboardsEntityAdapter = createEntityAdapter({\n    selectId: (dashboard) => objRefToString(dashboard.ref),\n});\n//# sourceMappingURL=accessibleDashboardsEntityAdapter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { accessibleDashboardsEntityAdapter } from \"./accessibleDashboardsEntityAdapter.js\";\nconst accessibleDashboardsSlice = createSlice({\n    name: \"accessibleDashboards\",\n    initialState: accessibleDashboardsEntityAdapter.getInitialState(),\n    reducers: {\n        setAccessibleDashboards: accessibleDashboardsEntityAdapter.setAll,\n        addAccessibleDashboard: accessibleDashboardsEntityAdapter.upsertOne,\n    },\n});\nexport const accessibleDashboardsSliceReducer = accessibleDashboardsSlice.reducer;\nexport const accessibleDashboardsActions = accessibleDashboardsSlice.actions;\n//# sourceMappingURL=index.js.map","export function loadAccessibleDashboardList(ctx) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().getDashboards({ includeAvailableViaLink: true });\n}\n//# sourceMappingURL=loadAccessibleDashboardList.js.map","// (C) 2019-2022 GoodData Corporation\nimport { uriRef } from \"@gooddata/sdk-model\";\nexport async function loadLegacyDashboards(ctx) {\n    const dashboardResponse = await getProjectDashboards(ctx.backend, ctx.workspace);\n    if (!dashboardResponse) {\n        return [];\n    }\n    return projectDashboardToLegacyDashboard(dashboardResponse);\n}\nfunction emptyPromise() {\n    return Promise.resolve();\n}\nfunction unwrapDecoratedBackend(backend) {\n    if (backend === null || backend === void 0 ? void 0 : backend.decorated) {\n        return unwrapDecoratedBackend(backend.decorated);\n    }\n    return backend;\n}\nfunction getBackendAuthApiCallPrivateMethod(backend) {\n    var _a;\n    return (_a = backend.authApiCall) !== null && _a !== void 0 ? _a : emptyPromise;\n}\nfunction getBearProjectDashboardMethod(client) {\n    var _a;\n    const method = (_a = client === null || client === void 0 ? void 0 : client.md) === null || _a === void 0 ? void 0 : _a.getProjectDashboards.bind(client === null || client === void 0 ? void 0 : client.md);\n    return method !== null && method !== void 0 ? method : emptyPromise;\n}\nasync function getProjectDashboards(backend, workspace) {\n    const unwrappedBackend = unwrapDecoratedBackend(backend);\n    const authApiCall = getBackendAuthApiCallPrivateMethod(unwrappedBackend);\n    return authApiCall(async (client) => {\n        const projectDashboardMethod = getBearProjectDashboardMethod(client);\n        return projectDashboardMethod(workspace);\n    });\n}\nfunction projectDashboardToLegacyDashboard(data) {\n    return data.map((item) => {\n        const { content, meta } = item.projectDashboard;\n        return {\n            identifier: meta.identifier,\n            uri: meta.uri,\n            ref: uriRef(meta.uri),\n            title: meta.title,\n            tabs: content.tabs.map((tab) => {\n                return {\n                    identifier: tab.identifier,\n                    title: tab.title,\n                };\n            }),\n        };\n    });\n}\n//# sourceMappingURL=loadLegacyDashboards.js.map","const setLegacyDashboards = (state, action) => {\n    state.legacyDashboards = action.payload;\n};\nexport const legacyDashboardsReducers = {\n    setLegacyDashboards,\n};\n//# sourceMappingURL=legacyDashboardsReducers.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { legacyDashboardsReducers } from \"./legacyDashboardsReducers.js\";\nimport { legacyDashboardsInitialState } from \"./legacyDashboardsState.js\";\nconst legacyDashboardsSlice = createSlice({\n    name: \"legacyDashboards\",\n    initialState: legacyDashboardsInitialState,\n    reducers: legacyDashboardsReducers,\n});\nexport const legacyDashboardsSliceReducer = legacyDashboardsSlice.reducer;\nexport const legacyDashboardsActions = legacyDashboardsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2022-2023 GoodData Corporation\nexport const legacyDashboardsInitialState = {\n    legacyDashboards: undefined,\n};\n//# sourceMappingURL=legacyDashboardsState.js.map","export function loadDashboardPermissions(ctx) {\n    const { backend, workspace, dashboardRef } = ctx;\n    return backend.workspace(workspace).dashboards().getDashboardPermissions(dashboardRef);\n}\n//# sourceMappingURL=loadDashboardPermissions.js.map","// (C) 2022-2023 GoodData Corporation\nconst setDashboardPermissions = (state, action) => {\n    state.dashboardPermissions = action.payload;\n};\nexport const dashboardPermissionsReducers = {\n    setDashboardPermissions,\n};\n//# sourceMappingURL=dashboardPermissionsReducers.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { dashboardPermissionsReducers } from \"./dashboardPermissionsReducers.js\";\nimport { dashboardPermissionsInitialState } from \"./dashboardPermissionsState.js\";\nconst dashboardPermissionsSlice = createSlice({\n    name: \"dashboardPermissions\",\n    initialState: dashboardPermissionsInitialState,\n    reducers: dashboardPermissionsReducers,\n});\nexport const dashboardPermissionsSliceReducer = dashboardPermissionsSlice.reducer;\nexport const dashboardPermissionsActions = dashboardPermissionsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2022-2023 GoodData Corporation\nexport const dashboardPermissionsInitialState = {\n    dashboardPermissions: undefined,\n};\n//# sourceMappingURL=dashboardPermissionsState.js.map","export function resolveEntitlements(ctx) {\n    const { backend } = ctx;\n    return backend.entitlements().resolveEntitlements();\n}\n//# sourceMappingURL=resolveEntitlements.js.map","import { all, call, put } from \"redux-saga/effects\";\nimport { dashboardInitialized } from \"../../../events/dashboard.js\";\nimport { loadingActions } from \"../../../store/loading/index.js\";\nimport { walkLayout } from \"@gooddata/sdk-backend-spi\";\nimport { resolveDashboardConfig } from \"./resolveDashboardConfig.js\";\nimport { configActions } from \"../../../store/config/index.js\";\nimport { entitlementsActions } from \"../../../store/entitlements/index.js\";\nimport { dateFilterConfigActions } from \"../../../store/dateFilterConfig/index.js\";\nimport { mergeDateFilterConfigWithOverrides } from \"./mergeDateFilterConfigs.js\";\nimport { resolvePermissions } from \"./resolvePermissions.js\";\nimport { permissionsActions } from \"../../../store/permissions/index.js\";\nimport { loadCatalog } from \"./loadCatalog.js\";\nimport { loadDashboardAlerts } from \"./loadDashboardAlerts.js\";\nimport { catalogActions } from \"../../../store/catalog/index.js\";\nimport { alertsActions } from \"../../../store/alerts/index.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { loadUser } from \"./loadUser.js\";\nimport { userActions } from \"../../../store/user/index.js\";\nimport { uiActions } from \"../../../store/ui/index.js\";\nimport { renderModeActions } from \"../../../store/renderMode/index.js\";\nimport { loadDashboardList } from \"./loadDashboardList.js\";\nimport { listedDashboardsActions } from \"../../../store/listedDashboards/index.js\";\nimport { backendCapabilitiesActions } from \"../../../store/backendCapabilities/index.js\";\nimport { areObjRefsEqual, isDrillToInsight, isInsightWidget, serializeObjRef, } from \"@gooddata/sdk-model\";\nimport { actionsToInitializeExistingDashboard, actionsToInitializeNewDashboard, } from \"../common/stateInitializers.js\";\nimport { executionResultsActions } from \"../../../store/executionResults/index.js\";\nimport { createDisplayFormMapFromCatalog } from \"../../../../_staging/catalog/displayFormMap.js\";\nimport { getPrivateContext } from \"../../../store/_infra/contexts.js\";\nimport { accessibleDashboardsActions } from \"../../../store/accessibleDashboards/index.js\";\nimport { loadAccessibleDashboardList } from \"./loadAccessibleDashboardList.js\";\nimport { loadLegacyDashboards } from \"./loadLegacyDashboards.js\";\nimport { legacyDashboardsActions } from \"../../../store/legacyDashboards/index.js\";\nimport uniqBy from \"lodash/uniqBy.js\";\nimport { loadDashboardPermissions } from \"./loadDashboardPermissions.js\";\nimport { dashboardPermissionsActions } from \"../../../store/dashboardPermissions/index.js\";\nimport { resolveEntitlements } from \"./resolveEntitlements.js\";\nasync function loadDashboardFromBackend(ctx, privateCtx, dashboardRef, hasPersistedDashboard) {\n    const { backend, workspace, filterContextRef } = ctx;\n    const { preloadedDashboard } = privateCtx;\n    if (preloadedDashboard && areObjRefsEqual(preloadedDashboard.ref, dashboardRef)) {\n        // with persisted dashboard we cannot use the backend for resolution of the referenced insights\n        // as our version of dashboard differs from what is on the backend\n        // hence we must do the resolution on the client\n        if (hasPersistedDashboard) {\n            const insights = await loadInsightsForPersistedDashboard(ctx, preloadedDashboard);\n            return {\n                dashboard: preloadedDashboard,\n                references: {\n                    insights,\n                    plugins: [],\n                },\n            };\n        }\n        return backend\n            .workspace(workspace)\n            .dashboards()\n            .getDashboardReferencedObjects(preloadedDashboard, [\"insight\"])\n            .then((references) => {\n            return {\n                dashboard: preloadedDashboard,\n                references,\n            };\n        });\n    }\n    return backend\n        .workspace(workspace)\n        .dashboards()\n        .getDashboardWithReferences(dashboardRef, filterContextRef, { loadUserData: true }, [\"insight\"]);\n}\nasync function loadInsightsForPersistedDashboard(ctx, dashboard) {\n    if (!(dashboard === null || dashboard === void 0 ? void 0 : dashboard.layout)) {\n        return [];\n    }\n    const { backend, workspace } = ctx;\n    const referencedInsights = [];\n    walkLayout(dashboard.layout, {\n        widgetCallback: (widget) => {\n            if (isInsightWidget(widget)) {\n                referencedInsights.push(\n                // insight itself\n                widget.insight, \n                // insights in drills to insight\n                ...widget.drills.filter(isDrillToInsight).map((drill) => drill.target));\n            }\n        },\n    });\n    const uniqueRefs = uniqBy(referencedInsights, serializeObjRef);\n    return Promise.all(uniqueRefs.map((ref) => backend.workspace(workspace).insights().getInsight(ref)));\n}\nfunction* loadExistingDashboard(ctx, cmd, dashboardRef) {\n    const { backend } = ctx;\n    const privateCtx = yield call(getPrivateContext);\n    const [dashboardWithReferences, config, permissions, entitlements, catalog, alerts, user, listedDashboards, accessibleDashboards, legacyDashboards, dashboardPermissions,] = yield all([\n        call(loadDashboardFromBackend, ctx, privateCtx, dashboardRef, !!cmd.payload.persistedDashboard),\n        call(resolveDashboardConfig, ctx, cmd),\n        call(resolvePermissions, ctx, cmd),\n        call(resolveEntitlements, ctx),\n        call(loadCatalog, ctx),\n        call(loadDashboardAlerts, ctx),\n        call(loadUser, ctx),\n        call(loadDashboardList, ctx),\n        call(loadAccessibleDashboardList, ctx),\n        call(loadLegacyDashboards, ctx),\n        call(loadDashboardPermissions, ctx),\n    ]);\n    const { dashboard, references: { insights }, } = dashboardWithReferences;\n    const effectiveDateFilterConfig = yield call(mergeDateFilterConfigWithOverrides, ctx, cmd, config.dateFilterConfig, dashboard.dateFilterConfig);\n    const initActions = yield call(actionsToInitializeExistingDashboard, ctx, dashboard, insights, config.settings, effectiveDateFilterConfig.config, createDisplayFormMapFromCatalog(catalog), cmd.payload.persistedDashboard);\n    const batch = batchActions([\n        backendCapabilitiesActions.setBackendCapabilities(backend.capabilities),\n        configActions.setConfig(config),\n        entitlementsActions.setEntitlements(entitlements),\n        userActions.setUser(user),\n        permissionsActions.setPermissions(permissions),\n        catalogActions.setCatalogItems({\n            attributes: catalog.attributes(),\n            dateDatasets: catalog.dateDatasets(),\n            facts: catalog.facts(),\n            measures: catalog.measures(),\n            attributeHierarchies: catalog.attributeHierarchies(),\n        }),\n        ...initActions,\n        alertsActions.setAlerts(alerts),\n        dateFilterConfigActions.setDateFilterConfig({\n            dateFilterConfig: dashboard.dateFilterConfig,\n            effectiveDateFilterConfig: effectiveDateFilterConfig.config,\n            isUsingDashboardOverrides: effectiveDateFilterConfig.source === \"dashboard\",\n        }),\n        listedDashboardsActions.setListedDashboards(listedDashboards),\n        accessibleDashboardsActions.setAccessibleDashboards(accessibleDashboards),\n        legacyDashboardsActions.setLegacyDashboards(legacyDashboards),\n        uiActions.setMenuButtonItemsVisibility(config.menuButtonItemsVisibility),\n        renderModeActions.setRenderMode(config.initialRenderMode),\n        dashboardPermissionsActions.setDashboardPermissions(dashboardPermissions),\n    ], \"@@GDC.DASH/BATCH.INIT.EXISTING\");\n    const event = dashboardInitialized(ctx, dashboard, insights, config, permissions, cmd.correlationId);\n    return {\n        batch,\n        event,\n    };\n}\nfunction* initializeNewDashboard(ctx, cmd) {\n    const { backend } = ctx;\n    const [config, permissions, entitlements, catalog, user, listedDashboards, accessibleDashboards, legacyDashboards,] = yield all([\n        call(resolveDashboardConfig, ctx, cmd),\n        call(resolvePermissions, ctx, cmd),\n        call(resolveEntitlements, ctx),\n        call(loadCatalog, ctx),\n        call(loadUser, ctx),\n        call(loadDashboardList, ctx),\n        call(loadAccessibleDashboardList, ctx),\n        call(loadLegacyDashboards, ctx),\n    ]);\n    const batch = batchActions([\n        backendCapabilitiesActions.setBackendCapabilities(backend.capabilities),\n        configActions.setConfig(config),\n        entitlementsActions.setEntitlements(entitlements),\n        userActions.setUser(user),\n        permissionsActions.setPermissions(permissions),\n        catalogActions.setCatalogItems({\n            attributes: catalog.attributes(),\n            dateDatasets: catalog.dateDatasets(),\n            facts: catalog.facts(),\n            measures: catalog.measures(),\n            attributeHierarchies: catalog.attributeHierarchies(),\n        }),\n        listedDashboardsActions.setListedDashboards(listedDashboards),\n        accessibleDashboardsActions.setAccessibleDashboards(accessibleDashboards),\n        legacyDashboardsActions.setLegacyDashboards(legacyDashboards),\n        executionResultsActions.clearAllExecutionResults(),\n        ...actionsToInitializeNewDashboard(config.dateFilterConfig),\n        dateFilterConfigActions.setDateFilterConfig({\n            dateFilterConfig: undefined,\n            effectiveDateFilterConfig: config.dateFilterConfig,\n            isUsingDashboardOverrides: false,\n        }),\n        uiActions.setMenuButtonItemsVisibility(config.menuButtonItemsVisibility),\n        renderModeActions.setRenderMode(config.initialRenderMode),\n        dashboardPermissionsActions.setDashboardPermissions({\n            canViewDashboard: true,\n            canShareDashboard: true,\n            canShareLockedDashboard: true,\n            canEditDashboard: true,\n            canEditLockedDashboard: true,\n        }),\n    ], \"@@GDC.DASH/BATCH.INIT.NEW\");\n    const event = dashboardInitialized(ctx, undefined, [], config, permissions, cmd.correlationId);\n    return {\n        batch,\n        event,\n    };\n}\nexport function* initializeDashboardHandler(ctx, cmd) {\n    const { dashboardRef } = ctx;\n    try {\n        yield put(loadingActions.setLoadingStart());\n        let result;\n        if (dashboardRef) {\n            result = yield call(loadExistingDashboard, ctx, cmd, dashboardRef);\n        }\n        else {\n            result = yield call(initializeNewDashboard, ctx, cmd);\n        }\n        yield put(result.batch);\n        yield put(loadingActions.setLoadingSuccess());\n        return result.event;\n    }\n    catch (e) {\n        yield put(loadingActions.setLoadingError(e));\n        throw e;\n    }\n}\n//# sourceMappingURL=index.js.map","// (C) 2022-2023 GoodData Corporation\n/**\n * Creates the ChangeRenderMode command. Dispatching this command will result in change of the render mode of dashboard component\n *\n * @param renderMode - render mode value\n * @param renderModeChangeOptions - options for render mode change\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeRenderMode(renderMode, renderModeChangeOptions = { resetDashboard: true }, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.CHANGE_RENDER_MODE\",\n        correlationId,\n        payload: {\n            renderMode,\n            renderModeChangeOptions,\n        },\n    };\n}\n/**\n * Creates the ChangeRenderMode command for switch to edit mode.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function switchToEditRenderMode(correlationId) {\n    return changeRenderMode(\"edit\", { resetDashboard: true }, correlationId);\n}\n/**\n * Creates the ChangeRenderMode command for cancel edit mode.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function cancelEditRenderMode(correlationId) {\n    return changeRenderMode(\"view\", { resetDashboard: true }, correlationId);\n}\n//# sourceMappingURL=renderMode.js.map","// (C) 2021 GoodData Corporation\nimport memoize from \"lodash/memoize.js\";\nimport stringify from \"json-stable-stringify\";\n/**\n * Memoizes selector factory by its arguments.\n * This avoids recreating & recomputing selector on each render (and thus changing reference of the result), if the factory arguments are the same.\n * Use it wisely (don't use it for selector factories that changes arguments very often, or selector factories that are used in a large component lists/trees).\n *\n * Another option is to use this approach: https://react-redux.js.org/api/hooks#using-memoizing-selectors but it's ugly.\n *\n * @param selector - selector factory\n * @returns selector factory that will be memoized by its stringified arguments\n */\nexport const createMemoizedSelector = (selector) => memoize(selector, (...args) => stringify(args, { space: 0 }));\n//# sourceMappingURL=selectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nimport { areObjRefsEqual, isDashboardAttributeFilter, isDashboardDateFilter, uriRef, idRef, } from \"@gooddata/sdk-model\";\nimport { newDisplayFormMap } from \"../../../_staging/metadata/objRefMap.js\";\nimport { createMemoizedSelector } from \"../_infra/selectors.js\";\nimport compact from \"lodash/compact.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.filterContext);\n/**\n * This selector returns original (stored) dashboard's filter context definition.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @returns {@link @gooddata/sdk-backend-spi#IFilterContextDefinition} or `undefined` if original filter context definition is not set.\n *\n * @public\n */\nexport const selectOriginalFilterContextDefinition = createSelector(selectSelf, (filterContextState) => {\n    invariant(filterContextState.filterContextDefinition, \"attempting to access uninitialized filter context state\");\n    return filterContextState.originalFilterContextDefinition;\n});\n/**\n * This selector returns original (stored) dashboard's filters.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @returns an array of {@link @gooddata/sdk-backend-spi#FilterContextItem} or an empty array.\n *\n * @public\n */\nexport const selectOriginalFilterContextFilters = createSelector(selectOriginalFilterContextDefinition, (filterContext) => { var _a; return (_a = filterContext === null || filterContext === void 0 ? void 0 : filterContext.filters) !== null && _a !== void 0 ? _a : []; });\n/**\n * This selector returns current dashboard's filter context definition.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @returns a {@link @gooddata/sdk-backend-spi#IFilterContextDefinition}\n *\n * @public\n */\nexport const selectFilterContextDefinition = createSelector(selectSelf, (filterContextState) => {\n    invariant(filterContextState.filterContextDefinition, \"attempting to access uninitialized filter context state\");\n    return filterContextState.filterContextDefinition;\n});\n/**\n * Selects dashboard's filter context identity.\n *\n * @remarks\n * The identity may be undefined in two circumstances:\n *\n * -  a new, yet unsaved dashboard; the filter context is saved together with the dashboard and after the\n *    save the identity will be known and added\n *\n * -  export of an existing, saved dashboard; during the export the dashboard receives a temporary\n *    filter context that represents values of filters at the time the export was initiated - which may\n *    be different from what is saved in the filter context itself. that temporary context is not\n *    persistent and lives only for that particular export operation.\n *\n * Invocations before initialization lead to invariant errors.\n *\n * @returns a {@link @gooddata/sdk-backend-spi#IDashboardObjectIdentity} or undefined, if the filter context identity is not set.\n *\n * @internal\n */\nexport const selectFilterContextIdentity = createSelector(selectSelf, (filterContextState) => {\n    // this is intentional; want to fail fast when trying to access an optional identity of filter context \\\n    // but there is actually no filter context initialized for the dashboard\n    invariant(filterContextState.filterContextDefinition, \"attempting to access uninitialized filter context state\");\n    return filterContextState.filterContextIdentity;\n});\n/**\n * Selects list of display form metadata objects referenced by attribute filters.\n *\n * @remarks\n * Invocations before initialization lead to invariant errors.\n *\n * @returns an array of {@link @gooddata/sdk-backend-spi#IAttributeDisplayFormMetadataObject}\n *\n * @public\n */\nexport const selectAttributeFilterDisplayForms = createSelector(selectSelf, (filterContextState) => {\n    invariant(filterContextState.attributeFilterDisplayForms, \"attempting to access uninitialized filter context state\");\n    return filterContextState.attributeFilterDisplayForms;\n});\n/**\n * Selects map of display form metadata objects referenced by attribute filters.\n *\n * @remarks\n * Invocations before initialization lead to invariant errors.\n *\n * @returns a {@link ObjRefMap} of {@link @gooddata/sdk-backend-spi#IAttributeDisplayFormMetadataObject}\n *\n * @internal\n */\nexport const selectAttributeFilterDisplayFormsMap = createSelector(selectSelf, (filterContextState) => {\n    invariant(filterContextState.attributeFilterDisplayForms, \"attempting to access uninitialized filter context state\");\n    return newDisplayFormMap(filterContextState.attributeFilterDisplayForms);\n});\n/**\n * This selector returns dashboard's filter context filters.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectFilterContextFilters = createSelector(selectFilterContextDefinition, (filterContext) => filterContext.filters);\n/**\n * This selector returns dashboard's filter context attribute filters.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectFilterContextAttributeFilters = createSelector(selectFilterContextFilters, (filters) => filters.filter(isDashboardAttributeFilter));\n/**\n * This selector returns dashboard's filter context date filter.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectFilterContextDateFilter = createSelector(selectFilterContextFilters, (filters) => filters.find(isDashboardDateFilter));\n/**\n * Creates a selector for selecting attribute filter by its displayForm {@link @gooddata/sdk-model#ObjRef}.\n *\n * @remarks\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectFilterContextAttributeFilterByDisplayForm = createMemoizedSelector((displayForm) => createSelector(selectAttributeFilterDisplayFormsMap, selectFilterContextAttributeFilters, (attributeDisplayFormsMap, attributeFilters) => {\n    const df = attributeDisplayFormsMap.get(displayForm);\n    if (!df) {\n        return undefined;\n    }\n    // try matching both uri and id in case the type of ref is different from what is in the ref field\n    return attributeFilters.find((filter) => areObjRefsEqual(filter.attributeFilter.displayForm, idRef(df.id, \"displayForm\")) ||\n        areObjRefsEqual(filter.attributeFilter.displayForm, uriRef(df.uri)));\n}));\n/**\n * Creates a selector for selecting attribute filter by its localId.\n *\n * @remarks\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectFilterContextAttributeFilterByLocalId = createMemoizedSelector((localId) => createSelector(selectFilterContextAttributeFilters, (attributeFilters) => attributeFilters.find((filter) => filter.attributeFilter.localIdentifier === localId)));\n/**\n * Creates a selector for selecting attribute filter index by its localId.\n *\n * @remarks\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectFilterContextAttributeFilterIndexByLocalId = createMemoizedSelector((localId) => createSelector(selectFilterContextAttributeFilters, (attributeFilters) => attributeFilters.findIndex((filter) => filter.attributeFilter.localIdentifier === localId)));\n/**\n * Creates a selector for selecting all descendants of the attribute filter with given localId.\n *\n * @remarks\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectAttributeFilterDescendants = createMemoizedSelector((localId) => createSelector(selectFilterContextAttributeFilters, (attributeFilters) => {\n    const toCheck = compact([localId]);\n    const result = new Set();\n    while (toCheck.length) {\n        const current = toCheck.pop();\n        const children = attributeFilters.filter((f) => {\n            var _a;\n            return (_a = f.attributeFilter.filterElementsBy) === null || _a === void 0 ? void 0 : _a.some((parent) => parent.filterLocalIdentifier === current);\n        });\n        children.forEach((child) => {\n            result.add(child.attributeFilter.localIdentifier);\n            toCheck.push(child.attributeFilter.localIdentifier);\n        });\n    }\n    return Array.from(result);\n}));\n/**\n * Creates a selector for selecting all filters with different reference than the given one.\n *\n * @internal\n */\nexport const selectOtherContextAttributeFilters = createMemoizedSelector((ref) => createSelector(selectFilterContextAttributeFilters, (attributeFilters) => {\n    return attributeFilters.filter((attributeFilter) => !areObjRefsEqual(attributeFilter.attributeFilter.displayForm, ref));\n}));\n/**\n * Creates a selector to get a display form of the filter defined by its local identifier.\n *\n * @internal\n */\nexport const selectAttributeFilterDisplayFormByLocalId = createMemoizedSelector((localId) => createSelector(selectFilterContextAttributeFilters, (filters) => {\n    const filter = filters.find((filter) => filter.attributeFilter.localIdentifier === localId);\n    invariant(filter, \"Unable to find current filter to get its title.\");\n    return filter.attributeFilter.displayForm;\n}));\n/**\n * Creates a selector which checks for a circular dependency between filters.\n *\n * @internal\n */\nexport const selectIsCircularDependency = createMemoizedSelector((currentFilterLocalId, neighborFilterLocalId) => createSelector(selectAttributeFilterDescendants(currentFilterLocalId), (descendants) => {\n    return descendants.some((descendant) => descendant === neighborFilterLocalId);\n}));\nconst MAX_ATTRIBUTE_FILTERS_COUNT = 30;\n/**\n * This selector returns whether any more attribute filters can be added.\n *\n * @remarks\n * It is expected that the selector is called only after the filter context state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectCanAddMoreAttributeFilters = createSelector(selectFilterContextAttributeFilters, (attributeFilters) => {\n    return attributeFilters.length < MAX_ATTRIBUTE_FILTERS_COUNT;\n});\n//# sourceMappingURL=filterContextSelectors.js.map","// (C) 2020-2022 GoodData Corporation\nimport { newNegativeAttributeFilter, newPositiveAttributeFilter, newRelativeDateFilter, newAbsoluteDateFilter, isDashboardAttributeFilter, } from \"@gooddata/sdk-model\";\nimport isString from \"lodash/isString.js\";\n/**\n * Gets {@link IDashboardFilter} items for filters specified in given filterContext in relation to the given widget.\n *\n * @param filterContext - filter context to get filters for\n * @param widget - widget to use to get dateDataSet for date filters\n * @public\n */\nexport function filterContextToDashboardFiltersByWidget(filterContext, widget) {\n    if (!filterContext) {\n        return [];\n    }\n    return filterContextItemsToDashboardFiltersByWidget(filterContext.filters, widget);\n}\n/**\n * Gets {@link IDashboardFilter} items for filters specified in given filterContext in relation to the\n * given dateDataSet.\n *\n * @param filterContext - filter context to get filters for\n * @param dateDataSet - widget to use to get dateDataSet for date filters\n * @public\n */\nexport function filterContextToDashboardFiltersByDateDataSet(filterContext, dateDataSet) {\n    if (!filterContext) {\n        return [];\n    }\n    return filterContextItemsToDashboardFiltersByDateDataSet(filterContext.filters, dateDataSet);\n}\n/**\n * Converts {@link @gooddata/sdk-backend-spi#IDashboardAttributeFilter} to {@link @gooddata/sdk-model#IAttributeFilter} instance.\n *\n * @param filter - filter context attribute filter to convert\n * @public\n */\nexport function dashboardAttributeFilterToAttributeFilter(filter) {\n    if (filter.attributeFilter.negativeSelection) {\n        return newNegativeAttributeFilter(filter.attributeFilter.displayForm, filter.attributeFilter.attributeElements);\n    }\n    return newPositiveAttributeFilter(filter.attributeFilter.displayForm, filter.attributeFilter.attributeElements);\n}\n/**\n * Converts {@link @gooddata/sdk-backend-spi#IDashboardDateFilter} to {@link @gooddata/sdk-model#IDateFilter} instance.\n *\n * @param filter - filter context attribute filter to convert\n * @param widget - widget to use to get dateDataSet for date filters\n * @public\n */\nexport function dashboardDateFilterToDateFilterByWidget(filter, widget) {\n    if (filter.dateFilter.type === \"relative\") {\n        return newRelativeDateFilter(widget.dateDataSet, filter.dateFilter.granularity, numberOrStringToNumber(filter.dateFilter.from), numberOrStringToNumber(filter.dateFilter.to));\n    }\n    else {\n        return newAbsoluteDateFilter(widget.dateDataSet, filter.dateFilter.from.toString(), filter.dateFilter.to.toString());\n    }\n}\n/**\n * Converts {@link @gooddata/sdk-backend-spi#IDashboardDateFilter} to {@link @gooddata/sdk-model#IDateFilter} instance.\n *\n * @param filter - filter context attribute filter to convert\n * @param dateDataSet - date data set to define {@link @gooddata/sdk-model#IDateFilter}\n * @public\n */\nexport function dashboardDateFilterToDateFilterByDateDataSet(filter, dateDataSet) {\n    if (filter.dateFilter.type === \"relative\") {\n        return newRelativeDateFilter(dateDataSet, filter.dateFilter.granularity, numberOrStringToNumber(filter.dateFilter.from), numberOrStringToNumber(filter.dateFilter.to));\n    }\n    else {\n        return newAbsoluteDateFilter(dateDataSet, filter.dateFilter.from.toString(), filter.dateFilter.to.toString());\n    }\n}\n/**\n * Gets {@link IDashboardFilter} items for filters specified as {@link @gooddata/sdk-backend-spi#FilterContextItem} instances.\n *\n * @param filterContextItems - filter context items to get filters for\n * @param widget - widget to use to get dateDataSet for date filters\n * @public\n */\nexport function filterContextItemsToDashboardFiltersByWidget(filterContextItems, widget) {\n    return filterContextItems.map((filter) => {\n        if (isDashboardAttributeFilter(filter)) {\n            return dashboardAttributeFilterToAttributeFilter(filter);\n        }\n        else {\n            return dashboardDateFilterToDateFilterByWidget(filter, widget);\n        }\n    });\n}\n/**\n * Gets {@link IDashboardFilter} items for filters specified as {@link @gooddata/sdk-backend-spi#FilterContextItem} instances.\n *\n * @param filterContextItems - filter context items to get filters for\n * @param dateDataSet - date data set to define {@link @gooddata/sdk-model#IDateFilter}\n * @public\n */\nexport function filterContextItemsToDashboardFiltersByDateDataSet(filterContextItems, dateDataSet) {\n    return filterContextItems.map((filter) => {\n        if (isDashboardAttributeFilter(filter)) {\n            return dashboardAttributeFilterToAttributeFilter(filter);\n        }\n        else {\n            return dashboardDateFilterToDateFilterByDateDataSet(filter, dateDataSet);\n        }\n    });\n}\nfunction numberOrStringToNumber(input) {\n    return isString(input) ? Number.parseInt(input) : input;\n}\n//# sourceMappingURL=filterConverters.js.map","// (C) 2021-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { newCustomWidget } from \"../../model/types/layoutTypes.js\";\n/**\n * Tests whether an object is a {@link KpiPlaceholderWidget}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isKpiPlaceholderWidget(obj) {\n    return !isEmpty(obj) && obj.customType === \"gd-kpi-placeholder\";\n}\n/**\n * @internal\n */\nexport const KPI_PLACEHOLDER_WIDGET_ID = \"__kpiPlaceholder__\";\n/**\n * @alpha\n */\nexport function newKpiPlaceholderWidget() {\n    return newCustomWidget(KPI_PLACEHOLDER_WIDGET_ID, \"gd-kpi-placeholder\");\n}\n/**\n * Tests whether an object is a {@link InsightPlaceholderWidget}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isInsightPlaceholderWidget(obj) {\n    return !isEmpty(obj) && obj.customType === \"gd-insight-placeholder\";\n}\n/**\n * @internal\n */\nexport const INSIGHT_PLACEHOLDER_WIDGET_ID = \"__insightPlaceholder__\";\n/**\n * @alpha\n */\nexport function newInsightPlaceholderWidget() {\n    return newCustomWidget(INSIGHT_PLACEHOLDER_WIDGET_ID, \"gd-insight-placeholder\");\n}\n/**\n * Tests whether an object is a {@link PlaceholderWidget}.\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isPlaceholderWidget(obj) {\n    return !isEmpty(obj) && obj.customType === \"gd-widget-placeholder\";\n}\n/**\n * Tests whether an object is a {@link PlaceholderWidget} and is initial.\n *\n * @param obj - object to test\n * @internal\n */\nexport function isInitialPlaceholderWidget(obj) {\n    return isPlaceholderWidget(obj) && !!obj.isInitial;\n}\n/**\n * Tests whether an object is a {@link PlaceholderWidget} and is loading.\n *\n * @param obj - object to test\n * @internal\n */\nexport function isLoadingPlaceholderWidget(obj) {\n    return isPlaceholderWidget(obj) && !!obj.isLoading;\n}\n/**\n * @internal\n */\nexport const PLACEHOLDER_WIDGET_ID = \"__placeholder__\";\n/**\n * @alpha\n */\nexport function newPlaceholderWidget() {\n    return newCustomWidget(PLACEHOLDER_WIDGET_ID, \"gd-widget-placeholder\");\n}\n/**\n * @internal\n */\nexport function newInitialPlaceholderWidget() {\n    return newCustomWidget(PLACEHOLDER_WIDGET_ID, \"gd-widget-placeholder\", {\n        isInitial: true,\n    });\n}\n/**\n * @internal\n */\nexport function newLoadingPlaceholderWidget() {\n    return newCustomWidget(PLACEHOLDER_WIDGET_ID, \"gd-widget-placeholder\", {\n        isLoading: true,\n    });\n}\n/**\n * Tests whether an object is any type of placeholder widgets.\n *\n * @param obj - object to test\n * @alpha\n */\nexport function isAnyPlaceholderWidget(obj) {\n    return isPlaceholderWidget(obj) || isInsightPlaceholderWidget(obj) || isKpiPlaceholderWidget(obj);\n}\n//# sourceMappingURL=types.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { objRefToString, isKpiWidget, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { isCustomWidget } from \"../../types/layoutTypes.js\";\nimport { createUndoableCommandsMapping } from \"../_infra/undoEnhancer.js\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nimport { selectFilterContextFilters } from \"../filterContext/filterContextSelectors.js\";\nimport { filterContextItemsToDashboardFiltersByWidget } from \"../../../converters/index.js\";\nimport { createMemoizedSelector } from \"../_infra/selectors.js\";\nimport { isInsightPlaceholderWidget, isKpiPlaceholderWidget, isPlaceholderWidget, } from \"../../../widgets/index.js\";\nimport { isItemWithBaseWidget, getWidgetCoordinates } from \"./layoutUtils.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.layout);\n/**\n * This selector returns current layout's stash. This stash can contain items that were removed from the layout with the\n * intent of further using the item elsewhere on the layout. The stash is a mapping of stashIdentifier to an array\n * of stashed items. The stash identifiers and stash usage is fully under control of the user.\n *\n * @internal\n */\nexport const selectStash = createSelector(selectSelf, (layoutState) => {\n    return layoutState.stash;\n});\n/**\n * This selector returns commands that impacted the layout and can now be undone.\n *\n * @internal\n */\nexport const selectUndoableLayoutCommands = createSelector(selectSelf, (layoutState) => {\n    return createUndoableCommandsMapping(layoutState);\n});\n/**\n * This selector returns dashboard's layout. It is expected that the selector is called only after the layout state\n * is correctly initialized. Invocations before initialization lead to invariant errors.\n *\n * @alpha\n */\nexport const selectLayout = createSelector(selectSelf, (layoutState) => {\n    invariant(layoutState.layout, \"attempting to access uninitialized layout state\");\n    return layoutState.layout;\n});\n/**\n * This selector returns the basic dashboard layout that does not contain any client-side extensions.\n *\n * This selector exists because analytical backend impls are not yet ready to handle persistence of custom\n * widgets (that may have arbitrary payloads). The selector is used only in save and saveAs command handlers,\n * where it obtains the layout without any custom widgets and persists that. Note that the save/saveAs\n * handlers will not wipe the custom widgets from the state during the save - so at this point the custom\n * widgets are treated as client-side extensions.\n *\n * Note: this selector also intentionally removes empty sections; dashboard cannot cope with them and\n * they may readily appear if user adds section full of custom widgets and then does saveAs; such sections\n * would end up empty.\n *\n * @internal\n */\nexport const selectBasicLayout = createSelector(selectLayout, (layout) => {\n    const dashboardLayout = Object.assign(Object.assign({}, layout), { sections: layout.sections\n            .map((section) => {\n            return Object.assign(Object.assign({}, section), { items: section.items.filter(isItemWithBaseWidget) });\n        })\n            .filter((section) => !isEmpty(section.items)) });\n    return dashboardLayout;\n});\n/**\n * Selects dashboard widgets in an obj ref an array. This map will include both analytical and custom\n * widgets that are placed on the dashboard.\n *\n * @internal\n */\nexport const selectWidgets = createSelector(selectLayout, (layout) => {\n    const items = [];\n    for (const section of layout.sections) {\n        for (const item of section.items) {\n            if (!item.widget) {\n                continue;\n            }\n            items.push(item.widget);\n        }\n    }\n    return items;\n});\n/**\n * Selects dashboard widgets in an obj ref to widget map. This map will include both analytical and custom\n * widgets that are placed on the dashboard.\n *\n * @internal\n */\nexport const selectWidgetsMap = createSelector(selectWidgets, (widgets) => {\n    return newMapForObjectWithIdentity(widgets);\n});\n/**\n * Selects widget by its ref (including custom widgets).\n *\n * @remarks\n * To limit the scope only to analytical widgets, use {@link selectAnalyticalWidgetByRef}.\n *\n * @alpha\n */\nexport const selectWidgetByRef = createMemoizedSelector((ref) => createSelector(selectWidgetsMap, (widgetMap) => {\n    if (!ref) {\n        return undefined;\n    }\n    return widgetMap.get(ref);\n}));\n/**\n * Selects analytical widget by its ref. This selector will return undefined if the provided\n * widget ref is for a custom widget.\n *\n * @remarks\n * To include custom widgets as well, use {@link selectWidgetByRef}.\n *\n * @alpha\n */\nexport const selectAnalyticalWidgetByRef = createMemoizedSelector((ref) => createSelector(selectWidgetsMap, (widgetMap) => {\n    if (!ref) {\n        return undefined;\n    }\n    const widget = widgetMap.get(ref);\n    if (!widget || isCustomWidget(widget)) {\n        return undefined;\n    }\n    return widget;\n}));\n/**\n * Selects widget drills by the widget ref.\n *\n * @alpha\n */\nexport const selectWidgetDrills = createMemoizedSelector((ref) => createSelector(selectAnalyticalWidgetByRef(ref), (widget) => { var _a; return (_a = widget === null || widget === void 0 ? void 0 : widget.drills) !== null && _a !== void 0 ? _a : []; }));\n/**\n * Selects all filters from filter context converted to filters specific for a widget specified by a ref.\n *\n * @remarks\n * This does NOT resolve things like ignored filters for a widget, etc.\n *\n * @internal\n */\nexport const selectAllFiltersForWidgetByRef = createMemoizedSelector((ref) => {\n    return createSelector(selectWidgetByRef(ref), selectFilterContextFilters, (widget, dashboardFilters) => {\n        invariant(widget, `widget with ref ${objRefToString(ref)} does not exist in the state`);\n        return filterContextItemsToDashboardFiltersByWidget(dashboardFilters, widget);\n    });\n});\nconst selectAllWidgets = createSelector(selectWidgetsMap, (widgetMap) => {\n    return Array.from(widgetMap.values());\n});\n/**\n * Selects a boolean indicating if the dashboard is empty.\n *\n * @alpha\n */\nexport const selectIsLayoutEmpty = createSelector(selectAllWidgets, (allWidgets) => {\n    return allWidgets.length === 0;\n});\n/**\n * Selects all KPI widgets in the layout.\n *\n * @alpha\n */\nexport const selectAllKpiWidgets = createSelector(selectAllWidgets, (allWidgets) => {\n    return allWidgets.filter(isKpiWidget);\n});\n/**\n * Selects all insight widgets in the layout.\n *\n * @alpha\n */\nexport const selectAllInsightWidgets = createSelector(selectAllWidgets, (allWidgets) => {\n    return allWidgets.filter(isInsightWidget);\n});\n/**\n * Selects all custom widgets in the layout.\n *\n * @alpha\n */\nexport const selectAllCustomWidgets = createSelector(selectAllWidgets, (allWidgets) => {\n    return allWidgets.filter(isCustomWidget);\n});\n/**\n * Selects all non-custom widgets in the layout.\n *\n * @alpha\n */\nexport const selectAllAnalyticalWidgets = createSelector(selectAllWidgets, (allWidgets) => {\n    return allWidgets.filter((w) => !isCustomWidget(w));\n});\n/**\n * Selects a boolean indicating if the dashboard contains at least one non-custom widget.\n *\n * @alpha\n */\nexport const selectLayoutHasAnalyticalWidgets = createSelector(selectAllAnalyticalWidgets, (allAnalyticalWidgets) => {\n    return allAnalyticalWidgets.length > 0;\n});\n/**\n * Selects layout coordinates for a given widget.\n *\n * @alpha\n */\nexport const selectWidgetCoordinatesByRef = createMemoizedSelector((ref) => {\n    return createSelector(selectLayout, (layout) => {\n        const coords = getWidgetCoordinates(layout, ref);\n        invariant(coords, `widget with ref ${objRefToString(ref)} does not exist in the state`);\n        return coords;\n    });\n});\n/**\n * @internal\n */\nexport const selectWidgetPlaceholder = createSelector(selectAllCustomWidgets, (customWidgets) => {\n    return customWidgets.find(isPlaceholderWidget);\n});\n/**\n * @internal\n */\nexport const selectWidgetPlaceholderCoordinates = createSelector(selectWidgetPlaceholder, selectLayout, (widgetPlaceholder, layout) => {\n    return widgetPlaceholder ? getWidgetCoordinates(layout, widgetPlaceholder.ref) : undefined;\n});\n/**\n * @internal\n */\nexport const selectInsightWidgetPlaceholder = createSelector(selectAllCustomWidgets, (customWidgets) => {\n    return customWidgets.find(isInsightPlaceholderWidget);\n});\n/**\n * @internal\n */\nexport const selectInsightWidgetPlaceholderCoordinates = createSelector(selectInsightWidgetPlaceholder, selectLayout, (widgetPlaceholder, layout) => {\n    return widgetPlaceholder ? getWidgetCoordinates(layout, widgetPlaceholder.ref) : undefined;\n});\n/**\n * @internal\n */\nexport const selectKpiWidgetPlaceholder = createSelector(selectAllCustomWidgets, (customWidgets) => {\n    return customWidgets.find(isKpiPlaceholderWidget);\n});\n/**\n * @internal\n */\nexport const selectKpiWidgetPlaceholderCoordinates = createSelector(selectKpiWidgetPlaceholder, selectLayout, (widgetPlaceholder, layout) => {\n    return widgetPlaceholder ? getWidgetCoordinates(layout, widgetPlaceholder.ref) : undefined;\n});\n//# sourceMappingURL=layoutSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nconst selectSelf = createSelector((state) => state, (state) => state.renderMode);\n/**\n * @internal\n */\nexport const selectRenderMode = createSelector(selectSelf, (state) => state.renderMode);\n/**\n * @internal\n */\nexport const selectIsInViewMode = createSelector(selectRenderMode, (renderMode) => renderMode === \"view\");\n/**\n * @internal\n */\nexport const selectIsInEditMode = createSelector(selectRenderMode, (renderMode) => renderMode === \"edit\");\n//# sourceMappingURL=renderModeSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nimport { convertDateFilterConfigToDateFilterOptions } from \"../../../_staging/dateFilterConfig/dateFilterConfigConverters.js\";\nimport { selectIsInEditMode } from \"../renderMode/renderModeSelectors.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.dateFilterConfig);\n/**\n * Returns date filter config that is specified on the loaded dashboard.\n *\n * The dashboard-level date filter configuration MAY contain overrides and additional configuration to apply\n * on top of the workspace-level date filter config. If the dashboard-level overrides are not specified, then\n * the workspace-level config should be taken as-is.\n *\n * @remarks See {@link selectEffectiveDateFilterConfig} - you can use this selector to obtain the effective\n *  date filter config that contains the final config obtained by merging the workspace-level config and the\n *  dashboard-level overrides.\n *\n * @alpha\n */\nexport const selectDateFilterConfigOverrides = createSelector(selectSelf, (dateFilterConfigState) => {\n    var _a;\n    return (_a = dateFilterConfigState.dateFilterConfig) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns effective date filter config. The effective date filter config is created by merging the workspace-level\n * date filter config and the dashboard-level date filter config.\n *\n * This is the configuration that the DateFilter SHOULD use when rendering filtering presets.\n *\n * @alpha\n */\nexport const selectEffectiveDateFilterConfig = createSelector(selectSelf, (dateFilterConfigState) => {\n    invariant(dateFilterConfigState.effectiveDateFilterConfig, \"attempting to access uninitialized date filter config state\");\n    return dateFilterConfigState.effectiveDateFilterConfig;\n});\n/**\n * Returns effective date filter options. This is created by merging the workspace-level\n * date filter config and the dashboard-level date filter config.\n *\n * These are the date filter options that the DateFilter SHOULD use when rendering filtering presets.\n *\n * @alpha\n */\nexport const selectEffectiveDateFilterOptions = createSelector(selectEffectiveDateFilterConfig, (effectiveDateFilterConfig) => convertDateFilterConfigToDateFilterOptions(effectiveDateFilterConfig));\n/**\n * Returns effective date filter options from. This is created by merging the workspace-level\n * date filter config and the dashboard-level date filter config.\n *\n * These are the date filter options that the DateFilter SHOULD use when rendering filtering presets.\n *\n * @alpha\n */\nexport const selectEffectiveDateFilterAvailableGranularities = createSelector(selectEffectiveDateFilterConfig, (effectiveDateFilterConfig) => { var _a, _b; return (_b = (_a = effectiveDateFilterConfig.relativeForm) === null || _a === void 0 ? void 0 : _a.availableGranularities) !== null && _b !== void 0 ? _b : []; });\n/**\n * Indicates whether the effective date filter is using dashboard-level overrides.\n */\nconst effectiveDateFilterConfigIsUsingOverrides = createSelector(selectSelf, (dateFilterConfigState) => {\n    invariant(dateFilterConfigState.isUsingDashboardOverrides !== undefined, \"attempting to access uninitialized date filter config state\");\n    return dateFilterConfigState.isUsingDashboardOverrides;\n});\n/**\n * Returns custom title to use for the date filter. Custom title comes from the dashboard-level date filter config overrides. If no overrides\n * were defined OR the effective date filter config is not using them (because applying them means the final date filter config is invalid),\n * then no custom filter should be used.\n *\n * @alpha\n */\nexport const selectEffectiveDateFilterTitle = createSelector(effectiveDateFilterConfigIsUsingOverrides, selectDateFilterConfigOverrides, (isUsingOverrides, dashboardOverrides) => {\n    if (!isUsingOverrides) {\n        return undefined;\n    }\n    // If this happens then the load command handler does not work correctly - it sets that the overrides are used\n    // while there are none.\n    invariant(dashboardOverrides !== undefined);\n    return dashboardOverrides.filterName;\n});\n/**\n * Returns display mode for the effective date filter. This always comes from the dashboard-level date filter config overrides - regardless whether\n * the rest of the overrides are actually used.\n *\n * @alpha\n */\nexport const selectEffectiveDateFilterMode = createSelector(selectIsInEditMode, selectDateFilterConfigOverrides, (isInEditMode, dashboardOverrides) => {\n    var _a;\n    if (isInEditMode) {\n        return \"active\";\n    }\n    return (_a = dashboardOverrides === null || dashboardOverrides === void 0 ? void 0 : dashboardOverrides.mode) !== null && _a !== void 0 ? _a : \"active\";\n});\n/**\n * Returns the date filter config validation result warnings indicating any problems encountered during the date filter config resolution.\n *\n * @alpha\n */\nexport const selectDateFilterConfigValidationWarnings = createSelector(selectSelf, (dateFilterConfigState) => {\n    var _a;\n    return (_a = dateFilterConfigState.dateFilterConfigValidationWarnings) !== null && _a !== void 0 ? _a : [];\n});\n//# sourceMappingURL=dateFilterConfigSelectors.js.map","import { __rest } from \"tslib\";\n// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { idRef, uriRef, isTempFilterContext, isDashboardDateFilter, isDashboardAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport isUndefined from \"lodash/isUndefined.js\";\nimport { selectBasicLayout } from \"../layout/layoutSelectors.js\";\nimport { selectFilterContextAttributeFilters, selectFilterContextDateFilter, selectFilterContextDefinition, selectFilterContextIdentity, } from \"../filterContext/filterContextSelectors.js\";\nimport { isDashboardLayoutEmpty } from \"@gooddata/sdk-backend-spi\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { selectDateFilterConfigOverrides } from \"../dateFilterConfig/dateFilterConfigSelectors.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.meta);\n/**\n * Selects dashboard's descriptor.\n *\n * @internal\n */\nexport const selectDashboardDescriptor = createSelector(selectSelf, (state) => {\n    invariant(state.descriptor, \"attempting to access uninitialized meta state\");\n    return state.descriptor;\n});\n/**\n * Selects persisted IDashboard object - that is the IDashboard object that was used to initialize the rest\n * of the dashboard state of the dashboard component during the initial load of the dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n *\n * @internal\n */\nexport const selectPersistedDashboard = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.persistedDashboard) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Selects persisted IFilterContext/ITempFilterContext - that is the IFilterContext or ITempFilterContext that\n * was used to initialize the original filters of the dashboard component during the initial load of the\n * dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nexport const selectPersistedDashboardFilterContext = createSelector(selectSelf, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.persistedDashboard) === null || _a === void 0 ? void 0 : _a.filterContext) !== null && _b !== void 0 ? _b : undefined;\n});\n/**\n * Selects persisted IFilterContextDefinition - that is the IFilterContext or ITempFilterContext that\n * was used to initialize the original filters of the dashboard component during the initial load of the\n * dashboard but removes ref, uri and identifier, effectively creating a clone of the stored value\n * that can be used independently.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nexport const selectPersistedDashboardFilterContextAsFilterContextDefinition = createSelector(selectPersistedDashboardFilterContext, (filterContext) => {\n    if (!filterContext) {\n        return undefined;\n    }\n    if (isTempFilterContext(filterContext)) {\n        const { ref: _, uri: __ } = filterContext, definition = __rest(filterContext, [\"ref\", \"uri\"]);\n        return Object.assign(Object.assign({}, definition), { title: \"filterContext\", description: \"\" });\n    }\n    else {\n        const { identifier: _, ref: __, uri: ___ } = filterContext, definition = __rest(filterContext, [\"identifier\", \"ref\", \"uri\"]);\n        return definition;\n    }\n});\n/**\n * Selects ref of the persisted dashboard object that backs and is rendered-by the dashboard component.\n *\n * @remarks\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n *\n * @public\n */\nexport const selectDashboardRef = createSelector(selectPersistedDashboard, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.ref) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Selects identifier of the persisted dashboard object that backs and is rendered-by the dashboard component.\n *\n * @remarks\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n *\n * @public\n */\nexport const selectDashboardId = createSelector(selectPersistedDashboard, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.identifier) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Selects URI of the persisted dashboard object that backs and is rendered-by the dashboard component.\n *\n * @remarks\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n *\n * @public\n */\nexport const selectDashboardUri = createSelector(selectPersistedDashboard, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.uri) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Selects idRef of the persisted dashboard object that backs and is rendered-by the dashboard component.\n *\n * @remarks\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n *\n * @public\n */\nexport const selectDashboardIdRef = createSelector(selectDashboardId, (id) => {\n    return id ? idRef(id, \"analyticalDashboard\") : undefined;\n});\n/**\n * Selects uriRef of the persisted dashboard object that backs and is rendered-by the dashboard component.\n *\n * @remarks\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n *\n * @public\n */\nexport const selectDashboardUriRef = createSelector(selectDashboardUri, (uri) => {\n    return uri ? uriRef(uri) : undefined;\n});\n/**\n * Selects a boolean indication if dashboard is new\n *\n * @internal\n */\nexport const selectIsNewDashboard = createSelector(selectDashboardRef, isUndefined);\n//\n//\n//\n/**\n * Selects current dashboard title.\n *\n * @public\n */\nexport const selectDashboardTitle = createSelector(selectDashboardDescriptor, (state) => {\n    return state.title;\n});\n/**\n * Selects current dashboard description.\n *\n * @public\n */\nexport const selectDashboardDescription = createSelector(selectDashboardDescriptor, (state) => {\n    return state.description;\n});\n/**\n * Selects dashboard tags.\n *\n * @public\n */\nexport const selectDashboardTags = createSelector(selectDashboardDescriptor, (state) => {\n    var _a;\n    return (_a = state.tags) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * Selects dashboard share status.\n *\n * @alpha\n */\nexport const selectDashboardShareStatus = createSelector(selectDashboardDescriptor, (state) => {\n    return state.shareStatus;\n});\n/**\n * Returns whether dashboard is private.\n *\n * @alpha\n */\nexport const selectIsDashboardPrivate = createSelector(selectDashboardShareStatus, (status) => {\n    return status === \"private\";\n});\n/**\n * Selects dashboard lock status.\n *\n * @alpha\n */\nexport const selectDashboardLockStatus = createSelector(selectDashboardDescriptor, (state) => {\n    var _a;\n    return (_a = state.isLocked) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Selects complete dashboard share info.\n *\n * @alpha\n */\nexport const selectDashboardShareInfo = createSelector(selectDashboardDescriptor, ({ shareStatus, isLocked }) => ({\n    shareStatus,\n    isLocked,\n}));\n//\n//\n//\n/**\n * Selects persisted FilterContextItems - that is the FilterContextItems that were used to initialize\n * the original filters of the dashboard component during the initial load of the dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nconst selectPersistedDashboardFilterContextFilters = createSelector(selectPersistedDashboardFilterContext, (persistedFilterContext) => {\n    return persistedFilterContext === null || persistedFilterContext === void 0 ? void 0 : persistedFilterContext.filters;\n});\n/**\n * Selects persisted IDashboardDateFilter - that is the IDashboardDateFilter that were used to initialize\n * the original filters of the dashboard component during the initial load of the dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nconst selectPersistedDashboardFilterContextDateFilter = createSelector(selectPersistedDashboardFilterContextFilters, (persistedFilters) => {\n    return (persistedFilters !== null && persistedFilters !== void 0 ? persistedFilters : []).find(isDashboardDateFilter);\n});\n/**\n * Selects persisted IDashboardAttributeFilters - that is the IDashboardAttributeFilters that were used to initialize\n * the original filters of the dashboard component during the initial load of the dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nconst selectPersistedDashboardFilterContextAttributeFilters = createSelector(selectPersistedDashboardFilterContextFilters, (persistedFilters) => {\n    return (persistedFilters !== null && persistedFilters !== void 0 ? persistedFilters : []).filter(isDashboardAttributeFilter);\n});\n/**\n * Selects persisted title - that is the title that was used to initialize the rest\n * of the dashboard state of the dashboard component during the initial load of the dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nconst selectPersistedDashboardTitle = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.persistedDashboard) === null || _a === void 0 ? void 0 : _a.title;\n});\n/**\n * Selects persisted layout - that is the IDashboardLayout object that was used to initialize the rest\n * of the dashboard state of the dashboard component during the initial load of the dashboard.\n *\n * Note that this may be undefined when the dashboard component works with a dashboard that has not yet\n * been persisted (typically newly created dashboard being edited).\n */\nconst selectPersistedDashboardLayout = createSelector(selectSelf, (state) => {\n    var _a;\n    return (_a = state.persistedDashboard) === null || _a === void 0 ? void 0 : _a.layout;\n});\n/**\n * Selects a boolean indication if he dashboard has any changes to the dashboard filter compared to the persisted version (if any)\n *\n * @internal\n */\nexport const selectIsDateFilterChanged = createSelector(selectPersistedDashboardFilterContextDateFilter, selectFilterContextDateFilter, (persistedDateFilter, currentDateFilter) => {\n    return !isEqual(persistedDateFilter, currentDateFilter);\n});\n/**\n * Selects a boolean indication if he dashboard has any changes to the attribute filters compared to the persisted version (if any)\n *\n * @internal\n */\nexport const selectIsAttributeFiltersChanged = createSelector(selectPersistedDashboardFilterContextAttributeFilters, selectFilterContextAttributeFilters, (persistedAttributeFilters, currentAttributeFilters) => {\n    return !isEqual(persistedAttributeFilters, currentAttributeFilters);\n});\n/**\n * Selects a boolean indication if he dashboard has any changes to the any of the filters compared to the persisted version (if any)\n *\n * @internal\n */\nexport const selectIsFiltersChanged = createSelector(selectIsDateFilterChanged, selectIsAttributeFiltersChanged, (isDateFilterChanged, isAttributeFiltersChanged) => {\n    return isDateFilterChanged || isAttributeFiltersChanged;\n});\n/**\n * Selects a boolean indication if he dashboard has any changes to the title compared to the persisted version (if any)\n *\n * @internal\n */\nexport const selectIsTitleChanged = createSelector(selectPersistedDashboardTitle, selectDashboardTitle, (persistedTitle, currentTitle) => {\n    return currentTitle !== persistedTitle;\n});\n/**\n * Selects a boolean indication if he dashboard has any changes to the layout compared to the persisted version (if any)\n *\n * @internal\n */\nexport const selectIsLayoutChanged = createSelector(selectPersistedDashboardLayout, selectBasicLayout, (persistedLayout, currentLayout) => {\n    return !isEqual(currentLayout, persistedLayout);\n});\n/**\n * Selects a boolean indication if he dashboard has any changes compared to the persisted version (if any)\n *\n * @internal\n */\nexport const selectIsDashboardDirty = createSelector(selectIsNewDashboard, selectBasicLayout, selectIsFiltersChanged, selectIsTitleChanged, selectIsLayoutChanged, (isNew, layout, isFiltersChanged, isTitleChanged, isLayoutChanged) => {\n    if (isNew) {\n        return !isDashboardLayoutEmpty(layout);\n    }\n    return [isFiltersChanged, isTitleChanged, isLayoutChanged].some(Boolean);\n});\n/**\n * @internal\n */\nexport const selectDashboardWorkingDefinition = createSelector(selectPersistedDashboard, selectDashboardDescriptor, selectFilterContextDefinition, selectFilterContextIdentity, selectBasicLayout, selectDateFilterConfigOverrides, (persistedDashboard, dashboardDescriptor, filterContextDefinition, filterContextIdentity, layout, dateFilterConfig) => {\n    const dashboardIdentity = {\n        ref: persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.ref,\n        uri: persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.uri,\n        identifier: persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.identifier,\n    };\n    const pluginsProp = (persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.plugins) ? { plugins: persistedDashboard.plugins } : {};\n    return Object.assign(Object.assign(Object.assign(Object.assign({ type: \"IDashboard\" }, dashboardDescriptor), dashboardIdentity), { filterContext: Object.assign(Object.assign({}, filterContextIdentity), filterContextDefinition), layout,\n        dateFilterConfig }), pluginsProp);\n});\n//# sourceMappingURL=metaSelectors.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isCustomWidgetDefinition, } from \"../types/layoutTypes.js\";\nimport { idRef, isKpiWidgetDefinition, isInsightWidgetDefinition, isInsightWidget, isDashboardLayoutItem, } from \"@gooddata/sdk-model\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport function extractInsightRefsFromItems(items) {\n    const result = [];\n    items.forEach((item) => {\n        if (isInsightWidget(item.widget)) {\n            result.push(item.widget.insight);\n        }\n    });\n    return result;\n}\nconst TemporaryIdentityPrefix = \"@@GDC.DASH.TEMP\";\nfunction generateTemporaryIdentityForWidget() {\n    const id = `${TemporaryIdentityPrefix}-${uuidv4()}`;\n    return {\n        ref: idRef(id),\n        identifier: id,\n        uri: id,\n    };\n}\n/**\n * Tests whether the provided object is/has a temporary identity. A temporary identity is used for those\n * objects which are not yet persisted however need to be reference-able from the dashboard itself.\n *\n * @param obj - object to test\n * @internal\n */\nexport function isTemporaryIdentity(obj) {\n    return obj.identifier.startsWith(TemporaryIdentityPrefix);\n}\n/**\n * Adds temporary identity to all insight and KPI widget definitions found within the provided dashboard item\n * definitions.\n *\n * Having an identity for each widget is important for the dashboard; many places both internal and through\n * public API for different use-cases rely on identification of widget by reference.\n *\n * This function will map the input items so that the result never contains bare insight widget definitions\n * or kpi widget definitions (which do not have the identity).\n *\n * The identity assigned to those widgets is temporary one. It is a specially formatted identifier combined\n * with UUID. You can use {@link isTemporaryIdentity} function to test whether object has temporary\n * identity. When the dashboard gets saved, this temporary identity will change to permanent one that\n * will be assigned by the backend.\n *\n * @param items - items to map, will not be modified\n * @returns new array with the necessary items mapped to widgets with temporary identity.\n * @internal\n */\nexport function addTemporaryIdentityToWidgets(items) {\n    return items.map((item) => {\n        if (!isDashboardLayoutItem(item)) {\n            return item;\n        }\n        if (isInsightWidgetDefinition(item.widget) ||\n            isKpiWidgetDefinition(item.widget) ||\n            isCustomWidgetDefinition(item.widget)) {\n            const temporaryIdentity = generateTemporaryIdentityForWidget();\n            return Object.assign(Object.assign({}, item), { widget: Object.assign(Object.assign({}, item.widget), temporaryIdentity) });\n        }\n        return item;\n    });\n}\n//# sourceMappingURL=dashboardItemUtils.js.map","import { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.config);\n/**\n * Returns dashboard's config.\n *\n * @remarks\n * It is expected that the selector is called only after the config state\n * is correctly initialized. Invocations before initialization lead to invariant errors.\n *\n * @public\n */\nexport const selectConfig = createSelector(selectSelf, (configState) => {\n    invariant(configState.config, \"attempting to access uninitialized config state\");\n    return configState.config;\n});\n/**\n * Returns workspace-level configuration for the of the date filter options and presets.\n *\n * @remarks\n * Note: this configuration SHOULD be further augmented by the dashboard-level overrides to obtain\n * the effective date filter configuration.\n *\n * @public\n */\nexport const selectDateFilterConfig = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.dateFilterConfig) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns settings that are in effect for the current dashboard.\n *\n * @public\n */\nexport const selectSettings = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.settings) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns locale to use for internationalization of the dashboard.\n *\n * @public\n */\nexport const selectLocale = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.locale) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns number separators to use when rendering numeric values on charts or KPIs.\n *\n * @public\n */\nexport const selectSeparators = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.separators) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns the color palette for dashboard charts.\n *\n * @public\n */\nexport const selectColorPalette = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.colorPalette) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns the object availability configuration for this dashboard.\n *\n * @remarks\n * Only objects that match the availability criteria can appear in selections where user has pick\n * an object to use for some purpose (for instance metric for KPI or date dataset to filter by).\n *\n * @public\n */\nexport const selectObjectAvailabilityConfig = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.objectAvailability) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns Mapbox token.\n *\n * @internal\n */\nexport const selectMapboxToken = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.mapboxToken) !== null && _a !== void 0 ? _a : undefined;\n});\n/**\n * Returns week start day\n *\n * @internal\n */\nexport const selectWeekStart = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    if (state.settings == null) {\n        return \"Sunday\";\n    }\n    if (state.settings.enableNewUIWeekStartChange && state.settings.weekStartOnMondayEnabled) {\n        return \"Monday\";\n    }\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.weekStart) !== null && _b !== void 0 ? _b : \"Sunday\";\n});\n/**\n * Returns whether the Dashboard is executed in read-only mode.\n *\n * @remarks\n * Read-only mode disables any interactions that can alter the backend data.\n *\n * @public\n */\nexport const selectIsReadOnly = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.isReadOnly) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the Dashboard is executed in embedded context.\n *\n * @remarks\n * In embedded mode, some interactions may be disabled.\n *\n * @public\n */\nexport const selectIsEmbedded = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.isEmbedded) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the Dashboard is rendered in the export mode.\n * In export mode, some components can be hidden, or rendered differently.\n *\n * @public\n */\nexport const selectIsExport = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.isExport) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the Dashboard is white labeled.\n *\n * @internal\n */\nexport const selectIsWhiteLabeled = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.isWhiteLabeled) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the default drills configured on the widgets or implicit drills (eg. drill down) are disabled.\n * This option does not affect drilling enabled by drillableItems.\n *\n * @public\n */\nexport const selectDisableDefaultDrills = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.disableDefaultDrills) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether filter values in drill events should be resolved.\n *\n * @public\n */\nexport const selectEnableFilterValuesResolutionInDrillEvents = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.enableFilterValuesResolutionInDrillEvents) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the save as new button is hidden.\n *\n * @internal\n */\nexport const selectIsSaveAsNewButtonHidden = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.hideSaveAsNewButton) !== null && _a !== void 0 ? _a : false;\n});\n//\n// FEATURE FLAGS\n//\n/**\n * Returns date format.\n *\n * @public\n */\nexport const selectDateFormat = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.responsiveUiDateFormat) !== null && _b !== void 0 ? _b : undefined;\n});\n/**\n * Returns whether the current user can schedule emails.\n *\n * @public\n */\nexport const selectEnableKPIDashboardSchedule = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardSchedule) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether the current user can share scheduled email to other recipients.\n *\n * @public\n */\nexport const selectEnableKPIDashboardScheduleRecipients = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardScheduleRecipients) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns current platform edition.\n *\n * @public\n */\nexport const selectPlatformEdition = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.platformEdition) !== null && _b !== void 0 ? _b : \"enterprise\";\n});\n/**\n * Returns whether company logo should be visible in embedded dashboard.\n *\n * @public\n */\nexport const selectEnableCompanyLogoInEmbeddedUI = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableCompanyLogoInEmbeddedUI) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether the export to pdf is enabled.\n *\n * @public\n */\nexport const selectEnableKPIDashboardExportPDF = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardExportPDF) !== null && _b !== void 0 ? _b : true;\n});\n/**\n * Returns whether the drill to dashboard is enabled.\n *\n * @public\n */\nexport const selectEnableKPIDashboardDrillToDashboard = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardDrillToDashboard) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether the save as new dashboard functionality is enabled.\n *\n * @public\n */\nexport const selectEnableKPIDashboardSaveAsNew = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardSaveAsNew) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether implicit drill to attributes url enabled\n *\n * @public\n */\nexport const selectEnableClickableAttributeURL = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableClickableAttributeURL) !== null && _b !== void 0 ? _b : true;\n});\n/**\n * Returns whether drill to url is enabled\n *\n * @public\n */\nexport const selectEnableKPIDashboardDrillToURL = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardDrillToURL) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether drill to insight is enabled\n *\n * @public\n */\nexport const selectEnableKPIDashboardDrillToInsight = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardDrillToInsight) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether implicit drill to attributes url enabled\n *\n * @public\n */\nexport const selectEnableKPIDashboardImplicitDrillDown = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardImplicitDrillDown) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether drill fromAttribute is enabled\n *\n * @public\n */\nexport const selectEnableKPIDashboardDrillFromAttribute = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardDrillFromAttribute) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether Kpi drills in embedded mode are disabled.\n *\n * @public\n */\nexport const selectHideKpiDrillInEmbedded = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.hideKpiDrillInEmbedded) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether insight export scheduling is enabled.\n *\n * @public\n */\nexport const selectEnableInsightExportScheduling = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableInsightExportScheduling) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether analytical dashboard permissions are enabled\n *\n * @internal\n */\nexport const selectEnableAnalyticalDashboardPermissions = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableAnalyticalDashboardPermissions) !== null && _b !== void 0 ? _b : true;\n});\n/**\n * Returns whether custom widget heights are enabled\n *\n * @internal\n */\nexport const selectEnableWidgetCustomHeight = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKDWidgetCustomHeight) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether we should call workspaces workspaces (true) or projects (false).\n *\n * @internal\n */\nexport const selectEnableRenamingProjectToWorkspace = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return !!((_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableRenamingProjectToWorkspace) !== null && _b !== void 0 ? _b : true);\n});\n/**\n * Returns whether we should call measures metrics (true) or measures (false).\n *\n * @internal\n */\nexport const selectEnableRenamingMeasureToMetric = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return !!((_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableRenamingMeasureToMetric) !== null && _b !== void 0 ? _b : false);\n});\n/**\n * Returns whether we should hide the pixel perfect experience references.\n *\n * @internal\n */\nexport const selectShouldHidePixelPerfectExperience = createSelector(selectConfig, (state) => {\n    var _a, _b, _c, _d;\n    const isHidden = (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.hidePixelPerfectExperience) !== null && _b !== void 0 ? _b : true;\n    const isEnabled = (_d = (_c = state.settings) === null || _c === void 0 ? void 0 : _c.enablePixelPerfectExperience) !== null && _d !== void 0 ? _d : false;\n    return !isHidden && isEnabled;\n});\n/**\n * Returns whether we should disable the underline in KPIs when they are drillable.\n *\n * @internal\n */\nexport const selectDisableKpiDashboardHeadlineUnderline = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return !!((_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.disableKpiDashboardHeadlineUnderline) !== null && _b !== void 0 ? _b : false);\n});\n/**\n * Returns whether unfinished features are allowed.\n *\n * @internal\n */\nexport const selectAllowUnfinishedFeatures = createSelector(selectConfig, (state) => state.allowUnfinishedFeatures || false);\n/**\n * Returns whether creating new insight from dashboard is enabled.\n *\n * @internal\n */\nexport const selectAllowCreateInsightRequest = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.allowCreateInsightRequest) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether analytical designer is enabled.\n *\n * @internal\n */\nexport const selectIsAnalyticalDesignerEnabled = createSelector(selectConfig, (state) => { var _a; return !!(((_a = state.settings) === null || _a === void 0 ? void 0 : _a.analyticalDesigner) || false); });\n/**\n * Returns whether delete button in dashboard attribute filters is visible.\n *\n * @internal\n */\nexport const selectIsDeleteFilterButtonEnabled = createSelector(selectConfig, (state) => { var _a; return !!(((_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardDeleteFilterButton) || false); });\n/**\n * Returns whether dependent filters are enabled.\n *\n * @internal\n */\nexport const selectIsKPIDashboardDependentFiltersEnabled = createSelector(selectConfig, (state) => { var _a; return !!(((_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableKPIDashboardDependentFilters) || false); });\n/**\n * Returns whether choice of alternate display forms is enabled.\n *\n * @internal\n */\nexport const selectIsAlternativeDisplayFormSelectionEnabled = createSelector(selectConfig, (state) => { var _a; return !!(((_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableAlternativeDisplayFormSelection) || false); });\n/**\n * Returns whether share button is hidden.\n *\n * @internal\n */\nexport const selectIsShareButtonHidden = createSelector(selectConfig, (state) => {\n    var _a;\n    return (_a = state.hideShareButton) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether attribute hierarchies are enabled.\n *\n * @internal\n */\nexport const selectEnableAttributeHierarchies = createSelector(selectConfig, (state) => {\n    var _a, _b;\n    return (_b = (_a = state.settings) === null || _a === void 0 ? void 0 : _a.enableAttributeHierarchies) !== null && _b !== void 0 ? _b : false;\n});\n/**\n * Returns whether drill down is enabled.\n *\n * On Bear, drill down is driven by isKPIDashboardImplicitDrillDown.\n * On Tiger, it is driven by attribute hierarchies, thus isAttribueHierarchiesEnabled.\n *\n * @internal\n */\nexport const selectIsDrillDownEnabled = createSelector(selectEnableKPIDashboardImplicitDrillDown, selectEnableAttributeHierarchies, (isKPIDashboardImplicitDrillDownEnabled, isAttribueHierarchiesEnabled) => {\n    return isKPIDashboardImplicitDrillDownEnabled || isAttribueHierarchiesEnabled;\n});\n//# sourceMappingURL=configSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { insightsAdapter } from \"./insightsEntityAdapter.js\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { insightRef } from \"@gooddata/sdk-model\";\nimport { newInsightMap } from \"../../../_staging/metadata/objRefMap.js\";\nimport { selectBackendCapabilities } from \"../backendCapabilities/backendCapabilitiesSelectors.js\";\nimport { createMemoizedSelector } from \"../_infra/selectors.js\";\nconst entitySelectors = insightsAdapter.getSelectors((state) => state.insights);\n/**\n * Selects all insights used on the dashboard.\n *\n * @remarks\n * Note: if you are aiming to lookup insights using an ObjRef, then you should instead use the map returned\n * by {@link selectInsightsMap}. If you are aiming to lookup a single insight by its ref, use {@link selectInsightByRef}.\n * Using these selectors is both faster and safer as they take ObjRef type into account and look up the insight\n * depending on the type of the ref.\n *\n * See {@link selectInsightsMap} or {@link selectInsightByRef} for a faster and safer ways to get\n * an insight by its ObjRef.\n * @public\n */\nexport const selectInsights = entitySelectors.selectAll;\n/**\n * Selects refs of all insights used on the dashboard.\n *\n * @alpha\n */\nexport const selectInsightRefs = createSelector(selectInsights, (insights) => {\n    return insights.map(insightRef);\n});\n/**\n * Selects all insights and returns them in a mapping of obj ref to the insight object.\n *\n * @alpha\n */\nexport const selectInsightsMap = createSelector(selectInsights, selectBackendCapabilities, (insights, capabilities) => {\n    return newInsightMap(insights, capabilities.hasTypeScopedIdentifiers);\n});\n/**\n * Selects insight used on a dashboard by its ref.\n *\n * @alpha\n */\nexport const selectInsightByRef = createMemoizedSelector((ref) => {\n    return createSelector(selectInsightsMap, (insights) => {\n        return ref && insights.get(ref);\n    });\n});\n//# sourceMappingURL=insightsSelectors.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isInsight, isObjRef } from \"@gooddata/sdk-model\";\nimport { call, select } from \"redux-saga/effects\";\nimport { selectInsightsMap } from \"../store/insights/insightsSelectors.js\";\nimport { newInsightMap } from \"../../_staging/metadata/objRefMap.js\";\nasync function loadInsightsFromBackend(ctx, insightRefs) {\n    const { backend, workspace } = ctx;\n    const result = await Promise.all(insightRefs.map((ref) => backend\n        .workspace(workspace)\n        .insights()\n        .getInsight(ref)\n        .catch((_) => ref)));\n    return {\n        loaded: result.filter(isInsight),\n        missing: result.filter(isObjRef),\n    };\n}\n/**\n * Given a list of insight ObjRefs, this generator will resolve those refs to actual IInsight objects. The resolution\n * is done from two sources: first the insights already stored in the lazily-populated insight slice, second, as a fallback\n * the actual analytical backend.\n *\n * @param ctx - dashboard context in which the resolution is done\n * @param insightRefs - refs of insights to resolve to IInsight\n */\nexport function* resolveInsights(ctx, insightRefs) {\n    const alreadyLoadedInsights = yield select(selectInsightsMap);\n    const foundInsights = [];\n    const missingInsightRefs = [];\n    insightRefs.forEach((ref) => {\n        const insight = alreadyLoadedInsights.get(ref);\n        if (insight) {\n            foundInsights.push(insight);\n        }\n        else {\n            missingInsightRefs.push(ref);\n        }\n    });\n    const loadResult = yield call(loadInsightsFromBackend, ctx, missingInsightRefs);\n    return {\n        resolved: newInsightMap([...foundInsights, ...loadResult.loaded]),\n        loaded: loadResult.loaded,\n        missing: loadResult.missing,\n    };\n}\n//# sourceMappingURL=insightResolver.js.map","import { selectPersistedDashboard } from \"../../store/meta/metaSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { dashboardWasReset } from \"../../events/dashboard.js\";\nimport { selectEffectiveDateFilterConfig } from \"../../store/dateFilterConfig/dateFilterConfigSelectors.js\";\nimport { selectDateFilterConfig, selectSettings } from \"../../store/config/configSelectors.js\";\nimport { actionsToInitializeExistingDashboard, actionsToInitializeNewDashboard, } from \"./common/stateInitializers.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport uniqWith from \"lodash/uniqWith.js\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { resolveInsights } from \"../../utils/insightResolver.js\";\nimport { insightReferences } from \"./common/insightReferences.js\";\nexport function* resetDashboardHandler(ctx, cmd) {\n    const data = yield call(resetDashboardFromPersisted, ctx);\n    yield put(batchActions(data.batch, \"@@GDC.DASH/RESET\"));\n    return dashboardWasReset(ctx, data.persistedDashboard, cmd.correlationId);\n}\nexport function* resetDashboardRuntime(ctx, cmd) {\n    const data = yield call(resetDashboardFromPersisted, ctx);\n    return {\n        batch: batchActions(data.batch, \"@@GDC.DASH/RESET\"),\n        reset: dashboardWasReset(ctx, data.persistedDashboard, cmd.correlationId),\n    };\n}\nfunction* resetDashboardFromPersisted(ctx) {\n    const persistedDashboard = yield select(selectPersistedDashboard);\n    let batch = [];\n    if (persistedDashboard) {\n        /*\n         * For dashboard that is already persisted the insights and effective date filter config can be used\n         * as is (date filter config is read-only).\n         *\n         * The only exception is the insights: thanks to the Reload button in plugins, the dashboard could have been\n         * reloaded with a different set of insights, so when resetting, we need to make sure that we still have all\n         * the insights needed for the original dashboard shape.\n         *\n         * The call to create actions to initialize existing dashboard will use all this to set state\n         * of filter context, layout and meta based on the contents of persisted dashboard; this is the\n         * same logic as what is done during the initialization of the dashboard based on data from backend.\n         *\n         * Everything else can stay untouched.\n         */\n        const insightRefsFromWidgets = insightReferences(persistedDashboard.layout);\n        const uniqueInsightRefsFromWidgets = uniqWith(insightRefsFromWidgets, areObjRefsEqual);\n        const resolvedInsights = yield call(resolveInsights, ctx, uniqueInsightRefsFromWidgets);\n        const settings = yield select(selectSettings);\n        const effectiveConfig = yield select(selectEffectiveDateFilterConfig);\n        const resolvedInsightsValues = Array(...resolvedInsights.resolved.values());\n        batch = yield call(actionsToInitializeExistingDashboard, ctx, persistedDashboard, resolvedInsightsValues, settings, effectiveConfig);\n    }\n    else {\n        /*\n         * For dashboard that is not persisted, the dashboard component is reset to an 'empty' state.\n         */\n        const dateFilterConfig = yield select(selectDateFilterConfig);\n        batch = actionsToInitializeNewDashboard(dateFilterConfig);\n    }\n    return {\n        batch,\n        persistedDashboard,\n    };\n}\n//# sourceMappingURL=resetDashboardHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { isInsightWidget, isDrillToInsight } from \"@gooddata/sdk-model\";\nimport { walkLayout } from \"@gooddata/sdk-backend-spi\";\nexport function insightReferences(layout) {\n    const insightRefsFromWidgets = [];\n    if (layout) {\n        walkLayout(layout, {\n            widgetCallback: (widget) => {\n                if (isInsightWidget(widget)) {\n                    insightRefsFromWidgets.push(widget.insight);\n                    widget.drills.forEach((drill) => {\n                        if (isDrillToInsight(drill)) {\n                            insightRefsFromWidgets.push(drill.target);\n                        }\n                    });\n                }\n            },\n        });\n    }\n    return insightRefsFromWidgets;\n}\n//# sourceMappingURL=insightReferences.js.map","// (C) 2021 GoodData Corporation\n/**\n * Returns combine guard from input guards as a result type is union type of guarded types\n * Its good for array filtering base on multiple guards and its return correct result union type\n *\n * @internal\n */\nexport function combineGuards(...guards) {\n    return ((x) => (x ? guards.some((f) => f(x)) : false));\n}\n//# sourceMappingURL=typesUtils.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isDrillFromAttribute, areObjRefsEqual, } from \"@gooddata/sdk-model\";\nimport { getLocalIdentifierOrDie, getValidDrillOriginAttributes, } from \"../../../_staging/drills/drillingUtils.js\";\nexport function isDisplayFormRelevantToDrill(drillDefinition, availableDrillTargets, displayForm) {\n    var _a, _b;\n    const attributeRef = isDrillFromAttribute(drillDefinition.origin)\n        ? (_a = drillDefinition.origin) === null || _a === void 0 ? void 0 : _a.attribute\n        : (_b = drillDefinition.origin) === null || _b === void 0 ? void 0 : _b.measure;\n    const localId = getLocalIdentifierOrDie(attributeRef);\n    const relevantAttributes = getValidDrillOriginAttributes(availableDrillTargets, localId);\n    return relevantAttributes.some((attribute) => areObjRefsEqual(displayForm.attribute, attribute.attributeHeader.formOf));\n}\n//# sourceMappingURL=isDisplayFormRelevantToDrill.js.map","// (C) 2021-2023 GoodData Corporation\nimport flatMap from \"lodash/flatMap.js\";\nimport { idRef, objRefToString, isDrillFromAttribute, isDrillFromMeasure, isDrillToAttributeUrl, isDrillToCustomUrl, isDrillToDashboard, isDrillToInsight, } from \"@gooddata/sdk-model\";\nimport { typesUtils } from \"@gooddata/util\";\nimport { getAttributeIdentifiersPlaceholdersFromUrl, getDrillOriginLocalIdentifier, getLocalIdentifierOrDie, } from \"../../../../_staging/drills/drillingUtils.js\";\nimport { isDisplayFormRelevantToDrill } from \"../../common/isDisplayFormRelevantToDrill.js\";\nexport function validateDrillDefinitionOrigin(drillDefinition, drillTargets) {\n    const { origin } = drillDefinition;\n    if (isDrillFromMeasure(origin)) {\n        const originMeasureIdentifier = getDrillOriginLocalIdentifier(drillDefinition);\n        const measureItems = drillTargets.measures || [];\n        const measureIsValidTarget = measureItems.some((i) => i.measure.measureHeaderItem.localIdentifier === originMeasureIdentifier);\n        if (!measureIsValidTarget) {\n            throw new Error(\"InsightDrillDefinition origin is not valid measure drillTarget\");\n        }\n    }\n    if (isDrillFromAttribute(origin)) {\n        const originAttributeIdentifier = getDrillOriginLocalIdentifier(drillDefinition);\n        const attributeItems = drillTargets.attributes || [];\n        const attributeIsValidTarget = attributeItems.some((i) => i.attribute.attributeHeader.localIdentifier === originAttributeIdentifier);\n        if (!attributeIsValidTarget) {\n            throw new Error(\"InsightDrillDefinition origin is not valid attribute drillTarget\");\n        }\n    }\n    return drillDefinition;\n}\nexport function existsDrillDefinitionInArray(drillDefinition, drillDefinitionArray = []) {\n    const drillId = getDrillOriginLocalIdentifier(drillDefinition);\n    return drillDefinitionArray.some((x) => {\n        return drillId === getDrillOriginLocalIdentifier(x);\n    });\n}\nexport function getDrillDefinitionFromArray(drillDefinition, drillDefinitionArray = []) {\n    const drillId = getDrillOriginLocalIdentifier(drillDefinition);\n    return drillDefinitionArray.find((x) => {\n        return drillId === getDrillOriginLocalIdentifier(x);\n    });\n}\nexport function validateDrillDefinitionByLocalIdentifier(ref, drillDefinitionArray = []) {\n    const localIdentifier = getLocalIdentifierOrDie(ref);\n    const result = drillDefinitionArray.find((item) => {\n        return localIdentifier === getDrillOriginLocalIdentifier(item);\n    });\n    if (!result) {\n        throw new Error(\"Cannot find drill definition specified by local identifier\");\n    }\n    return result;\n}\nexport function extractInsightRefs(items) {\n    return items.filter(isDrillToInsight).map((item) => item.target);\n}\nexport function extractDisplayFormIdentifiers(drillDefinitions) {\n    return flatMap(drillDefinitions\n        .filter(typesUtils.combineGuards(isDrillToCustomUrl, isDrillToAttributeUrl))\n        .map((drillItem) => {\n        if (isDrillToCustomUrl(drillItem)) {\n            const params = getAttributeIdentifiersPlaceholdersFromUrl(drillItem.target.url);\n            // normalize ref take the value from state ...\n            // md object has to be identifier\n            return params.map((param) => idRef(param.identifier, \"displayForm\"));\n        }\n        else {\n            return [drillItem.target.displayForm, drillItem.target.hyperlinkDisplayForm];\n        }\n    }));\n}\nexport function validateInsightDrillDefinition(drillDefinition, validationContext) {\n    if (isDrillToDashboard(drillDefinition)) {\n        return validateDrillToDashboardDefinition(drillDefinition, validationContext);\n    }\n    if (isDrillToInsight(drillDefinition)) {\n        return validateDrillToInsightDefinition(drillDefinition, validationContext);\n    }\n    if (isDrillToCustomUrl(drillDefinition)) {\n        return validateDrillToCustomURLDefinition(drillDefinition, validationContext);\n    }\n    if (isDrillToAttributeUrl(drillDefinition)) {\n        return validateDrillToAttributeUrlDefinition(drillDefinition, validationContext);\n    }\n    throw new Error(\"Can not validate unknown drillDefinition\");\n}\nfunction validateDrillToDashboardDefinition(drillDefinition, validationContext) {\n    const { target } = drillDefinition;\n    if (target) {\n        let result = undefined;\n        const targetDashboard = validationContext.dashboardsMap.get(target) ||\n            validationContext.inaccessibleDashboardsMap.get(target);\n        if (targetDashboard) {\n            // normalize ref take the value from state ...\n            // md object has to be identifier\n            result = Object.assign(Object.assign({}, drillDefinition), { target: idRef(targetDashboard.identifier, \"analyticalDashboard\") });\n        }\n        if (result) {\n            return result;\n        }\n    }\n    else {\n        return drillDefinition;\n    }\n    throw Error(\"Unknown target dashboard\");\n}\nfunction validateDrillToInsightDefinition(drillDefinition, validationContext) {\n    const { target } = drillDefinition;\n    let result = undefined;\n    if (target) {\n        const targetInsights = validationContext.insightsMap.get(target);\n        if (targetInsights) {\n            // normalize ref take the value from state ...\n            result = Object.assign(Object.assign({}, drillDefinition), { target: targetInsights.insight.ref });\n        }\n    }\n    if (result) {\n        return result;\n    }\n    throw Error(\"Unknown target Insight\");\n}\nexport function validateDrillToCustomURLDefinition(drillDefinition, validationContext) {\n    const ids = extractDisplayFormIdentifiers([drillDefinition]);\n    ids.forEach((identifier) => {\n        const displayForms = validationContext.displayFormsMap.get(identifier);\n        if (!displayForms) {\n            throw new Error(`Cannot find AttributeDisplayForm definition specified by identifier: ${objRefToString(identifier)}`);\n        }\n    });\n    return drillDefinition;\n}\nexport function validateDrillToAttributeUrlDefinition(drillDefinition, validationContext) {\n    const displayForms = validationContext.displayFormsMap.get(drillDefinition.target.displayForm);\n    if (!displayForms) {\n        throw new Error(`Cannot find target displayForm: ${objRefToString(drillDefinition.target.displayForm)}`);\n    }\n    const hyperlinkDisplayForm = validationContext.displayFormsMap.get(drillDefinition.target.hyperlinkDisplayForm);\n    if (!hyperlinkDisplayForm) {\n        throw new Error(`Cannot find target hyperlinkDisplayForm: ${objRefToString(drillDefinition.target.hyperlinkDisplayForm)}`);\n    }\n    if (hyperlinkDisplayForm.displayFormType !== \"GDC.link\") {\n        throw new Error(`DisplayFormType of target hyperlinkDisplayForm type has to be GDC.link`);\n    }\n    if (!isDisplayFormRelevantToDrill(drillDefinition, validationContext.availableDrillTargets, hyperlinkDisplayForm)) {\n        throw new Error(`The hyperlinkDisplayForm ${objRefToString(hyperlinkDisplayForm.ref)} in not a valid drill target`);\n    }\n    return drillDefinition;\n}\n//# sourceMappingURL=insightDrillDefinitionUtils.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { objRef } from \"../../utils/objRef.js\";\nexport const drillTargetsAdapter = createEntityAdapter({\n    selectId: (drillTargets) => serializeObjRef(getIdFromDrillTargets(drillTargets)),\n});\nconst getIdFromDrillTargets = (targets) => {\n    return objRef(targets.uri, targets.identifier);\n};\n//# sourceMappingURL=drillTargetsEntityAdapter.js.map","export function objRef(uri, identifier) {\n    return { uri, identifier };\n}\n//# sourceMappingURL=objRef.js.map","// (C) 2021-2023 GoodData Corporation\nimport { drillTargetsAdapter } from \"./drillTargetsEntityAdapter.js\";\nimport memoize from \"lodash/memoize.js\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nconst entitySelectors = drillTargetsAdapter.getSelectors((state) => state.drillTargets);\nconst selectDrillTargetsInternal = entitySelectors.selectAll;\n/**\n * Return all widgets drill targets\n * @alpha\n */\nexport const selectDrillTargets = createSelector(selectDrillTargetsInternal, (drillTargets) => {\n    return newMapForObjectWithIdentity(drillTargets);\n});\n/**\n * Selects drill targets by widget ref.\n *\n * @alpha\n */\nexport const selectDrillTargetsByWidgetRef = memoize((ref) => {\n    return createSelector(selectDrillTargets, (drillTargets) => {\n        return drillTargets.get(ref);\n    });\n}, serializeObjRef);\n//# sourceMappingURL=drillTargetsSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nimport { accessibleDashboardsEntityAdapter } from \"./accessibleDashboardsEntityAdapter.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.accessibleDashboards);\nconst adapterSelectors = accessibleDashboardsEntityAdapter.getSelectors(selectSelf);\n/**\n * Select all accessible dashboard in project.\n *\n * @alpha\n */\nexport const selectAccessibleDashboards = adapterSelectors.selectAll;\n/**\n * Select all accessible dashboard in project and returns them in a mapping of obj ref to the insight object.\n *\n * @alpha\n */\nexport const selectAccessibleDashboardsMap = createSelector(selectAccessibleDashboards, (dashboards) => {\n    return newMapForObjectWithIdentity(dashboards);\n});\n//# sourceMappingURL=accessibleDashboardsSelectors.js.map","// (C) 2023 GoodData Corporation\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nexport const inaccessibleDashboardsEntityAdapter = createEntityAdapter({\n    selectId: (dashboard) => objRefToString(dashboard.ref),\n});\n//# sourceMappingURL=inaccessibleDashboardsEntityAdapter.js.map","// (C) 2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nimport { inaccessibleDashboardsEntityAdapter } from \"./inaccessibleDashboardsEntityAdapter.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.inaccessibleDashboards);\nconst adapterSelectors = inaccessibleDashboardsEntityAdapter.getSelectors(selectSelf);\n/**\n * Select all inaccessible dashboard in project.\n *\n * @alpha\n */\nexport const selectInaccessibleDashboards = adapterSelectors.selectAll;\n/**\n * Select all inaccessible dashboard in project and returns them in a mapping of obj ref to the insight object.\n *\n * @alpha\n */\nexport const selectInaccessibleDashboardsMap = createSelector(selectInaccessibleDashboards, (dashboards) => {\n    return newMapForObjectWithIdentity(dashboards);\n});\n//# sourceMappingURL=inaccessibleDashboardsSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { call, select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { extractDisplayFormIdentifiers, extractInsightRefs, validateDrillDefinitionOrigin, validateInsightDrillDefinition, } from \"./insightDrillDefinitionUtils.js\";\nimport { resolveInsights } from \"../../../utils/insightResolver.js\";\nimport { resolveDisplayFormMetadata, } from \"../../../utils/displayFormResolver.js\";\nimport { selectDrillTargetsByWidgetRef } from \"../../../store/drillTargets/drillTargetsSelectors.js\";\nimport { selectAccessibleDashboardsMap } from \"../../../store/accessibleDashboards/accessibleDashboardsSelectors.js\";\nimport { selectInaccessibleDashboardsMap } from \"../../../store/inaccessibleDashboards/inaccessibleDashboardsSelectors.js\";\nexport function validateDrillDefinition(drillDefinition, validationData, ctx, cmd) {\n    var _a;\n    let item = drillDefinition;\n    // validate drill targets\n    if (!((_a = validationData.drillTargets) === null || _a === void 0 ? void 0 : _a.availableDrillTargets)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Drill targets not set`);\n    }\n    // validate drills origin\n    try {\n        item = validateDrillDefinitionOrigin(item, validationData.drillTargets.availableDrillTargets);\n    }\n    catch (ex) {\n        const messageDetail = ex.message;\n        throw invalidArgumentsProvided(ctx, cmd, `Invalid drill origin for InsightDrillDefinition. Error: ${messageDetail}`);\n    }\n    // validate drill\n    const validationContext = {\n        dashboardsMap: validationData.accessibleDashboardMap,\n        insightsMap: validationData.resolvedInsights.resolved,\n        displayFormsMap: validationData.resolvedDisplayForms.resolved,\n        availableDrillTargets: validationData.drillTargets.availableDrillTargets,\n        inaccessibleDashboardsMap: validationData.inaccessibleDashboardsMap,\n    };\n    try {\n        item = validateInsightDrillDefinition(item, validationContext);\n    }\n    catch (ex) {\n        const messageDetail = ex.message;\n        throw invalidArgumentsProvided(ctx, cmd, `Invalid InsightDrillDefinition. Error: ${messageDetail}`);\n    }\n    return item;\n}\nexport function* getValidationData(widgetRef, drillsToModify, ctx) {\n    const selectDrillTargetsByWidgetRefSelector = selectDrillTargetsByWidgetRef(widgetRef);\n    const drillTargets = yield select(selectDrillTargetsByWidgetRefSelector);\n    const accessibleDashboardMap = yield select(selectAccessibleDashboardsMap);\n    const inaccessibleDashboardsMap = yield select(selectInaccessibleDashboardsMap);\n    const insightRefs = extractInsightRefs(drillsToModify);\n    const resolvedInsights = yield call(resolveInsights, ctx, insightRefs);\n    const displayFormIds = extractDisplayFormIdentifiers(drillsToModify);\n    const resolvedDisplayForms = yield call(resolveDisplayFormMetadata, ctx, displayFormIds);\n    return {\n        drillTargets,\n        accessibleDashboardMap,\n        resolvedInsights,\n        resolvedDisplayForms,\n        inaccessibleDashboardsMap,\n    };\n}\n//# sourceMappingURL=insightDrillDefinitionValidation.js.map","// (C) 2022-2023 GoodData Corporation\nimport { isInsightWidget, widgetRef, } from \"@gooddata/sdk-model\";\nimport { all, call, put } from \"redux-saga/effects\";\nimport flatMap from \"lodash/flatMap.js\";\nimport { insightWidgetDrillsRemoved } from \"../../events/insight.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { existsDrillDefinitionInArray } from \"../widgets/validation/insightDrillDefinitionUtils.js\";\nimport { getValidationData, validateDrillDefinition, } from \"../widgets/validation/insightDrillDefinitionValidation.js\";\nimport { uiActions } from \"../../store/ui/index.js\";\nexport function* validateDrills(ctx, cmd, widgets) {\n    const possibleInvalidDrills = yield all(widgets\n        .filter(isInsightWidget) // KPI drills should not be validated like this and never removed\n        .map((widget) => call(validateInsightDrillDefinitions, ctx, cmd, widget)));\n    const invalidDrills = possibleInvalidDrills.filter(({ invalidDrills }) => invalidDrills.length > 0);\n    if (invalidDrills.length === 0) {\n        yield put(uiActions.removeInvalidDrillWidgetRefs(widgets.map(widgetRef)));\n    }\n    else {\n        yield all(invalidDrills.map((drillInfo) => call(removeInsightWidgetDrills, ctx, cmd, drillInfo.widget, drillInfo.invalidDrills)));\n        yield put(uiActions.addInvalidDrillWidgetRefs(invalidDrills.map((drill) => drill.widget.ref)));\n    }\n}\nfunction* removeInsightWidgetDrills(ctx, cmd, widget, invalidDrills) {\n    const notModifiedDrillDefinition = widget.drills.filter((drillItem) => !existsDrillDefinitionInArray(drillItem, invalidDrills));\n    yield put(layoutActions.replaceWidgetDrillWithoutUndo({\n        ref: widgetRef(widget),\n        drillDefinitions: notModifiedDrillDefinition,\n    }));\n    yield put(insightWidgetDrillsRemoved(ctx, widgetRef(widget), invalidDrills, cmd.correlationId));\n}\nfunction* validateInsightDrillDefinitions(ctx, cmd, widget) {\n    const validationData = yield call(getValidationData, widgetRef(widget), widget.drills, ctx);\n    if (!validationData.drillTargets) {\n        return {\n            invalidDrills: [],\n            widget,\n        };\n    }\n    const invalidDrills = flatMap(widget.drills, (drillItem) => {\n        try {\n            validateDrillDefinition(drillItem, validationData, ctx, cmd);\n            return [];\n        }\n        catch (_a) {\n            return [drillItem];\n        }\n    });\n    return { invalidDrills, widget };\n}\n//# sourceMappingURL=validateDrills.js.map","// (C) 2022 GoodData Corporation\nimport { isDrillToCustomUrl, widgetRef } from \"@gooddata/sdk-model\";\nimport { all, call, put, select } from \"redux-saga/effects\";\nimport { extractDisplayFormIdentifiers } from \"../widgets/validation/insightDrillDefinitionUtils.js\";\nimport { uiActions } from \"../../store/ui/index.js\";\nimport { selectDrillTargetsByWidgetRef } from \"../../store/drillTargets/drillTargetsSelectors.js\";\nimport { selectAllCatalogDisplayFormsMap } from \"../../store/catalog/catalogSelectors.js\";\nimport { isDisplayFormRelevantToDrill } from \"./isDisplayFormRelevantToDrill.js\";\nexport function* validateDrillToCustomUrlParams(widgets) {\n    const possibleInvalidDrills = yield all(widgets.map((widget) => call(validateWidgetDrillToCustomUrlParams, widget)));\n    const invalidDrills = possibleInvalidDrills.filter(({ invalidDrills }) => invalidDrills.length > 0);\n    if (invalidDrills.length === 0) {\n        yield put(uiActions.resetInvalidCustomUrlDrillParameterWidget(widgets));\n    }\n    else {\n        yield put(uiActions.setInvalidCustomUrlDrillParameterWidgets(invalidDrills));\n    }\n}\nfunction* validateWidgetDrillToCustomUrlParams(widget) {\n    const selectDrillTargetsByWidgetRefSelector = selectDrillTargetsByWidgetRef(widgetRef(widget));\n    const drillTargets = yield select(selectDrillTargetsByWidgetRefSelector);\n    if (!(drillTargets === null || drillTargets === void 0 ? void 0 : drillTargets.availableDrillTargets)) {\n        // skip this part of the validation in case the drill targets are not available yet\n        return {\n            widget,\n            invalidDrills: [],\n        };\n    }\n    const displayForms = yield select(selectAllCatalogDisplayFormsMap);\n    return widget.drills.filter(isDrillToCustomUrl).reduce((acc, drillDefinition) => {\n        const ids = extractDisplayFormIdentifiers([drillDefinition]);\n        const hasInvalidParam = ids.some((identifier) => {\n            const displayForm = displayForms.get(identifier);\n            if (!displayForm) {\n                // the drill as a whole is invalid, no reason to validate the parameters\n                return false;\n            }\n            return !isDisplayFormRelevantToDrill(drillDefinition, drillTargets.availableDrillTargets, displayForm);\n        });\n        if (hasInvalidParam) {\n            acc.invalidDrills.push(drillDefinition);\n        }\n        return acc;\n    }, { widget, invalidDrills: [] });\n}\n//# sourceMappingURL=validateDrillToCustomUrlParams.js.map","// (C) 2023 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { inaccessibleDashboardsEntityAdapter } from \"./inaccessibleDashboardsEntityAdapter.js\";\nconst inaccessibleDashboardsSlice = createSlice({\n    name: \"inaccessibleDashboards\",\n    initialState: inaccessibleDashboardsEntityAdapter.getInitialState(),\n    reducers: {\n        addInaccessibleDashboards: inaccessibleDashboardsEntityAdapter.upsertMany,\n    },\n});\nexport const inaccessibleDashboardsSliceReducer = inaccessibleDashboardsSlice.reducer;\nexport const inaccessibleDashboardsActions = inaccessibleDashboardsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2023 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { isDrillToDashboard, isInsightWidget } from \"@gooddata/sdk-model\";\nimport flatMap from \"lodash/flatMap.js\";\nimport compact from \"lodash/compact.js\";\nimport { selectAccessibleDashboardsMap } from \"../../../store/accessibleDashboards/accessibleDashboardsSelectors.js\";\nimport { inaccessibleDashboardsActions } from \"../../../store/inaccessibleDashboards/index.js\";\nexport function* loadInaccessibleDashboards(ctx, widgets) {\n    const accessibleDashboardsMap = yield select(selectAccessibleDashboardsMap);\n    const dashboardDrillTargets = flatMap(widgets.filter(isInsightWidget).map(({ drills }) => drills.filter(isDrillToDashboard)));\n    const dashboardDrillTargetRefs = compact(dashboardDrillTargets.map(({ target }) => target));\n    const unknownDashboardDrillTargetRefs = dashboardDrillTargetRefs.filter((ref) => !accessibleDashboardsMap.get(ref));\n    const existingDashboards = yield call(getExistingDashboards, ctx, unknownDashboardDrillTargetRefs);\n    const inaccessibleDashboards = existingDashboards.map((dashboard) => {\n        var _a;\n        return Object.assign(Object.assign({}, dashboard), { title: (_a = dashboard.title) !== null && _a !== void 0 ? _a : \"\", accessibilityLimitation: dashboard.title === undefined ? \"forbidden\" : \"notShared\" });\n    });\n    yield put(inaccessibleDashboardsActions.addInaccessibleDashboards(inaccessibleDashboards));\n}\nasync function getExistingDashboards(ctx, dashboardRefs) {\n    try {\n        return await ctx.backend\n            .workspace(ctx.workspace)\n            .dashboards()\n            .validateDashboardsExistence(dashboardRefs);\n    }\n    catch (_a) {\n        // when the call fails, we have no way to check whether the unknown dashboards exist\n        return [];\n    }\n}\n//# sourceMappingURL=loadInaccessibleDashboards.js.map","import { call, put, select } from \"redux-saga/effects\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { resetDashboard as resetDashboardCommand } from \"../../commands/index.js\";\nimport { renderModeChanged } from \"../../events/renderMode.js\";\nimport { renderModeActions } from \"../../store/renderMode/index.js\";\nimport { resetDashboardRuntime } from \"../dashboard/resetDashboardHandler.js\";\nimport { validateDrills } from \"../common/validateDrills.js\";\nimport { selectAllAnalyticalWidgets } from \"../../store/layout/layoutSelectors.js\";\nimport { validateDrillToCustomUrlParams } from \"../common/validateDrillToCustomUrlParams.js\";\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nimport { loadInaccessibleDashboards } from \"../dashboard/initializeDashboardHandler/loadInaccessibleDashboards.js\";\nimport { uiActions } from \"../../store/ui/index.js\";\nexport function* changeRenderModeHandler(ctx, cmd) {\n    const { payload: { renderMode, renderModeChangeOptions }, correlationId, } = cmd;\n    // Reset dashboard and widgets first, as changing the edit mode forces visualizations to re-execute.\n    // To avoid sending DashboardWidgetExecutionSucceeded or DashboardWidgetExecutionFailed events\n    // for discarded widgets, sanitization must be done before the mode is changed.\n    if (renderModeChangeOptions.resetDashboard) {\n        const data = yield call(resetDashboardRuntime, ctx, resetDashboardCommand(correlationId));\n        yield put(batchActions([\n            data.batch,\n            uiActions.resetInvalidDrillWidgetRefs(),\n            uiActions.resetAllInvalidCustomUrlDrillParameterWidgetsWarnings(),\n            renderModeActions.setRenderMode(renderMode),\n        ]));\n        yield put(data.reset);\n    }\n    else {\n        yield put(batchActions([\n            uiActions.resetInvalidDrillWidgetRefs(),\n            uiActions.resetAllInvalidCustomUrlDrillParameterWidgetsWarnings(),\n            renderModeActions.setRenderMode(renderMode),\n        ]));\n    }\n    if (renderMode === \"edit\") {\n        const widgets = yield select(selectAllAnalyticalWidgets);\n        yield call(loadInaccessibleDashboards, ctx, widgets);\n        yield call(validateDrills, ctx, cmd, widgets);\n        yield call(validateDrillToCustomUrlParams, widgets.filter(isInsightWidget));\n    }\n    return renderModeChanged(ctx, renderMode, correlationId);\n}\n//# sourceMappingURL=changeRenderModeHandler.js.map","// (C) 2021-2022 GoodData Corporation\n/**\n * This function convert IDashboard into IListedDashboard\n * @internal\n */\nexport const createListedDashboard = (dashboard) => {\n    const { created, description, identifier, ref, title, updated, uri, tags, shareStatus, isLocked } = dashboard;\n    return {\n        created,\n        description,\n        identifier,\n        ref,\n        title,\n        updated,\n        uri,\n        tags,\n        shareStatus,\n        isLocked,\n        availability: \"full\",\n    };\n};\n//# sourceMappingURL=listedDashboardUtils.js.map","import { __rest } from \"tslib\";\nimport { changeRenderMode } from \"../../commands/index.js\";\nimport { selectBasicLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { selectFilterContextDefinition, selectFilterContextIdentity, } from \"../../store/filterContext/filterContextSelectors.js\";\nimport { selectDashboardDescriptor, selectPersistedDashboard } from \"../../store/meta/metaSelectors.js\";\nimport { selectDateFilterConfigOverrides } from \"../../store/dateFilterConfig/dateFilterConfigSelectors.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { dashboardSaved } from \"../../events/dashboard.js\";\nimport { metaActions } from \"../../store/meta/index.js\";\nimport { filterContextActions } from \"../../store/filterContext/index.js\";\nimport { dashboardFilterContextIdentity } from \"../../../_staging/dashboard/dashboardFilterContext.js\";\nimport { invariant } from \"ts-invariant\";\nimport { dashboardLayoutRemoveIdentity, dashboardLayoutWidgetIdentityMap, } from \"../../../_staging/dashboard/dashboardLayout.js\";\nimport { isTemporaryIdentity } from \"../../utils/dashboardItemUtils.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { savingActions } from \"../../store/saving/index.js\";\nimport { selectSettings } from \"../../store/config/configSelectors.js\";\nimport { selectBackendCapabilities } from \"../../store/backendCapabilities/backendCapabilitiesSelectors.js\";\nimport { changeRenderModeHandler } from \"../renderMode/changeRenderModeHandler.js\";\nimport { selectIsInViewMode } from \"../../store/renderMode/renderModeSelectors.js\";\nimport { createListedDashboard } from \"../../../_staging/listedDashboard/listedDashboardUtils.js\";\nimport { listedDashboardsActions } from \"../../store/listedDashboards/index.js\";\nimport { accessibleDashboardsActions } from \"../../store/accessibleDashboards/index.js\";\nfunction createDashboard(ctx, saveCtx) {\n    return ctx.backend.workspace(ctx.workspace).dashboards().createDashboard(saveCtx.dashboardToSave);\n}\nfunction updateDashboard(ctx, saveCtx) {\n    const { persistedDashboard, dashboardToSave } = saveCtx;\n    invariant(persistedDashboard);\n    return ctx.backend\n        .workspace(ctx.workspace)\n        .dashboards()\n        .updateDashboard(persistedDashboard, dashboardToSave);\n}\nexport function getDashboardWithSharing(dashboard, sharingEnabled = false, sharingSupported = true, isNewDashboard) {\n    let shareProp = {};\n    if (isNewDashboard) {\n        const { isUnderStrictControl: _unusedIsUnderStrictControl } = dashboard, dashboardRest = __rest(dashboard, [\"isUnderStrictControl\"]);\n        shareProp =\n            sharingEnabled && sharingSupported\n                ? {\n                    shareStatus: \"private\",\n                    isUnderStrictControl: true,\n                }\n                : {\n                    shareStatus: \"public\",\n                };\n        return Object.assign(Object.assign({}, dashboardRest), shareProp);\n    }\n    return dashboard;\n}\n/*\n * TODO: custom widget persistence; we need a new backend capability that indicates whether the\n *  backend can persist custom widget content (tiger can already, bear cannot). Based on that\n *  capability, this code should use either the selectBasicLayout (that strips any custom widgets) or\n *  selectLayout (that keeps custom widgets).\n */\nfunction* createDashboardSaveContext(cmd, isNewDashboard) {\n    var _a;\n    const persistedDashboard = yield select(selectPersistedDashboard);\n    const dashboardDescriptor = yield select(selectDashboardDescriptor);\n    const filterContextDefinition = yield select(selectFilterContextDefinition);\n    const filterContextIdentity = yield select(selectFilterContextIdentity);\n    const layout = yield select(selectBasicLayout);\n    const dateFilterConfig = yield select(selectDateFilterConfigOverrides);\n    const settings = yield select(selectSettings);\n    const capabilities = yield select(selectBackendCapabilities);\n    /*\n     * When updating an existing dashboard, the services expect that the dashboard definition to use for\n     * updating contains the identity of the existing dashboard.\n     *\n     * It's ok to have no identity when creating a new dashboard - it will be assigned during the save.\n     */\n    const dashboardIdentity = {\n        ref: persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.ref,\n        uri: persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.uri,\n        identifier: persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.identifier,\n    };\n    const pluginsProp = (persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.plugins) ? { plugins: persistedDashboard.plugins } : {};\n    const dashboardFromState = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ type: \"IDashboard\" }, dashboardDescriptor), { title: (_a = cmd.payload.title) !== null && _a !== void 0 ? _a : dashboardDescriptor.title }), dashboardIdentity), { filterContext: Object.assign(Object.assign({}, filterContextIdentity), filterContextDefinition), layout,\n        dateFilterConfig }), pluginsProp);\n    const dashboardToSave = Object.assign(Object.assign({}, dashboardFromState), { layout: dashboardLayoutRemoveIdentity(layout, isTemporaryIdentity) });\n    return {\n        cmd,\n        persistedDashboard,\n        dashboardFromState,\n        dashboardToSave: getDashboardWithSharing(dashboardToSave, settings.enableAnalyticalDashboardPermissions, capabilities.supportsAccessControl, isNewDashboard),\n    };\n}\nfunction* save(ctx, saveCtx, saveFn, saveActionName) {\n    const dashboard = yield call(saveFn, ctx, saveCtx);\n    /*\n     * The crucial thing to do after the save is to update the identities of different objects that are stored\n     * in the dashboard state and either:\n     *\n     * 1.  have no identity (such as dashboard itself or filter context in case of new dashboards)\n     * 2.  or have temporary identity (such as KPI and Insight widgets in case of any dashboard that gets\n     *     modified with new content).\n     *\n     * The first task is easy. The second requires additional processing to identify mapping between\n     * temporary identity and persistent identity and then update the layout state accordingly.\n     */\n    const identityMapping = dashboardLayoutWidgetIdentityMap(saveCtx.dashboardFromState.layout, dashboard.layout);\n    const actions = [\n        metaActions.setMeta({ dashboard }),\n        filterContextActions.updateFilterContextIdentity({\n            filterContextIdentity: dashboardFilterContextIdentity(dashboard),\n        }),\n        layoutActions.updateWidgetIdentities(identityMapping),\n        layoutActions.clearLayoutHistory(),\n    ];\n    if (saveCtx.persistedDashboard === undefined) {\n        const listedDashboard = createListedDashboard(dashboard);\n        actions.push(listedDashboardsActions.addListedDashboard(listedDashboard), accessibleDashboardsActions.addAccessibleDashboard(listedDashboard));\n    }\n    const batch = batchActions(actions, saveActionName);\n    return {\n        batch,\n        dashboard,\n    };\n}\nexport function* saveDashboardHandler(ctx, cmd) {\n    try {\n        yield put(savingActions.setSavingStart());\n        const persistedDashboard = yield select(selectPersistedDashboard);\n        const isNewDashboard = persistedDashboard === undefined;\n        const saveCtx = yield call(createDashboardSaveContext, cmd, isNewDashboard);\n        let result;\n        if (isNewDashboard) {\n            result = yield call(save, ctx, saveCtx, createDashboard, \"@@GDC.DASH.SAVE_NEW\");\n        }\n        else {\n            result = yield call(save, ctx, saveCtx, updateDashboard, \"@@GDC.DASH.SAVE_EXISTING\");\n        }\n        const { dashboard, batch } = result;\n        yield put(batch);\n        if (isNewDashboard) {\n            /*\n             * We must do this by mutating the context object, the setContext effect changes the context only\n             * for the current saga and its children. See https://github.com/redux-saga/redux-saga/issues/1798#issuecomment-468054586\n             */\n            ctx.dashboardRef = dashboard.ref;\n        }\n        const isInViewMode = yield select(selectIsInViewMode);\n        if (!isInViewMode) {\n            yield call(changeRenderModeHandler, ctx, changeRenderMode(\"view\", undefined, cmd.correlationId));\n        }\n        yield put(savingActions.setSavingSuccess());\n        return dashboardSaved(ctx, dashboard, isNewDashboard, cmd.correlationId);\n    }\n    catch (e) {\n        yield put(savingActions.setSavingError(e));\n        throw e;\n    }\n}\n//# sourceMappingURL=saveDashboardHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.user);\n/**\n * This selector returns current logged in user.\n *\n * @remarks\n * It is expected that the selector is called only after the permission state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @example - on how to use `selectCurrentUser` selector within a Dashboard Plugin.\n * ```\n * // create the component using current user selector\n * const Greetings: React.FC = () => {\n *      // read the currently logged in user information\n *      const user = useDashboardSelector(selectCurrentUser);\n *\n *      return <div>Hello, {user.fullName}</div>;\n * }\n *\n * // in a plugin's register function just use the component as a custom widget type\n * customize.customWidgets().addCustomWidget(\"greetingsWidget\", Greetings);\n *\n *  customize.layout().customizeFluidLayout((_layout, customizer) => {\n *          customizer.addSection(\n *              0,\n *              newDashboardSection(\n *                  \"Greetings by Plugin\",\n *                  newDashboardItem(newCustomWidget(\"greetings\", \"greetingsWidget\"), {\n *                      xl: {\n *                          // all 12 columns of the grid will be 'allocated' for this new item\n *                          gridWidth: 12,\n *                          // minimum height since the custom widget now has just some one-liner text\n *                          gridHeight: 1,\n *                      },\n *                  }),\n *              ),\n *          );\n *      });\n *\n * ```\n *\n * @returns - an {@link @gooddata/sdk-model#IUser} object for logged in user.\n * @public\n */\nexport const selectCurrentUser = createSelector(selectSelf, (state) => {\n    invariant(state.user, \"attempting to access uninitialized user state\");\n    return state.user;\n});\n/**\n * This selector returns current logged in user ref.\n *\n * @remarks\n * It is expected that the selector is called only after the permission state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * @returns - an {@link @gooddata/sdk-model#ObjRef} of the logged in user.\n * @public\n */\nexport const selectCurrentUserRef = createSelector(selectCurrentUser, (user) => {\n    return user.ref;\n});\n//# sourceMappingURL=userSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { __rest } from \"tslib\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { dashboardFilterContextIdentity } from \"../../../_staging/dashboard/dashboardFilterContext.js\";\nimport { dashboardLayoutRemoveIdentity, dashboardLayoutWidgetIdentityMap, } from \"../../../_staging/dashboard/dashboardLayout.js\";\nimport { dashboardCopySaved } from \"../../events/dashboard.js\";\nimport { filterContextActions } from \"../../store/filterContext/index.js\";\nimport { selectFilterContextDefinition } from \"../../store/filterContext/filterContextSelectors.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { selectBasicLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { metaActions } from \"../../store/meta/index.js\";\nimport { selectDashboardDescriptor, selectPersistedDashboard, selectPersistedDashboardFilterContextAsFilterContextDefinition, } from \"../../store/meta/metaSelectors.js\";\nimport { selectDateFilterConfigOverrides } from \"../../store/dateFilterConfig/dateFilterConfigSelectors.js\";\nimport { alertsActions } from \"../../store/alerts/index.js\";\nimport { savingActions } from \"../../store/saving/index.js\";\nimport { selectSettings } from \"../../store/config/configSelectors.js\";\nimport { selectBackendCapabilities } from \"../../store/backendCapabilities/backendCapabilitiesSelectors.js\";\nimport { listedDashboardsActions } from \"../../store/listedDashboards/index.js\";\nimport { createListedDashboard } from \"../../../_staging/listedDashboard/listedDashboardUtils.js\";\nimport { accessibleDashboardsActions } from \"../../store/accessibleDashboards/index.js\";\nimport { selectCurrentUser } from \"../../store/user/userSelectors.js\";\nimport { changeRenderModeHandler } from \"../renderMode/changeRenderModeHandler.js\";\nimport { changeRenderMode } from \"../../commands/index.js\";\nimport { selectIsInViewMode } from \"../../store/renderMode/renderModeSelectors.js\";\nfunction createDashboard(ctx, saveAsCtx) {\n    return ctx.backend.workspace(ctx.workspace).dashboards().createDashboard(saveAsCtx.dashboardToSave);\n}\n/*\n * TODO: custom widget persistence; we need a new backend capability that indicates whether the\n *  backend can persist custom widget content (tiger can already, bear cannot). Based on that\n *  capability, this code should use either the selectBasicLayout (that strips any custom widgets) or\n *  selectLayout (that keeps custom widgets).\n */\nfunction* createDashboardSaveAsContext(cmd) {\n    const { title, useOriginalFilterContext } = cmd.payload;\n    const titleProp = title ? { title } : {};\n    const persistedDashboard = yield select(selectPersistedDashboard);\n    const dashboardDescriptor = yield select(selectDashboardDescriptor);\n    const originalDashboardDescription = yield select(selectPersistedDashboard);\n    const filterContextDefinition = yield select(!useOriginalFilterContext || !originalDashboardDescription\n        ? selectFilterContextDefinition\n        : selectPersistedDashboardFilterContextAsFilterContextDefinition);\n    const layout = yield select(selectBasicLayout);\n    const dateFilterConfig = yield select(selectDateFilterConfigOverrides);\n    const settings = yield select(selectSettings);\n    const capabilities = yield select(selectBackendCapabilities);\n    const { isUnderStrictControl: _unusedProp } = dashboardDescriptor, dashboardDescriptorRest = __rest(dashboardDescriptor, [\"isUnderStrictControl\"]);\n    const dashboardFromState = Object.assign(Object.assign({ type: \"IDashboard\" }, dashboardDescriptorRest), { filterContext: Object.assign({}, filterContextDefinition), layout,\n        dateFilterConfig });\n    const pluginsProp = (persistedDashboard === null || persistedDashboard === void 0 ? void 0 : persistedDashboard.plugins) ? { plugins: persistedDashboard.plugins } : {};\n    const shareProp = settings.enableAnalyticalDashboardPermissions && capabilities.supportsAccessControl\n        ? {\n            isLocked: false,\n            shareStatus: \"private\",\n            isUnderStrictControl: true,\n        }\n        : {\n            isLocked: false,\n            shareStatus: \"public\",\n        };\n    // remove widget identity from all widgets; according to the SPI contract, this will result in\n    // creation of new widgets\n    const dashboardToSave = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, dashboardFromState), titleProp), { layout: dashboardLayoutRemoveIdentity(layout, () => true) }), shareProp), pluginsProp);\n    return {\n        cmd,\n        dashboardFromState,\n        dashboardToSave,\n    };\n}\nfunction* saveAs(ctx, saveAsCtx) {\n    const dashboard = yield call(createDashboard, ctx, saveAsCtx);\n    const user = yield select(selectCurrentUser);\n    // we need to set createdBy manually, because conversion userRef -> IUser in createDashboard call needs UserMap for this,\n    // but to get a UserMap is expensive and we know who created the dashboard.\n    const dashboardWithUser = Object.assign(Object.assign({}, dashboard), { createdBy: user });\n    if (!saveAsCtx.cmd.payload.switchToCopy) {\n        return {\n            dashboard: dashboardWithUser,\n        };\n    }\n    const identityMapping = dashboardLayoutWidgetIdentityMap(saveAsCtx.dashboardFromState.layout, dashboardWithUser.layout);\n    const batch = batchActions([\n        metaActions.setMeta({ dashboard: dashboardWithUser }),\n        alertsActions.setAlerts([]),\n        filterContextActions.updateFilterContextIdentity({\n            filterContextIdentity: dashboardFilterContextIdentity(dashboardWithUser),\n        }),\n        layoutActions.updateWidgetIdentities(identityMapping),\n        layoutActions.clearLayoutHistory(),\n    ], \"@@GDC.DASH.SAVE_AS\");\n    return {\n        batch,\n        dashboard: dashboardWithUser,\n    };\n}\nexport function* saveAsDashboardHandler(ctx, cmd) {\n    var _a;\n    try {\n        yield put(savingActions.setSavingStart());\n        const saveAsCtx = yield call(createDashboardSaveAsContext, cmd);\n        const { payload: { switchToCopy }, } = cmd;\n        const result = yield call(saveAs, ctx, saveAsCtx);\n        const { dashboard, batch } = result;\n        if (batch) {\n            yield put(batch);\n        }\n        if (switchToCopy) {\n            /*\n             * We must do this by mutating the context object, the setContext effect changes the context only\n             * for the current saga and its children. See https://github.com/redux-saga/redux-saga/issues/1798#issuecomment-468054586\n             */\n            ctx.dashboardRef = dashboard.ref;\n        }\n        const listedDashboard = createListedDashboard(dashboard);\n        yield put(listedDashboardsActions.addListedDashboard(listedDashboard));\n        yield put(accessibleDashboardsActions.addAccessibleDashboard(listedDashboard));\n        const isInViewMode = yield select(selectIsInViewMode);\n        if (!isInViewMode) {\n            yield call(changeRenderModeHandler, ctx, changeRenderMode(\"view\", undefined, cmd.correlationId));\n        }\n        yield put(savingActions.setSavingSuccess());\n        const isOriginalDashboardLocked = (_a = saveAsCtx.dashboardFromState.isLocked) !== null && _a !== void 0 ? _a : false;\n        return dashboardCopySaved(ctx, dashboard, isOriginalDashboardLocked, cmd.correlationId);\n    }\n    catch (e) {\n        yield put(savingActions.setSavingError(e));\n        throw e;\n    }\n}\n//# sourceMappingURL=saveAsDashboardHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { areObjRefsEqual, idRef, uriRef } from \"@gooddata/sdk-model\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { executionResultsActions } from \"../../store/executionResults/index.js\";\nimport { selectDateFilterConfig } from \"../../store/config/configSelectors.js\";\nimport { selectPersistedDashboard } from \"../../store/meta/metaSelectors.js\";\nimport { dashboardDeleted } from \"../../events/dashboard.js\";\nimport { invariant } from \"ts-invariant\";\nimport { actionsToInitializeNewDashboard } from \"./common/stateInitializers.js\";\nfunction deleteDashboard(ctx, dashboardRef) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().deleteDashboard(dashboardRef);\n}\n/**\n * Resets the essential state so that an empty dashboard is rendered. This includes change of the\n * saga context so that it contains an empty dashboardRef.\n *\n * Note: This will not clear any of the dashboard-agnostic global state such as config and settings.\n */\nfunction* resetToNewDashboard(ctx) {\n    const dateFilterConfig = yield select(selectDateFilterConfig);\n    yield put(batchActions([\n        ...actionsToInitializeNewDashboard(dateFilterConfig),\n        executionResultsActions.clearAllExecutionResults(),\n    ], \"@@GDC.DASH/BATCH.CLEAR\"));\n    /*\n     * We must do this by mutating the context object, the setContext effect changes the context only\n     * for the current saga and its children. See https://github.com/redux-saga/redux-saga/issues/1798#issuecomment-468054586\n     */\n    ctx.dashboardRef = undefined;\n}\nexport function* deleteDashboardHandler(ctx, cmd) {\n    const existingDashboardRef = ctx.dashboardRef;\n    const persistedDashboard = yield select(selectPersistedDashboard);\n    if (!persistedDashboard) {\n        throw invalidArgumentsProvided(ctx, cmd, \"Attempting to delete a dashboard that was never saved.\");\n    }\n    // if this invariant fails, it means the state is inconsistent; previous command processing must have done\n    // something wrong; for instance updated context with some ref but did not update the persisted dashboard\n    // accordingly\n    invariant(existingDashboardRef &&\n        (areObjRefsEqual(existingDashboardRef, uriRef(persistedDashboard.uri)) ||\n            areObjRefsEqual(existingDashboardRef, idRef(persistedDashboard.identifier))));\n    // perform the actual delete\n    yield call(deleteDashboard, ctx, persistedDashboard.ref);\n    yield call(resetToNewDashboard, ctx);\n    return dashboardDeleted(ctx, persistedDashboard, cmd.correlationId);\n}\n//# sourceMappingURL=deleteDashboardHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isDashboardDateFilter } from \"@gooddata/sdk-model\";\n// the value is taken from gdc-dashboards\nconst allTimeFilterContextItem = {\n    dateFilter: {\n        type: \"absolute\",\n        granularity: \"GDC.time.year\",\n    },\n};\nexport function ensureAllTimeFilterForExport(filters) {\n    // if there is no date filter, add an \"all time\" filter so that in case the dashboard is saved with some\n    // date filter, it is overridden to All time for the purpose of the export\n    return filters.some(isDashboardDateFilter) ? filters : [allTimeFilterContextItem, ...filters];\n}\n//# sourceMappingURL=filterUtils.js.map","import { call, put, select } from \"redux-saga/effects\";\nimport { dashboardExportToPdfRequested, dashboardExportToPdfResolved, } from \"../../events/dashboard.js\";\nimport { selectDashboardRef } from \"../../store/meta/metaSelectors.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectFilterContextFilters } from \"../../store/filterContext/filterContextSelectors.js\";\nimport { ensureAllTimeFilterForExport } from \"../../../_staging/exportUtils/filterUtils.js\";\nfunction exportDashboardToPdf(ctx, dashboardRef, filters) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().exportDashboardToPdf(dashboardRef, filters);\n}\nexport function* exportDashboardToPdfHandler(ctx, cmd) {\n    yield put(dashboardExportToPdfRequested(ctx, cmd.correlationId));\n    const dashboardRef = yield select(selectDashboardRef);\n    if (!dashboardRef) {\n        throw invalidArgumentsProvided(ctx, cmd, \"Dashboard to export to PDF must have an ObjRef.\");\n    }\n    const filterContextFilters = yield select(selectFilterContextFilters);\n    const effectiveFilters = ensureAllTimeFilterForExport(filterContextFilters);\n    const result = yield call(exportDashboardToPdf, ctx, dashboardRef, effectiveFilters);\n    // prepend hostname if provided so that the results are downloaded from there, not from where the app is hosted\n    const fullUri = ctx.backend.config.hostname\n        ? new URL(result.uri, ctx.backend.config.hostname).href\n        : result.uri;\n    const sanitizedResult = Object.assign(Object.assign({}, result), { uri: fullUri });\n    return dashboardExportToPdfResolved(ctx, sanitizedResult, cmd.correlationId);\n}\n//# sourceMappingURL=exportDashboardToPdfHandler.js.map","import { __rest } from \"tslib\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { isFilterContext, isGranularAccessGrantee, } from \"@gooddata/sdk-model\";\nimport { dashboardSharingChanged } from \"../../events/dashboard.js\";\nimport { selectDashboardRef, selectPersistedDashboard } from \"../../store/meta/metaSelectors.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { metaActions } from \"../../store/meta/index.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { invariant } from \"ts-invariant\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { loadDashboardPermissions } from \"./initializeDashboardHandler/loadDashboardPermissions.js\";\nimport { dashboardPermissionsActions } from \"../../store/dashboardPermissions/index.js\";\nfunction* createDashboardSaveSharingContext(cmd) {\n    const { newSharingProperties } = cmd.payload;\n    const persistedDashboard = yield select(selectPersistedDashboard);\n    invariant(persistedDashboard, \"Cant change sharing of unsaved dashboard\");\n    const { filterContext } = persistedDashboard, otherDashboardProps = __rest(persistedDashboard, [\"filterContext\"]);\n    // ignore temp filter context to please TS as it can be present only during export\n    const filterContextProp = isFilterContext(filterContext)\n        ? {\n            filterContext,\n        }\n        : {};\n    const dashboardFromState = Object.assign(Object.assign({}, otherDashboardProps), filterContextProp);\n    const dashboardToSave = Object.assign(Object.assign({}, dashboardFromState), { shareStatus: newSharingProperties.shareStatus, isLocked: newSharingProperties.isLocked, isUnderStrictControl: newSharingProperties.isUnderStrictControl });\n    return {\n        cmd,\n        persistedDashboard,\n        dashboardToSave,\n    };\n}\nfunction updateDashboard(ctx, saveSharingCtx) {\n    return ctx.backend\n        .workspace(ctx.workspace)\n        .dashboards()\n        .updateDashboard(saveSharingCtx.persistedDashboard, saveSharingCtx.dashboardToSave);\n}\nfunction getDashboard(ctx, dashboardRef) {\n    return ctx.backend.workspace(ctx.workspace).dashboards().getDashboard(dashboardRef);\n}\nfunction changeGrantees(ctx, saveSharingCtx) {\n    const { granteesToAdd, granteesToDelete } = saveSharingCtx.cmd.payload.newSharingProperties;\n    const grantees = [...granteesToAdd, ...granteesToDelete].filter(isGranularAccessGrantee);\n    return ctx.backend.workspace(ctx.workspace).accessControl().changeAccess(ctx.dashboardRef, grantees);\n}\nfunction* saveSharing(ctx, saveSharingCtx) {\n    const { granteesToAdd, granteesToDelete } = saveSharingCtx.cmd.payload.newSharingProperties;\n    const grantees = [...granteesToAdd, ...granteesToDelete].filter(isGranularAccessGrantee);\n    if (!isEmpty(grantees)) {\n        yield call(changeGrantees, ctx, saveSharingCtx);\n    }\n    // get up-to-date permissions from backend\n    const updatedDashboardPermissions = yield call(loadDashboardPermissions, ctx);\n    const setDashboardPermissionsAction = dashboardPermissionsActions.setDashboardPermissions(updatedDashboardPermissions);\n    let dashboard;\n    if (updatedDashboardPermissions.canViewDashboard) {\n        if (!ctx.backend.capabilities.supportsGranularAccessControl) {\n            // update dashboard with specified share status\n            dashboard = yield call(updateDashboard, ctx, saveSharingCtx);\n        }\n        else {\n            // get dashboard with computed share status from backend\n            dashboard = yield call(getDashboard, ctx, saveSharingCtx.persistedDashboard.ref);\n        }\n    }\n    else {\n        dashboard = saveSharingCtx.persistedDashboard;\n    }\n    const setDashboardMetaAction = metaActions.setMeta({ dashboard });\n    const batch = batchActions([setDashboardMetaAction, setDashboardPermissionsAction], \"@@GDC.DASH.SAVE_SHARING\");\n    return {\n        batch,\n        dashboard,\n    };\n}\nexport function* changeSharingHandler(ctx, cmd) {\n    const dashboardRef = yield select(selectDashboardRef);\n    if (!dashboardRef) {\n        throw invalidArgumentsProvided(ctx, cmd, \"Dashboard to change its sharing status must have an ObjRef.\");\n    }\n    const saveSharingCtx = yield call(createDashboardSaveSharingContext, cmd);\n    const result = yield call(saveSharing, ctx, saveSharingCtx);\n    const { batch, dashboard } = result;\n    if (batch) {\n        yield put(batch);\n    }\n    /**\n     * BE might evaluate that share status has changed for the dashboard. When this happens, we want to use the new share status\n     * for further operations to avoid UI inconsistencies.\n     */\n    const updatedDashboardProperties = Object.assign(Object.assign({}, cmd.payload.newSharingProperties), { shareStatus: dashboard.shareStatus });\n    return dashboardSharingChanged(ctx, updatedDashboardProperties, cmd.correlationId);\n}\n//# sourceMappingURL=changeSharingHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { select } from \"redux-saga/effects\";\nimport { filterContextChanged } from \"../../events/filters.js\";\nimport { selectFilterContextDefinition } from \"../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchDashboardEvent } from \"../../store/_infra/eventDispatcher.js\";\nimport { selectEffectiveDateFilterOptions } from \"../../store/dateFilterConfig/dateFilterConfigSelectors.js\";\nimport { findDateFilterOptionByValue } from \"../../../_staging/dateFilterConfig/dateFilterOptionMapping.js\";\nexport function* dispatchFilterContextChanged(ctx, cmd) {\n    const filterContext = yield select(selectFilterContextDefinition);\n    yield dispatchDashboardEvent(filterContextChanged(ctx, filterContext, cmd.correlationId));\n}\nexport function* canApplyDateFilter(dateFilter) {\n    var _a, _b, _c;\n    const effectiveDateFilterOptions = yield select(selectEffectiveDateFilterOptions);\n    const targetOption = findDateFilterOptionByValue(dateFilter, effectiveDateFilterOptions);\n    if (!targetOption) {\n        if (dateFilter.dateFilter.type === \"absolute\") {\n            return !!((_a = effectiveDateFilterOptions === null || effectiveDateFilterOptions === void 0 ? void 0 : effectiveDateFilterOptions.absoluteForm) === null || _a === void 0 ? void 0 : _a.visible);\n        }\n        else if (dateFilter.dateFilter.type === \"relative\") {\n            if (dateFilter.dateFilter.granularity === \"GDC.time.date\" &&\n                dateFilter.dateFilter.from === undefined &&\n                dateFilter.dateFilter.to === undefined) {\n                return !!((_b = effectiveDateFilterOptions === null || effectiveDateFilterOptions === void 0 ? void 0 : effectiveDateFilterOptions.allTime) === null || _b === void 0 ? void 0 : _b.visible);\n            }\n            return !!((_c = effectiveDateFilterOptions === null || effectiveDateFilterOptions === void 0 ? void 0 : effectiveDateFilterOptions.relativeForm) === null || _c === void 0 ? void 0 : _c.visible);\n        }\n    }\n    return !!targetOption;\n}\n//# sourceMappingURL=common.js.map","import { selectAllCatalogAttributesMap } from \"../store/catalog/catalogSelectors.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { newAttributeMap } from \"../../_staging/metadata/objRefMap.js\";\nasync function loadAttributesMetadata(ctx, refs) {\n    if (!refs.length) {\n        return [];\n    }\n    return ctx.backend.workspace(ctx.workspace).attributes().getAttributes(refs);\n}\n/**\n * Given a set of attribute refs (which may be of any type.. uri or id), this function returns a list of\n * attribute metadata objects.\n *\n * @param ctx - dashboard context in which the resolution is done\n * @param refs - ObjRefs of display forms; the type of ObjRef can be either uri or id ref, the function will resolve it regardless\n * @param attributes - specify mapping of attributes to use for in-memory resolution of refs to metadata objects; if\n *  not specified, the generator will retrieve all catalog attributes from state\n */\nexport function* resolveAttributeMetadata(ctx, refs, attributes) {\n    const catalogAttributes = attributes\n        ? attributes\n        : yield select(selectAllCatalogAttributesMap);\n    const resolvedAttributes = [];\n    const tryLoadAttributes = [];\n    refs.forEach((ref) => {\n        const catalogAttribute = catalogAttributes.get(ref);\n        if (catalogAttribute) {\n            resolvedAttributes.push(catalogAttribute.attribute);\n        }\n        else {\n            tryLoadAttributes.push(ref);\n        }\n    });\n    const loadedAttributes = yield call(loadAttributesMetadata, ctx, tryLoadAttributes);\n    const loadedAttributesMap = newAttributeMap(loadedAttributes);\n    const missing = [];\n    tryLoadAttributes.forEach((ref) => {\n        const loadedAttribute = loadedAttributesMap.get(ref);\n        if (loadedAttribute) {\n            resolvedAttributes.push(loadedAttribute);\n        }\n        else {\n            missing.push(ref);\n        }\n    });\n    return {\n        resolved: newAttributeMap(resolvedAttributes),\n        missing,\n    };\n}\n//# sourceMappingURL=attributeResolver.js.map","// (C) 2021-2023 GoodData Corporation\nimport { all, call, put, select } from \"redux-saga/effects\";\nimport { filterContextActions } from \"../../store/filterContext/index.js\";\nimport { selectFilterContextAttributeFilterByDisplayForm, selectFilterContextAttributeFilters, } from \"../../store/filterContext/filterContextSelectors.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { canApplyDateFilter, dispatchFilterContextChanged } from \"./common.js\";\nimport partition from \"lodash/partition.js\";\nimport uniqBy from \"lodash/uniqBy.js\";\nimport compact from \"lodash/compact.js\";\nimport { objRefToString, isUriRef, isAllTimeDashboardDateFilter, isDashboardAttributeFilter, isDashboardDateFilter, updateAttributeElementsItems, getAttributeElementsItems, attributeElementsIsEmpty, isSingleSelectionFilter, isAttributeFilter, isNegativeAttributeFilter, filterObjRef, filterAttributeElements, isAbsoluteDateFilter, newAbsoluteDashboardDateFilter, isAllTimeDateFilter, newAllTimeDashboardDateFilter, isRelativeDateFilter, newRelativeDashboardDateFilter, } from \"@gooddata/sdk-model\";\nimport { NotSupported } from \"@gooddata/sdk-backend-spi\";\nimport { resolveDisplayFormMetadata } from \"../../utils/displayFormResolver.js\";\nimport { resolveAttributeMetadata } from \"../../utils/attributeResolver.js\";\nfunction dashboardFilterToFilterContextItem(filter) {\n    if (isAttributeFilter(filter)) {\n        return {\n            attributeFilter: {\n                negativeSelection: isNegativeAttributeFilter(filter),\n                displayForm: filterObjRef(filter),\n                attributeElements: filterAttributeElements(filter),\n                selectionMode: \"multi\",\n            },\n        };\n    }\n    else if (isAbsoluteDateFilter(filter)) {\n        return newAbsoluteDashboardDateFilter(filter.absoluteDateFilter.from, filter.absoluteDateFilter.to);\n    }\n    else if (isAllTimeDateFilter(filter)) {\n        return newAllTimeDashboardDateFilter();\n    }\n    else if (isRelativeDateFilter(filter)) {\n        return newRelativeDashboardDateFilter(filter.relativeDateFilter.granularity, filter.relativeDateFilter.from, filter.relativeDateFilter.to);\n    }\n    throw new NotSupported(\"Unsupported filter type! Please provide valid dashboard filter.\");\n}\nexport function* changeFilterContextSelectionHandler(ctx, cmd) {\n    const { filters, resetOthers } = cmd.payload;\n    const normalizedFilters = filters.map((filter) => {\n        if (isDashboardAttributeFilter(filter) || isDashboardDateFilter(filter)) {\n            return filter;\n        }\n        else {\n            return dashboardFilterToFilterContextItem(filter);\n        }\n    });\n    const uniqueFilters = uniqBy(normalizedFilters, (filter) => {\n        const identification = isDashboardAttributeFilter(filter)\n            ? filter.attributeFilter.displayForm\n            : filter.dateFilter.dataSet;\n        return identification ? objRefToString(identification) : identification;\n    });\n    const [[dateFilter], attributeFilters] = partition(uniqueFilters, isDashboardDateFilter);\n    const [attributeFilterUpdateActions, dateFilterUpdateActions] = yield all([\n        call(getAttributeFiltersUpdateActions, attributeFilters, resetOthers, ctx),\n        call(getDateFilterUpdateActions, dateFilter, resetOthers),\n    ]);\n    yield put(batchActions([...attributeFilterUpdateActions, ...dateFilterUpdateActions]));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\nfunction* getAttributeFiltersUpdateActions(attributeFilters, resetOthers, ctx) {\n    var _a;\n    const updateActions = [];\n    const handledLocalIds = new Set();\n    const resolvedDisplayForms = yield call(resolveDisplayFormMetadata, ctx, attributeFilters.map((af) => af.attributeFilter.displayForm));\n    for (const attributeFilter of attributeFilters) {\n        const filterRef = attributeFilter.attributeFilter.displayForm;\n        let dashboardFilter = yield select(selectFilterContextAttributeFilterByDisplayForm(filterRef));\n        if (!dashboardFilter && canMapDashboardFilterFromAnotherDisplayForm(ctx)) {\n            if (isUriRef(filterRef) && !ctx.backend.capabilities.supportsObjectUris) {\n                throw new NotSupported(\"Unsupported filter ObjRef! Please provide IdentifierRef instead of UriRef.\");\n            }\n            const filterDF = resolvedDisplayForms.resolved.get(filterRef);\n            const resolvedAttribute = yield call(resolveAttributeMetadata, ctx, compact([filterDF === null || filterDF === void 0 ? void 0 : filterDF.attribute]));\n            const attribute = (filterDF === null || filterDF === void 0 ? void 0 : filterDF.attribute) && resolvedAttribute.resolved.get(filterDF === null || filterDF === void 0 ? void 0 : filterDF.attribute);\n            for (const displayForm of (_a = attribute === null || attribute === void 0 ? void 0 : attribute.displayForms) !== null && _a !== void 0 ? _a : []) {\n                dashboardFilter = yield select(selectFilterContextAttributeFilterByDisplayForm(displayForm.ref));\n                if (dashboardFilter) {\n                    break;\n                }\n            }\n        }\n        if (dashboardFilter) {\n            updateActions.push(filterContextActions.updateAttributeFilterSelection(getAttributeFilterSelectionPayload(attributeFilter, dashboardFilter)));\n            handledLocalIds.add(dashboardFilter.attributeFilter.localIdentifier);\n        }\n    }\n    if (resetOthers) {\n        const currentAttributeFilters = yield select(selectFilterContextAttributeFilters);\n        // for filters that have not been handled by the loop above, create a clear selection actions\n        const unhandledFilters = currentAttributeFilters.filter((filter) => !handledLocalIds.has(filter.attributeFilter.localIdentifier));\n        if (unhandledFilters.length > 0) {\n            updateActions.push(filterContextActions.clearAttributeFiltersSelection({\n                filterLocalIds: unhandledFilters.map((filter) => filter.attributeFilter.localIdentifier),\n            }));\n        }\n    }\n    return updateActions;\n}\nfunction* getDateFilterUpdateActions(dateFilter, resetOthers) {\n    if (dateFilter) {\n        const canApply = yield call(canApplyDateFilter, dateFilter);\n        if (!canApply) {\n            return [];\n        }\n        const upsertPayload = isAllTimeDashboardDateFilter(dateFilter)\n            ? { type: \"allTime\" }\n            : {\n                type: dateFilter.dateFilter.type,\n                granularity: dateFilter.dateFilter.granularity,\n                from: dateFilter.dateFilter.from,\n                to: dateFilter.dateFilter.to,\n            };\n        return [filterContextActions.upsertDateFilter(upsertPayload)];\n    }\n    else if (resetOthers) {\n        return [filterContextActions.upsertDateFilter({ type: \"allTime\" })];\n    }\n    return [];\n}\nconst getAttributeFilterSelectionPayload = (incomingFilter, currentFilter) => {\n    const { attributeElements, negativeSelection } = incomingFilter.attributeFilter;\n    const attributeFilterSelectionPayload = {\n        elements: attributeElements,\n        filterLocalId: currentFilter.attributeFilter.localIdentifier,\n        negativeSelection: negativeSelection,\n    };\n    if (isSingleSelectionFilter(currentFilter)) {\n        if (negativeSelection) {\n            return Object.assign(Object.assign({}, attributeFilterSelectionPayload), { elements: updateAttributeElementsItems(attributeElements, []), negativeSelection: false });\n        }\n        if (!attributeElementsIsEmpty(attributeElements)) {\n            const attributeElementsValues = getAttributeElementsItems(attributeElements);\n            const singleSelectAttributeElements = [attributeElementsValues[0]];\n            return Object.assign(Object.assign({}, attributeFilterSelectionPayload), { elements: updateAttributeElementsItems(attributeElements, singleSelectAttributeElements) });\n        }\n    }\n    return attributeFilterSelectionPayload;\n};\n/**\n *  For Bear:\n *  Attribute element in Bear can be matched because Bear utilizes a unique URI to identify each attribute element.\n *  This URI remains constant regardless of the attribute label (the URI points to the attribute URI rather than the label URI).\n *  In Bear, there are duplicate values, and each label contains the same number of element values.\n *  As a result, we can easily map one value from one label to another, and enabling us to determine the customer's intended selection\n *\n *  For Tiger/Panther:\n *  Attribute elements in Tiger/Panther are referenced solely by the values that the user sees. There is no URI like in Bear.\n *  Only the display value is available in Tiger/Panther. Additionally, Tiger only displays unique values for each label.\n *  In Tiger/Panther, you may observe a varying number of element values in the labels if duplicates are present.\n *  Therefore, mapping one value from one label to another is not straightforward, as it can be mapped to multiple values,\n *  and it is not always possible to ascertain the customer's intended selection.\n */\nfunction canMapDashboardFilterFromAnotherDisplayForm(ctx) {\n    return ctx.backend.capabilities.supportsElementUris;\n}\n//# sourceMappingURL=changeFilterContextSelectionHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nexport async function canFilterBeAdded(ctx, addedDisplayFormRef, allFilters) {\n    // first filter is always ok, save some useless work upfront\n    if (allFilters.length === 0) {\n        return true;\n    }\n    const loadAddedDisplayForm = ctx.backend\n        .workspace(ctx.workspace)\n        .attributes()\n        .getAttributeDisplayForm(addedDisplayFormRef);\n    const loadExistingDisplayForms = ctx.backend\n        .workspace(ctx.workspace)\n        .attributes()\n        .getAttributeDisplayForms(allFilters.map((item) => item.attributeFilter.displayForm));\n    const [addedDisplayForm, existingDisplayForms] = await Promise.all([\n        loadAddedDisplayForm,\n        loadExistingDisplayForms,\n    ]);\n    const attributeFilterRef = addedDisplayForm.attribute;\n    const existingAttributes = existingDisplayForms.map((df) => df.attribute);\n    // lookup has to be in existing Attributes array since we support only one DF for one Attribute\n    return !existingAttributes.some((existing) => areObjRefsEqual(existing, attributeFilterRef));\n}\n//# sourceMappingURL=uniqueFiltersValidation.js.map","// (C) 2021-2022 GoodData Corporation\nimport differenceBy from \"lodash/differenceBy.js\";\nimport zip from \"lodash/zip.js\";\nimport { areObjRefsEqual, objRefToString, } from \"@gooddata/sdk-model\";\nexport async function validateAttributeFilterParents(ctx, dashboardFilter, parents, allFilters, displayFormsMap) {\n    const allExceptValidated = allFilters.filter((item) => !areObjRefsEqual(item.attributeFilter.displayForm, dashboardFilter.attributeFilter.displayForm));\n    // first, validate that the parents only use the filters that are available\n    const allExceptValidatedLocalIds = allExceptValidated.map((item) => item.attributeFilter.localIdentifier);\n    const hasExtraneousParent = parents.some((parent) => !allExceptValidatedLocalIds.includes(parent.filterLocalIdentifier));\n    if (hasExtraneousParent) {\n        return \"EXTRANEOUS_PARENT\";\n    }\n    // then validate that the connecting attributes are valid\n    const parentValidationData = parents.map((parent) => {\n        var _a, _b;\n        const parentFilter = allExceptValidated.find((item) => item.attributeFilter.localIdentifier === parent.filterLocalIdentifier); // the ! is cool here, we validated that the parents are available in the code above\n        const parentAttribute = (_a = displayFormsMap.get(parentFilter.attributeFilter.displayForm)) === null || _a === void 0 ? void 0 : _a.attribute;\n        const dashboardFilterAttribute = (_b = displayFormsMap.get(dashboardFilter.attributeFilter.displayForm)) === null || _b === void 0 ? void 0 : _b.attribute;\n        if (!parentAttribute || !dashboardFilterAttribute) {\n            return undefined;\n        }\n        return {\n            parentOverAttributes: parent.over.attributes,\n            displayFormsToGetAncestorsFor: [dashboardFilterAttribute, parentAttribute],\n        };\n    });\n    if (parentValidationData.some((parent) => parent === undefined)) {\n        return \"INVALID_METADATA\";\n    }\n    const commonAttributeResults = await ctx.backend\n        .workspace(ctx.workspace)\n        .attributes()\n        // the ! is fine here, we validated parentValidationData for empty items above\n        .getCommonAttributesBatch(parentValidationData.map((item) => item.displayFormsToGetAncestorsFor));\n    const validationPairs = zip(parentValidationData.map((item) => item.parentOverAttributes), commonAttributeResults); // we know the lengths match so we cast to get rid on the undefined in teh default typing\n    // connection is valid if all the over attributes are part of the connecting attributes set\n    const areAllConnectionsValid = validationPairs.every(([parentOverAttributes, connectingAttrs]) => differenceBy(parentOverAttributes, connectingAttrs, objRefToString).length === 0);\n    return areAllConnectionsValid ? \"VALID\" : \"INVALID_CONNECTION\";\n}\n//# sourceMappingURL=parentFiltersValidation.js.map","import isEmpty from \"lodash/isEmpty.js\";\nexport function validateSectionPlacement(layout, index) {\n    if (index === -1) {\n        return true;\n    }\n    if (isEmpty(layout.sections) && !index) {\n        return true;\n    }\n    // using <= here so that we can add to the last place not only by using -1 by also by using (lastIndex+1)\n    return index <= layout.sections.length;\n}\nexport function validateSectionExists(layout, index) {\n    return index > -1 && index < layout.sections.length;\n}\nexport function validateItemPlacement(section, index) {\n    if (index === -1) {\n        return true;\n    }\n    if (isEmpty(section.items) && !index) {\n        return true;\n    }\n    // using <= here so that we can add to the last place not only by using -1 by also by using (lastIndex+1)\n    return index <= section.items.length;\n}\nexport function validateItemExists(section, index) {\n    return index > -1 && index < section.items.length;\n}\n//# sourceMappingURL=layoutValidation.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isStashedDashboardItemsId, } from \"../../../types/layoutTypes.js\";\n/**\n * Given layout stash and a list of dashboard item definitions, this function will validate and resolve those\n * item definitions into actual dashboard items that can be added onto the layout.\n *\n * The dashboard item definitions provided as input in the commands may contain mix of actual dashboard items\n * and identifiers of stashes that contain the actual items. This function resolves any stashes that may be\n * included on the input into the actual items and returns them so that the rest of the code does not have\n * to care about the stashes anymore.\n *\n * @param stash - current state of the layout stash\n * @param itemDefinitions - item definitions\n */\nexport function validateAndResolveStashedItems(stash, itemDefinitions) {\n    const result = {\n        missing: [],\n        existing: [],\n        resolved: [],\n        newItemBitmap: [],\n    };\n    itemDefinitions.forEach((item) => {\n        if (!isStashedDashboardItemsId(item)) {\n            result.resolved.push(item);\n            result.newItemBitmap.push(true);\n            return;\n        }\n        if (stash[item] !== undefined) {\n            result.existing.push(item);\n            result.resolved.push(...stash[item]);\n            result.newItemBitmap.push(...stash[item].map((_) => false));\n        }\n        else {\n            result.missing.push(item);\n        }\n    });\n    return result;\n}\n//# sourceMappingURL=stashValidation.js.map","/**\n * Creates action through which you can query dashboard component for information about the date data sets\n * that are applicable for the provided insight.\n *\n * @param insightOrRef - insight body or a reference to an insight. if the reference is provided, then it is expected\n *  to be a reference of an insight that is already placed on a dashboard\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @alpha\n */\nexport function queryDateDatasetsForInsight(insightOrRef, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.INSIGHT.DATE.DATASETS\",\n        correlationId,\n        payload: {\n            insightOrRef,\n        },\n    };\n}\n/**\n * Given results of a query of date datasets available to use for filtering an insight, this function will\n * pick a single date dataset to use.\n *\n * @param queryResult - insight date datasets query result\n * @alpha\n */\nexport function insightSelectDateDataset(queryResult) {\n    const { mostImportantFromInsight, dateDatasetsOrdered } = queryResult;\n    return mostImportantFromInsight !== null && mostImportantFromInsight !== void 0 ? mostImportantFromInsight : dateDatasetsOrdered[0];\n}\n/**\n * Creates action thought which you can query dashboard component for information about display forms and\n * attributes used by an insight.\n *\n * @param insightOrRef - insight body or a reference to an insight on the dashboard\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @alpha\n */\nexport function queryInsightAttributesMeta(insightOrRef, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.INSIGHT.ATTRIBUTE.META\",\n        correlationId,\n        payload: {\n            insightOrRef,\n        },\n    };\n}\n//# sourceMappingURL=insights.js.map","/**\n * Creates action through which you can query dashboard component for information about the date data sets\n * that are applicable for filtering of the provided measure. measures are typically used to obtain value to render on KPIs.\n *\n * @param measureRef - reference to measure\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @alpha\n */\nexport function queryDateDatasetsForMeasure(measureRef, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.MEASURE.DATE.DATASETS\",\n        correlationId,\n        payload: {\n            measureRef,\n        },\n    };\n}\n//# sourceMappingURL=kpis.js.map","// (C) 2021-2022 GoodData Corporation\nimport { actionChannel, call, spawn, take } from \"redux-saga/effects\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport fromPairs from \"lodash/fromPairs.js\";\nimport noop from \"lodash/noop.js\";\nimport compact from \"lodash/compact.js\";\nimport { dispatchDashboardEvent } from \"./eventDispatcher.js\";\nimport { internalQueryErrorOccurred, isDashboardQueryFailed, queryCompleted, queryRejected, queryStarted, } from \"../../events/general.js\";\nimport { getDashboardContext } from \"./contexts.js\";\n/**\n * @internal\n */\nexport const QueryEnvelopeActionPrefix = \"__Q\";\nfunction isQueryEnvelope(obj) {\n    return !!obj && obj.type.startsWith(QueryEnvelopeActionPrefix);\n}\n/**\n * @internal\n */\nexport function queryEnvelope(query, eventHandlers, refresh = false) {\n    var _a, _b, _c;\n    return {\n        type: `${QueryEnvelopeActionPrefix}(${query.type})`,\n        query,\n        refresh,\n        onError: (_a = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onError) !== null && _a !== void 0 ? _a : noop,\n        onStart: (_b = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onStart) !== null && _b !== void 0 ? _b : noop,\n        onSuccess: (_c = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onSuccess) !== null && _c !== void 0 ? _c : noop,\n    };\n}\n/**\n * @internal\n */\nexport function queryEnvelopeWithPromise(query, refresh = false) {\n    const queryEnvelopeEventHandlers = {};\n    const promise = new Promise((resolve, reject) => {\n        queryEnvelopeEventHandlers.onSuccess = resolve;\n        queryEnvelopeEventHandlers.onError = reject;\n    });\n    const envelope = queryEnvelope(query, queryEnvelopeEventHandlers, refresh);\n    return {\n        promise,\n        envelope,\n    };\n}\nfunction* processQuery(service, ctx, envelope) {\n    var _a;\n    const { query, query: { type, correlationId }, } = envelope;\n    const correlationIdForLog = correlationId !== null && correlationId !== void 0 ? correlationId : \"(no correlationId provided)\";\n    try {\n        try {\n            envelope.onStart(query);\n        }\n        catch (e) {\n            console.warn(`An error has occurred while calling onStart function provided for ${type}@${correlationIdForLog} processing:`, e);\n        }\n        yield dispatchDashboardEvent(queryStarted(ctx, query, correlationId));\n        const result = yield call(service.generator, ctx, envelope.query, (_a = envelope.refresh) !== null && _a !== void 0 ? _a : false);\n        try {\n            envelope.onSuccess(result);\n        }\n        catch (e) {\n            console.warn(`An error has occurred while calling onSuccess function provided for ${type}@${correlationIdForLog} processing`, e);\n        }\n        yield dispatchDashboardEvent(queryCompleted(ctx, query, result, correlationId));\n    }\n    catch (e) {\n        try {\n            envelope.onError(e);\n        }\n        catch (ne) {\n            console.warn(`An error has occurred while calling onError function provided for ${type}@${correlationIdForLog} processing:`, ne);\n        }\n        if (isDashboardQueryFailed(e)) {\n            yield dispatchDashboardEvent(e);\n        }\n        else {\n            yield dispatchDashboardEvent(internalQueryErrorOccurred(ctx, `An internal error has occurred while processing ${type}`, e, correlationId));\n        }\n    }\n}\nfunction ensureQueryWrappedInEnvelope(action) {\n    return isQueryEnvelope(action) ? action : queryEnvelope(action);\n}\n/**\n * Creates components that should be integrated into the dashboard store in order to facilitate query processing.\n *\n * @param queryServices - query services use to initialize the components\n */\nexport function createQueryProcessingModule(queryServices) {\n    const servicesByType = keyBy(queryServices, (service) => service.name);\n    const queryToReducers = fromPairs(compact(queryServices.map((service) => {\n        if (!service.cache) {\n            return null;\n        }\n        return [service.cache.cacheName, service.cache.reducer];\n    })));\n    return {\n        queryCacheReducer: combineReducers(queryToReducers),\n        /*\n         * The root saga for all query processing. This will channel in all query envelopes and all non-enveloped\n         * queries and will dispatch the query\n         */\n        rootQueryProcessor: function* () {\n            const queryChannel = yield actionChannel((action) => action.type &&\n                (action.type.startsWith(QueryEnvelopeActionPrefix) ||\n                    action.type.startsWith(\"GDC.DASH/QUERY.\")));\n            while (true) {\n                const query = yield take(queryChannel);\n                const envelope = ensureQueryWrappedInEnvelope(query);\n                const dashboardContext = yield call(getDashboardContext);\n                const service = servicesByType[envelope.query.type];\n                if (!service) {\n                    yield dispatchDashboardEvent(queryRejected(dashboardContext, envelope.query.correlationId));\n                }\n                else {\n                    yield spawn(processQuery, service, dashboardContext, envelope);\n                }\n            }\n        },\n    };\n}\n//# sourceMappingURL=queryProcessing.js.map","// (C) 2021-2022 GoodData Corporation\nimport { queryEnvelopeWithPromise } from \"./queryProcessing.js\";\nimport { call, put } from \"redux-saga/effects\";\n/**\n * Runs the provided query and returns its result.\n *\n * @param q - query to run\n * @param refresh - indicates whether the query should ignore cached results and re-load data from backend\n */\nexport function* query(q, refresh = false) {\n    const { promise, envelope } = queryEnvelopeWithPromise(q, refresh);\n    const waitForResult = () => {\n        return promise;\n    };\n    /*\n     * dispatch the enveloped query. the envelope is setup so that upon query finish a promise will be resolved\n     */\n    yield put(envelope);\n    return yield call(waitForResult);\n}\n/**\n * Runs the provided query, forcing refresh of any results that may be cached in the state, and returns its result.\n *\n * @param q - query to run\n */\nexport function* queryFresh(q) {\n    return yield call(query, q, true);\n}\n//# sourceMappingURL=queryCall.js.map","// (C) 2021-2022 GoodData Corporation\nimport { queryDateDatasetsForInsight, queryDateDatasetsForMeasure, } from \"../../../queries/index.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { query } from \"../../../store/_infra/queryCall.js\";\nimport { newCatalogDateDatasetMap } from \"../../../../_staging/metadata/objRefMap.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { areObjRefsEqual, objRefToString, } from \"@gooddata/sdk-model\";\nimport { resolveDisplayFormMetadata } from \"../../../utils/displayFormResolver.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { selectFilterContextAttributeFilters } from \"../../../store/filterContext/filterContextSelectors.js\";\n/**\n * This generator validates that a date dataset with the provided ref can be used for date filtering of insight in\n * particular insight widget. If the result is positive, a catalog entry of the date dataset will be returned.\n *\n * If the result is negative a DashboardCommandFailed will be thrown.\n *\n * The validation will trigger the QueryInsightDateDatasets to obtain a list of all available, valid date datasets for\n * the insight widget - that's where the actual complex logic takes place.\n *\n * Note that the query is a cached query - first execution will cache all available date dataset information in state and\n * the subsequent calls will be instant.\n *\n * @param ctx - dashboard context in which the validation is done\n * @param cmd - dashboard command it the context of which the validation is done\n * @param widget - insight that whose date filter is about to change\n * @param dateDataSet - ref of a date dataset to validate\n * @param resolvedInsight - specify entire insight used by the insight widget; if provided, the query\n *  to obtain date datasets for the insight will use insight instead of looking up insight ref in the current dashboard state.\n *  Passing resolved insight is essential in cases when this validation is done before the insight widget\n *  is actually added onto dashboard - because in that case the insight itself is not yet part of the state and\n *  the query is limited (intentionally) to query only by refs of insights that are on the dashboard\n */\nexport function* validateDatasetForInsightWidgetDateFilter(ctx, cmd, widget, dateDataSet, resolvedInsight) {\n    const insightDateDatasets = yield call(query, queryDateDatasetsForInsight(resolvedInsight ? resolvedInsight : widget.insight));\n    const catalogDataSet = newCatalogDateDatasetMap(insightDateDatasets.allAvailableDateDatasets).get(dateDataSet);\n    if (!catalogDataSet) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to use date dataset ${objRefToString(dateDataSet)}\n            to filter insight widget ${objRefToString(widget.ref)} but the data set either does not exist or\n            is not valid to use for filtering the insight.`);\n    }\n    return catalogDataSet;\n}\n/**\n * This generator validates that a date dataset with the provided ref can be used for date filtering of a particular\n * KPI widget. If the result is positive, a normalized ref of the date dataset will be returned - this ref\n * should be used going forward, stored in state etc etc. If the result is negative a DashboardCommandFailed will be\n * thrown.\n *\n * The validation will trigger the QueryInsightDateDatasets to obtain a list of all available, valid date datasets for\n * the insight widget - that's where the actual complex logic takes place.\n *\n * Note that the query is a cached query - first execution will cache all available date dataset information in state and\n * the subsequent calls will be instant.\n *\n * @param ctx - dashboard context in which the validation is done\n * @param cmd - dashboard command it the context of which the validation is done\n * @param widget - insight that whose date filter is about to change\n * @param dateDataSet - ref of a date dataset to validate\n */\nexport function* validateDatasetForKpiWidgetDateFilter(ctx, cmd, widget, dateDataSet) {\n    const measureDateDatasets = yield call(query, queryDateDatasetsForMeasure(widget.kpi.metric));\n    const catalogDataSet = newCatalogDateDatasetMap(measureDateDatasets.dateDatasets).get(dateDataSet);\n    if (!catalogDataSet) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to use date dataset ${objRefToString(dateDataSet)}\n            to filter insight widget ${objRefToString(widget.ref)} but the data set either does not exist or\n            is not valid to use for filtering the insight.`);\n    }\n    return catalogDataSet;\n}\n/**\n * This generator validates whether it is possible to disable attribute filtering based on the refs of attribute display forms.\n * The validation is not widget-specific - it does not need any info from the widget. It validates that the display forms\n * used to specify filters to ignore are valid and that they are actually used in attribute filters that are currently\n * on the dashboard.\n *\n * If the result is positive, a list of normalized display form refs will be returned - these refs should be used going forward, stored in state etc. If the\n * result is negative a DashboardCommandFailed will be thrown.\n *\n * The validation may be trigger asynchronous processing when a display form cannot be resolved directly from the workspace\n * catalog that is stored in state. This can happen in two cases:\n *\n * -  ref is for a display form that is not part of production workspace catalog that is stored in the state; for instance\n *    happens when there are CSV, non-production datasets loaded and used on some of the dashboard insights\n * -  ref is for a bogus display form; code must check on backend and will find that backend has no such display form\n *    and will eventually bomb\n *\n * @param ctx - dashboard context in which the validation is done\n * @param cmd - dashboard command in the context of which the validation is done\n * @param _widget - widget on which the filters should be ignored\n * @param toIgnore - refs of display forms used in attribute filters that should be ignored\n */\nexport function* validateAttributeFiltersToIgnore(ctx, cmd, _widget, toIgnore) {\n    const resolvedDisplayForms = yield call(resolveDisplayFormMetadata, ctx, toIgnore);\n    const { missing, resolved } = resolvedDisplayForms;\n    if (!isEmpty(missing)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to disable attribute filters but some of the display form refs to disable filters by do not exist: ${missing\n            .map(objRefToString)\n            .join(\", \")}`);\n    }\n    const existingFilters = yield select(selectFilterContextAttributeFilters);\n    const badIgnores = [];\n    const filtersToIgnore = [];\n    for (const toIgnore of resolved.values()) {\n        const filterForDisplayForm = existingFilters.find((filter) => areObjRefsEqual(filter.attributeFilter.displayForm, toIgnore.ref));\n        if (!filterForDisplayForm) {\n            badIgnores.push(toIgnore.ref);\n        }\n        else {\n            filtersToIgnore.push(filterForDisplayForm);\n        }\n    }\n    if (!isEmpty(badIgnores)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to disable attribute filters but some of the display form refs to disable filters by are not used for filtering at all: ${badIgnores\n            .map(objRefToString)\n            .join(\", \")}`);\n    }\n    return filtersToIgnore;\n}\n//# sourceMappingURL=filterValidation.js.map","import { areObjRefsEqual, insightRef, objRefToString, isDashboardAttributeFilterReference, isKpiWidget, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { resolveInsights } from \"../../../utils/insightResolver.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { extractInsightRefsFromItems } from \"../../../utils/dashboardItemUtils.js\";\nimport { insightSelectDateDataset, queryDateDatasetsForInsight, queryDateDatasetsForMeasure, } from \"../../../queries/index.js\";\nimport { query } from \"../../../store/_infra/queryCall.js\";\nimport { validateAttributeFiltersToIgnore, validateDatasetForInsightWidgetDateFilter, validateDatasetForKpiWidgetDateFilter, } from \"../../widgets/validation/filterValidation.js\";\nimport { selectFilterContextAttributeFilters } from \"../../../store/filterContext/filterContextSelectors.js\";\nfunction normalizeItems(items, insights) {\n    return items.map((item) => {\n        if (isInsightWidget(item.widget)) {\n            const existingInsight = insights.get(item.widget.insight);\n            invariant(existingInsight);\n            return Object.assign(Object.assign({}, item), { widget: Object.assign(Object.assign({}, item.widget), { insight: insightRef(existingInsight) }) });\n        }\n        return item;\n    });\n}\n/**\n * Given resolved items that should be added onto a dashboard, this function will ensure that items that reference\n * either KPI or Insight widgets reference valid insights or measures.\n *\n * Once the validity of used insights and measures is established, the code will additionally normalize the widget\n * definitions so that they use the native object `ref`s included in the referenced objects.\n *\n * This generator function will consult with backend on the existence of insights and measures if they are not\n * already stored in the state. If an insight is not found in the state but is available on the backend, the\n * insight will be retrieved and returned in the final validation result.\n */\nexport function* validateAndNormalizeWidgetItems(ctx, items, cmd) {\n    const insightRefs = extractInsightRefsFromItems(items.resolved);\n    const resolvedInsights = yield call(resolveInsights, ctx, insightRefs);\n    if (!isEmpty(resolvedInsights.missing)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to add dashboard items that reference missing insights: ${resolvedInsights.missing\n            .map(objRefToString)\n            .join(\", \")}`);\n    }\n    return {\n        normalizedItems: Object.assign(Object.assign({}, items), { resolved: normalizeItems(items.resolved, resolvedInsights.resolved) }),\n        resolvedInsights,\n    };\n}\nfunction* validateAndResolveInsightWidgetFilters(ctx, cmd, widget, autoDateDataset, resolvedInsight) {\n    var _a;\n    const ignoredFilterRefs = widget.ignoreDashboardFilters\n        .filter(isDashboardAttributeFilterReference)\n        .map((f) => f.displayForm);\n    yield call(validateAttributeFiltersToIgnore, ctx, cmd, widget, ignoredFilterRefs);\n    if (widget.dateDataSet) {\n        yield call(validateDatasetForInsightWidgetDateFilter, ctx, cmd, widget, widget.dateDataSet, resolvedInsight);\n        return widget;\n    }\n    else if (autoDateDataset) {\n        const insightDateDatasets = yield call(query, queryDateDatasetsForInsight(resolvedInsight));\n        return Object.assign(Object.assign({}, widget), { dateDataSet: (_a = insightSelectDateDataset(insightDateDatasets)) === null || _a === void 0 ? void 0 : _a.dataSet.ref });\n    }\n    else {\n        return widget;\n    }\n}\nfunction* validateAndResolveKpiFilters(ctx, cmd, widget, autoDateDataset) {\n    var _a;\n    const ignoredFilterRefs = widget.ignoreDashboardFilters\n        .filter(isDashboardAttributeFilterReference)\n        .map((f) => f.displayForm);\n    yield call(validateAttributeFiltersToIgnore, ctx, cmd, widget, ignoredFilterRefs);\n    if (widget.dateDataSet) {\n        yield call(validateDatasetForKpiWidgetDateFilter, ctx, cmd, widget, widget.dateDataSet);\n        return widget;\n    }\n    else if (autoDateDataset) {\n        const measureDateDatasets = yield call(query, queryDateDatasetsForMeasure(widget.kpi.metric));\n        return Object.assign(Object.assign({}, widget), { dateDataSet: (_a = measureDateDatasets.dateDatasetsOrdered[0]) === null || _a === void 0 ? void 0 : _a.dataSet.ref });\n    }\n    else {\n        return widget;\n    }\n}\nfunction removeObsoleteAttributeFilterIgnores(widget, attributeFilters) {\n    const onlyExistingFilterIgnores = widget.ignoreDashboardFilters.filter((filterRef) => {\n        if (isDashboardAttributeFilterReference(filterRef)) {\n            return attributeFilters.find((filter) => areObjRefsEqual(filter.attributeFilter.displayForm, filterRef.displayForm));\n        }\n        return true;\n    });\n    return Object.assign(Object.assign({}, widget), { ignoreDashboardFilters: onlyExistingFilterIgnores });\n}\n/**\n * This generator function will ensure that Insight and KPI widgets that are included in the `items`\n * have valid filter settings:\n *\n * -  the date dataset to use for filtering is correct\n * -  the attribute filters to ignore are correct and reference existing attribute filters\n *\n * Additionally, if the widget does not have dateDataSet to use for filtering set AND the `autoDateDataset` is true,\n * the generator will automatically update the widget with date dataset to use for filtering. It does this by\n * performing the necessary query to obtain relevant date dataset and then picking the most relevant one.\n *\n * @param ctx - dashboard context in which filter validation & resolution is done\n * @param items - items that are about to be added to the dashboard\n * @param cmd - command that is adding the items to the dashboard\n * @param autoDateDataset - indicates whether to automatically resolve and set date dataset to use for filtering for\n * KPI and Insight widgets.\n */\nexport function* validateAndResolveItemFilterSettings(ctx, cmd, items, autoDateDataset = false) {\n    const attributeFilters = yield select(selectFilterContextAttributeFilters);\n    const { resolvedInsights, normalizedItems } = items;\n    const updatedItems = [];\n    let i = 0;\n    for (const item of normalizedItems.resolved) {\n        const widget = item.widget;\n        const isNew = normalizedItems.newItemBitmap[i];\n        if (!isNew) {\n            /*\n             * processing an existing item; this is the case when some items from the layout got stashed and\n             * are now being retrieved from stash and added back onto the dashboard.\n             *\n             * the stashed items were already thoroughly validated & normalized the first time they were added onto the\n             * dashboard so the code does not have to re-do all the validations.\n             */\n            if (isInsightWidget(widget) || isKpiWidget(widget)) {\n                /*\n                 * Insight and KPI widgets may be set to ignore some attribute filters. validation must check\n                 * that any ignored filters on the stashed item are still present on the filter context.\n                 *\n                 * Any ignored filters that are obsolete can be safely removed.\n                 */\n                const updatedWidget = removeObsoleteAttributeFilterIgnores(widget, attributeFilters);\n                updatedItems.push(Object.assign(Object.assign({}, item), { widget: updatedWidget }));\n            }\n            else {\n                updatedItems.push(item);\n            }\n        }\n        else {\n            if (isInsightWidget(widget)) {\n                const resolvedInsight = resolvedInsights.resolved.get(widget.insight);\n                // if code gets here and the insight for the widget is not found it means either the resolution logic\n                // or the logic to verify resolution result has failed. normally if insight widget references missing\n                // insight the handler should find this and fail way sooner\n                invariant(resolvedInsight);\n                const updatedWidget = yield call(validateAndResolveInsightWidgetFilters, ctx, cmd, widget, autoDateDataset, resolvedInsight);\n                updatedItems.push(Object.assign(Object.assign({}, item), { widget: updatedWidget }));\n            }\n            else if (isKpiWidget(widget)) {\n                const updatedWidget = yield call(validateAndResolveKpiFilters, ctx, cmd, widget, autoDateDataset);\n                updatedItems.push(Object.assign(Object.assign({}, item), { widget: updatedWidget }));\n            }\n            else {\n                updatedItems.push(item);\n            }\n        }\n        i++;\n    }\n    return updatedItems;\n}\n//# sourceMappingURL=itemValidation.js.map","/**\n * @internal\n */\nexport function sanitizeHeader(header) {\n    // get rid of empty values in header altogether\n    return (header && Object.assign(Object.assign({}, (header.description && { description: header.description })), (header.title && { title: header.title })));\n}\n//# sourceMappingURL=utils.js.map","import { dispatchDashboardEvent } from \"../../store/_infra/eventDispatcher.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateItemExists, validateSectionExists } from \"./validation/layoutValidation.js\";\nimport { layoutSectionItemRemoved, layoutSectionRemoved } from \"../../events/layout.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nfunction validateAndResolve(commandCtx) {\n    const { ctx, cmd: { payload: { sectionIndex, itemIndex }, }, layout, } = commandCtx;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.originalCmd, `Attempting to remove item from non-existent section at ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    const fromSection = layout.sections[sectionIndex];\n    if (!validateItemExists(fromSection, itemIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.originalCmd, `Attempting to remove non-existent item from index ${itemIndex} in section ${sectionIndex}. There are only ${fromSection.items.length} items in this section.`);\n    }\n    const itemToRemove = fromSection.items[itemIndex];\n    return {\n        fromSection,\n        itemToRemove,\n    };\n}\nexport function* removeSectionItemHandler(ctx, cmd) {\n    return yield call(removeSectionItemSaga, ctx, cmd);\n}\nexport function* removeSectionItemSaga(ctx, cmd, originalCmd = cmd) {\n    const commandCtx = {\n        ctx,\n        cmd,\n        originalCmd,\n        layout: yield select(selectLayout),\n    };\n    const { fromSection, itemToRemove } = validateAndResolve(commandCtx);\n    const { sectionIndex, itemIndex, eager, stashIdentifier } = cmd.payload;\n    if (eager && fromSection.items.length === 1) {\n        yield put(layoutActions.removeSection({\n            index: sectionIndex,\n            stashIdentifier,\n            undo: {\n                cmd: originalCmd,\n            },\n        }));\n        // normally should do select to get state after the update, however this update is straightforward\n        // and can be reconstructed no-problem here.\n        const sectionWithEmptyItems = Object.assign(Object.assign({}, fromSection), { items: [] });\n        yield dispatchDashboardEvent(layoutSectionItemRemoved(ctx, itemToRemove, itemIndex, sectionWithEmptyItems, stashIdentifier, cmd.correlationId));\n        yield dispatchDashboardEvent(layoutSectionRemoved(ctx, sectionWithEmptyItems, sectionIndex, true, undefined, cmd.correlationId));\n    }\n    else {\n        yield put(layoutActions.removeSectionItem({\n            sectionIndex,\n            itemIndex,\n            stashIdentifier,\n            undo: {\n                cmd: originalCmd,\n            },\n        }));\n        yield dispatchDashboardEvent(layoutSectionItemRemoved(ctx, itemToRemove, itemIndex, undefined, stashIdentifier, cmd.correlationId));\n    }\n}\n//# sourceMappingURL=removeSectionItemHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout, selectUndoableLayoutCommands } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutChanged } from \"../../events/layout.js\";\n/*\n * Default impl returns 0 -> meaning drop everything that the latest command achieved.\n */\nconst latestCommandUndoSelector = (_cmds) => {\n    return 0;\n};\nexport function* undoLayoutChangesHandler(ctx, cmd) {\n    const undoableCommands = yield select(selectUndoableLayoutCommands);\n    const { undoPointSelector = latestCommandUndoSelector } = cmd.payload;\n    const undoUpToIncludingCmd = undoPointSelector(undoableCommands.map((entry) => entry.cmd));\n    if (undoUpToIncludingCmd < 0 || undoUpToIncludingCmd >= undoableCommands.length) {\n        throw invalidArgumentsProvided(ctx, cmd, `Undo point selector returned result out of bounds. Undoable commands: ${undoableCommands.length}. Got index: ${undoUpToIncludingCmd}`);\n    }\n    const selectedCommand = undoableCommands[undoUpToIncludingCmd];\n    yield put(layoutActions.undoLayout({\n        undoDownTo: selectedCommand.firstOccurrenceOnStack,\n    }));\n    const layout = yield select(selectLayout);\n    return layoutChanged(ctx, layout, cmd.correlationId);\n}\n//# sourceMappingURL=undoLayoutChangesHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { serializeObjRef, isKpiWidget, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\n/**\n * Given list of all dashboard widgets and a command that contains a ref, this function tests that the `ref` is\n * a reference to an existing dashboard widget and that the existing widget is an insight widget.\n *\n * If the validation succeeds, the located insight widget will be returned. Otherwise an error will fly. The error\n * will be an instance of DashboardCommandFailed event - it can be propagated through the command handler all the\n * way to the root command handler saga.\n *\n * @param ctx - dashboard context, this will be included in the DashboardCommandFailed event\n * @param widgets - map of widgets on the dashboard\n * @param cmd - any command that has 'ref' in its payload\n */\nexport function validateExistingInsightWidget(widgets, cmd, ctx) {\n    const { payload: { ref }, } = cmd;\n    const widget = widgets.get(ref);\n    if (!widget) {\n        throw invalidArgumentsProvided(ctx, cmd, `Cannot find insight widget with ref: ${serializeObjRef(ref)}.`);\n    }\n    if (!isInsightWidget(widget)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Widget with ref: ${serializeObjRef(ref)} exists but is not an insight widget.`);\n    }\n    return widget;\n}\n/**\n * Given list of all dashboard widgets and a command that contains a ref, this function tests that the `ref` is\n * a reference to an existing dashboard widget and that the existing widget is a KPI widget.\n *\n * If the validation succeeds, the located KPI widget will be returned. Otherwise an error will fly. The error\n * will be an instance of DashboardCommandFailed event - it can be propagated through the command handler all the\n * way to the root command handler saga.\n *\n * @param ctx - dashboard context, this will be included in the DashboardCommandFailed event\n * @param widgets - map of widgets on the dashboard\n * @param cmd - any command that has 'ref' in its payload\n */\nexport function validateExistingKpiWidget(widgets, cmd, ctx) {\n    const { payload: { ref }, } = cmd;\n    const widget = widgets.get(ref);\n    if (!widget) {\n        throw invalidArgumentsProvided(ctx, cmd, `Cannot find insight widget with ref: ${serializeObjRef(ref)}.`);\n    }\n    if (!isKpiWidget(widget)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Widget with ref: ${serializeObjRef(ref)} exists but is not a KPI widget.`);\n    }\n    return widget;\n}\n//# sourceMappingURL=widgetValidations.js.map","import { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { kpiWidgetMeasureChanged } from \"../../events/kpi.js\";\nimport { selectAllCatalogMeasuresMap } from \"../../store/catalog/catalogSelectors.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { isWidgetHeader } from \"../../types/widgetTypes.js\";\nimport { queryDateDatasetsForMeasure } from \"../../queries/index.js\";\nimport { query } from \"../../store/_infra/queryCall.js\";\nimport { newCatalogDateDatasetMap } from \"../../../_staging/metadata/objRefMap.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nfunction* validateMeasure(ctx, cmd) {\n    const { payload: { measureRef }, } = cmd;\n    const measures = yield select(selectAllCatalogMeasuresMap);\n    const measure = measures.get(measureRef);\n    if (!measure) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to use non-existent measure for KPI widget. ${objRefToString(measureRef)} does not exist.`);\n    }\n    return measure;\n}\nfunction determineHeaderToUse(cmd, measure) {\n    const { payload: { header }, } = cmd;\n    if (typeof header === \"string\" && header === \"from-measure\") {\n        return {\n            title: measure.measure.title,\n        };\n    }\n    else if (isWidgetHeader(header)) {\n        return header;\n    }\n    return undefined;\n}\nfunction* determineDateDatasetToUse(widget, measure) {\n    if (!widget.dateDataSet) {\n        return undefined;\n    }\n    const measureDateDatasets = yield call(query, queryDateDatasetsForMeasure(measure.measure.ref));\n    const catalogDataSet = newCatalogDateDatasetMap(measureDateDatasets.dateDatasets).get(widget.dateDataSet);\n    if (!catalogDataSet) {\n        if (!isEmpty(measureDateDatasets.dateDatasetsOrdered)) {\n            return measureDateDatasets.dateDatasetsOrdered[0];\n        }\n        return undefined;\n    }\n    return catalogDataSet;\n}\n/**\n * When switching measure used by the KPI the handler needs to deal with several things:\n *\n * -  Input validation; both KPI widget and the new measure must be valid\n * -  Determining what header to use for the KPI. The header may come either as part of the command or command may\n *    indicate to automatically use title from measure OR the command may not provide any header in which case the\n *    old header will be retained\n * -  Determining what date dataset to use for filtering. Different measures can use different date datasets for\n *    filtering - the existing dateDataSet setting on the KPI widget may not be valid in the context of the\n *    new measure.\n *\n *    Thus the command triggers logic (in generator) to query available date datasets for the metric, check if the\n *    existing dateDataSet is among the results of the query. If so, the existing date dataset will be kept. Otherwise\n *    code will pick the most-relevant date dataset.\n *\n *    If the KPI is not setup with date dataset, then nothing happens.\n *\n *\n */\nexport function* changeKpiWidgetMeasureHandler(ctx, cmd) {\n    const { correlationId } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    const measure = yield call(validateMeasure, ctx, cmd);\n    const header = determineHeaderToUse(cmd, measure);\n    const dateDataset = yield call(determineDateDatasetToUse, kpiWidget, measure);\n    const actions = [\n        layoutActions.replaceKpiWidgetMeasure({\n            ref: kpiWidget.ref,\n            measureRef: measure.measure.ref,\n            undo: {\n                cmd,\n            },\n        }),\n        layoutActions.replaceWidgetDateDataset({\n            ref: kpiWidget.ref,\n            dateDataSet: dateDataset === null || dateDataset === void 0 ? void 0 : dateDataset.dataSet.ref,\n            undo: {\n                cmd,\n            },\n        }),\n    ];\n    if (header) {\n        actions.push(layoutActions.replaceWidgetHeader({\n            ref: kpiWidget.ref,\n            header,\n            undo: {\n                cmd,\n            },\n        }));\n    }\n    yield put(batchActions(actions, \"@@CMD.UPDATE.KPI\"));\n    const updatedWidgets = yield select(selectWidgetsMap);\n    const updatedKpiWidget = updatedWidgets.get(kpiWidget.ref);\n    return kpiWidgetMeasureChanged(ctx, kpiWidget.ref, updatedKpiWidget, measure.measure, header, correlationId);\n}\n//# sourceMappingURL=changeKpiWidgetMeasureHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { areObjRefsEqual, isDashboardAttributeFilterReference, isInsightWidget, isKpiWidget, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { call, select } from \"redux-saga/effects\";\nimport { selectFilterContextAttributeFilters } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { selectAllCatalogDateDatasetsMap } from \"../../../store/catalog/catalogSelectors.js\";\nimport { query } from \"../../../store/_infra/queryCall.js\";\nimport { insightSelectDateDataset, queryDateDatasetsForInsight, queryDateDatasetsForMeasure, } from \"../../../queries/index.js\";\nfunction toAttributeDisplayFormRefs(references) {\n    return references.filter(isDashboardAttributeFilterReference).map((reference) => reference.displayForm);\n}\nfunction getIgnoredAttributeFilters(filters, ignored) {\n    const ignoredRefs = toAttributeDisplayFormRefs(ignored);\n    return filters.filter((filter) => {\n        return ignoredRefs.some((ref) => areObjRefsEqual(filter.attributeFilter.displayForm, ref));\n    });\n}\nfunction* replaceFilterSettings(ctx, validators, cmd, widget, op) {\n    let dateDataSet;\n    if (op.dateDatasetForFiltering) {\n        dateDataSet = yield call(validators.dateDatasetValidator, ctx, cmd, widget, op.dateDatasetForFiltering);\n    }\n    let ignoredFilters = undefined;\n    if (op.ignoreAttributeFilters) {\n        ignoredFilters = yield call(validators.attributeFilterValidator, ctx, cmd, widget, op.ignoreAttributeFilters);\n    }\n    return {\n        dateDataSet,\n        ignoredFilters,\n    };\n}\nfunction* changeDateFilterIgnore(widget, dateDataSet) {\n    const attributeFilters = yield select(selectFilterContextAttributeFilters);\n    const ignoredFilters = getIgnoredAttributeFilters(attributeFilters, widget.ignoreDashboardFilters);\n    return {\n        dateDataSet,\n        ignoredFilters,\n    };\n}\nfunction* disableDateFilter(_ctx, _validators, _cmd, widget) {\n    const result = yield call(changeDateFilterIgnore, widget, undefined);\n    return result;\n}\nfunction* enableDateFilter(ctx, validators, cmd, widget, op) {\n    let dateDatasetToUse;\n    if (op.dateDataset === \"default\") {\n        if (isInsightWidget(widget)) {\n            const queryResult = yield call(query, queryDateDatasetsForInsight(widget.insight));\n            dateDatasetToUse = insightSelectDateDataset(queryResult);\n        }\n        else if (isKpiWidget(widget)) {\n            const queryResult = yield call(query, queryDateDatasetsForMeasure(widget.kpi.metric));\n            dateDatasetToUse = queryResult.dateDatasetsOrdered[0];\n        }\n        else {\n            invariant(false, \"Cannot use default date dataset for custom widgets\");\n        }\n    }\n    else {\n        dateDatasetToUse = yield call(validators.dateDatasetValidator, ctx, cmd, widget, op.dateDataset);\n    }\n    const result = yield call(changeDateFilterIgnore, widget, dateDatasetToUse);\n    return result;\n}\nfunction* changeAttributeIgnores(widget, newlyIgnoredFilters) {\n    const dateDataSetMap = yield select(selectAllCatalogDateDatasetsMap);\n    const dateDataSet = widget.dateDataSet ? dateDataSetMap.get(widget.dateDataSet) : undefined;\n    return {\n        dateDataSet,\n        ignoredFilters: newlyIgnoredFilters,\n    };\n}\nfunction* replaceAttributeIgnores(ctx, validators, cmd, widget, op) {\n    const ignoredFilters = yield call(validators.attributeFilterValidator, ctx, cmd, widget, op.displayFormRefs);\n    const result = yield call(changeAttributeIgnores, widget, ignoredFilters);\n    return result;\n}\nfunction* ignoreAttributeFilter(ctx, validators, cmd, widget, op) {\n    const ignoredFilters = yield call(validators.attributeFilterValidator, ctx, cmd, widget, op.displayFormRefs);\n    const attributeFilters = yield select(selectFilterContextAttributeFilters);\n    const alreadyIgnored = getIgnoredAttributeFilters(attributeFilters, widget.ignoreDashboardFilters);\n    const addToIgnore = (ignoredFilters !== null && ignoredFilters !== void 0 ? ignoredFilters : []).filter((candidate) => {\n        return !alreadyIgnored.some((ignoredFilter) => areObjRefsEqual(ignoredFilter.attributeFilter.displayForm, candidate.attributeFilter.displayForm));\n    });\n    const result = yield call(changeAttributeIgnores, widget, [\n        ...alreadyIgnored,\n        ...addToIgnore,\n    ]);\n    return result;\n}\nfunction* unignoreAttributeFilter(ctx, validators, cmd, widget, op) {\n    const unignoredFilters = yield call(validators.attributeFilterValidator, ctx, cmd, widget, op.displayFormRefs);\n    const attributeFilters = yield select(selectFilterContextAttributeFilters);\n    const alreadyIgnored = getIgnoredAttributeFilters(attributeFilters, widget.ignoreDashboardFilters);\n    const reducedIgnores = alreadyIgnored.filter((candidate) => {\n        return !(unignoredFilters !== null && unignoredFilters !== void 0 ? unignoredFilters : []).some((toRemove) => areObjRefsEqual(candidate.attributeFilter.displayForm, toRemove.attributeFilter.displayForm));\n    });\n    const result = yield call(changeAttributeIgnores, widget, reducedIgnores);\n    return result;\n}\n/**\n * This is one of the more complex event handlers. Here is a little introduction to make studying easier. You\n * really should read this first because you start messing around here villy-nilly. It can simplify things hopefully.\n *\n * In order to provide rich/convenient API for fiddling with widget filters, the widget filter setting commands\n * allow caller to use different types of operations such as:\n *\n * -  replace filter settings completely\n * -  enable/disable date filter (by setting or unsetting date dataset)\n * -  replace list of attribute filters to ignore\n * -  add/remove one or more items from a list of attribute filters to ignore\n *\n * To keep things sane, the handler opts out for convenient - yet perhaps not optimal approach to implement these\n * operations:\n *\n * 1.  The operation to replace filter settings completely can handle validation and resolution of date dataset\n *     to filter by and attribute filters to ignore. In a way, this is the ultimate operation that can achieve\n *     everything.\n *\n * 2.  All the other operations are just thin wrappers on top of the replace filter settings. The sub-operation always\n *     prepare a 'quasi replace' or 'intermediate replace', call the the replace settings operation and\n *     then either send the results off or tweak them.\n *\n *     The latter is the case for the ignore/unignore one or more attribute filter operations. These cannot be\n *     mapped 1-1 to just the replace. However, the replace operation is still used to do intermediate work/validations.\n *\n *     The result of the intermediate operation is then tweaked. The funniest example is the unignore operation:\n *\n *     -  the intermediate operation is set with the existing date data set setting that is on the widget - this is\n *        because it should be untouched yet we need to perform resolution to catalog date dataset for the\n *        purpose of having nice, rich eventing in the end\n *\n *     -  the intermediate operation is set with attribute filters that should be removed from ignore list. that is\n *        because code needs to verify the input - whether the display form is valid and used in some attribute filter\n *\n *     -  the replace operation does the validations.. it essentially resolves date data set ref to a nice catalog\n *        date dataset info & resolves display form of the filter to remove to an attribute filter to remove\n *\n *     -  the unignore op then fiddles with with existing ignore list and removes the attribute filter that was\n *        validated and resolved by the intermediate replace operation\n */\nexport function* processFilterOp(ctx, validators, cmd, widget) {\n    const { payload: { operation }, } = cmd;\n    switch (operation.type) {\n        case \"replace\": {\n            return yield call(replaceFilterSettings, ctx, validators, cmd, widget, operation);\n        }\n        case \"disableDateFilter\": {\n            return yield call(disableDateFilter, ctx, validators, cmd, widget);\n        }\n        case \"enableDateFilter\": {\n            return yield call(enableDateFilter, ctx, validators, cmd, widget, operation);\n        }\n        case \"replaceAttributeIgnores\": {\n            return yield call(replaceAttributeIgnores, ctx, validators, cmd, widget, operation);\n        }\n        case \"ignoreAttributeFilter\": {\n            return yield call(ignoreAttributeFilter, ctx, validators, cmd, widget, operation);\n        }\n        case \"unignoreAttributeFilter\": {\n            return yield call(unignoreAttributeFilter, ctx, validators, cmd, widget, operation);\n        }\n    }\n}\n//# sourceMappingURL=filterOperations.js.map","// (C) 2021-2022 GoodData Corporation\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { processFilterOp } from \"./common/filterOperations.js\";\nimport { validateAttributeFiltersToIgnore, validateDatasetForKpiWidgetDateFilter, } from \"./validation/filterValidation.js\";\nimport { kpiWidgetFilterSettingsChanged } from \"../../events/kpi.js\";\nconst KpiWidgetFilterValidations = {\n    dateDatasetValidator: validateDatasetForKpiWidgetDateFilter,\n    attributeFilterValidator: validateAttributeFiltersToIgnore,\n};\n/**\n * Filter setting handler contains some of the more complex validations.\n *\n * If command specifies date dataset to use for date filter (meaning at the same time that date filter should be enabled),\n * then the date dataset validation occurs. This needs to perform complex query processing first to obtain all available\n * date datasets for the insight widget.\n *\n * If command specifies refs of display forms to ignore attribute filters by, then another validation occurs. This one\n * will ensure that the display form refs on the input represent valid, existing display forms. And then ensure that\n * those display forms are actually used in currently used attribute filters.\n */\nexport function* changeKpiWidgetFilterSettingsHandler(ctx, cmd) {\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    const result = yield call(processFilterOp, ctx, KpiWidgetFilterValidations, cmd, kpiWidget);\n    const { dateDataSet, ignoredFilters } = result;\n    const ignoreDashboardFilters = ignoredFilters === null || ignoredFilters === void 0 ? void 0 : ignoredFilters.map((filter) => {\n        const filterReference = {\n            type: \"attributeFilterReference\",\n            displayForm: filter.attributeFilter.displayForm,\n        };\n        return filterReference;\n    });\n    yield put(layoutActions.replaceWidgetFilterSettings({\n        ref: kpiWidget.ref,\n        dateDataSet: dateDataSet === null || dateDataSet === void 0 ? void 0 : dateDataSet.dataSet.ref,\n        ignoreDashboardFilters: ignoreDashboardFilters,\n        undo: {\n            cmd,\n        },\n    }));\n    return kpiWidgetFilterSettingsChanged(ctx, kpiWidget.ref, ignoredFilters !== null && ignoredFilters !== void 0 ? ignoredFilters : [], result.dateDataSet, cmd.correlationId);\n}\n//# sourceMappingURL=changeKpiWidgetFilterSettingsHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { insightWidgetFilterSettingsChanged } from \"../../events/insight.js\";\nimport { processFilterOp } from \"./common/filterOperations.js\";\nimport { validateAttributeFiltersToIgnore, validateDatasetForInsightWidgetDateFilter, } from \"./validation/filterValidation.js\";\nconst InsightWidgetFilterValidations = {\n    dateDatasetValidator: validateDatasetForInsightWidgetDateFilter,\n    attributeFilterValidator: validateAttributeFiltersToIgnore,\n};\n/**\n * Filter setting handler contains some of the more complex validations.\n *\n * If command specifies date dataset to use for date filter (meaning at the same time that date filter should be enabled),\n * then the date dataset validation occurs. This needs to perform complex query processing first to obtain all available\n * date datasets for the insight widget.\n *\n * If command specifies refs of display forms to ignore attribute filters by, then another validation occurs. This one\n * will ensure that the display form refs on the input represent valid, existing display forms. And then ensure that\n * those display forms are actually used in currently used attribute filters.\n */\nexport function* changeInsightWidgetFilterSettingsHandler(ctx, cmd) {\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    const result = yield call(processFilterOp, ctx, InsightWidgetFilterValidations, cmd, insightWidget);\n    const { dateDataSet, ignoredFilters } = result;\n    const ignoreDashboardFilters = ignoredFilters === null || ignoredFilters === void 0 ? void 0 : ignoredFilters.map((filter) => {\n        const filterReference = {\n            type: \"attributeFilterReference\",\n            displayForm: filter.attributeFilter.displayForm,\n        };\n        return filterReference;\n    });\n    yield put(layoutActions.replaceWidgetFilterSettings({\n        ref: insightWidget.ref,\n        dateDataSet: dateDataSet === null || dateDataSet === void 0 ? void 0 : dateDataSet.dataSet.ref,\n        ignoreDashboardFilters: ignoreDashboardFilters,\n        undo: {\n            cmd,\n        },\n    }));\n    return insightWidgetFilterSettingsChanged(ctx, insightWidget.ref, ignoredFilters !== null && ignoredFilters !== void 0 ? ignoredFilters : [], result.dateDataSet, cmd.correlationId);\n}\n//# sourceMappingURL=changeInsightWidgetFilterSettingsHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { isObjRef, } from \"@gooddata/sdk-model\";\n/**\n * Creates the ChangeInsightWidgetHeader command. Dispatching this command will result in change of the Insight widget's\n * header which (now) includes title.\n *\n * @param ref - reference of the insight widget to modify\n * @param header - new header to use\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeInsightWidgetHeader(ref, header, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_HEADER\",\n        correlationId,\n        payload: {\n            ref,\n            header,\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetFilterSettings command for {@link FilterOpReplaceAll} operation.\n *\n * Dispatching this command will result in replacement of Insight widget's filter settings; this includes change of\n * data set used for date filter, disabling date filtering, ignoring attribute filters that are defined on the dashboard for the widget.\n *\n * @param ref - reference of the insight widget to modify\n * @param settings - new filter settings to apply\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function replaceInsightWidgetFilterSettings(ref, settings, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: Object.assign({ type: \"replace\" }, settings),\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetFilterSettings command for {@link FilterOpEnableDateFilter} operation.\n *\n * Dispatching this command will result in change of Insight widget's date filter setting. The date filtering will\n * be enabled and the provided date data set will be used for date-filtering widget's insight.\n *\n * @param ref - reference of the insight widget to modify\n * @param dateDataset - date data set to use for filtering the insight, if \"default\" is provided, the default date dataset will be resolved and used\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function enableInsightWidgetDateFilter(ref, dateDataset, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"enableDateFilter\",\n                dateDataset,\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetFilterSettings command for {@link FilterOpDisableDateFilter} operation.\n *\n * Dispatching this command will result in change of Insight widget's date filter setting. The date filtering will\n * be disabled.\n *\n * @param ref - reference of the insight widget to modify\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function disableInsightWidgetDateFilter(ref, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"disableDateFilter\",\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetFilterSettings command for {@link FilterOpReplaceAttributeIgnores} operation.\n *\n * Dispatching this command will result in replacement of Insight widget's attribute filter ignore-list. Those attribute filters\n * that use the provided displayForms for filtering will be ignored by the widget.\n *\n * @param ref - reference of the insight widget to modify\n * @param displayForms - refs of display forms used by attribute filters that should be ignored\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function replaceInsightWidgetIgnoredFilters(ref, displayForms, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"replaceAttributeIgnores\",\n                displayFormRefs: displayForms !== null && displayForms !== void 0 ? displayForms : [],\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetFilterSettings command for {@link FilterOpIgnoreAttributeFilter} operation.\n *\n * Dispatching this command will result in addition of one or more filters into Insight widget's attribute filter ignore-list.\n * Those attribute filters that use the provided displayForms for filtering will be ignored by the widget on top of any\n * other filters that are already ignored.\n *\n * Ignored attribute filters are not passed down to the insight and will not be used to filter that insight.\n *\n * The operation is idempotent - trying to ignore an attribute filter multiple times will have no effect.\n *\n * @param ref - reference of the insight widget to modify\n * @param oneOrMoreDisplayForms - one or more refs of display forms used by attribute filters that should be added to the ignore-list\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function ignoreFilterOnInsightWidget(ref, oneOrMoreDisplayForms, correlationId) {\n    const displayFormRefs = isObjRef(oneOrMoreDisplayForms) ? [oneOrMoreDisplayForms] : oneOrMoreDisplayForms;\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"ignoreAttributeFilter\",\n                displayFormRefs,\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetFilterSettings command for {@link FilterOpUnignoreAttributeFilter} operation.\n *\n * Dispatching this command will result in removal of one or more filters from Insight widget's attribute filter ignore-list.\n * Ignored attribute filters are not passed down to the insight and will not be used to filter that insight.\n *\n * The operation is idempotent - trying to unignore an attribute filter multiple times will have no effect.\n *\n * @param ref - reference of the insight widget to modify\n * @param oneOrMoreDisplayForms - one or more refs of display forms used by attribute filters that should be removed from the ignore-list\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function unignoreFilterOnInsightWidget(ref, oneOrMoreDisplayForms, correlationId) {\n    const displayFormRefs = isObjRef(oneOrMoreDisplayForms) ? [oneOrMoreDisplayForms] : oneOrMoreDisplayForms;\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"unignoreAttributeFilter\",\n                displayFormRefs,\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetVisProperties command. Dispatching this command will result is modification\n * of the visualization properties that are effective for the particular insight widget.\n *\n * Through visualization properties, you can modify how particular visualization looks and behaves (enable/disable\n * tooltips, legend, change axes, enable zooming).\n *\n * If you want to clear any widget-level properties, set properties to `undefined`.\n *\n * @param ref - reference of the insight widget to modify\n * @param properties - new properties to set, undefined to clear any widget level visualization properties\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeInsightWidgetVisProperties(ref, properties, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_PROPERTIES\",\n        correlationId,\n        payload: {\n            ref,\n            properties,\n        },\n    };\n}\n/**\n *\n * Creates the ChangeInsightWidgetVisConfiguration command. Dispatching this command will result is modification\n * of the visualization configuration that are effective for the particular insight widget.\n *\n * Through visualization configuration, you can modify how particular visualization behaves\n *\n * If you want to clear any widget-level configuration, set config to `undefined`.\n *\n * @param ref - reference of the insight widget to modify\n * @param config - new configuration to set, undefined to clear any widget level visualization config\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeInsightWidgetVisConfiguration(ref, config, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_CONFIGURATION\",\n        correlationId,\n        payload: {\n            ref,\n            config,\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetInsight command. Dispatching this command will result in change of what\n * insight is rendered inside particular insight widget - while keeping all the other setup the same (filtering,\n * drilling).\n *\n * @param ref - reference to insight widget whose insight should be changed\n * @param insightRef - reference to the new insight to use in the widget\n * @param visualizationProperties - specify visualization properties to use. Undefined value means keeping the existing properties on record in the widget\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeInsightWidgetInsight(ref, insightRef, visualizationProperties, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_INSIGHT\",\n        correlationId,\n        payload: {\n            ref,\n            insightRef,\n            visualizationProperties,\n        },\n    };\n}\n/**\n * Creates the ModifyDrillsForInsightWidget command. Dispatching the created command will add or modify a new drill for\n * the insight widget.\n *\n * Drill can be setup for particular measure - meaning elements in the insight will be clickable. Exactly one drill\n * can be specified for a measure.\n *\n * What happens on click depends on the context in which the dashboard lives:\n *\n * -  When in KPI Dashboard (embedded or not) the defined action is actually triggered and done - it may open a new tab,\n *    open overlay with insight, navigate to a new dashboard and carry over the filters.\n * -  When the dashboard is embedded using Dashboard component, an event will be emitted describing the defined\n *    drill action.\n *\n * @param ref - reference to insight widget whose drills should be modified\n * @param drills - drills to add or modify.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function modifyDrillsForInsightWidget(ref, drills, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.MODIFY_DRILLS\",\n        correlationId,\n        payload: {\n            ref,\n            drills,\n        },\n    };\n}\n/**\n * Type guard resolved all drill selector\n *\n * @beta\n */\nexport function isAllDrillSelector(obj) {\n    return obj === \"*\";\n}\n/**\n * Creates the RemoveDrillsForInsightWidget command. Dispatching the created command will remove insight widget's\n * drill definition for the provided measure.\n *\n * @param ref - reference of insight widget whose drill should be removed\n * @param origins - measure or attribute localIdentifiers whose drill definitions should be removed\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function removeDrillsForInsightWidget(ref, origins, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.REMOVE_DRILLS\",\n        correlationId,\n        payload: {\n            ref,\n            origins,\n        },\n    };\n}\n/**\n * Creates the RefreshInsightWidget command. Dispatching this command will result in re-calculation of the widget's\n * insight and re-render.\n *\n * @param ref - reference to the Insight widget to refresh\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function refreshInsightWidget(ref, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.REFRESH\",\n        correlationId,\n        payload: {\n            ref,\n        },\n    };\n}\n/**\n * Creates the ExportInsightWidget command. Dispatching this command will result in exporting of the widget to a CSV of XLSX file.\n *\n * @param ref - reference to the Insight widget to refresh\n * @param config - configuration of the export operation\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function exportInsightWidget(ref, config, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.EXPORT\",\n        correlationId,\n        payload: {\n            config,\n            ref,\n        },\n    };\n}\n/**\n * Creates the ChangeInsightWidgetDescription command. Dispatching this command will result in change of the Insight widget's\n * description.\n *\n * @param ref - reference of the insight widget to modify\n * @param description - new description to use\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeInsightWidgetDescription(ref, description, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_DESCRIPTION\",\n        correlationId,\n        payload: {\n            ref,\n            description,\n        },\n    };\n}\n//\n//\n//\n//# sourceMappingURL=insight.js.map","// (C) 2021 GoodData Corporation\nimport { isBadRequest, isDataTooLargeToCompute, isDataTooLargeToDisplay, isNegativeValues, isNoDataSdkError, isProtectedReport, isUnknownSdkError, } from \"@gooddata/sdk-ui\";\nimport { isEmptyAfm } from \"@gooddata/sdk-ui-ext\";\nimport { typesUtils } from \"@gooddata/util\";\n/**\n * Returns true if the provided error should prevent exports.\n *\n * @remarks Some errors are still ok with respect to exports (e.g. negative values in a pie chart) and these\n * should not prevent exports. However, errors detected by this function really make potential exports\n * nonsensical and should lead to exports being disabled.\n *\n * @internal\n */\nexport const isNonExportableError = typesUtils.combineGuards(isUnknownSdkError, isBadRequest, isNoDataSdkError, isProtectedReport, isDataTooLargeToCompute, isEmptyAfm);\n/**\n * @internal\n */\nexport const isDataError = typesUtils.combineGuards(isUnknownSdkError, isBadRequest, isNoDataSdkError, isDataTooLargeToCompute, isDataTooLargeToDisplay, isProtectedReport, isEmptyAfm, isNegativeValues);\n//# sourceMappingURL=errorPredicates.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.permissions);\n/**\n * This selector returns user's permissions in the workspace where the dashboard is stored.\n *\n * @remarks\n * It is expected that the selector is called only after the permission state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * See {@link @gooddata/sdk-backend-spi#WorkspacePermission} for all available permissions.\n *\n * If the permission is not supported by GoodData Cloud and GoodData.CN backends, the selector always returns `false` value.\n *\n * In case you need multiple permissions available in your application, use common selector.\n *\n * @example - on how to select all permissions.\n * ```\n *      const permissions = useDashboardSelector(selectPermissions);\n *\n *      if (permissions.canCreateAnalyticalDashboard) {\n *          // allow user to do a action for which the `canCreateAnalyticalDashboard` permission is needed\n *      }\n * ```\n *\n * If there is only limited number of permissions, use specific selector instead (available selectors are all below).\n *\n * @example - on how to select specific permission.\n * ```\n *      const canCreateAnalyticalDashboard = useDashboardSelector(selectCanCreateAnalyticalDashboard);\n *\n *      if (canCreateAnalyticalDashboard) {\n *          // allow user to do a action for which the `canCreateAnalyticalDashboard` permission is needed\n *      }\n * ```\n *\n * @public\n */\nexport const selectPermissions = createSelector(selectSelf, (state) => {\n    invariant(state.permissions, \"attempting to access uninitialized permissions state\");\n    return state.permissions;\n});\n/**\n * Returns whether the current user has permissions to list users, roles, and permissions.\n *\n * @public\n */\nexport const selectCanListUsersInWorkspace = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canListUsersInProject) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to modify workspace metadata, see the workspace token, lock and unlock objects, delete locked objects, set and unset the restricted flag on objects, clear cache, delete a workspace.\n *\n * @public\n */\nexport const selectCanManageWorkspace = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canManageProject) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions necessary to export insights.\n *\n * @public\n */\nexport const selectCanExportReport = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canExportReport) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions necessary to export insights to CSV, XLSX\n *\n * @public\n */\nexport const selectCanExportTabular = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = ((state === null || state === void 0 ? void 0 : state.canExportReport) || (state === null || state === void 0 ? void 0 : state.canExportTabular))) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions necessary to export insights to PDF\n *\n * @public\n */\nexport const selectCanExportPdf = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = ((state === null || state === void 0 ? void 0 : state.canExportReport) || (state === null || state === void 0 ? void 0 : state.canExportPdf))) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to create a KPI dashboard object via API.\n *\n * @public\n */\nexport const selectCanCreateAnalyticalDashboard = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canCreateAnalyticalDashboard) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to modify and delete a KPI dashboard object.\n *\n * @public\n */\nexport const selectCanManageAnalyticalDashboard = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canManageAnalyticalDashboard) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to add, remove, and list ACLs (Access Control Lists) on an object.\n *\n * @public\n */\nexport const selectCanManageACL = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canManageACL) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to create a scheduled email object and a KPI alert object.\n *\n * @public\n */\nexport const selectCanCreateScheduledMail = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canCreateScheduledMail) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to run MAQL DDL and DML, access a workspace staging directory.\n *\n * @public\n */\nexport const selectCanInitData = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canInitData) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to upload CSV files via CSV Uploader.\n *\n * @public\n */\nexport const selectCanUploadNonProductionCSV = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canUploadNonProductionCSV) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions necessary to export insights to CSV..\n *\n * @public\n */\nexport const selectCanExecuteRaw = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canExecuteRaw) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to create a KPI object, KPI widget object, and an insight object via API.\n *\n * @public\n */\nexport const selectCanCreateVisualization = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canCreateVisualization) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to modify and delete a metric, run MAQL DDL, run the MAQL validator, change metric visibility via the `unlisted` flag.\n *\n * @public\n */\nexport const selectCanManageMetric = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canManageMetric) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to modify and delete a domain, run MAQL DDL.\n *\n * @public\n */\nexport const selectCanManageDomain = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canManageDomain) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to invite a user to a workspace or delete an invitation.\n *\n * @public\n */\nexport const selectCanInviteUserToWorkspace = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canInviteUserToProject) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to run uploads, load date dimensions, access a workspace staging directory.\n *\n * @public\n */\nexport const selectCanRefreshData = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canRefreshData) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to manage scheduled email objects.\n *\n * @public\n */\nexport const selectCanManageScheduledMail = createSelector(selectPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canManageScheduledMail) !== null && _a !== void 0 ? _a : false;\n});\n//# sourceMappingURL=permissionsSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { createMemoizedSelector } from \"../_infra/selectors.js\";\nimport { executionResultsAdapter } from \"./executionResultsEntityAdapter.js\";\nimport { selectAnalyticalWidgetByRef } from \"../layout/layoutSelectors.js\";\nimport { isNonExportableError } from \"../../../_staging/errors/errorPredicates.js\";\nimport { selectCanExportTabular, selectCanExecuteRaw } from \"../permissions/permissionsSelectors.js\";\nimport { selectSettings } from \"../config/configSelectors.js\";\nimport { selectSupportsExportToXlsx, selectSupportsExportToCsv, } from \"../backendCapabilities/backendCapabilitiesSelectors.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.executionResults);\nconst adapterSelectors = executionResultsAdapter.getSelectors(selectSelf);\nconst selectExecutionResultEntities = adapterSelectors.selectEntities;\n/**\n * @alpha\n */\nexport const selectExecutionResult = adapterSelectors.selectById;\n/**\n * @alpha\n */\nexport const selectExecutionResultByRef = createMemoizedSelector((ref) => createSelector(selectExecutionResultEntities, (executionResults) => {\n    const key = serializeObjRef(ref);\n    return executionResults[key];\n}));\n/**\n * @alpha\n */\nexport const selectIsExecutionResultReadyForExportByRef = createMemoizedSelector((ref) => createSelector(selectExecutionResultByRef(ref), selectAnalyticalWidgetByRef(ref), (widgetExecution) => {\n    if (!widgetExecution) {\n        return false;\n    }\n    const { isLoading, error, executionResult } = widgetExecution;\n    return !!executionResult && !isLoading && !isNonExportableError(error);\n}));\n/**\n * @alpha\n */\nexport const selectIsExecutionResultExportableToCsvByRef = createMemoizedSelector((ref) => createSelector(selectSupportsExportToCsv, selectIsExecutionResultReadyForExportByRef(ref), selectCanExportTabular, selectCanExecuteRaw, selectSettings, (supportsCapabilityCsv, isReadyForExport, canExportTabular, canExecuteRaw, settings) => {\n    const isExportEnabled = Boolean(settings.enableKPIDashboardExport && canExportTabular);\n    const isRawExportEnabled = Boolean(isExportEnabled && canExecuteRaw);\n    return supportsCapabilityCsv && isReadyForExport && isRawExportEnabled;\n}));\n/**\n * @alpha\n */\nexport const selectIsExecutionResultExportableToXlsxByRef = createMemoizedSelector((ref) => createSelector(selectSupportsExportToXlsx, selectIsExecutionResultReadyForExportByRef(ref), selectCanExportTabular, selectSettings, (supportCapabilityXlsx, isReadyForExport, canExportTabular, settings) => {\n    const isExportEnabled = Boolean(settings.enableKPIDashboardExport && canExportTabular);\n    return supportCapabilityXlsx && isReadyForExport && isExportEnabled;\n}));\n//# sourceMappingURL=executionResultsSelectors.js.map","import { call, put, select } from \"redux-saga/effects\";\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { insightWidgetExportRequested, insightWidgetExportResolved, } from \"../../events/insight.js\";\nimport { selectExecutionResultByRef, selectIsExecutionResultReadyForExportByRef, selectIsExecutionResultExportableToCsvByRef, selectIsExecutionResultExportableToXlsxByRef, } from \"../../store/executionResults/executionResultsSelectors.js\";\nimport { createExportFunction } from \"@gooddata/sdk-ui\";\nasync function performExport(executionResult, config) {\n    const exporter = createExportFunction(executionResult);\n    return exporter(config);\n}\nfunction* validateIsExportable(ctx, cmd, ref) {\n    const isExportable = yield select(selectIsExecutionResultReadyForExportByRef(ref));\n    if (!isExportable) {\n        throw invalidArgumentsProvided(ctx, cmd, `The widget with ref: ${serializeObjRef(ref)} cannot be exported at the moment.`);\n    }\n}\nfunction* validateSettingsAndPermissions(ctx, cmd) {\n    const { config, ref } = cmd.payload;\n    let canExport = false;\n    if (config.format === \"csv\") {\n        canExport = yield select(selectIsExecutionResultExportableToCsvByRef(ref));\n    }\n    if (config.format === \"xlsx\") {\n        canExport = yield select(selectIsExecutionResultExportableToXlsxByRef(ref));\n    }\n    if (!canExport) {\n        throw invalidArgumentsProvided(ctx, cmd, `The widget with ref: ${serializeObjRef(ref)} cannot be exported because the feature is disabled or the user does not have the necessary permissions.`);\n    }\n}\nexport function* exportInsightWidgetHandler(ctx, cmd) {\n    const { config, ref } = cmd.payload;\n    yield put(insightWidgetExportRequested(ctx, ref, config, cmd.correlationId));\n    yield call(validateIsExportable, ctx, cmd, ref);\n    yield call(validateSettingsAndPermissions, ctx, cmd);\n    const executionEnvelope = yield select(selectExecutionResultByRef(ref));\n    // executionResult must be defined at this point\n    invariant(executionEnvelope === null || executionEnvelope === void 0 ? void 0 : executionEnvelope.executionResult);\n    const result = yield call(performExport, executionEnvelope.executionResult, config);\n    // prepend hostname if provided so that the results are downloaded from there, not from where the app is hosted\n    const fullUri = ctx.backend.config.hostname\n        ? new URL(result.uri, ctx.backend.config.hostname).href\n        : result.uri;\n    const sanitizedResult = Object.assign(Object.assign({}, result), { uri: fullUri });\n    return insightWidgetExportResolved(ctx, sanitizedResult, cmd.correlationId);\n}\n//# sourceMappingURL=exportInsightWidgetHandler.js.map","import { call, put } from \"redux-saga/effects\";\nimport { alertCreated } from \"../../events/alerts.js\";\nimport { alertsActions } from \"../../store/alerts/index.js\";\nfunction createAlert(ctx, alert) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().createWidgetAlert(alert);\n}\nexport function* createAlertHandler(ctx, cmd) {\n    const alert = yield call(createAlert, ctx, cmd.payload.alert);\n    yield put(alertsActions.addAlert(alert));\n    return alertCreated(ctx, alert, cmd.correlationId);\n}\n//# sourceMappingURL=createAlertHandler.js.map","import { call, put } from \"redux-saga/effects\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { alertUpdated } from \"../../events/alerts.js\";\nimport { alertsActions } from \"../../store/alerts/index.js\";\nfunction updateAlert(ctx, alert) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().updateWidgetAlert(alert);\n}\nexport function* updateAlertHandler(ctx, cmd) {\n    const alert = yield call(updateAlert, ctx, cmd.payload.alert);\n    yield put(alertsActions.updateAlert({\n        changes: cmd.payload.alert,\n        id: objRefToString(cmd.payload.alert.ref),\n    }));\n    return alertUpdated(ctx, alert, cmd.correlationId);\n}\n//# sourceMappingURL=updateAlertHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { alertsAdapter } from \"./alertsEntityAdapter.js\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nimport compact from \"lodash/compact.js\";\nimport memoize from \"lodash/memoize.js\";\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { selectWidgetsMap } from \"../layout/layoutSelectors.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.alerts);\nconst adapterSelectors = alertsAdapter.getSelectors(selectSelf);\n/**\n * Selects all alerts used on the dashboard.\n *\n * @alpha\n */\nexport const selectAlerts = adapterSelectors.selectAll;\n/**\n * Selects all alerts and returns them in a mapping of widget obj ref to the alert object.\n *\n * @internal\n */\nconst selectAlertsMapByWidgetRefs = createSelector(selectAlerts, selectWidgetsMap, (alerts, widgetsMap) => {\n    const mappedItems = compact(alerts.map((alert) => {\n        const widget = widgetsMap.get(alert.widget);\n        if (!widget) {\n            /**\n             * Ignore widgets that are no longer available, this can naturally happen in edit mode when\n             * a KPI widget is deleted by the user: the alerts are not removed from redux in case the edit\n             * mode is cancelled (to avoid having to load the dashboard again from the backend).\n             */\n            return undefined;\n        }\n        const result = {\n            identifier: widget.identifier,\n            uri: widget.uri,\n            ref: widget.ref,\n            alert,\n        };\n        return result;\n    }));\n    return newMapForObjectWithIdentity(mappedItems);\n});\n/**\n * Selects alert or undefined by widget ref\n *\n * @alpha\n */\nexport const selectAlertByWidgetRef = memoize((widgetRef) => {\n    return createSelector(selectAlertsMapByWidgetRefs, (alerts) => {\n        const alert = alerts.get(widgetRef);\n        if (alert) {\n            return alert.alert;\n        }\n    });\n}, serializeObjRef);\n/**\n * Selects dashboard alerts in mapping an obj ref to widget map.\n *\n * @internal\n */\nexport const selectAlertsMap = createSelector(selectAlerts, (alerts) => {\n    return newMapForObjectWithIdentity(alerts);\n});\n/**\n * Selects alert or undefined by alert ref\n *\n * @alpha\n */\nexport const selectAlertByRef = memoize((ref) => {\n    return createSelector(selectAlertsMap, (alerts) => {\n        return alerts.get(ref);\n    });\n}, serializeObjRef);\n//# sourceMappingURL=alertsSelectors.js.map","import { call, select, put } from \"redux-saga/effects\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { alertsRemoved } from \"../../events/alerts.js\";\nimport { alertsActions } from \"../../store/alerts/index.js\";\nimport { selectAlertsMap } from \"../../store/alerts/alertsSelectors.js\";\nimport { validateExistingAlerts } from \"./validation/alertsValidation.js\";\nfunction removeAlerts(ctx, alertRefs) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().deleteWidgetAlerts(alertRefs);\n}\nexport function* removeAlertsHandler(ctx, cmd) {\n    const alertsMap = yield select(selectAlertsMap);\n    const alerts = validateExistingAlerts(alertsMap, cmd, ctx);\n    const refs = alerts.map((alert) => alert.ref);\n    yield call(removeAlerts, ctx, refs);\n    const ids = alerts.map((alert) => objRefToString(alert.ref));\n    yield put(alertsActions.removeAlerts(ids));\n    return alertsRemoved(ctx, alerts, cmd.correlationId);\n}\n//# sourceMappingURL=removeAlertsHandler.js.map","import { call } from \"redux-saga/effects\";\nimport { scheduledEmailCreated } from \"../../events/scheduledEmail.js\";\nfunction createScheduledEmail(ctx, scheduledEmail, filterContext) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).dashboards().createScheduledMail(scheduledEmail, filterContext);\n}\nexport function* createScheduledEmailHandler(ctx, cmd) {\n    const scheduledEmail = yield call(createScheduledEmail, ctx, cmd.payload.scheduledEmail, cmd.payload.filterContext);\n    return scheduledEmailCreated(ctx, scheduledEmail, cmd.correlationId);\n}\n//# sourceMappingURL=createScheduledEmailHandler.js.map","import { call } from \"redux-saga/effects\";\nimport { isObjRef } from \"@gooddata/sdk-model\";\nimport { scheduledEmailSaved } from \"../../events/scheduledEmail.js\";\nfunction saveScheduledEmail(ctx, scheduledEmail, filterContextRef) {\n    const { backend, workspace } = ctx;\n    if (!isObjRef(scheduledEmail)) {\n        throw new Error(\"Cannot save schedule not referencing to an persisted object\");\n    }\n    return backend\n        .workspace(workspace)\n        .dashboards()\n        .updateScheduledMail(scheduledEmail, scheduledEmail, filterContextRef);\n}\nexport function* saveScheduledEmailHandler(ctx, cmd) {\n    const { scheduledEmail, filterContextRef } = cmd.payload;\n    yield call(saveScheduledEmail, ctx, scheduledEmail, filterContextRef);\n    return scheduledEmailSaved(ctx, cmd.correlationId);\n}\n//# sourceMappingURL=saveScheduledEmailHandler.js.map","import { call, put, select } from \"redux-saga/effects\";\nimport compact from \"lodash/compact.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { invariant } from \"ts-invariant\";\nimport { drillToDashboardRequested, drillToDashboardResolved, } from \"../../events/drill.js\";\nimport { selectFilterContextAttributeFilters, selectFilterContextDateFilter, } from \"../../store/filterContext/filterContextSelectors.js\";\nimport { selectAnalyticalWidgetByRef } from \"../../store/layout/layoutSelectors.js\";\nimport { dashboardAttributeFilterToAttributeFilter, dashboardDateFilterToDateFilterByWidget, } from \"../../../converters/index.js\";\nimport { isDrillIntersectionAttributeItem, } from \"@gooddata/sdk-ui\";\nimport { areObjRefsEqual, insightMeasures, isSimpleMeasure, measureFilters, isDateFilter, newPositiveAttributeFilter, newAllTimeFilter, } from \"@gooddata/sdk-model\";\nimport { selectCatalogDateAttributes } from \"../../store/catalog/catalogSelectors.js\";\nimport { selectInsightByRef } from \"../../store/insights/insightsSelectors.js\";\nexport function* drillToDashboardHandler(ctx, cmd) {\n    var _a;\n    // put start event\n    yield put(drillToDashboardRequested(ctx, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId));\n    // decide if we should use date filter (only if enabled and connected to a dataset)\n    const widget = yield select(selectAnalyticalWidgetByRef(cmd.payload.drillEvent.widgetRef));\n    const insight = yield select(selectInsightByRef(widget.insight));\n    // if this bombs, widget is not an insight widget and something is seriously wrong\n    invariant(insight);\n    const shouldUseDateFilter = !!widget.dateDataSet && !isDateFilterDisabled(insight);\n    const dateFilter = shouldUseDateFilter ? yield select(selectDrillingDateFilter, widget) : undefined;\n    // get proper attr filters\n    const isDrillingToSelf = areObjRefsEqual(ctx.dashboardRef, cmd.payload.drillDefinition.target);\n    const dashboardFilters = isDrillingToSelf\n        ? // if drilling to self, just take all filters\n            yield select(selectAllAttributeFilters)\n        : // if drilling to other, resolve widget filter ignores\n            yield call(getWidgetAwareAttributeFilters, ctx, widget);\n    const dateAttributes = yield select(selectCatalogDateAttributes);\n    const drillIntersectionFilters = convertIntersectionToAttributeFilters(cmd.payload.drillEvent.drillContext.intersection, dateAttributes.map((dA) => dA.attribute.ref), (_a = ctx.backend.capabilities.supportsElementUris) !== null && _a !== void 0 ? _a : true);\n    // concat everything, order is important – drill filters must go first\n    const resultingFilters = compact([dateFilter, ...drillIntersectionFilters, ...dashboardFilters]);\n    // put end event\n    return drillToDashboardResolved(ctx, resultingFilters, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId);\n}\nfunction selectDrillingDateFilter(state, widget) {\n    const globalDateFilter = selectFilterContextDateFilter(state);\n    return globalDateFilter\n        ? dashboardDateFilterToDateFilterByWidget(globalDateFilter, widget)\n        : newAllTimeFilter(widget.dateDataSet);\n}\nfunction selectAllAttributeFilters(state) {\n    return selectFilterContextAttributeFilters(state);\n}\nfunction* getWidgetAwareAttributeFilters(ctx, widget) {\n    const filterContextItems = yield select(selectFilterContextAttributeFilters);\n    const filters = filterContextItems.map(dashboardAttributeFilterToAttributeFilter);\n    return yield call(getResolvedFiltersForWidget, ctx, widget, filters);\n}\nfunction isDateFilterDisabled(insight) {\n    const measures = insightMeasures(insight);\n    return isEmpty(measures)\n        ? false\n        : measures.every((measure) => {\n            if (isSimpleMeasure(measure)) {\n                const filters = measureFilters(measure);\n                return !!(filters === null || filters === void 0 ? void 0 : filters.some(isDateFilter));\n            }\n            return true;\n        });\n}\nfunction getResolvedFiltersForWidget(ctx, widget, filters) {\n    return ctx.backend.workspace(ctx.workspace).dashboards().getResolvedFiltersForWidget(widget, filters);\n}\n/**\n *  For correct drill intersection that should be converted into AttributeFilters must be drill intersection:\n *  1. AttributeItem\n *  2. Not a date attribute\n */\nfunction filterIntersection(intersection, dateDataSetsAttributesRefs) {\n    var _a, _b;\n    const attributeItem = isDrillIntersectionAttributeItem(intersection) ? intersection : undefined;\n    const ref = (_b = (_a = attributeItem === null || attributeItem === void 0 ? void 0 : attributeItem.attributeHeader) === null || _a === void 0 ? void 0 : _a.formOf) === null || _b === void 0 ? void 0 : _b.ref;\n    return ref ? !dateDataSetsAttributesRefs.some((ddsRef) => areObjRefsEqual(ddsRef, ref)) : false;\n}\nfunction convertIntersectionToAttributeFilters(intersection, dateDataSetsAttributesRefs, backendSupportsElementUris) {\n    return intersection\n        .map((i) => i.header)\n        .filter((i) => filterIntersection(i, dateDataSetsAttributesRefs))\n        .filter(isDrillIntersectionAttributeItem)\n        .map((h) => {\n        if (backendSupportsElementUris) {\n            return newPositiveAttributeFilter(h.attributeHeader.ref, {\n                uris: [h.attributeHeaderItem.uri],\n            });\n        }\n        else {\n            return newPositiveAttributeFilter(h.attributeHeader.ref, {\n                uris: [h.attributeHeaderItem.name],\n            });\n        }\n    });\n}\n//# sourceMappingURL=drillToDashboardHandler.js.map","export async function getElementTitle(projectId, dfRef, attrElementUriOrPrimaryLabel, ctx) {\n    const queryOptions = {\n        elements: ctx.backend.capabilities.supportsElementUris\n            ? {\n                uris: [attrElementUriOrPrimaryLabel],\n            }\n            : {\n                primaryValues: [attrElementUriOrPrimaryLabel],\n            },\n    };\n    const validElementsQuery = await ctx.backend\n        .workspace(projectId)\n        .attributes()\n        .elements()\n        .forDisplayForm(dfRef)\n        .withLimit(1)\n        .withOptions(queryOptions)\n        .query();\n    return validElementsQuery.items[0].title;\n}\n//# sourceMappingURL=getElementTitle.js.map","// (C) 2020-2023 GoodData Corporation\nimport { call } from \"redux-saga/effects\";\nimport { isDrillIntersectionAttributeItem, } from \"@gooddata/sdk-ui\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { getElementTitle } from \"./getElementTitle.js\";\nfunction getDrillToAttributeUrlIntersectionAttributeItemHeader(drillConfig, event) {\n    var _a;\n    return (_a = event.drillContext.intersection.find((item) => isDrillIntersectionAttributeItem(item.header) &&\n        areObjRefsEqual(item.header.attributeHeader.ref, drillConfig.target.displayForm))) === null || _a === void 0 ? void 0 : _a.header;\n}\nexport function* resolveDrillToAttributeUrl(drillConfig, event, ctx) {\n    const header = getDrillToAttributeUrlIntersectionAttributeItemHeader(drillConfig, event);\n    if (!header) {\n        return;\n    }\n    const url = yield call(getElementTitle, ctx.workspace, drillConfig.target.hyperlinkDisplayForm, header.attributeHeaderItem.uri, ctx);\n    return url;\n}\n//# sourceMappingURL=resolveDrillToAttributeUrl.js.map","// (C) 2021-2022 GoodData Corporation\n/**\n * Creates action thought which you can query dashboard component for filters that should be used by a given widget.\n *\n * @param widgetRef - reference to insight widget\n * @param insight - specify insight to evaluate the filters for in context of the widget.\n *  If null, InsightWidgets will ignore the insight the are referencing.\n *  If not specified, InsightWidgets will default to the insights they reference, Custom- and KpiWidgets will ignore it.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @alpha\n */\nexport function queryWidgetFilters(widgetRef, insight, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.WIDGET.FILTERS\",\n        correlationId,\n        payload: {\n            widgetRef,\n            insight,\n        },\n    };\n}\n/**\n *  Creates action thought which you can query dashboard component for broken alert filters.\n *\n * @param widgetRef - reference to insight kpi widget\n * @param correlationId - specify correlation id to use for this command.\n * @returns\n *\n * @alpha\n */\nexport function queryWidgetBrokenAlerts(widgetRef, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.WIDGET.BROKEN_ALERTS\",\n        correlationId,\n        payload: {\n            widgetRef,\n        },\n    };\n}\n/**\n * Creates action through which you can query dashboard component for information about the total number of alerts\n * all the users have set on a given KPI widget.\n *\n * @param widgetRef - reference to the KPI widget\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @alpha\n */\nexport function queryWidgetAlertCount(widgetRef, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.WIDGET.ALERT_COUNT\",\n        correlationId,\n        payload: {\n            widgetRef,\n        },\n    };\n}\n//# sourceMappingURL=widgets.js.map","// (C) 2007-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { isAttributeFilter, isDateFilter, } from \"@gooddata/sdk-model\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDashboardFilter}.\n *\n * @alpha\n */\nexport function isDashboardFilter(obj) {\n    return isAttributeFilter(obj) || isDateFilter(obj);\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IDrillDownDefinition}.\n * @beta\n */\nexport function isDrillDownDefinition(obj) {\n    return !isEmpty(obj) && obj.type === \"drillDown\";\n}\n//# sourceMappingURL=types.js.map","// (C) 2021 GoodData Corporation\nimport { call, select } from \"redux-saga/effects\";\nimport { selectEnableFilterValuesResolutionInDrillEvents } from \"../../store/config/configSelectors.js\";\nimport { resolveFilterValues } from \"./common/filterValuesResolver.js\";\nimport { queryWidgetFilters } from \"../../queries/index.js\";\nimport { isDashboardFilter } from \"../../../types.js\";\nimport { query } from \"../../store/_infra/queryCall.js\";\nexport function* getDrillToUrlFiltersWithResolvedValues(ctx, widgetRef) {\n    // override all insight filters by passing null as insight\n    const effectiveFilters = yield call(query, queryWidgetFilters(widgetRef, null));\n    const filters = effectiveFilters.filter(isDashboardFilter);\n    const enableFilterValuesResolutionInDrillEvents = yield select(selectEnableFilterValuesResolutionInDrillEvents);\n    if (enableFilterValuesResolutionInDrillEvents) {\n        const resolvedFilterValues = yield call(resolveFilterValues, filters, ctx.backend, ctx.workspace);\n        return { filters, resolvedFilterValues };\n    }\n    return { filters };\n}\n//# sourceMappingURL=getDrillToUrlFilters.js.map","// (C) 2020-2023 GoodData Corporation\nimport { all, call, select } from \"redux-saga/effects\";\nimport isNil from \"lodash/isNil.js\";\nimport { isDrillIntersectionAttributeItem, } from \"@gooddata/sdk-ui\";\nimport { idRef, areObjRefsEqual, insightId, isAttributeDescriptor, } from \"@gooddata/sdk-model\";\nimport { selectDashboardId } from \"../../store/meta/metaSelectors.js\";\nimport { selectAnalyticalWidgetByRef } from \"../../store/layout/layoutSelectors.js\";\nimport { selectInsightByRef } from \"../../store/insights/insightsSelectors.js\";\nimport { getElementTitle } from \"./getElementTitle.js\";\nimport { getAttributeIdentifiersPlaceholdersFromUrl } from \"../../../_staging/drills/drillingUtils.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectCatalogDateAttributes } from \"../../store/catalog/catalogSelectors.js\";\nimport groupBy from \"lodash/groupBy.js\";\nimport { DRILL_TO_URL_PLACEHOLDER } from \"../../types/drillTypes.js\";\nexport function* loadElementTitle(dfRef, dfIdentifier, attrElementUri, ctx) {\n    const elementTitle = yield call(getElementTitle, ctx.workspace, dfRef, attrElementUri, ctx);\n    return {\n        identifier: dfIdentifier,\n        elementTitle,\n    };\n}\nfunction isInRefList(list, ref) {\n    return list.some((itemRef) => areObjRefsEqual(itemRef, ref));\n}\nfunction findDrillIntersectionAttributeHeaderItem(drillIntersectionElements, attributeRef) {\n    const intersectionForAttribute = drillIntersectionElements.find(({ header }) => isAttributeDescriptor(header) && areObjRefsEqual(attributeRef, header.attributeHeader.formOf.ref));\n    if (intersectionForAttribute && isDrillIntersectionAttributeItem(intersectionForAttribute.header)) {\n        return intersectionForAttribute.header.attributeHeaderItem;\n    }\n}\nexport function* splitDFToLoadingAndMapping(attributesDisplayForms, ctx) {\n    if (ctx.backend.capabilities.supportsElementUris) {\n        return {\n            displayFormForValueLoad: attributesDisplayForms,\n            displayFormsWithKnownValues: [],\n        };\n    }\n    // in tiger there are no uris for attribute values, only primary values\n    // we can't call collectLabelElements for date attributes because there are no date \"elements\", but we can use this values directly.\n    const dateAttributes = yield select(selectCatalogDateAttributes);\n    const dateAttributeRefs = dateAttributes.map((da) => da.attribute.ref);\n    const { true: displayFormsWithKnownValues = [], false: displayFormForValueLoad = [] } = groupBy(attributesDisplayForms, (df) => isInRefList(dateAttributeRefs, df.attribute));\n    return {\n        displayFormsWithKnownValues,\n        displayFormForValueLoad,\n    };\n}\nexport function* loadAttributeElementsForDrillIntersection(drillIntersectionElements, attributesDisplayForms, ctx) {\n    const splitDisplayForms = yield call(splitDFToLoadingAndMapping, attributesDisplayForms, ctx);\n    const { displayFormsWithKnownValues, displayFormForValueLoad } = splitDisplayForms;\n    const mappedElements = displayFormsWithKnownValues.reduce((acc, { id: dfIdentifier, attribute }) => {\n        const attributeHeaderItem = findDrillIntersectionAttributeHeaderItem(drillIntersectionElements, attribute);\n        if (!attributeHeaderItem) {\n            return acc;\n        }\n        acc.push({\n            identifier: dfIdentifier,\n            elementTitle: attributeHeaderItem.uri,\n        });\n        return acc;\n    }, []);\n    const loadedElement = yield all(displayFormForValueLoad.reduce((acc, displayForm) => {\n        const { id: dfIdentifier, attribute, ref: dfRef } = displayForm;\n        const attributeHeaderItem = findDrillIntersectionAttributeHeaderItem(drillIntersectionElements, attribute);\n        if (!attributeHeaderItem) {\n            return acc;\n        }\n        acc.push(call(loadElementTitle, dfRef, dfIdentifier, attributeHeaderItem.uri, ctx));\n        return acc;\n    }, []));\n    return [...mappedElements, ...loadedElement];\n}\nconst encodeParameterIfSet = (parameter) => isNil(parameter) ? parameter : encodeURIComponent(parameter);\nexport function getAttributeDisplayForms(projectId, objRefs, ctx) {\n    return ctx.backend.workspace(projectId).attributes().getAttributeDisplayForms(objRefs);\n}\nexport function* getAttributeIdentifiersReplacements(url, drillIntersectionElements, ctx) {\n    const attributeIdentifiersPlaceholders = getAttributeIdentifiersPlaceholdersFromUrl(url);\n    if (attributeIdentifiersPlaceholders.length === 0) {\n        return [];\n    }\n    const displayForms = yield call(getAttributeDisplayForms, ctx.workspace, attributeIdentifiersPlaceholders.map((placeholder) => idRef(placeholder.identifier)), ctx);\n    const elements = yield call(loadAttributeElementsForDrillIntersection, drillIntersectionElements, displayForms, ctx);\n    return attributeIdentifiersPlaceholders.map(({ placeholder: toBeReplaced, identifier, toBeEncoded }) => {\n        var _a;\n        const elementTitle = (_a = elements.find((element) => element.identifier === identifier)) === null || _a === void 0 ? void 0 : _a.elementTitle;\n        const replacement = toBeEncoded ? encodeParameterIfSet(elementTitle) : elementTitle;\n        return {\n            toBeReplaced,\n            replacement: replacement,\n        };\n    });\n}\nconst createIdentifierReplacement = (toBeReplaced, replacement = \"\") => ({ toBeReplaced, replacement, replaceGlobally: true });\nexport function* getInsightIdentifiersReplacements(customUrl, widgetRef, ctx) {\n    const { workspace, clientId, dataProductId } = ctx;\n    const dashboardId = yield select(selectDashboardId);\n    const widget = yield select(selectAnalyticalWidgetByRef(widgetRef));\n    const insight = yield select(selectInsightByRef(widget.insight));\n    const replacements = [\n        createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.PROJECT_ID, workspace),\n        createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.WORKSPACE_ID, workspace),\n        createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.DASHBOARD_ID, dashboardId),\n        createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.CLIENT_ID, clientId),\n        createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.DATA_PRODUCT_ID, dataProductId),\n        createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.INSIGHT_ID, insightId(insight)),\n    ];\n    if (customUrl.includes(DRILL_TO_URL_PLACEHOLDER.WIDGET_ID)) {\n        return [\n            ...replacements,\n            createIdentifierReplacement(DRILL_TO_URL_PLACEHOLDER.WIDGET_ID, widget.identifier),\n        ];\n    }\n    return replacements;\n}\nconst applyReplacements = (url, replacements) => replacements.reduce((customUrlWithReplacedPlaceholders, { toBeReplaced, replacement, replaceGlobally }) => customUrlWithReplacedPlaceholders.replace(replaceGlobally ? new RegExp(toBeReplaced, \"g\") : toBeReplaced, replacement), url);\nexport function* resolveDrillToCustomUrl(drillConfig, widgetRef, event, ctx, cmd) {\n    const customUrl = drillConfig.target.url;\n    const attributeIdentifiersReplacements = yield call(getAttributeIdentifiersReplacements, customUrl, event.drillContext.intersection, ctx);\n    const missingReplacement = attributeIdentifiersReplacements.find(({ replacement }) => replacement === undefined);\n    if (missingReplacement) {\n        throw invalidArgumentsProvided(ctx, cmd, `Drill to custom URL unable to resolve missing parameter ${missingReplacement.toBeReplaced}`);\n    }\n    const insightIdentifiersReplacements = yield call(getInsightIdentifiersReplacements, customUrl, widgetRef, ctx);\n    const replacements = [...attributeIdentifiersReplacements, ...insightIdentifiersReplacements];\n    return applyReplacements(customUrl, replacements);\n}\n//# sourceMappingURL=resolveDrillToCustomUrl.js.map","// (C) 2021 GoodData Corporation\nconst setDrillableItems = (state, action) => {\n    state.drillableItems = action.payload;\n};\nexport const drillReducers = {\n    setDrillableItems,\n};\n//# sourceMappingURL=drillReducers.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { drillReducers } from \"./drillReducers.js\";\nimport { drillInitialState } from \"./drillState.js\";\nconst drillSlice = createSlice({\n    name: \"meta\",\n    initialState: drillInitialState,\n    reducers: drillReducers,\n});\nexport const drillSliceReducer = drillSlice.reducer;\nexport const drillActions = drillSlice.actions;\n//# sourceMappingURL=index.js.map","export const drillInitialState = { drillableItems: [] };\n//# sourceMappingURL=drillState.js.map","// (C) 2021 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { drillTargetsAdapter } from \"./drillTargetsEntityAdapter.js\";\nconst drillTargetsSlice = createSlice({\n    name: \"drillTargets\",\n    initialState: drillTargetsAdapter.getInitialState(),\n    reducers: {\n        addDrillTargets: drillTargetsAdapter.upsertOne,\n    },\n});\nexport const drillTargetsReducer = drillTargetsSlice.reducer;\nexport const drillTargetsActions = drillTargetsSlice.actions;\n//# sourceMappingURL=index.js.map","// (C) 2022-2023 GoodData Corporation\nimport { areObjRefsEqual, idRef, uriRef } from \"@gooddata/sdk-model\";\nexport async function validateFilterDisplayForm(ctx, filterAttribute, displayForm) {\n    // validate if the filter attribute is available\n    if (!filterAttribute) {\n        return \"INVALID_FILTER_ATTRIBUTE\";\n    }\n    const { backend, workspace } = ctx;\n    const attributeDisplayForms = (await backend.workspace(workspace).attributes().getAttribute(filterAttribute)).displayForms;\n    // validate if the display form is between attributes available display forms.\n    // try matching both uri and id in case the type of ref is different from what is in the ref field\n    if (attributeDisplayForms.some((df) => areObjRefsEqual(idRef(df.id, \"displayForm\"), displayForm) ||\n        areObjRefsEqual(uriRef(df.uri), displayForm))) {\n        return \"VALID\";\n    }\n    return \"INVALID_ATTRIBUTE_DISPLAY_FORM\";\n}\n//# sourceMappingURL=filterDisplayFormValidation.js.map","// (C) 2022-2023 GoodData Corporation\n/**\n * Creates action through which you can query attributes for given display forms\n *\n * @param displayForms - attribute display forms\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @returns attribute metadata for given display forms\n *\n * @alpha\n */\nexport function queryAttributeByDisplayForm(displayForms, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.DISPLAY.FORM.ATTRIBUTE\",\n        correlationId,\n        payload: {\n            displayForms,\n        },\n    };\n}\n//# sourceMappingURL=attributes.js.map","// (C) 2022-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.legacyDashboards);\n/**\n * Selects all the legacy dashboards. Invocations before initialization lead to invariant errors.\n *\n * @alpha\n */\nexport const selectLegacyDashboards = createSelector(selectSelf, (state) => {\n    invariant(state.legacyDashboards, \"attempting to access uninitialized legacy dashboard state\");\n    return state.legacyDashboards;\n});\n//# sourceMappingURL=legacyDashboardsSelectors.js.map","import { select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { selectLegacyDashboards } from \"../../../store/legacyDashboards/legacyDashboardsSelectors.js\";\nimport { validateKpiDrillTarget } from \"./kpiDrillValidationUtils.js\";\nexport function* validateKpiDrill(drill, ctx, cmd) {\n    const legacyDashboards = yield select(selectLegacyDashboards);\n    try {\n        validateKpiDrillTarget(drill, legacyDashboards);\n    }\n    catch (ex) {\n        const messageDetail = ex.message;\n        throw invalidArgumentsProvided(ctx, cmd, `Invalid KPI drill target. Error: ${messageDetail}`);\n    }\n}\n//# sourceMappingURL=kpiDrillValidation.js.map","// (C) 2022 GoodData Corporation\nimport { areObjRefsEqual, objRefToString } from \"@gooddata/sdk-model\";\nexport function validateKpiDrillTarget(drill, availableLegacyDashboards) {\n    const relevantDashboard = availableLegacyDashboards.find((dash) => areObjRefsEqual(dash.ref, drill.target));\n    if (!relevantDashboard) {\n        throw Error(`Dashboard with ref ${objRefToString(drill.target)} was not found.`);\n    }\n    if (!relevantDashboard.tabs.some((tab) => tab.identifier === drill.tab)) {\n        throw Error(`Dashboard with ref ${objRefToString(drill.target)} does not contain tab with identifier ${drill.tab}.`);\n    }\n}\n//# sourceMappingURL=kpiDrillValidationUtils.js.map","export function loadInsight(ctx, insightRef) {\n    return ctx.backend.workspace(ctx.workspace).insights().getInsight(insightRef);\n}\n//# sourceMappingURL=loadInsight.js.map","import { initializeDashboardHandler } from \"./dashboard/initializeDashboardHandler/index.js\";\nimport { saveDashboardHandler } from \"./dashboard/saveDashboardHandler.js\";\nimport { saveAsDashboardHandler } from \"./dashboard/saveAsDashboardHandler.js\";\nimport { resetDashboardHandler } from \"./dashboard/resetDashboardHandler.js\";\nimport { renameDashboardHandler } from \"./dashboard/renameDashboardHandler.js\";\nimport { deleteDashboardHandler } from \"./dashboard/deleteDashboardHandler.js\";\nimport { exportDashboardToPdfHandler } from \"./dashboard/exportDashboardToPdfHandler.js\";\nimport { changeSharingHandler } from \"./dashboard/changeSharingHandler.js\";\nimport { triggerEventHandler } from \"./events/triggerEventHandler.js\";\nimport { upsertExecutionResultHandler } from \"./executionResults/upsertExecutionResultHandler.js\";\nimport { changeFilterContextSelectionHandler } from \"./filterContext/changeFilterContextSelectionHandler.js\";\nimport { changeDateFilterSelectionHandler } from \"./filterContext/dateFilter/changeDateFilterSelectionHandler.js\";\nimport { addAttributeFilterHandler } from \"./filterContext/attributeFilter/addAttributeFilterHandler.js\";\nimport { removeAttributeFiltersHandler } from \"./filterContext/attributeFilter/removeAttributeFiltersHandler.js\";\nimport { moveAttributeFilterHandler } from \"./filterContext/attributeFilter/moveAttributeFilterHandler.js\";\nimport { changeAttributeFilterSelectionHandler } from \"./filterContext/attributeFilter/changeAttributeFilterSelectionHandler.js\";\nimport { setAttributeFilterParentsHandler } from \"./filterContext/attributeFilter/setAttributeFilterParentHandler.js\";\nimport { changeAttributeTitleHandler } from \"./filterContext/attributeFilter/changeAttributeTitleHandler.js\";\nimport { changeAttributeSelectionModeHandler } from \"./filterContext/attributeFilter/changeAttributeSelectionModeHandler.js\";\nimport { addLayoutSectionHandler } from \"./layout/addLayoutSectionHandler.js\";\nimport { moveLayoutSectionHandler } from \"./layout/moveLayoutSectionHandler.js\";\nimport { removeLayoutSectionHandler } from \"./layout/removeLayoutSectionHandler.js\";\nimport { changeLayoutSectionHeaderHandler } from \"./layout/changeLayoutSectionHeaderHandler.js\";\nimport { addSectionItemsHandler } from \"./layout/addSectionItemsHandler.js\";\nimport { moveSectionItemHandler } from \"./layout/moveSectionItemHandler.js\";\nimport { removeSectionItemHandler } from \"./layout/removeSectionItemHandler.js\";\nimport { replaceSectionItemHandler } from \"./layout/replaceSectionItemHandler.js\";\nimport { undoLayoutChangesHandler } from \"./layout/undoLayoutChangesHandler.js\";\nimport { changeKpiWidgetHeaderHandler } from \"./widgets/changeKpiWidgetHeaderHandler.js\";\nimport { changeKpiWidgetMeasureHandler } from \"./widgets/changeKpiWidgetMeasureHandler.js\";\nimport { changeKpiWidgetFilterSettingsHandler } from \"./widgets/changeKpiWidgetFilterSettingsHandler.js\";\nimport { changeKpiWidgetComparisonHandler } from \"./widgets/changeKpiWidgetComparisonHandler.js\";\nimport { changeInsightWidgetHeaderHandler } from \"./widgets/changeInsightWidgetHeaderHandler.js\";\nimport { changeInsightWidgetDescriptionHandler } from \"./widgets/changeInsightWidgetDescriptionHandler.js\";\nimport { changeInsightWidgetFilterSettingsHandler } from \"./widgets/changeInsightWidgetFilterSettingsHandler.js\";\nimport { changeInsightWidgetVisPropertiesHandler } from \"./widgets/changeInsightWidgetVisPropertiesHandler.js\";\nimport { modifyDrillsForInsightWidgetHandler } from \"./widgets/modifyDrillsForInsightWidgetHandler.js\";\nimport { removeDrillsForInsightWidgetHandler } from \"./widgets/removeDrillsForInsightWidgetHandler.js\";\nimport { exportInsightWidgetHandler } from \"./widgets/exportInsightWidgetHandler.js\";\nimport { createAlertHandler } from \"./alerts/createAlertHandler.js\";\nimport { updateAlertHandler } from \"./alerts/updateAlertHandler.js\";\nimport { removeAlertsHandler } from \"./alerts/removeAlertsHandler.js\";\nimport { createScheduledEmailHandler } from \"./scheduledEmail/createScheduledEmailHandler.js\";\nimport { saveScheduledEmailHandler } from \"./scheduledEmail/saveScheduledEmailHandler.js\";\nimport { drillHandler } from \"./drill/drillHandler.js\";\nimport { drillDownHandler } from \"./drill/drillDownHandler.js\";\nimport { drillToInsightHandler } from \"./drill/drillToInsightHandler.js\";\nimport { drillToDashboardHandler } from \"./drill/drillToDashboardHandler.js\";\nimport { drillToAttributeUrlHandler } from \"./drill/drillToAttributeUrlHandler.js\";\nimport { drillToCustomUrlHandler } from \"./drill/drillToCustomUrlHandler.js\";\nimport { drillToLegacyDashboardHandler } from \"./drill/drillToLegacyDashboardHandler.js\";\nimport { changeDrillableItemsHandler } from \"./drill/changeDrillableItemsHandler.js\";\nimport { addDrillTargetsHandler } from \"./drillTargets/addDrillTargetsHandler.js\";\nimport { requestAsyncRenderHandler } from \"./render/requestAsyncRenderHandler.js\";\nimport { resolveAsyncRenderHandler } from \"./render/resolveAsyncRenderHandler.js\";\nimport { dispatchDashboardEvent } from \"../store/_infra/eventDispatcher.js\";\nimport { commandRejected } from \"../events/general.js\";\nimport { changeRenderModeHandler } from \"./renderMode/changeRenderModeHandler.js\";\nimport { changeAttributeDisplayFormHandler } from \"./filterContext/attributeFilter/changeAttributeDisplayFormHandler.js\";\nimport { removeDrillForKpiWidgetHandler } from \"./widgets/removeDrillForKpiWidgetHandler.js\";\nimport { setDrillForKpiWidgetHandler } from \"./widgets/setDrillForKpiWidgetHandler.js\";\nimport { resizeHeightHandler } from \"./layout/resizeHeightHandler.js\";\nimport { resizeWidthHandler } from \"./layout/resizeWidthHandler.js\";\nimport { refreshInsightWidgetHandler } from \"./widgets/refreshInsightWidgetHandler.js\";\nimport { removeSectionItemByWidgetRefHandler } from \"./layout/removeSectionItemByWidgetRefHandler.js\";\nimport { changeInsightWidgetVisConfigurationHandler } from \"./widgets/changeInsightWidgetVisConfigurationHandler.js\";\nimport { moveSectionItemToNewSectionHandler } from \"./layout/moveSectionItemToNewSectionHandler.js\";\nimport { changeKpiWidgetDescriptionHandler } from \"./widgets/changeKpiWidgetDescriptionHandler.js\";\nimport { changeKpiWidgetConfigurationHandler } from \"./widgets/changeKpiWidgetConfigurationHandler.js\";\nimport { changeInsightWidgetInsightHandler } from \"./widgets/changeInsightWidgetInsightHandler.js\";\nfunction* notImplementedCommand(ctx, cmd) {\n    yield dispatchDashboardEvent(commandRejected(ctx, cmd.correlationId));\n}\nexport const DefaultCommandHandlers = {\n    \"GDC.DASH/CMD.INITIALIZE\": initializeDashboardHandler,\n    \"GDC.DASH/CMD.SAVE\": saveDashboardHandler,\n    \"GDC.DASH/CMD.SAVEAS\": saveAsDashboardHandler,\n    \"GDC.DASH/CMD.RESET\": resetDashboardHandler,\n    \"GDC.DASH/CMD.RENAME\": renameDashboardHandler,\n    \"GDC.DASH/CMD.DELETE\": deleteDashboardHandler,\n    \"GDC.DASH/CMD.CHANGE_RENDER_MODE\": changeRenderModeHandler,\n    \"GDC.DASH/CMD.SHARING.CHANGE\": changeSharingHandler,\n    \"GDC.DASH/CMD.EXPORT.PDF\": exportDashboardToPdfHandler,\n    \"GDC.DASH/CMD.EVENT.TRIGGER\": triggerEventHandler,\n    \"GDC.DASH/CMD.EXECUTION_RESULT.UPSERT\": upsertExecutionResultHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.CHANGE_SELECTION\": changeFilterContextSelectionHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.DATE_FILTER.CHANGE_SELECTION\": changeDateFilterSelectionHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.ADD\": addAttributeFilterHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.REMOVE\": removeAttributeFiltersHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.MOVE\": moveAttributeFilterHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.CHANGE_SELECTION\": changeAttributeFilterSelectionHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_PARENTS\": setAttributeFilterParentsHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_DISPLAY_FORM\": changeAttributeDisplayFormHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_TITLE\": changeAttributeTitleHandler,\n    \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_SELECTION_MODE\": changeAttributeSelectionModeHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.ADD_SECTION\": addLayoutSectionHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_SECTION\": moveLayoutSectionHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_SECTION\": removeLayoutSectionHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.CHANGE_SECTION_HEADER\": changeLayoutSectionHeaderHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.RESIZE_HEIGHT\": resizeHeightHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.RESIZE_WIDTH\": resizeWidthHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.ADD_ITEMS\": addSectionItemsHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_ITEM\": moveSectionItemHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_ITEM_TO_NEW_SECTION\": moveSectionItemToNewSectionHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_ITEM\": removeSectionItemHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_ITEM_BY_WIDGET_REF\": removeSectionItemByWidgetRefHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.REPLACE_ITEM\": replaceSectionItemHandler,\n    \"GDC.DASH/CMD.FLUID_LAYOUT.UNDO\": undoLayoutChangesHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_HEADER\": changeKpiWidgetHeaderHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_MEASURE\": changeKpiWidgetMeasureHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\": changeKpiWidgetFilterSettingsHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_COMPARISON\": changeKpiWidgetComparisonHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.REMOVE_DRILL\": removeDrillForKpiWidgetHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.SET_DRILL\": setDrillForKpiWidgetHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.REFRESH\": notImplementedCommand,\n    \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_DESCRIPTION\": changeKpiWidgetDescriptionHandler,\n    \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_CONFIGURATION\": changeKpiWidgetConfigurationHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_HEADER\": changeInsightWidgetHeaderHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_DESCRIPTION\": changeInsightWidgetDescriptionHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_FILTER_SETTINGS\": changeInsightWidgetFilterSettingsHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_PROPERTIES\": changeInsightWidgetVisPropertiesHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_CONFIGURATION\": changeInsightWidgetVisConfigurationHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.CHANGE_INSIGHT\": changeInsightWidgetInsightHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.MODIFY_DRILLS\": modifyDrillsForInsightWidgetHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.REMOVE_DRILLS\": removeDrillsForInsightWidgetHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.REFRESH\": refreshInsightWidgetHandler,\n    \"GDC.DASH/CMD.INSIGHT_WIDGET.EXPORT\": exportInsightWidgetHandler,\n    \"GDC.DASH/CMD.ALERT.CREATE\": createAlertHandler,\n    \"GDC.DASH/CMD.ALERT.UPDATE\": updateAlertHandler,\n    \"GDC.DASH/CMD.ALERTS.REMOVE\": removeAlertsHandler,\n    \"GDC.DASH/CMD.SCHEDULED_EMAIL.CREATE\": createScheduledEmailHandler,\n    \"GDC.DASH/CMD.SCHEDULED_EMAIL.SAVE\": saveScheduledEmailHandler,\n    \"GDC.DASH/CMD.DRILL\": drillHandler,\n    \"GDC.DASH/CMD.DRILL.DRILL_DOWN\": drillDownHandler,\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_INSIGHT\": drillToInsightHandler,\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_DASHBOARD\": drillToDashboardHandler,\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_ATTRIBUTE_URL\": drillToAttributeUrlHandler,\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_CUSTOM_URL\": drillToCustomUrlHandler,\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_LEGACY_DASHBOARD\": drillToLegacyDashboardHandler,\n    \"GDC.DASH/CMD.DRILL.DRILLABLE_ITEMS.CHANGE\": changeDrillableItemsHandler,\n    \"GDC.DASH/CMD.DRILL_TARGETS.ADD\": addDrillTargetsHandler,\n    \"GDC.DASH/CMD.RENDER.ASYNC.REQUEST\": requestAsyncRenderHandler,\n    \"GDC.DASH/CMD.RENDER.ASYNC.RESOLVE\": resolveAsyncRenderHandler,\n};\n//# sourceMappingURL=index.js.map","import { dashboardRenamed } from \"../../events/dashboard.js\";\nimport { metaActions } from \"../../store/meta/index.js\";\nimport { put } from \"redux-saga/effects\";\nexport function* renameDashboardHandler(ctx, cmd) {\n    const { newTitle } = cmd.payload;\n    yield put(metaActions.setDashboardTitle(newTitle));\n    return dashboardRenamed(ctx, newTitle, cmd.correlationId);\n}\n//# sourceMappingURL=renameDashboardHandler.js.map","import { dispatchDashboardEvent } from \"../../store/_infra/eventDispatcher.js\";\nexport function* triggerEventHandler(ctx, cmd) {\n    // fill the ctx property of the event properly so that the caller does not need to do this\n    const fullEvent = Object.assign(Object.assign({}, cmd.payload.eventBody), { ctx });\n    yield dispatchDashboardEvent(fullEvent);\n}\n//# sourceMappingURL=triggerEventHandler.js.map","import { put } from \"redux-saga/effects\";\nimport { executionResultsActions } from \"../../store/executionResults/index.js\";\nexport function* upsertExecutionResultHandler(_ctx, cmd) {\n    yield put(executionResultsActions.upsertExecutionResult(cmd.payload));\n}\n//# sourceMappingURL=upsertExecutionResultHandler.js.map","import { call, put, select } from \"redux-saga/effects\";\nimport { newAbsoluteDashboardDateFilter, newAllTimeDashboardDateFilter, newRelativeDashboardDateFilter, } from \"@gooddata/sdk-model\";\nimport toNumber from \"lodash/toNumber.js\";\nimport { dateFilterChanged } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectFilterContextDateFilter } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { canApplyDateFilter, dispatchFilterContextChanged } from \"../common.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nexport function* changeDateFilterSelectionHandler(ctx, cmd) {\n    const isAllTime = cmd.payload.type === \"relative\" &&\n        cmd.payload.granularity === \"GDC.time.date\" &&\n        cmd.payload.from === undefined &&\n        cmd.payload.to === undefined;\n    const canApply = yield call(canApplyDateFilter, dateFilterSelectionToDateFilter(cmd.payload));\n    if (!canApply) {\n        throw invalidArgumentsProvided(ctx, cmd, `Cannot apply a date filter that is invalid by the current dateFilterConfig.`);\n    }\n    yield put(filterContextActions.upsertDateFilter(isAllTime\n        ? { type: \"allTime\" }\n        : {\n            type: cmd.payload.type,\n            granularity: cmd.payload.granularity,\n            from: cmd.payload.from,\n            to: cmd.payload.to,\n        }));\n    const affectedFilter = yield select(selectFilterContextDateFilter);\n    yield dispatchDashboardEvent(dateFilterChanged(ctx, affectedFilter, cmd.payload.dateFilterOptionLocalId, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\nfunction dateFilterSelectionToDateFilter(dateFilterSelection) {\n    if (dateFilterSelection.type === \"absolute\" && dateFilterSelection.from && dateFilterSelection.to) {\n        return newAbsoluteDashboardDateFilter(dateFilterSelection.from.toString(), dateFilterSelection.to.toString());\n    }\n    else if (dateFilterSelection.type === \"relative\" &&\n        dateFilterSelection.granularity === \"GDC.time.date\" &&\n        dateFilterSelection.from === undefined &&\n        dateFilterSelection.to === undefined) {\n        return newAllTimeDashboardDateFilter();\n    }\n    else {\n        return newRelativeDashboardDateFilter(dateFilterSelection.granularity, toNumber(dateFilterSelection.from), toNumber(dateFilterSelection.to));\n    }\n}\n//# sourceMappingURL=changeDateFilterSelectionHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { all, call, put, select } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { attributeFilterAdded } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectAttributeFilterDisplayFormsMap, selectCanAddMoreAttributeFilters, selectFilterContextAttributeFilterByDisplayForm, selectFilterContextAttributeFilters, } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { canFilterBeAdded } from \"./validation/uniqueFiltersValidation.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { resolveDisplayFormMetadata } from \"../../../utils/displayFormResolver.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { batchActions } from \"redux-batched-actions\";\nexport function* addAttributeFilterHandler(ctx, cmd) {\n    const { displayForm, index, initialIsNegativeSelection, initialSelection, parentFilters, selectionMode } = cmd.payload;\n    const isUnderFilterCountLimit = yield select(selectCanAddMoreAttributeFilters);\n    if (!isUnderFilterCountLimit) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to add filter, even though the limit on the count of filters has been reached.`);\n    }\n    const allFilters = yield select(selectFilterContextAttributeFilters);\n    const resolvedDisplayForm = yield call(resolveDisplayFormMetadata, ctx, [displayForm]);\n    if (!isEmpty(resolvedDisplayForm.missing)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to add filter for a non-existing display form ${objRefToString(displayForm)}.`);\n    }\n    const displayFormMetadata = resolvedDisplayForm.resolved.get(displayForm);\n    invariant(displayFormMetadata);\n    const attributeRef = displayFormMetadata.attribute;\n    const canBeAdded = yield call(canFilterBeAdded, ctx, displayForm, allFilters);\n    if (!canBeAdded) {\n        throw invalidArgumentsProvided(ctx, cmd, `Filter for attribute ${objRefToString(attributeRef)} represented by the displayForm ${objRefToString(displayForm)} already exists in the filter context.`);\n    }\n    yield put(batchActions([\n        filterContextActions.addAttributeFilter({\n            displayForm: displayFormMetadata.ref,\n            index,\n            initialIsNegativeSelection,\n            initialSelection,\n            parentFilters,\n            selectionMode,\n        }),\n        filterContextActions.addAttributeFilterDisplayForm(displayFormMetadata),\n    ]));\n    const addedFilter = yield select(selectFilterContextAttributeFilterByDisplayForm(displayFormMetadata.ref));\n    invariant(addedFilter, \"Inconsistent state in attributeFilterAddCommandHandler\");\n    yield dispatchDashboardEvent(attributeFilterAdded(ctx, addedFilter, cmd.payload.index, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\nexport function* getConnectingAttributes(ctx, addedFilterAttribute, neighborFilter) {\n    var _a;\n    const { backend, workspace } = ctx;\n    const displayFormsMap = yield select(selectAttributeFilterDisplayFormsMap);\n    const neighborFilterAttribute = (_a = displayFormsMap.get(neighborFilter.attributeFilter.displayForm)) === null || _a === void 0 ? void 0 : _a.attribute;\n    invariant(neighborFilterAttribute, \"Inconsistent state in attributeFilterAddCommandHandler\");\n    const connectingAttributeRefs = yield call(getCommonAttributesRefs, ctx.backend, ctx.workspace, addedFilterAttribute, neighborFilterAttribute);\n    const connectingAttributesMeta = yield all(connectingAttributeRefs.map((ref) => call(getConnectingAttributeByRef, backend, workspace, ref)));\n    const connectingAttributes = connectingAttributesMeta.map((meta) => {\n        return {\n            title: meta.title,\n            ref: meta.ref,\n        };\n    });\n    return {\n        filterLocalId: neighborFilter.attributeFilter.localIdentifier,\n        connectingAttributes: connectingAttributes,\n    };\n}\nfunction getCommonAttributesRefs(backend, workspace, addedFilterAttribute, neighborFilterAttribute) {\n    return backend\n        .workspace(workspace)\n        .attributes()\n        .getCommonAttributes([addedFilterAttribute, neighborFilterAttribute]);\n}\nfunction getConnectingAttributeByRef(backend, workspace, ref) {\n    return backend.workspace(workspace).attributes().getAttribute(ref);\n}\n//# sourceMappingURL=addAttributeFilterHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { batchActions } from \"redux-batched-actions\";\nimport difference from \"lodash/difference.js\";\nimport partition from \"lodash/partition.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { attributeFilterRemoved } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectFilterContextAttributeFilters } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { layoutActions } from \"../../../store/layout/index.js\";\nexport function* removeAttributeFiltersHandler(ctx, cmd) {\n    const { filterLocalIds } = cmd.payload;\n    const allFilters = yield select(selectFilterContextAttributeFilters);\n    const [removedFilters, survivingFilters] = partition(allFilters, (item) => filterLocalIds.includes(item.attributeFilter.localIdentifier));\n    const invalidLocalIds = difference(filterLocalIds, allFilters.map((filter) => filter.attributeFilter.localIdentifier));\n    if (invalidLocalIds.length) {\n        throw invalidArgumentsProvided(ctx, cmd, `Invalid filterLocalIds provided. These ids were not found: ${invalidLocalIds.join(\", \")}.`);\n    }\n    for (const removedFilter of removedFilters) {\n        const affectedChildren = survivingFilters.filter((item) => {\n            var _a;\n            return (_a = item.attributeFilter.filterElementsBy) === null || _a === void 0 ? void 0 : _a.some((parent) => filterLocalIds.includes(parent.filterLocalIdentifier));\n        });\n        const batch = batchActions([\n            // remove filter from parents and keep track of the affected filters\n            ...affectedChildren.map(({ attributeFilter }) => filterContextActions.setAttributeFilterParents({\n                filterLocalId: attributeFilter.localIdentifier,\n                parentFilters: attributeFilter.filterElementsBy.filter((parent) => parent.filterLocalIdentifier !== (removedFilter === null || removedFilter === void 0 ? void 0 : removedFilter.attributeFilter.localIdentifier)),\n            })),\n            // remove filter itself\n            filterContextActions.removeAttributeFilter({\n                filterLocalId: removedFilter.attributeFilter.localIdentifier,\n            }),\n            // remove filter's display form metadata object\n            filterContextActions.removeAttributeFilterDisplayForms(removedFilter.attributeFilter.displayForm),\n            // house-keeping: ensure the removed attribute filter disappears from widget ignore lists\n            layoutActions.removeIgnoredAttributeFilter({\n                displayFormRefs: [removedFilter.attributeFilter.displayForm],\n            }),\n        ]);\n        yield put(batch);\n        yield dispatchDashboardEvent(attributeFilterRemoved(ctx, removedFilter, affectedChildren, cmd.correlationId));\n    }\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=removeAttributeFiltersHandler.js.map","// (C) 2021 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { attributeFilterMoved } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectFilterContextAttributeFilterByLocalId, selectFilterContextAttributeFilterIndexByLocalId, selectFilterContextFilters, } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nexport function* moveAttributeFilterHandler(ctx, cmd) {\n    const { filterLocalId, index } = cmd.payload;\n    // validate filterLocalId\n    const affectedFilter = yield select(selectFilterContextAttributeFilterByLocalId(filterLocalId));\n    if (!affectedFilter) {\n        throw invalidArgumentsProvided(ctx, cmd, `Filter with filterLocalId ${filterLocalId} not found.`);\n    }\n    // validate target index\n    const allFilters = yield select(selectFilterContextFilters);\n    const maximalTargetIndex = allFilters.length - 1;\n    if (index > maximalTargetIndex || index < -1) {\n        throw invalidArgumentsProvided(ctx, cmd, `Invalid index (${index}) provided, it must be between -1 and ${maximalTargetIndex}`);\n    }\n    const originalIndex = yield select(selectFilterContextAttributeFilterIndexByLocalId(filterLocalId));\n    yield put(filterContextActions.moveAttributeFilter({\n        filterLocalId,\n        index,\n    }));\n    const finalIndex = yield select(selectFilterContextAttributeFilterIndexByLocalId(filterLocalId));\n    yield dispatchDashboardEvent(attributeFilterMoved(ctx, affectedFilter, originalIndex, finalIndex, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=moveAttributeFilterHandler.js.map","// (C) 2021 GoodData Corporation\nimport { all, call, put, select } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { attributeFilterSelectionChanged } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { selectAttributeFilterDescendants, selectFilterContextAttributeFilterByLocalId, } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nexport function* changeAttributeFilterSelectionHandler(ctx, cmd) {\n    const { elements, filterLocalId, selectionType } = cmd.payload;\n    // validate filterLocalId\n    const affectedFilter = yield select(selectFilterContextAttributeFilterByLocalId(cmd.payload.filterLocalId));\n    if (!affectedFilter) {\n        throw invalidArgumentsProvided(ctx, cmd, `Filter with filterLocalId ${filterLocalId} not found.`);\n    }\n    yield put(filterContextActions.updateAttributeFilterSelection({\n        elements,\n        filterLocalId,\n        negativeSelection: selectionType === \"NOT_IN\",\n    }));\n    const changedFilter = yield select(selectFilterContextAttributeFilterByLocalId(cmd.payload.filterLocalId));\n    invariant(changedFilter, \"Inconsistent state in attributeFilterChangeSelectionCommandHandler\");\n    const childFiltersIds = yield select(selectAttributeFilterDescendants(changedFilter.attributeFilter.localIdentifier));\n    yield all(childFiltersIds.map((childFilterId) => put(filterContextActions.updateAttributeFilterSelection({\n        filterLocalId: childFilterId,\n        elements: {\n            uris: [],\n        },\n        negativeSelection: true,\n    }))));\n    yield dispatchDashboardEvent(attributeFilterSelectionChanged(ctx, changedFilter, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=changeAttributeFilterSelectionHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { attributeFilterParentChanged } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectAttributeFilterDisplayFormsMap, selectFilterContextAttributeFilterByLocalId, selectFilterContextAttributeFilters, } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { validateAttributeFilterParents } from \"./validation/parentFiltersValidation.js\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nexport function* setAttributeFilterParentsHandler(ctx, cmd) {\n    const { filterLocalId, parentFilters } = cmd.payload;\n    const allFilters = yield select(selectFilterContextAttributeFilters);\n    const affectedFilter = yield select(selectFilterContextAttributeFilterByLocalId(filterLocalId));\n    const displayFormsMap = yield select(selectAttributeFilterDisplayFormsMap);\n    if (!affectedFilter) {\n        throw invalidArgumentsProvided(ctx, cmd, `Filter with localId ${filterLocalId} was not found.`);\n    }\n    const validationResult = yield call(validateAttributeFilterParents, ctx, affectedFilter, [...parentFilters], allFilters, displayFormsMap);\n    if (validationResult !== \"VALID\") {\n        const message = validationResult === \"EXTRANEOUS_PARENT\"\n            ? \"Some of the parents provided cannot be used because filters for those are not in the filters collection. \" +\n                \"Only existing filters can be used as parent filters.\"\n            : validationResult === \"INVALID_METADATA\"\n                ? \"Some of the parents provided cannot be used because the 'metadata' for parent filter are missing.\"\n                : \"Some of the parents provided cannot be used because the 'over' parameter is invalid for the target filter.\";\n        throw invalidArgumentsProvided(ctx, cmd, message);\n    }\n    yield put(filterContextActions.setAttributeFilterParents({\n        filterLocalId,\n        parentFilters,\n    }));\n    const changedFilter = yield select(selectFilterContextAttributeFilterByLocalId(filterLocalId));\n    invariant(changedFilter, \"Inconsistent state in attributeFilterSetParentCommandHandler\");\n    yield dispatchDashboardEvent(attributeFilterParentChanged(ctx, changedFilter, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=setAttributeFilterParentHandler.js.map","// (C) 2022-2023 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { batchActions } from \"redux-batched-actions\";\nimport flatMap from \"lodash/flatMap.js\";\nimport { attributeDisplayFormChanged } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectFilterContextAttributeFilterByLocalId } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { validateFilterDisplayForm } from \"./validation/filterDisplayFormValidation.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { selectAllCatalogDisplayFormsMap } from \"../../../store/catalog/catalogSelectors.js\";\nimport { query } from \"../../../store/_infra/queryCall.js\";\nimport { queryAttributeByDisplayForm } from \"../../../queries/index.js\";\nimport { newDisplayFormMap } from \"../../../../_staging/metadata/objRefMap.js\";\nexport function* changeAttributeDisplayFormHandler(ctx, cmd) {\n    const { filterLocalId, displayForm } = cmd.payload;\n    const { backend: { capabilities: { supportsElementUris }, }, } = ctx;\n    const catalogDisplayFormsMap = yield select(selectAllCatalogDisplayFormsMap);\n    const attributes = yield call(query, queryAttributeByDisplayForm([displayForm]));\n    const attributeDisplayFormsMap = newDisplayFormMap([...flatMap(attributes, (a) => a.displayForms)]);\n    const displayFormData = catalogDisplayFormsMap.get(displayForm) || attributeDisplayFormsMap.get(displayForm);\n    invariant(displayFormData, \"Inconsistent state in changeAttributeDisplayFormHandler, cannot update attribute filter with display form not available in the catalog.\");\n    const attribute = displayFormData === null || displayFormData === void 0 ? void 0 : displayFormData.attribute;\n    const validationResult = yield call(validateFilterDisplayForm, ctx, attribute, displayForm);\n    if (validationResult !== \"VALID\") {\n        const message = validationResult === \"INVALID_ATTRIBUTE_DISPLAY_FORM\"\n            ? \"The display form provided is not a valid display form of the attribute filter.\"\n            : \"Cannot find the attribute for the display form used on the attribute filter.\";\n        throw invalidArgumentsProvided(ctx, cmd, message);\n    }\n    yield put(batchActions([\n        // keep the attribute display form field up to date\n        filterContextActions.addAttributeFilterDisplayForm(displayFormData),\n        filterContextActions.changeAttributeDisplayForm({\n            filterLocalId,\n            displayForm,\n            supportsElementUris,\n        }),\n    ]));\n    const changedFilter = yield select(selectFilterContextAttributeFilterByLocalId(filterLocalId));\n    invariant(changedFilter, \"Inconsistent state in changeAttributeDisplayFormHandler, cannot update attribute filter for given local identifier.\");\n    yield dispatchDashboardEvent(attributeDisplayFormChanged(ctx, changedFilter, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=changeAttributeDisplayFormHandler.js.map","// (C) 2023 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { attributeDisplayTitleChanged } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectFilterContextAttributeFilterByLocalId } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nexport function* changeAttributeTitleHandler(ctx, cmd) {\n    const { filterLocalId, title } = cmd.payload;\n    // validate filterLocalId\n    const affectedFilter = yield select(selectFilterContextAttributeFilterByLocalId(cmd.payload.filterLocalId));\n    if (!affectedFilter) {\n        throw invalidArgumentsProvided(ctx, cmd, `Filter with filterLocalId ${filterLocalId} not found.`);\n    }\n    yield put(filterContextActions.changeAttributeTitle({\n        filterLocalId,\n        title,\n    }));\n    const changedFilter = yield select(selectFilterContextAttributeFilterByLocalId(cmd.payload.filterLocalId));\n    invariant(changedFilter, \"Inconsistent state in changeAttributeTitleHandler, cannot update attribute filter for given local identifier.\");\n    yield dispatchDashboardEvent(attributeDisplayTitleChanged(ctx, changedFilter, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=changeAttributeTitleHandler.js.map","// (C) 2023 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { dispatchFilterContextChanged } from \"../common.js\";\nimport { attributeSelectionModeChanged } from \"../../../events/filters.js\";\nimport { filterContextActions } from \"../../../store/filterContext/index.js\";\nimport { selectFilterContextAttributeFilterByLocalId } from \"../../../store/filterContext/filterContextSelectors.js\";\nimport { dispatchDashboardEvent } from \"../../../store/_infra/eventDispatcher.js\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nexport function* changeAttributeSelectionModeHandler(ctx, cmd) {\n    const { filterLocalId, selectionMode } = cmd.payload;\n    // validate filterLocalId\n    const affectedFilter = yield select(selectFilterContextAttributeFilterByLocalId(cmd.payload.filterLocalId));\n    if (!affectedFilter) {\n        throw invalidArgumentsProvided(ctx, cmd, `Filter with filterLocalId ${filterLocalId} not found.`);\n    }\n    yield put(filterContextActions.changeSelectionMode({\n        filterLocalId,\n        selectionMode,\n    }));\n    const changedFilter = yield select(selectFilterContextAttributeFilterByLocalId(cmd.payload.filterLocalId));\n    invariant(changedFilter, \"Inconsistent state in changeAttributeSelectionModeHandler, cannot update attribute filter for given local identifier.\");\n    yield dispatchDashboardEvent(attributeSelectionModeChanged(ctx, changedFilter, cmd.correlationId));\n    yield call(dispatchFilterContextChanged, ctx, cmd);\n}\n//# sourceMappingURL=changeAttributeSelectionModeHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout, selectStash } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutSectionAdded } from \"../../events/layout.js\";\nimport { validateSectionPlacement } from \"./validation/layoutValidation.js\";\nimport { validateAndResolveStashedItems } from \"./validation/stashValidation.js\";\nimport { resolveIndexOfNewItem } from \"../../utils/arrayOps.js\";\nimport { selectInsightsMap } from \"../../store/insights/insightsSelectors.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { insightsActions } from \"../../store/insights/index.js\";\nimport { validateAndNormalizeWidgetItems, validateAndResolveItemFilterSettings, } from \"./validation/itemValidation.js\";\nimport { addTemporaryIdentityToWidgets } from \"../../utils/dashboardItemUtils.js\";\nimport { sanitizeHeader } from \"./utils.js\";\nfunction validateAndResolveItems(commandCtx) {\n    const { ctx, layout, stash, initialItems, cmd: { payload: { index }, }, } = commandCtx;\n    if (!validateSectionPlacement(layout, index)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to insert new section at wrong index ${index}. There are currently ${layout.sections.length} sections.`);\n    }\n    const stashValidationResult = validateAndResolveStashedItems(stash, initialItems);\n    if (!isEmpty(stashValidationResult.missing)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to use non-existing stashes. Identifiers of missing stashes: ${stashValidationResult.missing.join(\", \")}`);\n    }\n    return stashValidationResult;\n}\nexport function* addLayoutSectionHandler(ctx, cmd) {\n    const { payload: { initialItems = [] }, } = cmd;\n    const commandCtx = {\n        ctx,\n        cmd,\n        initialItems: addTemporaryIdentityToWidgets(initialItems),\n        layout: yield select(selectLayout),\n        stash: yield select(selectStash),\n        availableInsights: yield select(selectInsightsMap),\n    };\n    const stashValidationResult = validateAndResolveItems(commandCtx);\n    const { payload: { index, initialHeader, autoResolveDateFilterDataset }, } = cmd;\n    const normalizationResult = yield call(validateAndNormalizeWidgetItems, ctx, stashValidationResult, cmd);\n    const itemsToAdd = yield call(validateAndResolveItemFilterSettings, ctx, cmd, normalizationResult, autoResolveDateFilterDataset);\n    const section = {\n        type: \"IDashboardLayoutSection\",\n        header: sanitizeHeader(initialHeader),\n        items: itemsToAdd,\n    };\n    yield put(batchActions([\n        insightsActions.addInsights(normalizationResult.resolvedInsights.loaded),\n        layoutActions.addSection({\n            section,\n            usedStashes: stashValidationResult.existing,\n            index,\n            undo: {\n                cmd,\n            },\n        }),\n    ]));\n    return layoutSectionAdded(ctx, section, resolveIndexOfNewItem(commandCtx.layout.sections, index), cmd.correlationId);\n}\n//# sourceMappingURL=addLayoutSectionHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateSectionExists, validateSectionPlacement } from \"./validation/layoutValidation.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutSectionMoved } from \"../../events/layout.js\";\nimport { resolveRelativeIndex } from \"../../utils/arrayOps.js\";\nfunction validateAndResolve(commandCtx) {\n    const { ctx, cmd: { payload: { sectionIndex, toIndex }, }, layout, } = commandCtx;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move non-existent section from index ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    if (!validateSectionPlacement(layout, toIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move section to a wrong index ${toIndex}. There are currently ${layout.sections.length} sections.`);\n    }\n    const absoluteIndex = resolveRelativeIndex(layout.sections, toIndex);\n    if (sectionIndex === absoluteIndex) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move section to a same index where it already resides ${sectionIndex}.`);\n    }\n    return {\n        absoluteIndex,\n    };\n}\nexport function* moveLayoutSectionHandler(ctx, cmd) {\n    const commandCtx = {\n        ctx,\n        cmd,\n        layout: yield select(selectLayout),\n    };\n    const { absoluteIndex } = validateAndResolve(commandCtx);\n    const { sectionIndex, toIndex } = cmd.payload;\n    yield put(layoutActions.moveSection({\n        sectionIndex,\n        toIndex,\n        undo: {\n            cmd,\n        },\n    }));\n    const section = commandCtx.layout.sections[sectionIndex];\n    return layoutSectionMoved(ctx, section, sectionIndex, absoluteIndex, cmd.correlationId);\n}\n//# sourceMappingURL=moveLayoutSectionHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutSectionRemoved } from \"../../events/layout.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { validateSectionExists } from \"./validation/layoutValidation.js\";\nimport { resolveRelativeIndex } from \"../../utils/arrayOps.js\";\nexport function* removeLayoutSectionHandler(ctx, cmd) {\n    const layout = yield select(selectLayout);\n    const { index, stashIdentifier } = cmd.payload;\n    if (isEmpty(layout.sections)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to remove a section from an empty layout.`);\n    }\n    if (!validateSectionExists(layout, index)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to remove non-existing layout section at index ${index}.`);\n    }\n    const absoluteIndex = resolveRelativeIndex(layout.sections, index);\n    const section = layout.sections[absoluteIndex];\n    yield put(layoutActions.removeSection({\n        index: absoluteIndex,\n        stashIdentifier,\n        undo: {\n            cmd,\n        },\n    }));\n    return layoutSectionRemoved(ctx, section, absoluteIndex, false, stashIdentifier, cmd.correlationId);\n}\n//# sourceMappingURL=removeLayoutSectionHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateSectionExists } from \"./validation/layoutValidation.js\";\nimport merge from \"lodash/merge.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutSectionHeaderChanged } from \"../../events/layout.js\";\nimport { sanitizeHeader } from \"./utils.js\";\nexport function* changeLayoutSectionHeaderHandler(ctx, cmd) {\n    var _a;\n    const layout = yield select(selectLayout);\n    const { index, header, merge: mergeHeaders } = cmd.payload;\n    if (!validateSectionExists(layout, index)) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to modify header of non-existent section at ${index}. There are currently ${layout.sections.length} sections.`);\n    }\n    const existingHeader = (_a = layout.sections[index].header) !== null && _a !== void 0 ? _a : {};\n    const newHeader = mergeHeaders ? merge({}, existingHeader, header) : header;\n    const sanitizedHeader = sanitizeHeader(newHeader);\n    yield put(layoutActions.changeSectionHeader({\n        index,\n        header: sanitizedHeader,\n        undo: {\n            cmd,\n        },\n    }));\n    return layoutSectionHeaderChanged(ctx, sanitizedHeader, index, cmd.correlationId);\n}\n//# sourceMappingURL=changeLayoutSectionHeaderHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { put, select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { layoutSectionItemsHeightResized, } from \"../../events/layout.js\";\nimport { getMaxHeight, getMinHeight } from \"../../../_staging/layout/sizing.js\";\nimport { selectInsightsMap } from \"../../store/insights/insightsSelectors.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { validateItemExists, validateSectionExists } from \"./validation/layoutValidation.js\";\nfunction validateLayoutIndexes(ctx, layout, command) {\n    const { payload: { sectionIndex, itemIndexes }, } = command;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, command, `Attempting to resize item from non-existent section at ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    const fromSection = layout.sections[sectionIndex];\n    itemIndexes.forEach((itemIndex) => {\n        if (!validateItemExists(fromSection, itemIndex)) {\n            throw invalidArgumentsProvided(ctx, command, `Attempting to resize non-existent item from index ${itemIndex} in section ${sectionIndex}. There are only ${fromSection.items.length} items in this section.`);\n        }\n    });\n}\nexport function* resizeHeightHandler(ctx, cmd) {\n    const { payload: { sectionIndex, itemIndexes, height }, } = cmd;\n    const layout = yield select(selectLayout);\n    const insightsMap = yield select(selectInsightsMap);\n    validateLayoutIndexes(ctx, layout, cmd);\n    validateHeight(ctx, layout, insightsMap, cmd);\n    yield put(layoutActions.changeItemsHeight({\n        sectionIndex,\n        itemIndexes,\n        height,\n    }));\n    return layoutSectionItemsHeightResized(ctx, sectionIndex, itemIndexes, height, cmd.correlationId);\n}\nfunction validateHeight(ctx, layout, insightsMap, cmd) {\n    const { payload: { sectionIndex, itemIndexes, height }, } = cmd;\n    const widgets = itemIndexes.map((itemIndex) => layout.sections[sectionIndex].items[itemIndex].widget);\n    const minLimit = getMinHeight(widgets, insightsMap);\n    const maxLimit = getMaxHeight(widgets, insightsMap);\n    const validHeight = height >= minLimit && height <= maxLimit;\n    if (!validHeight) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to set invalid height. Allowed height is from ${minLimit} to ${maxLimit}.`);\n    }\n}\n//# sourceMappingURL=resizeHeightHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { put, select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { getMinWidth } from \"../../../_staging/layout/sizing.js\";\nimport { selectInsightsMap } from \"../../store/insights/insightsSelectors.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { validateItemExists, validateSectionExists } from \"./validation/layoutValidation.js\";\nimport { layoutSectionItemWidthResized, } from \"../../events/layout.js\";\nimport { DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT } from \"../../../_staging/dashboard/fluidLayout/config.js\";\nfunction validateLayoutIndexes(ctx, layout, command) {\n    const { payload: { sectionIndex, itemIndex }, } = command;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, command, `Attempting to resize item from non-existent section at ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    const fromSection = layout.sections[sectionIndex];\n    if (!validateItemExists(fromSection, itemIndex)) {\n        throw invalidArgumentsProvided(ctx, command, `Attempting to resize non-existent item from index ${itemIndex} in section ${sectionIndex}. There are only ${fromSection.items.length} items in this section.`);\n    }\n}\nexport function* resizeWidthHandler(ctx, cmd) {\n    const { payload: { sectionIndex, itemIndex, width }, } = cmd;\n    const layout = yield select(selectLayout);\n    const insightsMap = yield select(selectInsightsMap);\n    validateLayoutIndexes(ctx, layout, cmd);\n    validateWidth(ctx, layout, insightsMap, cmd);\n    yield put(layoutActions.changeItemWidth({\n        sectionIndex,\n        itemIndex,\n        width,\n    }));\n    return layoutSectionItemWidthResized(ctx, sectionIndex, itemIndex, width, cmd.correlationId);\n}\nfunction validateWidth(ctx, layout, insightsMap, cmd) {\n    const { payload: { sectionIndex, itemIndex, width }, } = cmd;\n    const widget = layout.sections[sectionIndex].items[itemIndex].widget;\n    const minLimit = getMinWidth(widget, insightsMap);\n    const maxLimit = DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT;\n    const validHeight = width >= minLimit && width <= maxLimit;\n    if (!validHeight) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attempting to set invalid width. Allowed width is from ${minLimit} to ${maxLimit}.`);\n    }\n}\n//# sourceMappingURL=resizeWidthHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout, selectStash } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateItemPlacement, validateSectionExists } from \"./validation/layoutValidation.js\";\nimport { validateAndResolveStashedItems } from \"./validation/stashValidation.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutSectionItemsAdded } from \"../../events/layout.js\";\nimport { resolveIndexOfNewItem } from \"../../utils/arrayOps.js\";\nimport { selectInsightsMap } from \"../../store/insights/insightsSelectors.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { insightsActions } from \"../../store/insights/index.js\";\nimport { validateAndNormalizeWidgetItems, validateAndResolveItemFilterSettings, } from \"./validation/itemValidation.js\";\nimport { addTemporaryIdentityToWidgets } from \"../../utils/dashboardItemUtils.js\";\nfunction validateAndResolveItems(commandCtx) {\n    const { ctx, layout, stash, items, cmd: { payload: { sectionIndex, itemIndex }, }, } = commandCtx;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to add items to non-existing layout section at index ${sectionIndex}.`);\n    }\n    const section = layout.sections[sectionIndex];\n    if (!validateItemPlacement(section, itemIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to insert new item at wrong index ${itemIndex}. There are currently ${section.items.length} items.`);\n    }\n    const stashValidationResult = validateAndResolveStashedItems(stash, items);\n    if (!isEmpty(stashValidationResult.missing)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to use non-existing stashes. Identifiers of missing stashes: ${stashValidationResult.missing.join(\", \")}`);\n    }\n    return {\n        stashValidationResult,\n        section,\n    };\n}\nexport function* addSectionItemsHandler(ctx, cmd) {\n    const { payload: { items }, } = cmd;\n    const commandCtx = {\n        ctx,\n        cmd,\n        items: addTemporaryIdentityToWidgets(items),\n        layout: yield select(selectLayout),\n        stash: yield select(selectStash),\n        availableInsights: yield select(selectInsightsMap),\n    };\n    const { stashValidationResult, section } = validateAndResolveItems(commandCtx);\n    const { payload: { itemIndex, sectionIndex, autoResolveDateFilterDataset }, } = cmd;\n    const normalizationResult = yield call(validateAndNormalizeWidgetItems, ctx, stashValidationResult, cmd);\n    const itemsToAdd = yield call(validateAndResolveItemFilterSettings, ctx, cmd, normalizationResult, autoResolveDateFilterDataset);\n    yield put(batchActions([\n        insightsActions.addInsights(normalizationResult.resolvedInsights.loaded),\n        layoutActions.addSectionItems({\n            sectionIndex,\n            itemIndex,\n            items: itemsToAdd,\n            usedStashes: stashValidationResult.existing,\n            undo: {\n                cmd,\n            },\n        }),\n    ]));\n    return layoutSectionItemsAdded(ctx, sectionIndex, resolveIndexOfNewItem(section.items, itemIndex), stashValidationResult.resolved, stashValidationResult.existing, cmd.correlationId);\n}\n//# sourceMappingURL=addSectionItemsHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateItemExists, validateItemPlacement, validateSectionExists, validateSectionPlacement, } from \"./validation/layoutValidation.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { layoutSectionItemMoved } from \"../../events/layout.js\";\nimport { resolveIndexOfNewItem, resolveRelativeIndex } from \"../../utils/arrayOps.js\";\nimport { batchActions } from \"redux-batched-actions\";\nfunction validateAndResolve(commandCtx) {\n    const { ctx, layout, cmd: { payload: { sectionIndex, toSectionIndex, itemIndex, toItemIndex, removeOriginalSectionIfEmpty }, }, } = commandCtx;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move item from non-existent section at ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    const fromSection = layout.sections[sectionIndex];\n    if (!validateItemExists(fromSection, itemIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move non-existent item from index ${itemIndex}. There are only ${fromSection.items.length} items.`);\n    }\n    const itemToMove = fromSection.items[itemIndex];\n    if (!validateSectionPlacement(layout, toSectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move item to a wrong section at index ${toSectionIndex}. There are currently ${layout.sections.length} sections.`);\n    }\n    const targetSectionIndex = resolveRelativeIndex(layout.sections, toSectionIndex);\n    const targetSection = layout.sections[targetSectionIndex];\n    if (!validateItemPlacement(targetSection, toItemIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move item to a wrong location at index ${toItemIndex}. Target section has ${targetSection.items.length} items.`);\n    }\n    let targetItemIndex = 0;\n    if (sectionIndex === targetSectionIndex) {\n        targetItemIndex = resolveRelativeIndex(targetSection.items, toItemIndex);\n        if (itemIndex === targetItemIndex) {\n            throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move item to a same place where it already resides ${toItemIndex}.`);\n        }\n    }\n    else {\n        targetItemIndex = resolveIndexOfNewItem(targetSection.items, toItemIndex);\n    }\n    return {\n        targetSectionIndex,\n        targetItemIndex,\n        itemToMove,\n        shouldRemoveSection: Boolean(removeOriginalSectionIfEmpty) && fromSection.items.length === 1,\n    };\n}\nexport function* moveSectionItemHandler(ctx, cmd) {\n    const commandCtx = {\n        ctx,\n        cmd,\n        layout: yield select(selectLayout),\n    };\n    const { targetSectionIndex, targetItemIndex, itemToMove, shouldRemoveSection } = validateAndResolve(commandCtx);\n    const { itemIndex, sectionIndex } = cmd.payload;\n    yield put(batchActions([\n        layoutActions.moveSectionItem({\n            sectionIndex,\n            itemIndex,\n            toSectionIndex: targetSectionIndex,\n            toItemIndex: targetItemIndex,\n            undo: {\n                cmd,\n            },\n        }),\n        ...(shouldRemoveSection\n            ? [\n                layoutActions.removeSection({\n                    index: sectionIndex,\n                    undo: {\n                        cmd,\n                    },\n                }),\n            ]\n            : []),\n    ]));\n    const targetSectionIndexUpdated = shouldRemoveSection && sectionIndex < targetSectionIndex ? sectionIndex - 1 : targetSectionIndex;\n    return layoutSectionItemMoved(ctx, itemToMove, sectionIndex, targetSectionIndexUpdated, itemIndex, targetItemIndex, shouldRemoveSection, cmd.correlationId);\n}\n//# sourceMappingURL=moveSectionItemHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { batchActions } from \"redux-batched-actions\";\nimport { put, select } from \"redux-saga/effects\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { layoutSectionItemMovedToNewSection, } from \"../../events/layout.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { selectLayout } from \"../../store/layout/layoutSelectors.js\";\nimport { validateItemExists, validateSectionExists, validateSectionPlacement, } from \"./validation/layoutValidation.js\";\nfunction validateAndResolve(commandCtx) {\n    const { ctx, layout, cmd: { payload: { sectionIndex, toSectionIndex, itemIndex, removeOriginalSectionIfEmpty }, }, } = commandCtx;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move item from non-existent section at ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    const fromSection = layout.sections[sectionIndex];\n    if (!validateItemExists(fromSection, itemIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move non-existent item from index ${itemIndex}. There are only ${fromSection.items.length} items.`);\n    }\n    const itemToMove = fromSection.items[itemIndex];\n    if (!validateSectionPlacement(layout, toSectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to move item to a wrong section at index ${toSectionIndex}. There are currently ${layout.sections.length} sections.`);\n    }\n    return {\n        targetSectionIndex: toSectionIndex,\n        targetItemIndex: 0,\n        itemToMove,\n        shouldRemoveSection: Boolean(removeOriginalSectionIfEmpty) && fromSection.items.length === 1,\n    };\n}\nexport function* moveSectionItemToNewSectionHandler(ctx, cmd) {\n    const commandCtx = {\n        ctx,\n        cmd,\n        layout: yield select(selectLayout),\n    };\n    const { targetSectionIndex, targetItemIndex, itemToMove, shouldRemoveSection } = validateAndResolve(commandCtx);\n    const { itemIndex, sectionIndex, toSectionIndex } = cmd.payload;\n    const itemSectionIndex = toSectionIndex > sectionIndex ? sectionIndex : sectionIndex + 1;\n    const section = {\n        type: \"IDashboardLayoutSection\",\n        items: [],\n    };\n    yield put(batchActions([\n        layoutActions.addSection({\n            index: targetSectionIndex,\n            section,\n            usedStashes: [],\n            undo: {\n                cmd,\n            },\n        }),\n        layoutActions.moveSectionItem({\n            sectionIndex: itemSectionIndex,\n            itemIndex,\n            toSectionIndex: targetSectionIndex,\n            toItemIndex: targetItemIndex,\n            undo: {\n                cmd,\n            },\n        }),\n        ...(shouldRemoveSection\n            ? [\n                layoutActions.removeSection({\n                    index: itemSectionIndex,\n                    undo: {\n                        cmd,\n                    },\n                }),\n            ]\n            : []),\n    ]));\n    return layoutSectionItemMovedToNewSection(ctx, itemToMove, sectionIndex, targetSectionIndex, itemIndex, targetItemIndex, shouldRemoveSection, cmd.correlationId);\n}\n//# sourceMappingURL=moveSectionItemToNewSectionHandler.js.map","import { call, select } from \"redux-saga/effects\";\nimport { selectWidgetCoordinatesByRef } from \"../../store/layout/layoutSelectors.js\";\nimport { removeSectionItemSaga } from \"./removeSectionItemHandler.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nexport function* removeSectionItemByWidgetRefHandler(ctx, cmd) {\n    let widgetCoordinates;\n    try {\n        widgetCoordinates = yield select(selectWidgetCoordinatesByRef(cmd.payload.widgetRef));\n    }\n    catch (e) {\n        throw invalidArgumentsProvided(ctx, cmd, `Can't get widget coordinates for widget ref: ${objRefToString(cmd.payload.widgetRef)}, ${e.message}`);\n    }\n    return yield call(removeSectionItemSaga, ctx, {\n        correlationId: cmd.correlationId,\n        payload: Object.assign(Object.assign({}, widgetCoordinates), { eager: cmd.payload.eager, stashIdentifier: cmd.payload.stashIdentifier }),\n    }, cmd);\n}\n//# sourceMappingURL=removeSectionItemByWidgetRefHandler.js.map","import { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { selectLayout, selectStash } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateItemExists, validateSectionExists } from \"./validation/layoutValidation.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { validateAndResolveStashedItems } from \"./validation/stashValidation.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { layoutSectionItemReplaced } from \"../../events/layout.js\";\nimport { validateAndNormalizeWidgetItems, validateAndResolveItemFilterSettings, } from \"./validation/itemValidation.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { insightsActions } from \"../../store/insights/index.js\";\nimport { addTemporaryIdentityToWidgets } from \"../../utils/dashboardItemUtils.js\";\nfunction validateAndResolve(commandCtx) {\n    const { ctx, cmd: { payload: { sectionIndex, itemIndex }, }, items, layout, stash, } = commandCtx;\n    if (!validateSectionExists(layout, sectionIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to replace item from non-existent section at ${sectionIndex}. There are only ${layout.sections.length} sections.`);\n    }\n    const fromSection = layout.sections[sectionIndex];\n    if (!validateItemExists(fromSection, itemIndex)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to replace non-existent item from index ${itemIndex} in section ${sectionIndex}. There are only ${fromSection.items.length} items in this section.`);\n    }\n    const stashValidationResult = validateAndResolveStashedItems(stash, items);\n    if (!isEmpty(stashValidationResult.missing)) {\n        throw invalidArgumentsProvided(ctx, commandCtx.cmd, `Attempting to use non-existing stashes. Identifiers of missing stashes: ${stashValidationResult.missing.join(\", \")}`);\n    }\n    return {\n        itemToReplace: fromSection.items[itemIndex],\n        stashValidationResult,\n    };\n}\nexport function* replaceSectionItemHandler(ctx, cmd) {\n    const { payload: { item }, } = cmd;\n    const commandCtx = {\n        ctx,\n        cmd,\n        items: addTemporaryIdentityToWidgets([item]),\n        layout: yield select(selectLayout),\n        stash: yield select(selectStash),\n    };\n    const { itemToReplace, stashValidationResult } = validateAndResolve(commandCtx);\n    const { sectionIndex, itemIndex, stashIdentifier, autoResolveDateFilterDataset } = cmd.payload;\n    const normalizationResult = yield call(validateAndNormalizeWidgetItems, ctx, stashValidationResult, cmd);\n    const itemsToAdd = yield call(validateAndResolveItemFilterSettings, ctx, cmd, normalizationResult, autoResolveDateFilterDataset);\n    yield put(batchActions([\n        insightsActions.addInsights(normalizationResult.resolvedInsights.loaded),\n        layoutActions.replaceSectionItem({\n            sectionIndex,\n            itemIndex,\n            newItems: itemsToAdd,\n            stashIdentifier,\n            usedStashes: stashValidationResult.existing,\n            undo: {\n                cmd,\n            },\n        }),\n    ]));\n    return layoutSectionItemReplaced(ctx, sectionIndex, itemIndex, stashValidationResult.resolved, itemToReplace, stashIdentifier, cmd.correlationId);\n}\n//# sourceMappingURL=replaceSectionItemHandler.js.map","import { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { kpiWidgetHeaderChanged } from \"../../events/kpi.js\";\nexport function* changeKpiWidgetHeaderHandler(ctx, cmd) {\n    const { payload: { header }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceWidgetHeader({\n        ref: kpiWidget.ref,\n        header,\n        undo: {\n            cmd,\n        },\n    }));\n    return kpiWidgetHeaderChanged(ctx, kpiWidget.ref, header, correlationId);\n}\n//# sourceMappingURL=changeKpiWidgetHeaderHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @internal\n */\nexport function isWidgetHeader(obj) {\n    return !isEmpty(obj) && obj.title !== undefined;\n}\n//# sourceMappingURL=widgetTypes.js.map","import { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { kpiWidgetComparisonChanged } from \"../../events/kpi.js\";\nexport function* changeKpiWidgetComparisonHandler(ctx, cmd) {\n    const { payload: { comparison: { comparisonType, comparisonDirection }, }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    const resolvedComparisonType = comparisonType !== null && comparisonType !== void 0 ? comparisonType : \"none\";\n    const resolvedComparisonDirection = resolvedComparisonType !== \"none\" ? comparisonDirection !== null && comparisonDirection !== void 0 ? comparisonDirection : \"growIsGood\" : undefined;\n    yield put(layoutActions.replaceKpiWidgetComparison({\n        ref: kpiWidget.ref,\n        comparisonType: resolvedComparisonType,\n        comparisonDirection: resolvedComparisonDirection,\n        undo: {\n            cmd,\n        },\n    }));\n    const updatedWidgets = yield select(selectWidgetsMap);\n    const updatedKpiWidget = updatedWidgets.get(kpiWidget.ref);\n    return kpiWidgetComparisonChanged(ctx, kpiWidget.ref, updatedKpiWidget.kpi, correlationId);\n}\n//# sourceMappingURL=changeKpiWidgetComparisonHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { put, select } from \"redux-saga/effects\";\nimport { kpiWidgetDrillRemoved } from \"../../events/kpi.js\";\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nexport function* removeDrillForKpiWidgetHandler(ctx, cmd) {\n    const { correlationId } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    const { ref: widgetRef } = kpiWidget;\n    yield put(layoutActions.replaceKpiWidgetDrill({\n        ref: widgetRef,\n        drill: undefined,\n        undo: {\n            cmd,\n        },\n    }));\n    return kpiWidgetDrillRemoved(ctx, widgetRef, correlationId);\n}\n//# sourceMappingURL=removeDrillForKpiWidgetHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { kpiWidgetDrillSet } from \"../../events/kpi.js\";\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { validateKpiDrill } from \"./validation/kpiDrillValidation.js\";\nexport function* setDrillForKpiWidgetHandler(ctx, cmd) {\n    const { correlationId } = cmd;\n    const { legacyDashboardTabIdentifier, legacyDashboardRef } = cmd.payload;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    const { ref: widgetRef } = kpiWidget;\n    const drill = {\n        tab: legacyDashboardTabIdentifier,\n        target: legacyDashboardRef,\n        origin: {\n            type: \"drillFromMeasure\",\n            measure: kpiWidget.kpi.metric,\n        },\n        type: \"drillToLegacyDashboard\",\n        transition: \"in-place\",\n    };\n    yield call(validateKpiDrill, drill, ctx, cmd);\n    yield put(layoutActions.replaceKpiWidgetDrill({\n        ref: widgetRef,\n        drill,\n        undo: {\n            cmd,\n        },\n    }));\n    return kpiWidgetDrillSet(ctx, widgetRef, drill, correlationId);\n}\n//# sourceMappingURL=setDrillForKpiWidgetHandler.js.map","import { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { kpiWidgetDescriptionChanged } from \"../../events/kpi.js\";\nexport function* changeKpiWidgetDescriptionHandler(ctx, cmd) {\n    const { payload: { description }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceWidgetDescription({\n        ref: kpiWidget.ref,\n        description,\n        undo: {\n            cmd,\n        },\n    }));\n    return kpiWidgetDescriptionChanged(ctx, kpiWidget.ref, description, correlationId);\n}\n//# sourceMappingURL=changeKpiWidgetDescriptionHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingKpiWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { kpiWidgetConfigurationChanged } from \"../../events/kpi.js\";\nexport function* changeKpiWidgetConfigurationHandler(ctx, cmd) {\n    const { payload: { config }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceKpiWidgetConfiguration({\n        ref: kpiWidget.ref,\n        config,\n        undo: {\n            cmd,\n        },\n    }));\n    return kpiWidgetConfigurationChanged(ctx, kpiWidget.ref, config, correlationId);\n}\n//# sourceMappingURL=changeKpiWidgetConfigurationHandler.js.map","import { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { insightWidgetHeaderChanged } from \"../../events/insight.js\";\nexport function* changeInsightWidgetHeaderHandler(ctx, cmd) {\n    const { payload: { header }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceWidgetHeader({\n        ref: insightWidget.ref,\n        header,\n        undo: {\n            cmd,\n        },\n    }));\n    return insightWidgetHeaderChanged(ctx, insightWidget.ref, header, correlationId);\n}\n//# sourceMappingURL=changeInsightWidgetHeaderHandler.js.map","import { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { insightWidgetDescriptionChanged } from \"../../events/insight.js\";\nexport function* changeInsightWidgetDescriptionHandler(ctx, cmd) {\n    const { payload: { description }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceWidgetDescription({\n        ref: insightWidget.ref,\n        description,\n        undo: {\n            cmd,\n        },\n    }));\n    return insightWidgetDescriptionChanged(ctx, insightWidget.ref, description, correlationId);\n}\n//# sourceMappingURL=changeInsightWidgetDescriptionHandler.js.map","// (C) 2021 GoodData Corporation\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { insightWidgetVisPropertiesChanged } from \"../../events/insight.js\";\nexport function* changeInsightWidgetVisPropertiesHandler(ctx, cmd) {\n    const { payload: { properties }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceInsightWidgetVisProperties({\n        ref: insightWidget.ref,\n        properties,\n        undo: {\n            cmd,\n        },\n    }));\n    return insightWidgetVisPropertiesChanged(ctx, insightWidget.ref, properties, correlationId);\n}\n//# sourceMappingURL=changeInsightWidgetVisPropertiesHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { put, select } from \"redux-saga/effects\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { insightWidgetVisConfigurationChanged } from \"../../events/insight.js\";\nexport function* changeInsightWidgetVisConfigurationHandler(ctx, cmd) {\n    const { payload: { config }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    yield put(layoutActions.replaceInsightWidgetVisConfiguration({\n        ref: insightWidget.ref,\n        config,\n        undo: {\n            cmd,\n        },\n    }));\n    return insightWidgetVisConfigurationChanged(ctx, insightWidget.ref, config, insightWidget.configuration, correlationId);\n}\n//# sourceMappingURL=changeInsightWidgetVisConfigurationHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { batchActions } from \"redux-batched-actions\";\nimport { invariant } from \"ts-invariant\";\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { insightWidgetInsightChanged } from \"../../events/insight.js\";\nimport { insightTitle, serializeObjRef, widgetTitle } from \"@gooddata/sdk-model\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { insightsActions } from \"../../store/insights/index.js\";\nimport { uiActions } from \"../../store/ui/index.js\";\nimport { selectInsightByRef } from \"../../store/insights/insightsSelectors.js\";\nimport { getSizeInfo } from \"../../../_staging/layout/sizing.js\";\nimport { loadInsight } from \"./common/loadInsight.js\";\nexport function* changeInsightWidgetInsightHandler(ctx, cmd) {\n    const { payload: { ref, insightRef, visualizationProperties }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    const originalInsight = yield select(selectInsightByRef(insightWidget.insight));\n    invariant(originalInsight, \"inconsistent store, original insight not already in store\");\n    const originalInsightTitle = insightTitle(originalInsight);\n    // always load the insight in case it changed since we loaded the insight list\n    let insight;\n    try {\n        insight = yield call(loadInsight, ctx, insightRef);\n    }\n    catch (_a) {\n        throw invalidArgumentsProvided(ctx, cmd, `The insight with ref: ${serializeObjRef(insightRef)} was not found.`);\n    }\n    const hasCustomName = widgetTitle(insightWidget) !== originalInsightTitle;\n    const isTitleDifferent = insightTitle(insight) !== originalInsightTitle;\n    const shouldChangeTitle = !hasCustomName && isTitleDifferent;\n    const newSize = getSizeInfo({ enableKDWidgetCustomHeight: true }, \"insight\", insight);\n    yield put(batchActions([\n        // upsert the internal insight list\n        insightsActions.upsertInsight(insight),\n        // refresh the visual insight list\n        uiActions.requestInsightListUpdate(),\n        /**\n         * Change the widget:\n         * - insight\n         * - properties if set\n         * - title if appropriate\n         */\n        layoutActions.replaceInsightWidgetInsight({\n            ref,\n            insightRef,\n            properties: visualizationProperties,\n            header: shouldChangeTitle\n                ? {\n                    title: insightTitle(insight),\n                }\n                : undefined,\n            newSize,\n            undo: {\n                cmd,\n            },\n        }),\n    ]));\n    return insightWidgetInsightChanged(ctx, ref, insight, correlationId);\n}\n//# sourceMappingURL=changeInsightWidgetInsightHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { insightWidgetDrillsModified } from \"../../events/insight.js\";\nimport { selectWidgetByRef, selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { getValidationData, validateDrillDefinition } from \"./validation/insightDrillDefinitionValidation.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { batchActions } from \"redux-batched-actions\";\nimport { insightsActions } from \"../../store/insights/index.js\";\nimport { existsDrillDefinitionInArray, getDrillDefinitionFromArray, } from \"./validation/insightDrillDefinitionUtils.js\";\nimport { validateDrillToCustomUrlParams } from \"../common/validateDrillToCustomUrlParams.js\";\nimport { validateDrills } from \"../common/validateDrills.js\";\nexport function* modifyDrillsForInsightWidgetHandler(ctx, cmd) {\n    const { payload: { drills: drillsToModify = [] }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    const { ref: widgetRef } = insightWidget;\n    const validationData = yield call(getValidationData, widgetRef, drillsToModify, ctx);\n    const { drills: currentInsightDrills = [] } = insightWidget;\n    const validatedDrillDefinition = drillsToModify.map((drillItem) => validateDrillDefinition(drillItem, validationData, ctx, cmd));\n    const addedDrillDefinition = validatedDrillDefinition.filter((drillItem) => !existsDrillDefinitionInArray(drillItem, currentInsightDrills));\n    const updatedDrillDefinition = validatedDrillDefinition.filter((drillItem) => existsDrillDefinitionInArray(drillItem, currentInsightDrills));\n    // we need keep order of currentInsightDrills\n    const drills = currentInsightDrills.map((drillItem) => {\n        const updated = getDrillDefinitionFromArray(drillItem, updatedDrillDefinition);\n        if (updated) {\n            return updated;\n        }\n        return drillItem;\n    });\n    const updatedInsightDrills = [...drills, ...addedDrillDefinition];\n    yield put(batchActions([\n        insightsActions.addInsights(validationData.resolvedInsights.loaded),\n        layoutActions.replaceWidgetDrills({\n            ref: insightWidget.ref,\n            drillDefinitions: updatedInsightDrills,\n            undo: {\n                cmd,\n            },\n        }),\n    ]));\n    // need to select the update widget to validate it by its new value\n    const updatedWidget = yield select(selectWidgetByRef(insightWidget.ref));\n    yield call(validateDrills, ctx, cmd, [updatedWidget]);\n    yield call(validateDrillToCustomUrlParams, [updatedWidget]);\n    return insightWidgetDrillsModified(ctx, widgetRef, addedDrillDefinition, updatedDrillDefinition, correlationId);\n}\n//# sourceMappingURL=modifyDrillsForInsightWidgetHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { call, put, select } from \"redux-saga/effects\";\nimport { insightWidgetDrillsRemoved } from \"../../events/insight.js\";\nimport { selectWidgetByRef, selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { validateRemoveDrillsByOrigins } from \"./validation/removeDrillsSelectorValidation.js\";\nimport { layoutActions } from \"../../store/layout/index.js\";\nimport { existsDrillDefinitionInArray } from \"./validation/insightDrillDefinitionUtils.js\";\nimport { validateDrillToCustomUrlParams } from \"../common/validateDrillToCustomUrlParams.js\";\nimport { validateDrills } from \"../common/validateDrills.js\";\nexport function* removeDrillsForInsightWidgetHandler(ctx, cmd) {\n    const { payload: { origins }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    const { ref: widgetRef, drills: currentInsightDrills } = insightWidget;\n    const drillsToRemove = validateRemoveDrillsByOrigins(origins, currentInsightDrills, ctx, cmd);\n    const notModifiedDrillDefinition = currentInsightDrills.filter((drillItem) => !existsDrillDefinitionInArray(drillItem, drillsToRemove));\n    yield put(layoutActions.replaceWidgetDrills({\n        ref: widgetRef,\n        drillDefinitions: notModifiedDrillDefinition,\n        undo: {\n            cmd,\n        },\n    }));\n    // need to select the update widget to validate it by its new value\n    const updatedWidget = yield select(selectWidgetByRef(widgetRef));\n    yield call(validateDrills, ctx, cmd, [updatedWidget]);\n    yield call(validateDrillToCustomUrlParams, [updatedWidget]);\n    return insightWidgetDrillsRemoved(ctx, widgetRef, drillsToRemove, correlationId);\n}\n//# sourceMappingURL=removeDrillsForInsightWidgetHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { validateDrillDefinitionByLocalIdentifier } from \"./insightDrillDefinitionUtils.js\";\nimport { isAllDrillSelector } from \"../../../commands/insight.js\";\nexport function validateRemoveDrillsByOrigins(drillSelector, drills, ctx, cmd) {\n    if (isAllDrillSelector(drillSelector)) {\n        return drills;\n    }\n    return drillSelector.map((drillRef) => {\n        try {\n            return validateDrillDefinitionByLocalIdentifier(drillRef, drills);\n        }\n        catch (ex) {\n            const messageDetail = ex.message;\n            throw invalidArgumentsProvided(ctx, cmd, `Invalid measure or attribute origin: ${objRefToString(drillRef)}. Error: ${messageDetail}`);\n        }\n    });\n}\n//# sourceMappingURL=removeDrillsSelectorValidation.js.map","// (C) 2022 GoodData Corporation\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { selectInsightByRef } from \"../../store/insights/insightsSelectors.js\";\nimport { validateExistingInsightWidget } from \"./validation/widgetValidations.js\";\nimport { insightsActions } from \"../../store/insights/index.js\";\nimport { invalidArgumentsProvided } from \"../../events/general.js\";\nimport { insightWidgetRefreshed } from \"../../events/insight.js\";\nimport { loadInsight } from \"./common/loadInsight.js\";\nexport function* refreshInsightWidgetHandler(ctx, cmd) {\n    const widgets = yield select(selectWidgetsMap);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    const { insight: insightRef } = insightWidget;\n    const insight = yield select(selectInsightByRef(insightRef));\n    if (!insight) {\n        throw invalidArgumentsProvided(ctx, cmd, `Insight with ref ${objRefToString(insightRef)} was not found in the store.`);\n    }\n    const newInsight = yield call(loadInsight, ctx, insightRef);\n    yield put(insightsActions.upsertInsight(newInsight));\n    return insightWidgetRefreshed(ctx, newInsight, cmd.correlationId);\n}\n//# sourceMappingURL=refreshInsightWidgetHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\n/**\n * Given list of all kpi alerts and a command that contains a refs array, this function tests that the `ref` are\n * a reference to an existing kpi alerts.\n *\n * @param ctx - dashboard context, this will be included in the DashboardCommandFailed event\n * @param alerts - map of alerts on the dashboard\n * @param cmd - any command that has 'ref' in its payload\n */\nexport function validateExistingAlerts(alerts, cmd, ctx) {\n    const { payload: { refs }, } = cmd;\n    return refs.map((ref) => {\n        const alert = alerts.get(ref);\n        if (!alert) {\n            throw invalidArgumentsProvided(ctx, cmd, `Cannot find Kpi alert with ref: ${serializeObjRef(ref)}.`);\n        }\n        return alert;\n    });\n}\n//# sourceMappingURL=alertsValidation.js.map","import { put } from \"redux-saga/effects\";\nimport { drillRequested, drillResolved } from \"../../events/drill.js\";\nimport { filterDrillsByDrillEvent } from \"../../../_staging/drills/drillingUtils.js\";\nexport function* drillHandler(ctx, cmd) {\n    yield put(drillRequested(ctx, cmd.payload.drillEvent, cmd.payload.drillContext, cmd.correlationId));\n    // TODO: better signature\n    const validDrillDefinitions = filterDrillsByDrillEvent(cmd.payload.drillEvent.drillDefinitions, cmd.payload.drillEvent);\n    return drillResolved(ctx, Object.assign(Object.assign({}, cmd.payload.drillEvent), { drillDefinitions: validDrillDefinitions }), cmd.payload.drillContext, cmd.correlationId);\n}\n//# sourceMappingURL=drillHandler.js.map","import { put } from \"redux-saga/effects\";\nimport { drillDownRequested, drillDownResolved } from \"../../events/drill.js\";\nimport { getInsightWithAppliedDrillDown } from \"@gooddata/sdk-ui-ext\";\nexport function* drillDownHandler(ctx, cmd) {\n    var _a;\n    const { drillDefinition, drillEvent, insight } = cmd.payload;\n    yield put(drillDownRequested(ctx, insight, drillDefinition, drillEvent, cmd.correlationId));\n    const insightWithDrillDownApplied = getInsightWithAppliedDrillDown(insight, drillEvent, drillDefinition, (_a = ctx.backend.capabilities.supportsElementUris) !== null && _a !== void 0 ? _a : true);\n    return drillDownResolved(ctx, insightWithDrillDownApplied, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId);\n}\n//# sourceMappingURL=drillDownHandler.js.map","import { put, select } from \"redux-saga/effects\";\nimport { drillToInsightRequested, drillToInsightResolved, } from \"../../events/drill.js\";\nimport { selectInsightByRef } from \"../../store/insights/insightsSelectors.js\";\nimport { addIntersectionFiltersToInsight } from \"@gooddata/sdk-ui-ext\";\nexport function* drillToInsightHandler(ctx, cmd) {\n    var _a;\n    const { drillDefinition, drillEvent } = cmd.payload;\n    const insight = yield select(selectInsightByRef(drillDefinition.target));\n    yield put(drillToInsightRequested(ctx, insight, drillDefinition, drillEvent, cmd.correlationId));\n    const insightWithDrillsApplied = addIntersectionFiltersToInsight(insight, drillEvent.drillContext.intersection, (_a = ctx.backend.capabilities.supportsElementUris) !== null && _a !== void 0 ? _a : true);\n    return drillToInsightResolved(ctx, insightWithDrillsApplied, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId);\n}\n//# sourceMappingURL=drillToInsightHandler.js.map","import { all, call, put, select } from \"redux-saga/effects\";\nimport { drillToAttributeUrlRequested, drillToAttributeUrlResolved, } from \"../../events/drill.js\";\nimport { resolveDrillToAttributeUrl } from \"./resolveDrillToAttributeUrl.js\";\nimport { getDrillToUrlFiltersWithResolvedValues } from \"./getDrillToUrlFilters.js\";\nimport { selectWidgetDrills } from \"../../store/layout/layoutSelectors.js\";\nimport { isDrillConfigured } from \"../../../_staging/drills/drillingUtils.js\";\nexport function* drillToAttributeUrlHandler(ctx, cmd) {\n    yield put(drillToAttributeUrlRequested(ctx, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId));\n    const [resolvedUrl, filtersInfo] = yield all([\n        call(resolveDrillToAttributeUrl, cmd.payload.drillDefinition, cmd.payload.drillEvent, ctx),\n        call(getDrillToUrlFiltersWithResolvedValues, ctx, cmd.payload.drillEvent.widgetRef),\n    ]);\n    const { widgetRef } = cmd.payload.drillEvent;\n    const widgetConfiguredDrills = yield select(selectWidgetDrills(widgetRef));\n    const isImplicit = !isDrillConfigured(cmd.payload.drillDefinition, widgetConfiguredDrills);\n    return drillToAttributeUrlResolved(ctx, resolvedUrl, cmd.payload.drillDefinition, cmd.payload.drillEvent, filtersInfo, isImplicit, cmd.correlationId);\n}\n//# sourceMappingURL=drillToAttributeUrlHandler.js.map","import { all, call, put } from \"redux-saga/effects\";\nimport { drillToCustomUrlRequested, drillToCustomUrlResolved, } from \"../../events/drill.js\";\nimport { resolveDrillToCustomUrl } from \"./resolveDrillToCustomUrl.js\";\nimport { getDrillToUrlFiltersWithResolvedValues } from \"./getDrillToUrlFilters.js\";\nexport function* drillToCustomUrlHandler(ctx, cmd) {\n    yield put(drillToCustomUrlRequested(ctx, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId));\n    const [resolvedUrl, filtersInfo] = yield all([\n        call(resolveDrillToCustomUrl, cmd.payload.drillDefinition, cmd.payload.drillEvent.widgetRef, cmd.payload.drillEvent, ctx, cmd),\n        call(getDrillToUrlFiltersWithResolvedValues, ctx, cmd.payload.drillEvent.widgetRef),\n    ]);\n    return drillToCustomUrlResolved(ctx, resolvedUrl, cmd.payload.drillDefinition, cmd.payload.drillEvent, filtersInfo, cmd.correlationId);\n}\n//# sourceMappingURL=drillToCustomUrlHandler.js.map","import { put } from \"redux-saga/effects\";\nimport { drillToLegacyDashboardRequested, drillToLegacyDashboardResolved, } from \"../../events/drill.js\";\nexport function* drillToLegacyDashboardHandler(ctx, cmd) {\n    yield put(drillToLegacyDashboardRequested(ctx, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId));\n    return drillToLegacyDashboardResolved(ctx, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId);\n}\n//# sourceMappingURL=drillToLegacyDashboardHandler.js.map","import { put } from \"redux-saga/effects\";\nimport { drillableItemsChanged } from \"../../events/drill.js\";\nimport { drillActions } from \"../../store/drill/index.js\";\nexport function* changeDrillableItemsHandler(ctx, cmd) {\n    const { drillableItems } = cmd.payload;\n    yield put(drillActions.setDrillableItems(drillableItems));\n    return drillableItemsChanged(ctx, drillableItems, cmd.correlationId);\n}\n//# sourceMappingURL=changeDrillableItemsHandler.js.map","import { call, put, select } from \"redux-saga/effects\";\nimport { drillTargetsAdded } from \"../../events/drillTargets.js\";\nimport { drillTargetsActions } from \"../../store/drillTargets/index.js\";\nimport { selectWidgetsMap } from \"../../store/layout/layoutSelectors.js\";\nimport { validateExistingInsightWidget } from \"../widgets/validation/widgetValidations.js\";\nimport { selectEnableKPIDashboardDrillFromAttribute } from \"../../store/config/configSelectors.js\";\nimport { availableDrillTargetsValidation } from \"./validation/availableDrillTargetsValidation.js\";\nimport { validateDrills } from \"../common/validateDrills.js\";\nimport { selectIsInEditMode } from \"../../store/renderMode/renderModeSelectors.js\";\nimport { validateDrillToCustomUrlParams } from \"../common/validateDrillToCustomUrlParams.js\";\nexport function* addDrillTargetsHandler(ctx, cmd) {\n    const { payload: { availableDrillTargets }, correlationId, } = cmd;\n    const widgets = yield select(selectWidgetsMap);\n    const enableKPIDashboardDrillFromAttribute = yield select(selectEnableKPIDashboardDrillFromAttribute);\n    const insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);\n    const drillTarget = availableDrillTargetsValidation(availableDrillTargets, enableKPIDashboardDrillFromAttribute, ctx, cmd);\n    const { ref, uri, identifier } = insightWidget;\n    yield put(drillTargetsActions.addDrillTargets({\n        identifier,\n        uri,\n        ref,\n        availableDrillTargets: drillTarget,\n    }));\n    // in edit mode, we need to remove invalid drills in case the insight in the widget changes its drill targets\n    // and also validate drill to custom URL parameters\n    const isInEditMode = yield select(selectIsInEditMode);\n    if (isInEditMode) {\n        yield call(validateDrills, ctx, cmd, [insightWidget]);\n        yield call(validateDrillToCustomUrlParams, [insightWidget]);\n    }\n    return drillTargetsAdded(ctx, ref, availableDrillTargets, correlationId);\n}\n//# sourceMappingURL=addDrillTargetsHandler.js.map","// (C) 2021-2022 GoodData Corporation\nimport { invalidArgumentsProvided } from \"../../../events/general.js\";\nexport function availableDrillTargetsValidation(availableDrillTargets, enableKPIDashboardDrillFromAttribute, ctx, cmd) {\n    const items = availableDrillTargets;\n    const attributeItems = items === null || items === void 0 ? void 0 : items.attributes;\n    // Validate availableDrillTargets when enableKPIDashboardDrillFromAttribute FF false, we reject availableDrillTargets attributes to save.\n    if (!enableKPIDashboardDrillFromAttribute && attributeItems && attributeItems.length > 0) {\n        throw invalidArgumentsProvided(ctx, cmd, `Attributes in availableDrillTargets are not supported when enableKPIDashboardDrillFromAttribute FF is set to false`);\n    }\n    return items;\n}\n//# sourceMappingURL=availableDrillTargetsValidation.js.map","import { asyncRenderRequested } from \"../../events/render.js\";\nexport function requestAsyncRenderHandler(ctx, cmd) {\n    const { payload: { id }, correlationId, } = cmd;\n    return asyncRenderRequested(id, ctx, correlationId);\n}\n//# sourceMappingURL=requestAsyncRenderHandler.js.map","import { asyncRenderResolved } from \"../../events/render.js\";\nexport function resolveAsyncRenderHandler(ctx, cmd) {\n    const { payload: { id }, correlationId, } = cmd;\n    return asyncRenderResolved(id, ctx, correlationId);\n}\n//# sourceMappingURL=resolveAsyncRenderHandler.js.map","import { actionChannel, call, take } from \"redux-saga/effects\";\nimport noop from \"lodash/noop.js\";\nimport { dispatchDashboardEvent } from \"./eventDispatcher.js\";\nimport { commandRejected, dashboardCommandStarted, internalErrorOccurred, isDashboardCommandFailed, } from \"../../events/general.js\";\nimport { isDashboardEvent } from \"../../events/base.js\";\nimport { DefaultCommandHandlers } from \"../../commandHandlers/index.js\";\nimport { getDashboardContext } from \"./contexts.js\";\nfunction* unhandledCommand(ctx, cmd) {\n    yield dispatchDashboardEvent(commandRejected(ctx, cmd.correlationId));\n}\n/**\n * @internal\n */\nexport const CommandEnvelopeActionPrefix = \"__C\";\nexport function commandEnvelope(command, eventHandlers) {\n    var _a, _b, _c;\n    return {\n        type: `${CommandEnvelopeActionPrefix}(${command.type})`,\n        command,\n        onError: (_a = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onError) !== null && _a !== void 0 ? _a : noop,\n        onStart: (_b = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onStart) !== null && _b !== void 0 ? _b : noop,\n        onSuccess: (_c = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onSuccess) !== null && _c !== void 0 ? _c : noop,\n    };\n}\n/**\n * @internal\n */\nexport function commandEnvelopeWithPromise(command) {\n    const commandEnvelopeEventHandlers = {};\n    const promise = new Promise((resolve, reject) => {\n        commandEnvelopeEventHandlers.onSuccess = resolve;\n        commandEnvelopeEventHandlers.onError = reject;\n    });\n    const envelope = commandEnvelope(command, commandEnvelopeEventHandlers);\n    return {\n        promise,\n        envelope,\n    };\n}\nfunction isCommandEnvelope(obj) {\n    return !!obj && obj.type.startsWith(CommandEnvelopeActionPrefix);\n}\nfunction ensureCommandWrappedInEnvelope(action) {\n    return isCommandEnvelope(action) ? action : commandEnvelope(action);\n}\nfunction* processCommand(ctx, envelope) {\n    var _a;\n    const { command, command: { type, correlationId }, } = envelope;\n    const correlationIdForLog = correlationId !== null && correlationId !== void 0 ? correlationId : \"(no correlationId provided)\";\n    const commandHandler = (_a = DefaultCommandHandlers[envelope.command.type]) !== null && _a !== void 0 ? _a : unhandledCommand;\n    try {\n        yield dispatchDashboardEvent(dashboardCommandStarted(ctx, envelope.command));\n        try {\n            envelope.onStart(command);\n        }\n        catch (e) {\n            console.warn(`An error has occurred while calling onStart function provided for ${type}@${correlationIdForLog} processing:`, e);\n        }\n        const result = yield call(commandHandler, ctx, command);\n        if (isDashboardEvent(result)) {\n            yield dispatchDashboardEvent(result);\n        }\n        try {\n            envelope.onSuccess(result);\n        }\n        catch (e) {\n            console.warn(`An error has occurred while calling onSuccess function provided for ${type}@${correlationIdForLog} processing`, e);\n        }\n    }\n    catch (e) {\n        try {\n            envelope.onError(e);\n        }\n        catch (ne) {\n            console.warn(`An error has occurred while calling onError function provided for ${type}@${correlationIdForLog} processing:`, ne);\n        }\n        if (isDashboardCommandFailed(e)) {\n            yield dispatchDashboardEvent(e);\n        }\n        else {\n            // Errors during command handling should be caught and addressed in the handler, possibly with a\n            // more meaningful error message. If the error bubbles up to here then there are holes in error\n            // handling or something is seriously messed up.\n            yield dispatchDashboardEvent(internalErrorOccurred(ctx, command, `Internal error has occurred while handling ${type}`, e));\n        }\n    }\n}\n/**\n * Root command handler is the central point through which all command processing is done. The handler registers\n * for all actions starting with `GDC.DASH/CMD` === all dashboard commands.\n *\n * The commands are intended for serial processing, without any forking. A buffering action channel is in place to\n * prevent loss of commands.\n *\n * TODO: refactor this so that root command handler is created dynamically similar to query processor. the handlers\n *  should be providable by the caller\n */\nexport function* rootCommandHandler() {\n    const commandChannel = yield actionChannel((action) => action.type &&\n        (action.type.startsWith(CommandEnvelopeActionPrefix) || action.type.startsWith(\"GDC.DASH/CMD\")));\n    while (true) {\n        const command = yield take(commandChannel);\n        const envelope = ensureCommandWrappedInEnvelope(command);\n        const ctx = yield call(getDashboardContext);\n        yield call(processCommand, ctx, envelope);\n    }\n}\n//# sourceMappingURL=rootCommandHandler.js.map","import { createEntityAdapter, createSelector, createSlice, } from \"@reduxjs/toolkit\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport memoize from \"lodash/memoize.js\";\nimport { invariant } from \"ts-invariant\";\nimport capitalize from \"lodash/capitalize.js\";\n/**\n * Given query name, this function will create name to use for the slice that will hold the cache with query results.\n *\n * For slice name, the function drops the \"GDC.DASH/QUERY.\" prefix and then the rest is camel-cased with the word 'Cache' appended at the end.\n *\n * @param queryName - query name in format GDC.DASH/QUERY.SOME.THING\n */\nexport function createSliceNameForQueryCache(queryName) {\n    const withoutPrefix = queryName.split(\"/\")[1];\n    invariant(withoutPrefix, `Trying to create slice for query data but the query type name seems invalid: ${queryName}. Must always start with \"GDC.DASH/QUERY.\" prefix`);\n    // take the part after GDC.DASH/, split it into segments, drop the first segment (QUERY) and then capitalize the rest\n    const segments = withoutPrefix.split(\".\").slice(1).map(capitalize);\n    // and make sure the first segment is back to lowercase\n    segments[0] = segments[0].toLowerCase();\n    return `${segments.join(\"\")}Cache`;\n}\nfunction createQueryCacheSlice(queryName, selectId) {\n    const sliceName = createSliceNameForQueryCache(queryName);\n    const cacheEntryId = (entry) => selectId(entry.query);\n    const adapter = createEntityAdapter({ selectId: cacheEntryId });\n    // TODO: getting massive typing errors here, don't know how to solve them\n    const reducers = {\n        set: adapter.setOne,\n        remove: adapter.removeOne,\n        removeAll: adapter.removeAll,\n    };\n    const slice = createSlice({\n        name: sliceName,\n        initialState: adapter.getInitialState(),\n        reducers,\n    });\n    const cacheSelectors = adapter.getSelectors((state) => state._queryCache[sliceName]);\n    const selectById = (id) => {\n        return createSelector((state) => state, (state) => {\n            return cacheSelectors.selectById(state, id);\n        });\n    };\n    const selectQueryResult = memoize((query) => {\n        const id = selectId(query);\n        return createSelector((state) => state, (state) => {\n            return cacheSelectors.selectById(state, id);\n        });\n    }, (query) => selectId(query));\n    return {\n        cacheName: sliceName,\n        reducer: slice.reducer,\n        actions: slice.actions,\n        selectQueryResult,\n        selectById,\n    };\n}\n/**\n * Creates a query service whose results will be stored in the dashboard component's state. Cached query\n * services are useful when the query itself requires expensive operation backend.\n *\n * The dashboard store takes care of everything related to\n *\n * @param queryName - name of the query\n * @param generator - the generator function that processes the query\n * @param queryToCacheKey - function to map query into a cache key under which to store the results\n */\nexport function createCachedQueryService(queryName, generator, queryToCacheKey) {\n    const queryCache = createQueryCacheSlice(queryName, queryToCacheKey);\n    function* generatorWithQueryCache(ctx, query, refresh = false) {\n        const cacheKey = queryToCacheKey(query);\n        const cachedResult = yield select(queryCache.selectById(cacheKey));\n        if ((cachedResult === null || cachedResult === void 0 ? void 0 : cachedResult.result) && !refresh) {\n            return cachedResult.result;\n        }\n        try {\n            yield put(queryCache.actions.set({\n                query,\n                status: \"loading\",\n            }));\n            const result = yield call(generator, ctx, query);\n            yield put(queryCache.actions.set({\n                query,\n                status: \"success\",\n                result,\n            }));\n            return result;\n        }\n        catch (e) {\n            yield put(queryCache.actions.set({\n                query,\n                status: \"error\",\n                error: e.message,\n            }));\n            throw e;\n        }\n    }\n    return {\n        name: queryName,\n        generator: generatorWithQueryCache,\n        cache: queryCache,\n    };\n}\n/**\n * Creates a non-cached query service.\n *\n * @param queryName - name of the query\n * @param generator - the generator function that processes the query\n */\nexport function createQueryService(queryName, generator) {\n    return {\n        name: queryName,\n        generator,\n    };\n}\n//# sourceMappingURL=queryService.js.map","const relevanceComparator = (a, b) => b.relevance - a.relevance; // descending sort\nconst titleComparatorFactory = (mapping) => {\n    return (a, b) => {\n        return mapping[a.dataSet.title].localeCompare(mapping[b.dataSet.title]);\n    };\n};\nexport function sortByRelevanceAndTitle(dateDatasets, titleMapping) {\n    const titleComparator = titleComparatorFactory(titleMapping);\n    return dateDatasets.slice().sort((a, b) => {\n        if (a.relevance === b.relevance) {\n            return titleComparator(a, b);\n        }\n        return relevanceComparator(a, b);\n    });\n}\nexport function sanitizeDateDatasetTitle(dataset) {\n    return dataset.dataSet.title.trim().replace(/^Date \\((.*)\\)$/, \"$1\");\n}\n//# sourceMappingURL=dateDatasetOrdering.js.map","import { idRef } from \"@gooddata/sdk-model\";\nimport { selectObjectAvailabilityConfig } from \"../store/config/configSelectors.js\";\nimport { call, select } from \"redux-saga/effects\";\n/**\n * This generator function will communicate with backend to obtain the available date data sets that can be\n * used for date-filtering of the provided insight.\n *\n * The available date datasets vary based on the contents (measures, attributes) of the insight & the shape of\n * the LDM itself. Some data sets will not be available as they are unreachable given the measures/attributes\n * used in the insight.\n *\n * This generator will take into account the current object availability config.\n *\n * @param ctx - dashboard context in which the resolution should be done\n * @param insight - insight to use during availability check\n */\nexport function* loadDateDatasetsForInsight(ctx, insight) {\n    var _a, _b;\n    const { backend, workspace } = ctx;\n    const availability = yield select(selectObjectAvailabilityConfig);\n    /*\n     * This is a little hack that relies on current catalog caching layer. Whole catalog is loaded at dashboard\n     * load time and thus will be cached by the backend decorator.\n     *\n     * TODO: improve catalog caching to be granular on type level or at least have cache for the whole catalog &\n     *  then for sub-types. if whole-catalog cache is available and another request to load catalog with just a subset\n     *  of types is done, caching layer can satisfy everything from memory.\n     */\n    const catalogLoader = backend.workspace(workspace).catalog();\n    const catalog = yield call([\n        catalogLoader,\n        catalogLoader.load,\n    ]);\n    /*\n     * You may remember from KD that the code to get available date datasets was also calculating the\n     * `attributesMap` before calling load date datasets.\n     *\n     * The fun part about that whole thing is, that the attributeMap was useless in that context: it was calculated,\n     * but never used when loading available date datasets.\n     *\n     * That is because a loaded catalog already contains the attribute map as an implementation detail for the\n     * bear backend and services (correctly) do not allow passing attributes map on the SPI.\n     * The mapping is created at bear catalog load time and includes all attributes and display forms in it.\n     *\n     * Now.. the catalog used by KD (and in this here component) is the 'production' catalog that does not include any\n     * custom, non-production datasets. Then.. you may ask.. how come KD worked when adding insights created on top\n     * of non-production datasets? Well as it turns out.. when the low-level code dealing with availability finds\n     * that it is missing some df -> attribute mapping it will obtain the necessary data to construct the mapping\n     * via API calls.\n     */\n    const availableDateDataSetsLoader = catalog.availableItems().withOptions({\n        types: [\"dateDataset\"],\n        insight: insight,\n        excludeTags: ((_a = availability.excludeObjectsWithTags) !== null && _a !== void 0 ? _a : []).map((tag) => idRef(tag)),\n        includeTags: ((_b = availability.includeObjectsWithTags) !== null && _b !== void 0 ? _b : []).map((tag) => idRef(tag)),\n    });\n    const loadedAvailableDateDataSets = yield call([availableDateDataSetsLoader, availableDateDataSetsLoader.load]);\n    /*\n     * You may also remember from KD that the code was cleaning up the relevance values from the available date\n     * datasets. This was there to carefully align data to get feasible results from the `getRecommendedDateDataset`\n     */\n    return loadedAvailableDateDataSets.availableDateDatasets();\n}\n//# sourceMappingURL=loadAvailableDateDatasets.js.map","import { call, select } from \"redux-saga/effects\";\nimport compact from \"lodash/compact.js\";\nimport fromPairs from \"lodash/fromPairs.js\";\nimport uniqBy from \"lodash/uniqBy.js\";\nimport { invariant } from \"ts-invariant\";\nimport { filterObjRef, insightFilters, insightRef, isDateFilter, isObjRef, objRefToString, serializeObjRef, isCatalogDateDataset, } from \"@gooddata/sdk-model\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { queryInsightAttributesMeta, } from \"../queries/index.js\";\nimport { selectInsightByRef } from \"../store/insights/insightsSelectors.js\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nimport { query } from \"../store/_infra/queryCall.js\";\nimport { selectAllCatalogDateDatasetsMap, selectCatalogDateAttributeToDataset, } from \"../store/catalog/catalogSelectors.js\";\nimport { selectBackendCapabilities } from \"../store/backendCapabilities/backendCapabilitiesSelectors.js\";\nimport { newDisplayFormMap } from \"../../_staging/metadata/objRefMap.js\";\nimport { sanitizeDateDatasetTitle, sortByRelevanceAndTitle, } from \"../../_staging/catalog/dateDatasetOrdering.js\";\nimport { loadDateDatasetsForInsight } from \"./loadAvailableDateDatasets.js\";\nexport const QueryDateDatasetsForInsightService = createCachedQueryService(\"GDC.DASH/QUERY.INSIGHT.DATE.DATASETS\", queryService, (query) => {\n    const { payload: { insightOrRef }, } = query;\n    const ref = isObjRef(insightOrRef) ? insightOrRef : insightRef(insightOrRef);\n    return serializeObjRef(ref);\n});\n/**\n * Selector that will return date datasets for insight. The input to the selector is the dashboard query that is used\n * to obtain and cache the data.\n *\n * This selector will return undefined if the query to obtain the data for particular insight was not yet fired or\n * processed. Otherwise will return object containing `status` of the data retrieval; if the `status` is\n * `'success'` then the `result` prop will contain the data.\n *\n * @remarks see {@link QueryInsightDateDatasets}\n * @internal\n */\nexport const selectDateDatasetsForInsight = QueryDateDatasetsForInsightService.cache.selectQueryResult;\n//\n// Query implementation\n//\n/**\n * Given insight and a list of available cataloged date datasets, this function looks up date datasets that are used\n * in insight's global date filters. Date datasets\n *\n * @param insight - insight to lookup date dataset for\n * @param datasets - all cataloged date datasets\n */\nfunction lookupDatasetsUsedInDateFilters(insight, datasets) {\n    const dateFilters = insightFilters(insight).filter(isDateFilter);\n    return dateFilters.map((filter) => {\n        const datasetRef = filterObjRef(filter);\n        const dateDataset = datasets.get(datasetRef);\n        // if this happens then either component is using wrong catalog or metadata is inconsistent (and insight thus un-renderable)\n        invariant(dateDataset, `cannot find metadata for date dataset ${objRefToString(datasetRef)}`);\n        return dateDataset;\n    });\n}\n/**\n * Given insight and list of available cataloged date datasets, this generator will first query usage & metadata about\n * used display forms and attributes. With this, the function will lookup date datasets for each display form\n * used in insight's attribute buckets and attribute filters.\n *\n * Note: that cataloged date datasets already contain mapping of dataset → attribute → default display form. However\n * this cannot be used because the code cannot expect that the insights only use date dataset's default display forms.\n *\n * @param insight - insight work with\n * @param attributeToDataset - lookup table of date attributes to datasets\n */\nfunction* lookupDatasetsUsedInAttributesAndFilters(insight, attributeToDataset) {\n    const insightAttributes = yield call(query, queryInsightAttributesMeta(insight));\n    const { usage: { inAttributes, inFilters }, displayForms, } = insightAttributes;\n    const capabilities = yield select(selectBackendCapabilities);\n    const displayFormsMap = newDisplayFormMap(displayForms, capabilities.hasTypeScopedIdentifiers);\n    const datasetLookup = (ref) => {\n        var _a;\n        const displayForm = displayFormsMap.get(ref);\n        // if this bombs then the query insight attributes is messed up as it does not include display forms meta\n        // for some display form used in the insight\n        invariant(displayForm);\n        const attributeRef = displayForm.attribute;\n        return (_a = attributeToDataset.get(attributeRef)) === null || _a === void 0 ? void 0 : _a.dataset;\n    };\n    return {\n        usedInAttributes: compact(inAttributes.map(datasetLookup)),\n        usedInAttributeFilters: compact(inFilters.map(datasetLookup)),\n    };\n}\nfunction* lookupDatasetsInInsight(insight) {\n    /*\n     * TODO: need to investigate whether the catalogDateDatasets are needed here. the theory is, loading available\n     *  date datasets using catalog _likely_ gives everything this code should ever need. The query processor\n     *  does the call to load available date datasets first.. so then instead of selecting the whole catalog from\n     *  state this generator could receive date datasets as an argument. Note that KD used to get all date datasets\n     *  from catalog so this matches the previous behavior.\n     */\n    const catalogDateDatasets = yield select(selectAllCatalogDateDatasetsMap);\n    const catalogDateAttributeToDatasets = yield select(selectCatalogDateAttributeToDataset);\n    const usedInDateFilters = lookupDatasetsUsedInDateFilters(insight, catalogDateDatasets);\n    const usedInAttributesAndFilters = yield call(lookupDatasetsUsedInAttributesAndFilters, insight, catalogDateAttributeToDatasets);\n    const { usedInAttributes, usedInAttributeFilters } = usedInAttributesAndFilters;\n    return {\n        usedInDateFilters,\n        usedInAttributes,\n        usedInAttributeFilters,\n    };\n}\nfunction* queryService(ctx, query) {\n    var _a, _b;\n    const { payload: { insightOrRef }, correlationId, } = query;\n    let insight;\n    if (isObjRef(insightOrRef)) {\n        insight = yield select(selectInsightByRef(insightOrRef));\n        if (!insight) {\n            throw invalidQueryArguments(ctx, `Insight with ref ${objRefToString(insightOrRef)} does not exist on the dashboard`, correlationId);\n        }\n    }\n    else {\n        insight = insightOrRef;\n    }\n    /*\n     * first use the catalog's availability APIs to obtain date datasets relevant for this insight from the\n     * backend\n     */\n    const dateDatasets = yield call(loadDateDatasetsForInsight, ctx, insight);\n    /*\n     * then inspect the insight itself and get categorized information about the usage of date datasets by\n     * the insight itself.\n     */\n    const usedInInsight = yield call(lookupDatasetsInInsight, insight);\n    const { usedInDateFilters, usedInAttributes, usedInAttributeFilters } = usedInInsight;\n    const mostImportantFromInsight = (_b = (_a = usedInDateFilters[0]) !== null && _a !== void 0 ? _a : usedInAttributes[0]) !== null && _b !== void 0 ? _b : usedInAttributeFilters[0];\n    const allAvailableDateDatasets = uniqBy([...dateDatasets, ...usedInDateFilters, ...usedInAttributes, ...usedInAttributeFilters].filter(isCatalogDateDataset), (d) => serializeObjRef(d.dataSet.ref));\n    const dateDatasetDisplayNames = fromPairs(allAvailableDateDatasets.map((d) => [d.dataSet.title, sanitizeDateDatasetTitle(d)]));\n    return {\n        dateDatasets,\n        dateDatasetsOrdered: sortByRelevanceAndTitle(dateDatasets, dateDatasetDisplayNames),\n        usedInDateFilters,\n        usedInAttributes,\n        usedInAttributeFilters,\n        dateDatasetDisplayNames,\n        mostImportantFromInsight,\n        allAvailableDateDatasets,\n    };\n}\n//# sourceMappingURL=queryInsightDateDatasets.js.map","import { insightDisplayFormUsage, insightRef, isObjRef, objRefToString, serializeObjRef, } from \"@gooddata/sdk-model\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { selectInsightByRef } from \"../store/insights/insightsSelectors.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nimport { selectAllCatalogAttributesMap, selectAllCatalogDisplayFormsMap, } from \"../store/catalog/catalogSelectors.js\";\nimport { invariant } from \"ts-invariant\";\nimport uniqBy from \"lodash/uniqBy.js\";\nexport const QueryInsightAttributesMetaService = createCachedQueryService(\"GDC.DASH/QUERY.INSIGHT.ATTRIBUTE.META\", queryService, (query) => {\n    const { payload: { insightOrRef }, } = query;\n    const ref = isObjRef(insightOrRef) ? insightOrRef : insightRef(insightOrRef);\n    return serializeObjRef(ref);\n});\n/**\n * Selector that will return attribute metadata for an insight. The input to the selector is the dashboard query that is used\n * to obtain and cache the data.\n *\n * This selector will return undefined if the query to obtain the data for particular insight was not yet fired or\n * processed. Otherwise will return object containing `status` of the data retrieval; if the `status` is\n * `'success'` then the `result` prop will contain the data.\n *\n * @remarks see {@link QueryInsightAttributesMeta}\n * @internal\n */\nexport const selectInsightAttributesMeta = QueryInsightAttributesMetaService.cache.selectQueryResult;\n//\n// Query implementation\n//\nasync function loadDisplayFormsAndAttributes(ctx, displayFormRefs) {\n    const { backend, workspace } = ctx;\n    const loadedDisplayForms = await backend\n        .workspace(workspace)\n        .attributes()\n        .getAttributeDisplayForms(displayFormRefs);\n    const loadedAttributes = await backend\n        .workspace(workspace)\n        .attributes()\n        .getAttributes(loadedDisplayForms.map((df) => df.attribute));\n    return {\n        loadedDisplayForms,\n        loadedAttributes,\n    };\n}\n/**\n * Loads insight attribute and display form metadata for particular insight display form usage.\n *\n * This function will first attempt to find display forms & attributes in the catalog - for a quick in memory hit.\n *\n * However in corner cases some of the display forms and attributes may not be stored in catalog. That is the case when dashboard\n * contains an insight created from date datasets created from custom CSVs. These are not stored in the 'default' catalog\n * that is part of the dashboard component's state. That's when the function falls back to load the metadata from backend.\n */\nasync function createInsightAttributesMeta(ctx, usage, catalogDisplayForms, catalogAttributes) {\n    const allUsedRefs = [...usage.inAttributes, ...usage.inFilters, ...usage.inMeasureFilters];\n    const displayFormsFromCatalog = [];\n    const missingDisplayForms = [];\n    allUsedRefs.forEach((ref) => {\n        const catalogDisplayForm = catalogDisplayForms.get(ref);\n        if (catalogDisplayForm) {\n            displayFormsFromCatalog.push(catalogDisplayForm);\n        }\n        else {\n            missingDisplayForms.push(ref);\n        }\n    });\n    const attributesFromCatalog = displayFormsFromCatalog.map((df) => {\n        const catalogAttribute = catalogAttributes.get(df.attribute);\n        // if this bombs there must be something seriously wrong because it means a display form is in catalog\n        // but the attribute to which it belongs is not. such a thing can only happen if something is messing\n        // around with the catalog state stored in the component.\n        invariant(catalogAttribute, \"dashboard metadata catalog is corrupted\");\n        return catalogAttribute.attribute;\n    });\n    const { loadedDisplayForms, loadedAttributes } = await loadDisplayFormsAndAttributes(ctx, missingDisplayForms);\n    return {\n        usage,\n        attributes: uniqBy([...attributesFromCatalog, ...loadedAttributes], (a) => serializeObjRef(a.ref)),\n        displayForms: uniqBy([...displayFormsFromCatalog, ...loadedDisplayForms], (df) => serializeObjRef(df.ref)),\n    };\n}\nfunction* queryService(ctx, query) {\n    const { correlationId, payload: { insightOrRef }, } = query;\n    let insight;\n    if (isObjRef(insightOrRef)) {\n        insight = yield select(selectInsightByRef(insightOrRef));\n        if (!insight) {\n            throw invalidQueryArguments(ctx, `Insight with ref ${objRefToString(insightOrRef)} does not exist on the dashboard`, correlationId);\n        }\n    }\n    else {\n        insight = insightOrRef;\n    }\n    const usage = insightDisplayFormUsage(insight);\n    const catalogDisplayForms = yield select(selectAllCatalogDisplayFormsMap);\n    const catalogAttributes = yield select(selectAllCatalogAttributesMap);\n    return yield call(createInsightAttributesMeta, ctx, usage, catalogDisplayForms, catalogAttributes);\n}\n//# sourceMappingURL=queryInsightAttributesMeta.js.map","import { all, call, select } from \"redux-saga/effects\";\nimport { createQueryService } from \"../store/_infra/queryService.js\";\nimport { areObjRefsEqual, filterObjRef, idRef, insightFilters, insightMeasures, isAllTimeDateFilter, isAttributeFilter, isDateFilter, isMeasureValueFilter, isRankingFilter, isSimpleMeasure, measureFilters, newAllTimeFilter, objRefToString, uriRef, isDashboardAttributeFilterReference, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport { selectAllFiltersForWidgetByRef, selectWidgetByRef } from \"../store/layout/layoutSelectors.js\";\nimport { selectInsightByRef } from \"../store/insights/insightsSelectors.js\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nimport compact from \"lodash/compact.js\";\nimport { selectAllCatalogDateDatasetsMap } from \"../store/catalog/catalogSelectors.js\";\nimport { resolveDisplayFormMetadata } from \"../utils/displayFormResolver.js\";\nimport { invariant } from \"ts-invariant\";\nimport isEmpty from \"lodash/isEmpty.js\";\nexport const QueryWidgetFiltersService = createQueryService(\"GDC.DASH/QUERY.WIDGET.FILTERS\", queryService);\nfunction refMatchesMdObject(ref, mdObject, type) {\n    return (areObjRefsEqual(ref, mdObject.ref) ||\n        areObjRefsEqual(ref, idRef(mdObject.id, type)) ||\n        areObjRefsEqual(ref, uriRef(mdObject.uri)));\n}\nfunction* loadDisplayFormsForAttributeFilters(ctx, filters) {\n    const refs = filters.map(filterObjRef);\n    const resolvedObjects = yield call(resolveDisplayFormMetadata, ctx, compact(refs));\n    // if some display forms could not be resolved then there is something seriously amiss\n    invariant(isEmpty(resolvedObjects.missing));\n    return filters.map((filter) => {\n        return {\n            filter,\n            displayForm: resolvedObjects.resolved.get(filterObjRef(filter)),\n        };\n    });\n}\nfunction selectDateDatasetsForDateFilters(state, filters) {\n    const fromCatalog = selectAllCatalogDateDatasetsMap(state);\n    return filters.map((filter) => {\n        const dateDataset = fromCatalog.get(filterObjRef(filter));\n        return {\n            dateDataset,\n            filter,\n        };\n    });\n}\nfunction* getResolvedInsightAttributeFilters(ctx, widget, dashboardAttributeFilters, insightAttributeFilters) {\n    // only dashboard filters are subject to widget ignores\n    const resolvedDashboardFilters = yield call(getResolvedAttributeFilters, ctx, widget, dashboardAttributeFilters);\n    return [...resolvedDashboardFilters, ...insightAttributeFilters];\n}\nfunction* getResolvedAttributeFilters(ctx, widget, attributeFilters) {\n    const attributeFilterDisplayFormPairs = yield call(loadDisplayFormsForAttributeFilters, ctx, attributeFilters);\n    const attributeFilterDisplayFormPairsWithIgnoreResolved = resolveWidgetFilterIgnore(widget, attributeFilterDisplayFormPairs);\n    return attributeFilterDisplayFormPairsWithIgnoreResolved.map((item) => item.filter);\n}\nfunction resolveWidgetFilterIgnore(widget, dashboardNonDateFilterDisplayFormPairs) {\n    return dashboardNonDateFilterDisplayFormPairs.filter(({ displayForm }) => {\n        var _a;\n        const matches = displayForm &&\n            ((_a = widget.ignoreDashboardFilters) === null || _a === void 0 ? void 0 : _a.filter(isDashboardAttributeFilterReference).some((ignored) => refMatchesMdObject(ignored.displayForm, displayForm, \"displayForm\")));\n        return !matches;\n    });\n}\n/**\n * Tests whether dashboard's date filter should not be applied on the insight included in the provided widget.\n *\n * This should happen for insights whose simple measures are all already set up with date filters. I guess ignoring\n * global date filter is desired because otherwise there is a large chance that the intersection of global date filter\n * and measure's date filters would lead to empty set and no data shown for the insight?\n */\nexport function isDashboardDateFilterIgnoredForInsight(insight) {\n    const simpleMeasures = insightMeasures(insight, isSimpleMeasure);\n    return simpleMeasures.length > 0 && simpleMeasures.every((m) => { var _a; return (_a = measureFilters(m)) === null || _a === void 0 ? void 0 : _a.some(isDateFilter); });\n}\nfunction selectResolvedInsightDateFilters(state, insight, dashboardDateFilters, insightDateFilters) {\n    if (isDashboardDateFilterIgnoredForInsight(insight)) {\n        return insightDateFilters;\n    }\n    return selectResolvedDateFilters(state, [...insightDateFilters, ...dashboardDateFilters]);\n}\nfunction selectResolvedDateFilters(state, dateFilters) {\n    const allDateFilterDateDatasetPairs = selectDateDatasetsForDateFilters(state, dateFilters);\n    return resolveDateFilters(allDateFilterDateDatasetPairs);\n}\nfunction resolveDateFilters(allDateFilterDateDatasetPairs) {\n    // go through the filters in reverse order using the first filter for a given dimension encountered\n    // and strip useless all time filters at the end\n    return allDateFilterDateDatasetPairs\n        .filter((item) => !!item.dateDataset)\n        .reduceRight((acc, curr) => {\n        const alreadyPresent = acc.some((item) => refMatchesMdObject(filterObjRef(item), curr.dateDataset.dataSet, \"dataSet\"));\n        if (!alreadyPresent) {\n            acc.push(curr.filter);\n        }\n        return acc;\n    }, [])\n        .filter((item) => !isAllTimeDateFilter(item));\n}\nfunction* queryWithInsight(ctx, widget, insight) {\n    const widgetAwareDashboardFiltersSelector = selectAllFiltersForWidgetByRef(widget.ref);\n    const widgetAwareDashboardFilters = yield select(widgetAwareDashboardFiltersSelector);\n    // add all time filter explicitly in case the date widgetAwareDashboardFilters are empty\n    // this will cause the all time filter to be used instead of the insight date filter\n    // if the dashboard date filter is not ignored by the widget\n    if (!widgetAwareDashboardFilters.filter(isDateFilter).length && widget.dateDataSet) {\n        widgetAwareDashboardFilters.push(newAllTimeFilter(widget.dateDataSet));\n    }\n    const effectiveInsightFilters = insightFilters(insight);\n    const [dateFilters, attributeFilters] = yield all([\n        select(selectResolvedInsightDateFilters, insight, widgetAwareDashboardFilters.filter(isDateFilter), effectiveInsightFilters.filter(isDateFilter)),\n        call(getResolvedInsightAttributeFilters, ctx, widget, widgetAwareDashboardFilters.filter(isAttributeFilter), effectiveInsightFilters.filter(isAttributeFilter)),\n    ]);\n    return [\n        ...dateFilters,\n        ...attributeFilters,\n        /**\n         * Strictly speaking, there should be a resolution here that makes sure there is at most one MVF per measure.\n         * This, however, is not worth the hassle: AD will not allow creating such insight, so the only way this might\n         * happen is if widgetFilterOverrides have this clash (or someone created an insight manually using API directly).\n         *\n         * We choose to not do it here as doing it would need extension of the SPI with some getMeasures method\n         * (because the catalog API cannot be used here as we do not know which dataset the given measure might come from)\n         * and we do not want that extension at the moment (catalog API should still be good enough for most use cases).\n         */\n        ...effectiveInsightFilters.filter(isMeasureValueFilter),\n        // nothing to resolve for ranking filters\n        ...effectiveInsightFilters.filter(isRankingFilter),\n    ];\n}\nfunction* queryWithoutInsight(ctx, widget) {\n    const widgetAwareDashboardFiltersSelector = selectAllFiltersForWidgetByRef(widget.ref);\n    const widgetAwareDashboardFilters = yield select(widgetAwareDashboardFiltersSelector);\n    const [dateFilters, attributeFilters] = yield all([\n        select(selectResolvedDateFilters, widgetAwareDashboardFilters.filter(isDateFilter)),\n        call(getResolvedAttributeFilters, ctx, widget, widgetAwareDashboardFilters.filter(isAttributeFilter)),\n    ]);\n    return [...dateFilters, ...attributeFilters];\n}\nfunction* queryService(ctx, query) {\n    const { payload: { widgetRef, insight }, correlationId, } = query;\n    const widgetSelector = selectWidgetByRef(widgetRef);\n    const widget = yield select(widgetSelector);\n    if (!widget) {\n        throw invalidQueryArguments(ctx, `Widget with ref ${objRefToString(widgetRef)} does not exist on the dashboard`, correlationId);\n    }\n    if (insight) {\n        return yield call(queryWithInsight, ctx, widget, insight);\n    }\n    else {\n        if (isInsightWidget(widget)) {\n            const insightRef = widget.insight;\n            const insightSelector = selectInsightByRef(insightRef);\n            const linkedInsight = yield select(insightSelector);\n            if (!linkedInsight) {\n                throw invalidQueryArguments(ctx, `Insight with ref ${objRefToString(insightRef)} does not exist on the dashboard`, correlationId);\n            }\n            return yield call(queryWithInsight, ctx, widget, linkedInsight);\n        }\n        else {\n            return yield call(queryWithoutInsight, ctx, widget);\n        }\n    }\n}\n//# sourceMappingURL=queryWidgetFilters.js.map","// (C) 2020-2022 GoodData Corporation\nimport identity from \"lodash/identity.js\";\n/*\n * Factory & builder for insight instances. Keeping it in test infrastructure for now, will see later on\n * whether we should move it to prod code and expose on public API.\n */\n/**\n * Creates new, empty insight definition, modifying its content with given modifications.\n *\n * @param visualizationUrl - visualization URL (e.g. local:bar, local:table..)\n * @param modifications - modification function which will be called with builder to update the insight\n * @internal\n */\nexport function newInsightDefinition(visualizationUrl, modifications = identity) {\n    const builder = new InsightDefinitionBuilder(visualizationUrl);\n    return modifications(builder).build();\n}\n/**\n * Insight definition builder can be used to set various properties of the insight using fluent API.\n *\n * @internal\n */\nexport class InsightDefinitionBuilder {\n    constructor(visualizationUrl) {\n        this.title = (title) => {\n            this.insight.title = title;\n            return this;\n        };\n        this.buckets = (buckets) => {\n            this.insight.buckets = buckets;\n            return this;\n        };\n        this.filters = (filters) => {\n            this.insight.filters = filters;\n            return this;\n        };\n        this.sorts = (sorts) => {\n            this.insight.sorts = sorts;\n            return this;\n        };\n        this.properties = (properties) => {\n            this.insight.properties = properties;\n            return this;\n        };\n        this.build = () => {\n            return {\n                insight: this.insight,\n            };\n        };\n        this.insight = {\n            visualizationUrl,\n            title: \"Untitled\",\n            buckets: [],\n            filters: [],\n            sorts: [],\n            properties: {},\n        };\n    }\n}\n//# sourceMappingURL=factory.js.map","import { newBucket, newInsightDefinition, newMeasure, objRefToString, serializeObjRef, } from \"@gooddata/sdk-model\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { loadDateDatasetsForInsight } from \"./loadAvailableDateDatasets.js\";\nimport fromPairs from \"lodash/fromPairs.js\";\nimport { sanitizeDateDatasetTitle, sortByRelevanceAndTitle, } from \"../../_staging/catalog/dateDatasetOrdering.js\";\nimport { selectAllCatalogMeasuresMap } from \"../store/catalog/catalogSelectors.js\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nexport const QueryDateDatasetsForMeasureService = createCachedQueryService(\"GDC.DASH/QUERY.MEASURE.DATE.DATASETS\", queryService, (query) => serializeObjRef(query.payload.measureRef));\n/**\n * Selector that will return date datasets for a measure. The input to the selector is the dashboard query that is used\n * to obtain and cache the data.\n *\n * This selector will return undefined if the query to obtain the data for a particular measure was not yet fired or\n * processed. Otherwise will return object containing `status` of the data retrieval; if the `status` is\n * `'success'` then the `result` prop will contain the data.\n *\n * @remarks see {@link QueryMeasureDateDatasets}\n * @internal\n */\nexport const selectDateDatasetsForMeasure = QueryDateDatasetsForMeasureService.cache.selectQueryResult;\n//\n// Query implementation\n//\nfunction* queryService(ctx, query) {\n    const { payload: { measureRef }, } = query;\n    const measures = yield select(selectAllCatalogMeasuresMap);\n    const measure = measures.get(measureRef);\n    if (!measure) {\n        throw invalidQueryArguments(ctx, `Measure ${objRefToString(measureRef)} does not exist.`, query.correlationId);\n    }\n    const intermediateInsight = newInsightDefinition(\"local:headline\", (i) => i.buckets([\n        newBucket(\"measures\", newMeasure(measure.measure.ref, (m) => m.localId(\"measure_date_datasets_availability\"))),\n    ]));\n    const dateDatasets = yield call(loadDateDatasetsForInsight, ctx, intermediateInsight);\n    const dateDatasetDisplayNames = fromPairs(dateDatasets.map((d) => [d.dataSet.title, sanitizeDateDatasetTitle(d)]));\n    return {\n        dateDatasets,\n        dateDatasetsOrdered: sortByRelevanceAndTitle(dateDatasets, dateDatasetDisplayNames),\n        dateDatasetDisplayNames,\n    };\n}\n//# sourceMappingURL=queryMeasureDateDatasets.js.map","// (C) 2021-2022 GoodData Corporation\nimport { objRefToString, isDashboardAttributeFilter, isKpiWidget, } from \"@gooddata/sdk-model\";\nimport { filterContextItemsToDashboardFiltersByWidget } from \"../../converters/index.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { select, call } from \"redux-saga/effects\";\nimport { invariant } from \"ts-invariant\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nimport { selectAlertByWidgetRef } from \"../store/alerts/alertsSelectors.js\";\nimport { selectFilterContextFilters } from \"../store/filterContext/filterContextSelectors.js\";\nimport { selectAnalyticalWidgetByRef } from \"../store/layout/layoutSelectors.js\";\nimport { createQueryService } from \"../store/_infra/queryService.js\";\nimport { resolveDisplayFormMetadata } from \"../utils/displayFormResolver.js\";\nimport { getBrokenAlertFiltersBasicInfo } from \"../utils/alertsUtils.js\";\nexport const QueryWidgetBrokenAlertService = createQueryService(\"GDC.DASH/QUERY.WIDGET.BROKEN_ALERTS\", queryService);\nfunction* queryService(ctx, query) {\n    var _a;\n    const { payload: { widgetRef }, correlationId, } = query;\n    const { alert, kpiWidget } = yield call(getKpiWidgetAndAlert, widgetRef, ctx, correlationId);\n    const alertFilters = (_a = alert === null || alert === void 0 ? void 0 : alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters;\n    // no filters -> no filters can be broken, bail early\n    if (!alert || !alertFilters) {\n        return [];\n    }\n    const displayFormsMap = yield call(resolveDisplayForms, alert, ctx);\n    const appliedFilters = yield call(getDashboardFilters, kpiWidget);\n    return getBrokenAlertFiltersBasicInfo(alert, kpiWidget, appliedFilters, displayFormsMap);\n}\nfunction* getKpiWidgetAndAlert(widgetRef, ctx, correlationId) {\n    const widgetSelector = selectAnalyticalWidgetByRef(widgetRef);\n    const kpiWidget = yield select(widgetSelector);\n    if (!kpiWidget) {\n        throw invalidQueryArguments(ctx, `Widget with ref ${objRefToString(widgetRef)} does not exist on the dashboard`, correlationId);\n    }\n    if (!isKpiWidget(kpiWidget)) {\n        throw invalidQueryArguments(ctx, `Widget with ref ${objRefToString(widgetRef)} is not IKpiWidget, only IKpiWidget could has alert assign.`, correlationId);\n    }\n    const alertSelector = selectAlertByWidgetRef(kpiWidget.ref);\n    const alert = yield select(alertSelector);\n    return { alert, kpiWidget };\n}\nfunction* resolveDisplayForms(alert, ctx) {\n    const displayFormIds = extractDisplayFormRefs(alert);\n    const result = yield call(resolveDisplayFormMetadata, ctx, displayFormIds);\n    // if some display forms could not be resolved then there is something seriously wrong\n    invariant(isEmpty(result.missing), \"Unable resolve some AttributeDisplayForms defined by alert filters\");\n    return result.resolved;\n}\nfunction* getDashboardFilters(kpiWidget) {\n    const dashboardFilters = yield select(selectFilterContextFilters);\n    const allFilters = filterContextItemsToDashboardFiltersByWidget(dashboardFilters, kpiWidget);\n    return allFilters !== null && allFilters !== void 0 ? allFilters : [];\n}\nfunction extractDisplayFormRefs(alert) {\n    var _a, _b;\n    const alertFilters = (_b = (_a = alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters) !== null && _b !== void 0 ? _b : [];\n    return alertFilters.filter(isDashboardAttributeFilter).map((filter) => {\n        return filter.attributeFilter.displayForm;\n    });\n}\n//# sourceMappingURL=queryWidgetBrokenAlerts.js.map","// (C) 2021-2022 GoodData Corporation\nimport last from \"lodash/last.js\";\nimport partition from \"lodash/partition.js\";\nimport { areObjRefsEqual, filterObjRef, isAttributeFilter, isDashboardAttributeFilterReference, isDashboardDateFilter, isDashboardDateFilterReference, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\n/**\n * Gets the information about the so called broken alert filters. These are filters that are set up on the alert,\n * but the currently applied filters either do not contain them, or the KPI has started ignoring them\n * since the alert was first set up.\n *\n * @param alert - the alert to compute the broken filters for\n * @param kpi - the KPI widget that the alert is relevant to\n * @param appliedFilters - all the currently applied filters (including All Time date filters)\n * @param displayFormsMap - map of all resolved related display forms\n *\n * @internal\n */\nexport function getBrokenAlertFiltersBasicInfo(alert, kpi, appliedFilters, displayFormsMap) {\n    var _a, _b;\n    const alertFilters = (_a = alert === null || alert === void 0 ? void 0 : alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters;\n    // no filters -> no filters can be broken, bail early\n    if (!alertFilters) {\n        return [];\n    }\n    const result = [];\n    const [alertDateFilters, alertAttributeFilters] = partition(alertFilters, isDashboardDateFilter);\n    // attribute filters\n    const appliedAttributeFilters = appliedFilters.filter(isAttributeFilter);\n    alertAttributeFilters.forEach((alertFilter) => {\n        const attributeFilterDisplayForm = displayFormsMap.get(alertFilter.attributeFilter.displayForm);\n        invariant(attributeFilterDisplayForm, `Alert filter display form not resolved ${alertFilter.attributeFilter.displayForm}`);\n        // ignored attribute filters are broken even if they are noop\n        const isIgnored = isAttributeFilterIgnored(kpi, attributeFilterDisplayForm.ref);\n        if (isIgnored) {\n            result.push({\n                alertFilter,\n                brokenType: \"ignored\",\n            });\n            return;\n        }\n        // deleted attribute filters are broken even if they are noop\n        const isInAppliedFilters = appliedAttributeFilters.some((f) => areObjRefsEqual(filterObjRef(f), attributeFilterDisplayForm.ref));\n        const isDeleted = !isInAppliedFilters;\n        if (isDeleted) {\n            result.push({\n                alertFilter,\n                brokenType: \"deleted\",\n            });\n        }\n    });\n    // date filter\n    const alertDateFilter = last(alertDateFilters);\n    if (alertDateFilter) {\n        const isIrrelevantNow = isDateFilterIrrelevant(kpi);\n        if (isIrrelevantNow) {\n            result.push({\n                alertFilter: {\n                    dateFilter: Object.assign(Object.assign({}, alertDateFilter.dateFilter), { dataSet: (_b = alertDateFilter.dateFilter.dataSet) !== null && _b !== void 0 ? _b : kpi.dateDataSet }),\n                },\n                brokenType: \"ignored\",\n            });\n        }\n    }\n    return result;\n}\nfunction isAttributeFilterIgnored(widget, displayForm) {\n    return widget.ignoreDashboardFilters.some((filter) => isDashboardAttributeFilterReference(filter) && areObjRefsEqual(filter.displayForm, displayForm));\n}\nfunction isDateFilterIrrelevant(widget) {\n    const dateDataSetRef = widget.dateDataSet;\n    // backward compatibility for old kpis\n    const ignoredOldWay = !!dateDataSetRef && isDateFilterIgnored(widget, dateDataSetRef);\n    // now dataSetRef is cleaned\n    const checkboxEnabled = !!dateDataSetRef;\n    return !checkboxEnabled || ignoredOldWay;\n}\nfunction isDateFilterIgnored(widget, displayForm) {\n    return widget.ignoreDashboardFilters.some((filter) => isDashboardDateFilterReference(filter) && areObjRefsEqual(filter.dataSet, displayForm));\n}\n//# sourceMappingURL=alertsUtils.js.map","// (C) 2021-2022 GoodData Corporation\nimport { objRefToString, isKpiWidget } from \"@gooddata/sdk-model\";\nimport { select, call } from \"redux-saga/effects\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nimport { selectWidgetByRef } from \"../store/layout/layoutSelectors.js\";\nimport { createQueryService } from \"../store/_infra/queryService.js\";\nimport { isTemporaryIdentity } from \"../utils/dashboardItemUtils.js\";\nexport const QueryWidgetAlertCountService = createQueryService(\"GDC.DASH/QUERY.WIDGET.ALERT_COUNT\", queryService);\nfunction* queryService(ctx, query) {\n    const { payload: { widgetRef }, correlationId, } = query;\n    const widget = yield select(selectWidgetByRef(widgetRef));\n    if (!widget) {\n        throw invalidQueryArguments(ctx, `Widget with ref ${objRefToString(widgetRef)} does not exist on the dashboard`, correlationId);\n    }\n    // just added KPIs with temporary identity cannot have alerts, do not try to load their count, it will fail\n    if (!isKpiWidget(widget) || isTemporaryIdentity(widget)) {\n        return 0;\n    }\n    const resultLoader = ctx.backend.workspace(ctx.workspace).dashboards();\n    const [result] = yield call([resultLoader, resultLoader.getWidgetAlertsCountForWidgets], [widgetRef]);\n    return result.alertCount;\n}\n//# sourceMappingURL=queryWidgetAlertCount.js.map","// (C) 2022 GoodData Corporation\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { call, select } from \"redux-saga/effects\";\nimport compact from \"lodash/compact.js\";\nimport { selectAttributeFilterDisplayFormsMap } from \"../store/index.js\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nexport const QueryConnectingAttributesService = createCachedQueryService(\"GDC.DASH/QUERY.CONNECTING.ATTRIBUTES\", queryService, (query) => {\n    const { payload: { refs }, } = query;\n    const serializedRefs = refs.flatMap((refs) => refs).map(serializeObjRef);\n    return serializedRefs.join(\"&\");\n});\nasync function loadConnectingAttributes(ctx, attributeRefs) {\n    const { backend, workspace } = ctx;\n    return await backend.workspace(workspace).attributes().getCommonAttributesBatch(attributeRefs);\n}\nasync function loadConnectingAttributesMeta(ctx, connectingAttributeRefs) {\n    const { backend, workspace } = ctx;\n    const attributeMetaObjects = await Promise.all(connectingAttributeRefs.map((refsEntry) => Promise.all(refsEntry.map((ref) => backend.workspace(workspace).attributes().getAttribute(ref)))));\n    return attributeMetaObjects.map((entry) => {\n        return entry.map((attributeMeta) => {\n            return {\n                title: attributeMeta.title,\n                ref: attributeMeta.ref,\n            };\n        });\n    });\n}\nfunction* mapDisplayFormsToAttributes(refs) {\n    const attributeDisplayFormsMap = yield select(selectAttributeFilterDisplayFormsMap);\n    return refs.map((displayFormRefsEntry) => displayFormRefsEntry.map((displayFormRef) => { var _a; return (_a = attributeDisplayFormsMap.get(displayFormRef)) === null || _a === void 0 ? void 0 : _a.attribute; }));\n}\nfunction* queryService(ctx, query) {\n    const { payload: { refs }, correlationId, } = query;\n    const attributeRefs = yield call(mapDisplayFormsToAttributes, refs);\n    const nonEmptyAttributesRef = compact(attributeRefs.map((refsEntry) => compact(refsEntry)));\n    if (refs.length !== nonEmptyAttributesRef.length) {\n        throw invalidQueryArguments(ctx, `Cannot find attributes for given displayForms`, correlationId);\n    }\n    const connectingAttributesRefs = yield call(loadConnectingAttributes, ctx, nonEmptyAttributesRef);\n    const connectingAttributes = yield call(loadConnectingAttributesMeta, ctx, connectingAttributesRefs);\n    return connectingAttributes;\n}\n//# sourceMappingURL=queryConnectingAttributes.js.map","// (C) 2022 GoodData Corporation\nimport { areObjRefsEqual, serializeObjRef, } from \"@gooddata/sdk-model\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nimport { selectCatalogAttributes } from \"../store/index.js\";\nexport const QueryAttributeByDisplayFormService = createCachedQueryService(\"GDC.DASH/QUERY.DISPLAY.FORM.ATTRIBUTE\", queryService, (query) => {\n    const { payload: { displayForms }, } = query;\n    return displayForms.map((df) => serializeObjRef(df)).join();\n});\n/**\n * Loads the attribute metadata for given display form. Primarily the metadata are loaded\n * from the catalog attributes. If the required attribute is not listed in the catalog\n * (e.g. deprecated attributes), the attribute metadata are fetched from the backend.\n */\nasync function loadAttributeByDisplayForm(ctx, catalogAttributes, displayForm) {\n    const { backend, workspace } = ctx;\n    const attribute = catalogAttributes.find((catalogAttribute) => catalogAttribute.displayForms.some((df) => areObjRefsEqual(df, displayForm)));\n    if (attribute) {\n        return attribute.attribute;\n    }\n    return backend.workspace(workspace).attributes().getAttributeByDisplayForm(displayForm);\n}\nasync function loadAttributes(ctx, catalogAttributes, displayForms) {\n    return Promise.all(displayForms.map((df) => loadAttributeByDisplayForm(ctx, catalogAttributes, df)));\n}\nfunction* queryService(ctx, query) {\n    const { payload: { displayForms }, correlationId, } = query;\n    const catalogAttributes = yield select(selectCatalogAttributes);\n    const attributes = yield call(loadAttributes, ctx, catalogAttributes, displayForms);\n    if (!attributes) {\n        throw invalidQueryArguments(ctx, `Cannot find attribute for given displayForm`, correlationId);\n    }\n    return attributes;\n}\n//# sourceMappingURL=queryAttributeByDisplayForm.js.map","// (C) 2022-2023 GoodData Corporation\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { call } from \"redux-saga/effects\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nexport const QueryAttributeDataSetService = createCachedQueryService(\"GDC.DASH/QUERY.DATA.SET.ATTRIBUTE\", queryService, (query) => {\n    const { payload: { displayForm }, } = query;\n    return serializeObjRef(displayForm);\n});\nasync function loadAttributeDataSetMeta(ctx, displayFormRef) {\n    const { backend, workspace } = ctx;\n    return backend.workspace(workspace).attributes().getAttributeDatasetMeta(displayFormRef);\n}\nfunction* queryService(ctx, query) {\n    const { payload: { displayForm }, correlationId, } = query;\n    const attributeDataSet = yield call(loadAttributeDataSetMeta, ctx, displayForm);\n    if (!attributeDataSet) {\n        throw invalidQueryArguments(ctx, `Cannot find attribute data set for given displayForm`, correlationId);\n    }\n    return attributeDataSet;\n}\n//# sourceMappingURL=queryAttributeDataset.js.map","// (C) 2022-2023 GoodData Corporation\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { createCachedQueryService } from \"../store/_infra/queryService.js\";\nimport { call } from \"redux-saga/effects\";\nimport { invalidQueryArguments } from \"../events/general.js\";\nexport const QueryAttributeElementsService = createCachedQueryService(\"GDC.DASH/QUERY.ELEMENTS.ATTRIBUTE\", queryService, (query) => {\n    const { payload: { displayForm }, } = query;\n    return serializeObjRef(displayForm);\n});\nasync function loadAttributeElements(ctx, displayFormRef, limit) {\n    const { backend, workspace } = ctx;\n    let loader = backend.workspace(workspace).attributes().elements().forDisplayForm(displayFormRef);\n    if (limit) {\n        loader = loader.withLimit(limit);\n    }\n    return loader.query();\n}\nfunction* queryService(ctx, query) {\n    const { payload: { displayForm, limit }, correlationId, } = query;\n    const attributeElements = yield call(loadAttributeElements, ctx, displayForm, limit);\n    if (!attributeElements) {\n        throw invalidQueryArguments(ctx, `Cannot find attribute elements for given displayForm`, correlationId);\n    }\n    return {\n        elements: attributeElements.items,\n        totalCount: attributeElements.totalCount,\n    };\n}\n//# sourceMappingURL=queryAttributeElements.js.map","// (C) 2021-2023 GoodData Corporation\nimport { QueryDateDatasetsForInsightService } from \"./queryInsightDateDatasets.js\";\nimport { QueryInsightAttributesMetaService } from \"./queryInsightAttributesMeta.js\";\nimport { QueryWidgetFiltersService } from \"./queryWidgetFilters.js\";\nimport { QueryDateDatasetsForMeasureService } from \"./queryMeasureDateDatasets.js\";\nimport { QueryWidgetBrokenAlertService } from \"./queryWidgetBrokenAlerts.js\";\nimport { QueryWidgetAlertCountService } from \"./queryWidgetAlertCount.js\";\nimport { QueryConnectingAttributesService } from \"./queryConnectingAttributes.js\";\nimport { QueryAttributeByDisplayFormService } from \"./queryAttributeByDisplayForm.js\";\nimport { QueryAttributeDataSetService } from \"./queryAttributeDataset.js\";\nimport { QueryAttributeElementsService } from \"./queryAttributeElements.js\";\nexport const AllQueryServices = [\n    QueryDateDatasetsForInsightService,\n    QueryInsightAttributesMetaService,\n    QueryWidgetFiltersService,\n    QueryDateDatasetsForMeasureService,\n    QueryWidgetBrokenAlertService,\n    QueryWidgetAlertCountService,\n    QueryConnectingAttributesService,\n    QueryAttributeByDisplayFormService,\n    QueryAttributeDataSetService,\n    QueryAttributeElementsService,\n];\n//# sourceMappingURL=index.js.map","// (C) 2021-2023 GoodData Corporation\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport defaultReduxSaga from \"redux-saga\";\nimport { enableBatching } from \"redux-batched-actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { filterContextSliceReducer } from \"./filterContext/index.js\";\nimport { layoutSliceReducer } from \"./layout/index.js\";\nimport { loadingSliceReducer } from \"./loading/index.js\";\nimport { savingSliceReducer } from \"./saving/index.js\";\nimport { insightsSliceReducer } from \"./insights/index.js\";\nimport { createRootEventEmitter } from \"./_infra/rootEventEmitter.js\";\nimport { rootCommandHandler } from \"./_infra/rootCommandHandler.js\";\nimport { configSliceReducer } from \"./config/index.js\";\nimport { entitlementsSliceReducer } from \"./entitlements/index.js\";\nimport { dateFilterConfigSliceReducer } from \"./dateFilterConfig/index.js\";\nimport { permissionsSliceReducer } from \"./permissions/index.js\";\nimport { alertsSliceReducer } from \"./alerts/index.js\";\nimport { catalogSliceReducer } from \"./catalog/index.js\";\nimport { call, fork } from \"redux-saga/effects\";\nimport { userSliceReducer } from \"./user/index.js\";\nimport { metaSliceReducer } from \"./meta/index.js\";\nimport { AllQueryServices } from \"../queryServices/index.js\";\nimport { executionResultsSliceReducer } from \"./executionResults/index.js\";\nimport { createQueryProcessingModule } from \"./_infra/queryProcessing.js\";\nimport values from \"lodash/values.js\";\nimport merge from \"lodash/merge.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport { listedDashboardsSliceReducer } from \"./listedDashboards/index.js\";\nimport { accessibleDashboardsSliceReducer } from \"./accessibleDashboards/index.js\";\nimport { inaccessibleDashboardsSliceReducer } from \"./inaccessibleDashboards/index.js\";\nimport { backendCapabilitiesSliceReducer } from \"./backendCapabilities/index.js\";\nimport { drillTargetsReducer } from \"./drillTargets/index.js\";\nimport { drillSliceReducer } from \"./drill/index.js\";\nimport { uiSliceReducer } from \"./ui/index.js\";\nimport { getDashboardContext } from \"./_infra/contexts.js\";\nimport { legacyDashboardsSliceReducer } from \"./legacyDashboards/index.js\";\nimport { renderModeSliceReducer } from \"./renderMode/index.js\";\nimport { dashboardPermissionsSliceReducer } from \"./dashboardPermissions/index.js\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst createSagaMiddleware = defaultImport(defaultReduxSaga);\nconst nonSerializableEventsAndCommands = [\n    \"GDC.DASH/EVT.COMMAND.STARTED\",\n    \"GDC.DASH/EVT.COMMAND.FAILED\",\n    \"GDC.DASH/EVT.QUERY.FAILED\",\n    \"@@GDC.DASH.SAVE_NEW\",\n    \"@@GDC.DASH.SAVE_EXISTING\",\n    \"@@GDC.DASH.SAVE_AS\",\n    // Execution events have errors, execution definitions etc. in them\n    \"GDC.DASH/EVT.WIDGET.EXECUTION_STARTED\",\n    \"GDC.DASH/EVT.WIDGET.EXECUTION_SUCCEEDED\",\n    \"GDC.DASH/EVT.WIDGET.EXECUTION_FAILED\",\n    // Custom events may contain whatever\n    \"GDC.DASH/CMD.EVENT.TRIGGER\",\n    // Drill commands & events contain non-serializable dataView\n    \"GDC.DASH/CMD.DRILL\",\n    \"GDC.DASH/CMD.EXECUTION_RESULT.UPSERT\",\n    \"GDC.DASH/EVT.DRILL.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILL_DOWN\",\n    \"GDC.DASH/EVT.DRILL.DRILL_DOWN.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.DRILL_DOWN.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_INSIGHT\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_DASHBOARD\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_ATTRIBUTE_URL\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_CUSTOM_URL\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILL_TO_LEGACY_DASHBOARD\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.REQUESTED\",\n    \"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.RESOLVED\",\n    \"GDC.DASH/CMD.DRILL.DRILLABLE_ITEMS.CHANGE\",\n    \"GDC.DASH/EVT.DRILL.DRILLABLE_ITEMS.CHANGED\",\n    \"meta/setDrillableItems\",\n    \"layout/updateWidgetIdentities\",\n    \"executionResults/upsertExecutionResult\",\n    \"loadingSlice/setLoadingError\",\n];\nfunction* rootSaga(eventEmitter, commandHandler, queryProcessor, backgroundWorkers) {\n    const dashboardContext = yield call(getDashboardContext);\n    try {\n        yield fork(eventEmitter);\n        yield fork(commandHandler);\n        yield fork(queryProcessor);\n        for (const worker of backgroundWorkers) {\n            yield fork(worker, dashboardContext);\n        }\n    }\n    catch (e) {\n        console.error(\"Root saga failed\", e);\n    }\n}\n/**\n * This middleware ensures that actions occurring in the dashboard have their meta enriched with appropriate\n * information:\n *  - all actions have an acceptedTimestamp - this represents the moment the action was recognized by the redux machinery\n *  - command actions also have a uuid - this is mainly used to implement the undo/redo logic\n *\n * Moving forward, there might be even more types of information added here.\n *\n * Note that for the time-related properties to make sense, this middleware should be registered as the first of all the middlewares if possible.\n */\nconst actionMetaFillingMiddleware = () => (next) => (action) => {\n    const nowTimestamp = +new Date();\n    action.meta = Object.assign(Object.assign({}, action.meta), { acceptedTimestamp: nowTimestamp });\n    if (action.type.startsWith(\"GDC.DASH/CMD.\")) {\n        // see: https://www.reddit.com/r/reactjs/comments/7cfgzr/redux_modifying_action_payload_in_middleware/dppknrh?utm_source=share&utm_medium=web2x&context=3\n        action.meta = Object.assign(Object.assign({}, action.meta), { uuid: uuidv4() });\n    }\n    return next(action);\n};\nfunction mergeQueryServices(original, extras = []) {\n    return values(merge({}, keyBy(original, (service) => service.name), keyBy(extras, (service) => service.name)));\n}\n/**\n * Creates a new store for a dashboard.\n *\n * @param config - runtime configuration to apply on the middlewares and the store\n */\nexport function createDashboardStore(config) {\n    var _a, _b;\n    const queryProcessing = createQueryProcessingModule(mergeQueryServices(AllQueryServices, config.queryServices));\n    const sagaMiddleware = createSagaMiddleware({\n        context: {\n            dashboardContext: config.dashboardContext,\n            privateContext: (_a = config.privateContext) !== null && _a !== void 0 ? _a : {},\n        },\n    });\n    const rootReducer = combineReducers({\n        loading: loadingSliceReducer,\n        saving: savingSliceReducer,\n        backendCapabilities: backendCapabilitiesSliceReducer,\n        config: configSliceReducer,\n        entitlements: entitlementsSliceReducer,\n        permissions: permissionsSliceReducer,\n        filterContext: filterContextSliceReducer,\n        layout: layoutSliceReducer,\n        dateFilterConfig: dateFilterConfigSliceReducer,\n        insights: insightsSliceReducer,\n        alerts: alertsSliceReducer,\n        drillTargets: drillTargetsReducer,\n        catalog: catalogSliceReducer,\n        user: userSliceReducer,\n        meta: metaSliceReducer,\n        drill: drillSliceReducer,\n        listedDashboards: listedDashboardsSliceReducer,\n        accessibleDashboards: accessibleDashboardsSliceReducer,\n        inaccessibleDashboards: inaccessibleDashboardsSliceReducer,\n        legacyDashboards: legacyDashboardsSliceReducer,\n        executionResults: executionResultsSliceReducer,\n        renderMode: renderModeSliceReducer,\n        ui: uiSliceReducer,\n        dashboardPermissions: dashboardPermissionsSliceReducer,\n        _queryCache: queryProcessing.queryCacheReducer,\n    });\n    const store = configureStore({\n        reducer: enableBatching(rootReducer),\n        middleware: (getDefaultMiddleware) => {\n            return getDefaultMiddleware({\n                thunk: false,\n                /*\n                 * All events that fly through the store have the dashboard context in the `ctx` prop. This is\n                 * for the receiver of the event (who may be well off redux).\n                 *\n                 * Additionally, some events - namely those reporting on error scenarios may include the actual\n                 * error instance in them.\n                 */\n                serializableCheck: {\n                    ignoredActions: nonSerializableEventsAndCommands,\n                    // events always include ctx\n                    // various envelopes allow sending explicit callback functions that will be fired\n                    // while processing the enveloped content. the envelopes are purely for 'promisification' of\n                    // command or query handling, they have no impact on state; it is no problem that they\n                    // have such content in them\n                    ignoredActionPaths: [\"ctx\", \"onStart\", \"onError\", \"onSuccess\"],\n                    ignoredPaths: [\n                        // drillableItems can be functions (header predicates)\n                        \"drill.drillableItems\",\n                        // executions can have Errors stored, also some decorated execution results are non-serializable too\n                        \"executionResults\",\n                    ],\n                    // prolong the check limit, otherwise this will flood the logs on CI with non-actionable warnings\n                    warnAfter: 128,\n                },\n            })\n                .prepend(actionMetaFillingMiddleware)\n                .concat(...(config.additionalMiddleware ? [config.additionalMiddleware] : []), sagaMiddleware);\n        },\n    });\n    const { eventing = {} } = config;\n    if (eventing.onStateChange) {\n        store.subscribe(() => { var _a; return (_a = eventing.onStateChange) === null || _a === void 0 ? void 0 : _a.call(eventing, store.getState(), store.dispatch); });\n    }\n    const rootEventEmitter = createRootEventEmitter(eventing.initialEventHandlers, store.dispatch);\n    (_b = eventing.onEventingInitialized) === null || _b === void 0 ? void 0 : _b.call(eventing, rootEventEmitter.registerHandler, rootEventEmitter.unregisterHandler);\n    const rootSagaTask = sagaMiddleware.run(rootSaga, rootEventEmitter.eventEmitterSaga, rootCommandHandler, queryProcessing.rootQueryProcessor, config.backgroundWorkers);\n    return {\n        store,\n        registerEventHandler: rootEventEmitter.registerHandler,\n        unregisterEventHandler: rootEventEmitter.unregisterHandler,\n        rootSagaTask,\n    };\n}\n//# sourceMappingURL=dashboardStore.js.map","import { actionChannel, select, take } from \"redux-saga/effects\";\nimport { isDashboardEventOrCustomDashboardEvent } from \"../../events/index.js\";\n/**\n * Creates root event emitter that will be responsible for emitting events to all registered handlers.\n *\n * The emitter is realized using a saga. This saga has its own dedicated channel through which it receives\n * the events to emit - the event bus. Upon emitter start, it creates the channel and sets it into the\n * `eventEmitterContext` field of the saga context - this way other sagas can get hold of it.\n *\n * @param initialHandlers - event handlers to register at the time of creation\n * @param dispatch - dispatch object\n */\nexport function createRootEventEmitter(initialHandlers = [], dispatch) {\n    let eventHandlers = [...initialHandlers];\n    return {\n        registerHandler: (handler) => {\n            eventHandlers.push(handler);\n        },\n        unregisterHandler: (handler) => {\n            eventHandlers = eventHandlers.filter((h) => h !== handler);\n        },\n        eventEmitterSaga: function* () {\n            const eventChannel = yield actionChannel(isDashboardEventOrCustomDashboardEvent);\n            while (true) {\n                const event = yield take(eventChannel);\n                // snapshot current state to ensure event handlers operate on state relevant to when they were fired\n                const stateSnapshot = yield select();\n                const selectorEvaluator = (selector) => selector(stateSnapshot);\n                try {\n                    eventHandlers.forEach((handler) => {\n                        if (handler.eval(event)) {\n                            handler.handler(event, dispatch, selectorEvaluator);\n                        }\n                    });\n                }\n                catch (e) {\n                    console.error(\"Error has occurred while dispatching event\", event, e);\n                }\n            }\n        },\n    };\n}\n//# sourceMappingURL=rootEventEmitter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useEffect, useRef, useState } from \"react\";\nimport { useBackendStrict, useClientWorkspaceIdentifiers, usePrevious, useWorkspace } from \"@gooddata/sdk-ui\";\nimport { useMapboxToken, enrichMapboxToken } from \"@gooddata/sdk-ui-geo\";\nimport { isDashboard } from \"@gooddata/sdk-model\";\nimport { objectUtils } from \"@gooddata/util\";\nimport { newRenderingWorker } from \"../commandHandlers/render/renderingWorker.js\";\nimport { initializeDashboardWithPersistedDashboard, InitialLoadCorrelationId } from \"../commands/index.js\";\nimport { createDashboardStore } from \"../store/dashboardStore.js\";\nimport { dashboardDeinitialized } from \"../events/dashboard.js\";\nfunction dispatchDeinitialized(dashboardStore, initProps) {\n    const dashboardRef = isDashboard(initProps.dashboard) ? initProps.dashboard.ref : initProps.dashboard;\n    dashboardStore === null || dashboardStore === void 0 ? void 0 : dashboardStore.store.dispatch(dashboardDeinitialized({\n        backend: initProps.backend,\n        workspace: initProps.workspace,\n        dashboardRef,\n        filterContextRef: initProps.filterContextRef,\n        clientId: initProps.clientId,\n        dataProductId: initProps.dataProductId,\n    }, dashboardRef));\n}\nfunction useNotifyDeinitializedOnUnmount(dashboardStore, initProps) {\n    // we need to keep these in refs to be able to access them from the \"componentDidUnmount\" effect\n    // otherwise, by the time we get to that effect these would be null\n    const dashboardStoreRef = useRef(dashboardStore);\n    const initPropsRef = useRef(initProps);\n    useEffect(() => {\n        dashboardStoreRef.current = dashboardStore;\n        initPropsRef.current = initProps;\n    });\n    useEffect(() => {\n        return () => {\n            dispatchDeinitialized(dashboardStoreRef.current, initPropsRef.current);\n        };\n    }, []);\n}\n/**\n * This hook is responsible for properly initializing and re-initializing the dashboard redux store,\n * when the props of the Dashboard component change.\n * It also cancels currently running sagas before the re-initialization.\n *\n * @internal\n */\nexport const useInitializeDashboardStore = (props) => {\n    var _a, _b;\n    const { dashboard, persistedDashboard } = props;\n    const backend = useBackendStrict(props.backend);\n    const workspace = useWorkspace(props.workspace);\n    const mapboxToken = useMapboxToken((_a = props.config) === null || _a === void 0 ? void 0 : _a.mapboxToken);\n    const { client: clientId, dataProduct: dataProductId } = (_b = useClientWorkspaceIdentifiers()) !== null && _b !== void 0 ? _b : {};\n    const [dashboardStore, setDashboardStore] = useState(null);\n    const dashboardRef = isDashboard(dashboard) ? dashboard.ref : dashboard;\n    const currentInitProps = {\n        backend,\n        workspace,\n        dashboard,\n        filterContextRef: props.filterContextRef,\n        clientId,\n        dataProductId,\n        initialEventHandlers: props.eventHandlers,\n    };\n    const previousInitProps = usePrevious(currentInitProps);\n    useNotifyDeinitializedOnUnmount(dashboardStore, currentInitProps);\n    useEffect(() => {\n        var _a;\n        if (!objectUtils.shallowEqualObjects(previousInitProps, currentInitProps) || !dashboardStore) {\n            if (dashboardStore) {\n                // Trigger the deinitialize event, we are going to initialize a whole ne store right away\n                // Use the previousInitProps: we want to notify the dashboard being discarded, not the new one.\n                dispatchDeinitialized(dashboardStore, previousInitProps);\n                // When props are different and dashboardStore is already initialized or initializing,\n                // cancel all running sagas.\n                // In some cases (eg., re-initialization caused by a call from the event handler),\n                // this can lead to an error, but it should be safe to ignore it.\n                try {\n                    dashboardStore.rootSagaTask.cancel();\n                    // eslint-disable-next-line no-empty\n                }\n                catch (_b) { }\n            }\n            const backgroundWorkers = [newRenderingWorker()];\n            // Create new store and fire load dashboard command.\n            const newDashboardStore = createDashboardStore({\n                dashboardContext: {\n                    backend,\n                    workspace: workspace,\n                    dashboardRef: dashboardRef,\n                    filterContextRef: currentInitProps.filterContextRef,\n                    clientId: currentInitProps.clientId,\n                    dataProductId: currentInitProps.dataProductId,\n                },\n                eventing: {\n                    initialEventHandlers: props.eventHandlers,\n                    onStateChange: props.onStateChange,\n                    onEventingInitialized: props.onEventingInitialized,\n                },\n                backgroundWorkers,\n                privateContext: Object.assign(Object.assign({}, props.customizationFns), { widgetsOverlayFn: props.widgetsOverlayFn, preloadedDashboard: isDashboard(dashboard) ? dashboard : undefined }),\n                initialRenderMode: (_a = props.initialRenderMode) !== null && _a !== void 0 ? _a : \"view\",\n            });\n            newDashboardStore.store.dispatch(initializeDashboardWithPersistedDashboard(enrichMapboxToken(props.config, mapboxToken), props.permissions, persistedDashboard, InitialLoadCorrelationId));\n            setDashboardStore(newDashboardStore);\n        }\n    });\n    return dashboardStore;\n};\n//# sourceMappingURL=useInitializeDashboardStore.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { createDispatchHook, createSelectorHook, Provider } from \"react-redux\";\nimport { DashboardEventsProvider } from \"./DashboardEventsContext.js\";\nimport { useInitializeDashboardStore } from \"./useInitializeDashboardStore.js\";\n/**\n * @alpha\n */\nexport const ReactDashboardContext = React.createContext(null);\n/**\n * @alpha\n */\nexport const useDashboardDispatch = createDispatchHook(ReactDashboardContext);\n/**\n * Hook for retrieving data from the dashboard state.\n *\n * @example\n * Example how to obtain all insights stored on the dashboard:\n *\n * ```tsx\n * import { useDashboardSelector, selectInsights } from \"@gooddata/sdk-ui-dashboard\";\n *\n * const CustomDashboardWidget = () => {\n *   const insights = useDashboardSelector(selectInsights);\n *\n *   return (\n *      <pre>{JSON.stringify(insights, null, 2)}</pre>\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const useDashboardSelector = createSelectorHook(ReactDashboardContext);\n/**\n * @internal\n */\nexport const DashboardStoreProvider = (props) => {\n    const dashboardStore = useInitializeDashboardStore(props);\n    const { additionalReduxContext } = props;\n    if (!dashboardStore) {\n        return null;\n    }\n    if (additionalReduxContext != undefined && additionalReduxContext !== ReactDashboardContext) {\n        /*\n         * Setting store into multiple contexts is essential in environments where a dynamically loaded\n         * dashboard engine is integrated into an application that adds additional embedded, local plugins\n         * which use Redux hooks (useDashboardSelector, useDashboardDispatch)\n         *\n         * Such local code is typically built against a local version of the sdk-ui-dashboard and has\n         * different redux context providers from those used by dynamically loaded engine bundle.\n         *\n         * When the local code uses redux hooks, it will explode because they look into a different context\n         * where the store is unset.\n         */\n        return (React.createElement(Provider, { store: dashboardStore.store, context: ReactDashboardContext },\n            React.createElement(Provider, { store: dashboardStore.store, context: additionalReduxContext },\n                React.createElement(DashboardEventsProvider, { registerHandler: dashboardStore.registerEventHandler, unregisterHandler: dashboardStore.unregisterEventHandler }, props.children))));\n    }\n    return (React.createElement(Provider, { store: dashboardStore.store, context: ReactDashboardContext },\n        React.createElement(DashboardEventsProvider, { registerHandler: dashboardStore.registerEventHandler, unregisterHandler: dashboardStore.unregisterEventHandler }, props.children)));\n};\n//# sourceMappingURL=DashboardStoreProvider.js.map","// (C) 2021 GoodData Corporation\n// \"Original\" here: https://github.com/moroshko/shallow-equal/blob/master/src/objects.js\n/**\n * @internal\n */\nexport function shallowEqualObjects(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    const aKeys = Object.keys(objA);\n    const bKeys = Object.keys(objB);\n    const len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (let i = 0; i < len; i++) {\n        const key = aKeys[i];\n        if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=objectUtils.js.map","// (C) 2020-2023 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useDashboardEventsContext } from \"./DashboardEventsContext.js\";\nimport { useDashboardDispatch } from \"./DashboardStoreProvider.js\";\n/**\n * Hook that takes command creator and event handlers and returns function\n * that will result into dispatching this command, registering the event handlers,\n * and unregistering them once event type with the same type and correlation ID is triggered.\n *\n * @remarks\n * If no correlationId is provided, it's auto-generated.\n\n * @param commandCreator - command factory\n * @param eventHandlers - record with eventTypes as keys and relevant callbacks as values\n * @param onBeforeRun - provide callback that will be called before dispatching the command\n * @returns callback that dispatches the command, registers relevant event handlers and unregisters them\n *          when an event that matches the correlation ID and one of the specified event types occurs\n * @internal\n */\nexport const useDashboardCommand = (commandCreator, eventHandlers, onBeforeRun) => {\n    const dispatch = useDashboardDispatch();\n    const { registerHandler, unregisterHandler } = useDashboardEventsContext();\n    return useCallback((...args) => {\n        var _a;\n        let command = commandCreator(...args);\n        const correlationId = (_a = command.correlationId) !== null && _a !== void 0 ? _a : uuid();\n        if (!command.correlationId) {\n            command = Object.assign(Object.assign({}, command), { correlationId });\n        }\n        const dashboardEventHandlers = eventHandlers\n            ? Object.keys(eventHandlers).map((eventType) => {\n                const dashboardEventHandler = {\n                    eval: (eT) => eT.type === eventType,\n                    handler: (event) => {\n                        if (event.correlationId === correlationId) {\n                            unregisterHandlers();\n                            eventHandlers[eventType](event);\n                        }\n                    },\n                };\n                return dashboardEventHandler;\n            })\n            : [];\n        dashboardEventHandlers.forEach((handler) => {\n            registerHandler(handler);\n        });\n        function unregisterHandlers() {\n            dashboardEventHandlers.forEach((handler) => {\n                unregisterHandler(handler);\n            });\n        }\n        onBeforeRun === null || onBeforeRun === void 0 ? void 0 : onBeforeRun(command);\n        dispatch(command);\n    }, []);\n};\n//# sourceMappingURL=useDashboardCommand.js.map","// (C) 2020-2021 GoodData Corporation\nimport { useState } from \"react\";\nimport { useDashboardCommand } from \"./useDashboardCommand.js\";\n/**\n * @internal\n */\nexport const useDashboardCommandProcessing = ({ commandCreator, successEvent, errorEvent, onSuccess, onError, onBeforeRun, }) => {\n    const [status, setStatus] = useState();\n    const run = useDashboardCommand(commandCreator, {\n        [successEvent]: (event) => {\n            setStatus(\"success\");\n            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(event);\n        },\n        [errorEvent]: (event) => {\n            setStatus(\"error\");\n            onError === null || onError === void 0 ? void 0 : onError(event);\n        },\n    }, (cmd) => {\n        setStatus(\"running\");\n        onBeforeRun === null || onBeforeRun === void 0 ? void 0 : onBeforeRun(cmd);\n    });\n    return {\n        run,\n        status,\n    };\n};\n//# sourceMappingURL=useDashboardCommandProcessing.js.map","// (C) 2021-2023 GoodData Corporation\n/**\n * Creates an {@link TriggerEvent} command.\n *\n * @beta\n */\nexport function triggerEvent(eventBody, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.EVENT.TRIGGER\",\n        correlationId,\n        payload: {\n            eventBody,\n        },\n    };\n}\n//# sourceMappingURL=events.js.map","// (C) 2020-2021 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { isDashboardEventOrCustomDashboardEvent, } from \"../events/index.js\";\nimport { useDashboardDispatch } from \"./DashboardStoreProvider.js\";\nimport { triggerEvent } from \"../commands/index.js\";\n/**\n * Convenience hook for dispatching Dashboard events.\n *\n * @returns function that you can use to dispatch Dashboard events\n * @alpha\n */\nexport const useDashboardEventDispatch = () => {\n    const dispatch = useDashboardDispatch();\n    return useCallback((eventBody) => {\n        invariant(isDashboardEventOrCustomDashboardEvent(eventBody), \"Unsupported event passed to useDashboardEventDispatch result.\");\n        const command = triggerEvent(eventBody);\n        dispatch(command);\n    }, [dispatch]);\n};\n//# sourceMappingURL=useDashboardEventDispatch.js.map","// (C) 2021 GoodData Corporation\nimport { queryEnvelopeWithPromise } from \"./queryProcessing.js\";\n/**\n * Dispatches a query and returns a promise to its result.\n *\n * @param dispatch - dashboard dispatch to use\n * @param query - query to trigger and wait for results of\n * @returns Promise of the query result\n * @alpha\n */\nexport async function queryAndWaitFor(dispatch, query) {\n    const { promise, envelope } = queryEnvelopeWithPromise(query);\n    dispatch(envelope);\n    return promise;\n}\n//# sourceMappingURL=queryAndWaitFor.js.map","// (C) 2020-2023 GoodData Corporation\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { UnexpectedSdkError } from \"@gooddata/sdk-ui\";\nimport { queryAndWaitFor } from \"../store/index.js\";\nimport { useDashboardDispatch } from \"./DashboardStoreProvider.js\";\nimport { isDashboardQueryFailed, isDashboardQueryRejected, } from \"../events/index.js\";\n/**\n * @internal\n */\nexport const useDashboardQueryProcessing = ({ queryCreator, onSuccess, onError, onRejected, onBeforeRun, }) => {\n    const [state, setState] = useState({\n        status: \"pending\",\n        error: undefined,\n        result: undefined,\n    });\n    const canceled = useRef(false);\n    const dispatch = useDashboardDispatch();\n    const run = useCallback((...args) => {\n        if (canceled.current) {\n            return;\n        }\n        let query = queryCreator(...args);\n        if (!query.correlationId) {\n            query = Object.assign(Object.assign({}, query), { correlationId: uuid() });\n        }\n        if (!canceled.current) {\n            setState({\n                status: \"running\",\n                result: undefined,\n                error: undefined,\n            });\n        }\n        onBeforeRun === null || onBeforeRun === void 0 ? void 0 : onBeforeRun(query);\n        queryAndWaitFor(dispatch, query)\n            .then((result) => {\n            if (!canceled.current) {\n                setState({ status: \"success\", result, error: undefined });\n                onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(result);\n            }\n        })\n            .catch((e) => {\n            if (!canceled.current) {\n                if (isDashboardQueryFailed(e)) {\n                    setState({\n                        status: \"error\",\n                        result: undefined,\n                        error: new UnexpectedSdkError(e.payload.message, e.payload.error),\n                    });\n                    onError === null || onError === void 0 ? void 0 : onError(e);\n                }\n                else if (isDashboardQueryRejected(e)) {\n                    setState({ status: \"rejected\", result: undefined, error: undefined });\n                    onRejected === null || onRejected === void 0 ? void 0 : onRejected(e);\n                }\n            }\n        });\n    }, [queryCreator, onSuccess, onError, onRejected, onBeforeRun]);\n    // cancel any \"in-flight\" queries once the parent component is unmounting to prevent react warnings\n    // about updating unmounted components\n    useEffect(() => {\n        return () => {\n            canceled.current = true;\n        };\n    }, []);\n    return Object.assign({ run }, state);\n};\n//# sourceMappingURL=useDashboardQueryProcessing.js.map","// (C) 2020-2023 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { userInteractionTriggered, } from \"../events/index.js\";\nimport { useDashboardEventDispatch } from \"./useDashboardEventDispatch.js\";\n/**\n * Hook for dispatching relevant user interaction commands.\n * These commands enable to track user interactions that cannot be tracked by other existing events.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useDashboardUserInteraction = () => {\n    const eventDispatch = useDashboardEventDispatch();\n    const poweredByGDLogoClicked = useCallback(() => {\n        eventDispatch(userInteractionTriggered(\"poweredByGDLogoClicked\"));\n    }, [eventDispatch]);\n    const kpiAlertDialogClosed = useCallback(() => {\n        eventDispatch(userInteractionTriggered(\"kpiAlertDialogClosed\"));\n    }, [eventDispatch]);\n    const kpiAlertDialogOpened = useCallback((alreadyHasAlert) => {\n        eventDispatch(userInteractionTriggered({ interaction: \"kpiAlertDialogOpened\", data: { alreadyHasAlert } }));\n    }, [eventDispatch]);\n    const descriptionTooltipOpened = useCallback((eventData) => {\n        eventDispatch(userInteractionTriggered({ interaction: \"descriptionTooltipOpened\", data: eventData }));\n    }, [eventDispatch]);\n    const shareDialogInteraction = useCallback((eventData) => {\n        eventDispatch(userInteractionTriggered({ interaction: \"shareDialogInteraction\", data: eventData }));\n    }, [eventDispatch]);\n    const attributeFilterTitleResetClicked = useCallback(() => {\n        eventDispatch(userInteractionTriggered(\"attributeFilterTitleResetClicked\"));\n    }, []);\n    return {\n        poweredByGDLogoClicked,\n        kpiAlertDialogClosed,\n        kpiAlertDialogOpened,\n        descriptionTooltipOpened,\n        shareDialogInteraction,\n        attributeFilterTitleResetClicked,\n    };\n};\n//# sourceMappingURL=useDashboardUserInteraction.js.map","/**\n * Notify the dashboard about asynchronous rendering (eg when the component needs to load some asynchronous data to be rendered) of the component.\n *\n * @remarks\n *  * Mechanism is following:\n * - You must request async rendering for at least 1 component within 2 seconds of the {@link DashboardInitialized} event.\n *   (If you do not register any asynchronous rendering, after 2 seconds the dashboard will announce that it is rendered by dispatching {@link DashboardRenderResolved} event.)\n * - You can request async rendering for any number of components. Requests are valid if the first rule is met\n *   and not all asynchronous renderings have been resolved and the maximum timeout (20min by default) has not elapsed.\n * - The component may again request asynchronous rendering within 2 seconds of resolution. Maximum 3x.\n *   (this is necessary to cover possible re-renders caused by data received from the components themselves, after they are rendered)\n * - Maximum rendering time of the dashboard is 20min - if some asynchronous renderings are not yet resolved at this time, {@link DashboardRenderResolved} event is dispatched anyway.\n *\n * - Each component on the dashboard that is rendered asynchronously should fire this command.\n * - Once the component is rendered, it should notify the dashboard by dispatching {@link resolveAsyncRender} command\n *   with the corresponding identifier.\n *\n * By registering and resolving asynchronous data retrieval of the each widget, the dashboard is able to recognize and notify that it is fully rendered.\n * This mechanism is necessary for dashboard exports to PDF to work properly.\n *\n * @public\n * @param id - async render identifier\n * @param correlationId - specify correlation id to use for this command.\n *                        this will be included in all events that will be emitted during the command processing\n * @returns\n */\nexport function requestAsyncRender(id, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.RENDER.ASYNC.REQUEST\",\n        correlationId,\n        payload: {\n            id,\n        },\n    };\n}\n/**\n * Notify the dashboard about resolved asynchronous rendering of the component.\n *\n * @remarks\n * - Each component on the dashboard that is rendered asynchronously should fire this command.\n * - This command should only be dispatched if a {@link requestAsyncRender} command with the corresponding identifier\n *   has already been dispatched.\n *\n * @public\n * @param id - async render identifier\n * @param correlationId - specify correlation id to use for this command.\n *                        this will be included in all events that will be emitted during the command processing\n * @returns\n */\nexport function resolveAsyncRender(id, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.RENDER.ASYNC.RESOLVE\",\n        correlationId,\n        payload: {\n            id,\n        },\n    };\n}\n//# sourceMappingURL=render.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { useDashboardDispatch } from \"./DashboardStoreProvider.js\";\n/**\n * Hook that takes command creator and returns function that will result into dispatching this command.\n *\n * @remarks\n * The created function takes original command creators parameters as per example below.\n *\n * @example\n * ```\n * // create a dashboard command to reset AttributeFilter selection\n * const resetAttributeFilter = useDispatchDashboardCommand(resetAttributeFilterSelection);\n *\n * // somewhere else in the code call the command to reset the filters\n * **\n * resetAttributeFilter(<dashboard-local-id>);\n * **\n * ```\n *\n * @param commandCreator - command factory\n * @returns callback that dispatches the command\n * @public\n */\nexport const useDispatchDashboardCommand = (commandCreator) => {\n    const dispatch = useDashboardDispatch();\n    return useCallback((...args) => {\n        const command = commandCreator(...args);\n        dispatch(command);\n    }, [commandCreator]);\n};\n//# sourceMappingURL=useDispatchDashboardCommand.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { requestAsyncRender, resolveAsyncRender } from \"../commands/index.js\";\nimport { useDispatchDashboardCommand } from \"./useDispatchDashboardCommand.js\";\n/**\n * A React hook that allows you to request and inform the dashboard about the rendering of a component\n * that loads asynchronous data (eg Insight, Kpi, but it can be also any custom widget).\n * By registering and resolving asynchronous data retrieval of the each widget, the dashboard is able to recognize and notify that it is fully rendered.\n * This mechanism is necessary for dashboard exports to PDF to work properly.\n *\n * Mechanism is following:\n * - You must request async rendering for at least 1 component within 2 seconds of the {@link DashboardInitialized} event.\n *   (If you do not register any asynchronous rendering, after 2 seconds the dashboard will announce that it is rendered by dispatching {@link DashboardRenderResolved} event.)\n * - You can request async rendering for any number of components. Requests are valid if the first rule is met\n *   and not all asynchronous renderings have been resolved and the maximum timeout (20min by default) has not elapsed.\n * - The component may again request asynchronous rendering within 2 seconds of resolution. Maximum 3x.\n *   (this is necessary to cover possible re-renders caused by data received from the components themselves, after they are rendered)\n * - Maximum rendering time of the dashboard is 20min - if some asynchronous renderings are not yet resolved at this time, {@link DashboardRenderResolved} event is dispatched anyway.\n *\n * Request async rendering of the component by calling onRequestAsyncRender() callback.\n * Resolve async rendering of the component by calling onResolveAsyncRender() callback.\n *\n * @public\n * @param id - unique identifier of the component\n * @returns callbacks\n */\nexport const useDashboardAsyncRender = (id) => {\n    const requestDashboardAsyncRender = useDispatchDashboardCommand(requestAsyncRender);\n    const resolveDashboardAsyncRender = useDispatchDashboardCommand(resolveAsyncRender);\n    const onRequestAsyncRender = useCallback(() => {\n        requestDashboardAsyncRender(id);\n    }, [id]);\n    const onResolveAsyncRender = useCallback(() => {\n        resolveDashboardAsyncRender(id);\n    }, [id]);\n    return {\n        onRequestAsyncRender,\n        onResolveAsyncRender,\n    };\n};\n//# sourceMappingURL=useDashboardAsyncRender.js.map","// (C) 2021-2023 GoodData Corporation\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport isString from \"lodash/isString.js\";\nfunction upsertExecutionResult(id, envelopeData, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.EXECUTION_RESULT.UPSERT\",\n        correlationId,\n        payload: Object.assign(Object.assign({}, envelopeData), { id: isString(id) ? id : serializeObjRef(id) }),\n    };\n}\n/**\n * Creates an {@link UpsertExecutionResult} command that makes the relevant execution result indicate it is loading.\n *\n * @beta\n */\nexport function setExecutionResultLoading(id, correlationId) {\n    return upsertExecutionResult(id, {\n        isLoading: true,\n        executionResult: undefined,\n        error: undefined,\n        warnings: undefined,\n    }, correlationId);\n}\n/**\n * Creates an {@link UpsertExecutionResult} command that makes the relevant execution result indicate an error and stop loading.\n *\n * @beta\n */\nexport function setExecutionResultError(id, error, correlationId) {\n    return upsertExecutionResult(id, {\n        isLoading: false,\n        error,\n        warnings: undefined,\n    }, correlationId);\n}\n/**\n * Creates an {@link UpsertExecutionResult} command that makes the relevant execution result set new result data and stop loading.\n *\n * @beta\n */\nexport function setExecutionResultData(id, executionResult, executionWarnings, correlationId) {\n    return upsertExecutionResult(id, {\n        isLoading: false,\n        error: undefined,\n        executionResult,\n        warnings: executionWarnings,\n    }, correlationId);\n}\n//# sourceMappingURL=executionResults.js.map","// (C) 2021-2023 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { useDispatchDashboardCommand } from \"./useDispatchDashboardCommand.js\";\nimport { setExecutionResultData, setExecutionResultError, setExecutionResultLoading, } from \"../commands/index.js\";\n/**\n * Provides callbacks to integrate with the executionResults slice.\n * @internal\n */\nexport function useWidgetExecutionsHandler(widgetRef) {\n    const startLoading = useDispatchDashboardCommand(setExecutionResultLoading);\n    const setData = useDispatchDashboardCommand(setExecutionResultData);\n    const setError = useDispatchDashboardCommand(setExecutionResultError);\n    const onError = useCallback((error) => {\n        setError(widgetRef, error);\n    }, [setError, widgetRef]);\n    const onSuccess = useCallback((executionResult, warnings) => {\n        setData(widgetRef, executionResult, warnings);\n    }, [setData, widgetRef]);\n    const onPushData = useCallback((data) => {\n        if (data.dataView) {\n            onSuccess(data.dataView.result, data.dataView.warnings);\n        }\n    }, [onSuccess]);\n    const onLoadingChanged = useCallback(({ isLoading }) => {\n        if (isLoading) {\n            startLoading(widgetRef);\n        }\n    }, [startLoading, widgetRef]);\n    return {\n        onLoadingChanged,\n        onError,\n        onSuccess,\n        onPushData,\n    };\n}\n//# sourceMappingURL=useWidgetExecutionsHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { createContext, useCallback, useState } from \"react\";\n/**\n * @internal\n */\nexport const ToastMessageContext = createContext({\n    messages: [],\n    removeMessage: () => {\n        /*do nothing*/\n    },\n    removeAllMessages: () => {\n        /*do nothing*/\n    },\n    addMessage: () => {\n        /*do nothing*/\n        return \"\";\n    },\n});\nlet idCounter = 0;\nconst DEFAULT_DURATION = 2500;\n/**\n * @internal\n */\nexport const ToastMessageContextProvider = ({ children }) => {\n    const [messages, setMessages] = useState([]);\n    const removeMessage = useCallback((id) => {\n        setMessages((prevMessages) => prevMessages.filter((message) => message.id !== id));\n    }, []);\n    const removeAllMessages = useCallback(() => {\n        setMessages([]);\n    }, []);\n    const addMessage = useCallback((message) => {\n        var _a;\n        const id = (++idCounter).toString(10);\n        const newMessage = Object.assign(Object.assign({}, message), { id });\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n        const duration = (_a = message.duration) !== null && _a !== void 0 ? _a : DEFAULT_DURATION;\n        if (duration) {\n            setTimeout(() => {\n                removeMessage(newMessage.id);\n            }, duration);\n        }\n        return id;\n    }, [removeMessage]);\n    return (React.createElement(ToastMessageContext.Provider, { value: { messages, removeMessage, removeAllMessages, addMessage } }, children));\n};\n//# sourceMappingURL=ToastMessageContext.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useContext } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { ToastMessageContext } from \"./ToastMessageContext.js\";\n/**\n * @internal\n */\nexport const useToastMessage = () => {\n    const { addMessage, removeMessage, removeAllMessages } = useContext(ToastMessageContext);\n    const intl = useIntl();\n    const addMessageBase = (type) => (message, options) => {\n        if (options === null || options === void 0 ? void 0 : options.values) {\n            return addMessage(Object.assign(Object.assign({}, options), { type, node: intl.formatMessage(message, options.values) }));\n        }\n        return addMessage(Object.assign(Object.assign({}, options), { type, text: intl.formatMessage(message) }));\n    };\n    const addSuccess = addMessageBase(\"success\");\n    const addProgress = addMessageBase(\"progress\");\n    const addWarning = addMessageBase(\"warning\");\n    const addError = addMessageBase(\"error\");\n    return {\n        addSuccess,\n        addProgress,\n        addWarning,\n        addError,\n        removeMessage,\n        removeAllMessages,\n    };\n};\n//# sourceMappingURL=useToastMessage.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { areObjRefsEqual, objRefToString } from \"@gooddata/sdk-model\";\nimport union from \"lodash/union.js\";\nimport filter from \"lodash/filter.js\";\nimport { selectWidgetsMap } from \"../layout/layoutSelectors.js\";\nimport { createMemoizedSelector } from \"../_infra/selectors.js\";\nimport { ObjRefMap } from \"../../../_staging/metadata/objRefMap.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.ui);\n/**\n * @alpha\n */\nexport const selectIsScheduleEmailDialogOpen = createSelector(selectSelf, (state) => state.scheduleEmailDialog.open);\n/**\n * @alpha\n */\nexport const selectScheduleEmailDialogDefaultAttachment = createSelector(selectSelf, (state) => { var _a; return (_a = state.scheduleEmailDialog.defaultAttachmentRef) !== null && _a !== void 0 ? _a : undefined; });\n/**\n * @alpha\n */\nexport const selectIsScheduleEmailManagementDialogOpen = createSelector(selectSelf, (state) => state.scheduleEmailManagementDialog.open);\n/**\n * @alpha\n */\nexport const selectIsSaveAsDialogOpen = createSelector(selectSelf, (state) => state.saveAsDialog.open);\n/**\n * @alpha\n */\nexport const selectIsShareDialogOpen = createSelector(selectSelf, (state) => state.shareDialog.open);\n/**\n * @internal\n */\nexport const selectIsDeleteDialogOpen = createSelector(selectSelf, (state) => state.deleteDialog.open);\n/**\n * @internal\n */\nexport const selectIsKpiDeleteDialogOpen = createSelector(selectSelf, (state) => !!state.kpiDeleteDialog.widgetCoordinates);\n/**\n * @internal\n */\nexport const selectIsCancelEditModeDialogOpen = createSelector(selectSelf, (state) => !!state.cancelEditModeDialog.open);\n/**\n * @internal\n */\nexport const selectKpiDeleteDialogWidgetCoordinates = createSelector(selectSelf, (state) => state.kpiDeleteDialog.widgetCoordinates);\n/**\n * @alpha\n */\nexport const selectFilterBarExpanded = createSelector(selectSelf, (state) => state.filterBar.expanded);\nconst selectHighlightedKpiWidgetRef = createSelector(selectSelf, (state) => state.kpiAlerts.highlightedWidgetRef);\nconst selectOpenedKpiWidgetRef = createSelector(selectSelf, (state) => { var _a; return (_a = state.kpiAlerts.openedWidgetRef) !== null && _a !== void 0 ? _a : undefined; });\n/**\n * @alpha\n */\nexport const selectIsKpiAlertOpenedByWidgetRef = createMemoizedSelector((ref) => {\n    return createSelector(selectWidgetsMap, selectOpenedKpiWidgetRef, (widgets, openedWidgetRef) => {\n        if (!ref) {\n            return false;\n        }\n        const openedWidget = openedWidgetRef && widgets.get(openedWidgetRef);\n        if (!openedWidget) {\n            return false;\n        }\n        const targetWidget = widgets.get(ref);\n        if (!targetWidget) {\n            return false;\n        }\n        return targetWidget.identifier === openedWidget.identifier;\n    });\n});\n/**\n * @alpha\n */\nexport const selectIsKpiAlertHighlightedByWidgetRef = createMemoizedSelector((ref) => {\n    return createSelector(selectWidgetsMap, selectHighlightedKpiWidgetRef, (widgets, highlightedWidgetRef) => {\n        if (!ref) {\n            return false;\n        }\n        const highlightedWidget = highlightedWidgetRef && widgets.get(highlightedWidgetRef);\n        if (!highlightedWidget) {\n            return false;\n        }\n        const targetWidget = widgets.get(ref);\n        if (!targetWidget) {\n            return false;\n        }\n        return targetWidget.identifier === highlightedWidget.identifier;\n    });\n});\n/**\n * @alpha\n */\nexport const selectMenuButtonItemsVisibility = createSelector(selectSelf, (state) => { var _a; return (_a = state.menuButton.itemsVisibility) !== null && _a !== void 0 ? _a : {}; });\n/**\n * @internal\n */\nexport const selectSelectedWidgetRef = createSelector(selectSelf, (state) => state.selectedWidgetRef);\n/**\n * @internal\n */\nexport const selectConfigurationPanelOpened = createSelector(selectSelf, (state) => state.configurationPanelOpened);\n/**\n * @internal\n */\nexport const selectWidgetDateDatasetAutoSelect = createSelector(selectSelf, (state) => state.widgetDateDatasetAutoSelect);\n/**\n * @internal\n */\nexport const selectInsightListLastUpdateRequested = createSelector(selectSelf, (state) => state.insightListLastUpdateRequested);\nconst selectWidgetsLoadingAdditionalData = createSelector(selectSelf, (state) => state.widgetsLoadingAdditionalData);\n/**\n * @internal\n */\nexport const selectIsWidgetLoadingAdditionalDataByWidgetRef = createMemoizedSelector((ref) => createSelector(selectWidgetsLoadingAdditionalData, (widgetsLoading) => {\n    return widgetsLoading.some((loadingRef) => areObjRefsEqual(loadingRef, ref));\n}));\n/**\n * @alpha\n */\nexport const selectIsFilterAttributeSelectionOpen = createSelector(selectSelf, (state) => state.filterAttributeSelectionOpen);\n/**\n * @alpha\n */\nexport const selectSelectedFilterIndex = createSelector(selectSelf, (state) => state.selectedFilterIndex);\n/**\n * @internal\n */\nexport const selectIsDraggingWidget = createSelector(selectSelf, (state) => state.draggingWidgetSource !== undefined);\n/**\n * @internal\n */\nexport const selectActiveSectionIndex = createSelector(selectSelf, (state) => state.activeSectionIndex);\n/**\n * @internal\n */\nexport const selectInvalidDrillWidgetRefs = createSelector(selectSelf, (state) => state.drillValidationMessages.invalidDrillWidgetRefs);\nconst selectInvalidCustomUrlDrillParameterWidgets = createSelector(selectSelf, (state) => state.drillValidationMessages.invalidCustomUrlDrillParameterWidgets);\n/**\n * @internal\n */\nexport const selectInvalidUrlDrillParameterWidgetRefs = createSelector(selectInvalidCustomUrlDrillParameterWidgets, (invalidCustomUrlDrillParameterWidgets) => invalidCustomUrlDrillParameterWidgets.map((i) => i.widgetRef));\n/**\n * @internal\n */\nexport const selectInvalidUrlDrillParameterWidgetWarnings = createSelector(selectInvalidCustomUrlDrillParameterWidgets, (invalidCustomUrlDrillParameterWidgets) => invalidCustomUrlDrillParameterWidgets.filter((item) => item.showMessage).map((i) => i.widgetRef));\nconst selectInvalidUrlDrillParameterWidgetsMap = createSelector(selectInvalidCustomUrlDrillParameterWidgets, (invalidCustomUrlDrillParameterWidgets) => new ObjRefMap({\n    idExtract: (i) => i.widgetId,\n    refExtract: (i) => i.widgetRef,\n    uriExtract: (i) => i.widgetUri,\n    strictTypeCheck: false,\n}).fromItems(invalidCustomUrlDrillParameterWidgets));\n/**\n * @internal\n */\nexport const selectInvalidUrlDrillParameterDrillLocalIdsByWidgetRef = createMemoizedSelector((ref) => createSelector(selectInvalidUrlDrillParameterWidgetsMap, (invalidParameterWidgetsMap) => { var _a, _b; return (_b = (_a = invalidParameterWidgetsMap.get(ref)) === null || _a === void 0 ? void 0 : _a.drillsWithInvalidParametersLocalIds) !== null && _b !== void 0 ? _b : []; }));\n/**\n * @internal\n */\nexport const selectDraggingWidgetSource = createSelector(selectSelf, (state) => state.draggingWidgetSource);\n/**\n * @internal\n */\nexport const selectDraggingWidgetTarget = createSelector(selectSelf, (state) => state.draggingWidgetTarget);\n/**\n * @internal\n */\nexport const selectWidgetsOverlay = createSelector(selectSelf, (state) => state.widgetsOverlay);\n/**\n * @internal\n */\nexport const selectWidgetsOverlayState = createMemoizedSelector((refs) => createSelector(selectWidgetsOverlay, (overlay) => {\n    return refs.every((ref) => {\n        var _a, _b;\n        return (_b = (ref && ((_a = overlay[objRefToString(ref)]) === null || _a === void 0 ? void 0 : _a.showOverlay))) !== null && _b !== void 0 ? _b : false;\n    });\n}));\n/**\n * @internal\n */\nexport const selectWidgetsModification = createMemoizedSelector((refs) => createSelector(selectWidgetsOverlay, (overlay) => {\n    return refs.reduce((modification, ref) => {\n        const item = ref && overlay[objRefToString(ref)];\n        if (item === null || item === void 0 ? void 0 : item.modification) {\n            return union(modification, [item.modification]);\n        }\n        return modification;\n    }, []);\n}));\n/**\n * @internal\n */\nexport const selectSectionModification = createMemoizedSelector((refs) => createSelector(selectWidgetsOverlay, (overlay) => {\n    const modifications = refs.map((ref) => {\n        const item = ref && overlay[objRefToString(ref)];\n        return item === null || item === void 0 ? void 0 : item.modification;\n    });\n    const inserted = filter(modifications, (a) => a === \"insertedByPlugin\");\n    const modified = filter(modifications, (a) => a === \"modifiedByPlugin\");\n    return [\n        ...(inserted.length === refs.length ? [\"insertedByPlugin\"] : []),\n        ...(modified.length === refs.length ? [\"modifiedByPlugin\"] : []),\n    ];\n}));\n/**\n * @internal\n */\nexport const selectIsSectionInsertedByPlugin = createMemoizedSelector((refs) => createSelector(selectSectionModification(refs), \n// When all the widgets in the section were inserted by the plugin,\n// the section was added by the plugin as well (empty section(s) cannot be added)\n(modifications) => modifications.length > 0 && modifications.every((m) => m === \"insertedByPlugin\")));\n//# sourceMappingURL=uiSelectors.js.map","// (C) 2019-2023 GoodData Corporation\nimport { defineMessages } from \"react-intl\";\nexport const messages = defineMessages({\n    messagesDashboardSaveSuccess: { id: \"messages.dashboardSaveSuccess\" },\n    messagesDashboardSaveFailed: { id: \"messages.dashboardSaveFailed\" },\n    messagesExportResultStart: { id: \"messages.exportResultStart\" },\n    messagesExportResultSuccess: { id: \"messages.exportResultSuccess\" },\n    messagesExportResultRestrictedError: { id: \"messages.exportResultRestrictedError\" },\n    messagesExportResultError: { id: \"messages.exportResultError\" },\n    messagesSharingChangedSuccess: { id: \"messages.sharingChangedSuccess\" },\n    messagesSharingChangedError: { id: \"messages.sharingChangedError.general\" },\n    messagesSharingDialogError: { id: \"messages.sharingDialogError.general\" },\n    scheduleEmailSubmitError: { id: \"dialogs.schedule.email.submit.error\" },\n    scheduleEmailSubmitSuccess: { id: \"dialogs.schedule.email.submit.success\" },\n    scheduleEmailSaveError: { id: \"dialogs.schedule.email.save.error\" },\n    scheduleEmailSaveSuccess: { id: \"dialogs.schedule.email.save.success\" },\n    scheduleEmailDeleteSuccess: { id: \"dialogs.schedule.email.delete.success\" },\n    scheduleManagementLoadError: { id: \"dialogs.schedule.management.load.error\" },\n    scheduleManagementDeleteError: { id: \"dialogs.schedule.management.delete.error\" },\n    scheduleManagementTabUser: { id: \"dialogs.schedule.management.tab.user\" },\n    scheduleManagementTabAll: { id: \"dialogs.schedule.management.tab.all\" },\n    scheduleManagementNoSchedules: { id: \"dialogs.schedule.management.noSchedules\" },\n    scheduleManagementNoSchedulesByUser: { id: \"dialogs.schedule.management.noSchedules.byUser\" },\n    saveAsNewAlertsAndEmailsMessage: { id: \"dialogs.save.as.new.alertsAndEmailsMessage\" },\n    saveAsNewAlertsMessage: { id: \"dialogs.save.as.new.alertsMessage\" },\n    saveAsNewEmailsMessage: { id: \"dialogs.save.as.new.emailsMessage\" },\n    alertMessageRelativePresetInPeriod: { id: \"filters.alertMessage.relativePreset.inPeriod\" },\n    alertMessageRelativePreset: { id: \"filters.alertMessage.relativePreset\" },\n    scheduleEmailOptionRecepientInvalid: { id: \"options.menu.schedule.email.recipient.invalid\" },\n    scheduleEmailOptionRecepientExternalNotAllowed: {\n        id: \"options.menu.schedule.email.recipient.external.not.allowed\",\n    },\n    tabsMy: { id: \"gs.visualizationsList.tabs.my\" },\n    tabsAll: { id: \"gs.visualizationsList.tabs.all\" },\n    controlButtonsSaveValue: { id: \"controlButtons.save.value\" },\n    controlButtonsSaveAndPublishValue: { id: \"controlButtons.saveAndPublish.value\" },\n    controlButtonsSaveAndPublishTitle: { id: \"controlButtons.saveAndPublish.title\" },\n    controlButtonsSaveAsPrivateTitle: { id: \"controlButtons.saveAsPrivate.title\" },\n    controlButtonsSaveAndPublishNoChanges: { id: \"controlButtons.saveAndPublish.disable.noChanges.title\" },\n    controlButtonsSaveAndPublishEmpty: { id: \"controlButtons.saveAndPublish.disable.empty.title\" },\n    scheduleDialogEmailRepeats_custom: { id: \"dialogs.schedule.email.repeats.types.custom\" },\n    scheduleDialogEmailRepeats_daily: { id: \"dialogs.schedule.email.repeats.types.daily\" },\n    scheduleDialogEmailRepeats_monthly: { id: \"dialogs.schedule.email.repeats.types.monthly\" },\n    scheduleDialogEmailRepeats_weekly: { id: \"dialogs.schedule.email.repeats.types.weekly\" },\n    scheduleDialogEmailRepeatsExecuteOn_dayOfMonth: {\n        id: \"dialogs.schedule.email.repeats.execute.on.dayOfMonth\",\n    },\n    scheduleDialogEmailRepeatsExecuteOn_dayOfWeek: {\n        id: \"dialogs.schedule.email.repeats.execute.on.dayOfWeek\",\n    },\n    scheduleDialogEmailRepeatsFrequencies_day: { id: \"dialogs.schedule.email.repeats.frequencies.day\" },\n    scheduleDialogEmailRepeatsFrequencies_month: { id: \"dialogs.schedule.email.repeats.frequencies.month\" },\n    scheduleDialogEmailRepeatsFrequencies_week: { id: \"dialogs.schedule.email.repeats.frequencies.week\" },\n});\n//# sourceMappingURL=locales.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport { useToastMessage } from \"@gooddata/sdk-ui-kit\";\nimport { useDashboardDispatch, useDashboardSelector } from \"./DashboardStoreProvider.js\";\nimport { selectCanCreateScheduledMail, selectDashboardRef, selectEnableInsightExportScheduling, selectEnableKPIDashboardSchedule, selectIsInViewMode, selectIsReadOnly, selectIsScheduleEmailDialogOpen, selectIsScheduleEmailManagementDialogOpen, selectMenuButtonItemsVisibility, uiActions, } from \"../store/index.js\";\nimport { messages } from \"../../locales.js\";\n/**\n * Hook that handles schedule emailing dialogs.\n *\n * @alpha\n */\nexport const useDashboardScheduledEmails = () => {\n    var _a;\n    const { addSuccess, addError } = useToastMessage();\n    const isScheduleEmailingDialogOpen = useDashboardSelector(selectIsScheduleEmailDialogOpen);\n    const isScheduleEmailingManagementDialogOpen = useDashboardSelector(selectIsScheduleEmailManagementDialogOpen);\n    const dispatch = useDashboardDispatch();\n    const dashboardRef = useDashboardSelector(selectDashboardRef);\n    const enableInsightExportScheduling = useDashboardSelector(selectEnableInsightExportScheduling);\n    const isReadOnly = useDashboardSelector(selectIsReadOnly);\n    const isInViewMode = useDashboardSelector(selectIsInViewMode);\n    const canCreateScheduledMail = useDashboardSelector(selectCanCreateScheduledMail);\n    const isScheduledEmailingEnabled = useDashboardSelector(selectEnableKPIDashboardSchedule);\n    const menuButtonItemsVisibility = useDashboardSelector(selectMenuButtonItemsVisibility);\n    const openScheduleEmailingDialog = () => dispatch(uiActions.openScheduleEmailDialog());\n    const closeScheduleEmailingDialog = () => dispatch(uiActions.closeScheduleEmailDialog());\n    const openScheduleEmailingManagementDialog = () => enableInsightExportScheduling && dispatch(uiActions.openScheduleEmailManagementDialog());\n    const closeScheduleEmailingManagementDialog = () => enableInsightExportScheduling && dispatch(uiActions.closeScheduleEmailManagementDialog());\n    const setScheduledEmailDefaultAttachment = (attachmentRef) => enableInsightExportScheduling &&\n        dispatch(uiActions.setScheduleEmailDialogDefaultAttachment(attachmentRef));\n    const resetScheduledEmailDefaultAttachment = () => enableInsightExportScheduling && dispatch(uiActions.resetScheduleEmailDialogDefaultAttachment());\n    const [scheduledEmailToEdit, setScheduledEmailToEdit] = useState();\n    const [users, setUsers] = useState([]);\n    const isScheduledEmailingVisible = isInViewMode &&\n        !isReadOnly &&\n        canCreateScheduledMail &&\n        isScheduledEmailingEnabled &&\n        ((_a = menuButtonItemsVisibility.scheduleEmailButton) !== null && _a !== void 0 ? _a : true);\n    /*\n     * exports and scheduling are not available when rendering a dashboard that is not persisted.\n     * this can happen when a new dashboard is created and is being edited.\n     *\n     * the setup of menu items available in the menu needs to reflect this.\n     */\n    const defaultOnScheduleEmailing = useCallback(() => {\n        if (!dashboardRef) {\n            return;\n        }\n        if (enableInsightExportScheduling) {\n            openScheduleEmailingManagementDialog();\n        }\n        else {\n            openScheduleEmailingDialog();\n        }\n    }, [dashboardRef, enableInsightExportScheduling]);\n    const onScheduleEmailingOpen = useCallback((attachmentRef) => {\n        openScheduleEmailingDialog();\n        attachmentRef && setScheduledEmailDefaultAttachment(attachmentRef);\n    }, []);\n    const onScheduleEmailingCreateError = useCallback(() => {\n        closeScheduleEmailingDialog();\n        addError(messages.scheduleEmailSubmitError);\n    }, []);\n    const onScheduleEmailingCreateSuccess = useCallback(() => {\n        closeScheduleEmailingDialog();\n        addSuccess(messages.scheduleEmailSubmitSuccess);\n        resetScheduledEmailDefaultAttachment();\n    }, []);\n    const onScheduleEmailingSaveError = useCallback(() => {\n        closeScheduleEmailingDialog();\n        addError(messages.scheduleEmailSaveError);\n        setScheduledEmailToEdit(undefined);\n    }, []);\n    const onScheduleEmailingSaveSuccess = useCallback(() => {\n        closeScheduleEmailingDialog();\n        openScheduleEmailingManagementDialog();\n        addSuccess(messages.scheduleEmailSaveSuccess);\n        setScheduledEmailToEdit(undefined);\n    }, []);\n    const onScheduleEmailingCancel = useCallback(() => {\n        closeScheduleEmailingDialog();\n        openScheduleEmailingManagementDialog();\n        resetScheduledEmailDefaultAttachment();\n        setScheduledEmailToEdit(undefined);\n    }, []);\n    const onScheduleEmailingManagementDeleteSuccess = useCallback(() => {\n        addSuccess(messages.scheduleEmailDeleteSuccess);\n    }, []);\n    const onScheduleEmailingManagementAdd = useCallback(() => {\n        closeScheduleEmailingManagementDialog();\n        openScheduleEmailingDialog();\n    }, []);\n    const onScheduleEmailingManagementEdit = useCallback((schedule, users) => {\n        closeScheduleEmailingManagementDialog();\n        setScheduledEmailToEdit(schedule);\n        setUsers(users);\n        openScheduleEmailingDialog();\n    }, []);\n    const onScheduleEmailingManagementClose = useCallback(() => {\n        closeScheduleEmailingManagementDialog();\n    }, []);\n    const onScheduleEmailingManagementLoadingError = useCallback(() => {\n        closeScheduleEmailingManagementDialog();\n        addError(messages.scheduleManagementLoadError);\n    }, []);\n    const onScheduleEmailingManagementDeleteError = useCallback(() => {\n        closeScheduleEmailingManagementDialog();\n        addError(messages.scheduleManagementDeleteError);\n    }, []);\n    return {\n        isScheduledEmailingVisible,\n        enableInsightExportScheduling,\n        defaultOnScheduleEmailing,\n        isScheduleEmailingDialogOpen,\n        isScheduleEmailingManagementDialogOpen,\n        onScheduleEmailingOpen,\n        onScheduleEmailingManagementEdit,\n        scheduledEmailToEdit,\n        users,\n        onScheduleEmailingCancel,\n        onScheduleEmailingCreateError,\n        onScheduleEmailingCreateSuccess,\n        onScheduleEmailingSaveError,\n        onScheduleEmailingSaveSuccess,\n        onScheduleEmailingManagementAdd,\n        onScheduleEmailingManagementClose,\n        onScheduleEmailingManagementLoadingError,\n        onScheduleEmailingManagementDeleteSuccess,\n        onScheduleEmailingManagementDeleteError,\n    };\n};\n//# sourceMappingURL=useDashboardScheduledEmails.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { useDashboardDispatch, useDashboardSelector } from \"./DashboardStoreProvider.js\";\nimport { selectConfigurationPanelOpened, selectIsInEditMode, selectSelectedWidgetRef, uiActions, } from \"../store/index.js\";\n/**\n * @internal\n */\nexport function useWidgetSelection(widgetRef) {\n    const dispatch = useDashboardDispatch();\n    const isConfigPanelOpen = useDashboardSelector(selectConfigurationPanelOpened);\n    const isSelectable = useDashboardSelector(selectIsInEditMode);\n    const selectedWidget = useDashboardSelector(selectSelectedWidgetRef);\n    const isSelected = Boolean(isSelectable && selectedWidget && widgetRef && areObjRefsEqual(selectedWidget, widgetRef));\n    const closeConfigPanel = useCallback(() => {\n        dispatch(uiActions.setConfigurationPanelOpened(false));\n    }, [dispatch]);\n    const onSelected = useCallback((e) => {\n        if (e) {\n            /**\n             * Do not stop propagation, just mark event as processed here so that in case come other element\n             * up the tree uses the deselectWidgets function. Without this mark such element would immediately\n             * deselect the widget we just selected with the same click.\n             */\n            e.processedDuringWidgetSelect = true;\n        }\n        if (isSelectable && widgetRef) {\n            dispatch(uiActions.selectWidget(widgetRef));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n        }\n    }, [isSelectable, widgetRef, dispatch]);\n    const deselectWidgets = useCallback((e) => {\n        if (!(e === null || e === void 0 ? void 0 : e.processedDuringWidgetSelect) && selectedWidget) {\n            dispatch(uiActions.clearWidgetSelection());\n        }\n    }, [dispatch, selectedWidget]);\n    return {\n        isSelectable,\n        isSelected,\n        onSelected,\n        hasConfigPanelOpen: isConfigPanelOpen && isSelected,\n        closeConfigPanel,\n        deselectWidgets,\n    };\n}\n//# sourceMappingURL=useWidgetSelection.js.map","// (C) 2021-2023 GoodData Corporation\nimport { absoluteDateFilterValues, filterAttributeElements, isAllTimeDateFilter, isPositiveAttributeFilter, isRelativeDateFilter, relativeDateFilterValues, } from \"@gooddata/sdk-model\";\n/**\n * Creates the ChangeDateFilterSelection command.\n *\n * @remarks\n * Dispatching this command will result in change of dashboard's date filter, or error in case of invalid\n * update (e.g. hidden date filter option by dateFilterConfig).\n *\n * @param type - date filter type; absolute filters use exact start and end dates, while relative filters use offsets from today\n * @param granularity - granularity on which the filter works; days, weeks, months, quarters or years.\n * @param from - start date; if not specified, then the start date will be unbounded\n * @param to - end date; if not specified, then the end date will be unbounded\n * @param dateFilterOptionLocalId - localId of the {@link @gooddata/sdk-backend-spi#IDateFilterOption} selected\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @see {@link ChangeDateFilterSelection} for a more complete description of the different parameters\n *\n * @public\n */\nexport function changeDateFilterSelection(type, granularity, from, to, dateFilterOptionLocalId, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.DATE_FILTER.CHANGE_SELECTION\",\n        correlationId,\n        payload: {\n            type,\n            granularity,\n            from,\n            to,\n            dateFilterOptionLocalId,\n        },\n    };\n}\n/**\n * Creates the ChangeDateFilterSelection command.\n *\n * @remarks\n * Dispatching this command will result in change of dashboard's date filter, or error in case of invalid\n * update (e.g. hidden date filter option by dateFilterConfig).\n *\n * All parameters for {@link ChangeDateFilterSelection} command is derived from the provided date filter.\n *\n * See {@link ChangeDateFilterSelection} for a more complete description of the different parameters\n *\n * @param filter - date filter to apply\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @public\n */\nexport function applyDateFilter(filter, correlationId) {\n    if (isAllTimeDateFilter(filter)) {\n        return clearDateFilterSelection(correlationId);\n    }\n    if (isRelativeDateFilter(filter)) {\n        const values = relativeDateFilterValues(filter);\n        return changeDateFilterSelection(\"relative\", values.granularity, values.from, values.to, undefined, correlationId);\n    }\n    else {\n        const values = absoluteDateFilterValues(filter);\n        return changeDateFilterSelection(\"absolute\", \"GDC.time.date\", values.from, values.to, undefined, correlationId);\n    }\n}\n/**\n * This convenience function will create ChangeDateFilterSelection configured so that the date filter will be\n * unbounded - showing data for 'All Time'.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @public\n */\nexport function clearDateFilterSelection(correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.DATE_FILTER.CHANGE_SELECTION\",\n        correlationId,\n        payload: {\n            type: \"relative\",\n            granularity: \"GDC.time.date\",\n        },\n    };\n}\n/**\n * Creates the AddAttributeFilter command. Dispatching this command will result in the addition\n * of another attribute filter to the dashboard's filter bar, at desired position,\n * or error in case of invalid update (e.g. wrong or duplicated displayForm)\n *\n * The filter will be set for the display form provided by reference. When created, the filter will be\n * no-op - all the elements will be selected.\n *\n * @param displayForm - specify attribute display form which will be used for filtering\n * @param index - specify index among the attribute filters at which the new filter should be placed.\n *  The index starts at zero and there is convenience that index of -1 would add the filter at the end.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing.\n * @param selectionMode - single or multi value selection mode of the filter.\n * @beta\n */\nexport function addAttributeFilter(displayForm, index, correlationId, selectionMode) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.ADD\",\n        correlationId,\n        payload: {\n            displayForm,\n            index,\n            selectionMode,\n        },\n    };\n}\n/**\n * Creates the RemoveAttributeFilters command. Dispatching this command will result in the removal\n * of dashboard's attribute filter with the provided local identifier.\n *\n * @param filterLocalId - dashboard attribute filter's local identifier\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @beta\n */\nexport function removeAttributeFilter(filterLocalId, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.REMOVE\",\n        correlationId,\n        payload: {\n            filterLocalIds: [filterLocalId],\n        },\n    };\n}\n/**\n * Creates the RemoveAttributeFilters command. Dispatching this command will result in the removal\n * of dashboard's attribute filters with the provided local identifiers.\n *\n * @param filterLocalIds - an array of dashboard attribute filter's local identifiers\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @beta\n */\nexport function removeAttributeFilters(filterLocalIds, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.REMOVE\",\n        correlationId,\n        payload: {\n            filterLocalIds,\n        },\n    };\n}\n/**\n * Creates the MoveAttributeFilter command. Dispatching this command will result in move of the dashboard attribute\n * filter with the provided local id to a new spot. The new spot is defined by index. For convenience the index\n * of -1 means move to the end of the attribute filter list.\n *\n * @param filterLocalId - dashboard filter's local identifier\n * @param index - specify index among the attribute filters at which the new filter should be placed.\n *  The index starts at zero and there is convenience that index of -1 would add the filter at the end.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function moveAttributeFilter(filterLocalId, index, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.MOVE\",\n        correlationId,\n        payload: {\n            filterLocalId,\n            index,\n        },\n    };\n}\n/**\n * Creates the ChangeAttributeFilterSelection command.\n *\n * @remarks\n * Dispatching this command will result in application of element selection for the dashboard attribute filter\n * with the provided id, or error in case of invalid update (e.g. non-existing filterLocalId).\n *\n * The attribute elements can be provided either using their URI (primary key) or value. Together with the\n * elements you must indicate the selection type - either 'IN' or 'NOT_IN'.\n *\n * @remarks see {@link resetAttributeFilterSelection} for convenience function to select all attribute elements of\n *  particular filter.\n *\n * See also {@link applyAttributeFilter} for convenient function when you have an {@link @gooddata/sdk-model#IAttributeFilter} instance.\n *\n *  @example\n * ```\n * const selectionType = isPositiveAttributeFilter ? \"IN\" : \"NOT_IN\";\n * ```\n *\n * To create this command without a need to calculate the payload values from a {@link @gooddata/sdk-model#IFilter} object,\n * we recommend to use {@link applyAttributeFilter} command creator instead.\n *\n * @param filterLocalId - dashboard attribute filter's local id\n * @param elements - elements\n * @param selectionType - selection type. either 'IN' or 'NOT_IN'\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @public\n */\nexport function changeAttributeFilterSelection(filterLocalId, elements, selectionType, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.CHANGE_SELECTION\",\n        correlationId,\n        payload: {\n            filterLocalId,\n            elements,\n            selectionType,\n        },\n    };\n}\n/**\n * Creates the ChangeAttributeFilterSelection command.\n *\n * @remarks\n * Dispatching this command will result in application of element selection for the dashboard attribute filter\n * with the provided id, or error in case of invalid update (e.g. non-existing `filterLocalId`).\n *\n * The {@link ChangeAttributeFilterSelectionPayload}'s `selectionType` and `elements` are derived from the\n * provided attribute filter.\n *\n * To convert {@link IDashboardFilter} to {@link @gooddata/sdk-model#IFilter} use {@link dashboardAttributeFilterToAttributeFilter}.\n * Converted filter can be used within the command's payload.\n *\n * @param filterLocalId - dashboard attribute filter's local id\n * @param filter - attribute filter to apply\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @public\n */\nexport function applyAttributeFilter(filterLocalId, filter, correlationId) {\n    return changeAttributeFilterSelection(filterLocalId, filterAttributeElements(filter), isPositiveAttributeFilter(filter) ? \"IN\" : \"NOT_IN\", correlationId);\n}\n/**\n * A convenience function that will create ChangeAttributeFilterSelection command that will select all\n * elements of the dashboard attribute filter with the provided local id.\n *\n * @remarks\n * This is same as creating the ChangeAttributeFilterSelection command with empty elements and NOT_IN selection type.\n *\n * @param filterLocalId - dashboard attribute filter's local id\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @public\n */\nexport function resetAttributeFilterSelection(filterLocalId, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.CHANGE_SELECTION\",\n        correlationId,\n        payload: {\n            filterLocalId,\n            elements: { uris: [] },\n            selectionType: \"NOT_IN\",\n        },\n    };\n}\n/**\n * Creates the SetAttributeFilterParents command. Dispatching this command will result in setting a parent-child\n * relationship between two or more dashboard attribute filters.\n *\n * When an attribute filter has a parent set up, the attribute elements that will be available in the child\n * filter will be influenced by the selection in the parent. The child filter will show only those elements\n * for which a link exists to the selected elements in the parent.\n *\n * Take for example a model where there are continent and country attributes. You add continent and\n * country as filters onto a dashboard and establish parent-child relationship between them. When users select\n * some continents in the filter, the country filter will only show elements for countries on the selected\n * contents.\n *\n * @param filterLocalId - local id of filter that will be a child in the relationship\n * @param parentFilters - definition of the relationship to parent, this contains local id of the parent filter and\n *  one or more 'over' attributes. The 'over' attributes will be included when querying\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function setAttributeFilterParents(filterLocalId, parentFilters, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_PARENTS\",\n        correlationId,\n        payload: {\n            filterLocalId,\n            parentFilters: parentFilters,\n        },\n    };\n}\n/**\n * Creates the {@link ChangeFilterContextSelection} command.\n *\n * @remarks\n * Dispatching this command will result into setting provided dashboard filters to the current dashboard filter context.\n *\n * Only filters that are stored in the filter context can be applied (filters that are visible in the filter bar).\n * Filters will be matched via display form ref, duplicities will be omitted.\n * Date filter that does not match any visible option by the current date filter config will be also omitted.\n *\n * @public\n * @param filters - attribute filters and date filter to apply.\n * @param resetOthers - If true, filters not mentioned in the payload will be reset to All items selected/All time. Defaults to false.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns change filter selection command\n */\nexport function changeFilterContextSelection(filters, resetOthers = false, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.CHANGE_SELECTION\",\n        correlationId,\n        payload: {\n            filters,\n            resetOthers,\n        },\n    };\n}\n/**\n * Creates the {@link SetAttributeFilterDisplayForm} command.\n *\n * @remarks\n * Dispatching the commands will result into setting provided display form as a selected\n * display form for the attribute filter.\n *\n *\n * @beta\n * @param filterLocalId - local identifier of the filter the display form is changed for\n * @param displayForm - newly selected display form\n * @returns change filter display form command\n */\nexport function setAttributeFilterDisplayForm(filterLocalId, displayForm) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_DISPLAY_FORM\",\n        payload: {\n            filterLocalId,\n            displayForm,\n        },\n    };\n}\n/**\n * Creates the {@link SetAttributeFilterTitle} command.\n *\n * @remarks\n * Dispatching the commands will result into setting provided title as a selected\n * title for the attribute filter.\n *\n *\n * @beta\n * @param filterLocalId - local identifier of the filter the display form is changed for\n * @param title - newly added title\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns change filter title command\n */\nexport function setAttributeFilterTitle(filterLocalId, title, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_TITLE\",\n        correlationId,\n        payload: {\n            filterLocalId,\n            title,\n        },\n    };\n}\n/**\n * Creates the {@link SetAttributeFilterSelectionMode} command.\n *\n * @remarks\n * Dispatching the commands will result into setting provided selection mode as a selected\n * selection mode for the attribute filter.\n *\n *\n * @beta\n * @param filterLocalId - local identifier of the filter the selection mode is changed for\n * @param selectionMode - newly selected selection mode\n * @returns change filter selection mode command\n */\nexport function setAttributeFilterSelectionMode(filterLocalId, selectionMode) {\n    return {\n        type: \"GDC.DASH/CMD.FILTER_CONTEXT.ATTRIBUTE_FILTER.SET_SELECTION_MODE\",\n        payload: {\n            filterLocalId,\n            selectionMode,\n        },\n    };\n}\n//# sourceMappingURL=filters.js.map","// (C) 2021-2023 GoodData Corporation\n/**\n * Creates the AddLayoutSection command.\n *\n * @remarks\n * Dispatching this command will result in the addition of a new layout section.\n * The new section will be placed at the desired index and will be empty by default.\n *\n * You may optionally specify the initial values of the section header and the items that will be in the new section.\n *\n * @param index - index to place the section at; -1 can be used as convenience to append a new section\n * @param initialHeader - specify specify header for the newly created section\n * @param initialItems - specify one or more items that the newly created section should include from the get-go\n * @param autoResolveDateFilterDataset - specify whether dashboard should auto-resolve date dataset to use for date filtering of KPI\n *  and insight widgets; default is disabled meaning date filtering will be enabled only for those KPI or Insight widgets\n *  that already specify dateDataset.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function addLayoutSection(index, initialHeader, initialItems, autoResolveDateFilterDataset, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.ADD_SECTION\",\n        correlationId,\n        payload: {\n            index,\n            initialHeader,\n            initialItems,\n            autoResolveDateFilterDataset,\n        },\n    };\n}\n/**\n * Creates the MoveLayoutSection command. Dispatching this command will result in move of the section located at `sectionIndex`\n * to a new place indicated by `toIndex`.\n *\n * @param sectionIndex - index of section to move\n * @param toIndex - the new index for the section\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function moveLayoutSection(sectionIndex, toIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_SECTION\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            toIndex,\n        },\n    };\n}\n/**\n * Creates the RemoveLayoutSection command.\n *\n * @remarks\n * Dispatching this command will result in removal of the entire dashboard\n * section. You can optionally specify that the items in the section should not be physically removed but instead be\n * stashed for later 'resurrection'.\n *\n * @param index - index of section to remove\n * @param stashIdentifier - specify identifier to stash items under; if you do not specify this, then the dashboard items in the removed section will also be removed\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function removeLayoutSection(index, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_SECTION\",\n        correlationId,\n        payload: {\n            index,\n            stashIdentifier,\n        },\n    };\n}\n/**\n * Creates the ChangeLayoutSectionHeader command.\n *\n * @remarks\n * Dispatching this command will result in change of the section's title and/or description.\n *\n * @param index - index of section to change\n * @param header - new header\n * @param merge - indicates whether the old header and the new header should be merged; default is no merging\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeLayoutSectionHeader(index, header, merge, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.CHANGE_SECTION_HEADER\",\n        correlationId,\n        payload: {\n            index,\n            header,\n            merge,\n        },\n    };\n}\n/**\n * Creates the AddSectionItems command.\n *\n * @remarks\n * Dispatching this command will result in addition of a new item into the existing\n * section. This item may be a placeholder for KPI or insight, an actual dashboard widget or a previously stashed\n * dashboard item.\n *\n *\n * @param sectionIndex - index of section to which the new item should be added\n * @param itemIndex - index at which to insert the new item\n * @param item - definition of the new item.\n * @param autoResolveDateFilterDataset - specify whether dashboard should auto-resolve date dataset to use for date filtering of KPI\n *  and insight widgets; default is disabled meaning date filtering will be enabled only for those KPI or Insight widgets\n *  that already specify dateDataset.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function addSectionItem(sectionIndex, itemIndex, item, autoResolveDateFilterDataset, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.ADD_ITEMS\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            items: [item],\n            autoResolveDateFilterDataset,\n        },\n    };\n}\n/**\n * Creates the ReplaceSectionItem command. Dispatching this command will result in replacement of particular dashboard\n * item with a new item. By default the old item will be discarded, however you may specify to stash it for later use.\n *\n * @param sectionIndex - index of section where the item to replace resides\n * @param itemIndex - index of item within the section\n * @param item - new item definition\n * @param stashIdentifier - specify identifier of stash where the old item should be stored\n * @param autoResolveDateFilterDataset - specify whether dashboard should auto-resolve date dataset\n *  to use for date filtering of KPI or insight widget that is replacing the existing item; default is disabled\n *  meaning date filtering will be enabled only for those KPI or Insight widgets that already specify dateDataset.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function replaceSectionItem(sectionIndex, itemIndex, item, stashIdentifier, autoResolveDateFilterDataset, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.REPLACE_ITEM\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            item,\n            autoResolveDateFilterDataset,\n            stashIdentifier,\n        },\n    };\n}\n/**\n * Creates the MoveSectionItem command.\n *\n * @remarks\n * Dispatching this command will result in move of single item within\n * section or from one section to another.\n *\n * @param sectionIndex - source section index\n * @param itemIndex - index of item to move\n * @param toSectionIndex - target section index; you may specify -1 to move to last section\n * @param toItemIndex - index within target section where the item should be inserted; you may specify -1 to append\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function moveSectionItem(sectionIndex, itemIndex, toSectionIndex, toItemIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_ITEM\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            toSectionIndex,\n            toItemIndex,\n            removeOriginalSectionIfEmpty: false,\n        },\n    };\n}\n/**\n * Creates the MoveSectionItem command.\n *\n * @remarks\n * Dispatching this command will result in move of single item within\n * section or from one section to another. If original section stays empty after move, then it will be removed.\n *\n * @param sectionIndex - source section index\n * @param itemIndex - index of item to move\n * @param toSectionIndex - target section index; you may specify -1 to move to last section\n * @param toItemIndex - index within target section where the item should be inserted; you may specify -1 to append\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function moveSectionItemAndRemoveOriginalSectionIfEmpty(sectionIndex, itemIndex, toSectionIndex, toItemIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_ITEM\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            toSectionIndex,\n            toItemIndex,\n            removeOriginalSectionIfEmpty: true,\n        },\n    };\n}\n/**\n * Creates the MoveSectionItemToNewSection command.\n *\n * @remarks\n * Dispatching this command will result in move of single item within\n * section or from one section to another.\n *\n * @param sectionIndex - source section index\n * @param itemIndex - index of item to move\n * @param toSectionIndex - target section index; you may specify -1 to move to last section\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function moveSectionItemToNewSection(sectionIndex, itemIndex, toSectionIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_ITEM_TO_NEW_SECTION\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            toSectionIndex,\n            removeOriginalSectionIfEmpty: false,\n        },\n    };\n}\n/**\n * Creates the MoveSectionItemToNewSection command.\n *\n * @remarks\n * Dispatching this command will result in move of single item within\n * section or from one section to another. If original section stays empty after move, then it will be removed.\n *\n * @param sectionIndex - source section index\n * @param itemIndex - index of item to move\n * @param toSectionIndex - target section index; you may specify -1 to move to last section\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function moveSectionItemToNewSectionAndRemoveOriginalSectionIfEmpty(sectionIndex, itemIndex, toSectionIndex, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.MOVE_ITEM_TO_NEW_SECTION\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            toSectionIndex,\n            removeOriginalSectionIfEmpty: true,\n        },\n    };\n}\n/**\n * Creates the RemoveSectionItem command.\n *\n * @remarks\n * Dispatching this command will result in removal\n * of the item from a section. If the removed item was last in the section, the section will be left on the layout\n * and will contain no items.\n *\n * You may optionally specify the stashIdentifier in order to stash the removed item for later resurrection.\n *\n * @param sectionIndex - index of section from which to remove the item\n * @param itemIndex - index of item to remove\n * @param stashIdentifier - stash identifier to store the removed item under; if not specified the item will be removed\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function removeSectionItem(sectionIndex, itemIndex, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_ITEM\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            stashIdentifier,\n            eager: false,\n        },\n    };\n}\n/**\n * Creates the RemoveSectionItem configured to do eager remove of item.\n *\n * @remarks\n * Dispatching this command will result in removal\n * of the item from a section and if the section only contains that item then the whole section will be removed as well.\n *\n * You may optionally specify the stashIdentifier in order to stash the removed item for later resurrection.\n *\n * @param sectionIndex - index of section from which to remove the item\n * @param itemIndex - index of item to remove\n * @param stashIdentifier - stash identifier to store the removed item under; if not specified the item will be removed\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function eagerRemoveSectionItem(sectionIndex, itemIndex, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_ITEM\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            stashIdentifier,\n            eager: true,\n        },\n    };\n}\n/**\n * Creates the RemoveSectionItemByWidgetRef command.\n *\n * @remarks\n * Dispatching this command will result in removal\n * of the item from a section. If the removed item was last in the section, the section will be left on the layout\n * and will contain no items.\n *\n * @param widgetRef - widget reference of the item to remove;\n * @param stashIdentifier - stash identifier to store the removed item under; if not specified the item will be removed\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function removeSectionItemByWidgetRef(widgetRef, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_ITEM_BY_WIDGET_REF\",\n        correlationId,\n        payload: {\n            widgetRef,\n            stashIdentifier,\n            eager: false,\n        },\n    };\n}\n/**\n * Creates the RemoveSectionItemByWidgetRef configured to do eager remove of item.\n *\n * @remarks\n * Dispatching this command will result in removal\n * of the item from a section and if the section only contains that item then the whole section will be removed as well.\n *\n * You may optionally specify the stashIdentifier in order to stash the removed item for later resurrection.\n *\n * @param widgetRef - widget reference of the item to remove;\n * @param stashIdentifier - stash identifier to store the removed item under; if not specified the item will be removed\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function eagerRemoveSectionItemByWidgetRef(widgetRef, stashIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.REMOVE_ITEM_BY_WIDGET_REF\",\n        correlationId,\n        payload: {\n            widgetRef,\n            stashIdentifier,\n            eager: true,\n        },\n    };\n}\n/**\n * Creates the UndoLayoutChanges command.\n *\n * @remarks\n * Dispatching this command will result in reverting the state of the layout\n * to a point before a particular layout command processing.\n *\n * By default, the very last command will be undone, however you can provide a function of your own to determine\n * up to which command should the undo go.\n *\n * @param undoPointSelector - specify function to determine up to which command to undo; if not provided the very last command will be undone\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function undoLayoutChanges(undoPointSelector, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.UNDO\",\n        correlationId,\n        payload: {\n            undoPointSelector,\n        },\n    };\n}\n/**\n * A convenience function to create UndoLayoutChanges command that will revert the very last command and toss it out\n * of history.\n *\n * @remarks\n * This is useful if you are implementing complex and cancellable interactions. For instance if you are building\n * drag-and-drop interaction which upon drag start removes item from a section using the RemoveSectionItem command and\n * upon drop places item in a new location using AddSectionItems command.\n *\n * When the user starts drag, you submit the RemoveSectionItem command (keeping the item in stash). Then user does\n * something to cancel the interaction: you need to restore the layout to the original state: that means to revert\n * the last layout change that was done by your interaction.\n *\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @alpha\n */\nexport function revertLastLayoutChange(correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.UNDO\",\n        correlationId,\n        payload: {},\n    };\n}\n/**\n * Creates the ResizeHeight command.\n *\n * @param sectionIndex - index of the section\n * @param itemIndexes - indexes of the items\n * @param height - height in Grid Rows (by default 1 Grid Row is 20px)\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function resizeHeight(sectionIndex, itemIndexes, height, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.RESIZE_HEIGHT\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndexes,\n            height,\n        },\n    };\n}\n/**\n * Creates the ResizeWidth command.\n *\n * @param sectionIndex - index of the section\n * @param itemIndex - index of the item\n * @param width - width in Grid Rows (by default 1 Grid Row is 20px)\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function resizeWidth(sectionIndex, itemIndex, width, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.FLUID_LAYOUT.RESIZE_WIDTH\",\n        correlationId,\n        payload: {\n            sectionIndex,\n            itemIndex,\n            width,\n        },\n    };\n}\n//# sourceMappingURL=layout.js.map","// (C) 2021-2023 GoodData Corporation\n/**\n * Creates the SaveAlert command. Dispatching this command will result in the creating Kpi alert on the backend.\n *\n * @param alert - specify alert to create.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @beta\n */\nexport function createAlert(alert, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.ALERT.CREATE\",\n        correlationId,\n        payload: {\n            alert,\n        },\n    };\n}\n/**\n * Creates the UpdateAlert command. Dispatching this command will result in the updating Kpi alert on the backend.\n *\n * @param alert - specify alert to update.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n\n * @beta\n */\nexport function updateAlert(alert, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.ALERT.UPDATE\",\n        correlationId,\n        payload: {\n            alert,\n        },\n    };\n}\n/**\n * Creates the RemoveAlerts command. Dispatching this command will result in the removing Kpi alerts on the backend.\n *\n * @param refs - specify ObjRef of the alerts to remove\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n\n * @beta\n */\nexport function removeAlerts(refs, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.ALERTS.REMOVE\",\n        correlationId,\n        payload: {\n            refs,\n        },\n    };\n}\n//# sourceMappingURL=alerts.js.map","// (C) 2021-2023 GoodData Corporation\n/**\n * Creates the CreateScheduledEmail command.\n *\n * Dispatching this command will result in the creating scheduled email on the backend.\n *\n * @param scheduledEmail - specify scheduled email to create.\n * @param filterContext - specify filter context to use for the scheduled email. If no filter context is provided, stored dashboard filter context will be used.\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n\n * @beta\n */\nexport function createScheduledEmail(scheduledEmail, filterContext, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.SCHEDULED_EMAIL.CREATE\",\n        correlationId,\n        payload: {\n            scheduledEmail,\n            filterContext,\n        },\n    };\n}\n/**\n * Saves existing SaveScheduledEmail command. Dispatching this command will result in saving scheduled email on the backend.\n *\n * @param scheduledEmail - specify scheduled email to save.\n * @param filterContextRef - optionally specify existing filter context reference to be used for all attachments\n * @param correlationId - optionally specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n\n * @beta\n */\nexport function saveScheduledEmail(scheduledEmail, filterContextRef, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.SCHEDULED_EMAIL.SAVE\",\n        correlationId,\n        payload: {\n            scheduledEmail,\n            filterContextRef,\n        },\n    };\n}\n//# sourceMappingURL=scheduledEmail.js.map","/**\n * Creates the {@link Drill} command.\n * Dispatching this command will result into dispatching {@link DashboardDrillResolved} event.\n *\n * This is general dashboard drill command with details about all possible more granular drill interactions that can follow.\n * Reason for this general drill command is that it may happen that multiple drill interactions are possible for one drill event.\n *\n * Example: some attribute on the insight has drill down set and also widget has drill to insight set. Then this command must be dispatched with both\n * {@link @gooddata/sdk-ui-ext#IDrillDownDefinition} and {@link @gooddata/sdk-backend-spi#IDrillToInsight} definitions.\n *\n * - This must be always the first command that occurs after the drill interaction and must be dispatched before more granular drill commands.\n * - Specific drill commands that can follow this general drill command are: {@link DrillDown}, {@link DrillToInsight}, {@link DrillToDashboard},\n *   {@link DrillToCustomUrl}, {@link DrillToAttributeUrl}, {@link DrillToLegacyDashboard}\n *\n *\n * @alpha\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param drillContext - context in which the drill interaction was triggered (widget and insight details - if available).\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill command\n */\nexport function drill(drillEvent, drillContext, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL\",\n        correlationId,\n        payload: {\n            drillEvent,\n            drillContext,\n        },\n    };\n}\n/**\n * Creates the {@link DrillDown} command.\n * Dispatching this command will result into applying drill down definition to the provided insight (result of the drill down application\n * depends on the particular visualization type) and dispatching {@link DashboardDrillDownResolved} event that will contain it.\n *\n * In the default dashboard implementation dispatching this command will also result into opening drill dialog with the insight\n * that has this particular drill down definition applied.\n *\n * @alpha\n * @param insight - insight to which the drill down should be applied.\n * @param drillDefinition - drill definition to apply.\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill down command\n */\nexport function drillDown(insight, drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILL_DOWN\",\n        correlationId,\n        payload: {\n            insight,\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Creates the {@link DrillToInsight} command.\n * Dispatching this command will result into applying the drill intersection filters to the target insight\n * and dispatching {@link DashboardDrillToInsightResolved} event that will contain it.\n *\n * In the default dashboard implementation this command will also result into opening the drill dialog with the target insight\n * that has the drill intersection filters applied.\n *\n * @alpha\n * @param drillDefinition - drill definition with the target insight.\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill to insight command\n */\nexport function drillToInsight(drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILL_TO_INSIGHT\",\n        correlationId,\n        payload: {\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Creates the {@link DrillToDashboard} command.\n * Dispatching this command will result into getting the drill intersection filters that can be applied to the target dashboard\n * and dispatching {@link DashboardDrillToDashboardResolved} event that will contain them.\n *\n * @alpha\n * @param drillDefinition - drill definition with the target dashboard.\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill to dashboard command\n */\nexport function drillToDashboard(drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILL_TO_DASHBOARD\",\n        correlationId,\n        payload: {\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Creates the {@link DrillToCustomUrl} command.\n * Dispatching this command will result into resolving the target url\n * and dispatching {@link DashboardDrillToCustomUrlResolved} event that will contain it.\n *\n * Custom url can contain various identifier or attribute title placeholders, see:\n * {@link https://help.gooddata.com/pages/viewpage.action?pageId=86794855}\n *\n * @alpha\n * @param drillDefinition - drill definition with the target url to resolve.\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill to custom url command\n * @alpha\n */\nexport function drillToCustomUrl(drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILL_TO_CUSTOM_URL\",\n        correlationId,\n        payload: {\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Creates the {@link DrillToAttributeUrl} command.\n * Dispatching this command will result into resolving the target attribute url\n * and dispatching {@link DashboardDrillToAttributeUrlResolved} event that will contain it.\n *\n * For more details, see: {@link https://help.gooddata.com/pages/viewpage.action?pageId=86794855}\n *\n * @alpha\n * @param drillDefinition - drill definition with the target attribute url to resolve.\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill to attribute url command\n * @alpha\n */\nexport function drillToAttributeUrl(drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILL_TO_ATTRIBUTE_URL\",\n        correlationId,\n        payload: {\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Creates the {@link DrillToLegacyDashboard} command.\n * Dispatching this command will result into dispatching {@link DashboardDrillToLegacyDashboardResolved} event.\n *\n * Drill to legacy dashboard can be configured for Kpi widgets only.\n *\n * @alpha\n * @param drillDefinition - drill definition with the target dashboard.\n * @param drillEvent - original drill event, that triggered this particular drill interaction.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns drill to legacy dashboard command\n * @alpha\n */\nexport function drillToLegacyDashboard(drillDefinition, drillEvent, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILL_TO_LEGACY_DASHBOARD\",\n        correlationId,\n        payload: {\n            drillDefinition,\n            drillEvent,\n        },\n    };\n}\n/**\n * Creates the {@link ChangeDrillableItems} command.\n * Dispatching this command will result into enabling drilling of the widgets, if they match some of the drillable item definition/predicate.\n *\n * @alpha\n * @param drillableItems - reference to the drillable items or predicates that enables insight/kpi drilling.\n * @param correlationId - specify correlation id. It will be included in all events that will be emitted during the command processing.\n * @returns change drillable items command\n */\nexport function changeDrillableItems(drillableItems, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL.DRILLABLE_ITEMS.CHANGE\",\n        correlationId,\n        payload: {\n            drillableItems,\n        },\n    };\n}\n//# sourceMappingURL=drill.js.map","// (C) 2021-2023 GoodData Corporation\nimport { isObjRef, } from \"@gooddata/sdk-model\";\n/**\n * Creates the ChangeKpiWidgetHeader command. Dispatching this command will result in change of the KPI widget's\n * header which (now) includes title.\n *\n * @param ref - reference of the KPI widget to modify\n * @param header - new header to use\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeKpiWidgetHeader(ref, header, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_HEADER\",\n        correlationId,\n        payload: {\n            ref,\n            header,\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetDescription command. Dispatching this command will result in change of the Kpi widget's\n * description.\n *\n * @param ref - reference of the kpi widget to modify\n * @param description - new description to use\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeKpiWidgetDescription(ref, description, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_DESCRIPTION\",\n        correlationId,\n        payload: {\n            ref,\n            description,\n        },\n    };\n}\n/**\n *\n * Creates the ChangeKpiWidgetConfiguration command. Dispatching this command will result is modification\n * of the configuration that are effective for the particular kpi widget.\n *\n * Through configuration, you can modify how is particular kpi rendered\n *\n * If you want to clear any widget-level configuration, set config to `undefined`.\n *\n * @param ref - reference of the insight widget to modify\n * @param config - new configuration to set, undefined to clear any widget level  config\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeKpiWidgetConfiguration(ref, config, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_CONFIGURATION\",\n        correlationId,\n        payload: {\n            ref,\n            config,\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetMeasure command. Dispatching this command will result in change of the measure\n * used by the KPI.\n *\n * @param ref - reference of the KPI widget to modify\n * @param measureRef - reference of the measure to use\n * @param header - specify new header to use; if not provided the existing header will be reused\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeKpiWidgetMeasure(ref, measureRef, header, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_MEASURE\",\n        correlationId,\n        payload: {\n            ref,\n            measureRef,\n            header,\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetFilterSettings command. Dispatching this command will result in change of KPI widget's\n * filter settings; this includes change of data set used for date filter, disabling date filtering, ignoring\n * attribute filters that are defined on the dashboard for the widget.\n *\n * @param ref - reference of the KPI widget to modify\n * @param settings - new filter settings to apply\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function replaceKpiWidgetFilterSettings(ref, settings, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: Object.assign({ type: \"replace\" }, settings),\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetFilterSettings command for {@link FilterOpEnableDateFilter} operation.\n *\n * Dispatching this command will result in change of KPI widget's date filter setting. The date filtering will\n * be enabled and the provided date data set will be used for date-filtering widget's KPI.\n *\n * @param ref - reference of the KPI widget to modify\n * @param dateDataset - date data set to use for filtering the insight, if \"default\" is provided, the default date dataset will be resolved and used\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function enableKpiWidgetDateFilter(ref, dateDataset, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"enableDateFilter\",\n                dateDataset,\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetFilterSettings command for {@link FilterOpDisableDateFilter} operation.\n *\n * Dispatching this command will result in change of KPI widget's date filter setting. The date filtering will\n * be disabled.\n *\n * @param ref - reference of the KPI widget to modify\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function disableKpiWidgetDateFilter(ref, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"disableDateFilter\",\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetFilterSettings command for {@link FilterOpReplaceAttributeIgnores} operation.\n *\n * Dispatching this command will result in replacement of KPI widget's attribute filter ignore-list. Those attribute filters\n * that use the provided displayForms for filtering will be ignored by the widget.\n *\n * @param ref - reference of the KPI widget to modify\n * @param displayForms - refs of display forms used by attribute filters that should be ignored\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function replaceKpiWidgetIgnoredFilters(ref, displayForms, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"replaceAttributeIgnores\",\n                displayFormRefs: displayForms !== null && displayForms !== void 0 ? displayForms : [],\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetFilterSettings command for {@link FilterOpIgnoreAttributeFilter} operation.\n *\n * Dispatching this command will result in addition of one or more filters into KPI widget's attribute filter ignore-list.\n * Those attribute filters that use the provided displayForms for filtering will be ignored by the widget on top of any\n * other filters that are already ignored.\n *\n * Ignored attribute filters are not passed down to the KPI and will not be used to filter that KPI.\n *\n * The operation is idempotent - trying to ignore an attribute filter multiple times will have no effect.\n *\n * @param ref - reference of the KPI widget to modify\n * @param oneOrMoreDisplayForms - one or more refs of display forms used by attribute filters that should be added to the ignore-list\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function ignoreFilterOnKpiWidget(ref, oneOrMoreDisplayForms, correlationId) {\n    const displayFormRefs = isObjRef(oneOrMoreDisplayForms) ? [oneOrMoreDisplayForms] : oneOrMoreDisplayForms;\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"ignoreAttributeFilter\",\n                displayFormRefs,\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetFilterSettings command for {@link FilterOpUnignoreAttributeFilter} operation.\n *\n * Dispatching this command will result in removal of one or more filters from KPI widget's attribute filter ignore-list.\n * Ignored attribute filters are not passed down to the KPI and will not be used to filter that KPI.\n *\n * The operation is idempotent - trying to unignore an attribute filter multiple times will have no effect.\n *\n * @param ref - reference of the KPI widget to modify\n * @param oneOrMoreDisplayForms - one or more refs of display forms used by attribute filters that should be removed from the ignore-list\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function unignoreFilterOnKpiWidget(ref, oneOrMoreDisplayForms, correlationId) {\n    const displayFormRefs = isObjRef(oneOrMoreDisplayForms) ? [oneOrMoreDisplayForms] : oneOrMoreDisplayForms;\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_FILTER_SETTINGS\",\n        correlationId,\n        payload: {\n            ref,\n            operation: {\n                type: \"unignoreAttributeFilter\",\n                displayFormRefs,\n            },\n        },\n    };\n}\n/**\n * Creates the ChangeKpiWidgetComparison command. Dispatching this command will result in change of what comparison\n * method - if any - is used for the KPI's Measure. The KPI may compare measure value from current period (as selected\n * by the date filter) to previous period and then depending on whether the current value grows can visualize that\n * as a good or bad thing.\n *\n * @param ref - reference of the KPI widget to modify\n * @param comparison - new comparison setting\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function changeKpiWidgetComparison(ref, comparison, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_COMPARISON\",\n        correlationId,\n        payload: {\n            ref,\n            comparison,\n        },\n    };\n}\n/**\n * Creates the RefreshKpiWidget command. Dispatching this command will result in re-calculation of the KPI's value.\n *\n * @param ref - reference of the KPI widget to refresh\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function refreshKpiWidget(ref, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.REFRESH\",\n        correlationId,\n        payload: {\n            ref,\n        },\n    };\n}\n/**\n * Creates the SetDrillForKpiWidget command. Dispatching this command will result in KPI having its drill set to the given value.\n *\n * @param ref - reference of the KPI widget to modify\n * @param legacyDashboardRef - ref of the legacy dashboard to drill to\n * @param legacyDashboardTabIdentifier - identifier of the legacy dashboard tab to drill to\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function setDrillForKpiWidget(ref, legacyDashboardRef, legacyDashboardTabIdentifier, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.SET_DRILL\",\n        correlationId,\n        payload: {\n            ref,\n            legacyDashboardTabIdentifier,\n            legacyDashboardRef,\n        },\n    };\n}\n/**\n * Creates the RemoveDrillForKpiWidget command. Dispatching this command will result in KPI having its drill removed.\n *\n * @param ref - reference of the KPI widget to modify\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n *\n * @beta\n */\nexport function removeDrillForKpiWidget(ref, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.KPI_WIDGET.REMOVE_DRILL\",\n        correlationId,\n        payload: {\n            ref,\n        },\n    };\n}\n//# sourceMappingURL=kpi.js.map","// (C) 2021-2022 GoodData Corporation\n/**\n * Create AddDrillTargets {@link AddDrillTargets} command.\n *\n * @param ref - Unique widget ref\n * @param availableDrillTargets - Available widget drill targets {@link @gooddata/sdk-ui#IAvailableDrillTargets}\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n * @returns AddDrillTargets command\n *\n * @alpha\n */\nexport function addDrillTargets(ref, availableDrillTargets, correlationId) {\n    return {\n        type: \"GDC.DASH/CMD.DRILL_TARGETS.ADD\",\n        correlationId,\n        payload: {\n            ref,\n            availableDrillTargets,\n        },\n    };\n}\n//# sourceMappingURL=drillTargets.js.map","// (C) 2022-2023 GoodData Corporation\n/**\n * Creates action through which you can query connecting attributes for the information about\n * possibility of parent-child attribute filter relationship.\n *\n * @param refs - references of the attributes\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @returns connecting attributes for given array of references\n *\n * @alpha\n */\nexport function queryConnectingAttributes(refs, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.CONNECTING.ATTRIBUTES\",\n        correlationId,\n        payload: {\n            refs,\n        },\n    };\n}\n//# sourceMappingURL=connectingAttributes.js.map","/**\n * Creates action through which you can query attribute data set for given display form\n *\n * @param displayForm - attribute display form\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @returns attribute data set for given display form\n *\n * @internal\n */\nexport function queryAttributeDataSet(displayForm, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.DATA.SET.ATTRIBUTE\",\n        correlationId,\n        payload: {\n            displayForm,\n        },\n    };\n}\n//# sourceMappingURL=attributeDataSet.js.map","/**\n * Creates action through which you can query attribute elements for given display form\n *\n * @param displayForm - attribute display form\n * @param limit - desired max number of elements to retrieve\n * @param correlationId - specify correlation id to use for this command. this will be included in all\n *  events that will be emitted during the command processing\n * @returns attribute elements for given display form\n *\n * @internal\n */\nexport function queryAttributeElements(displayForm, limit, correlationId) {\n    return {\n        type: \"GDC.DASH/QUERY.ELEMENTS.ATTRIBUTE\",\n        correlationId,\n        payload: {\n            displayForm,\n            limit,\n        },\n    };\n}\n//# sourceMappingURL=attributeElements.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nconst selectSelf = createSelector((state) => state, (state) => state.loading);\n/**\n * @internal\n */\nexport const selectDashboardLoading = selectSelf;\n/**\n * @internal\n */\nexport const selectIsDashboardLoading = createSelector(selectSelf, (state) => state.loading);\n//# sourceMappingURL=loadingSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nconst selectSelf = createSelector((state) => state, (state) => state.saving);\n/**\n * @internal\n */\nexport const selectDashboardSaving = selectSelf;\n/**\n * @public\n */\nexport const selectIsDashboardSaving = createSelector(selectSelf, (state) => state.saving);\n//# sourceMappingURL=savingSelectors.js.map","// (C) 2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.entitlements);\n/**\n * Returns dashboard's entitlements.\n *\n * @remarks\n * It is expected that the selector is called only after the entitlements state\n * is correctly initialized. Invocations before initialization lead to invariant errors.\n *\n * @alpha\n */\nexport const selectEntitlements = createSelector(selectSelf, (state) => {\n    invariant(state.entitlements, \"attempting to access uninitialized entitlements state\");\n    return state.entitlements;\n});\n/**\n * @alpha\n */\nexport const selectEntitlementExportPdf = createSelector(selectEntitlements, (entitlements) => {\n    return entitlements.find((entitlement) => entitlement.name === \"PdfExports\");\n});\n//# sourceMappingURL=entitlementsSelectors.js.map","// (C) 2022-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { invariant } from \"ts-invariant\";\nconst selectSelf = createSelector((state) => state, (state) => state.dashboardPermissions);\n/**\n * This selector returns user's dashboard permissions.\n *\n * @remarks\n * It is expected that the selector is called only after the dashboard permission state is correctly initialized.\n * Invocations before initialization lead to invariant errors.\n *\n * If the permission is not supported by GoodData Cloud and GoodData.CN backends, the selector always returns `false` value.\n *\n * In case you need multiple permissions available in your application, use this common selector.\n *\n * @public\n */\nexport const selectDashboardPermissions = createSelector(selectSelf, (state) => {\n    invariant(state.dashboardPermissions, \"attempting to access uninitialized dashboard permissions state\");\n    return state.dashboardPermissions;\n});\n/**\n * Returns whether the current user has permissions to view dashboard.\n *\n * @public\n */\nexport const selectCanViewDashboardPermission = createSelector(selectDashboardPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canViewDashboard) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to share dashboard.\n *\n * @public\n */\nexport const selectCanShareDashboardPermission = createSelector(selectDashboardPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canShareDashboard) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to share a locked dashboard.\n *\n * @public\n */\nexport const selectCanShareLockedDashboardPermission = createSelector(selectDashboardPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canShareLockedDashboard) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to edit dashboard.\n *\n * @public\n */\nexport const selectCanEditDashboardPermission = createSelector(selectDashboardPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canEditDashboard) !== null && _a !== void 0 ? _a : false;\n});\n/**\n * Returns whether the current user has permissions to edit locked dashboard.\n *\n * @public\n */\nexport const selectCanEditLockedDashboardPermission = createSelector(selectDashboardPermissions, (state) => {\n    var _a;\n    return (_a = state === null || state === void 0 ? void 0 : state.canEditLockedDashboard) !== null && _a !== void 0 ? _a : false;\n});\n//# sourceMappingURL=dashboardPermissionsSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nconst selectSelf = createSelector((state) => state, (state) => state.drill);\n/**\n * Returns drillable items that are currently set.\n *\n * @alpha\n */\nexport const selectDrillableItems = createSelector(selectSelf, (state) => {\n    return state.drillableItems;\n});\n//# sourceMappingURL=drillSelectors.js.map","// (C) 2020-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport compact from \"lodash/compact.js\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nimport { isLocalIdRef, isIdentifierRef, isUriRef, areObjRefsEqual, localIdRef, isDrillFromAttribute, isDrillFromMeasure, objRefToString, } from \"@gooddata/sdk-model\";\nimport { HeaderPredicates, } from \"@gooddata/sdk-ui\";\nimport { createMemoizedSelector } from \"../_infra/selectors.js\";\nimport { selectWidgetDrills } from \"../layout/layoutSelectors.js\";\nimport { selectDrillTargetsByWidgetRef } from \"../drillTargets/drillTargetsSelectors.js\";\nimport { selectAllCatalogAttributesMap, selectAllCatalogDisplayFormsMap, selectAttributesWithDisplayFormLink, selectAttributesWithHierarchyDescendants, } from \"../catalog/catalogSelectors.js\";\nimport { selectDrillableItems } from \"../drill/drillSelectors.js\";\nimport { selectDisableDefaultDrills, selectEnableClickableAttributeURL, selectEnableKPIDashboardDrillToURL, selectEnableKPIDashboardDrillToInsight, selectEnableKPIDashboardDrillToDashboard, selectIsDrillDownEnabled, selectHideKpiDrillInEmbedded, selectIsEmbedded, } from \"../config/configSelectors.js\";\nimport flatMap from \"lodash/flatMap.js\";\nimport { selectAccessibleDashboardsMap } from \"../accessibleDashboards/accessibleDashboardsSelectors.js\";\nimport { selectInsightsMap } from \"../insights/insightsSelectors.js\";\nfunction drillDefinitionToPredicates(drill) {\n    let origin;\n    if (isDrillFromMeasure(drill.origin)) {\n        origin = drill.origin.measure;\n    }\n    else if (isDrillFromAttribute(drill.origin)) {\n        origin = drill.origin.attribute;\n    }\n    else {\n        throw new UnexpectedError(\"Unknown drill origin!\");\n    }\n    // add drillable items for all three types of objRefs that the origin measure can be\n    return compact([\n        isLocalIdRef(origin) && HeaderPredicates.localIdentifierMatch(origin.localIdentifier),\n        isIdentifierRef(origin) && HeaderPredicates.identifierMatch(origin.identifier),\n        isUriRef(origin) && HeaderPredicates.uriMatch(origin.uri),\n    ]);\n}\nfunction getDrillDownDefinitionsWithPredicates(availableDrillAttributes, attributesWithHierarchyDescendants, allCatalogAttributesMap) {\n    const matchingAvailableDrillAttributes = availableDrillAttributes.filter((candidate) => objRefToString(candidate.attribute.attributeHeader.formOf.ref) in\n        attributesWithHierarchyDescendants);\n    return matchingAvailableDrillAttributes.flatMap((drill) => {\n        const attributeDrillDescendants = attributesWithHierarchyDescendants[objRefToString(drill.attribute.attributeHeader.formOf.ref)];\n        return attributeDrillDescendants.map((descendantRef) => {\n            /**\n             * Here we need to distinguish how the drill is defined in the attribute hierarchy.\n             *\n             * On Tiger, the drilldown is defined as \"Attr --\\> Attr\" (so we take the default display form as the drill target)\n             * On Bear, the drilldown is defined as \"Attr --\\> specific display form\" (= drill target implicitly)\n             */\n            const drillTargetAttributeFromCatalog = allCatalogAttributesMap.get(descendantRef);\n            const drillTargetDescriptionObj = drillTargetAttributeFromCatalog\n                ? {\n                    target: drillTargetAttributeFromCatalog.defaultDisplayForm.ref,\n                    title: drillTargetAttributeFromCatalog.attribute.title, // title is used to distinguish between multiple drill-downs\n                }\n                : {\n                    target: descendantRef,\n                };\n            return {\n                drillDefinition: Object.assign({ type: \"drillDown\", origin: localIdRef(drill.attribute.attributeHeader.localIdentifier) }, drillTargetDescriptionObj),\n                predicates: [\n                    HeaderPredicates.localIdentifierMatch(drill.attribute.attributeHeader.localIdentifier),\n                ],\n            };\n        });\n    });\n}\nfunction getDrillToUrlDefinitionsWithPredicates(availableDrillAttributes, attributesWithDisplayFormLink) {\n    const matchingAvailableDrillAttributes = availableDrillAttributes.filter((candidate) => {\n        return attributesWithDisplayFormLink.some((attr) => areObjRefsEqual(attr.attribute.ref, candidate.attribute.attributeHeader.formOf.ref));\n    });\n    return matchingAvailableDrillAttributes.map((targetAttribute) => {\n        const matchingCatalogAttribute = attributesWithDisplayFormLink.find((attr) => areObjRefsEqual(attr.attribute.ref, targetAttribute.attribute.attributeHeader.formOf.ref));\n        const drillDefinition = {\n            type: \"drillToAttributeUrl\",\n            transition: \"new-window\",\n            origin: {\n                type: \"drillFromAttribute\",\n                attribute: localIdRef(targetAttribute.attribute.attributeHeader.localIdentifier),\n            },\n            target: {\n                displayForm: targetAttribute.attribute.attributeHeader.ref,\n                hyperlinkDisplayForm: matchingCatalogAttribute.attribute.drillToAttributeLink,\n            },\n        };\n        return {\n            drillDefinition,\n            predicates: [\n                // add drillable items for both types of objRefs that the header can be\n                HeaderPredicates.identifierMatch(targetAttribute.attribute.attributeHeader.identifier),\n                HeaderPredicates.uriMatch(targetAttribute.attribute.attributeHeader.uri),\n            ],\n        };\n    });\n}\nfunction getDrillDefinitionsWithPredicates(insightWidgetDrills) {\n    return insightWidgetDrills.map((drill) => {\n        return {\n            drillDefinition: drill,\n            predicates: drillDefinitionToPredicates(drill),\n        };\n    });\n}\n//\n// Following selectors are for the 1st level insight widget (insight widget on the dashboard)\n//\n/**\n * @internal\n */\nexport const selectImplicitDrillsDownByWidgetRef = createMemoizedSelector((ref) => createSelector(selectDrillTargetsByWidgetRef(ref), selectAttributesWithHierarchyDescendants, selectAllCatalogAttributesMap, selectIsDrillDownEnabled, (availableDrillTargets, attributesWithHierarchyDescendants, allCatalogAttributesMap, isDrillDownEnabled) => {\n    var _a, _b;\n    if (isDrillDownEnabled) {\n        const availableDrillAttributes = (_b = (_a = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.availableDrillTargets) === null || _a === void 0 ? void 0 : _a.attributes) !== null && _b !== void 0 ? _b : [];\n        return getDrillDownDefinitionsWithPredicates(availableDrillAttributes, attributesWithHierarchyDescendants, allCatalogAttributesMap);\n    }\n    return [];\n}));\n/**\n * @internal\n */\nexport const selectImplicitDrillsToUrlByWidgetRef = createMemoizedSelector((ref) => createSelector(selectDrillTargetsByWidgetRef(ref), selectAttributesWithDisplayFormLink, selectEnableClickableAttributeURL, (availableDrillTargets, attributesWithLink, isClickableAttributeURLEnabled) => {\n    var _a, _b;\n    if (isClickableAttributeURLEnabled) {\n        const availableDrillAttributes = (_b = (_a = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.availableDrillTargets) === null || _a === void 0 ? void 0 : _a.attributes) !== null && _b !== void 0 ? _b : [];\n        return getDrillToUrlDefinitionsWithPredicates(availableDrillAttributes, attributesWithLink);\n    }\n    return [];\n}));\n/**\n * @internal\n */\nexport const selectConfiguredDrillsByWidgetRef = createMemoizedSelector((ref) => createSelector(selectWidgetDrills(ref), selectDisableDefaultDrills, selectEnableClickableAttributeURL, selectEnableKPIDashboardDrillToURL, selectEnableKPIDashboardDrillToInsight, selectEnableKPIDashboardDrillToDashboard, selectHideKpiDrillInEmbedded, selectIsEmbedded, (drills = [], disableDefaultDrills, enableClickableAttributeURL, enableKPIDashboardDrillToURL, enableKPIDashboardDrillToInsight, enableKPIDashboardDrillToDashboard, hideKpiDrillInEmbedded, isEmbedded) => {\n    if (disableDefaultDrills) {\n        return [];\n    }\n    const filteredDrills = [...drills].filter((drill) => {\n        const drillType = drill.type;\n        switch (drillType) {\n            case \"drillToAttributeUrl\": {\n                return enableClickableAttributeURL;\n            }\n            case \"drillToCustomUrl\": {\n                return enableKPIDashboardDrillToURL;\n            }\n            case \"drillToDashboard\": {\n                return enableKPIDashboardDrillToDashboard;\n            }\n            case \"drillToInsight\": {\n                return enableKPIDashboardDrillToInsight;\n            }\n            case \"drillToLegacyDashboard\": {\n                return !(isEmbedded && hideKpiDrillInEmbedded);\n            }\n            default: {\n                const unhandledType = drillType;\n                throw new UnexpectedError(`Unhandled widget drill type: ${unhandledType}`);\n            }\n        }\n    });\n    return getDrillDefinitionsWithPredicates(filteredDrills);\n}));\n/**\n * @internal\n */\nexport const selectValidConfiguredDrillsByWidgetRef = createMemoizedSelector((ref) => createSelector(selectConfiguredDrillsByWidgetRef(ref), selectAllCatalogDisplayFormsMap, selectAccessibleDashboardsMap, selectInsightsMap, (drills = [], displayFormsMap, accessibleDashboardsMap, insightsMap) => {\n    return drills.filter((drill) => {\n        switch (drill.drillDefinition.type) {\n            case \"drillToAttributeUrl\": {\n                return displayFormsMap.get(drill.drillDefinition.target.hyperlinkDisplayForm);\n            }\n            case \"drillToCustomUrl\": {\n                return true;\n            }\n            case \"drillToDashboard\": {\n                // No drill target equals drill to the same dashboard\n                return (!drill.drillDefinition.target ||\n                    accessibleDashboardsMap.get(drill.drillDefinition.target));\n            }\n            case \"drillToInsight\": {\n                return insightsMap.get(drill.drillDefinition.target);\n            }\n            case \"drillToLegacyDashboard\": {\n                return true;\n            }\n            case \"drillDown\": {\n                return true;\n            }\n            default: {\n                const unhandledType = drill.drillDefinition;\n                throw new UnexpectedError(`Unhandled widget drill type: ${unhandledType}`);\n            }\n        }\n    });\n}));\nconst selectImplicitDrillToUrlPredicates = createMemoizedSelector((ref) => createSelector(selectImplicitDrillsToUrlByWidgetRef(ref), (drillToUrlDrills) => {\n    return flatMap(drillToUrlDrills, (drill) => drill.predicates);\n}));\nconst selectImplicitDrillDownPredicates = createMemoizedSelector((ref) => createSelector(selectImplicitDrillsDownByWidgetRef(ref), (drillDownDrills) => {\n    return flatMap(drillDownDrills, (drill) => drill.predicates);\n}));\nconst selectConfiguredDrillPredicates = createMemoizedSelector((ref) => createSelector(selectValidConfiguredDrillsByWidgetRef(ref), (configuredDrills = []) => {\n    return flatMap(configuredDrills, (drill) => drill.predicates);\n}));\n/**\n * @internal\n */\nexport const selectConfiguredAndImplicitDrillsByWidgetRef = createMemoizedSelector((ref) => createSelector(selectValidConfiguredDrillsByWidgetRef(ref), selectImplicitDrillsDownByWidgetRef(ref), selectImplicitDrillsToUrlByWidgetRef(ref), (configuredDrills, implicitDrillDownDrills, implicitDrillToUrlDrills) => {\n    return [...configuredDrills, ...implicitDrillDownDrills, ...implicitDrillToUrlDrills];\n}));\n/**\n * @internal\n */\nexport const selectDrillableItemsByWidgetRef = createMemoizedSelector((ref) => createSelector(selectDisableDefaultDrills, selectDrillableItems, selectConfiguredDrillPredicates(ref), selectImplicitDrillDownPredicates(ref), selectImplicitDrillToUrlPredicates(ref), (disableDefaultDrills, drillableItems, configuredDrills, implicitDrillDownDrills, implicitDrillToUrlDrills) => {\n    const resolvedDrillableItems = [...drillableItems];\n    if (!disableDefaultDrills) {\n        resolvedDrillableItems.push(...configuredDrills, ...implicitDrillDownDrills, ...implicitDrillToUrlDrills);\n    }\n    return resolvedDrillableItems;\n}));\n//\n// Following selectors are for insight widget in drill dialog\n//\n/**\n * @internal\n */\nexport const selectImplicitDrillsByAvailableDrillTargets = createMemoizedSelector((availableDrillTargets) => createSelector(selectAttributesWithDisplayFormLink, selectAttributesWithHierarchyDescendants, selectAllCatalogAttributesMap, selectIsDrillDownEnabled, (attributesWithLink, attributesWithHierarchyDescendants, allCatalogAttributesMap, isDrillDownEnabled) => {\n    var _a;\n    const availableDrillAttributes = (_a = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.attributes) !== null && _a !== void 0 ? _a : [];\n    const drillDownDrills = isDrillDownEnabled\n        ? getDrillDownDefinitionsWithPredicates(availableDrillAttributes, attributesWithHierarchyDescendants, allCatalogAttributesMap)\n        : [];\n    const drillToUrlDrills = getDrillToUrlDefinitionsWithPredicates(availableDrillAttributes, attributesWithLink);\n    return [...drillDownDrills, ...drillToUrlDrills];\n}));\n/**\n * @internal\n */\nexport const selectDrillableItemsByAvailableDrillTargets = createMemoizedSelector((availableDrillTargets) => createSelector(selectImplicitDrillsByAvailableDrillTargets(availableDrillTargets), (implicitDrillDowns) => {\n    return flatMap(implicitDrillDowns, (implicitDrill) => implicitDrill.predicates);\n}));\n//# sourceMappingURL=widgetDrillSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { listedDashboardsEntityAdapter } from \"./listedDashboardsEntityAdapter.js\";\nimport { newMapForObjectWithIdentity } from \"../../../_staging/metadata/objRefMap.js\";\nconst selectSelf = createSelector((state) => state, (state) => state.listedDashboards);\nconst adapterSelectors = listedDashboardsEntityAdapter.getSelectors(selectSelf);\n/**\n * Select all listed dashboard in project.\n *\n * @alpha\n */\nexport const selectListedDashboards = adapterSelectors.selectAll;\n/**\n * Select all listed dashboard in project and returns them in a mapping of obj ref to the insight object.\n *\n * @alpha\n */\nexport const selectListedDashboardsMap = createSelector(selectListedDashboards, (dashboards) => {\n    return newMapForObjectWithIdentity(dashboards);\n});\n//# sourceMappingURL=listedDashboardsSelectors.js.map","// (C) 2021 GoodData Corporation\nimport { commandEnvelopeWithPromise } from \"./rootCommandHandler.js\";\n/**\n * Dispatches a command and returns a promise to wait for it to get resolved.\n *\n * @param dispatch - dashboard dispatch to use\n * @param command - command to trigger and wait for resolution of\n * @returns Promise of the command resolution\n * @alpha\n */\nexport async function dispatchAndWaitFor(dispatch, command) {\n    const { promise, envelope } = commandEnvelopeWithPromise(command);\n    dispatch(envelope);\n    return promise;\n}\n//# sourceMappingURL=dispatchAndWaitFor.js.map","// (C) 2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\n/**\n * This class serves the selector and the dispatcher properties of the dashboard component state.\n *\n * @remarks\n * The {@link Dashboard} component has an optional property {@link IDashboardProps#onStateChange} through which\n * you can handle set the values for {@link DashboardDispatch} and {@link DashboardSelectorEvaluator}.\n *\n *\n * In your component using {@link Dashboard} you can create and instance of the {@link DashboardStoreAccessor} object\n * and use it like in the example below. The example shows the accessor's usage as well. There is a need to check\n * the select and dispatch object existence.\n *\n * See {@link DashboardStoreAccessorRepository} on possible way how to use the store accessor.\n *\n * To get latest properties, use static member function {@link DashboardStoreAccessor#getInstance}. If there is already an instance\n * created, it will return this instance and will return new instance of the {@link DashboardStoreAccessor} otherwise.\n *\n * @public\n */\nexport class DashboardStoreAccessor {\n    constructor(selector, dispatch) {\n        /**\n         * Returns current selector for the dashboard's component state.\n         */\n        this.getDashboardSelect = () => {\n            invariant(this.selectorEvaluator, \"DashboardStoreAccessor selectorEvaluator is not initialized\");\n            return this.selectorEvaluator;\n        };\n        /**\n         * Setter for the dashboard's component state selector.\n         * @param selectorEvaluator - dashboardSelectorEvaluator\n         */\n        this.setSelector = (selectorEvaluator) => {\n            this.selectorEvaluator = selectorEvaluator;\n        };\n        /**\n         * Returns current dispatch object for the dashboard component state.\n         */\n        this.getDashboardDispatch = () => {\n            invariant(this.dispatch, \"DashboardStoreAccessor dispatch is not initialized\");\n            return this.dispatch;\n        };\n        /**\n         * Setter for the dashboard's component state dispatch.\n         * @param dispatch - dashboardDispatch\n         */\n        this.setDispatch = (dispatch) => {\n            this.dispatch = dispatch;\n        };\n        /**\n         * Checks if {@link DashboardStoreAccessor} is fully initialized.\n         */\n        this.isDashboardStoreAccessorInitialized = () => {\n            return !!this.selectorEvaluator && !!this.dispatch;\n        };\n        /**\n         * Callback to be passed as {@link Dashboard} component {@link Dashboard#onStateChange} property to set\n         * {@link DashboardStoreAccessor#selectorEvaluator} and {@link DashboardStoreAccessor#dispatch} to handle Dashboard component state from outside of the\n         * component.\n         *\n         * @param state - {@link DashboardState} object.\n         * @param dispatch - {@link DashboardDispatch} object.\n         */\n        this.setSelectAndDispatch = (state, dispatch) => {\n            const dashboardSelect = (select) => select(state);\n            this.setSelector(dashboardSelect);\n            this.setDispatch(dispatch);\n        };\n        this.selectorEvaluator = selector;\n        this.dispatch = dispatch;\n    }\n}\n//# sourceMappingURL=DashboardStoreAccessor.js.map","// (C) 2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { DashboardStoreAccessor } from \"./DashboardStoreAccessor.js\";\nimport { idRef, serializeObjRef } from \"@gooddata/sdk-model\";\n/**\n * This singleton class serves the selector and the dispatcher properties for given dashboard.\n *\n * @remarks\n * The {@link Dashboard} component has an optional property {@link IDashboardProps#onStateChange} through which\n * you can handle setting of the values for {@link DashboardDispatch} and {@link DashboardSelectorEvaluator}.\n *\n *\n * In your component using {@link Dashboard} you can create an onStateChange callback for your dashboard using\n * {@link DashboardStoreAccessorRepository#getOnChangeHandlerForDashboard} and pass it to mentioned Dashboard\n * component property.\n *\n * @example\n * ```\n *  const dashboardStoreAccessors = DashboardStoreAccessorRepository.getInstance();\n *\n *\n *  // in the code where needed\n *  dashboardStoreAccessors.getAccessorsForDashboard(<DASHBOARD_ID>).getDispatch()(\n *      changeDateFilterSelection(\"relative\", \"GDC.time.month\", \"-3\", \"0\"),\n *  );\n *\n *  // or with check if accessor is initialized already\n *  if (dashboardStoreAccessors.isAccessorInitializedForDashboard(DASHBOARD_ID)) {\n *          setSelectResult(\n *              dashboardStoreAccessors.getAccessorsForDashboard(DASHBOARD_ID).getSelector()(\n *                  selectEffectiveDateFilterOptions,\n *              ),\n *          );\n *      }\n *\n *  return (\n *      <Dashboard dashboard={\"<dashboardId>\"} onStateChange={dashboardStoreAccessors.getOnChangeHandlerForDashboard(DASHBOARD_REF)}/>\n *  )\n * ```\n *\n * To get latest properties, use static member function {@link DashboardStoreAccessor#getInstance}. If there is already an instance\n * created, it will return this instance and will return new instance of the {@link DashboardStoreAccessor} otherwise.\n *\n * @public\n */\nclass DashboardStoreAccessorRepository {\n    static getSerializedDashboardRef(dashboard) {\n        const dashboardRef = typeof dashboard === \"string\" ? idRef(dashboard) : dashboard;\n        return serializeObjRef(dashboardRef);\n    }\n    /**\n     * Gets the correct {@link DashboardStoreAccessor} for given dashboard from the accessors map.\n     *\n     * @param dashboard - an {@link @gooddata/sdk-model#ObjRef} of the dashboard, or its id as a string\n     */\n    static getAccessorsForDashboard(dashboard) {\n        const serializedDashboardRef = DashboardStoreAccessorRepository.getSerializedDashboardRef(dashboard);\n        const accessor = this.accessors.get(serializedDashboardRef);\n        invariant(accessor, `No accessor available for dashboard ${dashboard}`);\n        return accessor;\n    }\n    /**\n     * Gets the correct {@link DashboardSelectorEvaluator} for given dashboard from the accessors map.\n     *\n     * @param dashboard - an {@link @gooddata/sdk-model#ObjRef} of the dashboard, or its id as a string\n     */\n    static getDashboardSelectForDashboard(dashboard) {\n        var _a;\n        const serializedDashboardRef = DashboardStoreAccessorRepository.getSerializedDashboardRef(dashboard);\n        const selectorEvaluator = (_a = this.accessors.get(serializedDashboardRef)) === null || _a === void 0 ? void 0 : _a.getDashboardSelect();\n        invariant(selectorEvaluator, `No selector available for dashboard ${dashboard}`);\n        return selectorEvaluator;\n    }\n    /**\n     * Gets the correct {@link DashboardDispatch} for given dashboard from the accessors map.\n     *\n     * @param dashboard - an {@link @gooddata/sdk-model#ObjRef} of the dashboard, or its id as a string\n     */\n    static getDashboardDispatchForDashboard(dashboard) {\n        var _a;\n        const serializedDashboardRef = DashboardStoreAccessorRepository.getSerializedDashboardRef(dashboard);\n        const dashboardDispatch = (_a = this.accessors.get(serializedDashboardRef)) === null || _a === void 0 ? void 0 : _a.getDashboardDispatch();\n        invariant(dashboardDispatch, `No selector available for dashboard ${dashboard}`);\n        return dashboardDispatch;\n    }\n    /**\n     * Creates a {@link Dashboard#onStateChange} callback for given dashboard.\n     *\n     * @param dashboard - an {@link @gooddata/sdk-model#ObjRef} of the dashboard, or its id as a string\n     */\n    static getOnChangeHandlerForDashboard(dashboard) {\n        const serializedDashboardRef = DashboardStoreAccessorRepository.getSerializedDashboardRef(dashboard);\n        return (state, dispatch) => {\n            const dashboardSelect = (select) => select(state);\n            DashboardStoreAccessorRepository.setAccessorForDashboard(serializedDashboardRef, dashboardSelect, dispatch);\n        };\n    }\n    static setAccessorForDashboard(serializedDashboardRef, selector, dispatch) {\n        DashboardStoreAccessorRepository.accessors.set(serializedDashboardRef, new DashboardStoreAccessor(selector, dispatch));\n    }\n    /**\n     * Removes dashboard accessors from {@link DashboardStoreAccessorRepository#accessors} for the given dashboard {@link @gooddata/sdk-model#ObjRef}.\n     *\n     * @param dashboard - an {@link @gooddata/sdk-model#ObjRef} of the dashboard, or its id as a string\n     */\n    static clearAccessorForDashboard(dashboard) {\n        const serializedDashboardRef = DashboardStoreAccessorRepository.getSerializedDashboardRef(dashboard);\n        DashboardStoreAccessorRepository.accessors.delete(serializedDashboardRef);\n    }\n    /**\n     * Clears all accessors saved in accessors map.\n     */\n    static clearAllAccessors() {\n        DashboardStoreAccessorRepository.accessors.clear();\n    }\n    /**\n     * Checks if accessors is initialized for given dashboard {@link @gooddata/sdk-model#ObjRef}.\n     *\n     * @param dashboard -an {@link @gooddata/sdk-model#ObjRef} of the dashboard, or its id as a string\n     */\n    static isAccessorInitializedForDashboard(dashboard) {\n        const serializedDashboardRef = this.getSerializedDashboardRef(dashboard);\n        const accessor = DashboardStoreAccessorRepository.accessors.get(serializedDashboardRef);\n        return !!(accessor === null || accessor === void 0 ? void 0 : accessor.isDashboardStoreAccessorInitialized());\n    }\n}\nDashboardStoreAccessorRepository.accessors = new Map();\nexport { DashboardStoreAccessorRepository };\n//# sourceMappingURL=DashboardStoreAccessorRepository.js.map","// (C) 2022 GoodData Corporation\nimport { DashboardStoreAccessorRepository } from \"./DashboardStoreAccessorRepository.js\";\nimport { idRef, serializeObjRef } from \"@gooddata/sdk-model\";\n/**\n * This `mocked` ID is used as a key under which is the accessor object stored in the instance of the\n * {@link DashboardStoreAccessorRepository}.\n */\nconst DASHBOARD = serializeObjRef(idRef(\"SingleDashboardStoreAccessor_mock_dashboard_id\"));\n/**\n * This singleton class uses {@link DashboardStoreAccessorRepository} to create a store accessor for\n * a single dashboard.\n *\n * @remarks\n * The usage of this singleton is the same as for {@link DashboardStoreAccessorRepository} except functions\n * don't accept any parameters.\n *\n * @public\n */\nexport class SingleDashboardStoreAccessor {\n    /**\n     * Returns a selector for current dashboard.\n     */\n    static getDashboardSelect() {\n        return DashboardStoreAccessorRepository.getAccessorsForDashboard(DASHBOARD).getDashboardSelect();\n    }\n    /**\n     * Returns a dispatch object for current dashboard.\n     */\n    static getDashboardDispatch() {\n        return DashboardStoreAccessorRepository.getAccessorsForDashboard(DASHBOARD).getDashboardDispatch();\n    }\n    /**\n     * Creates a {@link Dashboard#onStateChange} callback for current dashboard.\n     */\n    static getOnChangeHandler() {\n        return DashboardStoreAccessorRepository.getOnChangeHandlerForDashboard(DASHBOARD);\n    }\n    /**\n     * Removes dashboard accessors from {@link DashboardStoreAccessorRepository#accessors} for current dashboard.\n     */\n    static clearAccessor() {\n        DashboardStoreAccessorRepository.clearAccessorForDashboard(DASHBOARD);\n    }\n    /**\n     * Checks if accessors is initialized for current dashboard.\n     */\n    static isAccessorInitialized() {\n        return DashboardStoreAccessorRepository.isAccessorInitializedForDashboard(DASHBOARD);\n    }\n}\n//# sourceMappingURL=SingleDashboardStoreAccessor.js.map","import { isDashboardEvent, isDashboardCommandFailed, isDashboardCommandStarted, } from \"../events/index.js\";\n/**\n * Creates a {@link DashboardEventHandler} instance that will be invoked for any event (event for custom events).\n *\n * @param handler - the actual event handling function\n * @public\n */\nexport function anyEventHandler(handler) {\n    return {\n        eval: () => true,\n        handler,\n    };\n}\n/**\n * Creates a {@link DashboardEventHandler} instance that will be invoked for any dashboard event (i.e. not for custom events).\n *\n * @param handler - the actual event handling function\n * @public\n */\nexport function anyDashboardEventHandler(handler) {\n    return {\n        eval: isDashboardEvent,\n        handler,\n    };\n}\n/**\n * Creates a {@link DashboardEventHandler} instance that will be invoked for one specified event type.\n *\n * @param type - the type of event this handler should trigger for\n * @param handler - the actual event handling function\n * @public\n */\nexport function singleEventTypeHandler(type, handler) {\n    return {\n        eval: (e) => e.type === type,\n        handler,\n    };\n}\n/**\n * Creates a {@link DashboardEventHandler} instance that will be invoked for a DashboardCommandStarted of a particular command.\n *\n * @param type - the type of command the DashboardCommandStarted of which this handler should trigger for\n * @param handler - the actual event handling function\n * @alpha\n */\nexport function commandStartedEventHandler(type, handler) {\n    return {\n        eval: (e) => isDashboardCommandStarted(e) && e.payload.command.type === type,\n        handler,\n    };\n}\n/**\n * Creates a {@link DashboardEventHandler} instance that will be invoked for a DashboardCommandFailed of a particular command.\n *\n * @param type - the type of command the DashboardCommandFailed of which this handler should trigger for\n * @param handler - the actual event handling function\n * @alpha\n */\nexport function commandFailedEventHandler(type, handler) {\n    return {\n        eval: (e) => isDashboardCommandFailed(e) && e.payload.command.type === type,\n        handler,\n    };\n}\n//# sourceMappingURL=eventHandler.js.map","// (C) 2021 GoodData Corporation\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { changeFilterContextSelection } from \"../commands/index.js\";\nimport { newDashboardEventPredicate } from \"../events/index.js\";\n/**\n * Event handler with the default implementation for drill to the same dashboard.\n *\n * When {@link DashboardDrillToDashboardResolved} event is fired and contains dashboard ref that matches the provided dashboard ref,\n * or dashboard ref in the event is missing, it sets relevant drill intersection filters to the current dashboard.\n *\n * Note that only filters that are already stored in the dashboard filter context will be applied\n * (attribute filters that are not visible in the filter bar will not be applied).\n *\n * @alpha\n * @param dashboardRef - reference to the current dashboard\n * @returns event handler\n */\nexport const newDrillToSameDashboardHandler = (dashboardRef) => ({\n    eval: newDashboardEventPredicate(\"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.RESOLVED\", (e) => !e.payload.drillDefinition.target ||\n        areObjRefsEqual(e.payload.drillDefinition.target, dashboardRef)),\n    handler: (event, dispatch) => {\n        dispatch(changeFilterContextSelection(event.payload.filters));\n    },\n});\n//# sourceMappingURL=drillToSameDashboardHandlerFactory.js.map","// (C) 2022 GoodData Corporation\nimport noop from \"lodash/noop.js\";\nimport { createDashboardStore } from \"../store/dashboardStore.js\";\nimport { queryEnvelopeWithPromise } from \"../store/_infra/queryProcessing.js\";\n/**\n * @internal\n */\nexport class HeadlessDashboard {\n    constructor(ctx, config) {\n        this.monitoredActions = {};\n        this.capturedActions = [];\n        this.capturedEvents = [];\n        this.getOrCreateMonitoredAction = (actionType) => {\n            const existingAction = this.monitoredActions[actionType];\n            if (existingAction) {\n                return existingAction;\n            }\n            const partialAction = {\n                calls: 0,\n                resolve: noop,\n                reject: noop,\n            };\n            const promise = new Promise((resolve, reject) => {\n                partialAction.resolve = resolve;\n                partialAction.reject = reject;\n            });\n            const newAction = Object.assign(Object.assign({}, partialAction), { promise });\n            this.monitoredActions[actionType] = newAction;\n            return newAction;\n        };\n        this.onActionCaptured = (action) => {\n            this.capturedActions.push(action);\n            const monitoredAction = this.getOrCreateMonitoredAction(action.type);\n            monitoredAction.calls += 1;\n            monitoredAction.resolve(action);\n        };\n        this.eventHandler = (evt) => {\n            this.capturedEvents.push(evt);\n        };\n        this.commandFailedRejectsWaitFor = () => {\n            const commandFailed = this.getOrCreateMonitoredAction(\"GDC.DASH/EVT.COMMAND.FAILED\");\n            return commandFailed.promise.then((evt) => {\n                console.error(`Command processing failed: ${evt.payload.reason} - ${evt.payload.message}`);\n                throw evt.payload.error;\n            });\n        };\n        this.commandRejectedEndsWaitFor = () => {\n            const commandRejected = this.getOrCreateMonitoredAction(\"GDC.DASH/EVT.COMMAND.REJECTED\");\n            return commandRejected.promise.then((evt) => {\n                console.error(\"Command was rejected because dashboard does not know how to handle it. \" +\n                    \"This is likely because the handler for the rejected command is not registered in the system. See root command handler.\");\n                throw evt;\n            });\n        };\n        // Middleware to store the actions and create promises\n        const actionsMiddleware = () => (next) => (action) => {\n            if (action.type.startsWith(\"@@redux/\")) {\n                //\n            }\n            else {\n                this.onActionCaptured(action);\n            }\n            return next(action);\n        };\n        this.reduxedStore = createDashboardStore({\n            dashboardContext: ctx,\n            additionalMiddleware: actionsMiddleware,\n            eventing: {\n                initialEventHandlers: [\n                    {\n                        eval: () => true,\n                        handler: this.eventHandler,\n                    },\n                ],\n            },\n            queryServices: config === null || config === void 0 ? void 0 : config.queryServices,\n            backgroundWorkers: (config === null || config === void 0 ? void 0 : config.backgroundWorkers) || [],\n            privateContext: config === null || config === void 0 ? void 0 : config.customizationFns,\n            initialRenderMode: \"view\",\n        });\n    }\n    dispatch(action) {\n        /*\n         * Clearing monitored actions is essential to allow sane usage in tests that need fire a command and wait\n         * for the same type of event multiple times. Monitored actions is what is used to wait in the `waitFor`\n         * method. Without the clearing, the second `waitFor` would bail out immediately and return the very first\n         * captured event.\n         */\n        this.monitoredActions = {};\n        this.reduxedStore.store.dispatch(action);\n    }\n    /**\n     * Convenience function that combines both {@link HeadlessDashboard.dispatch} and {@link HeadlessDashboard.waitFor}.\n     *\n     * @param action - action (typically a command) to dispatch\n     * @param actionType - type of action (typically an event type) to wait for\n     * @param timeout - timeout after which the wait fails, default is 1000\n     */\n    dispatchAndWaitFor(action, actionType, timeout = 1000) {\n        this.dispatch(action);\n        return this.waitFor(actionType, timeout);\n    }\n    /**\n     * Starts a dashboard query.\n     *\n     * @param action - query action\n     */\n    query(action) {\n        const { envelope, promise } = queryEnvelopeWithPromise(action);\n        this.reduxedStore.store.dispatch(envelope);\n        return promise;\n    }\n    /**\n     * Wait for action to occur. The wait is bounded by a timeout that is 1s by default.\n     *\n     * @param actionType - action type to wait for\n     * @param timeout - timeout after which the wait fails, default is 1000\n     */\n    waitFor(actionType, timeout = 1000) {\n        const includeErrorHandler = actionType !== \"GDC.DASH/EVT.COMMAND.FAILED\";\n        return Promise.race([\n            this.getOrCreateMonitoredAction(actionType).promise,\n            ...(includeErrorHandler ? [this.commandFailedRejectsWaitFor()] : []),\n            this.commandRejectedEndsWaitFor(),\n            new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new Error(`Wait for action '${actionType}' timed out after ${timeout}ms`));\n                }, timeout);\n            }),\n        ]);\n    }\n    /**\n     * select data from the state\n     */\n    select(selectorFactory) {\n        return selectorFactory(this.state());\n    }\n    /**\n     * Returns dashboard state.\n     */\n    state() {\n        return this.reduxedStore.store.getState();\n    }\n}\n//# sourceMappingURL=HeadlessDashboard.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardSelector, selectRenderMode } from \"../../model/index.js\";\n/**\n * Returns a component that wraps components for different render modes and automatically chooses the correct one.\n * If component for current render mode is not defined, component for \"view\" mode is used.\n *\n * @param components - the components to choose from\n * @internal\n */\nexport function renderModeAware(components) {\n    return function RenderModeAware(props) {\n        var _a;\n        const renderMode = useDashboardSelector(selectRenderMode);\n        const Component = (_a = components[renderMode]) !== null && _a !== void 0 ? _a : components[\"view\"];\n        return React.createElement(Component, Object.assign({}, props));\n    };\n}\n//# sourceMappingURL=renderModeAware.js.map","// (C) 2022 GoodData Corporation\n/**\n * When stacking the overlays, next overlay is going to have an z-index higher by 1.\n */\nconst Z_INDEX_STEP = 1;\nconst DEFAULT_INIT_Z_INDEX = 5001;\n/**\n * Overlay stacking controller.\n *\n * @internal\n */\nexport class OverlayController {\n    constructor(initialZIndex = DEFAULT_INIT_Z_INDEX) {\n        this.initialZIndex = DEFAULT_INIT_Z_INDEX;\n        this.overlays = new Map();\n        this.initialZIndex = initialZIndex;\n    }\n    static getInstance(initialZIndex = DEFAULT_INIT_Z_INDEX) {\n        return new OverlayController(initialZIndex);\n    }\n    /**\n     * Adds the overlay record to the map.\n     *\n     * @param uuid - given overlay uuid.\n     */\n    addOverlay(uuid) {\n        const maxIndex = this.getMaxZIndex();\n        this.overlays.set(uuid, maxIndex + Z_INDEX_STEP);\n    }\n    /**\n     * Get maximum z-Index from current opened overlays\n     * @returns\n     */\n    getMaxZIndex() {\n        let maxIndex = 0;\n        this.overlays.forEach((value) => {\n            maxIndex = Math.max(maxIndex, value);\n        });\n        return maxIndex || this.initialZIndex;\n    }\n    /**\n     * Getter for z-index of the given overlay.\n     *\n     * @remarks\n     * If the entry in the overlays map is not available, the initial z-index is used.\n     *\n     * @param uuid - unique identifier of the overlay.\n     * @returns\n     */\n    getZIndex(uuid) {\n        return this.overlays.get(uuid) || this.initialZIndex;\n    }\n    /**\n     * Removes given overlay from the overlays map.\n     *\n     * @param uuid - unique identifier of the overlay\n     */\n    removeOverlay(uuid) {\n        this.overlays.delete(uuid);\n    }\n}\n//# sourceMappingURL=OverlayController.js.map","// (C) 2021 GoodData Corporation\nimport React, { createContext, useCallback, useContext, useMemo, useState } from \"react\";\nimport noop from \"lodash/noop.js\";\nconst ExportDialogContext = createContext({\n    isOpen: false,\n    dialogConfig: {},\n    closeDialog: noop,\n    openDialog: noop,\n});\n/**\n * @internal\n */\nexport const useExportDialogContext = () => {\n    return useContext(ExportDialogContext);\n};\n/**\n * @internal\n */\nexport const ExportDialogContextProvider = ({ children }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [dialogConfig, setDialogConfig] = useState({});\n    const openDialog = useCallback((config = {}) => {\n        setIsOpen(true);\n        setDialogConfig(config);\n    }, []);\n    const closeDialog = useCallback(() => {\n        setIsOpen(false);\n    }, []);\n    const contextValue = useMemo(() => ({ isOpen, dialogConfig, openDialog, closeDialog }), [isOpen, dialogConfig, openDialog, closeDialog]);\n    return React.createElement(ExportDialogContext.Provider, { value: contextValue }, children);\n};\n//# sourceMappingURL=ExportDialogContext.js.map","import { __rest } from \"tslib\";\n// (C) 2019-2022 GoodData Corporation\nimport React, { createContext, useContext } from \"react\";\n/**\n * @internal\n */\nconst DashboardCustomizationsContext = createContext({});\nDashboardCustomizationsContext.displayName = \"DashboardCustomizationsContext\";\n/**\n * @internal\n */\nexport const useDashboardCustomizationsContext = (localCustomizationOverrides) => {\n    const globalCustomizations = useContext(DashboardCustomizationsContext);\n    return Object.assign(Object.assign({}, globalCustomizations), localCustomizationOverrides);\n};\n/**\n * @internal\n */\nexport function DashboardCustomizationsProvider(props) {\n    const { children } = props, components = __rest(props, [\"children\"]);\n    return (React.createElement(DashboardCustomizationsContext.Provider, { value: components }, children));\n}\n//# sourceMappingURL=DashboardCustomizationsContext.js.map","import { __rest } from \"tslib\";\n// (C) 2019-2023 GoodData Corporation\nimport React, { createContext, useContext } from \"react\";\nimport { ErrorComponent, LoadingComponent, UnexpectedSdkError, } from \"@gooddata/sdk-ui\";\nconst ThrowMissingComponentError = (componentName) => () => {\n    throw new UnexpectedSdkError(`Component: ${componentName} is missing in the DashboardComponentsProvider.`);\n};\n/**\n * @internal\n */\nconst DashboardComponentsContext = createContext({\n    ErrorComponent: ErrorComponent,\n    LoadingComponent: LoadingComponent,\n    LayoutComponent: ThrowMissingComponentError(\"LayoutComponent\"),\n    InsightComponentProvider: ThrowMissingComponentError(\"InsightComponent\"),\n    InsightBodyComponentProvider: ThrowMissingComponentError(\"InsightBodyComponent\"),\n    InsightMenuButtonComponentProvider: ThrowMissingComponentError(\"InsightMenuButtonComponent\"),\n    InsightMenuComponentProvider: ThrowMissingComponentError(\"InsightMenuComponent\"),\n    InsightMenuTitleComponentProvider: ThrowMissingComponentError(\"InsightMenuTitleComponent\"),\n    KpiComponentProvider: ThrowMissingComponentError(\"KpiComponent\"),\n    WidgetComponentProvider: ThrowMissingComponentError(\"WidgetComponent\"),\n    ButtonBarComponent: ThrowMissingComponentError(\"ButtonBarComponent\"),\n    MenuButtonComponent: ThrowMissingComponentError(\"MenuButtonComponent\"),\n    TitleComponent: ThrowMissingComponentError(\"TitleComponent\"),\n    TopBarComponent: ThrowMissingComponentError(\"TopBarComponent\"),\n    ToolbarComponent: ThrowMissingComponentError(\"ToolbarComponent\"),\n    ScheduledEmailDialogComponent: ThrowMissingComponentError(\"ScheduledEmailDialogComponent\"),\n    ScheduledEmailManagementDialogComponent: ThrowMissingComponentError(\"ScheduledEmailManagementDialogComponent\"),\n    ShareDialogComponent: ThrowMissingComponentError(\"ShareDialogComponent\"),\n    SaveAsDialogComponent: ThrowMissingComponentError(\"SaveAsDialogComponent\"),\n    DashboardAttributeFilterComponentProvider: ThrowMissingComponentError(\"DashboardAttributeFilterComponentProvider\"),\n    DashboardDateFilterComponentProvider: ThrowMissingComponentError(\"DashboardDateFilterComponentProvider\"),\n    FilterBarComponent: ThrowMissingComponentError(\"FilterBarComponent\"),\n    SidebarComponent: ThrowMissingComponentError(\"SidebarComponent\"),\n    InsightWidgetComponentSet: null,\n    KpiWidgetComponentSet: null,\n    AttributeFilterComponentSet: null,\n    EmptyLayoutDropZoneBodyComponent: ThrowMissingComponentError(\"EmptyLayoutDropZoneBodyComponent\"),\n    SaveButtonComponent: ThrowMissingComponentError(\"SaveButtonComponent\"),\n});\nDashboardComponentsContext.displayName = \"DashboardComponentsContext\";\n/**\n * @internal\n */\nexport const useDashboardComponentsContext = (localComponentOverrides) => {\n    const globalComponents = useContext(DashboardComponentsContext);\n    // cannot just spread here, we only want to use overrides that are not undefined\n    return Object.keys(globalComponents).reduce((acc, key) => {\n        var _a;\n        acc[key] = (_a = localComponentOverrides === null || localComponentOverrides === void 0 ? void 0 : localComponentOverrides[key]) !== null && _a !== void 0 ? _a : globalComponents[key];\n        return acc;\n    }, {});\n};\n/**\n * @internal\n */\nexport function DashboardComponentsProvider(props) {\n    const { children } = props, components = __rest(props, [\"children\"]);\n    return (React.createElement(DashboardComponentsContext.Provider, { value: components }, children));\n}\n//# sourceMappingURL=DashboardComponentsContext.js.map","import { __rest } from \"tslib\";\n// (C) 2021 GoodData Corporation\nimport React, { createContext, useContext } from \"react\";\nconst DashboardConfigContext = createContext({\n    menuButtonConfig: {},\n});\nDashboardConfigContext.displayName = \"DashboardConfigContext\";\n/**\n * Context for all the dashboard level configuration of the presentation components.\n * @alpha\n */\nexport const useDashboardConfigContext = () => {\n    return useContext(DashboardConfigContext);\n};\n/**\n * @internal\n */\nexport const DashboardConfigProvider = (props) => {\n    const { children } = props, components = __rest(props, [\"children\"]);\n    return React.createElement(DashboardConfigContext.Provider, { value: components }, children);\n};\n//# sourceMappingURL=DashboardConfigContext.js.map","// (C) 2022 GoodData Corporation\nexport const DEBUG_SHOW_DROP_ZONES = false;\nexport function getDropZoneDebugStyle({ isOver = false }) {\n    if (!DEBUG_SHOW_DROP_ZONES) {\n        return {};\n    }\n    return isOver\n        ? { backgroundColor: \"rgba(0, 255, 0, 0.4)\" }\n        : { backgroundColor: \"rgba(0, 255, 0, 0.08)\" };\n}\n//# sourceMappingURL=debug.js.map","/**\n * @internal\n */\nexport function isDraggableInternalItemType(type) {\n    return type === \"internal-width-resizer\" || type === \"internal-height-resizer\";\n}\n/**\n * @internal\n */\nexport function isAttributeFilterDraggableItem(item) {\n    return item.type === \"attributeFilter\";\n}\n/**\n * @internal\n */\nexport function isBaseDraggableLayoutItem(item) {\n    var _a, _b;\n    return ((_a = item.size) === null || _a === void 0 ? void 0 : _a.gridWidth) !== undefined && ((_b = item.size) === null || _b === void 0 ? void 0 : _b.gridHeight) !== undefined;\n}\n/**\n * @internal\n */\nexport function isBaseDraggableMovingItem(item) {\n    return isBaseDraggableLayoutItem(item) && item.sectionIndex !== undefined && item.itemIndex !== undefined;\n}\n/**\n * @internal\n */\nexport function isInsightDraggableItem(item) {\n    return item.type === \"insight\";\n}\n/**\n * @internal\n */\nexport function isKpiDraggableItem(item) {\n    return item.type === \"kpi\";\n}\n/**\n * @internal\n */\nexport function isAttributeFilterPlaceholderDraggableItem(item) {\n    return item.type === \"attributeFilter-placeholder\";\n}\n/**\n * @internal\n */\nexport function isKpiPlaceholderDraggableItem(item) {\n    return item.type === \"kpi-placeholder\";\n}\n/**\n * @internal\n */\nexport function isInsightPlaceholderDraggableItem(item) {\n    return item.type === \"insight-placeholder\";\n}\n/**\n * @internal\n */\nexport function isInsightDraggableListItem(item) {\n    return item.type === \"insightListItem\";\n}\n//# sourceMappingURL=types.js.map","// (C) 2022 GoodData Corporation\nimport { useDrop } from \"react-dnd\";\nconst basicDropCollect = (monitor) => ({\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType(),\n    item: monitor.getItem(),\n});\nclass BasicDropCollectTypeWrapper {\n    constructor() {\n        this.basicDropCollect = (...args) => basicDropCollect(...args);\n    }\n}\nexport function useDashboardDrop(draggableItemTypes, specArg, deps) {\n    return useDrop({\n        accept: draggableItemTypes,\n        drop: specArg.drop,\n        canDrop: specArg.canDrop,\n        collect: basicDropCollect,\n        hover: specArg.hover,\n    }, deps);\n}\n//# sourceMappingURL=useDashboardDrop.js.map","// (C) 2022 GoodData Corporation\nimport cx from \"classnames\";\nimport React from \"react\";\nimport { moveAttributeFilter, useDashboardDispatch } from \"../../../model/index.js\";\nimport { getDropZoneDebugStyle } from \"../debug.js\";\nimport { isAttributeFilterDraggableItem, isAttributeFilterPlaceholderDraggableItem } from \"../types.js\";\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nfunction getIgnoreIndexes(placement, position, targetIndex) {\n    if (placement === \"outside\") {\n        return position === \"next\" ? [targetIndex] : [targetIndex - 1];\n    }\n    if (position === \"next\") {\n        return [targetIndex, targetIndex + 1];\n    }\n    return [targetIndex, targetIndex - 1];\n}\nexport function AttributeFilterDropZoneHint({ placement = \"inside\", hintPosition, targetIndex, acceptPlaceholder = true, onAddAttributePlaceholder, }) {\n    const dispatch = useDashboardDispatch();\n    const inactiveIndexes = getIgnoreIndexes(placement, hintPosition, targetIndex);\n    const [{ canDrop, isOver }, dropRef] = useDashboardDrop(acceptPlaceholder ? [\"attributeFilter\", \"attributeFilter-placeholder\"] : \"attributeFilter\", {\n        canDrop: (item) => {\n            if (isAttributeFilterDraggableItem(item)) {\n                return !inactiveIndexes.includes(item.filterIndex);\n            }\n            return isAttributeFilterPlaceholderDraggableItem(item);\n        },\n        drop: (item) => {\n            const targetIndexPositionCorrection = placement === \"inside\" && hintPosition === \"next\" ? 1 : 0;\n            if (isAttributeFilterDraggableItem(item)) {\n                const identifier = item.filter.attributeFilter.localIdentifier;\n                const originalIndex = item.filterIndex;\n                const originalPositionCorrection = originalIndex < targetIndex ? -1 : 0;\n                const index = targetIndex + targetIndexPositionCorrection + originalPositionCorrection;\n                dispatch(moveAttributeFilter(identifier, index));\n            }\n            if (isAttributeFilterPlaceholderDraggableItem(item) && onAddAttributePlaceholder) {\n                const index = targetIndex + targetIndexPositionCorrection;\n                return onAddAttributePlaceholder(index);\n            }\n        },\n    }, [inactiveIndexes, targetIndex, placement, hintPosition]);\n    const isActive = canDrop && isOver;\n    const isHidden = !canDrop;\n    const className = cx(\"attr-filter-dropzone\", hintPosition, {\n        outside: placement === \"outside\",\n        hidden: isHidden,\n    });\n    const debugStyle = getDropZoneDebugStyle({ isOver });\n    return (React.createElement(\"div\", { className: className, style: debugStyle, ref: dropRef }, isActive ? React.createElement(\"div\", { className: \"drop-hint\" }) : null));\n}\n//# sourceMappingURL=AttributeFilterDropZoneHint.js.map","// (C) 2022-2023 GoodData Corporation\nimport throttle from \"lodash/throttle.js\";\nconst fireGoodstrapDragEvent = (node, windowInstance = { dispatchEvent: (_event) => true }) => {\n    windowInstance.dispatchEvent(new CustomEvent(\"goodstrap.drag\", {\n        // this will close dropdowns with closeOnMouseDrag=true\n        bubbles: true,\n        detail: {\n            node,\n        },\n    }));\n};\n/**\n * This is custom dom goodstrap event, it is used by Overlay to handle CloseOnParentDrag\n * This event is throttled by default\n * @internal\n */\nexport const handleOnGoodstrapDragEvent = throttle(() => fireGoodstrapDragEvent(document.body, window), 500);\n//# sourceMappingURL=drag.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { handleOnGoodstrapDragEvent } from \"@gooddata/sdk-ui-kit\";\n/**\n * Fire global goodstrap event to close overlays before DnD start,\n * sanitization of placeholders in layout is managed by components itself.\n */\nconst useGlobalGoodstrapEvent = () => {\n    return useCallback(() => {\n        handleOnGoodstrapDragEvent();\n    }, []);\n};\n/**\n * This hook provide global goodstrap event to close overlays\n * @internal\n */\nexport const useBeforeDrag = () => {\n    const fireGlobalEvent = useGlobalGoodstrapEvent();\n    return useCallback(() => {\n        fireGlobalEvent();\n    }, [fireGlobalEvent]);\n};\n//# sourceMappingURL=useBeforeDrag.js.map","// (C) 2022-2023 GoodData Corporation\nimport { useDrag } from \"react-dnd\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport isFunction from \"lodash/isFunction.js\";\nimport { useBeforeDrag } from \"./useBeforeDrag.js\";\nfunction basicDragCollect(monitor) {\n    return {\n        isDragging: monitor.isDragging(),\n        item: monitor.getItem(),\n    };\n}\nexport function useDashboardDrag({ dragItem, canDrag = true, hideDefaultPreview = true, dragEnd, dragStart, }, deps = []) {\n    const [collectedProps, dragRef, dragPreviewRef] = useDrag(() => {\n        const item = isFunction(dragItem) ? dragItem() : dragItem;\n        return {\n            type: item.type,\n            item: dragItem,\n            collect: basicDragCollect,\n            canDrag,\n            end: dragEnd,\n        };\n    }, deps);\n    const beforeDrag = useBeforeDrag();\n    const onInternalDragStart = useCallback((item) => {\n        beforeDrag();\n        if (dragStart) {\n            dragStart(item);\n        }\n    }, [dragStart, beforeDrag]);\n    const hasHandledStart = useRef(false);\n    useEffect(() => {\n        if (collectedProps.isDragging) {\n            if (!hasHandledStart.current) {\n                const item = isFunction(dragItem) ? dragItem() : dragItem;\n                hasHandledStart.current = true;\n                onInternalDragStart(item);\n            }\n        }\n        else {\n            hasHandledStart.current = false;\n        }\n    }, [collectedProps.isDragging, onInternalDragStart, dragItem]);\n    useEffect(() => {\n        if (hideDefaultPreview) {\n            // this is the way how to hide native drag preview, custom preview is rendered by DragLayer\n            dragPreviewRef(getEmptyImage(), { captureDraggingState: false });\n        }\n    }, [dragPreviewRef, hideDefaultPreview]);\n    return [collectedProps, dragRef];\n}\n//# sourceMappingURL=useDashboardDrag.js.map","// (C) 2022 GoodData Corporation\nimport { isAttributeElementsByRef, isAttributeElementsByValue, } from \"@gooddata/sdk-model\";\n// In KD, filter is always \"uri\" based. This is also way, how it's currently saved on panther/tiger (even though uris are actually values).\n// In the past, we were relying on the fact, that tiger/panther does not support multiple labels and uri was always equal to the title.\n// This is not correct anymore, so we need to send them as values also to AttributeFilter.\n// When we are converting it back to \"backend\" shape, we need to preserve the previous expectations/behavior.\nexport function convertDashboardAttributeFilterElementsValuesToUris(filter) {\n    if (isAttributeElementsByRef(filter.attributeFilter.attributeElements)) {\n        return filter;\n    }\n    return {\n        attributeFilter: Object.assign(Object.assign({}, filter.attributeFilter), { attributeElements: {\n                uris: filter.attributeFilter.attributeElements.values,\n            } }),\n    };\n}\n// In KD, filter is always \"uri\" based. This is also way, how it's currently saved on panther/tiger (even though uris are actually values).\n// In the past, we were relying on the fact, that tiger/panther does not support multiple labels and uri was always equal to the title.\n// This is not correct anymore, so we need to send them as values also to AttributeFilter.\nexport function convertDashboardAttributeFilterElementsUrisToValues(filter) {\n    if (isAttributeElementsByValue(filter.attributeFilter.attributeElements)) {\n        return filter;\n    }\n    return {\n        attributeFilter: Object.assign(Object.assign({}, filter.attributeFilter), { attributeElements: {\n                values: filter.attributeFilter.attributeElements.uris,\n            } }),\n    };\n}\n//# sourceMappingURL=legacyFilterConvertors.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport { useDashboardSelector, selectIsInEditMode, selectSupportsElementUris, selectCanAddMoreAttributeFilters, } from \"../../../model/index.js\";\nimport { AttributeFilterDropZoneHint } from \"./AttributeFilterDropZoneHint.js\";\nimport { useDashboardDrag } from \"../useDashboardDrag.js\";\nimport { convertDashboardAttributeFilterElementsUrisToValues } from \"../../../_staging/dashboard/legacyFilterConvertors.js\";\nexport function DraggableAttributeFilter({ FilterComponent, filter, filterIndex, autoOpen, onAttributeFilterChanged, onAttributeFilterAdded, onAttributeFilterClose, }) {\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const [{ isDragging }, dragRef] = useDashboardDrag({\n        dragItem: {\n            type: \"attributeFilter\",\n            filter,\n            filterIndex,\n        },\n        canDrag: isInEditMode,\n    }, [filter, filterIndex, isInEditMode]);\n    const supportElementUris = useDashboardSelector(selectSupportsElementUris);\n    const canAddMoreAttributeFilters = useDashboardSelector(selectCanAddMoreAttributeFilters);\n    const filterToUse = useMemo(() => {\n        if (supportElementUris) {\n            return filter;\n        }\n        return convertDashboardAttributeFilterElementsUrisToValues(filter);\n    }, [filter, supportElementUris]);\n    const onClose = useCallback(() => {\n        onAttributeFilterClose();\n    }, [onAttributeFilterClose]);\n    const showDropZones = isInEditMode && !isDragging;\n    return (React.createElement(\"div\", { className: \"draggable-attribute-filter\" },\n        showDropZones ? (React.createElement(AttributeFilterDropZoneHint, { hintPosition: \"prev\", targetIndex: filterIndex, onAddAttributePlaceholder: onAttributeFilterAdded, acceptPlaceholder: canAddMoreAttributeFilters })) : null,\n        React.createElement(\"div\", { className: classNames(\"dash-filters-notdate\", \"dash-filters-attribute\", {\n                \"dash-filter-is-edit-mode\": isInEditMode,\n                \"is-dragging\": isDragging,\n            }), ref: dragRef },\n            React.createElement(FilterComponent, { filter: filterToUse, onFilterChanged: onAttributeFilterChanged, isDraggable: isInEditMode, autoOpen: autoOpen, onClose: onClose })),\n        showDropZones ? (React.createElement(AttributeFilterDropZoneHint, { hintPosition: \"next\", targetIndex: filterIndex, onAddAttributePlaceholder: onAttributeFilterAdded, acceptPlaceholder: canAddMoreAttributeFilters })) : null));\n}\n//# sourceMappingURL=DraggableAttributeFilter.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger, Icon } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nimport { useDashboardSelector, selectIsInEditMode } from \"../../../model/index.js\";\nimport { getDropZoneDebugStyle } from \"../debug.js\";\nexport function AttributeFilterDropZone({ targetIndex, onDrop }) {\n    var _a, _b;\n    const theme = useTheme();\n    const isEditMode = useDashboardSelector(selectIsInEditMode);\n    const [{ canDrop, isOver, itemType }, dropRef] = useDashboardDrop([\"attributeFilter\", \"attributeFilter-placeholder\"], {\n        drop: () => onDrop(targetIndex),\n    }, [targetIndex]);\n    const isDraggingAttribute = itemType !== undefined && itemType === \"attributeFilter\";\n    if (!isEditMode || isDraggingAttribute) {\n        return null;\n    }\n    const isActive = canDrop || isOver;\n    const dropzoneClassNames = cx(\"attr-filter-dropzone-box\", \"s-last-filter-drop-position\", \"s-attr-filter-dropzone-box\", { \"attr-filter-dropzone-box-active\": isActive }, { \"attr-filter-dropzone-box-over\": isOver });\n    const debugStyle = getDropZoneDebugStyle({ isOver });\n    return (React.createElement(\"div\", { className: \"attr-filter-dropzone-box-outer\", style: debugStyle, ref: dropRef }, isActive ? (React.createElement(\"div\", { className: dropzoneClassNames },\n        React.createElement(\"div\", { className: \"attr-filter-dropzone-box-inner\" },\n            React.createElement(FormattedMessage, { id: \"filterBar.filter.drop\" })))) : (React.createElement(BubbleHoverTrigger, null,\n        React.createElement(\"div\", { className: dropzoneClassNames },\n            React.createElement(\"div\", { className: \"attr-filter-dropzone-box-inner\" },\n                React.createElement(FormattedMessage, { id: \"filterBar.filter.addFilterPlaceholder\", values: {\n                        icon: (React.createElement(Icon.AttributeFilter, { className: \"attribute-filter-icon\", width: 14, height: 14, color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c6 })),\n                    } }))),\n        React.createElement(Bubble, { alignPoints: [{ align: \"bc tc\", offset: { x: 0, y: 0 } }] },\n            React.createElement(FormattedMessage, { id: \"filterBar.filter.dropzone.tooltip\" }))))));\n}\n//# sourceMappingURL=AttributeFilterDropZone.js.map","// (C) 2021 GoodData Corporation\n/**\n * This implementation of dashboard date filter keeps the filter hidden out of sight. The attribute filter itself\n * will still be in effect.\n *\n * @alpha\n */\nexport const HiddenDashboardDateFilter = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenDashboardDateFilter.js.map","// (C) 2007-2022 GoodData Corporation\nimport merge from \"lodash/merge.js\";\nimport { messagesMap as sdkUiTranslations } from \"@gooddata/sdk-ui\";\nimport { translationUtils } from \"@gooddata/util\";\nimport enUS from \"./bundles/en-US.json\";\nimport deDE from \"./bundles/de-DE.json\";\nimport esES from \"./bundles/es-ES.json\";\nimport frFR from \"./bundles/fr-FR.json\";\nimport jaJP from \"./bundles/ja-JP.json\";\nimport nlNL from \"./bundles/nl-NL.json\";\nimport ptBR from \"./bundles/pt-BR.json\";\nimport ptPT from \"./bundles/pt-PT.json\";\nimport zhHans from \"./bundles/zh-Hans.json\";\nimport ruRU from \"./bundles/ru-RU.json\";\nconst sdkUiDashboardTranslations = {\n    \"en-US\": translationUtils.removeMetadata(enUS),\n    \"de-DE\": deDE,\n    \"es-ES\": esES,\n    \"fr-FR\": frFR,\n    \"ja-JP\": jaJP,\n    \"nl-NL\": nlNL,\n    \"pt-BR\": ptBR,\n    \"pt-PT\": ptPT,\n    \"zh-Hans\": zhHans,\n    \"ru-RU\": ruRU,\n};\n/**\n * @internal\n */\nexport const translations = merge({}, \n// we also need the sdk-ui translations\nsdkUiTranslations, sdkUiDashboardTranslations);\n//# sourceMappingURL=translations.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { DefaultLocale, TranslationsCustomizationProvider, } from \"@gooddata/sdk-ui\";\nimport { translations } from \"./translations.js\";\nconst formats = {\n    time: {\n        hhmm: {\n            hour: \"numeric\",\n            minute: \"2-digit\",\n        },\n    },\n    date: {\n        shortWithoutYear: {\n            day: \"numeric\",\n            month: \"short\",\n        },\n        shortWithYear: {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\",\n        },\n    },\n};\n/**\n * @internal\n */\nexport const IntlWrapper = ({ children, locale = DefaultLocale }) => {\n    const render = useCallback((modifiedTranslations) => (React.createElement(IntlProvider, { locale: locale, messages: modifiedTranslations, formats: formats }, children)), [locale, children]);\n    return React.createElement(TranslationsCustomizationProvider, { translations: translations[locale], render: render });\n};\n//# sourceMappingURL=IntlWrapper.js.map","// (C) 2022 GoodData Corporation\nexport const DEFAULT_COLUMN_CLIENT_WIDTH = 100;\nexport const DEFAULT_WIDTH_RESIZER_HEIGHT = 300;\nexport const emptyDOMRect = {\n    x: 0,\n    y: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 0,\n    width: 0,\n};\n//# sourceMappingURL=constants.js.map","// (C) 2022 GoodData Corporation\nimport React, { createContext, useCallback, useContext, useRef, useState } from \"react\";\nimport noop from \"lodash/noop.js\";\nimport { emptyDOMRect } from \"../layout/constants.js\";\nconst initState = {\n    resizeDirection: \"none\",\n    resizeItemIdentifiers: [],\n    heightLimitReached: \"none\",\n    widthState: null,\n    initialDashboardDimensions: emptyDOMRect,\n};\nconst LayoutResizeStateContext = createContext({\n    resizeDirection: \"none\",\n    resizeItemIdentifiers: [],\n    heightLimitReached: \"none\",\n    widthState: null,\n    initialDashboardDimensions: emptyDOMRect,\n    resizeStart: noop,\n    resizeEnd: noop,\n    setScrollCorrection: noop,\n    getScrollCorrection: () => ({ x: 0, y: 0 }),\n    setWidthState: noop,\n    toggleHeightLimitReached: noop,\n});\nexport function LayoutResizeStateProvider({ children }) {\n    const scrollingCorrectionRef = useRef({ x: 0, y: 0 });\n    const [resizeState, setResizeState] = useState(initState);\n    const resizeStart = useCallback((direction, identifiers, getDashboardDimensions) => {\n        setResizeState({\n            heightLimitReached: \"none\",\n            initialDashboardDimensions: getDashboardDimensions ? getDashboardDimensions() : emptyDOMRect,\n            resizeDirection: direction,\n            resizeItemIdentifiers: identifiers,\n            widthState: null,\n        });\n    }, []);\n    const toggleHeightLimitReached = useCallback((heightLimitReached) => {\n        setResizeState((state) => (Object.assign(Object.assign({}, state), { heightLimitReached })));\n    }, []);\n    const setWidthState = useCallback((widthState) => {\n        setResizeState((state) => (Object.assign(Object.assign({}, state), { widthState })));\n    }, []);\n    const setScrollCorrection = useCallback((scrollCorrection) => {\n        scrollingCorrectionRef.current = scrollCorrection;\n    }, []);\n    const getScrollCorrection = useCallback(() => {\n        return scrollingCorrectionRef.current;\n    }, []);\n    const resizeEnd = useCallback(() => {\n        setResizeState(initState);\n    }, []);\n    return (React.createElement(LayoutResizeStateContext.Provider, { value: Object.assign(Object.assign({}, resizeState), { resizeStart,\n            resizeEnd,\n            setScrollCorrection,\n            getScrollCorrection,\n            setWidthState,\n            toggleHeightLimitReached }) }, children));\n}\nexport function useResizeContext() {\n    return useContext(LayoutResizeStateContext);\n}\nexport function useResizeHandlers() {\n    const context = useResizeContext();\n    return {\n        resizeStart: context.resizeStart,\n        toggleHeightLimitReached: context.toggleHeightLimitReached,\n        resizeEnd: context.resizeEnd,\n        setWidthState: context.setWidthState,\n        setScrollCorrection: context.setScrollCorrection,\n        getScrollCorrection: context.getScrollCorrection,\n    };\n}\nexport function useResizeItemStatus(identifier) {\n    var _a, _b;\n    const context = useResizeContext();\n    return {\n        isActive: context.resizeItemIdentifiers.includes(identifier),\n        isResizingColumnOrRow: context.resizeDirection !== \"none\",\n        heightLimitReached: context.heightLimitReached,\n        widthLimitReached: (_b = (_a = context.widthState) === null || _a === void 0 ? void 0 : _a.limitReached) !== null && _b !== void 0 ? _b : \"none\",\n        initialDashboardDimensions: context.initialDashboardDimensions,\n    };\n}\nexport function useResizeWidthItemStatus(identifier) {\n    const context = useResizeContext();\n    return {\n        isWidthResizing: context.resizeDirection === \"width\",\n        isActive: context.resizeItemIdentifiers.includes(identifier),\n        widthState: context.widthState,\n    };\n}\nexport function useResizeWidthStatus() {\n    const context = useResizeContext();\n    return Object.assign({ isResizingWidth: context.resizeDirection === \"width\" }, context.widthState);\n}\n//# sourceMappingURL=LayoutResizeContext.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport classnames from \"classnames\";\nexport function Bullet({ isCurrent, isInitial, index }) {\n    const bulletStyle = \"gd-resize-bullet s-resize-bullet-\" + index;\n    return (React.createElement(\"div\", { className: bulletStyle },\n        React.createElement(\"svg\", { className: \"gd-resize-bullet-icon\" },\n            React.createElement(\"circle\", { cx: \"3\", cy: \"3\", r: \"3\", className: classnames({\n                    active: isCurrent,\n                    initial: isInitial,\n                    passive: !isCurrent && !isInitial,\n                }) }))));\n}\n//# sourceMappingURL=Bullet.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT } from \"../../../../_staging/dashboard/fluidLayout/config.js\";\nimport { useResizeWidthStatus } from \"../../LayoutResizeContext.js\";\nimport { Bullet } from \"./Bullet.js\";\nconst BULLETS_COUNT = DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT + 1;\nexport function BulletsBar() {\n    const widthResizingStatus = useResizeWidthStatus();\n    if (!widthResizingStatus.isResizingWidth) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"gd-resize-bullets-bar\" }, [...Array(BULLETS_COUNT)].map((_, index) => (React.createElement(Bullet, { key: index, index: index, isInitial: widthResizingStatus.initialIndex === index, isCurrent: widthResizingStatus.currentIndex === index })))));\n}\n//# sourceMappingURL=BulletsBar.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nexport const ShowAllFiltersButton = ({ isVisible, isFilterBarExpanded, onToggle, }) => {\n    if (!isVisible) {\n        return null;\n    }\n    const icon = isFilterBarExpanded ? \"gd-icon-chevron-up\" : \"gd-icon-chevron-down\";\n    return (React.createElement(\"div\", { className: \"show-all\" },\n        React.createElement(\"button\", { className: \"button-filter-bar-show-all\", tabIndex: -1, onClick: () => onToggle(!isFilterBarExpanded) },\n            React.createElement(\"span\", { className: \"gd-button-text gd-label\" },\n                isFilterBarExpanded ? (React.createElement(FormattedMessage, { id: \"filterBar.showLess\" })) : (React.createElement(FormattedMessage, { id: \"filterBar.showAll\" })),\n                React.createElement(\"i\", { className: `gd-button-icon gd-icon ${icon}` })))));\n};\n//# sourceMappingURL=ShowAllFiltersButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useCallback } from \"react\";\nexport const CalculatedRowsDefault = { expandedHeight: 0, collapsedHeight: 0, rows: [] };\nexport function useRowsCalculator(element) {\n    return useCallback((dimensions) => {\n        const current = element.current;\n        //no data yet\n        if (!current || !dimensions.bounds) {\n            return CalculatedRowsDefault;\n        }\n        const { height } = dimensions.bounds;\n        const determinedRows = determineRows(current);\n        const rows = createRows(determinedRows);\n        return { expandedHeight: height, collapsedHeight: rows[0], rows };\n    }, [element]);\n}\nfunction determineRows(element) {\n    const children = Array.prototype.slice.call(element.childNodes);\n    let last = Number.MIN_SAFE_INTEGER;\n    return children.reduce((rows, item) => {\n        const hasWidth = Boolean(item.offsetWidth);\n        //NOTE: If element has no width, it can not basically affect row break\n        // so we can skip it here\n        if (hasWidth) {\n            const lastRow = rows[rows.length - 1];\n            if (item.offsetLeft <= last) {\n                rows.push([item]);\n            }\n            else {\n                lastRow.push(item);\n            }\n            last = item.offsetLeft;\n        }\n        return rows;\n    }, [[]]);\n}\nfunction createRows(determinedRows) {\n    return determinedRows.map((row) => {\n        const itemsHeight = row.map((item) => { var _a; return (_a = item.offsetHeight) !== null && _a !== void 0 ? _a : 0; });\n        return Math.max(...itemsHeight);\n    });\n}\n//# sourceMappingURL=useRowsCalculator.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useRef } from \"react\";\nimport DefaultMeasure from \"react-measure\";\nimport cx from \"classnames\";\nimport { IntlWrapper } from \"../../localization/index.js\";\nimport { selectLocale, useDashboardSelector } from \"../../../model/index.js\";\nimport { BulletsBar } from \"../../dragAndDrop/index.js\";\nimport { ShowAllFiltersButton } from \"./ShowAllFiltersButton.js\";\nimport { useRowsCalculator } from \"./hooks/useRowsCalculator.js\";\nimport { useFilterBarState } from \"./hooks/useFilterBarState.js\";\nimport { useFilterExpansionByDragAndDrop } from \"./hooks/useFilterExpansionByDragAndDrop.js\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Measure = defaultImport(DefaultMeasure);\nconst DefaultFilterBarContainerCore = ({ children }) => {\n    const { rows, height, isFilterBarExpanded, scrollable, setFilterBarExpanded, setCalculatedRows } = useFilterBarState();\n    const dropRef = useFilterExpansionByDragAndDrop(rows.length > 1, isFilterBarExpanded, setFilterBarExpanded);\n    return (React.createElement(\"div\", { className: \"dash-filters-wrapper s-gd-dashboard-filter-bar\", ref: dropRef },\n        React.createElement(\"div\", { style: { height }, className: cx(\"dash-filters-visible\", {\n                scrollable: scrollable,\n                \"s-dash-filters-visible-all\": isFilterBarExpanded,\n            }) },\n            React.createElement(AllFiltersContainer, { setCalculatedRows: setCalculatedRows }, children),\n            React.createElement(FiltersRows, { rows: rows })),\n        React.createElement(ShowAllFiltersButton, { isFilterBarExpanded: isFilterBarExpanded, isVisible: rows.length > 1, onToggle: (isExpanded) => setFilterBarExpanded(isExpanded) }),\n        React.createElement(BulletsBar, null)));\n};\nconst AllFiltersContainer = ({ setCalculatedRows, children }) => {\n    const ref = useRef(null);\n    const rowCalculator = useRowsCalculator(ref);\n    return (React.createElement(Measure, { bounds: true, innerRef: (rf) => (ref.current = rf), onResize: (dimensions) => setCalculatedRows(rowCalculator(dimensions)) }, ({ measureRef }) => (React.createElement(\"div\", { className: \"dash-filters-all\", ref: measureRef }, children))));\n};\nconst FiltersRows = ({ rows }) => {\n    return (React.createElement(React.Fragment, null, rows.length > 1 && (React.createElement(\"div\", { className: \"dash-filters-rows\" }, rows.map((height, index) => (React.createElement(\"div\", { className: \"dash-filters-row\", style: { height }, key: index })))))));\n};\n/**\n * @internal\n */\nexport const DefaultFilterBarContainer = ({ children }) => {\n    const locale = useDashboardSelector(selectLocale);\n    return (React.createElement(IntlWrapper, { locale: locale },\n        React.createElement(DefaultFilterBarContainerCore, null, children)));\n};\n//# sourceMappingURL=DefaultFilterBarContainer.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useState, useEffect } from \"react\";\nimport { CalculatedRowsDefault } from \"./useRowsCalculator.js\";\nimport { useDashboardDispatch, useDashboardSelector, selectFilterBarExpanded, uiActions, } from \"../../../../model/index.js\";\n//NOTE: This 1px is size of border bottom on filter bar\nconst BorderWidth = 1;\n//NOTE: This must be same value as $transition-length\nconst TransitionLength = 200;\nexport function useFilterBarState() {\n    const [calculatedRows, setCalculatedRows] = useState(CalculatedRowsDefault);\n    const { expandedHeight, collapsedHeight, rows } = calculatedRows;\n    const dispatch = useDashboardDispatch();\n    const isFilterBarExpanded = useDashboardSelector(selectFilterBarExpanded);\n    const scrollable = useScrollable(isFilterBarExpanded);\n    const setFilterBarExpanded = (isExpanded) => dispatch(uiActions.setFilterBarExpanded(isExpanded));\n    const innerHeight = isFilterBarExpanded ? expandedHeight : collapsedHeight;\n    return {\n        rows,\n        scrollable,\n        height: innerHeight + BorderWidth,\n        isFilterBarExpanded,\n        setCalculatedRows,\n        setFilterBarExpanded,\n    };\n}\nfunction useScrollable(expanded) {\n    const [scrollable, setScrollable] = useState(false);\n    useEffect(() => {\n        let timer = null;\n        if (expanded) {\n            timer = window.setTimeout(() => setScrollable(true), TransitionLength);\n        }\n        else {\n            setScrollable(false);\n        }\n        return () => {\n            if (timer !== null) {\n                window.clearTimeout(timer);\n            }\n        };\n    }, [expanded]);\n    return scrollable;\n}\n//# sourceMappingURL=useFilterBarState.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useRef } from \"react\";\nimport { useDashboardDrop } from \"../../../dragAndDrop/index.js\";\nexport function useFilterExpansionByDragAndDrop(containsMultipleRows, isFilterBarExpanded, setFilterBarExpanded) {\n    const lastCanDrop = useRef(false);\n    const lastMultiRows = useRef(false);\n    const shouldBeExpandedAfterDrop = useRef(false);\n    const [{ canDrop }, dropRef] = useDashboardDrop([\"attributeFilter\", \"attributeFilter-placeholder\"], {\n        drop: (_, monitor) => {\n            if (monitor.didDrop()) {\n                shouldBeExpandedAfterDrop.current = true;\n            }\n        },\n    }, []);\n    useEffect(() => {\n        const dragStateUnchanged = canDrop === lastCanDrop.current;\n        const multiRowsUnchanged = containsMultipleRows === lastMultiRows.current;\n        if (dragStateUnchanged && multiRowsUnchanged) {\n            return;\n        }\n        if (canDrop && containsMultipleRows) {\n            shouldBeExpandedAfterDrop.current = isFilterBarExpanded;\n            setFilterBarExpanded(true);\n        }\n        else if (shouldBeExpandedAfterDrop.current !== isFilterBarExpanded) {\n            setFilterBarExpanded(shouldBeExpandedAfterDrop.current);\n            shouldBeExpandedAfterDrop.current = false;\n        }\n        lastCanDrop.current = canDrop;\n        lastMultiRows.current = containsMultipleRows;\n    }, [canDrop, containsMultipleRows, isFilterBarExpanded, setFilterBarExpanded]);\n    return dropRef;\n}\n//# sourceMappingURL=useFilterExpansionByDragAndDrop.js.map","/**\n * This implementation of Filter Bar will ensure that all the filter controls are out of sight. All the dashboard\n * filtering is still in place however user cannot see or interact with the filters.\n *\n * @alpha\n */\nexport const HiddenFilterBar = (_props) => {\n    return null;\n};\n//# sourceMappingURL=HiddenFilterBar.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport { invariant } from \"ts-invariant\";\nimport { areObjRefsEqual, objRefToString, } from \"@gooddata/sdk-model\";\nimport { changeAttributeFilterSelection, changeDateFilterSelection, clearDateFilterSelection, selectEffectiveDateFilterAvailableGranularities, selectEffectiveDateFilterMode, selectEffectiveDateFilterOptions, selectEffectiveDateFilterTitle, selectFilterContextFilters, selectIsExport, selectSupportsElementUris, useDashboardDispatch, useDashboardSelector, selectIsInEditMode, selectAttributeFilterDisplayFormsMap, selectCanAddMoreAttributeFilters, } from \"../../../model/index.js\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\nimport { AttributeFilterDropZone, AttributeFilterDropZoneHint, DraggableAttributeFilter, } from \"../../dragAndDrop/index.js\";\nimport { HiddenDashboardDateFilter } from \"../dateFilter/index.js\";\nimport { DefaultFilterBarContainer } from \"./DefaultFilterBarContainer.js\";\nimport { isFilterBarAttributeFilterPlaceholder, useFiltersWithAddedPlaceholder, } from \"./useFiltersWithAddedPlaceholder.js\";\nimport { HiddenFilterBar } from \"./HiddenFilterBar.js\";\nimport { convertDashboardAttributeFilterElementsUrisToValues, convertDashboardAttributeFilterElementsValuesToUris, } from \"../../../_staging/dashboard/legacyFilterConvertors.js\";\n/**\n * @alpha\n */\nexport const useFilterBarProps = () => {\n    const filters = useDashboardSelector(selectFilterContextFilters);\n    const supportElementUris = useDashboardSelector(selectSupportsElementUris);\n    const dispatch = useDashboardDispatch();\n    const onAttributeFilterChanged = useCallback((filter) => {\n        const convertedFilter = supportElementUris\n            ? filter\n            : convertDashboardAttributeFilterElementsValuesToUris(filter);\n        const { attributeElements, negativeSelection, localIdentifier } = convertedFilter.attributeFilter;\n        dispatch(changeAttributeFilterSelection(localIdentifier, attributeElements, negativeSelection ? \"NOT_IN\" : \"IN\"));\n    }, [dispatch, supportElementUris]);\n    const onDateFilterChanged = useCallback((filter, dateFilterOptionLocalId) => {\n        if (!filter) {\n            // all time filter\n            dispatch(clearDateFilterSelection());\n        }\n        else {\n            const { type, granularity, from, to } = filter.dateFilter;\n            dispatch(changeDateFilterSelection(type, granularity, from, to, dateFilterOptionLocalId));\n        }\n    }, [dispatch]);\n    return { filters, onAttributeFilterChanged, onDateFilterChanged, DefaultFilterBar };\n};\n/**\n * @alpha\n */\nexport function DefaultFilterBar(props) {\n    const { filters, onAttributeFilterChanged, onDateFilterChanged } = props;\n    const [{ dateFilter, attributeFiltersWithPlaceholder, attributeFiltersCount, autoOpenFilter }, { addAttributeFilterPlaceholder, closeAttributeSelection, selectAttributeFilter, onCloseAttributeFilter, },] = useFiltersWithAddedPlaceholder(filters);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const customFilterName = useDashboardSelector(selectEffectiveDateFilterTitle);\n    const availableGranularities = useDashboardSelector(selectEffectiveDateFilterAvailableGranularities);\n    const dateFilterOptions = useDashboardSelector(selectEffectiveDateFilterOptions);\n    const dateFilterMode = useDashboardSelector(selectEffectiveDateFilterMode);\n    const isExport = useDashboardSelector(selectIsExport);\n    const { AttributeFilterComponentSet, DashboardDateFilterComponentProvider } = useDashboardComponentsContext();\n    const supportElementUris = useDashboardSelector(selectSupportsElementUris);\n    const displayFormsMap = useDashboardSelector(selectAttributeFilterDisplayFormsMap);\n    const canAddMoreAttributeFilters = useDashboardSelector(selectCanAddMoreAttributeFilters);\n    if (isExport) {\n        return React.createElement(HiddenFilterBar, Object.assign({}, props));\n    }\n    const dateFilterComponentConfig = {\n        availableGranularities,\n        dateFilterOptions,\n        customFilterName,\n    };\n    const CustomDateFilterComponent = DashboardDateFilterComponentProvider(dateFilter);\n    return (React.createElement(DefaultFilterBarContainer, null,\n        React.createElement(\"div\", { className: classNames(\"dash-filters-date\", {\n                \"dash-filter-is-edit-mode\": isInEditMode,\n            }) }, dateFilterMode === \"hidden\" ? (React.createElement(HiddenDashboardDateFilter, null)) : (React.createElement(React.Fragment, null,\n            React.createElement(CustomDateFilterComponent, { filter: dateFilter, onFilterChanged: onDateFilterChanged, config: dateFilterComponentConfig, readonly: dateFilterMode === \"readonly\" }),\n            React.createElement(AttributeFilterDropZoneHint, { placement: \"outside\", hintPosition: \"next\", targetIndex: 0, onAddAttributePlaceholder: addAttributeFilterPlaceholder, acceptPlaceholder: canAddMoreAttributeFilters })))),\n        attributeFiltersWithPlaceholder.map((filterOrPlaceholder) => {\n            if (isFilterBarAttributeFilterPlaceholder(filterOrPlaceholder)) {\n                const CreatingPlaceholderComponent = AttributeFilterComponentSet.creating.CreatingPlaceholderComponent;\n                return (React.createElement(CreatingPlaceholderComponent, { key: filterOrPlaceholder.filterIndex, onClose: closeAttributeSelection, onSelect: selectAttributeFilter }));\n            }\n            else {\n                const { filter, filterIndex } = filterOrPlaceholder;\n                const convertedFilter = supportElementUris\n                    ? filter\n                    : convertDashboardAttributeFilterElementsUrisToValues(filter);\n                const CustomAttributeFilterComponent = AttributeFilterComponentSet.MainComponentProvider(convertedFilter);\n                /**\n                 * Use the attribute as key, not the display form.\n                 * This is to make sure we do not remount this when user changes the display form used:\n                 * it should just reload the elements, not close and remount the whole filter.\n                 *\n                 * This is fine because we do not allow multiple filters of the same attribute to be on\n                 * the same dashboard.\n                 */\n                const displayForm = displayFormsMap.get(convertedFilter.attributeFilter.displayForm);\n                invariant(displayForm, \"inconsistent state, display form for a filter was not found\");\n                return (React.createElement(DraggableAttributeFilter, { key: objRefToString(displayForm.attribute), autoOpen: areObjRefsEqual(filter.attributeFilter.displayForm, autoOpenFilter), filter: filter, filterIndex: filterIndex, FilterComponent: CustomAttributeFilterComponent, onAttributeFilterChanged: onAttributeFilterChanged, onAttributeFilterAdded: addAttributeFilterPlaceholder, onAttributeFilterClose: onCloseAttributeFilter }));\n            }\n        }),\n        canAddMoreAttributeFilters ? (React.createElement(AttributeFilterDropZone, { targetIndex: attributeFiltersCount, onDrop: addAttributeFilterPlaceholder })) : null,\n        React.createElement(\"div\", { className: \"filter-bar-dropzone-container\" },\n            React.createElement(AttributeFilterDropZoneHint, { placement: \"outside\", hintPosition: \"prev\", acceptPlaceholder: false, targetIndex: attributeFiltersCount }))));\n}\n//# sourceMappingURL=DefaultFilterBar.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useCallback, useMemo, useState } from \"react\";\nimport partition from \"lodash/partition.js\";\nimport { areObjRefsEqual, isDashboardDateFilter, } from \"@gooddata/sdk-model\";\nimport { addAttributeFilter as addAttributeFilterAction, dispatchAndWaitFor, selectCatalogAttributes, selectSelectedFilterIndex, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport function isFilterBarAttributeFilterPlaceholder(object) {\n    return object.type === \"attributeFilterPlaceholder\";\n}\n/**\n * @internal\n */\nexport function useFiltersWithAddedPlaceholder(filters) {\n    const dispatch = useDashboardDispatch();\n    const selectedFilterIndex = useDashboardSelector(selectSelectedFilterIndex);\n    const allAttributes = useDashboardSelector(selectCatalogAttributes);\n    const [[dateFilter], attributeFilters] = partition(filters, isDashboardDateFilter);\n    const [selectedDisplayForm, setSelectedDisplayForm] = useState();\n    const [autoOpenFilter, setAutoOpenFilter] = useState();\n    const addedAttributeFilter = useMemo(() => {\n        if (selectedFilterIndex !== undefined) {\n            if (selectedDisplayForm) {\n                return Object.assign(Object.assign({}, {\n                    type: \"attributeFilterPlaceholder\",\n                    filterIndex: selectedFilterIndex,\n                }), { selectedDisplayForm });\n            }\n            return { type: \"attributeFilterPlaceholder\", filterIndex: selectedFilterIndex };\n        }\n        return undefined;\n    }, [selectedFilterIndex, selectedDisplayForm]);\n    const addAttributeFilterPlaceholder = useCallback(function (index) {\n        dispatch(uiActions.selectFilterIndex(index));\n    }, [dispatch]);\n    const clearAddedFilter = useCallback(() => {\n        setSelectedDisplayForm(undefined);\n        dispatch(uiActions.clearFilterIndexSelection());\n    }, [dispatch]);\n    const closeAttributeSelection = useCallback(function () {\n        // close after select attribute should not clear placeholder\n        if (selectedDisplayForm) {\n            return;\n        }\n        clearAddedFilter();\n    }, [selectedDisplayForm, clearAddedFilter]);\n    const attributeFiltersWithPlaceholder = useMemo(() => {\n        const filterObjects = attributeFilters.map((filter, filterIndex) => ({\n            filter,\n            filterIndex,\n        }));\n        const containsAddedAttributeDisplayForm = selectedDisplayForm &&\n            attributeFilters.some((attributeFilter) => areObjRefsEqual(attributeFilter.attributeFilter.displayForm, selectedDisplayForm));\n        if (addedAttributeFilter === undefined || containsAddedAttributeDisplayForm) {\n            return filterObjects;\n        }\n        filterObjects.splice(addedAttributeFilter.filterIndex, 0, addedAttributeFilter);\n        return filterObjects;\n    }, [addedAttributeFilter, attributeFilters, selectedDisplayForm]);\n    const selectAttributeFilter = useCallback(function (displayForm) {\n        if (!addedAttributeFilter) {\n            return;\n        }\n        const relatedAttribute = allAttributes.find((att) => att.displayForms.some((df) => areObjRefsEqual(df.ref, displayForm)));\n        const usedDisplayForm = relatedAttribute === null || relatedAttribute === void 0 ? void 0 : relatedAttribute.displayForms.find((df) => {\n            return attributeFilters.find((x) => areObjRefsEqual(x.attributeFilter.displayForm, df));\n        });\n        // We allowed just one attributeFilter for one attribute,\n        if (!usedDisplayForm) {\n            setSelectedDisplayForm(displayForm);\n            setAutoOpenFilter(displayForm);\n            dispatchAndWaitFor(dispatch, addAttributeFilterAction(displayForm, addedAttributeFilter.filterIndex)).finally(clearAddedFilter);\n        }\n        else {\n            setAutoOpenFilter(usedDisplayForm);\n            clearAddedFilter();\n        }\n    }, [addedAttributeFilter, attributeFilters, allAttributes, clearAddedFilter, dispatch]);\n    const onCloseAttributeFilter = useCallback(() => {\n        setAutoOpenFilter(undefined);\n    }, []);\n    return [\n        {\n            dateFilter,\n            attributeFiltersWithPlaceholder,\n            attributeFiltersCount: attributeFilters.length,\n            autoOpenFilter,\n        },\n        {\n            addAttributeFilterPlaceholder,\n            selectAttributeFilter,\n            closeAttributeSelection,\n            onCloseAttributeFilter,\n        },\n    ];\n}\n//# sourceMappingURL=useFiltersWithAddedPlaceholder.js.map","// (C) 2019-2022 GoodData Corporation\n/**\n * @internal\n */\nexport function getLayoutCoordinates(item) {\n    var _a;\n    return {\n        sectionIndex: (_a = item.section()) === null || _a === void 0 ? void 0 : _a.index(),\n        itemIndex: item.index(),\n    };\n}\n//# sourceMappingURL=coordinates.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { uiActions, useDashboardDispatch } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport function useWidgetDragEndHandler() {\n    const dispatch = useDashboardDispatch();\n    return useCallback(() => {\n        dispatch(uiActions.clearDraggingWidgetSource());\n        dispatch(uiActions.clearDraggingWidgetTarget());\n    }, [dispatch]);\n}\n//# sourceMappingURL=useWidgetDragEndHandler.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage, defineMessages } from \"react-intl\";\nconst messages = defineMessages({\n    minHeight: { id: \"layout.widget.height.min\" },\n    maxHeight: { id: \"layout.widget.height.max\" },\n    minWidth: { id: \"layout.widget.width.min\" },\n    maxWidth: { id: \"layout.widget.width.max\" },\n});\nvar ResizeOverlayStatus;\n(function (ResizeOverlayStatus) {\n    ResizeOverlayStatus[ResizeOverlayStatus[\"None\"] = 0] = \"None\";\n    ResizeOverlayStatus[ResizeOverlayStatus[\"Grey\"] = 1] = \"Grey\";\n    ResizeOverlayStatus[ResizeOverlayStatus[\"Active\"] = 2] = \"Active\";\n    ResizeOverlayStatus[ResizeOverlayStatus[\"Error\"] = 3] = \"Error\";\n})(ResizeOverlayStatus || (ResizeOverlayStatus = {}));\nfunction getMessage({ reachedHeightLimit, reachedWidthLimit, }) {\n    if (reachedHeightLimit === \"min\") {\n        return messages.minHeight;\n    }\n    if (reachedHeightLimit === \"max\") {\n        return messages.maxHeight;\n    }\n    if (reachedWidthLimit === \"min\") {\n        return messages.minWidth;\n    }\n    if (reachedWidthLimit === \"max\") {\n        return messages.maxWidth;\n    }\n}\nfunction getStatus({ isResizingColumnOrRow, isActive, reachedWidthLimit, reachedHeightLimit, }) {\n    let status = ResizeOverlayStatus.None;\n    if (isResizingColumnOrRow) {\n        status = ResizeOverlayStatus.Grey;\n        if (isActive) {\n            status = ResizeOverlayStatus.Active;\n            if (reachedWidthLimit !== \"none\" || reachedHeightLimit !== \"none\") {\n                status = ResizeOverlayStatus.Error;\n            }\n        }\n    }\n    return status;\n}\nexport function ResizeOverlay(props) {\n    const status = getStatus(props);\n    if (status === ResizeOverlayStatus.None) {\n        return null;\n    }\n    const isInError = status === ResizeOverlayStatus.Error;\n    const isActive = status === ResizeOverlayStatus.Active;\n    const classes = cx(\"gd-resize-overlay\", {\n        active: isActive,\n        error: isInError,\n    });\n    const message = getMessage({\n        reachedHeightLimit: props.reachedHeightLimit,\n        reachedWidthLimit: props.reachedWidthLimit,\n    });\n    const errorText = (React.createElement(\"div\", { className: \"gd-resize-overlay-text\" },\n        React.createElement(FormattedMessage, Object.assign({}, message))));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { role: \"resize-overlay\", className: classes }),\n        isInError ? errorText : null));\n}\n//# sourceMappingURL=ResizeOverlay.js.map","// (C) 2022 GoodData Corporation\nimport { insightRef, insightTitle } from \"@gooddata/sdk-model\";\nimport { useCallback } from \"react\";\nimport { addSectionItem, dispatchAndWaitFor, enableInsightWidgetDateFilter, replaceSectionItem, selectSettings, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { newLoadingPlaceholderWidget } from \"../../../widgets/index.js\";\nimport { getSizeInfo } from \"../../../_staging/layout/sizing.js\";\nexport function useInsightListItemDropHandler(sectionIndex, itemIndex) {\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { run: preselectDateDataset } = useDashboardCommandProcessing({\n        commandCreator: enableInsightWidgetDateFilter,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        onSuccess: (event) => {\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(event.payload.ref));\n        },\n        onError: (event) => {\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(event.payload.command.payload.ref));\n        },\n    });\n    const { run: replaceSectionItemLoader } = useDashboardCommandProcessing({\n        commandCreator: replaceSectionItem,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REPLACED\",\n        onSuccess: (event) => {\n            const ref = event.payload.items[0].widget.ref;\n            dispatch(uiActions.selectWidget(ref));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n            dispatch(uiActions.setWidgetDateDatasetAutoSelect(true));\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStarted(ref));\n            preselectDateDataset(ref, \"default\");\n        },\n    });\n    return useCallback((insight) => {\n        const correlationId = `insert-insight-list-item-${sectionIndex}_${itemIndex}`;\n        const sizeInfo = getSizeInfo(settings, \"insight\", insight);\n        dispatchAndWaitFor(dispatch, addSectionItem(sectionIndex, itemIndex, {\n            type: \"IDashboardLayoutItem\",\n            size: {\n                xl: {\n                    gridHeight: sizeInfo.height.default,\n                    gridWidth: sizeInfo.width.default,\n                },\n            },\n            widget: newLoadingPlaceholderWidget(),\n        }, false, correlationId)).then(() => {\n            replaceSectionItemLoader(sectionIndex, itemIndex, {\n                type: \"IDashboardLayoutItem\",\n                widget: {\n                    type: \"insight\",\n                    insight: insightRef(insight),\n                    ignoreDashboardFilters: [],\n                    drills: [],\n                    title: insightTitle(insight),\n                    description: \"\",\n                },\n                size: {\n                    xl: {\n                        gridHeight: sizeInfo.height.default,\n                        gridWidth: sizeInfo.width.default,\n                    },\n                },\n            }, undefined, false, correlationId);\n        });\n    }, [replaceSectionItemLoader, dispatch, itemIndex, sectionIndex, settings]);\n}\n//# sourceMappingURL=useInsightListItemDropHandler.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { idRef } from \"@gooddata/sdk-model\";\nimport { useDashboardDispatch, uiActions, useDashboardSelector, selectSettings, useDashboardCommandProcessing, addSectionItem, } from \"../../../model/index.js\";\nimport { INSIGHT_PLACEHOLDER_WIDGET_ID, newInsightPlaceholderWidget } from \"../../../widgets/index.js\";\nimport { getInsightPlaceholderSizeInfo } from \"../../../_staging/layout/sizing.js\";\nexport function useInsightPlaceholderDropHandler(sectionIndex, itemIndex) {\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { run: replaceInsightOntoPlaceholder } = useDashboardCommandProcessing({\n        commandCreator: addSectionItem,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEMS_ADDED\",\n        onSuccess: () => {\n            dispatch(uiActions.selectWidget(idRef(INSIGHT_PLACEHOLDER_WIDGET_ID)));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n        },\n    });\n    return useCallback(() => {\n        const sizeInfo = getInsightPlaceholderSizeInfo(settings);\n        replaceInsightOntoPlaceholder(sectionIndex, itemIndex, {\n            type: \"IDashboardLayoutItem\",\n            size: {\n                xl: {\n                    gridHeight: sizeInfo.height.default,\n                    gridWidth: sizeInfo.width.default,\n                },\n            },\n            widget: newInsightPlaceholderWidget(),\n        });\n    }, [itemIndex, replaceInsightOntoPlaceholder, sectionIndex, settings]);\n}\n//# sourceMappingURL=useInsightPlaceholderDropHandler.js.map","// (C) 2022 GoodData Corporation\nimport { idRef } from \"@gooddata/sdk-model\";\nimport { useCallback } from \"react\";\nimport { addSectionItem, selectSettings, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { KPI_PLACEHOLDER_WIDGET_ID, newKpiPlaceholderWidget } from \"../../../widgets/index.js\";\nimport { getSizeInfo } from \"../../../_staging/layout/sizing.js\";\nexport function useKpiPlaceholderDropHandler(sectionIndex, itemIndex) {\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { run: createKpi } = useDashboardCommandProcessing({\n        commandCreator: addSectionItem,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEMS_ADDED\",\n        onSuccess: (event) => {\n            const ref = event.payload.itemsAdded[0].widget.ref;\n            dispatch(uiActions.selectWidget(idRef(KPI_PLACEHOLDER_WIDGET_ID)));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n            dispatch(uiActions.setWidgetDateDatasetAutoSelect(true));\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStarted(ref));\n        },\n    });\n    return useCallback(() => {\n        const sizeInfo = getSizeInfo(settings, \"kpi\");\n        createKpi(sectionIndex, itemIndex, {\n            type: \"IDashboardLayoutItem\",\n            size: {\n                xl: {\n                    gridHeight: sizeInfo.height.default,\n                    gridWidth: sizeInfo.width.default,\n                },\n            },\n            widget: newKpiPlaceholderWidget(),\n        });\n    }, [createKpi, itemIndex, sectionIndex, settings]);\n}\n//# sourceMappingURL=useKpiPlaceholderDropHandler.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { useDashboardDispatch, moveSectionItemAndRemoveOriginalSectionIfEmpty, } from \"../../../model/index.js\";\nexport function useMoveWidgetDropHandler(sectionIndex, itemIndex) {\n    const dispatch = useDashboardDispatch();\n    return useCallback((item) => {\n        let targetIndex = itemIndex;\n        if (item.sectionIndex === sectionIndex) {\n            // if the item is moved within the same section to bigger index, indexes are shifted by 1\n            if (item.itemIndex < itemIndex) {\n                targetIndex = itemIndex - 1;\n            }\n            if (item.itemIndex === targetIndex) {\n                // same positions we do not need to do anything\n                return;\n            }\n        }\n        dispatch(moveSectionItemAndRemoveOriginalSectionIfEmpty(item.sectionIndex, item.itemIndex, sectionIndex, targetIndex));\n    }, [dispatch, itemIndex, sectionIndex]);\n}\n//# sourceMappingURL=useMoveWidgetHandler.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { uiActions, useDashboardDispatch } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport function useWidgetDragHoverHandlers() {\n    const dispatch = useDashboardDispatch();\n    const handleDragHoverStart = useCallback((coordinations) => {\n        dispatch(uiActions.setDraggingWidgetTarget(coordinations));\n    }, [dispatch]);\n    const handleDragHoverEnd = useCallback(() => {\n        dispatch(uiActions.clearDraggingWidgetTarget());\n    }, [dispatch]);\n    return { handleDragHoverStart, handleDragHoverEnd };\n}\n//# sourceMappingURL=useWidgetDragHoverHandlers.js.map","// (C) 2022 GoodData Corporation\nimport cx from \"classnames\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { getDropZoneDebugStyle } from \"../debug.js\";\nimport { isInsightDraggableItem, isInsightDraggableListItem, isInsightPlaceholderDraggableItem, isKpiDraggableItem, isKpiPlaceholderDraggableItem, } from \"../types.js\";\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nimport { useInsightListItemDropHandler } from \"./useInsightListItemDropHandler.js\";\nimport { useInsightPlaceholderDropHandler } from \"./useInsightPlaceholderDropHandler.js\";\nimport { useKpiPlaceholderDropHandler } from \"./useKpiPlaceholderDropHandler.js\";\nimport { useMoveWidgetDropHandler } from \"./useMoveWidgetHandler.js\";\nimport { useWidgetDragHoverHandlers } from \"./useWidgetDragHoverHandlers.js\";\nexport const Hotspot = (props) => {\n    const { itemIndex, sectionIndex, classNames, dropZoneType, isEndingHotspot } = props;\n    const isOverLastValue = useRef(false);\n    // for \"next\" we need to add the item after the current index, for \"prev\" on the current one\n    const targetItemIndex = dropZoneType === \"next\" ? itemIndex + 1 : itemIndex;\n    const handleInsightListItemDrop = useInsightListItemDropHandler(sectionIndex, targetItemIndex);\n    const handleInsightPlaceholderDrop = useInsightPlaceholderDropHandler(sectionIndex, targetItemIndex);\n    const handleKpiPlaceholderDrop = useKpiPlaceholderDropHandler(sectionIndex, targetItemIndex);\n    const handleWidgetDrop = useMoveWidgetDropHandler(sectionIndex, targetItemIndex);\n    const { handleDragHoverStart } = useWidgetDragHoverHandlers();\n    const [{ canDrop, isOver, item }, dropRef] = useDashboardDrop([\"insightListItem\", \"kpi-placeholder\", \"insight-placeholder\", \"kpi\", \"insight\"], {\n        drop: (item) => {\n            if (isInsightDraggableListItem(item)) {\n                handleInsightListItemDrop(item.insight);\n            }\n            if (isKpiPlaceholderDraggableItem(item)) {\n                handleKpiPlaceholderDrop();\n            }\n            if (isInsightPlaceholderDraggableItem(item)) {\n                handleInsightPlaceholderDrop();\n            }\n            if (isInsightDraggableItem(item) || isKpiDraggableItem(item)) {\n                handleWidgetDrop(item);\n            }\n        },\n    }, [\n        targetItemIndex,\n        sectionIndex,\n        handleInsightListItemDrop,\n        handleInsightPlaceholderDrop,\n        handleKpiPlaceholderDrop,\n        handleWidgetDrop,\n    ]);\n    useEffect(() => {\n        if (isOver) {\n            handleDragHoverStart({ sectionIndex, itemIndex: targetItemIndex });\n            isOverLastValue.current = isOver;\n        }\n    }, [isOver, sectionIndex, targetItemIndex, handleDragHoverStart]);\n    const debugStyle = getDropZoneDebugStyle({ isOver });\n    const canDropSafe = useCallback((item) => {\n        if (!item) {\n            return false;\n        }\n        if (isInsightDraggableItem(item) || isKpiDraggableItem(item)) {\n            return isEndingHotspot || item.sectionIndex !== sectionIndex || item.itemIndex !== itemIndex;\n        }\n        return true;\n    }, [isEndingHotspot, sectionIndex, itemIndex]);\n    return (React.createElement(\"div\", { className: cx(classNames, \"dropzone\", dropZoneType, {\n            hidden: !canDrop || !canDropSafe(item),\n            full: isEndingHotspot,\n        }), style: debugStyle, ref: dropRef }));\n};\n//# sourceMappingURL=Hotspot.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport function WidthResizer({ status }) {\n    const boxClassName = cx(\"s-gd-fluidlayout-width-resizer\", \"gd-fluidlayout-width-resizer\", status);\n    const lineClassName = cx(\"width-resizer-line\", status);\n    return (React.createElement(\"div\", { className: boxClassName },\n        React.createElement(\"div\", { className: lineClassName })));\n}\n//# sourceMappingURL=WidthResizer.js.map","// (C) 2022 GoodData Corporation\nimport clamp from \"lodash/clamp.js\";\nexport function getLimitedSize(minimumSize, maximumSize, originalSize, deltaSize) {\n    const newSize = originalSize + deltaSize;\n    return clamp(newSize, minimumSize, maximumSize);\n}\nfunction getLimitReached(unlimitedSize, limitedSize, maximumSize) {\n    const isLimited = limitedSize !== unlimitedSize;\n    if (!isLimited) {\n        return \"none\";\n    }\n    return unlimitedSize > maximumSize ? \"max\" : \"min\";\n}\nexport function applySizeLimitation(minimumSize, maximumSize, originalSize, deltaSize) {\n    const unlimitedSize = originalSize + deltaSize;\n    const limitedSize = clamp(unlimitedSize, minimumSize, maximumSize);\n    return {\n        limitedSize,\n        unlimitedSize,\n        isLimited: limitedSize !== unlimitedSize,\n        limitReached: getLimitReached(unlimitedSize, limitedSize, maximumSize),\n    };\n}\n//# sourceMappingURL=sizeLimiting.js.map","// (C) 2019-2022 GoodData Corporation\nimport React, { useEffect } from \"react\";\nimport { WidthResizer } from \"../Resize/WidthResizer.js\";\nimport { applySizeLimitation } from \"./sizeLimiting.js\";\nimport { useResizeHandlers } from \"../LayoutResizeContext.js\";\nexport function WidthResizerDragPreview(props) {\n    const { setWidthState } = useResizeHandlers();\n    const { item, differenceFromInitialOffset, initialOffset, scrollCorrection, getDragLayerPosition } = props;\n    const { gridColumnHeightInPx } = item;\n    const sizeAndCoords = getSizeAndXCoords(item, initialOffset.x, differenceFromInitialOffset.x, scrollCorrection.x);\n    const style = getWidthResizerStyle({\n        gridColumnHeightInPx,\n        initialOffset,\n        limitedX: sizeAndCoords.limitedX,\n        dragLayerOffset: getDragLayerPosition(),\n        scrollCorrection,\n    });\n    useEffect(() => {\n        setWidthState({\n            initialIndex: sizeAndCoords.initialIndex,\n            currentIndex: sizeAndCoords.currentIndex,\n            limitReached: sizeAndCoords.limitReached,\n        });\n    }, [\n        sizeAndCoords.initialIndex,\n        sizeAndCoords.currentIndex,\n        sizeAndCoords.isLimited,\n        sizeAndCoords.limitReached,\n        setWidthState,\n    ]);\n    return (React.createElement(\"div\", { className: \"s-resizer-drag-preview resizer-drag-preview\", style: style },\n        React.createElement(WidthResizer, { status: \"active\" })));\n}\nexport function getSizeAndXCoords(item, initialSourceClientOffsetX, differenceFromInitialOffsetX, scrollCorrectionX) {\n    const { minLimit, maxLimit, currentWidth, initialLayoutDimensions, gridColumnWidth } = item;\n    const deltaSize = getDiffInGridColumns(differenceFromInitialOffsetX - scrollCorrectionX, gridColumnWidth);\n    const sizeLimitation = applySizeLimitation(minLimit, maxLimit, currentWidth, deltaSize);\n    const deltaSizeLimited = sizeLimitation.limitedSize - currentWidth;\n    const deltaXLimited = deltaSizeLimited * gridColumnWidth;\n    const deltaXUnlimited = deltaSize * gridColumnWidth;\n    const initialIndex = Math.round((initialSourceClientOffsetX - initialLayoutDimensions.left) / gridColumnWidth);\n    const currentIndex = initialIndex + deltaSizeLimited;\n    return Object.assign(Object.assign({}, sizeLimitation), { limitedX: initialSourceClientOffsetX + deltaXLimited, unlimitedX: initialSourceClientOffsetX + deltaXUnlimited, initialIndex,\n        currentIndex });\n}\nexport function getDiffInGridColumns(pxDiffX, gridColumnWidth) {\n    return Math.round(pxDiffX / gridColumnWidth);\n}\nfunction getWidthResizerStyle({ initialOffset, limitedX, gridColumnHeightInPx, dragLayerOffset, scrollCorrection, }) {\n    return {\n        position: \"absolute\",\n        top: `${initialOffset.y - dragLayerOffset.y + scrollCorrection.y}px`,\n        left: `${limitedX - dragLayerOffset.x + scrollCorrection.x}px`,\n        height: `${gridColumnHeightInPx}px`,\n    };\n}\n//# sourceMappingURL=WidthResizerDragPreview.js.map","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useDashboardDrag } from \"../useDashboardDrag.js\";\nimport { resizeWidth, selectInsightsMap, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { getMinWidth } from \"../../../_staging/layout/sizing.js\";\nimport { getDashboardLayoutItemMaxGridWidth } from \"../../layout/DefaultDashboardLayoutRenderer/utils/sizing.js\";\nimport { getSizeAndXCoords } from \"../DragLayerPreview/WidthResizerDragPreview.js\";\nimport { useResizeHandlers, useResizeWidthItemStatus } from \"../LayoutResizeContext.js\";\nimport { WidthResizer } from \"./WidthResizer.js\";\nexport function WidthResizerHotspot({ item, screen, getGridColumnWidth, getGridColumnHeightInPx, getLayoutDimensions, }) {\n    const dispatch = useDashboardDispatch();\n    const insightsMap = useDashboardSelector(selectInsightsMap);\n    const { resizeStart, resizeEnd, getScrollCorrection } = useResizeHandlers();\n    const widget = useMemo(() => item.widget(), [item]);\n    const widgetIdentifier = widget.identifier;\n    const { isWidthResizing, isActive } = useResizeWidthItemStatus(widgetIdentifier);\n    const [isResizerVisible, setResizerVisibility] = useState(false);\n    const onMouseEnter = () => setResizerVisibility(true);\n    const onMouseLeave = () => setResizerVisibility(false);\n    const sectionIndex = item.section().index();\n    const itemIndex = item.index();\n    const currentWidth = item.sizeForScreen(screen).gridWidth;\n    const minLimit = getMinWidth(widget, insightsMap);\n    const maxLimit = getDashboardLayoutItemMaxGridWidth(item, \"xl\");\n    const [{ isDragging }, dragRef] = useDashboardDrag({\n        dragItem: () => {\n            const initialLayoutDimensions = getLayoutDimensions();\n            return {\n                type: \"internal-width-resizer\",\n                sectionIndex,\n                itemIndex,\n                gridColumnHeightInPx: getGridColumnHeightInPx(),\n                gridColumnWidth: getGridColumnWidth(),\n                initialLayoutDimensions,\n                currentWidth,\n                minLimit,\n                maxLimit,\n            };\n        },\n        dragEnd: (dragItem, monitor) => {\n            const scrollCorrection = getScrollCorrection();\n            const { limitedSize } = getSizeAndXCoords(dragItem, monitor.getInitialClientOffset().x, monitor.getDifferenceFromInitialOffset().x, scrollCorrection.x);\n            dispatch(resizeWidth(sectionIndex, itemIndex, limitedSize));\n            setResizerVisibility(false);\n        },\n    }, [widget, insightsMap, sectionIndex, itemIndex, currentWidth, minLimit, maxLimit]);\n    useEffect(() => {\n        if (isDragging) {\n            resizeStart(\"width\", [widgetIdentifier], getLayoutDimensions);\n        }\n        else {\n            resizeEnd();\n        }\n    }, [isDragging]);\n    const isThisResizing = isWidthResizing && isActive;\n    const showHotspot = !isDragging || isWidthResizing || isResizerVisible;\n    const showResizer = isResizerVisible || isThisResizing;\n    const status = isDragging ? \"muted\" : \"active\";\n    if (!showHotspot) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"dash-width-resizer-container\" },\n        React.createElement(\"div\", { className: \"s-dash-width-resizer-hotspot dash-width-resizer-hotspot\", onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, ref: dragRef }, showResizer ? React.createElement(WidthResizer, { status: status }) : null)));\n}\n//# sourceMappingURL=WidthResizerHotspot.js.map","// (C) 2007-2021 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { v4 as uuid } from \"uuid\";\nimport { decoratedBackend } from \"../decoratedBackend/index.js\";\nimport { DecoratedExecutionFactory, DecoratedExecutionResult, DecoratedPreparedExecution, } from \"../decoratedBackend/execution.js\";\nclass WithExecutionEventing extends DecoratedPreparedExecution {\n    constructor(decorated, callbacks) {\n        super(decorated);\n        this.callbacks = callbacks;\n        this.execute = () => {\n            const { beforeExecute, successfulExecute, failedExecute } = this.callbacks;\n            const executionId = uuid();\n            beforeExecute === null || beforeExecute === void 0 ? void 0 : beforeExecute(this.definition, executionId);\n            return super\n                .execute()\n                .then((result) => {\n                successfulExecute === null || successfulExecute === void 0 ? void 0 : successfulExecute(result, executionId);\n                return new WithExecutionResultEventing(result, this.createNew, this.callbacks, executionId);\n            })\n                .catch((error) => {\n                failedExecute === null || failedExecute === void 0 ? void 0 : failedExecute(error, executionId);\n                throw error;\n            });\n        };\n        this.createNew = (decorated) => {\n            return new WithExecutionEventing(decorated, this.callbacks);\n        };\n    }\n}\nclass WithExecutionResultEventing extends DecoratedExecutionResult {\n    constructor(decorated, wrapper, callbacks, executionId) {\n        super(decorated, wrapper);\n        this.callbacks = callbacks;\n        this.executionId = executionId;\n        this.readAll = () => {\n            const { successfulResultReadAll, failedResultReadAll } = this.callbacks;\n            const promisedDataView = super.readAll();\n            return promisedDataView\n                .then((res) => {\n                successfulResultReadAll === null || successfulResultReadAll === void 0 ? void 0 : successfulResultReadAll(res, this.executionId);\n                return res;\n            })\n                .catch((e) => {\n                failedResultReadAll === null || failedResultReadAll === void 0 ? void 0 : failedResultReadAll(e, this.executionId);\n                throw e;\n            });\n        };\n        this.readWindow = (offset, size) => {\n            const { successfulResultReadWindow, failedResultReadWindow } = this.callbacks;\n            const promisedDataView = super.readWindow(offset, size);\n            return promisedDataView\n                .then((res) => {\n                successfulResultReadWindow === null || successfulResultReadWindow === void 0 ? void 0 : successfulResultReadWindow(offset, size, res, this.executionId);\n                return res;\n            })\n                .catch((e) => {\n                failedResultReadWindow === null || failedResultReadWindow === void 0 ? void 0 : failedResultReadWindow(offset, size, e, this.executionId);\n                throw e;\n            });\n        };\n    }\n}\n/**\n * This implementation of analytical backend decorates another implementation with support for eventing. Events\n * for significant actions are emitted to defined callback functions (event handlers).\n *\n * @param realBackend - backend supplying the actual implementation of SPI\n * @param callbacks - callbacks to event handlers\n * @beta\n */\nexport function withEventing(realBackend, callbacks) {\n    if (isEmpty(callbacks)) {\n        return realBackend;\n    }\n    return decoratedBackend(realBackend, {\n        execution: (original) => new DecoratedExecutionFactory(original, (execution) => new WithExecutionEventing(execution, callbacks)),\n    });\n}\n//# sourceMappingURL=index.js.map","// (C) 2022 GoodData Corporation\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\n/**\n * Wrapper around {@link @gooddata/sdk-model#serializeObjRef} that can handle undefined values.\n *\n * @param ref - ref to serialize\n */\nexport function safeSerializeObjRef(ref) {\n    return ref ? serializeObjRef(ref) : \"\";\n}\n//# sourceMappingURL=safeSerializeObjRef.js.map","import { __rest } from \"tslib\";\n// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\n// done like this instead of a template string so that the code is greppable for the individual classes\nconst screenClasses = {\n    xs: \"layout-xs\",\n    sm: \"layout-sm\",\n    md: \"layout-md\",\n    lg: \"layout-lg\",\n    xl: \"layout-xl\",\n};\nexport const DashboardItem = (_a) => {\n    var { className, screen } = _a, props = __rest(_a, [\"className\", \"screen\"]);\n    return React.createElement(\"div\", Object.assign({}, props, { className: cx(className, \"dash-item\", \"s-dash-item\", screenClasses[screen]) }));\n};\n//# sourceMappingURL=DashboardItem.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const DashboardKpi = (props) => {\n    const { KpiWidgetComponentSet } = useDashboardComponentsContext();\n    const { kpiWidget } = props;\n    const KpiComponent = useMemo(() => KpiWidgetComponentSet.MainComponentProvider(kpiWidget.kpi, kpiWidget), [KpiWidgetComponentSet, kpiWidget]);\n    return React.createElement(KpiComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardKpi.js.map","// (C) 2022 GoodData Corporation\nimport { widgetRef } from \"@gooddata/sdk-model\";\nimport cx from \"classnames\";\nimport React from \"react\";\nimport { DashboardItem } from \"../../presentationComponents/index.js\";\nimport { DashboardKpi } from \"../kpi/index.js\";\nimport { selectAlertByWidgetRef, useDashboardSelector, useWidgetSelection } from \"../../../model/index.js\";\nexport const DefaultDashboardKpiWidget = (props) => {\n    const { kpiWidget, onError, onFiltersChange, screen, dashboardItemClasses } = props;\n    const { isSelected } = useWidgetSelection(widgetRef(kpiWidget));\n    const alertSelector = selectAlertByWidgetRef(widgetRef(kpiWidget));\n    const alert = useDashboardSelector(alertSelector);\n    return (React.createElement(DashboardItem, { className: cx(\"type-kpi\", dashboardItemClasses, { \"is-selected\": isSelected }), screen: screen },\n        React.createElement(DashboardKpi, { kpiWidget: kpiWidget, alert: alert, onFiltersChange: onFiltersChange, onError: onError })));\n};\n//# sourceMappingURL=DefaultDashboardKpiWidget.js.map","const typeVisTypeCssClassMapping = {\n    headline: \"viz-type-headline\",\n    xirr: \"viz-type-xirr\",\n    column: \"viz-type-column\",\n    bar: \"viz-type-bar\",\n    line: \"viz-type-line\",\n    area: \"viz-type-area\",\n    combo: \"viz-type-combo\",\n    combo2: \"viz-type-combo2\",\n    scatter: \"viz-type-scatter\",\n    bubble: \"viz-type-bubble\",\n    pie: \"viz-type-pie\",\n    donut: \"viz-type-donut\",\n    treemap: \"viz-type-treemap\",\n    heatmap: \"viz-type-heatmap\",\n    table: \"viz-type-table\",\n    pushpin: \"viz-type-pushpin\",\n};\nexport function getVisTypeCssClass(widgetType, type) {\n    var _a;\n    if (widgetType === \"kpi\") {\n        return \"viz-type-kpi\";\n    }\n    return (_a = typeVisTypeCssClassMapping[type]) !== null && _a !== void 0 ? _a : \"\";\n}\n//# sourceMappingURL=utils.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { forwardRef } from \"react\";\nimport cx from \"classnames\";\nexport const DashboardItemContent = forwardRef(function DashboardItemContent({ children, className, isSelectable, isSelected, onSelected }, ref) {\n    return (React.createElement(\"div\", { className: cx(\"dash-item-content\", className, {\n            \"is-selectable\": isSelectable,\n            \"is-selected\": isSelected,\n        }), ref: ref, onClick: onSelected }, children));\n});\n//# sourceMappingURL=DashboardItemContent.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport DefaultMeasure from \"react-measure\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Measure = defaultImport(DefaultMeasure);\nexport const DashboardItemContentWrapper = ({ children }) => {\n    return (React.createElement(Measure, { client: true }, ({ measureRef, contentRect }) => {\n        var _a, _b;\n        return (React.createElement(\"div\", { className: \"dash-item-content-wrapper\", ref: measureRef }, children({\n            clientWidth: (_a = contentRect.client) === null || _a === void 0 ? void 0 : _a.width,\n            clientHeight: (_b = contentRect.client) === null || _b === void 0 ? void 0 : _b.height,\n        })));\n    }));\n};\n//# sourceMappingURL=DashboardItemContentWrapper.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { DashboardItemContent } from \"./DashboardItemContent.js\";\nimport { DashboardItemContentWrapper } from \"./DashboardItemContentWrapper.js\";\nconst noopRender = () => null;\nexport const DashboardItemBase = ({ children, contentClassName, visualizationClassName, renderHeadline = noopRender, renderBeforeVisualization = noopRender, renderAfterVisualization = noopRender, renderBeforeContent = noopRender, renderAfterContent = noopRender, contentRef, isSelectable = false, isSelected = false, onSelected, }) => {\n    return (React.createElement(DashboardItemContentWrapper, null, ({ clientWidth, clientHeight }) => (React.createElement(React.Fragment, null,\n        renderBeforeContent(),\n        React.createElement(DashboardItemContent, { className: contentClassName, ref: contentRef, isSelectable: isSelectable, isSelected: isSelected, onSelected: onSelected },\n            renderBeforeVisualization(),\n            React.createElement(\"div\", { className: visualizationClassName },\n                renderHeadline(clientHeight),\n                children({ clientWidth, clientHeight })),\n            renderAfterVisualization()),\n        renderAfterContent()))));\n};\n//# sourceMappingURL=DashboardItemBase.js.map","import { __rest } from \"tslib\";\n// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DashboardItemBase } from \"./DashboardItemBase.js\";\nexport const DashboardItemVisualization = (_a) => {\n    var { visualizationClassName } = _a, props = __rest(_a, [\"visualizationClassName\"]);\n    return (React.createElement(DashboardItemBase, Object.assign({}, props, { visualizationClassName: cx(\"visualization\", visualizationClassName) })));\n};\n//# sourceMappingURL=DashboardItemVisualization.js.map","// (C) 2020 GoodData Corporation\nimport React, { memo } from \"react\";\nconst SMALLEST_WIDGET_HEIGHT = 120;\nconst SMALL_WIDGET_HEIGHT = 140;\nconst SMALL_HEIGHT = 38;\nconst SMALL_LINE_HEIGHT = 36;\nconst INNER_STYLE_SMALL = { fontSize: \"15px\" };\nconst CUSTOM_MARGIN_STYLE = { marginTop: 0 };\nconst CUSTOM_OUTER_STYLE = {\n    height: `${SMALL_HEIGHT}px`,\n    lineHeight: `${SMALL_LINE_HEIGHT}px`,\n};\nconst CUSTOM_OUTER_STYLE_WITH_CUSTOM_MARGIN = Object.assign(Object.assign({}, CUSTOM_OUTER_STYLE), { CUSTOM_MARGIN_STYLE });\nfunction isSmallCustomHeight(clientHeight) {\n    return clientHeight !== undefined ? clientHeight < SMALLEST_WIDGET_HEIGHT : false;\n}\n// compose the styles \"statically\" so that the result's referential equality is retained where possible\nfunction getOuterStyle(hasCustomMargin, isCustomHeightSmall) {\n    if (isCustomHeightSmall) {\n        return hasCustomMargin ? CUSTOM_OUTER_STYLE_WITH_CUSTOM_MARGIN : CUSTOM_OUTER_STYLE;\n    }\n    if (hasCustomMargin) {\n        return CUSTOM_MARGIN_STYLE;\n    }\n}\n// inner utility component for better caching: caches according to two booleans, not a clientHeight number\nconst DashboardItemHeadlineContainerInner = memo(function DashboardItemHeadlineContainerInner({ hasCustomMargin, isCustomHeightSmall, children }) {\n    return (React.createElement(\"div\", { className: \"item-headline-outer\", style: getOuterStyle(hasCustomMargin, isCustomHeightSmall) },\n        React.createElement(\"div\", { className: \"item-headline\", style: isCustomHeightSmall ? INNER_STYLE_SMALL : undefined }, children)));\n});\nexport const DashboardItemHeadlineContainer = ({ children, clientHeight, }) => {\n    return (React.createElement(DashboardItemHeadlineContainerInner, { hasCustomMargin: clientHeight !== undefined ? clientHeight <= SMALL_WIDGET_HEIGHT : false, isCustomHeightSmall: isSmallCustomHeight(clientHeight) }, children));\n};\n//# sourceMappingURL=DashboardItemHeadlineContainer.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport responsiveHOC from \"react-lines-ellipsis/lib/responsiveHOC.js\";\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis);\nimport { DashboardItemHeadlineContainer } from \"./DashboardItemHeadlineContainer.js\";\nexport const DashboardItemHeadline = ({ title, clientHeight }) => {\n    // memoize the Truncate render as it is quite expensive\n    const truncatedTitlePart = useMemo(() => {\n        return (React.createElement(ResponsiveEllipsis, { maxLine: 2, ellipsis: \"...\", className: \"item-headline-inner s-headline\", text: title }));\n    }, [title]);\n    return (React.createElement(DashboardItemHeadlineContainer, { clientHeight: clientHeight }, truncatedTitlePart));\n};\n//# sourceMappingURL=DashboardItemHeadline.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const DashboardInsight = (props) => {\n    const { insight, widget } = props;\n    const { InsightWidgetComponentSet } = useDashboardComponentsContext();\n    const InsightComponent = useMemo(() => InsightWidgetComponentSet.MainComponentProvider(insight, widget), [InsightWidgetComponentSet, insight, widget]);\n    return React.createElement(InsightComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardInsight.js.map","export const DOWNLOADER_ID = \"downloader\";\nexport function downloadFile({ objectUrl, fileName }) {\n    const anchor = document.createElement(\"a\");\n    anchor.id = DOWNLOADER_ID;\n    anchor.href = objectUrl;\n    anchor.download = fileName !== null && fileName !== void 0 ? fileName : \"exportedFile\";\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n    if (objectUrl) {\n        URL.revokeObjectURL(objectUrl); // release blob memory from window object\n    }\n}\n//# sourceMappingURL=downloadFile.js.map","// (C) 2020-2023 GoodData Corporation\nimport { useCallback, useRef } from \"react\";\nimport { isProtectedDataError } from \"@gooddata/sdk-backend-spi\";\nimport { useToastMessage } from \"@gooddata/sdk-ui-kit\";\nimport { downloadFile } from \"../../../_staging/fileUtils/downloadFile.js\";\nimport { messages } from \"../../../locales.js\";\nexport const useExportHandler = () => {\n    const { addProgress, addSuccess, addError, removeMessage } = useToastMessage();\n    const lastExportMessageId = useRef(\"\");\n    return useCallback(async (exportFunction, exportConfig) => {\n        try {\n            lastExportMessageId.current = addProgress(messages.messagesExportResultStart, \n            // make sure the message stays there until removed by either success or error\n            { duration: 0 });\n            const exportResult = await exportFunction(exportConfig);\n            if (lastExportMessageId.current) {\n                removeMessage(lastExportMessageId.current);\n            }\n            addSuccess(messages.messagesExportResultSuccess);\n            downloadFile(exportResult);\n        }\n        catch (err) {\n            if (lastExportMessageId.current) {\n                removeMessage(lastExportMessageId.current);\n            }\n            if (isProtectedDataError(err)) {\n                addError(messages.messagesExportResultRestrictedError);\n            }\n            else {\n                addError(messages.messagesExportResultError);\n            }\n        }\n    }, []);\n};\n//# sourceMappingURL=useExportHandler.js.map","// (C) 2021-2023 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { getInsightVisualizationMeta } from \"@gooddata/sdk-ui-ext\";\nimport { v4 as uuid } from \"uuid\";\nimport { selectSettings, useDashboardSelector, selectIsExecutionResultExportableToCsvByRef, selectIsExecutionResultExportableToXlsxByRef, useDashboardDispatch, dispatchAndWaitFor, exportInsightWidget, } from \"../../../model/index.js\";\nimport { useExportHandler } from \"./useExportHandler.js\";\nimport { useExportDialogContext } from \"../../dashboardContexts/index.js\";\nexport const useInsightExport = (config) => {\n    const { title, widgetRef, insight } = config;\n    const [isExporting, setIsExporting] = useState(false);\n    const dispatch = useDashboardDispatch();\n    const exportFunction = useCallback((configToUse) => dispatchAndWaitFor(dispatch, exportInsightWidget(widgetRef, Object.assign(Object.assign({}, configToUse), { format: configToUse.format === \"xlsx\" ? \"xlsx\" : \"csv\" }), uuid())).then((result) => result.payload.result), [widgetRef]);\n    const isInsightExportable = getInsightVisualizationMeta(insight).supportsExport;\n    const isExportableToCsv = useDashboardSelector(selectIsExecutionResultExportableToCsvByRef(widgetRef));\n    const isExportableToXlsx = useDashboardSelector(selectIsExecutionResultExportableToXlsxByRef(widgetRef));\n    const settings = useDashboardSelector(selectSettings);\n    const exportHandler = useExportHandler();\n    const { openDialog, closeDialog } = useExportDialogContext();\n    const onExportCSV = useCallback(() => {\n        setIsExporting(true);\n        const exportConfig = {\n            format: \"csv\",\n            title,\n        };\n        // if this bombs there is an issue with the logic enabling the buttons\n        invariant(exportFunction);\n        exportHandler(exportFunction, exportConfig).then(() => setIsExporting(false));\n    }, [exportFunction, title]);\n    const onExportXLSX = useCallback(() => {\n        var _a, _b, _c;\n        openDialog({\n            onSubmit: ({ includeFilterContext, mergeHeaders }) => {\n                setIsExporting(true);\n                // if this bombs there is an issue with the logic enabling the buttons\n                invariant(exportFunction);\n                closeDialog();\n                exportHandler(exportFunction, {\n                    format: \"xlsx\",\n                    mergeHeaders,\n                    includeFilterContext,\n                    showFilters: includeFilterContext,\n                    title,\n                }).then(() => setIsExporting(false));\n            },\n            includeFilterContext: Boolean((_a = settings === null || settings === void 0 ? void 0 : settings.activeFiltersByDefault) !== null && _a !== void 0 ? _a : true),\n            mergeHeaders: Boolean((_b = settings === null || settings === void 0 ? void 0 : settings.cellMergedByDefault) !== null && _b !== void 0 ? _b : true),\n            filterContextVisible: Boolean((_c = settings === null || settings === void 0 ? void 0 : settings.enableActiveFilterContext) !== null && _c !== void 0 ? _c : true),\n        });\n    }, [settings, title, exportFunction, closeDialog]);\n    const exportCSVEnabled = !isExporting && isInsightExportable && isExportableToCsv;\n    const exportXLSXEnabled = !isExporting && isInsightExportable && isExportableToXlsx;\n    return {\n        exportCSVEnabled,\n        exportXLSXEnabled,\n        onExportCSV,\n        onExportXLSX,\n    };\n};\n//# sourceMappingURL=useInsightExport.js.map","/**\n * @internal\n */\nexport function getDefaultLegacyInsightMenuItems(intl, config) {\n    const { exportCSVDisabled, exportXLSXDisabled, onExportCSV, onExportXLSX, isDataError } = config;\n    const tooltip = isDataError\n        ? intl.formatMessage({ id: \"options.menu.unsupported.error\" })\n        : intl.formatMessage({ id: \"options.menu.unsupported.loading\" });\n    return [\n        {\n            type: \"button\",\n            itemId: \"ExportXLSXBubble\",\n            itemName: intl.formatMessage({ id: \"options.menu.export.XLSX\" }),\n            disabled: exportXLSXDisabled,\n            onClick: onExportXLSX,\n            tooltip,\n            className: \"options-menu-export-xlsx s-options-menu-export-xlsx\",\n        },\n        {\n            type: \"button\",\n            itemId: \"ExportCSVBubble\",\n            itemName: intl.formatMessage({ id: \"options.menu.export.CSV\" }),\n            disabled: exportCSVDisabled,\n            onClick: onExportCSV,\n            tooltip,\n            className: \"options-menu-export-csv s-options-menu-export-csv\",\n        },\n    ];\n}\n//# sourceMappingURL=getDefaultLegacyInsightMenuItems.js.map","import compact from \"lodash/compact.js\";\n/**\n * @internal\n */\nexport function getDefaultInsightMenuItems(intl, config) {\n    const { exportCSVDisabled, exportXLSXDisabled, scheduleExportDisabled, onExportCSV, onExportXLSX, onScheduleExport, isScheduleExportVisible, isDataError, } = config;\n    const tooltip = isDataError\n        ? intl.formatMessage({ id: \"options.menu.unsupported.error\" })\n        : intl.formatMessage({ id: \"options.menu.unsupported.loading\" });\n    return compact([\n        {\n            type: \"button\",\n            itemId: \"ExportXLSXBubble\",\n            itemName: intl.formatMessage({ id: \"widget.options.menu.exportToXLSX\" }),\n            onClick: onExportXLSX,\n            disabled: exportXLSXDisabled,\n            tooltip,\n            icon: \"gd-icon-download\",\n            className: \"s-options-menu-export-xlsx\",\n        },\n        {\n            type: \"button\",\n            itemId: \"ExportCSVBubble\",\n            itemName: intl.formatMessage({ id: \"widget.options.menu.exportToCSV\" }),\n            onClick: onExportCSV,\n            disabled: exportCSVDisabled,\n            tooltip,\n            icon: \"gd-icon-download\",\n            className: \"s-options-menu-export-csv\",\n        },\n        isScheduleExportVisible && {\n            type: \"button\",\n            itemId: \"ScheduleExport\",\n            itemName: intl.formatMessage({ id: \"widget.options.menu.scheduleExport\" }),\n            onClick: onScheduleExport,\n            disabled: scheduleExportDisabled,\n            tooltip,\n            icon: \"gd-icon-clock\",\n            className: \"s-options-menu-schedule-export\",\n        },\n    ]);\n}\n//# sourceMappingURL=getDefaultInsightMenuItems.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { selectExecutionResultByRef, useDashboardSelector } from \"../../../../model/index.js\";\nimport { isDataError } from \"../../../../_staging/errors/errorPredicates.js\";\nimport { useDashboardCustomizationsContext, } from \"../../../dashboardContexts/index.js\";\nimport { getDefaultInsightMenuItems, getDefaultLegacyInsightMenuItems, } from \"../../insightMenu/index.js\";\nexport const useInsightMenu = (config) => {\n    const { insight, widget } = config;\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const closeMenu = useCallback(() => setIsMenuOpen(false), []);\n    const openMenu = useCallback(() => setIsMenuOpen(true), []);\n    const { insightMenuItemsProvider } = useDashboardCustomizationsContext();\n    const defaultMenuItems = useDefaultMenuItems(config, insightMenuItemsProvider, setIsMenuOpen);\n    const menuItems = useMemo(() => {\n        return insightMenuItemsProvider\n            ? insightMenuItemsProvider(insight, widget, defaultMenuItems, closeMenu, \"view\")\n            : defaultMenuItems;\n    }, [insightMenuItemsProvider, insight, widget, defaultMenuItems, closeMenu]);\n    return { menuItems, isMenuOpen, openMenu, closeMenu };\n};\nfunction useDefaultMenuItems(config, insightMenuItemsProvider, setIsMenuOpen) {\n    const { exportCSVEnabled, exportXLSXEnabled, scheduleExportEnabled, onExportCSV, onExportXLSX, onScheduleExport, isScheduleExportVisible, widget, } = config;\n    const intl = useIntl();\n    const execution = useDashboardSelector(selectExecutionResultByRef(widget.ref));\n    return useMemo(() => {\n        const defaultMenuItemsGetter = !insightMenuItemsProvider\n            ? getDefaultLegacyInsightMenuItems\n            : getDefaultInsightMenuItems;\n        return defaultMenuItemsGetter(intl, {\n            exportCSVDisabled: !exportCSVEnabled,\n            exportXLSXDisabled: !exportXLSXEnabled,\n            scheduleExportDisabled: !scheduleExportEnabled,\n            onExportCSV: () => {\n                setIsMenuOpen(false);\n                onExportCSV();\n            },\n            onExportXLSX: () => {\n                setIsMenuOpen(false);\n                onExportXLSX();\n            },\n            onScheduleExport: () => {\n                setIsMenuOpen(false);\n                onScheduleExport();\n            },\n            isScheduleExportVisible,\n            isDataError: isDataError(execution === null || execution === void 0 ? void 0 : execution.error),\n        });\n    }, [\n        insightMenuItemsProvider,\n        execution,\n        exportCSVEnabled,\n        exportXLSXEnabled,\n        scheduleExportEnabled,\n        onExportCSV,\n        onExportXLSX,\n        onScheduleExport,\n        isScheduleExportVisible,\n        intl,\n        setIsMenuOpen,\n    ]);\n}\n//# sourceMappingURL=useInsightMenu.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardSelector, selectInsightsMap } from \"../../../../model/index.js\";\n// Sometimes this component is rendered even before insights are ready, which blows up.\n// Since the behavior is nearly impossible to replicate reliably, let's be defensive here and not render\n// anything until the insights \"catch up\".\nexport const DashboardWidgetInsightGuard = (props) => {\n    const { widget, Component } = props;\n    const insights = useDashboardSelector(selectInsightsMap);\n    const insight = insights.get(widget.insight);\n    if (!insight) {\n        // eslint-disable-next-line no-console\n        console.debug(\"DefaultDashboardInsightWidget rendered before the insights were ready, skipping render.\");\n        return null;\n    }\n    return React.createElement(Component, Object.assign({}, props, { insight: insight }));\n};\n//# sourceMappingURL=DashboardWidgetInsightGuard.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useMemo, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nconst LINE_LENGTH = 28;\nconst LINE_NUMBER = 10;\n/**\n * Multiline ellipsis does not exist natively, so this is a simple version of it.\n *\n * The component cuts the text at approximately 'maxLines' lines.\n * It renders button 'Show more'/'Show less'.\n * The new line character poses the most trouble to calculate the cut point,\n * so it will estimate how much character worth of space was taken by it.\n *\n * There is several constants: the width is taken as 190px, the font-size is\n * 13px. The text is wrapped by words, so 28 characters is an approximate count\n * per line. By these metrics it can find a point to shorten the text. It is not\n * precise value, but it works most of the time, sometimes rendering 9 or 11 lines,\n * which is acceptable for this component usage.\n *\n * @internal\n */\nexport const EllipsisText = (props) => {\n    const { text, maxLines = LINE_NUMBER } = props;\n    const [collapsed, setCollapsed] = useState(true);\n    const intl = useIntl();\n    const overflowIndex = useMemo(() => {\n        const maxLength = maxLines * LINE_LENGTH;\n        let positionWithNewLine = 0;\n        for (let i = 0; i < text.length; i++) {\n            if (text[i] === \"\\n\" || text[i] === \"\\r\" || text[i] === \"\\r\\n\") {\n                const usedCharactersOnLine = positionWithNewLine % LINE_LENGTH;\n                const remainingCharactersOnLine = LINE_LENGTH - usedCharactersOnLine;\n                positionWithNewLine += remainingCharactersOnLine;\n            }\n            else {\n                positionWithNewLine++;\n            }\n            if (positionWithNewLine > maxLength) {\n                return i;\n            }\n        }\n        return null;\n    }, [text, maxLines]);\n    return (React.createElement(\"div\", { className: \"gd-ellipsis-text\" },\n        React.createElement(\"div\", { className: cx(\"gd-ellipsis-text-content\", { \"gd-ellipsis-text-fixed\": overflowIndex }) }, overflowIndex && collapsed ? (React.createElement(React.Fragment, null,\n            React.createElement(\"span\", null, text.slice(0, overflowIndex - 1)),\n            React.createElement(\"span\", { style: { userSelect: \"none\" } }, \"\\u2026\"))) : (React.createElement(\"span\", null, text))),\n        overflowIndex ? (React.createElement(\"button\", { className: \"gd-ellipsis-text-button\", onClick: () => setCollapsed((isCollapsed) => !isCollapsed) }, collapsed\n            ? intl.formatMessage({ id: \"descriptionPanel.button.more\" })\n            : intl.formatMessage({ id: \"descriptionPanel.button.less\" }))) : null));\n};\n//# sourceMappingURL=EllipsisText.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { IntlWrapper } from \"@gooddata/sdk-ui\";\nimport { EllipsisText } from \"./EllipsisText.js\";\nimport { Bubble, BubbleHoverTrigger } from \"../Bubble/index.js\";\nimport { useMediaQuery } from \"../responsive/index.js\";\nimport cx from \"classnames\";\n/**\n * @internal\n */\nexport const DESCRIPTION_PANEL_ALIGN_POINTS = [\n    { align: \"cr cl\" },\n    { align: \"tr tl\" },\n    { align: \"br bl\" },\n    { align: \"bc tc\" },\n    { align: \"bl tl\" },\n    { align: \"br tr\" },\n    { align: \"tc bc\" },\n    { align: \"tr br\" },\n    { align: \"tl bl\" },\n    { align: \"cl cr\" },\n    { align: \"tl tr\" },\n    { align: \"bl br\" },\n];\n/**\n * @internal\n */\nexport const DESCRIPTION_PANEL_ARROW_OFFSETS = {\n    \"br tr\": [0, 5],\n    \"bc tc\": [0, 5],\n    \"bl tl\": [0, 5],\n    \"tr br\": [0, -5],\n    \"tc bc\": [0, -5],\n    \"tl bl\": [0, -5],\n    \"tr tl\": [5, 0],\n    \"cr cl\": [5, 0],\n    \"br bl\": [5, 0],\n    \"tl tr\": [-5, 0],\n    \"cl cr\": [-5, 0],\n    \"bl br\": [-5, 0],\n};\n/**\n * @internal\n */\nexport const DescriptionPanel = (props) => (React.createElement(IntlWrapper, { locale: props.locale },\n    React.createElement(DescriptionPanelCore, Object.assign({}, props))));\n/**\n * @internal\n */\nexport const DescriptionPanelContent = (props) => (React.createElement(IntlWrapper, { locale: props.locale },\n    React.createElement(DescriptionPanelContentCore, Object.assign({}, props))));\n/**\n * @internal\n */\nexport const DescriptionIcon = ({ className }) => {\n    const isMobileDevice = useMediaQuery(\"mobileDevice\");\n    return (React.createElement(\"div\", { className: cx(\"s-description-trigger\", {\n            \"is-mobile\": isMobileDevice,\n            \"gd-icon-circle-question-wrapper\": !className,\n        }, className) },\n        React.createElement(\"div\", { className: \"gd-icon-circle-question\" })));\n};\nconst DescriptionPanelCore = (props) => {\n    const { arrowOffsets = DESCRIPTION_PANEL_ARROW_OFFSETS } = props;\n    return (React.createElement(BubbleHoverTrigger, { onBubbleOpen: props.onBubbleOpen, showDelay: 0, eventsOnBubble: true },\n        React.createElement(DescriptionIcon, { className: props.className }),\n        React.createElement(Bubble, { className: \"bubble-light gd-description-panel-bubble\", alignPoints: DESCRIPTION_PANEL_ALIGN_POINTS, arrowOffsets: arrowOffsets, arrowStyle: { display: \"none\" } },\n            React.createElement(DescriptionPanelContentCore, Object.assign({}, props)))));\n};\nconst DescriptionPanelContentCore = (props) => {\n    const { title, description } = props;\n    return (React.createElement(\"div\", { className: \"gd-description-panel s-gd-description-panel\" },\n        !isEmpty(title) && React.createElement(\"div\", { className: \"gd-description-panel-title\" }, title),\n        !isEmpty(description) && (React.createElement(\"div\", { className: \"gd-description-panel-content\" },\n            React.createElement(EllipsisText, { text: description })))));\n};\n//# sourceMappingURL=DescriptionPanel.js.map","// (C) 2022 GoodData Corporation\nimport React, { useState, useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { DescriptionIcon, DescriptionPanelContent, Bubble, DESCRIPTION_PANEL_ARROW_OFFSETS, } from \"@gooddata/sdk-ui-kit\";\nconst DESCRIPTION_PANEL_ALIGN_POINTS = [\n    { align: \"tr tl\" },\n    { align: \"cr cl\" },\n    { align: \"br bl\" },\n    { align: \"tl tr\" },\n    { align: \"cl cr\" },\n    { align: \"bl br\" },\n    { align: \"bl tl\" },\n    { align: \"bc tc\" },\n    { align: \"br tr\" },\n    { align: \"tl bl\" },\n    { align: \"tc bc\" },\n    { align: \"tr br\" },\n];\nexport const DescriptionClickTrigger = (props) => {\n    const { onOpen } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const switchIsOpen = useCallback(() => {\n        setIsOpen((isOpen) => {\n            if (!isOpen && onOpen) {\n                onOpen();\n            }\n            return !isOpen;\n        });\n    }, [setIsOpen, onOpen]);\n    const iconClassName = cx(\"dash-item-action-description\", {\n        \"dash-item-action-description-active\": isOpen,\n    }, props.className);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: iconClassName, onClick: switchIsOpen },\n            React.createElement(DescriptionIcon, { className: \"dash-item-action-description-trigger\" })),\n        isOpen ? (React.createElement(Bubble, { className: \"bubble-light gd-description-panel-bubble\", alignPoints: DESCRIPTION_PANEL_ALIGN_POINTS, arrowOffsets: DESCRIPTION_PANEL_ARROW_OFFSETS, arrowStyle: { display: \"none\" }, onClose: switchIsOpen, closeOnOutsideClick: true, closeOnParentScroll: false, alignTo: `.${props.className}` },\n            React.createElement(DescriptionPanelContent, Object.assign({}, props)))) : null));\n};\n//# sourceMappingURL=DescriptionClickTrigger.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { objRefToString, widgetRef } from \"@gooddata/sdk-model\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { DescriptionClickTrigger } from \"./DescriptionClickTrigger.js\";\nimport { useDashboardUserInteraction } from \"../../../model/index.js\";\nexport const InsightWidgetDescriptionTrigger = (props) => {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const { widget, insight } = props;\n    const visible = (_c = (_b = (_a = widget.configuration) === null || _a === void 0 ? void 0 : _a.description) === null || _b === void 0 ? void 0 : _b.visible) !== null && _c !== void 0 ? _c : true;\n    const description = ((_e = (_d = widget.configuration) === null || _d === void 0 ? void 0 : _d.description) === null || _e === void 0 ? void 0 : _e.source) === \"widget\" ? widget.description : insight.insight.summary;\n    const trimmedDescription = description === null || description === void 0 ? void 0 : description.trim();\n    const widgetRefAsString = objRefToString(widgetRef(widget));\n    const userInteraction = useDashboardUserInteraction();\n    const eventPayload = {\n        from: \"widget\",\n        type: ((_g = (_f = widget.configuration) === null || _f === void 0 ? void 0 : _f.description) === null || _g === void 0 ? void 0 : _g.source) === \"widget\" ? \"custom\" : \"inherit\",\n        description: trimmedDescription,\n    };\n    if (visible && trimmedDescription && trimmedDescription !== \"\") {\n        return (React.createElement(DescriptionClickTrigger, { className: `widget-description-${stringUtils.simplifyText(widgetRefAsString)}`, description: trimmedDescription, onOpen: () => userInteraction.descriptionTooltipOpened(eventPayload) }));\n    }\n    return null;\n};\n//# sourceMappingURL=InsightWidgetDescriptionTrigger.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo, useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { useIntl } from \"react-intl\";\nimport { insightVisualizationType, widgetTitle } from \"@gooddata/sdk-model\";\nimport { useDashboardSelector, isCustomWidget, useDashboardScheduledEmails, selectCanExportTabular, selectSettings, } from \"../../../../model/index.js\";\nimport { DashboardItem, DashboardItemHeadline, DashboardItemVisualization, getVisTypeCssClass, } from \"../../../presentationComponents/index.js\";\nimport { DashboardInsight } from \"../../insight/index.js\";\nimport { useInsightExport } from \"../../common/index.js\";\nimport { useDashboardComponentsContext } from \"../../../dashboardContexts/index.js\";\nimport { useInsightMenu } from \"./useInsightMenu.js\";\nimport { DashboardWidgetInsightGuard } from \"./DashboardWidgetInsightGuard.js\";\nimport { InsightWidgetDescriptionTrigger } from \"../../description/InsightWidgetDescriptionTrigger.js\";\nexport const DefaultDashboardInsightWidget = (props) => {\n    return React.createElement(DashboardWidgetInsightGuard, Object.assign({}, props, { Component: DefaultDashboardInsightWidgetCore }));\n};\n/**\n * @internal\n */\nconst DefaultDashboardInsightWidgetCore = ({ widget, insight, screen, onError, onExportReady, onLoadingChanged, dashboardItemClasses }) => {\n    const intl = useIntl();\n    const visType = insightVisualizationType(insight);\n    const { ref: widgetRef } = widget;\n    const { exportCSVEnabled, exportXLSXEnabled, onExportCSV, onExportXLSX } = useInsightExport({\n        widgetRef,\n        title: widgetTitle(widget) || intl.formatMessage({ id: \"export.defaultTitle\" }),\n        insight,\n    });\n    const { isScheduledEmailingVisible, enableInsightExportScheduling, onScheduleEmailingOpen } = useDashboardScheduledEmails();\n    const canExportTabular = useDashboardSelector(selectCanExportTabular);\n    const onScheduleExport = useCallback(() => {\n        onScheduleEmailingOpen(widgetRef);\n    }, [onScheduleEmailingOpen, widgetRef]);\n    const scheduleExportEnabled = !isCustomWidget(widget);\n    const { closeMenu, isMenuOpen, menuItems, openMenu } = useInsightMenu({\n        insight,\n        widget,\n        exportCSVEnabled,\n        exportXLSXEnabled,\n        scheduleExportEnabled,\n        onExportCSV,\n        onExportXLSX,\n        onScheduleExport,\n        isScheduleExportVisible: isScheduledEmailingVisible && canExportTabular && enableInsightExportScheduling,\n    });\n    const { InsightMenuButtonComponentProvider, InsightMenuComponentProvider, ErrorComponent, LoadingComponent, } = useDashboardComponentsContext();\n    const InsightMenuButtonComponent = useMemo(() => InsightMenuButtonComponentProvider(insight, widget), [InsightMenuButtonComponentProvider, insight, widget]);\n    const InsightMenuComponent = useMemo(() => InsightMenuComponentProvider(insight, widget), [InsightMenuComponentProvider, insight, widget]);\n    const settings = useDashboardSelector(selectSettings);\n    return (React.createElement(DashboardItem, { className: cx(dashboardItemClasses, \"type-visualization\", \"gd-dashboard-view-widget\", getVisTypeCssClass(widget.type, visType)), screen: screen },\n        React.createElement(DashboardItemVisualization, { renderHeadline: (clientHeight) => {\n                var _a;\n                return !((_a = widget.configuration) === null || _a === void 0 ? void 0 : _a.hideTitle) && (React.createElement(DashboardItemHeadline, { title: widget.title, clientHeight: clientHeight }));\n            }, renderBeforeVisualization: () => (React.createElement(\"div\", { className: \"gd-absolute-row\" },\n                (settings === null || settings === void 0 ? void 0 : settings.enableDescriptions) ? (React.createElement(InsightWidgetDescriptionTrigger, { insight: insight, widget: widget, screen: screen })) : null,\n                React.createElement(InsightMenuButtonComponent, { insight: insight, widget: widget, isOpen: isMenuOpen, onClick: openMenu, items: menuItems }))), renderAfterContent: () => {\n                if (!isMenuOpen) {\n                    return null;\n                }\n                return (React.createElement(InsightMenuComponent, { insight: insight, widget: widget, isOpen: isMenuOpen, onClose: closeMenu, items: menuItems }));\n            } }, ({ clientHeight, clientWidth }) => (React.createElement(DashboardInsight, { clientHeight: clientHeight, clientWidth: clientWidth, insight: insight, widget: widget, onExportReady: onExportReady, onLoadingChanged: onLoadingChanged, onError: onError, ErrorComponent: ErrorComponent, LoadingComponent: LoadingComponent })))));\n};\n//# sourceMappingURL=DefaultDashboardInsightWidget.js.map","// (C) 2019-2022 GoodData Corporation\nimport React, { useContext } from \"react\";\n/**\n * @internal\n */\nexport const useScrollContext = () => useContext(ScrollContext);\n/**\n * @internal\n */\nexport const scrollContextDefault = {\n    scrollIntoView: (_element, _bottomMargin, _isElementInvisibleCheck) => { },\n};\nexport const ScrollContext = React.createContext(scrollContextDefault);\n//# sourceMappingURL=ScrollContext.js.map","// (C) 2022-2023 GoodData Corporation\nimport throttle from \"lodash/throttle.js\";\nconst fireGoodstrapScrollEvent = (node, windowInstance = { dispatchEvent: (_event) => true }) => {\n    windowInstance.dispatchEvent(new CustomEvent(\"goodstrap.scrolled\", {\n        // this will close dropdowns with closeOnParentScroll=true\n        bubbles: true,\n        detail: {\n            node,\n        },\n    }));\n};\n/**\n * This is custom dom goodstrap event, it is used by Overlay to handle CloseOnParentScroll\n * This event is throttled by default\n * @internal\n */\nexport const handleOnScrollEvent = throttle((node) => fireGoodstrapScrollEvent(node, window), 500);\n//# sourceMappingURL=scroll.js.map","import { __rest } from \"tslib\";\n// (C) 2019-2022 GoodData Corporation\nimport React, { useRef, useImperativeHandle, useMemo, useCallback } from \"react\";\nimport { ScrollContext } from \"./ScrollContext.js\";\nimport { handleOnScrollEvent } from \"../utils/scroll.js\";\nconst DEFAULT_BOTTOM_MARGIN = 5;\nconst scrollToVisibleDefault = (element, container, bottomMargin) => {\n    container.scrollTop = element.offsetTop - container.offsetTop - bottomMargin;\n};\nconst isElementInvisibleCheckDefault = (element, container) => {\n    if (element && container) {\n        const offset = element.offsetTop - container.offsetTop;\n        const itemHeight = element.clientHeight;\n        const parentHeight = container.clientHeight;\n        return parentHeight < offset + itemHeight;\n    }\n    return false;\n};\n/**\n * @internal\n */\nexport const ScrollablePanel = React.forwardRef(function ScrollablePanel(props, ref) {\n    const { tagName: TagName = \"div\", scrollToVisible = scrollToVisibleDefault, children } = props, divProps = __rest(props, [\"tagName\", \"scrollToVisible\", \"children\"]);\n    const containerRef = useRef();\n    useImperativeHandle(ref, () => containerRef.current);\n    const memoizeContext = useMemo(() => {\n        return {\n            scrollIntoView: (element, bottomMargin = DEFAULT_BOTTOM_MARGIN, isElementInvisibleCheck = isElementInvisibleCheckDefault) => {\n                if (containerRef.current) {\n                    const container = containerRef.current;\n                    if (isElementInvisibleCheck(element, container)) {\n                        scrollToVisible(element, container, bottomMargin);\n                    }\n                }\n            },\n        };\n    }, [scrollToVisible, containerRef]);\n    const onPanelScroll = useCallback(() => {\n        if (containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) {\n            handleOnScrollEvent(containerRef.current);\n        }\n    }, []);\n    return (React.createElement(ScrollContext.Provider, { value: memoizeContext },\n        React.createElement(TagName, Object.assign({}, divProps, { ref: containerRef, onScroll: onPanelScroll }), children)));\n});\n//# sourceMappingURL=ScrollablePanel.js.map","// (C) 2020-2022 GoodData Corporation\n// Z index of all overlays in Dashboard component\nexport const DASHBOARD_OVERLAYS_Z_INDEX = 5000;\n// Z index of all overlays in Dashboard header component\nexport const DASHBOARD_HEADER_OVERLAYS_Z_INDEX = 6000;\n// Z index of all overlays in Dashboard component in conflict with filter bar\nexport const DASHBOARD_OVERLAYS_FILTER_Z_INDEX = 6000;\n//# sourceMappingURL=zIndex.js.map","// (C) 2022-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { areObjRefsEqual, insightMeasures, isDateFilter, isSimpleMeasure, measureFilters, } from \"@gooddata/sdk-model\";\nexport function getUnrelatedDateDataset(relatedDateDataSets, selectedDateDataSet, selectedDateDataSetHidden) {\n    if (!selectedDateDataSet || selectedDateDataSetHidden) {\n        return undefined;\n    }\n    const idx = relatedDateDataSets.findIndex((dateDataSet) => areObjRefsEqual(dateDataSet.dataSet.ref, selectedDateDataSet.dataSet.ref));\n    return idx < 0 ? selectedDateDataSet : undefined;\n}\nfunction isDateFiltered(measure) {\n    if (isSimpleMeasure(measure)) {\n        const filters = measureFilters(measure);\n        return !!(filters === null || filters === void 0 ? void 0 : filters.some(isDateFilter));\n    }\n    return true;\n}\nexport function getDateOptionsDisabledForInsight(insight) {\n    const measures = insightMeasures(insight);\n    return isEmpty(measures) ? false : measures.every(isDateFiltered);\n}\nexport function removeDateFromTitle(title) {\n    return title.trim().replace(/^Date \\((.*)\\)$/, \"$1\");\n}\nexport function getAttributeByDisplayForm(attributes, displayForm) {\n    return attributes.find((attribute) => areObjRefsEqual(attribute.ref, displayForm));\n}\n//# sourceMappingURL=utils.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nimport { getUnrelatedDateDataset } from \"./utils.js\";\nexport const DateFilterCheckbox = (props) => {\n    const { isDropdownLoading, isFilterLoading, dateFilterEnabled, selectedDateDataset, selectedDateDatasetHidden, dateFilterCheckboxDisabled, relatedDateDatasets, widget, onDateDatasetFilterEnabled, } = props;\n    const unrelatedDateDataset = relatedDateDatasets &&\n        getUnrelatedDateDataset(relatedDateDatasets, selectedDateDataset, selectedDateDatasetHidden);\n    const hasRelatedDateDataSets = !!(relatedDateDatasets === null || relatedDateDatasets === void 0 ? void 0 : relatedDateDatasets.length);\n    const showNoRelatedDate = !hasRelatedDateDataSets &&\n        !selectedDateDatasetHidden &&\n        dateFilterEnabled &&\n        !isDropdownLoading &&\n        !dateFilterCheckboxDisabled;\n    const showError = (!!unrelatedDateDataset || showNoRelatedDate) &&\n        !isDropdownLoading &&\n        !isFilterLoading &&\n        dateFilterEnabled &&\n        !selectedDateDatasetHidden &&\n        !dateFilterCheckboxDisabled;\n    const classes = cx(\"s-date-filter-by-item\", \"input-checkbox-label\", \"filter-by-item\", {\n        \"date-filter-error\": showError,\n    });\n    const handleChange = useCallback((e) => {\n        const { checked } = e.target;\n        const dateDataSetRef = selectedDateDataset ? selectedDateDataset.dataSet.ref : undefined;\n        // convert to non-immutable\n        onDateDatasetFilterEnabled(checked, dateDataSetRef);\n    }, [onDateDatasetFilterEnabled, selectedDateDataset]);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"label\", { className: classes, htmlFor: \"configurationPanel.date.input\" },\n            React.createElement(\"input\", { className: \"input-checkbox s-date-filter-checkbox\", id: \"configurationPanel.date.input\", type: \"checkbox\", checked: !dateFilterCheckboxDisabled && dateFilterEnabled, disabled: dateFilterCheckboxDisabled, onChange: handleChange }),\n            React.createElement(\"span\", { className: \"input-label-text title\" },\n                React.createElement(FormattedMessage, { id: \"configurationPanel.date\" })),\n            isFilterLoading ? React.createElement(\"div\", { className: \"gd-spinner small\" }) : null),\n        !isFilterLoading && showNoRelatedDate ? (React.createElement(\"div\", { className: \"gd-message error s-no-related-date\" }, isInsightWidget(widget) ? (React.createElement(FormattedMessage, { id: \"configurationPanel.vizCantBeFilteredByDate\" })) : (React.createElement(FormattedMessage, { id: \"configurationPanel.kpiCantBeFilteredByDate\" })))) : null));\n};\n//# sourceMappingURL=DateFilterCheckbox.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { PureComponent } from \"react\";\nimport cx from \"classnames\";\nimport { BubbleHoverTrigger } from \"../Bubble/BubbleHoverTrigger.js\";\nimport { Bubble } from \"../Bubble/Bubble.js\";\n// ShortenText adds ellipsis (…) in the middle of the string.\n// SIDE_SCALE_RATIO is a constant which tells the percentage of\n// of the string characters to be taken from both sides to produce\n// final shortened string\nconst SIDE_SCALE_RATIO = 0.42;\nfunction getElementWidth(element) {\n    return Math.ceil(element.getBoundingClientRect().width);\n}\nexport function getShortenedTitle(title, element) {\n    const elementWidth = getElementWidth(element);\n    const { scrollWidth } = element;\n    if (elementWidth >= scrollWidth) {\n        return title;\n    }\n    const titleLength = title.length;\n    const numChars = titleLength * (elementWidth / scrollWidth);\n    const numCharsSideStrip = Math.floor(numChars * SIDE_SCALE_RATIO);\n    const pre = title.substr(0, numCharsSideStrip);\n    const post = title.substr(titleLength - numCharsSideStrip, titleLength);\n    return `${pre}…${post}`;\n}\n/**\n * To make this component work, parent container needs this:\n *      max-width: Xpx;\n *      white-space: nowrap;\n *\n * and the component itself needs:\n *      display: inline-block;\n *      width: 100%;\n *      white-space: nowrap;\n */\n/**\n * @internal\n */\nclass ShortenedText extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.textRef = React.createRef();\n        this.state = {\n            title: props.children,\n            customTitle: false,\n        };\n    }\n    componentDidMount() {\n        this.checkTitle();\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.children !== nextProps.children) {\n            this.setState({\n                title: nextProps.children,\n                customTitle: false,\n            });\n        }\n    }\n    componentDidUpdate() {\n        if (this.state.customTitle) {\n            return;\n        }\n        this.checkTitle();\n    }\n    checkTitle() {\n        const element = this.props.getElement(this);\n        const title = this.props.children;\n        const elementWidth = getElementWidth(element);\n        if (elementWidth > 0 && elementWidth < element.scrollWidth) {\n            this.setState({ title: getShortenedTitle(title, element), customTitle: true });\n        }\n    }\n    recomputeShortening() {\n        // causes repaint & checkTitle to be called\n        this.setState({\n            title: this.props.children,\n            customTitle: false,\n        });\n    }\n    renderTextWithBubble() {\n        return (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0, eventsOnBubble: this.props.tooltipVisibleOnMouseOver },\n            React.createElement(Bubble, { alignPoints: this.props.tooltipAlignPoints }, this.state.customTitle ? this.props.children : \"\"),\n            this.renderText()));\n    }\n    renderText() {\n        const TagName = this.props.tagName;\n        return (React.createElement(TagName, { ref: this.textRef, className: cx(this.props.className, \"shortened\", {\n                \"is-shortened\": this.state.customTitle,\n                \"is-whole\": !this.state.customTitle,\n            }) }, this.state.title));\n    }\n    render() {\n        if (this.state.customTitle && this.props.displayTooltip) {\n            return this.renderTextWithBubble();\n        }\n        return this.renderText();\n    }\n}\nShortenedText.defaultProps = {\n    className: \"\",\n    tagName: \"span\",\n    tooltipAlignPoints: [{ align: \"cr cl\" }],\n    tooltipVisibleOnMouseOver: false,\n    getElement(context) {\n        // Necessary for testing width in JSDOM env.\n        return context.textRef.current;\n    },\n    displayTooltip: true,\n};\nexport { ShortenedText };\n//# sourceMappingURL=ShortenedText.js.map","// (C) 2007-2021 GoodData Corporation\nimport groupBy from \"lodash/groupBy.js\";\nimport takeWhile from \"lodash/takeWhile.js\";\nimport first from \"lodash/first.js\";\n/**\n * @internal\n */\nexport const isDateDatasetHeader = (obj) => {\n    return obj && obj.type === \"header\";\n};\nfunction hasSameRelevance(dateDatasets) {\n    const relevanceCount = Object.keys(groupBy(dateDatasets, \"relevance\")).length;\n    return relevanceCount === 1;\n}\nconst relevanceComparator = (a, b) => b.relevance - a.relevance; // descending sort\nconst titleComparator = (a, b) => {\n    return a.title.localeCompare(b.title);\n};\nfunction sortByTitle(dateDatasets) {\n    return dateDatasets.slice().sort(titleComparator);\n}\nfunction sortByRelevanceAndTitle(dateDatasets) {\n    return dateDatasets.slice().sort((a, b) => {\n        if (a.relevance === b.relevance) {\n            return titleComparator(a, b);\n        }\n        return relevanceComparator(a, b);\n    });\n}\nconst MAX_RECOMMENDED_ITEMS = 3;\n/**\n * @internal\n */\nexport const recommendedHeader = {\n    title: \"gs.date.date-dataset.recommended\",\n    type: \"header\",\n};\n/**\n * @internal\n */\nexport const otherHeader = {\n    title: \"gs.date.date-dataset.other\",\n    type: \"header\",\n};\n/**\n * @internal\n */\nexport const relatedHeader = {\n    title: \"gs.date.date-dataset.related\",\n    type: \"header\",\n};\n/**\n * @internal\n */\nexport const unrelatedHeader = {\n    title: \"gs.date.date-dataset.unrelated\",\n    type: \"header\",\n};\nfunction addUnrelatedDateDataset(dateDatasets, unrelatedDateDataset) {\n    if (hasSameRelevance(dateDatasets)) {\n        return [unrelatedHeader, unrelatedDateDataset, relatedHeader, ...dateDatasets];\n    }\n    return [unrelatedHeader, unrelatedDateDataset, ...dateDatasets];\n}\n/**\n * @internal\n */\nexport function getRecommendedDateDataset(items) {\n    if (hasSameRelevance(items)) {\n        return null;\n    }\n    return first(sortByRelevanceAndTitle(items));\n}\n/**\n * @internal\n */\nexport function transform2Dropdown(dateDatasets) {\n    if (!dateDatasets.length) {\n        return [];\n    }\n    const items = sortByRelevanceAndTitle(dateDatasets);\n    if (!hasSameRelevance(items)) {\n        const nonZeroRelevanceItemsCount = takeWhile(items, (i) => i.relevance > 0).length;\n        const othersIndex = Math.min(MAX_RECOMMENDED_ITEMS, nonZeroRelevanceItemsCount);\n        const recommendedItems = [recommendedHeader, ...items.slice(0, othersIndex)];\n        if (othersIndex < items.length) {\n            return [...recommendedItems, otherHeader, ...sortByTitle(items.slice(othersIndex))];\n        }\n        return recommendedItems;\n    }\n    return sortByTitle(items);\n}\nfunction getRecommendedItems(recommendedDate, others) {\n    return [recommendedHeader, recommendedDate, otherHeader, ...sortByTitle(others)];\n}\n/**\n * @internal\n */\nexport function preselectDateDataset(dateDatasets, recommendedDate) {\n    const others = dateDatasets.filter((d) => d.id !== recommendedDate.id);\n    if (others.length > 0) {\n        return getRecommendedItems(recommendedDate, others);\n    }\n    return [recommendedDate];\n}\n/**\n * @internal\n */\nexport function sortDateDatasets(dateDatasets, recommendedDate = null, unrelatedDate = null) {\n    let items = recommendedDate\n        ? preselectDateDataset(dateDatasets, recommendedDate)\n        : transform2Dropdown(dateDatasets);\n    if (unrelatedDate) {\n        items = addUnrelatedDateDataset(items, unrelatedDate);\n    }\n    return items;\n}\n//# sourceMappingURL=dateDatasets.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useEffect, useRef } from \"react\";\nimport { useScrollContext } from \"./ScrollContext.js\";\n/**\n * @internal\n */\nexport const ScrollableItem = (props) => {\n    const item = useRef(null);\n    const scroll = useScrollContext();\n    const { scrollIntoView, bottomMargin, isElementInvisibleCheck, className, children, onItemScrolled, tagName: TagName = \"div\", } = props;\n    useEffect(() => {\n        if (scrollIntoView) {\n            const element = item.current;\n            scroll.scrollIntoView(element, bottomMargin, isElementInvisibleCheck);\n            if (onItemScrolled) {\n                onItemScrolled();\n            }\n        }\n    }, [bottomMargin, isElementInvisibleCheck, scroll, scrollIntoView, item, onItemScrolled]);\n    return (React.createElement(TagName, { className: className, ref: item }, children));\n};\n//# sourceMappingURL=ScrollableItem.js.map","// (C) 2007-2023 GoodData Corporation\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { defineMessages, useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { Dropdown, DropdownButton, DropdownList, sortDateDatasets, isDateDatasetHeader, ShortenedText, ScrollableItem, } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { removeDateFromTitle } from \"./utils.js\";\nconst DEFAULT_HYPHEN_CHAR = \"-\";\nconst alignPoints = [{ align: \"bl tl\" }, { align: \"tl bl\" }];\nconst tooltipAlignPoints = [\n    { align: \"cl cr\", offset: { x: -10, y: 0 } },\n    { align: \"cr cl\", offset: { x: 10, y: 0 } },\n];\n// work around the evil DateDatasetsListItem from kit that magically translates SOME of the items' titles\n// this way the i18n actually has a chance to detect these\nconst dateDatasetHeaderMessages = defineMessages({\n    \"gs.date.date-dataset.recommended\": { id: \"gs.date.date-dataset.recommended\" },\n    \"gs.date.date-dataset.other\": { id: \"gs.date.date-dataset.other\" },\n    \"gs.date.date-dataset.related\": { id: \"gs.date.date-dataset.related\" },\n    \"gs.date.date-dataset.unrelated\": { id: \"gs.date.date-dataset.unrelated\" },\n});\nconst DateDatasetsListItem = ({ id, title = \"\", isHeader, isSelected, isUnrelated, onClick, }) => {\n    if (isHeader) {\n        return React.createElement(\"div\", { className: \"gd-list-item gd-list-item-header\" }, title);\n    }\n    const classNames = cx(\"gd-list-item\", \"gd-list-item-shortened\", `s-${id}`, `s-${stringUtils.simplifyText(title)}`, {\n        \"is-selected\": isSelected,\n        \"is-unrelated\": isUnrelated,\n    });\n    return (React.createElement(\"div\", { className: classNames, onClick: onClick },\n        React.createElement(ShortenedText, { tooltipAlignPoints: tooltipAlignPoints }, title)));\n};\nfunction catalogDateDatasetToDateDataset(ds) {\n    return {\n        id: ds.dataSet.id,\n        title: ds.dataSet.title,\n        relevance: ds.relevance,\n    };\n}\nexport const DateDatasetDropdown = (props) => {\n    const { className = \"s-date-dataset-switch\", isLoading = false, autoOpen = false, onDateDatasetChange, activeDateDataset, unrelatedDateDataset, width, dateFromVisualization, relatedDateDatasets, widgetRef, } = props;\n    const intl = useIntl();\n    const { onItemScroll, closeOnParentScroll } = useAutoScroll(autoOpen);\n    const unrelatedDateDataSetId = unrelatedDateDataset ? unrelatedDateDataset.dataSet.id : null;\n    let activeDateDataSetId;\n    let activeDateDataSetTitle = DEFAULT_HYPHEN_CHAR;\n    let activeDateDataSetUri;\n    let recommendedDateDataSet = null;\n    if (!isLoading && activeDateDataset) {\n        activeDateDataSetId = activeDateDataset.dataSet.id;\n        activeDateDataSetTitle = activeDateDataset.dataSet.title;\n        activeDateDataSetUri = activeDateDataset.dataSet.uri;\n    }\n    if (dateFromVisualization) {\n        recommendedDateDataSet = relatedDateDatasets.find((d) => d.dataSet.uri === dateFromVisualization.dataSet.uri);\n    }\n    const sortedItems = sortDateDatasets(relatedDateDatasets.map(catalogDateDatasetToDateDataset), recommendedDateDataSet ? catalogDateDatasetToDateDataset(recommendedDateDataSet) : undefined, unrelatedDateDataset ? catalogDateDatasetToDateDataset(unrelatedDateDataset) : undefined);\n    return (React.createElement(Dropdown\n    // We want to open the dropdown, when user selects a metric\n    // without a recommended data set\n    , { \n        // We want to open the dropdown, when user selects a metric\n        // without a recommended data set\n        key: `${objRefToString(widgetRef)}_${autoOpen}`, openOnInit: autoOpen, ignoreClicksOnByClass: [\".dash-content\"], renderButton: ({ isOpen, toggleDropdown }) => {\n            const buttonClassName = cx(\"s-date-dataset-button\", isOpen ? \"s-expanded\" : \"s-collapsed\", {\n                \"is-loading\": isLoading,\n                \"is-unrelated\": !isLoading &&\n                    unrelatedDateDataset &&\n                    unrelatedDateDataset.dataSet.uri === activeDateDataSetUri,\n            });\n            const buttonValue = isLoading\n                ? intl.formatMessage({ id: \"loading\" })\n                : removeDateFromTitle(activeDateDataSetTitle);\n            return (React.createElement(ScrollableItem, { scrollIntoView: autoOpen, onItemScrolled: onItemScroll },\n                React.createElement(DropdownButton, { className: buttonClassName, value: buttonValue, isOpen: isOpen, onClick: toggleDropdown, disabled: isLoading })));\n        }, className: className, closeOnParentScroll: closeOnParentScroll, closeOnMouseDrag: true, alignPoints: alignPoints, renderBody: ({ closeDropdown }) => {\n            if (isLoading) {\n                return null;\n            }\n            return (React.createElement(DropdownList, { className: \"configuration-dropdown dataSets-list\", width: width, items: sortedItems, itemsCount: sortedItems.length, renderItem: ({ item }) => {\n                    const isHeader = isDateDatasetHeader(item);\n                    const isSelected = !isDateDatasetHeader(item) && activeDateDataSetId === item.id;\n                    const isUnrelated = !isDateDatasetHeader(item) && unrelatedDateDataSetId === item.id;\n                    return (React.createElement(DateDatasetsListItem, { title: isHeader\n                            ? intl.formatMessage(dateDatasetHeaderMessages[item.title])\n                            : removeDateFromTitle(item.title), isHeader: isHeader, isSelected: isSelected, isUnrelated: isUnrelated, onClick: (e) => {\n                            e.preventDefault();\n                            if (isDateDatasetHeader(item)) {\n                                return;\n                            }\n                            closeDropdown();\n                            onDateDatasetChange(item.id);\n                        } }));\n                } }));\n        } }));\n};\n/**\n * Purpose of this hook is keep value of closeOnParentScroll derived from autoOpen\n * We need set closeOnParentScroll to false and after item scrolled return to true\n * otherwise dropdown is immediately closed when item is scrolled to view\n */\nexport function useAutoScroll(autoOpen) {\n    const [closeOnParentScroll, setCloseOnParentScroll] = useState(!autoOpen);\n    useEffect(() => {\n        setCloseOnParentScroll(!autoOpen);\n    }, [autoOpen]);\n    const onItemScroll = useCallback(() => {\n        setTimeout(() => {\n            setCloseOnParentScroll(true);\n        }, 300);\n    }, []);\n    return {\n        onItemScroll,\n        closeOnParentScroll,\n    };\n}\n//# sourceMappingURL=DateDatasetDropdown.js.map","// (C) 2007-2023 GoodData Corporation\nimport React from \"react\";\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nimport { FormattedMessage } from \"react-intl\";\nimport DefaultMeasure from \"react-measure\";\nimport { DateDatasetDropdown } from \"./DateDatasetDropdown.js\";\nimport { getUnrelatedDateDataset, removeDateFromTitle } from \"./utils.js\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Measure = defaultImport(DefaultMeasure);\nexport const DateDatasetPicker = (props) => {\n    const { relatedDateDatasets, selectedDateDataset, selectedDateDatasetHidden, widget, dateFromVisualization, autoOpen, isLoading, onDateDatasetChange, } = props;\n    const unrelatedDateDataset = relatedDateDatasets &&\n        getUnrelatedDateDataset(relatedDateDatasets, selectedDateDataset, selectedDateDatasetHidden);\n    const getDateFilter = (measureRef, width) => (React.createElement(\"div\", { className: \"subcategory-dropdown\", ref: measureRef },\n        React.createElement(DateDatasetDropdown, { autoOpen: autoOpen, widgetRef: widget.ref, className: \"s-filter-date-dropdown\", relatedDateDatasets: relatedDateDatasets !== null && relatedDateDatasets !== void 0 ? relatedDateDatasets : [], activeDateDataset: selectedDateDatasetHidden ? undefined : selectedDateDataset, unrelatedDateDataset: unrelatedDateDataset, dateFromVisualization: dateFromVisualization, onDateDatasetChange: onDateDatasetChange, isLoading: isLoading, width: width })));\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"configuration-subcategory\" },\n            React.createElement(\"label\", { className: \"s-filter-date-dropdown-heading subcategory-label\", htmlFor: \"s-filter-date-dropdown\" },\n                React.createElement(FormattedMessage, { id: \"configurationPanel.dateAs\" })),\n            React.createElement(Measure, null, ({ measureRef, contentRect }) => getDateFilter(measureRef, contentRect.entry.width || 0))),\n        !!(unrelatedDateDataset && !isLoading) && (React.createElement(\"div\", { className: \"gd-message error s-unrelated-date\" }, isInsightWidget(widget) ? (React.createElement(FormattedMessage, { id: \"configurationPanel.unrelatedVizDateInfo\", values: { dateDataSet: removeDateFromTitle(unrelatedDateDataset.dataSet.title) } })) : (React.createElement(FormattedMessage, { id: \"configurationPanel.unrelatedKpiDateInfo\", values: { dateDataSet: removeDateFromTitle(unrelatedDateDataset.dataSet.title) } }))))));\n};\n//# sourceMappingURL=DateDatasetPicker.js.map","import { getRecommendedDateDataset } from \"@gooddata/sdk-ui-kit\";\nexport function getRecommendedCatalogDateDataset(dateDatasets) {\n    var _a;\n    const recommendedDateDataSetId = (_a = getRecommendedDateDataset(dateDatasets.map((ds) => {\n        return {\n            id: ds.dataSet.id,\n            title: ds.dataSet.title,\n            relevance: ds.relevance,\n        };\n    }))) === null || _a === void 0 ? void 0 : _a.id;\n    return recommendedDateDataSetId\n        ? dateDatasets.find((ds) => ds.dataSet.id === recommendedDateDataSetId)\n        : undefined;\n}\n//# sourceMappingURL=getRecommendedCatalogDateDataset.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useState } from \"react\";\nimport { DateFilterCheckbox } from \"./DateFilterCheckbox.js\";\nimport { useDashboardSelector, selectAllCatalogDateDatasetsMap } from \"../../../../model/index.js\";\nimport { DateDatasetPicker } from \"./DateDatasetPicker.js\";\nimport { getUnrelatedDateDataset } from \"./utils.js\";\nimport { useDateFilterConfigurationHandling } from \"./useDateFilterConfigurationHandling.js\";\nimport { useIsSelectedDatasetHidden } from \"./useIsSelectedDatasetHidden.js\";\nexport const DateDatasetFilter = (props) => {\n    const { relatedDateDatasets, widget, dateFilterCheckboxDisabled, dateFromVisualization, isDatasetsLoading, shouldPickDateDataset, shouldOpenDateDatasetPicker, onDateDatasetChanged, isLoadingAdditionalData, } = props;\n    const catalogDatasetsMap = useDashboardSelector(selectAllCatalogDateDatasetsMap);\n    const selectedDateDataset = widget.dateDataSet && catalogDatasetsMap.get(widget.dateDataSet);\n    const { selectedDateDatasetHiddenByObjectAvailability, status: visibleDateDatasetsStatus } = useIsSelectedDatasetHidden(selectedDateDataset === null || selectedDateDataset === void 0 ? void 0 : selectedDateDataset.dataSet.ref);\n    const [isDateFilterEnabled, setIsDateFilterEnabled] = useState(!!widget.dateDataSet || shouldPickDateDataset || isLoadingAdditionalData);\n    const { handleDateDatasetChanged: handleDateDatasetChangedCore, handleDateFilterEnabled, status, } = useDateFilterConfigurationHandling(widget, relatedDateDatasets, setIsDateFilterEnabled);\n    const handleDateDatasetChanged = useCallback((id) => {\n        onDateDatasetChanged === null || onDateDatasetChanged === void 0 ? void 0 : onDateDatasetChanged(id);\n        handleDateDatasetChangedCore(id);\n    }, [handleDateDatasetChangedCore, onDateDatasetChanged]);\n    const isFilterLoading = status === \"loading\";\n    const isDropdownLoading = isDatasetsLoading || visibleDateDatasetsStatus === \"loading\";\n    const shouldRenderDateDataSetsDropdown = !dateFilterCheckboxDisabled &&\n        !(!isDateFilterEnabled || isFilterLoading) &&\n        ((relatedDateDatasets === null || relatedDateDatasets === void 0 ? void 0 : relatedDateDatasets.length) || isDropdownLoading || selectedDateDatasetHiddenByObjectAvailability);\n    const unrelatedDateDataset = relatedDateDatasets &&\n        getUnrelatedDateDataset(relatedDateDatasets, selectedDateDataset, selectedDateDatasetHiddenByObjectAvailability);\n    return (React.createElement(\"div\", null,\n        React.createElement(DateFilterCheckbox, { relatedDateDatasets: relatedDateDatasets, widget: widget, dateFilterCheckboxDisabled: dateFilterCheckboxDisabled, dateFilterEnabled: isDateFilterEnabled, isDropdownLoading: isDropdownLoading, isFilterLoading: isFilterLoading, selectedDateDataset: selectedDateDataset, selectedDateDatasetHidden: selectedDateDatasetHiddenByObjectAvailability, onDateDatasetFilterEnabled: handleDateFilterEnabled }),\n        !!shouldRenderDateDataSetsDropdown && (React.createElement(DateDatasetPicker, { relatedDateDatasets: relatedDateDatasets, dateFromVisualization: dateFromVisualization, widget: widget, selectedDateDataset: selectedDateDataset, selectedDateDatasetHidden: selectedDateDatasetHiddenByObjectAvailability, unrelatedDateDataset: unrelatedDateDataset, onDateDatasetChange: handleDateDatasetChanged, autoOpen: shouldOpenDateDatasetPicker, isLoading: isDropdownLoading }))));\n};\n//# sourceMappingURL=DateDatasetFilter.js.map","// (C) 2022 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { areObjRefsEqual, idRef } from \"@gooddata/sdk-model\";\nimport { useDashboardSelector, selectObjectAvailabilityConfig, selectCatalogDateDatasets, } from \"../../../../model/index.js\";\nimport { useBackendStrict, useCancelablePromise, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { safeSerializeObjRef } from \"../../../../_staging/metadata/safeSerializeObjRef.js\";\nexport function useIsSelectedDatasetHidden(selectedDateDatasetRef) {\n    var _a, _b;\n    const backend = useBackendStrict();\n    const workspace = useWorkspaceStrict();\n    const allDateDatasets = useDashboardSelector(selectCatalogDateDatasets);\n    const objectAvailability = useDashboardSelector(selectObjectAvailabilityConfig);\n    const hasObjectAvailability = !!(((_a = objectAvailability.excludeObjectsWithTags) === null || _a === void 0 ? void 0 : _a.length) || ((_b = objectAvailability.includeObjectsWithTags) === null || _b === void 0 ? void 0 : _b.length));\n    const { result: visibleDateDatasets, status } = useCancelablePromise({\n        promise: hasObjectAvailability\n            ? async () => {\n                var _a, _b;\n                const catalog = await backend\n                    .workspace(workspace)\n                    .catalog()\n                    .withGroups(false)\n                    .forTypes([\"dateDataset\"])\n                    .excludeTags(((_a = objectAvailability.excludeObjectsWithTags) !== null && _a !== void 0 ? _a : []).map((tag) => idRef(tag)))\n                    .includeTags(((_b = objectAvailability.includeObjectsWithTags) !== null && _b !== void 0 ? _b : []).map((tag) => idRef(tag)))\n                    .load();\n                return catalog.dateDatasets();\n            }\n            : () => Promise.resolve(allDateDatasets),\n    }, [backend, workspace, objectAvailability]);\n    const selectedDateDatasetHiddenByObjectAvailability = useMemo(() => {\n        if (!visibleDateDatasets || !selectedDateDatasetRef) {\n            return false;\n        }\n        return !visibleDateDatasets.some((ds) => areObjRefsEqual(selectedDateDatasetRef, ds.dataSet.ref));\n    }, [safeSerializeObjRef(selectedDateDatasetRef), visibleDateDatasets]);\n    return {\n        selectedDateDatasetHiddenByObjectAvailability,\n        status,\n    };\n}\n//# sourceMappingURL=useIsSelectedDatasetHidden.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport { idRef, isInsightWidget, widgetRef } from \"@gooddata/sdk-model\";\nimport first from \"lodash/first.js\";\nimport { disableInsightWidgetDateFilter, disableKpiWidgetDateFilter, enableInsightWidgetDateFilter, enableKpiWidgetDateFilter, useDashboardCommandProcessing, } from \"../../../../model/index.js\";\nimport { safeSerializeObjRef } from \"../../../../_staging/metadata/safeSerializeObjRef.js\";\nimport { getRecommendedCatalogDateDataset } from \"../../../../_staging/dateDatasets/getRecommendedCatalogDateDataset.js\";\nexport function useDateFilterConfigurationHandling(widget, relatedDateDatasets, onAppliedChanged) {\n    const [status, setStatus] = useState(\"ok\");\n    const ref = widgetRef(widget);\n    const { run: disableKpiDateFilter } = useDashboardCommandProcessing({\n        commandCreator: disableKpiWidgetDateFilter,\n        successEvent: \"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(false);\n        },\n    });\n    const { run: enableKpiDateFilter } = useDashboardCommandProcessing({\n        commandCreator: enableKpiWidgetDateFilter,\n        successEvent: \"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(true);\n            setStatus(\"loading\");\n        },\n        onError: () => {\n            setStatus(\"error\");\n        },\n        onSuccess: (_command) => {\n            setStatus(\"ok\");\n        },\n    });\n    const { run: disableInsightDateFilter } = useDashboardCommandProcessing({\n        commandCreator: disableInsightWidgetDateFilter,\n        successEvent: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(false);\n        },\n    });\n    const { run: enableInsightDateFilter } = useDashboardCommandProcessing({\n        commandCreator: enableInsightWidgetDateFilter,\n        successEvent: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(true);\n            setStatus(\"loading\");\n        },\n        onError: () => {\n            setStatus(\"error\");\n        },\n        onSuccess: (_command) => {\n            setStatus(\"ok\");\n        },\n    });\n    const handleDateFilterEnabled = useCallback((enabled, dateDatasetRef) => {\n        const getPreselectedDateDataset = () => {\n            if (!(relatedDateDatasets === null || relatedDateDatasets === void 0 ? void 0 : relatedDateDatasets.length)) {\n                return null;\n            }\n            // preselect the recommended if any, or the first one\n            const recommendedDateDataSet = getRecommendedCatalogDateDataset(relatedDateDatasets);\n            const firstDataSet = first(relatedDateDatasets);\n            return recommendedDateDataSet\n                ? recommendedDateDataSet.dataSet.ref\n                : firstDataSet.dataSet.ref;\n        };\n        const enable = isInsightWidget(widget) ? enableInsightDateFilter : enableKpiDateFilter;\n        const disable = isInsightWidget(widget) ? disableInsightDateFilter : disableKpiDateFilter;\n        if (enabled) {\n            if (dateDatasetRef) {\n                enable(ref, dateDatasetRef);\n            }\n            else {\n                const preselectedDateDataSetRef = getPreselectedDateDataset();\n                enable(ref, preselectedDateDataSetRef !== null && preselectedDateDataSetRef !== void 0 ? preselectedDateDataSetRef : \"default\");\n            }\n        }\n        else {\n            disable(ref);\n        }\n    }, [\n        isInsightWidget(widget),\n        safeSerializeObjRef(ref),\n        enableInsightDateFilter,\n        disableInsightDateFilter,\n        enableKpiDateFilter,\n        disableKpiDateFilter,\n        relatedDateDatasets,\n    ]);\n    const handleDateDatasetChanged = useCallback((id) => {\n        if (isInsightWidget(widget)) {\n            enableInsightDateFilter(ref, idRef(id, \"dataSet\"));\n        }\n        else {\n            enableKpiDateFilter(ref, idRef(id, \"dataSet\"));\n        }\n    }, [isInsightWidget(widget), safeSerializeObjRef(ref)]);\n    return {\n        status,\n        handleDateDatasetChanged,\n        handleDateFilterEnabled,\n    };\n}\n//# sourceMappingURL=useDateFilterConfigurationHandling.js.map","// (C) 2022-2023 GoodData Corporation\nimport { useCallback, useEffect } from \"react\";\nimport { selectWidgetDateDatasetAutoSelect, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { getRecommendedCatalogDateDataset } from \"../../../../_staging/dateDatasets/getRecommendedCatalogDateDataset.js\";\nexport function useDateDatasetFilter(dateDatasets) {\n    const dispatch = useDashboardDispatch();\n    const isWidgetDateDatasetAutoSelect = useDashboardSelector(selectWidgetDateDatasetAutoSelect);\n    useEffect(() => {\n        return () => {\n            // once the config panel disappears set the auto-select flag to false so that editing existing KPIs\n            // does not have it set to true\n            dispatch(uiActions.setWidgetDateDatasetAutoSelect(false));\n        };\n    }, [dispatch]);\n    const handleDateDatasetChanged = useCallback(() => {\n        dispatch(uiActions.setWidgetDateDatasetAutoSelect(false));\n    }, [dispatch]);\n    /**\n     * Only open the picker if\n     * 1. auto selection happened\n     * 2. there was no recommended dataset\n     * 3. there are more datasets than one\n     *\n     * In that case we want to show the user the picker to pick one of the non-recommended datasets.\n     * Otherwise the preselected recommended dataset is most likely correct so we do not bother the user\n     * with the automatically opened picker.\n     */\n    const shouldOpenDateDatasetPicker = isWidgetDateDatasetAutoSelect &&\n        dateDatasets &&\n        dateDatasets.length > 1 &&\n        !getRecommendedCatalogDateDataset(dateDatasets);\n    return { handleDateDatasetChanged, shouldOpenDateDatasetPicker };\n}\n//# sourceMappingURL=useDateDatasetFilter.js.map","// (C) 2007-2023 GoodData Corporation\nimport React, { useEffect, useMemo } from \"react\";\nimport { DateDatasetFilter } from \"../../common/index.js\";\nimport { insightMeasures, isDateFilter, isSimpleMeasure, measureFilters, widgetRef, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { queryDateDatasetsForInsight, selectInsightByRef, selectIsWidgetLoadingAdditionalDataByWidgetRef, useDashboardQueryProcessing, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { useDateDatasetFilter } from \"../../common/configuration/useDateDatasetFilter.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nexport default function InsightDateDataSetFilter({ widget }) {\n    const { status, run: queryDateDatasets, result, } = useDashboardQueryProcessing({\n        queryCreator: queryDateDatasetsForInsight,\n    });\n    const isLoadingAdditionalData = useDashboardSelector(selectIsWidgetLoadingAdditionalDataByWidgetRef(widgetRef(widget)));\n    const insight = useDashboardSelector(selectInsightByRef(widget.insight));\n    invariant(insight, \"inconsistent state in InsightDateDataSetFilter\");\n    useEffect(() => {\n        // use the whole insight to improve cache hits: other calls to this query also use whole insights\n        queryDateDatasets(insight);\n    }, [queryDateDatasets, insight]);\n    const { handleDateDatasetChanged, shouldOpenDateDatasetPicker } = useDateDatasetFilter(result === null || result === void 0 ? void 0 : result.dateDatasets);\n    const dateOptionsDisabled = useMemo(() => {\n        const measures = insightMeasures(insight);\n        return isEmpty(measures) ? false : measures.every(isDateFiltered);\n    }, [insight]);\n    return (React.createElement(DateDatasetFilter, { widget: widget, dateFilterCheckboxDisabled: dateOptionsDisabled, isDatasetsLoading: status === \"running\" || status === \"pending\" || isLoadingAdditionalData, relatedDateDatasets: result === null || result === void 0 ? void 0 : result.dateDatasetsOrdered, isLoadingAdditionalData: isLoadingAdditionalData, shouldOpenDateDatasetPicker: shouldOpenDateDatasetPicker, onDateDatasetChanged: handleDateDatasetChanged }));\n}\nfunction isDateFiltered(measure) {\n    var _a;\n    if (isSimpleMeasure(measure)) {\n        const filters = (_a = measureFilters(measure)) !== null && _a !== void 0 ? _a : [];\n        return filters.some(isDateFilter);\n    }\n    return true;\n}\n//# sourceMappingURL=InsightDateDataSetFilter.js.map","// (C) 2022 GoodData Corporation\nimport React, { useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { areObjRefsEqual, isDashboardAttributeFilterReference, isInsightWidget, objRefToString, } from \"@gooddata/sdk-model\";\nimport { selectAttributeFilterDisplayFormsMap, useDashboardSelector } from \"../../../../model/index.js\";\nimport { useAttributeFilterConfigurationHandling } from \"./useAttributeFilterConfigurationHandling.js\";\nimport { useIsFilterNotApplied } from \"./useIsFilterNotApplied.js\";\nconst tooltipAlignPoints = [{ align: \"cl cr\", offset: { x: -20, y: 0 } }];\nexport const AttributeFilterConfigurationItem = (props) => {\n    const { widget, displayFormRef, title } = props;\n    const dfMap = useDashboardSelector(selectAttributeFilterDisplayFormsMap);\n    const [isApplied, setIsApplied] = useState(() => !widget.ignoreDashboardFilters.some((reference) => {\n        if (!isDashboardAttributeFilterReference(reference)) {\n            return false;\n        }\n        const df = dfMap.get(reference.displayForm);\n        return areObjRefsEqual(df === null || df === void 0 ? void 0 : df.ref, displayFormRef);\n    }));\n    const isFilterNotApplied = useIsFilterNotApplied(widget, displayFormRef);\n    const { handleIgnoreChanged, status } = useAttributeFilterConfigurationHandling(widget, displayFormRef, setIsApplied);\n    const isError = isApplied && (status === \"error\" || isFilterNotApplied);\n    const isLoading = status === \"loading\";\n    const classNames = cx(\"s-attribute-filter-by-item\", `s-${stringUtils.simplifyText(title)}`, \"input-checkbox-label\", \"filter-by-item\", \"attribute-filter-by-item\", {\n        \"attribute-filter-error\": isError,\n    });\n    const uniqueKey = objRefToString(displayFormRef);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"label\", { className: classNames, htmlFor: uniqueKey },\n            React.createElement(\"input\", { id: uniqueKey, type: \"checkbox\", className: \"input-checkbox\", checked: isApplied, onChange: (e) => handleIgnoreChanged(e.target.checked) }),\n            React.createElement(\"span\", { className: \"input-label-text\" },\n                React.createElement(ShortenedText, { tooltipAlignPoints: tooltipAlignPoints, tagName: \"span\", className: \"title\" }, title)),\n            isLoading ? React.createElement(\"div\", { className: \"gd-spinner small\" }) : null),\n        !!isError && (React.createElement(\"div\", { className: \"gd-message error s-not-applied-attribute-filter\" }, isInsightWidget(widget) ? (React.createElement(FormattedMessage, { id: \"configurationPanel.vizCantBeFilteredByAttribute\", values: { attributeName: title } })) : (React.createElement(FormattedMessage, { id: \"configurationPanel.kpiCantBeFilteredByAttribute\", values: { attributeName: title } }))))));\n};\n//# sourceMappingURL=AttributeFilterConfigurationItem.js.map","// (C) 2022 GoodData Corporation\nimport { areObjRefsEqual, isObjRef, widgetRef } from \"@gooddata/sdk-model\";\nimport { selectAttributeFilterDisplayFormsMap, selectExecutionResultByRef, useDashboardSelector, } from \"../../../../model/index.js\";\nconst WARNING_FILTER_NOT_APPLIED = \"gdc.aqe.not_applied_filter.report\";\nexport function useIsFilterNotApplied(widget, displayFormRef) {\n    const execResult = useDashboardSelector(selectExecutionResultByRef(widgetRef(widget)));\n    const allWarnings = execResult === null || execResult === void 0 ? void 0 : execResult.warnings;\n    const dfMap = useDashboardSelector(selectAttributeFilterDisplayFormsMap);\n    const df = dfMap.get(displayFormRef);\n    if (!df) {\n        return true;\n    }\n    if (!(allWarnings === null || allWarnings === void 0 ? void 0 : allWarnings.length)) {\n        return false;\n    }\n    return allWarnings\n        .filter((warning) => warning.warningCode === WARNING_FILTER_NOT_APPLIED)\n        .some((warning) => { var _a; return (_a = warning.parameters) === null || _a === void 0 ? void 0 : _a.some((param) => isObjRef(param) && areObjRefsEqual(param, df.attribute)); });\n}\n//# sourceMappingURL=useIsFilterNotApplied.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport { isInsightWidget, widgetRef } from \"@gooddata/sdk-model\";\nimport { ignoreFilterOnInsightWidget, ignoreFilterOnKpiWidget, unignoreFilterOnInsightWidget, unignoreFilterOnKpiWidget, useDashboardCommandProcessing, } from \"../../../../model/index.js\";\nimport { safeSerializeObjRef } from \"../../../../_staging/metadata/safeSerializeObjRef.js\";\nexport function useAttributeFilterConfigurationHandling(widget, displayFormRef, onAppliedChanged) {\n    const [status, setStatus] = useState(\"ok\");\n    const ref = widgetRef(widget);\n    const { run: ignoreKpiFilter } = useDashboardCommandProcessing({\n        commandCreator: ignoreFilterOnKpiWidget,\n        successEvent: \"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(false);\n        },\n    });\n    const { run: unignoreKpiFilter } = useDashboardCommandProcessing({\n        commandCreator: unignoreFilterOnKpiWidget,\n        successEvent: \"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(true);\n            setStatus(\"loading\");\n        },\n        onError: () => {\n            setStatus(\"error\");\n        },\n        onSuccess: () => {\n            setStatus(\"ok\");\n        },\n    });\n    const { run: ignoreInsightFilter } = useDashboardCommandProcessing({\n        commandCreator: ignoreFilterOnInsightWidget,\n        successEvent: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(false);\n        },\n    });\n    const { run: unignoreInsightFilter } = useDashboardCommandProcessing({\n        commandCreator: unignoreFilterOnInsightWidget,\n        successEvent: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            onAppliedChanged(true);\n            setStatus(\"loading\");\n        },\n        onError: () => {\n            setStatus(\"error\");\n        },\n        onSuccess: () => {\n            setStatus(\"ok\");\n        },\n    });\n    const handleIgnoreChanged = useCallback((ignored) => {\n        const ignore = isInsightWidget(widget) ? ignoreInsightFilter : ignoreKpiFilter;\n        const unignore = isInsightWidget(widget) ? unignoreInsightFilter : unignoreKpiFilter;\n        if (ignored) {\n            unignore(ref, displayFormRef);\n        }\n        else {\n            ignore(ref, displayFormRef);\n        }\n    }, [\n        isInsightWidget(widget),\n        safeSerializeObjRef(displayFormRef),\n        safeSerializeObjRef(ref),\n        ignoreInsightFilter,\n        ignoreKpiFilter,\n        unignoreInsightFilter,\n        unignoreKpiFilter,\n    ]);\n    return {\n        status,\n        handleIgnoreChanged,\n    };\n}\n//# sourceMappingURL=useAttributeFilterConfigurationHandling.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useMemo } from \"react\";\nimport { queryAttributeByDisplayForm, useDashboardQueryProcessing, } from \"../../model/index.js\";\n/**\n * @internal\n */\nexport function useAttributes(displayForms) {\n    const { run: getAttributes, result: attributes, status: attributesLoadingStatus, error: attributesLoadingError, } = useDashboardQueryProcessing({\n        queryCreator: queryAttributeByDisplayForm,\n    });\n    useEffect(() => {\n        getAttributes(displayForms);\n    }, [displayForms, getAttributes]);\n    const attributesLoading = useMemo(() => {\n        return attributesLoadingStatus === \"pending\" || attributesLoadingStatus === \"running\";\n    }, [attributesLoadingStatus]);\n    return {\n        attributes,\n        attributesLoading,\n        attributesLoadingError,\n    };\n}\n//# sourceMappingURL=useAttributes.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { isAttributeMetadataObject, objRefToString } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { selectAllCatalogAttributesMap, selectAttributeFilterDisplayFormsMap, selectFilterContextAttributeFilters, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { AttributeFilterConfigurationItem } from \"./AttributeFilterConfigurationItem.js\";\nimport { getAttributeByDisplayForm } from \"./utils.js\";\nimport { useAttributes } from \"../../../../_staging/sharedHooks/useAttributes.js\";\nexport const AttributeFilterConfiguration = (props) => {\n    const { widget } = props;\n    const attributeFilters = useDashboardSelector(selectFilterContextAttributeFilters);\n    const dfMap = useDashboardSelector(selectAttributeFilterDisplayFormsMap);\n    const attrMap = useDashboardSelector(selectAllCatalogAttributesMap);\n    const displayForms = useMemo(() => {\n        return attributeFilters.map((filter) => filter.attributeFilter.displayForm);\n    }, [attributeFilters]);\n    const { attributes, attributesLoading } = useAttributes(displayForms);\n    if (attributesLoading) {\n        return React.createElement(\"span\", { className: \"gd-spinner small s-attribute-filter-configuration-loading\" });\n    }\n    if (!attributes) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"s-attribute-filter-configuration\" }, attributeFilters.map((filter) => {\n        var _a;\n        const displayForm = dfMap.get(filter.attributeFilter.displayForm);\n        invariant(displayForm, \"Inconsistent state in AttributeFilterConfiguration\");\n        const attributeByDisplayForm = getAttributeByDisplayForm(attributes, displayForm.attribute);\n        const attribute = attrMap.get(displayForm.attribute) || attributeByDisplayForm;\n        invariant(attribute, \"Inconsistent state in AttributeFilterConfiguration\");\n        const attributeTitle = isAttributeMetadataObject(attribute)\n            ? attribute.title\n            : attribute.attribute.title;\n        return (React.createElement(AttributeFilterConfigurationItem, { key: objRefToString(displayForm.ref), displayFormRef: displayForm.ref, title: (_a = filter.attributeFilter.title) !== null && _a !== void 0 ? _a : attributeTitle, widget: widget }));\n    })));\n};\n//# sourceMappingURL=AttributeFilterConfiguration.js.map","// (C) 2007-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport InsightDateDataSetFilter from \"./InsightDateDataSetFilter.js\";\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nimport { AttributeFilterConfiguration } from \"../../common/configuration/AttributeFilterConfiguration.js\";\nexport default function InsightFilters({ widget }) {\n    return (React.createElement(\"div\", { className: \"s-viz-filters-panel configuration-category\" },\n        React.createElement(Typography, { tagName: \"h3\", className: \"s-viz-filters-headline\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.filterBy\" })),\n        isInsightWidget(widget) ? React.createElement(InsightDateDataSetFilter, { widget: widget }) : null,\n        React.createElement(AttributeFilterConfiguration, { widget: widget })));\n}\n//# sourceMappingURL=InsightFilters.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Typography, Checkbox } from \"@gooddata/sdk-ui-kit\";\nexport function InsightTitleConfig(props) {\n    const { hideTitle, widget, setVisualPropsConfigurationTitle, isHidingOfWidgetTitleEnabled } = props;\n    const intl = useIntl();\n    const [widgetTitleState, setWidgetTitleState] = useState(hideTitle);\n    const handleHideTitleChange = (isChecked) => {\n        setWidgetTitleState(isChecked);\n        setVisualPropsConfigurationTitle(widget, isChecked);\n    };\n    return (React.createElement(React.Fragment, null, isHidingOfWidgetTitleEnabled ? (React.createElement(\"div\", { className: \"configuration-category s-hide-title-configuration\" },\n        React.createElement(Typography, { tagName: \"h3\", className: \"s-viz-title-headline\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.visualprops.sectionTitle\" })),\n        React.createElement(Checkbox, { onChange: handleHideTitleChange, value: widgetTitleState, text: intl.formatMessage({ id: \"configurationPanel.visualprops.hideTitle\" }), labelSize: \"small\" }))) : null));\n}\n//# sourceMappingURL=InsightTitleConfig.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { Component } from \"react\";\nimport identity from \"lodash/identity.js\";\n/**\n * @internal\n */\nclass TextAreaWithSubmit extends Component {\n    constructor(props) {\n        super(props);\n        this.focusTimeout = 0;\n        this.onDocumentClick = (e) => {\n            if (this.isClickOutsideTextarea(e.target)) {\n                const textAreaNode = this.textarea.current;\n                textAreaNode.blur();\n            }\n        };\n        this.onKeyDown = (e) => {\n            const isSubmit = e.key === \"Enter\" && !e.shiftKey;\n            const isCancel = e.key === \"Escape\";\n            if (isSubmit || isCancel) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            if (isSubmit) {\n                this.onSubmit();\n            }\n            if (isCancel) {\n                this.onCancel();\n            }\n        };\n        this.onSubmit = () => {\n            const oldValue = this.props.defaultValue;\n            const newTrimmedValue = this.state.value.trim();\n            if (newTrimmedValue === \"\") {\n                this.setState({\n                    value: \"\",\n                });\n            }\n            if (oldValue !== newTrimmedValue) {\n                this.props.onSubmit(newTrimmedValue);\n            }\n            else {\n                this.props.onCancel(oldValue);\n            }\n            this.setState({\n                value: newTrimmedValue,\n                isEditing: false,\n            });\n            this.removeListeners();\n        };\n        this.onCancel = () => {\n            const { defaultValue } = this.props;\n            this.props.onCancel(defaultValue);\n            this.setState({\n                value: defaultValue,\n                isEditing: false,\n            });\n            this.removeListeners();\n        };\n        this.onChange = (e) => {\n            const { value } = e.target;\n            this.setState({ value }, () => {\n                this.props.onChange(value);\n            });\n        };\n        this.edit = (_e) => {\n            if (!this.state.isEditing) {\n                this.setState({\n                    isEditing: true,\n                }, () => {\n                    this.selectAndFocus();\n                    document.addEventListener(\"mousedown\", this.onDocumentClick);\n                });\n                this.props.onEditingStart();\n            }\n        };\n        this.selectAndFocus = () => {\n            const componentElement = this.textarea.current;\n            const { scrollToEndOnEditingStart } = this.props;\n            if (componentElement) {\n                window.clearTimeout(this.focusTimeout);\n                // without the timeout the focus sometimes got stolen by the previously active item for some reason\n                this.focusTimeout = window.setTimeout(() => {\n                    componentElement.focus();\n                    if (scrollToEndOnEditingStart && this.isMultiLine()) {\n                        componentElement.scrollTop = componentElement.scrollHeight;\n                    }\n                    componentElement.select();\n                }, 1);\n            }\n        };\n        this.state = {\n            value: props.defaultValue,\n            isEditing: false,\n        };\n        this.root = React.createRef();\n        this.textarea = React.createRef();\n    }\n    componentDidMount() {\n        const rootNode = this.root.current;\n        rootNode.addEventListener(\"dragstart\", this.onSelectStart);\n        rootNode.addEventListener(\"selectstart\", this.onSelectStart);\n        if (this.props.autofocus) {\n            this.edit();\n        }\n    }\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.defaultValue !== newProps.defaultValue) {\n            this.setState({\n                value: newProps.defaultValue,\n            });\n        }\n    }\n    componentWillUnmount() {\n        const rootNode = this.root.current;\n        rootNode.removeEventListener(\"dragstart\", this.onSelectStart);\n        rootNode.removeEventListener(\"selectstart\", this.onSelectStart);\n        this.removeListeners();\n        clearTimeout(this.focusTimeout);\n    }\n    onSelectStart(e) {\n        e.stopPropagation();\n    }\n    isClickOutsideTextarea(clickedTarget) {\n        return this.textarea.current && !this.textarea.current.contains(clickedTarget);\n    }\n    isMultiLine() {\n        return this.props.rows > 1;\n    }\n    removeListeners() {\n        document.removeEventListener(\"mousedown\", this.onDocumentClick);\n    }\n    renderTextarea(style = {}) {\n        const { rows, disabled, maxLength, placeholder, className } = this.props;\n        const { value } = this.state;\n        return (React.createElement(\"textarea\", { className: className, style: style, rows: rows, maxLength: maxLength, onKeyDown: this.onKeyDown, onBlur: this.onSubmit, onChange: this.onChange, value: value, placeholder: placeholder, ref: this.textarea, disabled: disabled }));\n    }\n    renderTextAreaWithSubmitEdit() {\n        return this.renderTextarea({});\n    }\n    render() {\n        return (React.createElement(\"div\", { role: \"editable-label\", onClick: this.edit },\n            React.createElement(\"div\", { ref: this.root }, this.renderTextAreaWithSubmitEdit())));\n    }\n}\nTextAreaWithSubmit.defaultProps = {\n    className: \"\",\n    maxLength: 100000,\n    rows: 1,\n    onCancel: identity,\n    onEditingStart: identity,\n    onChange: identity,\n    placeholder: \"\",\n    scrollToEndOnEditingStart: true,\n    autofocus: false,\n    disabled: false,\n};\nexport { TextAreaWithSubmit };\n//# sourceMappingURL=TextAreaWithSubmit.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { TextAreaWithSubmit } from \"@gooddata/sdk-ui-kit\";\nexport function InsightDescription(props) {\n    const { description, setDescription, readOnly = false } = props;\n    const intl = useIntl();\n    const onChange = (value) => {\n        setDescription(value.trim());\n    };\n    return (React.createElement(\"label\", { className: \"gd-input\" },\n        React.createElement(TextAreaWithSubmit, { className: cx(\"gd-input-field description gd-widget-description-input\"), rows: 4, defaultValue: (description || \"\").trim(), maxLength: 2000, placeholder: readOnly\n                ? undefined\n                : intl.formatMessage({\n                    id: \"configurationPanel.visualprops.descriptionPlaceholder\",\n                }), onSubmit: onChange, disabled: readOnly })));\n}\n//# sourceMappingURL=InsightDescription.js.map","// (C) 2022 GoodData Corporation\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Typography, Dropdown, DropdownList, SingleSelectListItem, DropdownButton, } from \"@gooddata/sdk-ui-kit\";\nimport { InsightDescription } from \"./InsightDescription.js\";\nimport { useDashboardSelector, selectInsightByRef } from \"../../../../../model/index.js\";\nimport { IncludeMetrics } from \"./IncludeMetrics.js\";\nconst getStateFromConfig = (descriptionConfig, widgetDescription, insightDescription) => {\n    var _a;\n    if (!descriptionConfig.visible) {\n        return {\n            config: \"none\",\n            description: \"\",\n            includeMetrics: false,\n        };\n    }\n    const useInsightDescription = descriptionConfig.source === \"insight\";\n    return {\n        config: descriptionConfig.source,\n        description: useInsightDescription ? insightDescription : widgetDescription,\n        includeMetrics: (_a = descriptionConfig.includeMetrics) !== null && _a !== void 0 ? _a : false,\n    };\n};\nexport function InsightDescriptionConfig(props) {\n    var _a, _b;\n    const { descriptionConfig, widget, setDescriptionConfiguration, isWidgetDescriptionEnabled, setWidgetDescription, } = props;\n    const intl = useIntl();\n    const dropdownItems = useMemo(() => [\n        {\n            id: \"insight\",\n            title: intl.formatMessage({ id: \"configurationPanel.visualprops.inheritDescription\" }),\n            info: intl.formatMessage({ id: \"configurationPanel.visualprops.inheritDescriptionHelp\" }),\n        },\n        {\n            id: \"widget\",\n            title: intl.formatMessage({ id: \"configurationPanel.visualprops.customDescription\" }),\n            info: intl.formatMessage({ id: \"configurationPanel.visualprops.customDescriptionHelp\" }),\n        },\n        {\n            id: \"none\",\n            title: intl.formatMessage({ id: \"configurationPanel.visualprops.noneDescription\" }),\n        },\n    ], [intl]);\n    const insight = useDashboardSelector(selectInsightByRef(widget.insight));\n    const [widgetDescriptionState, setWidgetDescriptionState] = useState(getStateFromConfig(descriptionConfig, widget.description, (_a = insight === null || insight === void 0 ? void 0 : insight.insight) === null || _a === void 0 ? void 0 : _a.summary));\n    const [lastCustomWidgetDescription, setLastCustomWidgetDescription] = useState(widget.description);\n    const handleDescriptionChange = useCallback((newDescription) => {\n        setWidgetDescription(widget, newDescription);\n        setWidgetDescriptionState((prevState) => (Object.assign(Object.assign({}, prevState), { description: newDescription })));\n        setLastCustomWidgetDescription(newDescription);\n    }, [widget, setWidgetDescription, setWidgetDescriptionState]);\n    const handleDescriptionConfigChange = useCallback((config) => {\n        var _a;\n        let newConfig;\n        const insightDescription = (_a = insight === null || insight === void 0 ? void 0 : insight.insight) === null || _a === void 0 ? void 0 : _a.summary;\n        if (config === \"none\") {\n            newConfig = {\n                includeMetrics: false,\n                visible: false,\n                source: \"insight\",\n            };\n            setWidgetDescriptionState(getStateFromConfig(newConfig, \"\", \"\"));\n        }\n        else {\n            newConfig = {\n                includeMetrics: widgetDescriptionState.includeMetrics,\n                visible: true,\n                source: config,\n            };\n            setWidgetDescriptionState(getStateFromConfig(newConfig, config === \"widget\" ? lastCustomWidgetDescription : \"\", insightDescription));\n        }\n        setDescriptionConfiguration(widget, newConfig);\n        if (config === \"widget\") {\n            setWidgetDescription(widget, lastCustomWidgetDescription !== null && lastCustomWidgetDescription !== void 0 ? lastCustomWidgetDescription : \"\");\n        }\n        if (config === \"none\" || config === \"insight\") {\n            setWidgetDescription(widget, \"\");\n        }\n    }, [\n        widget,\n        insight,\n        setDescriptionConfiguration,\n        setWidgetDescription,\n        widgetDescriptionState.includeMetrics,\n        lastCustomWidgetDescription,\n    ]);\n    const handleIncludeMetricChange = useCallback((includeMetrics) => {\n        const newConfigState = Object.assign(Object.assign({}, widgetDescriptionState), { includeMetrics });\n        setWidgetDescriptionState(newConfigState);\n        setDescriptionConfiguration(widget, Object.assign(Object.assign({}, descriptionConfig), { includeMetrics }));\n    }, [descriptionConfig, setDescriptionConfiguration, widget, widgetDescriptionState]);\n    return (React.createElement(React.Fragment, null, isWidgetDescriptionEnabled ? (React.createElement(\"div\", { className: \"configuration-category s-description-configuration description-configuration-section\" },\n        React.createElement(Typography, { tagName: \"h3\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.visualprops.sectionDescription\" })),\n        React.createElement(Dropdown, { closeOnParentScroll: true, renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { items: dropdownItems, renderItem: ({ item }) => {\n                    return (React.createElement(SingleSelectListItem, { title: item.title, info: item.info, isSelected: item.id === widgetDescriptionState.config, onClick: () => {\n                            handleDescriptionConfigChange(item.id);\n                            closeDropdown();\n                        } }));\n                } })), renderButton: ({ openDropdown, isOpen }) => {\n                var _a;\n                return (React.createElement(DropdownButton, { value: (_a = dropdownItems.find((item) => item.id === widgetDescriptionState.config)) === null || _a === void 0 ? void 0 : _a.title, isOpen: isOpen, onClick: openDropdown, className: \"description-config-dropdown-button s-description-config-dropdown-button\" }));\n            } }),\n        widgetDescriptionState.config === \"widget\" ||\n            widgetDescriptionState.config === \"insight\" ? (React.createElement(InsightDescription, { description: (_b = widgetDescriptionState.description) !== null && _b !== void 0 ? _b : \"\", setDescription: handleDescriptionChange, readOnly: widgetDescriptionState.config === \"insight\" })) : null,\n        // TODO INE: enable this section as part of TNT-1134\n        // eslint-disable-next-line no-constant-condition, sonarjs/no-redundant-boolean\n        false && widgetDescriptionState.config !== \"none\" ? (React.createElement(IncludeMetrics, { onChange: handleIncludeMetricChange, value: widgetDescriptionState.includeMetrics })) : null)) : null));\n}\n//# sourceMappingURL=InsightDescriptionConfig.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { isInsightWidget, objRefToString, } from \"@gooddata/sdk-model\";\nimport { ScrollablePanel, OverlayControllerProvider, OverlayController } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nimport cx from \"classnames\";\nimport { useDashboardSelector, selectSettings, useDashboardDispatch, changeInsightWidgetVisConfiguration, changeInsightWidgetDescription, } from \"../../../../model/index.js\";\nimport { DASHBOARD_HEADER_OVERLAYS_Z_INDEX } from \"../../../constants/index.js\";\nimport InsightFilters from \"./InsightFilters.js\";\nimport { InsightTitleConfig } from \"./InsightTitleConfig.js\";\nimport { InsightDescriptionConfig } from \"./InsightDescriptionConfig/InsightDescriptionConfig.js\";\nconst overlayController = OverlayController.getInstance(DASHBOARD_HEADER_OVERLAYS_Z_INDEX);\nexport const InsightConfiguration = ({ widget }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const widgetRefSuffix = isInsightWidget(widget)\n        ? stringUtils.simplifyText(objRefToString(widget.ref))\n        : \"\";\n    const settings = useDashboardSelector(selectSettings);\n    const dispatch = useDashboardDispatch();\n    const classes = cx(\"configuration-scrollable-panel\", \"s-configuration-scrollable-panel\", `s-visualization-${widgetRefSuffix}`);\n    const defaultDescriptionConfig = {\n        source: \"insight\",\n        includeMetrics: false,\n        visible: true,\n    };\n    return (React.createElement(ScrollablePanel, { className: classes },\n        React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n            React.createElement(InsightTitleConfig, { widget: widget, isHidingOfWidgetTitleEnabled: (_a = settings.enableHidingOfWidgetTitle) !== null && _a !== void 0 ? _a : false, hideTitle: (_c = (_b = widget.configuration) === null || _b === void 0 ? void 0 : _b.hideTitle) !== null && _c !== void 0 ? _c : false, setVisualPropsConfigurationTitle: (widget, hideTitle) => {\n                    dispatch(changeInsightWidgetVisConfiguration(widget.ref, Object.assign(Object.assign({}, widget.configuration), { hideTitle })));\n                } }),\n            React.createElement(InsightDescriptionConfig, { widget: widget, isWidgetDescriptionEnabled: (_d = settings.enableDescriptions) !== null && _d !== void 0 ? _d : false, descriptionConfig: (_f = (_e = widget.configuration) === null || _e === void 0 ? void 0 : _e.description) !== null && _f !== void 0 ? _f : defaultDescriptionConfig, setDescriptionConfiguration: (widget, config) => {\n                    dispatch(changeInsightWidgetVisConfiguration(widget.ref, Object.assign(Object.assign({ hideTitle: false }, widget.configuration), { description: config })));\n                }, setWidgetDescription: (widget, description) => {\n                    dispatch(changeInsightWidgetDescription(widget.ref, {\n                        description,\n                    }));\n                } }),\n            React.createElement(InsightFilters, { widget: widget }))));\n};\n//# sourceMappingURL=InsightConfiguration.js.map","import isEmpty from \"lodash/isEmpty.js\";\nimport { isDrillToAttributeUrl, isDrillToCustomUrl, } from \"@gooddata/sdk-model\";\nexport function isDrillToUrl(drillDefinition) {\n    return isDrillToCustomUrl(drillDefinition) || isDrillToAttributeUrl(drillDefinition);\n}\nexport var DRILL_TARGET_TYPE;\n(function (DRILL_TARGET_TYPE) {\n    DRILL_TARGET_TYPE[\"DRILL_TO_DASHBOARD\"] = \"DrillToDashboard\";\n    DRILL_TARGET_TYPE[\"DRILL_TO_INSIGHT\"] = \"DrillToInsight\";\n    DRILL_TARGET_TYPE[\"DRILL_TO_URL\"] = \"DrillToUrl\";\n})(DRILL_TARGET_TYPE = DRILL_TARGET_TYPE || (DRILL_TARGET_TYPE = {}));\nexport function isDrillToDashboardConfig(item) {\n    return !isEmpty(item) && item.dashboard !== undefined;\n}\nexport function isDrillToInsightConfig(item) {\n    return !isEmpty(item) && item.insightRef !== undefined;\n}\nexport function isDrillToCustomUrlConfig(item) {\n    return !isEmpty(item) && item.customUrl !== undefined;\n}\nexport function isDrillToAttributeUrlConfig(item) {\n    return !isEmpty(item) && item.insightAttributeDisplayForm !== undefined;\n}\nexport function isDrillToUrlConfig(item) {\n    return !isEmpty(item) && item.urlDrillTarget !== undefined;\n}\n// check type AttributeDisplayFormType from @gooddata/sdk-model to keep it in sync\nexport var AttributeDisplayFormType;\n(function (AttributeDisplayFormType) {\n    AttributeDisplayFormType[\"HYPERLINK\"] = \"GDC.link\";\n    AttributeDisplayFormType[\"GEO_PUSHPIN\"] = \"GDC.geo.pin\";\n    AttributeDisplayFormType[\"GEO_PUSHPIN_LATITUDE\"] = \"GDC.geo.pin_latitude\";\n    AttributeDisplayFormType[\"GEO_PUSHPIN_LONGITUDE\"] = \"GDC.geo.pin_longitude\";\n})(AttributeDisplayFormType = AttributeDisplayFormType || (AttributeDisplayFormType = {}));\nexport function isAvailableDrillTargetMeasure(obj) {\n    return !isEmpty(obj) && obj.measure !== undefined;\n}\n//# sourceMappingURL=types.js.map","// (C) 2022 GoodData Corporation\nimport { isDrillFromAttribute, isDrillToAttributeUrl, isDrillToCustomUrl, isDrillToDashboard, isDrillToInsight, } from \"@gooddata/sdk-model\";\nimport { defineMessage } from \"react-intl\";\nimport { getDrillOriginLocalIdentifier, getLocalIdentifierOrDie, getValidDrillOriginAttributes, } from \"../../../../../_staging/drills/drillingUtils.js\";\nimport { DRILL_TARGET_TYPE, isDrillToUrl, } from \"../../../../drill/types.js\";\nfunction getTitleFromDrillableItemPushData(items, itemId) {\n    const measureItems = items.measures || [];\n    const measureResult = measureItems.find((measureResult) => measureResult.measure.measureHeaderItem.localIdentifier === itemId);\n    if (measureResult) {\n        return measureResult.measure.measureHeaderItem.name;\n    }\n    const attributeItems = items.attributes || [];\n    const attributeResult = attributeItems.find((attributeItem) => attributeItem.attribute.attributeHeader.localIdentifier === itemId);\n    return attributeResult ? attributeResult.attribute.attributeHeader.formOf.name : \"\";\n}\nconst buildUrlDrillTarget = (drillData) => {\n    if (isDrillToCustomUrl(drillData)) {\n        const customUrl = drillData.target.url;\n        return {\n            customUrl,\n        };\n    }\n    if (isDrillToAttributeUrl(drillData)) {\n        const { displayForm: insightAttributeDisplayForm, hyperlinkDisplayForm: drillToAttributeDisplayForm, } = drillData.target;\n        return {\n            insightAttributeDisplayForm,\n            drillToAttributeDisplayForm,\n        };\n    }\n    throw new Error(\"Unsupported URL drill type!\");\n};\nconst createInsightConfig = (drillData, supportedItemsForWidget) => {\n    var _a, _b;\n    const localIdentifier = isDrillFromAttribute(drillData.origin)\n        ? getLocalIdentifierOrDie((_a = drillData.origin) === null || _a === void 0 ? void 0 : _a.attribute)\n        : getLocalIdentifierOrDie((_b = drillData.origin) === null || _b === void 0 ? void 0 : _b.measure);\n    return {\n        type: isDrillFromAttribute(drillData.origin) ? \"attribute\" : \"measure\",\n        localIdentifier,\n        title: getTitleFromDrillableItemPushData(supportedItemsForWidget, localIdentifier),\n        attributes: getValidDrillOriginAttributes(supportedItemsForWidget, localIdentifier),\n        drillTargetType: DRILL_TARGET_TYPE.DRILL_TO_INSIGHT,\n        insightRef: drillData.target,\n        complete: true,\n    };\n};\nconst createDashboardConfig = (drillData, supportedItemsForWidget) => {\n    var _a, _b;\n    const localIdentifier = isDrillFromAttribute(drillData.origin)\n        ? getLocalIdentifierOrDie((_a = drillData.origin) === null || _a === void 0 ? void 0 : _a.attribute)\n        : getLocalIdentifierOrDie((_b = drillData.origin) === null || _b === void 0 ? void 0 : _b.measure);\n    return {\n        type: isDrillFromAttribute(drillData.origin) ? \"attribute\" : \"measure\",\n        localIdentifier,\n        title: getTitleFromDrillableItemPushData(supportedItemsForWidget, localIdentifier),\n        attributes: getValidDrillOriginAttributes(supportedItemsForWidget, localIdentifier),\n        drillTargetType: DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD,\n        dashboard: drillData.target,\n        complete: true,\n    };\n};\nconst invalidUrlMessage = defineMessage({\n    id: \"configurationPanel.drillConfig.drillIntoUrl.invalidCustomUrl\",\n});\nconst createUrlConfig = (drillData, supportedItemsForWidget, invalidCustomUrlDrillLocalIds) => {\n    const localIdentifier = getDrillOriginLocalIdentifier(drillData);\n    const hasWarning = invalidCustomUrlDrillLocalIds.includes(localIdentifier);\n    return {\n        type: isDrillFromAttribute(drillData.origin) ? \"attribute\" : \"measure\",\n        localIdentifier,\n        title: getTitleFromDrillableItemPushData(supportedItemsForWidget, localIdentifier),\n        attributes: getValidDrillOriginAttributes(supportedItemsForWidget, localIdentifier),\n        drillTargetType: DRILL_TARGET_TYPE.DRILL_TO_URL,\n        urlDrillTarget: buildUrlDrillTarget(drillData),\n        complete: true,\n        warning: hasWarning ? invalidUrlMessage.id : undefined,\n    };\n};\nconst createImplicitConfig = () => {\n    return null;\n};\nconst createConfig = (drillData, supportedItemsForWidget, invalidCustomUrlDrillLocalIds) => {\n    if (isDrillToInsight(drillData)) {\n        return createInsightConfig(drillData, supportedItemsForWidget);\n    }\n    if (isDrillToDashboard(drillData)) {\n        return createDashboardConfig(drillData, supportedItemsForWidget);\n    }\n    if (isDrillToUrl(drillData)) {\n        return createUrlConfig(drillData, supportedItemsForWidget, invalidCustomUrlDrillLocalIds);\n    }\n    return createImplicitConfig();\n};\n/**\n * @internal\n */\nexport const getMappedConfigForWidget = (configForWidget, supportedItemsForWidget, invalidCustomUrlDrillLocalIds) => {\n    return configForWidget.map((item) => createConfig(item, supportedItemsForWidget, invalidCustomUrlDrillLocalIds));\n};\n//# sourceMappingURL=drillConfigMapper.js.map","// (C) 2022-2023 GoodData Corporation\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nimport { useCallback, useMemo } from \"react\";\nimport { defineMessages } from \"react-intl\";\nimport { useToastMessage } from \"@gooddata/sdk-ui-kit\";\nimport { modifyDrillsForInsightWidget, removeDrillsForInsightWidget, selectDrillTargetsByWidgetRef, selectInvalidUrlDrillParameterDrillLocalIdsByWidgetRef, selectSettings, selectWidgetByRef, useDashboardDispatch, useDashboardSelector, } from \"../../../../../model/index.js\";\nimport { invariant } from \"ts-invariant\";\nimport { getMappedConfigForWidget } from \"./drillConfigMapper.js\";\nimport { useIncompleteItems } from \"./useDrillConfigIncompleteItems.js\";\nconst messages = defineMessages({\n    added: { id: \"messages.drill.InteractionConfiguredSuccess\" },\n    modified: { id: \"messages.drill.InteractionUpdatedSuccess\" },\n});\nconst mergeDrillConfigItems = (drillConfigItems, incompleteItems) => {\n    return incompleteItems.reduce((acc, incompleteItem) => {\n        const found = acc.findIndex((item) => item.localIdentifier === incompleteItem.localIdentifier);\n        if (found !== -1) {\n            if (!incompleteItem.complete) {\n                acc[found] = incompleteItem;\n            }\n        }\n        else {\n            acc.push(incompleteItem);\n        }\n        return acc;\n    }, [...drillConfigItems]);\n};\nconst getUnusedDrillTargets = (availableDrillTargets, mergedItems) => {\n    var _a, _b;\n    const availableDrillTargetMeasures = (_a = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.measures) === null || _a === void 0 ? void 0 : _a.filter((measure) => !mergedItems.some((item) => item.type === \"measure\" &&\n        item.localIdentifier === measure.measure.measureHeaderItem.localIdentifier));\n    const availableDrillTargetAttributes = (_b = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.attributes) === null || _b === void 0 ? void 0 : _b.filter((attribute) => !mergedItems.some((item) => item.type === \"attribute\" &&\n        item.localIdentifier === attribute.attribute.attributeHeader.localIdentifier));\n    return {\n        measures: availableDrillTargetMeasures,\n        attributes: availableDrillTargetAttributes,\n    };\n};\n/**\n * hook for DrillConfigPanel component\n * @internal\n */\nexport const useInsightDrillConfigPanel = (props) => {\n    const { widgetRef } = props;\n    const widget = useDashboardSelector(selectWidgetByRef(widgetRef));\n    invariant(isInsightWidget(widget), \"must be insight widget\");\n    const { drills: widgetDrills } = widget;\n    const { incompleteItems, deleteIncompleteItem, onChangeItem, onOriginSelect, completeItem, isItemNew } = useIncompleteItems({ widgetDrills });\n    const { addSuccess } = useToastMessage();\n    const dispatch = useDashboardDispatch();\n    const configItems = useDashboardSelector(selectDrillTargetsByWidgetRef(widgetRef));\n    const invalidCustomUrlDrillLocalIds = useDashboardSelector(selectInvalidUrlDrillParameterDrillLocalIdsByWidgetRef(widgetRef));\n    const settings = useDashboardSelector(selectSettings);\n    const { enableKDZooming } = settings;\n    const availableDrillTargets = configItems === null || configItems === void 0 ? void 0 : configItems.availableDrillTargets;\n    const drillItems = useMemo(() => {\n        return availableDrillTargets\n            ? getMappedConfigForWidget(widgetDrills, availableDrillTargets, invalidCustomUrlDrillLocalIds)\n            : [];\n    }, [availableDrillTargets, widgetDrills, invalidCustomUrlDrillLocalIds]);\n    const mergedItems = useMemo(() => mergeDrillConfigItems(drillItems, incompleteItems), [drillItems, incompleteItems]);\n    const originSelectorItems = useMemo(() => getUnusedDrillTargets(availableDrillTargets, mergedItems), [availableDrillTargets, mergedItems]);\n    const onSetupItem = useCallback((drill, changedItem) => {\n        const isNew = isItemNew(changedItem);\n        dispatch(modifyDrillsForInsightWidget(widgetRef, [drill]));\n        // we are not able remove incomplete items directly,it will change items in panel while command is processing\n        // and this will not keep correct scroll.\n        // we mark item complete and remove is done in useIncompleteItems when widget drills changed\n        completeItem(changedItem);\n        addSuccess(isNew ? messages.added : messages.modified, { duration: 3000 });\n    }, [widgetRef, completeItem, addSuccess, isItemNew, dispatch]);\n    const onDeleteItem = useCallback((item) => {\n        if (item.complete) {\n            dispatch(removeDrillsForInsightWidget(widgetRef, [item]));\n        }\n        deleteIncompleteItem(item);\n    }, [widgetRef, dispatch, deleteIncompleteItem]);\n    return {\n        widget,\n        enableKDZooming,\n        drillConfigItems: mergedItems,\n        originSelectorItems,\n        isOriginSelectorVisible: !!(configItems === null || configItems === void 0 ? void 0 : configItems.availableDrillTargets),\n        isLoaded: !!configItems,\n        onChangeItem,\n        onOriginSelect,\n        onSetupItem,\n        onDeleteItem,\n    };\n};\n//# sourceMappingURL=useInsightDrillConfigPanel.js.map","// (C) 2019-2022 GoodData Corporation\nimport { useCallback, useEffect, useState } from \"react\";\nimport { isAvailableDrillTargetMeasure } from \"../../../../drill/types.js\";\nimport { usePrevious } from \"@gooddata/sdk-ui\";\nimport isEqual from \"lodash/isEqual.js\";\nconst addOrUpdateDrillConfigItem = (drillConfigItems, newItem) => {\n    const found = drillConfigItems.findIndex((drillConfigItem) => drillConfigItem.localIdentifier === newItem.localIdentifier);\n    if (found !== -1) {\n        const incompleteItemsUpdated = [...drillConfigItems];\n        incompleteItemsUpdated[found] = newItem;\n        return incompleteItemsUpdated;\n    }\n    else {\n        return [...drillConfigItems, newItem];\n    }\n};\n/**\n * Hook for manipulation with incomplete IDrillConfigItem\n * @internal\n */\nexport const useIncompleteItems = (props) => {\n    const { widgetDrills } = props;\n    const [incompleteItems, updateIncompleteItems] = useState([]);\n    const prevWidgetDrills = usePrevious(widgetDrills);\n    useEffect(() => {\n        //when widgetDrills changed remove all complete widget items\n        if (!isEqual(widgetDrills, prevWidgetDrills)) {\n            const incompleteItemsUpdated = incompleteItems.filter((incompleteItem) => !incompleteItem.complete);\n            if (incompleteItemsUpdated.length !== incompleteItems.length) {\n                updateIncompleteItems(incompleteItemsUpdated);\n            }\n        }\n    }, [widgetDrills, prevWidgetDrills, incompleteItems]);\n    const addIncompleteItem = useCallback((item) => {\n        updateIncompleteItems(addOrUpdateDrillConfigItem(incompleteItems, item));\n    }, [incompleteItems]);\n    const deleteIncompleteItem = useCallback((item) => {\n        const incompleteItemsUpdated = incompleteItems.filter((incompleteItem) => incompleteItem.localIdentifier !== item.localIdentifier);\n        updateIncompleteItems(incompleteItemsUpdated);\n    }, [incompleteItems]);\n    const completeItem = useCallback((item) => {\n        const incompleteItemsUpdated = incompleteItems.map((incompleteItem) => {\n            if (incompleteItem.localIdentifier === item.localIdentifier) {\n                return Object.assign(Object.assign({}, incompleteItem), { complete: true });\n            }\n            return incompleteItem;\n        });\n        updateIncompleteItems(incompleteItemsUpdated);\n    }, [incompleteItems]);\n    const onChangeItem = useCallback((changedItem) => {\n        const incompleteItem = Object.assign(Object.assign({}, changedItem), { complete: false });\n        addIncompleteItem(incompleteItem);\n    }, [addIncompleteItem]);\n    const onOriginSelect = useCallback((selectedItem) => {\n        if (isAvailableDrillTargetMeasure(selectedItem)) {\n            const incompleteMeasureItem = {\n                type: \"measure\",\n                localIdentifier: selectedItem.measure.measureHeaderItem.localIdentifier,\n                title: selectedItem.measure.measureHeaderItem.name,\n                attributes: selectedItem.attributes,\n                drillTargetType: undefined,\n                complete: false,\n            };\n            addIncompleteItem(incompleteMeasureItem);\n        }\n        else {\n            const incompleteAttributeItem = {\n                type: \"attribute\",\n                localIdentifier: selectedItem.attribute.attributeHeader.localIdentifier,\n                title: selectedItem.attribute.attributeHeader.formOf.name,\n                attributes: selectedItem.intersectionAttributes,\n                drillTargetType: undefined,\n                complete: false,\n            };\n            addIncompleteItem(incompleteAttributeItem);\n        }\n    }, [addIncompleteItem]);\n    const isItemNew = useCallback((changedItem) => {\n        // interaction is new if it has an incomplete item associated with it\n        return incompleteItems.some((incompleteItem) => incompleteItem.localIdentifier === changedItem.localIdentifier &&\n            !incompleteItem.complete);\n    }, [incompleteItems]);\n    return {\n        incompleteItems,\n        isItemNew,\n        completeItem,\n        deleteIncompleteItem,\n        onChangeItem,\n        onOriginSelect,\n    };\n};\n//# sourceMappingURL=useDrillConfigIncompleteItems.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { selectEnableRenamingMeasureToMetric, useDashboardSelector } from \"../../../../model/index.js\";\nexport const DrillOriginItem = ({ localIdentifier, onDelete, title, type, isDateAttribute, }) => {\n    const onClick = () => {\n        onDelete(localIdentifier);\n    };\n    const shouldRenameMeasureToMetric = useDashboardSelector(selectEnableRenamingMeasureToMetric);\n    const iconType = isDateAttribute\n        ? \"date\"\n        : shouldRenameMeasureToMetric && type === \"measure\"\n            ? \"metric\"\n            : type;\n    const iconClassName = `dm-button-icon dm-button-icon-${iconType}`;\n    return (React.createElement(\"div\", { className: \"gd-drill-config-measure-item\" },\n        React.createElement(\"div\", { className: iconClassName }),\n        React.createElement(\"div\", { className: \"dm-button-title s-drill-config-item-title\", title: title }, title),\n        React.createElement(\"div\", { className: \"dm-button-delete-wrapper\" },\n            React.createElement(Button, { className: \"drill-config-item-delete gd-button-link gd-button-icon-only gd-icon-cross s-drill-config-item-delete\", onClick: onClick }))));\n};\n//# sourceMappingURL=DrillOriginItem.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { DropdownButton } from \"@gooddata/sdk-ui-kit\";\nexport const ButtonWithIcon = (props) => {\n    return (React.createElement(DropdownButton, { value: props.value, isSmall: false, className: `gd-button-small ${props.className}`, iconLeft: props.icon, isOpen: props.isOpen, onClick: props.onClick }));\n};\n//# sourceMappingURL=ButtonWithIcon.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { Dropdown, DropdownList, SingleSelectListItem } from \"@gooddata/sdk-ui-kit\";\nimport { useIntl } from \"react-intl\";\nimport { ButtonWithIcon } from \"./ButtonWithIcon.js\";\nimport { DRILL_TARGET_TYPE } from \"../../../drill/types.js\";\nconst ITEM_HEIGHT = 25;\nconst DROPDOWN_BODY_WIDTH = 200;\nconst getTargetBySelection = (selection, targets) => {\n    return targets.find((target) => target.id === selection);\n};\nconst getIconClassNameBySelection = (selection) => {\n    const icons = {\n        [DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD]: \"gd-icon-drill-to-dashboard\",\n        [DRILL_TARGET_TYPE.DRILL_TO_INSIGHT]: \"gd-icon-drill-to-insight\",\n        [DRILL_TARGET_TYPE.DRILL_TO_URL]: \"gd-icon-hyperlink-disabled\",\n    };\n    return selection ? icons[selection] : undefined;\n};\nexport const DrillTargetType = (props) => {\n    const { selection, enabledDrillTargetTypeItems } = props;\n    const intl = useIntl();\n    const targetBySelection = getTargetBySelection(selection, enabledDrillTargetTypeItems);\n    const buttonValue = targetBySelection\n        ? targetBySelection.title\n        : intl.formatMessage({ id: \"configurationPanel.drillConfig.select\" });\n    const onSelect = (target) => {\n        props.onSelect(target.id);\n    };\n    return (React.createElement(Dropdown, { closeOnParentScroll: true, closeOnMouseDrag: false, closeOnOutsideClick: true, alignPoints: [\n            {\n                align: \"bl tl\",\n            },\n            {\n                align: \"tl bl\",\n            },\n        ], renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(ButtonWithIcon, { className: \"s-drill-config-panel-target-button\", value: buttonValue, icon: getIconClassNameBySelection(selection), isOpen: isOpen, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { width: DROPDOWN_BODY_WIDTH, itemHeight: ITEM_HEIGHT, items: enabledDrillTargetTypeItems, className: \"gd-drill-config-panel-target s-drill-config-panel-target-type-open\", renderItem: ({ item }) => {\n                const isSelected = targetBySelection && targetBySelection.id === item.id;\n                const drillIconClassName = getIconClassNameBySelection(item.id);\n                return (React.createElement(SingleSelectListItem, { className: drillIconClassName, title: item.title, isSelected: isSelected, onClick: () => {\n                        onSelect(item);\n                        closeDropdown();\n                    } }));\n            } })) }));\n};\n//# sourceMappingURL=DrillTargetType.js.map","// (C) 2007-2020 GoodData Corporation\nimport { makeCancelable } from \"./CancelablePromise.js\";\nimport values from \"lodash/values.js\";\n/**\n * Simple promise cache, that allows promise canceling\n * After reset() call, it cancels pending promises\n * @internal\n */\nexport class PromiseCache {\n    constructor(handler, getCacheKey = JSON.stringify) {\n        this.handler = handler;\n        this.getCacheKey = getCacheKey;\n        this.promises = {};\n        this.params = {};\n        this.results = {};\n        this.errors = {};\n        this.getResult = (params) => {\n            const cacheKey = this.getCacheKey(params);\n            return this.results[cacheKey];\n        };\n        this.getError = (params) => {\n            const cacheKey = this.getCacheKey(params);\n            return this.errors[cacheKey];\n        };\n        this.getPromise = (params) => {\n            const cacheKey = this.getCacheKey(params);\n            const cachedPromise = this.promises[cacheKey];\n            const cachedPromiseError = this.errors[cacheKey];\n            if (cachedPromise && !cachedPromiseError) {\n                return cachedPromise.promise;\n            }\n        };\n        this.reset = () => {\n            values(this.params).forEach(this.cancel);\n            this.params = {};\n            this.promises = {};\n            this.results = {};\n            this.errors = {};\n        };\n        this.cancel = (params) => {\n            const cacheKey = this.getCacheKey(params);\n            const cancelablePromise = this.promises[cacheKey];\n            if (cancelablePromise) {\n                cancelablePromise.cancel();\n            }\n        };\n        this.load = (params) => {\n            const cacheKey = this.getCacheKey(params);\n            const cachedPromise = this.promises[cacheKey];\n            if (cachedPromise) {\n                return cachedPromise.promise;\n            }\n            const cancelablePromise = makeCancelable(this.handler(params));\n            cancelablePromise.promise\n                .then((result) => (this.results[cacheKey] = result))\n                .catch((error) => (this.errors[cacheKey] = error));\n            this.promises[cacheKey] = cancelablePromise;\n            return cancelablePromise.promise;\n        };\n    }\n}\n//# sourceMappingURL=PromiseCache.js.map","// (C) 2007-2020 GoodData Corporation\nimport { useEffect, useState, useRef } from \"react\";\nimport { PromiseCache } from \"./PromiseCache.js\";\nconst initialState = {\n    isLoading: false,\n    results: [],\n    errors: [],\n};\n/**\n * Hook for promise caching\n * It caches promises by params passed to provided factory function\n * It returns only new results\n * @internal\n */\nexport function usePromiseCache(promiseFactory, fetchParams, fetchDeps, resetDeps, getCacheKey, preventResetPromises) {\n    const promiseCacheRef = useRef(new PromiseCache(promiseFactory, getCacheKey));\n    const [state, setState] = useState(initialState);\n    const setInitialState = () => setState(initialState);\n    const setResults = (results) => setState((state) => (Object.assign(Object.assign({}, state), { results })));\n    const setErrors = (errors) => setState((state) => (Object.assign(Object.assign({}, state), { errors })));\n    const setLoading = (isLoading) => setState((state) => (Object.assign(Object.assign({}, state), { isLoading })));\n    const preventResetPromisesRef = useRef(false);\n    useEffect(() => {\n        return () => {\n            if (!preventResetPromisesRef.current) {\n                promiseCacheRef.current.reset();\n                setInitialState();\n            }\n            preventResetPromisesRef.current = false;\n        };\n    }, resetDeps);\n    useEffect(() => {\n        const newParams = fetchParams.filter((params) => !promiseCacheRef.current.getResult(params));\n        const newPromises = newParams.map(promiseCacheRef.current.load);\n        if (newPromises.length === 0) {\n            return;\n        }\n        // Because promises have their own lifecycle independent on react lifecycle,\n        // we need to check if promise cache was not reset before their resolution\n        // and our results are still relevant.\n        // We do this by storing current promise cache in effect closure\n        // so when promises are resolved, we have still access to it\n        const usedPromiseCache = promiseCacheRef.current;\n        setLoading(true);\n        Promise.all(newPromises)\n            .then((results) => {\n            setLoading(false);\n            if (usedPromiseCache === promiseCacheRef.current) {\n                setResults(results);\n                preventResetPromisesRef.current = false;\n            }\n        })\n            .catch((errors) => {\n            if ((errors === null || errors === void 0 ? void 0 : errors.message) === \"Canceled\") {\n                return;\n            }\n            setLoading(false);\n            if (usedPromiseCache === promiseCacheRef.current) {\n                setErrors(errors);\n            }\n        });\n        return () => {\n            preventResetPromisesRef.current = !!preventResetPromises;\n            usedPromiseCache.cancel(newParams[0]);\n        };\n    }, fetchDeps);\n    return state;\n}\n//# sourceMappingURL=usePromiseCache.js.map","// (C) 2007-2023 GoodData Corporation\nimport React from \"react\";\nimport toDate from \"date-fns-tz/toDate\";\nimport subDays from \"date-fns/subDays/index.js\";\nimport isSameDay from \"date-fns/isSameDay/index.js\";\nimport isSameYear from \"date-fns/isSameYear/index.js\";\nimport { FormattedMessage, FormattedTime, FormattedDate } from \"react-intl\";\n/**\n * @internal\n */\nexport const InsightListItemDate = ({ config }) => {\n    const relativeDate = config.isToday ? \"gs.date.today\" : \"gs.date.yesterday\";\n    if (config.isToday || config.isYesterday) {\n        return (React.createElement(\"span\", null,\n            React.createElement(FormattedMessage, { id: relativeDate }),\n            \"\\u00A0\",\n            React.createElement(FormattedMessage, { id: \"gs.date.at\" }),\n            \"\\u00A0\",\n            React.createElement(FormattedTime, { value: config.date, format: \"hhmm\" })));\n    }\n    else if (config.isCurrentYear) {\n        return React.createElement(FormattedDate, { value: config.date, format: \"shortWithoutYear\" });\n    }\n    return React.createElement(FormattedDate, { value: config.date, format: \"shortWithYear\" });\n};\nexport const META_DATA_TIMEZONE = \"Europe/Prague\";\n/**\n * Build date time config for InsightListItemDate component.\n *\n * @param date - string ISO date\n * @param options - optional options object\n * @returns date time config\n *\n * @internal\n */\nexport function getDateTimeConfig(date, options = {}) {\n    const { dateTimezone = META_DATA_TIMEZONE, now = new Date() } = options;\n    const dateInLocalTimezone = toDate(date, { timeZone: dateTimezone });\n    const yesterday = subDays(now, 1);\n    const isToday = isSameDay(dateInLocalTimezone, now);\n    const isYesterday = isSameDay(dateInLocalTimezone, yesterday);\n    const isCurrentYear = isSameYear(dateInLocalTimezone, now);\n    return {\n        date: dateInLocalTimezone,\n        isToday,\n        isYesterday,\n        isCurrentYear,\n    };\n}\n//# sourceMappingURL=InsightListItemDate.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { Component, createRef } from \"react\";\nimport cx from \"classnames\";\nimport { injectIntl } from \"react-intl\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { InsightListItemDate, getDateTimeConfig } from \"./InsightListItemDate.js\";\nimport { Button } from \"../Button/index.js\";\nimport { ShortenedText } from \"../ShortenedText/index.js\";\nimport { DescriptionPanel, DESCRIPTION_PANEL_ARROW_OFFSETS } from \"../DescriptionPanel/index.js\";\nconst VISUALIZATION_TYPE_UNKNOWN = \"unknown\";\nconst WIDGET_TYPE_KPI = \"kpi\";\nconst visualizationIconWidthAndPadding = 42;\nconst tooltipAlignPoints = [\n    {\n        align: \"cr cl\",\n    },\n    {\n        align: \"cl cr\",\n        offset: {\n            x: -visualizationIconWidthAndPadding,\n            y: 0,\n        },\n    },\n];\nconst modifiedArrowOffsets = Object.assign(Object.assign({}, DESCRIPTION_PANEL_ARROW_OFFSETS), { \"cr cl\": [30, 0] });\n/**\n * @internal\n */\nexport class InsightListItemCore extends Component {\n    constructor() {\n        super(...arguments);\n        this.shortenedTextRef = createRef();\n        this.handleClickDelete = (e) => {\n            e.stopPropagation();\n            const { onDelete } = this.props;\n            if (onDelete) {\n                this.props.onDelete();\n            }\n        };\n        this.renderLock = () => {\n            if (this.props.isLocked) {\n                return React.createElement(\"i\", { className: \"gd-icon-lock\" });\n            }\n            return false;\n        };\n        this.renderUpdatedDateTime = (date) => {\n            const { type, metadataTimeZone } = this.props;\n            if (!date) {\n                return false;\n            }\n            if (type === WIDGET_TYPE_KPI) {\n                return React.createElement(\"span\", null);\n            }\n            const dateTimeConfig = getDateTimeConfig(date, { dateTimezone: metadataTimeZone });\n            return React.createElement(InsightListItemDate, { config: dateTimeConfig });\n        };\n        this.shouldRenderActions = () => !!this.props.onDelete;\n        this.renderActions = () => {\n            return (this.shouldRenderActions() && (React.createElement(\"div\", { className: \"gd-visualizations-list-item-actions\" },\n                React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-button-small\\n                        gd-icon-trash gd-visualizations-list-item-action-delete s-delete-item\", onClick: this.handleClickDelete }))));\n        };\n    }\n    render() {\n        const { title, description, updated, type = VISUALIZATION_TYPE_UNKNOWN, isSelected, isLoading, onClick, onDescriptionPanelOpen, showDescriptionPanel = false, } = this.props;\n        const iconClassName = cx(\"gd-vis-type\", `gd-vis-type-${type}`);\n        const visualizationListItemClassname = cx(\"gd-visualizations-list-item\", `s-${stringUtils.simplifyText(title)}`, {\n            \"is-selected\": isSelected,\n        });\n        return (React.createElement(\"div\", { className: visualizationListItemClassname, onClick: onClick },\n            this.renderActions(),\n            showDescriptionPanel ? (React.createElement(\"div\", { className: \"gd-visualizations-list-item-description\" },\n                React.createElement(DescriptionPanel, { onBubbleOpen: onDescriptionPanelOpen, title: title, description: description, arrowOffsets: this.shouldRenderActions() ? modifiedArrowOffsets : undefined }))) : null,\n            React.createElement(\"div\", { className: \"gd-visualizations-list-item-content\" },\n                React.createElement(\"div\", { className: \"gd-visualizations-list-item-content-name\" },\n                    this.renderLock(),\n                    React.createElement(ShortenedText, { ref: this.shortenedTextRef, tooltipAlignPoints: tooltipAlignPoints, displayTooltip: !showDescriptionPanel }, isLoading\n                        ? this.props.intl.formatMessage({ id: \"gs.visualizationsList.loading\" })\n                        : title)),\n                React.createElement(\"div\", { className: \"gd-visualizations-list-item-content-date\" }, this.renderUpdatedDateTime(updated))),\n            React.createElement(\"div\", { className: \"gd-vis-type-container\" },\n                React.createElement(\"div\", { className: iconClassName }))));\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.width !== this.props.width && this.shortenedTextRef.current) {\n            this.shortenedTextRef.current.recomputeShortening();\n        }\n    }\n}\n/**\n * @internal\n */\nexport const InsightListItem = injectIntl(InsightListItemCore);\n//# sourceMappingURL=InsightListItem.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nexport const InsightListNoData = ({ hasNoMatchingData, isUserInsights, showNoDataCreateButton, onCreateButtonClick, }) => {\n    return (React.createElement(\"div\", { className: cx(\"gd-visualizations-list-no-data\", \"gd-no-data\", {\n            \"gd-visualization-list-not-found\": hasNoMatchingData,\n        }) }, hasNoMatchingData ? (React.createElement(\"span\", { className: \"s-visualization-list-no-data-message\" },\n        React.createElement(FormattedMessage, { id: \"visualizationsList.noVisualizationsFound\" }))) : (React.createElement(React.Fragment, null,\n        React.createElement(\"span\", { className: \"s-visualization-list-no-data-message\" }, isUserInsights ? (React.createElement(FormattedMessage, { id: \"visualizationsList.noUserInsights\" })) : (React.createElement(FormattedMessage, { id: \"visualizationsList.noInsights\" }))),\n        \" \",\n        showNoDataCreateButton ? (React.createElement(Button, { className: \"gd-button-link s-create-new-insight\", tagName: \"a\", onClick: onCreateButtonClick, value: React.createElement(FormattedMessage, { id: \"visualizationsList.create\" }) })) : null))));\n};\n//# sourceMappingURL=InsightListNoData.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { insightTitle, insightVisualizationType, insightUpdated, insightIsLocked, isUriRef, areObjRefsEqual, insightSummary, insightCreated, } from \"@gooddata/sdk-model\";\nimport debounce from \"lodash/debounce.js\";\nimport range from \"lodash/range.js\";\nimport { useBackendStrict, usePagedResource, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { InsightListItem, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport { InsightListNoData } from \"./InsightListNoData.js\";\nimport { createInsightRequested, selectAllowCreateInsightRequest, selectCanCreateVisualization, selectInsightListLastUpdateRequested, selectSettings, useDashboardEventDispatch, useDashboardSelector, selectCurrentUser, selectSupportsObjectUris, } from \"../../model/index.js\";\nimport { messages } from \"../../locales.js\";\nconst ITEMS_PER_PAGE = 50;\nconst ITEM_HEIGHT = 40;\nconst LIST_WIDTH = 229;\nexport function getInsightListSourceItem(insight) {\n    const insightType = insightVisualizationType(insight);\n    return {\n        insight,\n        insightType,\n    };\n}\nconst dropdownTabsTranslationIds = [messages.tabsMy, messages.tabsAll];\nconst useAuthor = () => {\n    const isObjectUrisSupported = useDashboardSelector(selectSupportsObjectUris);\n    const user = useDashboardSelector(selectCurrentUser);\n    const userUri = isUriRef(user.ref) ? user.ref.uri : undefined;\n    // getInsights filter via user URI on Bear, via user's login on Tiger\n    return isObjectUrisSupported ? userUri : user.login;\n};\n/**\n * @internal\n */\nexport const InsightList = ({ height, width = LIST_WIDTH, searchAutofocus, renderItem, selectedRef, onSelect, }) => {\n    const intl = useIntl();\n    const backend = useBackendStrict();\n    const workspaceId = useWorkspaceStrict();\n    const [initialLoadCompleted, setInitialLoadCompleted] = useState(false);\n    const [pagesToLoad, setPagesToLoad] = useState([0]); // first page loaded\n    const [search, setSearch] = useState(\"\");\n    const [selectedTabId, setSelectedTabId] = useState(messages.tabsMy.id);\n    const author = useAuthor();\n    const insightListLastUpdateRequested = useDashboardSelector(selectInsightListLastUpdateRequested);\n    const canCreateVisualization = useDashboardSelector(selectCanCreateVisualization);\n    const allowCreateInsightRequest = useDashboardSelector(selectAllowCreateInsightRequest);\n    const settings = useDashboardSelector(selectSettings);\n    const params = pagesToLoad.map((pageNumber) => ({\n        limit: ITEMS_PER_PAGE,\n        offset: pageNumber * ITEMS_PER_PAGE,\n        title: search,\n        author: selectedTabId === messages.tabsMy.id && !search ? author : undefined,\n    }));\n    const { items: insights, totalItemsCount: totalInsightsCount, isLoading, } = usePagedResource(({ limit, offset, title, author, }) => {\n        const options = {\n            limit,\n            offset,\n            author,\n            title,\n            orderBy: \"updated\",\n        };\n        return backend.workspace(workspaceId).insights().getInsights(options);\n    }, params, [backend, pagesToLoad, search, selectedTabId, insightListLastUpdateRequested], [search, selectedTabId, pagesToLoad.length === 0, insightListLastUpdateRequested], undefined, undefined, true);\n    useEffect(() => {\n        if (!initialLoadCompleted && typeof totalInsightsCount !== \"undefined\") {\n            setInitialLoadCompleted(true);\n            if (totalInsightsCount === 0) {\n                // when the user has no insights of their own, switch to the All tab\n                setSelectedTabId(messages.tabsAll.id);\n            }\n        }\n    }, [initialLoadCompleted, totalInsightsCount]);\n    const onSearch = useCallback(debounce((searchString) => {\n        setPagesToLoad([0]);\n        setSearch(searchString);\n    }, 500), []);\n    const itemHeightGetter = (index) => {\n        // Modify item heights for first/last item so that their hover states don't overlap.\n        // Also @see styles and keep this value in sync with what's in css styles\n        // for is-first and is-last in visualization items in the list\n        const firstLastItemMargin = 10;\n        const isFirstOrLast = totalInsightsCount ? index === 0 || index === totalInsightsCount - 1 : false;\n        return isFirstOrLast ? ITEM_HEIGHT + firstLastItemMargin : ITEM_HEIGHT;\n    };\n    const eventDispatch = useDashboardEventDispatch();\n    const createInsightRequestedEvent = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        eventDispatch(createInsightRequested());\n    }, []);\n    const TABS_AND_SEARCHFIELD_HEIGHT = 70;\n    const SEARCHFIELD_HEIGHT = 47;\n    // need to subtract height of controls from the overall size which was measured\n    const controlsHeight = search ? SEARCHFIELD_HEIGHT : TABS_AND_SEARCHFIELD_HEIGHT;\n    const dropdownListHeight = height && height - controlsHeight;\n    const dropdownListLoading = isLoading && insights.length === 0;\n    const showDropdownListTabs = initialLoadCompleted && !search;\n    const showNoDataCreateButton = allowCreateInsightRequest && canCreateVisualization;\n    return (React.createElement(DropdownList, { width: width, height: dropdownListHeight, isMobile: false, isLoading: dropdownListLoading, showSearch: initialLoadCompleted, searchString: search, searchFieldSize: \"small\", searchPlaceholder: intl.formatMessage({ id: \"search_insights\" }), onSearch: onSearch, disableAutofocus: !searchAutofocus, showTabs: showDropdownListTabs, tabs: backend.capabilities.supportsOwners && author ? dropdownTabsTranslationIds : undefined, selectedTabId: selectedTabId, onTabSelect: ({ id }) => {\n            setPagesToLoad([0]);\n            setSelectedTabId(id);\n        }, itemHeight: ITEM_HEIGHT, itemHeightGetter: itemHeightGetter, items: insights, itemsCount: totalInsightsCount, renderItem: renderItem !== null && renderItem !== void 0 ? renderItem : (({ item: insight, width }) => {\n            var _a, _b;\n            if (!insight) {\n                return React.createElement(InsightListItem, { isLoading: true });\n            }\n            const title = insightTitle(insight);\n            const description = (_a = insightSummary(insight)) === null || _a === void 0 ? void 0 : _a.trim();\n            const insightListSourceItem = getInsightListSourceItem(insight);\n            const isSelected = areObjRefsEqual(insight.insight.ref, selectedRef);\n            return (React.createElement(InsightListItem, { title: title, description: description, showDescriptionPanel: settings === null || settings === void 0 ? void 0 : settings.enableDescriptions, type: insightListSourceItem.insightType, width: width, isSelected: isSelected, updated: (_b = insightUpdated(insightListSourceItem.insight)) !== null && _b !== void 0 ? _b : insightCreated(insightListSourceItem.insight), isLocked: insightIsLocked(insightListSourceItem.insight), onClick: () => onSelect === null || onSelect === void 0 ? void 0 : onSelect(insight), metadataTimeZone: settings === null || settings === void 0 ? void 0 : settings.metadataTimeZone }));\n        }), renderNoData: ({ hasNoMatchingData }) => (React.createElement(InsightListNoData, { isUserInsights: selectedTabId === messages.tabsMy.id, hasNoMatchingData: hasNoMatchingData, showNoDataCreateButton: showNoDataCreateButton, onCreateButtonClick: createInsightRequestedEvent })), onScrollEnd: (startIndex, endIndex) => {\n            const startPage = Math.floor(startIndex / ITEMS_PER_PAGE);\n            const endPage = Math.floor(endIndex / ITEMS_PER_PAGE);\n            const pagesToLoad = range(startPage, endPage + 1);\n            setPagesToLoad(pagesToLoad);\n        } }));\n};\n//# sourceMappingURL=InsightList.js.map","// (C) 2007-2021 GoodData Corporation\nimport { useState, useEffect } from \"react\";\nimport { usePromiseCache } from \"./usePromiseCache.js\";\n/**\n * Hook for getting data from paged resource\n * @public\n */\nexport function usePagedResource(resourceFactory, fetchParams, fetchDeps, resetDeps, getCacheKey, initialState = {\n    totalItemsCount: undefined,\n    items: [],\n}, preventResetPromises) {\n    const [state, setState] = useState(initialState);\n    const reset = () => setState(initialState);\n    const mergeResult = (result) => setState((state) => {\n        const isFirstResult = typeof state.totalItemsCount === \"undefined\";\n        const items = isFirstResult ? new Array(result.totalCount) : [...state.items];\n        items.splice(result.offset, result.limit, ...result.items);\n        return {\n            totalItemsCount: result.totalCount,\n            items,\n        };\n    });\n    const { isLoading, results } = usePromiseCache(resourceFactory, fetchParams, fetchDeps, resetDeps, getCacheKey, preventResetPromises);\n    useEffect(() => {\n        // We want to reset state only after resetDeps are changed, not on first run\n        return () => {\n            reset();\n        };\n    }, resetDeps);\n    useEffect(() => {\n        results.forEach(mergeResult);\n    }, [results]);\n    const { items, totalItemsCount } = state;\n    return {\n        isLoading,\n        items,\n        totalItemsCount,\n    };\n}\n//# sourceMappingURL=usePagedResource.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { Dropdown, DropdownButton } from \"@gooddata/sdk-ui-kit\";\nimport { isInsight, insightVisualizationType } from \"@gooddata/sdk-model\";\nimport { useIntl } from \"react-intl\";\nimport { isDrillToInsightConfig } from \"../../../../drill/types.js\";\nimport { InsightList } from \"../../../../insightList/index.js\";\nimport { selectInsightsMap, useDashboardSelector } from \"../../../../../model/index.js\";\nconst DROPDOWN_ALIGN_POINTS = [\n    {\n        align: \"bl tl\",\n        offset: {\n            x: 0,\n            y: 4,\n        },\n    },\n    {\n        align: \"tl bl\",\n        offset: {\n            x: 0,\n            y: -4,\n        },\n    },\n];\nfunction getButtonValue(title, intl, ref) {\n    if (!ref) {\n        return intl.formatMessage({ id: \"configurationPanel.drillConfig.selectInsight\" });\n    }\n    return title || intl.formatMessage({ id: \"loading\" });\n}\nexport const InsightDropdown = ({ insightConfig, onSelect }) => {\n    var _a;\n    const intl = useIntl();\n    const { insight, insightType, insightRef } = useDrillToInsightData(insightConfig);\n    const buttonText = getButtonValue((_a = insight === null || insight === void 0 ? void 0 : insight.insight.title) !== null && _a !== void 0 ? _a : \"\", intl, insightRef);\n    return (React.createElement(Dropdown, { className: \"s-report_select report-select\", closeOnMouseDrag: true, closeOnParentScroll: true, alignPoints: DROPDOWN_ALIGN_POINTS, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DropdownButton, { value: buttonText, onClick: toggleDropdown, isOpen: isOpen, isSmall: false, iconLeft: insightType ? `gd-vis-type-${insightType}` : undefined, className: \"gd-button-small s-visualization-button-target-insight\" })), renderBody: ({ closeDropdown }) => {\n            return (React.createElement(\"div\", { className: \"open-visualizations s-open-visualizations\" },\n                React.createElement(InsightList, { selectedRef: isDrillToInsightConfig(insightConfig) ? insightConfig.insightRef : undefined, height: 300, width: 275, searchAutofocus: true, onSelect: (insight) => {\n                        onSelect(insight);\n                        closeDropdown();\n                    } })));\n        } }));\n};\nfunction useDrillToInsightData(insightConfig) {\n    const insights = useDashboardSelector(selectInsightsMap);\n    return useMemo(() => {\n        if (isDrillToInsightConfig(insightConfig) && insightConfig.insightRef) {\n            const insight = insights.get(insightConfig.insightRef);\n            if (isInsight(insight)) {\n                const insightType = insightVisualizationType(insight);\n                return {\n                    insight,\n                    insightRef: insightConfig.insightRef,\n                    insightType: insightType,\n                };\n            }\n        }\n        return {};\n    }, [insightConfig, insights]);\n}\n//# sourceMappingURL=InsightDropdown.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { InsightDropdown } from \"./InsightDropdown.js\";\nexport const DrillTargetInsightItem = ({ insight, onSelect, }) => {\n    return React.createElement(InsightDropdown, { insightConfig: insight, onSelect: onSelect });\n};\n//# sourceMappingURL=DrillTargetInsightItem.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nexport const DropdownSectionHeader = ({ className, children }) => (React.createElement(Typography, { tagName: \"h3\", className: cx(\"gd-drill-to-url-section-title gd-list-item gd-list-item-header\", className) },\n    React.createElement(\"span\", null, children)));\n//# sourceMappingURL=DropdownSectionHeader.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { DropdownSectionHeader } from \"./DropdownSectionHeader.js\";\nimport { isDrillToCustomUrlConfig } from \"../../types.js\";\nconst UrlDropdownOption = ({ urlValue, closeDropdown, }) => (React.createElement(\"div\", { onClick: closeDropdown, className: \"gd-list-item gd-menu-item gd-drill-to-custom-url-option s-drill-to-custom-url-option gd-icon-hyperlink-disabled is-selected\" },\n    React.createElement(\"span\", null, urlValue.length > 50 ? `${urlValue.substring(0, 50)}...` : urlValue)));\nconst EditButton = ({ urlValue, toggleModal }) => {\n    const intl = useIntl();\n    const buttonTitle = urlValue\n        ? intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.customUrlEditButtonLabel\",\n        })\n        : intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.customUrlAddButtonLabel\",\n        });\n    const buttonIconLeft = urlValue ? undefined : \"gd-icon-add\";\n    return (React.createElement(Button, { className: \"gd-button gd-button-secondary gd-button-small s-drill-to-custom-url-button\", iconLeft: buttonIconLeft, onClick: toggleModal, value: buttonTitle }));\n};\nexport const CustomUrlSection = (props) => {\n    const { urlDrillTarget, closeDropdown } = props;\n    const urlValue = isDrillToCustomUrlConfig(urlDrillTarget) ? urlDrillTarget.customUrl : undefined;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DropdownSectionHeader, null,\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.customUrlSectionTitle\" })),\n        !!urlValue && React.createElement(UrlDropdownOption, { urlValue: urlValue, closeDropdown: closeDropdown }),\n        React.createElement(\"div\", { className: \"gd-drill-to-custom-url-button-wrapper\" },\n            React.createElement(EditButton, Object.assign({}, props, { urlValue: urlValue })))));\n};\n//# sourceMappingURL=CustomUrlSection.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { LoadingMask } from \"@gooddata/sdk-ui-kit\";\nimport classNames from \"classnames\";\nimport isEmpty from \"lodash/isEmpty.js\";\nconst LOADING_MASK_HEIGHT = 60;\nexport const ParameterDetail = (props) => {\n    const { title, typeName, label, isLoading, useEllipsis, values, additionalValues } = props;\n    return (React.createElement(\"div\", { className: \"gd-drill-to-url-editor-parameter-detail s-parameter-detail\" },\n        React.createElement(\"div\", { className: \"gd-parameter-detail-title\" }, title),\n        React.createElement(ParameterTypeSection, { typeName: typeName }),\n        label ? React.createElement(ParameterLabelSection, { label: label }) : null,\n        !isEmpty(values) && (React.createElement(ParameterValuesSection, { isLoading: isLoading, useEllipsis: useEllipsis, values: values, additionalValues: additionalValues }))));\n};\nconst ParameterTypeSection = ({ typeName }) => {\n    return (React.createElement(\"div\", { className: \"gd-parameter-detail-section\" },\n        React.createElement(\"div\", { className: \"gd-parameter-detail-subtitle\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.parameterDetailType\" })),\n        React.createElement(\"div\", null, typeName)));\n};\nconst ParameterLabelSection = ({ label }) => {\n    return (React.createElement(\"div\", { className: \"gd-parameter-detail-section\" },\n        React.createElement(\"div\", { className: \"gd-parameter-detail-subtitle\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.parameterDetailLabel\" })),\n        React.createElement(\"div\", null, label)));\n};\nconst ParameterValuesSection = ({ isLoading, useEllipsis, values, additionalValues, }) => {\n    return isLoading ? (React.createElement(LoadingMask, { className: \"s-parameter-detail-loading\", height: LOADING_MASK_HEIGHT })) : (React.createElement(Values, { useEllipsis: useEllipsis, values: values, additionalValues: additionalValues }));\n};\nconst Values = ({ useEllipsis, values, additionalValues }) => {\n    const valueClassName = classNames(\"s-parameter-detail-value\", {\n        \"gd-parameter-detail-ellipsis-row\": useEllipsis,\n    });\n    return (values && (React.createElement(\"div\", { className: \"gd-parameter-detail-section\" },\n        React.createElement(\"div\", { className: \"gd-parameter-detail-subtitle\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.parameterDetailValues\", values: { numberOfValues: values.length } })),\n        React.createElement(\"div\", null,\n            values.map((item, i) => (React.createElement(\"div\", { className: valueClassName, key: i }, item))),\n            additionalValues ? (React.createElement(\"div\", { className: \"gd-parameter-detail-info\" },\n                React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.parameterDetailMoreValues\", values: { count: additionalValues } }))) : null))));\n};\n//# sourceMappingURL=ParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { useIntl } from \"react-intl\";\nexport const ProjectIdParameterDetail = ({ title }) => {\n    const value = useWorkspaceStrict();\n    const intl = useIntl();\n    return (React.createElement(ParameterDetail, { title: title, typeName: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\",\n        }), useEllipsis: false, values: [value] }));\n};\n//# sourceMappingURL=ProjectIdParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { useIntl } from \"react-intl\";\nimport { selectDashboardId, useDashboardSelector } from \"../../../../../model/index.js\";\nexport const DashboardIdParameterDetail = ({ title }) => {\n    const value = useDashboardSelector(selectDashboardId);\n    const intl = useIntl();\n    return (React.createElement(ParameterDetail, { title: title, typeName: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\",\n        }), useEllipsis: false, values: value ? [value] : [] }));\n};\n//# sourceMappingURL=DashboardIdParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { selectSelectedWidgetRef, selectWidgetByRef, useDashboardSelector, isTemporaryIdentity, } from \"../../../../../model/index.js\";\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nexport const WidgetIdParameterDetail = ({ title }) => {\n    const intl = useIntl();\n    const widgetRef = useDashboardSelector(selectSelectedWidgetRef);\n    const widget = useDashboardSelector(selectWidgetByRef(widgetRef));\n    let values = [];\n    if (isInsightWidget(widget) && !isTemporaryIdentity(widget)) {\n        values = [widget.identifier];\n    }\n    return (React.createElement(ParameterDetail, { title: title, typeName: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\",\n        }), useEllipsis: false, values: values }));\n};\n//# sourceMappingURL=WidgetIdParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { selectInsightByRef, selectSelectedWidgetRef, selectWidgetByRef, useDashboardSelector, } from \"../../../../../model/index.js\";\nimport { isInsightWidget } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nexport const InsightIdParameterDetail = ({ title }) => {\n    const intl = useIntl();\n    const widgetRef = useDashboardSelector(selectSelectedWidgetRef);\n    const widget = useDashboardSelector(selectWidgetByRef(widgetRef));\n    invariant(isInsightWidget(widget), \"must be insight widget selected\");\n    const insight = useDashboardSelector(selectInsightByRef(widget.insight));\n    return (React.createElement(ParameterDetail, { title: title, typeName: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\",\n        }), useEllipsis: false, values: (insight === null || insight === void 0 ? void 0 : insight.insight.identifier) ? [insight.insight.identifier] : [] }));\n};\n//# sourceMappingURL=InsightIdParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { useIntl } from \"react-intl\";\nimport { useClientWorkspaceIdentifiers } from \"@gooddata/sdk-ui\";\nexport const ClientIdParameterDetail = ({ title }) => {\n    const intl = useIntl();\n    const { client } = useClientWorkspaceIdentifiers();\n    return (React.createElement(ParameterDetail, { title: title, typeName: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\",\n        }), useEllipsis: false, values: client ? [client] : [] }));\n};\n//# sourceMappingURL=ClientIdParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { useIntl } from \"react-intl\";\nimport { useClientWorkspaceIdentifiers } from \"@gooddata/sdk-ui\";\nexport const DataProductIdParameterDetail = ({ title }) => {\n    const intl = useIntl();\n    const { dataProduct } = useClientWorkspaceIdentifiers();\n    return (React.createElement(ParameterDetail, { title: title, typeName: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.identifierTypeLabel\",\n        }), useEllipsis: false, values: dataProduct ? [dataProduct] : [] }));\n};\n//# sourceMappingURL=DataProductIdParameterDetail.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { Button, Bubble } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { isDarkTheme, useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nexport const Parameter = (props) => {\n    const { name, description, detailContent, iconClassName, onAdd, intl } = props;\n    const [displayHelp, setDisplayHelp] = useState(false);\n    const theme = useTheme();\n    const isDark = theme && isDarkTheme(theme);\n    const id = `${stringUtils.simplifyText(name)}${description ? stringUtils.simplifyText(`_${description}`) : \"\"}`;\n    const itemClassNames = classNames(\"gd-list-item gd-menu-item\", `s-parameter-${id}`, iconClassName);\n    const addButtonLabel = intl.formatMessage({\n        id: \"configurationPanel.drillIntoUrl.editor.addParameterButtonLabel\",\n    });\n    return (React.createElement(\"div\", { id: id, className: itemClassNames, onClick: () => onAdd() },\n        React.createElement(\"span\", { className: \"gd-parameter-title\" }, name),\n        description ? React.createElement(\"span\", { className: \"addon s-parameter-description\" },\n            \"(\",\n            description,\n            \")\") : null,\n        React.createElement(Button, { className: \"gd-button gd-button-link s-parameter-add-button\", value: addButtonLabel }),\n        React.createElement(\"div\", { className: \"gd-list-item-tooltip\" },\n            React.createElement(\"span\", { className: \"gd-icon-circle-question gd-list-item-tooltip-icon s-parameter-help-icon\", onMouseEnter: () => setDisplayHelp(true), onMouseLeave: () => setDisplayHelp(false) }),\n            displayHelp ? (React.createElement(Bubble, { className: `themed-bubble ${isDark ? \"bubble-primary\" : \"bubble-light\"}`, alignTo: `#${id}`, alignPoints: [{ align: \"cr tl\" }] }, detailContent)) : null)));\n};\n//# sourceMappingURL=Parameter.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage, defineMessages } from \"react-intl\";\nimport { DropdownSectionHeader } from \"../DropdownSectionHeader.js\";\nimport { ProjectIdParameterDetail } from \"../ParameterDetails/ProjectIdParameterDetail.js\";\nimport { DashboardIdParameterDetail } from \"../ParameterDetails/DashboardIdParameterDetail.js\";\nimport { WidgetIdParameterDetail } from \"../ParameterDetails/WidgetIdParameterDetail.js\";\nimport { InsightIdParameterDetail } from \"../ParameterDetails/InsightIdParameterDetail.js\";\nimport { ClientIdParameterDetail } from \"../ParameterDetails/ClientIdParameterDetail.js\";\nimport { DataProductIdParameterDetail } from \"../ParameterDetails/DataProductIdParameterDetail.js\";\nimport { Parameter } from \"./Parameter.js\";\nimport { DRILL_TO_URL_PLACEHOLDER, selectEnableRenamingProjectToWorkspace, useDashboardSelector, } from \"../../../../../model/index.js\";\nconst identifierParametersMessages = defineMessages({\n    insightIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.insightIdParameterLabel\" },\n    widgetIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.widgetIdParameterLabel\" },\n    dashboardIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.dashboardIdParameterLabel\" },\n    projectIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.projectIdParameterLabel\" },\n    workspaceIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.workspaceIdParameterLabel\" },\n    clientIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.clientIdParameterLabel\" },\n    dataProductIdParameterLabel: { id: \"configurationPanel.drillIntoUrl.editor.dataProductIdParameterLabel\" },\n});\nconst identifierParametersSection = [\n    {\n        titleIntlKey: identifierParametersMessages.insightIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.INSIGHT_ID,\n    },\n    {\n        titleIntlKey: identifierParametersMessages.widgetIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.WIDGET_ID,\n    },\n    {\n        titleIntlKey: identifierParametersMessages.dashboardIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.DASHBOARD_ID,\n    },\n    {\n        titleIntlKey: identifierParametersMessages.projectIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.PROJECT_ID,\n    },\n    {\n        titleIntlKey: identifierParametersMessages.workspaceIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.WORKSPACE_ID,\n    },\n    {\n        titleIntlKey: identifierParametersMessages.clientIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.CLIENT_ID,\n    },\n    {\n        titleIntlKey: identifierParametersMessages.dataProductIdParameterLabel.id,\n        placeholder: DRILL_TO_URL_PLACEHOLDER.DATA_PRODUCT_ID,\n    },\n];\nconst getDetailContent = (type, title) => {\n    switch (type) {\n        case DRILL_TO_URL_PLACEHOLDER.PROJECT_ID:\n        case DRILL_TO_URL_PLACEHOLDER.WORKSPACE_ID:\n            return React.createElement(ProjectIdParameterDetail, { title: title });\n        case DRILL_TO_URL_PLACEHOLDER.DASHBOARD_ID:\n            return React.createElement(DashboardIdParameterDetail, { title: title });\n        case DRILL_TO_URL_PLACEHOLDER.WIDGET_ID:\n            return React.createElement(WidgetIdParameterDetail, { title: title });\n        case DRILL_TO_URL_PLACEHOLDER.INSIGHT_ID:\n            return React.createElement(InsightIdParameterDetail, { title: title });\n        case DRILL_TO_URL_PLACEHOLDER.CLIENT_ID:\n            return React.createElement(ClientIdParameterDetail, { title: title });\n        case DRILL_TO_URL_PLACEHOLDER.DATA_PRODUCT_ID:\n            return React.createElement(DataProductIdParameterDetail, { title: title });\n        default:\n            return React.createElement(React.Fragment, null);\n    }\n};\nexport const IdentifierParametersSection = ({ enableClientIdParameter, enableDataProductIdParameter, enableWidgetIdParameter, onAdd, intl, }) => {\n    const enableRenamingProjectToWorkspace = useDashboardSelector(selectEnableRenamingProjectToWorkspace);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DropdownSectionHeader, null,\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.identifierParametersSectionLabel\" })),\n        identifierParametersSection\n            .filter(({ placeholder }) => placeholder !== DRILL_TO_URL_PLACEHOLDER.CLIENT_ID || enableClientIdParameter)\n            .filter(({ placeholder }) => placeholder !== DRILL_TO_URL_PLACEHOLDER.WIDGET_ID || enableWidgetIdParameter)\n            .filter(({ placeholder }) => placeholder !== DRILL_TO_URL_PLACEHOLDER.DATA_PRODUCT_ID ||\n            enableDataProductIdParameter)\n            .filter(({ placeholder }) => placeholder !==\n            (enableRenamingProjectToWorkspace\n                ? DRILL_TO_URL_PLACEHOLDER.PROJECT_ID\n                : DRILL_TO_URL_PLACEHOLDER.WORKSPACE_ID))\n            .map(({ placeholder, titleIntlKey }) => {\n            const title = intl.formatMessage({ id: titleIntlKey });\n            return (React.createElement(Parameter, { key: placeholder, name: title, detailContent: getDetailContent(placeholder, title), iconClassName: \"gd-icon-sharp\", onAdd: () => onAdd(placeholder), intl: intl }));\n        })));\n};\n//# sourceMappingURL=IdentifierParametersSection.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useState, useEffect } from \"react\";\nimport { defineMessages, useIntl } from \"react-intl\";\nimport { LRUCache } from \"lru-cache\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { ParameterDetail } from \"./ParameterDetail.js\";\nimport { emptyHeaderTitleFromIntl, useBackendStrict } from \"@gooddata/sdk-ui\";\nimport { selectBackendCapabilities, selectCatalogDateDatasets, useDashboardSelector, } from \"../../../../../model/index.js\";\nimport { newDisplayFormMap } from \"../../../../../_staging/metadata/objRefMap.js\";\nimport flatMap from \"lodash/flatMap.js\";\nconst MAX_CACHED_REQUESTS = 50;\nconst MAX_URL_LENGTH = 100;\nconst DISPLAY_FORM_ELEMENTS_LIMIT = 3;\nconst requestCache = new LRUCache({ max: MAX_CACHED_REQUESTS });\nconst getDisplayFormLabel = (type) => {\n    const messages = defineMessages({\n        hyperlink: { id: \"configurationPanel.drillIntoUrl.editor.urlDisplayFormTypeLabel\" },\n        pushpin: { id: \"configurationPanel.drillIntoUrl.editor.geoDisplayFormTypeLabel\" },\n        default: { id: \"configurationPanel.drillIntoUrl.editor.defaultDisplayFormTypeLabel\" },\n    });\n    switch (type) {\n        case \"GDC.link\":\n            return messages.hyperlink;\n        case \"GDC.geo.pin\":\n        case \"GDC.geo.pin_latitude\":\n        case \"GDC.geo.pin_longitude\":\n            return messages.pushpin;\n        default:\n            return messages.default;\n    }\n};\nconst handleEmptyValues = (values, intl) => values.map((value) => !value || value.length === 0 ? emptyHeaderTitleFromIntl(intl) : value);\nconst prepareValues = (elements, type) => {\n    if (type !== \"GDC.link\") {\n        return elements.map(({ title }) => title);\n    }\n    return elements.map(({ title }) => title && title.length > MAX_URL_LENGTH ? `${title.substr(0, MAX_URL_LENGTH)}...` : title);\n};\nfunction getElements(backend, projectId, displayFormRef, limit = 5) {\n    return backend\n        .workspace(projectId)\n        .attributes()\n        .elements()\n        .forDisplayForm(displayFormRef)\n        .withLimit(limit)\n        .query();\n}\nconst getCachedRequests = async (backend, projectId, displayFormRef) => {\n    const cacheKey = objRefToString(displayFormRef);\n    const cachedResponse = requestCache.get(cacheKey);\n    if (cachedResponse) {\n        return cachedResponse;\n    }\n    const response = await getElements(backend, projectId, displayFormRef, DISPLAY_FORM_ELEMENTS_LIMIT);\n    requestCache.set(cacheKey, response);\n    return response;\n};\nconst useSupportsEnumeration = (displayFormRef) => {\n    const dateDatasets = useDashboardSelector(selectCatalogDateDatasets);\n    const { hasTypeScopedIdentifiers, supportsEnumeratingDatetimeAttributes } = useDashboardSelector(selectBackendCapabilities);\n    if (supportsEnumeratingDatetimeAttributes) {\n        return true;\n    }\n    const dateAttributes = flatMap(dateDatasets, (dateDataset) => dateDataset.dateAttributes);\n    const displayForms = flatMap(dateAttributes, (dateAttribute) => dateAttribute.attribute.displayForms);\n    const displayFormMap = newDisplayFormMap(displayForms, hasTypeScopedIdentifiers);\n    const isDateAttribute = Boolean(displayFormMap.get(displayFormRef));\n    // datetime attributes should be skipped as they are not supporting enumeration\n    return !isDateAttribute;\n};\nexport const AttributeDisplayFormParameterDetail = (props) => {\n    const { title, label, type, displayFormRef, projectId, showValues } = props;\n    const intl = useIntl();\n    const backend = useBackendStrict();\n    const [isLoading, setIsLoading] = useState(true);\n    const [values, setValues] = useState([]);\n    const [additionalValues, setAdditionalValues] = useState(0);\n    const supportsEnumeration = useSupportsEnumeration(displayFormRef);\n    useEffect(() => {\n        let isMounted = true;\n        const getValues = async () => {\n            const response = await getCachedRequests(backend, projectId, displayFormRef);\n            if (isMounted) {\n                const additional = response.totalCount - DISPLAY_FORM_ELEMENTS_LIMIT;\n                if (additional > 0) {\n                    setAdditionalValues(additional);\n                }\n                setValues(handleEmptyValues(prepareValues(response.items, type), intl));\n                setIsLoading(false);\n            }\n        };\n        if (showValues && supportsEnumeration) {\n            getValues();\n        }\n        else {\n            setIsLoading(false);\n        }\n        return () => {\n            isMounted = false;\n        };\n    }, [displayFormRef, type, intl, projectId, showValues, backend, supportsEnumeration]);\n    return (React.createElement(ParameterDetail, { title: title, label: label, typeName: intl.formatMessage(getDisplayFormLabel(type)), isLoading: isLoading, useEllipsis: type !== \"GDC.link\", values: values ? values : [], additionalValues: additionalValues }));\n};\n//# sourceMappingURL=AttributeDisplayFormParameterDetail.js.map","// (C) 2020-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { DropdownSectionHeader } from \"../DropdownSectionHeader.js\";\nimport { AttributeDisplayFormParameterDetail } from \"../ParameterDetails/AttributeDisplayFormParameterDetail.js\";\nimport { Parameter } from \"./Parameter.js\";\nimport { useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { selectAllCatalogAttributesMap, useDashboardSelector } from \"../../../../../model/index.js\";\nconst ParameterX = ({ item, onAdd }) => {\n    const x = useDashboardSelector(selectAllCatalogAttributesMap);\n    const y = x.get(item.attribute);\n    const intl = useIntl();\n    const projectId = useWorkspaceStrict();\n    return (React.createElement(Parameter, { key: item.id, name: (y === null || y === void 0 ? void 0 : y.attribute.title) || \"\", description: item.title, detailContent: React.createElement(AttributeDisplayFormParameterDetail, { title: (y === null || y === void 0 ? void 0 : y.attribute.title) || \"\", label: item.title, type: item.displayFormType, projectId: projectId, displayFormRef: item.ref, showValues: true }), iconClassName: getDisplayFormIcon(item.displayFormType), onAdd: () => onAdd(`{attribute_title(${item.id})}`), intl: intl }));\n};\nconst getDisplayFormIcon = (type) => {\n    switch (type) {\n        case \"GDC.link\":\n            return \"gd-icon-hyperlink-warning\";\n        case \"GDC.geo.pin\":\n        case \"GDC.geo.pin_latitude\":\n        case \"GDC.geo.pin_longitude\":\n            return \"gd-icon-earth\";\n        default:\n            return \"gd-icon-label-warning\";\n    }\n};\nexport const InsightParametersSection = ({ attributeDisplayForms, loadingAttributeDisplayForms, onAdd, }) => {\n    return (React.createElement(React.Fragment, null, (attributeDisplayForms && attributeDisplayForms.length > 0) || loadingAttributeDisplayForms ? (React.createElement(React.Fragment, null,\n        React.createElement(DropdownSectionHeader, null,\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.insightParametersSectionLabel\" })),\n        loadingAttributeDisplayForms ? (React.createElement(\"div\", { className: \"gd-drill-to-url-section-loading s-drill-to-custom-url-attr-section-loading\" },\n            React.createElement(\"div\", { className: \"gd-spinner small\" }))) : (attributeDisplayForms === null || attributeDisplayForms === void 0 ? void 0 : attributeDisplayForms.map((item) => (React.createElement(ParameterX, { key: item.displayForm.id, item: item.displayForm, onAdd: onAdd })))))) : null));\n};\n//# sourceMappingURL=InsightParametersSection.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { IdentifierParametersSection } from \"./CustomUrlEditorParametersSections/IdentifierParametersSection.js\";\nimport { InsightParametersSection, } from \"./CustomUrlEditorParametersSections/InsightParametersSection.js\";\nexport const ParametersPanel = ({ attributeDisplayForms, loadingAttributeDisplayForms, enableClientIdParameter, enableDataProductIdParameter, enableWidgetIdParameter, onAdd, intl, }) => (React.createElement(\"div\", null,\n    React.createElement(\"label\", { className: \"gd-label\" },\n        React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.parametersPanelLabel\" }),\n        React.createElement(BubbleHoverTrigger, { className: \"gd-list-item-tooltip\", showDelay: 0, hideDelay: 0 },\n            React.createElement(\"span\", { className: \"gd-icon-circle-question gd-list-item-tooltip-icon\" }),\n            React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: [{ align: \"cr cl\" }] },\n                React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.parametersPanelTooltip\" })))),\n    React.createElement(\"div\", { className: \"gd-drill-to-url-parameters gd-drill-to-url-list\" },\n        React.createElement(InsightParametersSection, { attributeDisplayForms: attributeDisplayForms, loadingAttributeDisplayForms: loadingAttributeDisplayForms, onAdd: onAdd, intl: intl }),\n        React.createElement(IdentifierParametersSection, { enableClientIdParameter: enableClientIdParameter, enableDataProductIdParameter: enableDataProductIdParameter, enableWidgetIdParameter: enableWidgetIdParameter, onAdd: onAdd, intl: intl }))));\n//# sourceMappingURL=CustomUrlEditorParameters.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useState, useMemo } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { SyntaxHighlightingInput, ConfirmDialogBase, useMediaQuery, FullScreenOverlay, Overlay, OverlayControllerProvider, OverlayController, } from \"@gooddata/sdk-ui-kit\";\nimport { ParametersPanel } from \"./CustomUrlEditorParameters.js\";\nimport { isDrillToCustomUrlConfig } from \"../../types.js\";\nimport { selectIsWhiteLabeled, useDashboardSelector } from \"../../../../model/index.js\";\nimport { DASHBOARD_HEADER_OVERLAYS_Z_INDEX } from \"../../../constants/index.js\";\nexport const UrlInput = (props) => {\n    const { onChange, onCursor, currentUrlValue, intl, syntaxHighlightingRules } = props;\n    const placeholder = intl.formatMessage({\n        id: \"configurationPanel.drillIntoUrl.editor.textAreaPlaceholder\",\n    });\n    return (React.createElement(SyntaxHighlightingInput, { onChange: onChange, onCursor: onCursor, value: currentUrlValue, customOptions: { placeholder }, className: \"gd-input-syntax-highlighting-input\", formatting: syntaxHighlightingRules }));\n};\nconst HelpLink = ({ link }) => {\n    return (React.createElement(\"a\", { className: \"gd-button-link gd-drill-to-custom-url-help\", target: \"_blank\", href: link, rel: \"noopener noreferrer\" },\n        React.createElement(\"span\", { className: \"gd-icon-circle-question\" }),\n        React.createElement(\"span\", { className: \"gd-button-link-text\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.helpButtonLabel\" }))));\n};\nconst buildValidDisplayFormsFormattingRule = (attributeDisplayForms) => {\n    if (attributeDisplayForms.length === 0) {\n        return undefined;\n    }\n    const validAttributePlaceholders = attributeDisplayForms\n        .map(({ displayForm }) => `{attribute_title\\\\(${displayForm.id}\\\\)}`)\n        .join(\"|\");\n    return { regex: new RegExp(validAttributePlaceholders), token: \"attribute\" };\n};\nconst IDENTIFIER_RULE = {\n    regex: /\\{workspace_id\\}|\\{project_id\\}|\\{insight_id\\}|\\{widget_id\\}|\\{dashboard_id\\}|\\{client_id\\}|\\{data_product_id\\}/,\n    token: \"identifier\",\n};\nconst INVALID_IDENTIFIER_RULE = { regex: /\\{[^}{]*\\}/, token: \"invalid-identifier\" };\nconst INVALID_DISPLAY_FORMS_RULE = {\n    regex: /\\{attribute_title\\(.*?\\)\\}/,\n    token: \"invalid-attribute\",\n};\nconst DEFAULT_RULES = [\n    INVALID_DISPLAY_FORMS_RULE,\n    IDENTIFIER_RULE,\n    INVALID_IDENTIFIER_RULE,\n];\nconst buildFormattingRules = (attributeDisplayForms) => {\n    const validDisplayFormsRule = buildValidDisplayFormsFormattingRule(attributeDisplayForms);\n    return {\n        start: validDisplayFormsRule ? [validDisplayFormsRule, ...DEFAULT_RULES] : DEFAULT_RULES,\n    };\n};\nconst UrlInputPanel = (props) => {\n    const { currentUrlValue, onChange, onCursor, documentationLink, attributeDisplayForms, intl } = props;\n    const isWhiteLabeled = useDashboardSelector(selectIsWhiteLabeled);\n    const syntaxHighlightingRules = useMemo(() => attributeDisplayForms && buildFormattingRules(attributeDisplayForms), [attributeDisplayForms]);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"label\", { className: \"gd-label\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.textAreaLabel\" })),\n        React.createElement(UrlInput, { onChange: onChange, onCursor: onCursor, currentUrlValue: currentUrlValue, syntaxHighlightingRules: syntaxHighlightingRules, intl: intl }),\n        !isWhiteLabeled && documentationLink ? React.createElement(HelpLink, { link: documentationLink }) : null));\n};\nconst initialCursorPosition = {\n    from: 0,\n    to: 0,\n};\nconst insertPlaceholderAtCursor = (text, placeholder, cursor) => `${text.substring(0, cursor.from)}${placeholder}${text.substring(cursor.to)}`;\nconst assertValidUrl = (url) => /^[A-Za-z0-9.\\-+]+:|^\\{attribute_title\\(/.test(url) ? url : `https://${url}`;\nconst getWarningTextForInvalidParameters = (parameters) => {\n    const invalidParameters = parameters.map((parameter) => `\"${parameter}\"`).join(\", \");\n    return (React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.editor.invalidAttributeDisplayForms\", values: { invalidParameters } }));\n};\nconst CustomUrlEditorDialog = (props) => {\n    const { urlDrillTarget, documentationLink, onSelect, onClose, attributeDisplayForms, loadingAttributeDisplayForms = false, invalidAttributeDisplayFormIdentifiers, enableClientIdParameter, enableDataProductIdParameter, enableWidgetIdParameter, } = props;\n    const intl = useIntl();\n    const previousValue = urlDrillTarget\n        ? (isDrillToCustomUrlConfig(urlDrillTarget) && urlDrillTarget.customUrl) || \"\"\n        : \"\";\n    const [currentValue, setCurrentValue] = useState(previousValue);\n    const apply = () => onSelect(assertValidUrl(currentValue));\n    const handleOnChange = (value) => setCurrentValue(value.trim());\n    const isApplyEnabled = currentValue && currentValue.localeCompare(previousValue) !== 0;\n    const [cursorPosition, setCursorPosition] = useState(initialCursorPosition);\n    const handleCursorPosition = (from, to) => setCursorPosition({ from, to });\n    const handleOnAdd = (parameterPlaceholder) => setCurrentValue(insertPlaceholderAtCursor(currentValue, parameterPlaceholder, cursorPosition));\n    const editorWarningText = invalidAttributeDisplayFormIdentifiers.length > 0\n        ? getWarningTextForInvalidParameters(invalidAttributeDisplayFormIdentifiers)\n        : undefined;\n    return (React.createElement(ConfirmDialogBase, { className: \"gd-drill-custom-url-editor s-gd-drill-custom-url-editor\", isPositive: true, headline: previousValue\n            ? intl.formatMessage({ id: \"configurationPanel.drillIntoUrl.editor.editUrlTitle\" })\n            : intl.formatMessage({ id: \"configurationPanel.drillIntoUrl.editor.addUrlTitle\" }), cancelButtonText: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.cancelButtonLabel\",\n        }), submitButtonText: intl.formatMessage({\n            id: \"configurationPanel.drillIntoUrl.editor.applyButtonLabel\",\n        }), isSubmitDisabled: !isApplyEnabled, submitOnEnterKey: false, onCancel: onClose, onSubmit: apply, warning: editorWarningText },\n        React.createElement(UrlInputPanel, { onChange: handleOnChange, onCursor: handleCursorPosition, documentationLink: documentationLink, currentUrlValue: currentValue, attributeDisplayForms: attributeDisplayForms, intl: intl }),\n        React.createElement(ParametersPanel, { attributeDisplayForms: attributeDisplayForms, loadingAttributeDisplayForms: loadingAttributeDisplayForms, enableClientIdParameter: enableClientIdParameter, enableDataProductIdParameter: enableDataProductIdParameter, enableWidgetIdParameter: enableWidgetIdParameter, onAdd: handleOnAdd, intl: intl })));\n};\nconst overlayController = OverlayController.getInstance(DASHBOARD_HEADER_OVERLAYS_Z_INDEX);\nexport const CustomUrlEditor = (props) => {\n    const isMobileDevice = useMediaQuery(\"mobileDevice\");\n    const SelectedOverlay = isMobileDevice ? FullScreenOverlay : Overlay;\n    return (React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n        React.createElement(SelectedOverlay, { onClose: props.onClose, isModal: true, closeOnOutsideClick: false, closeOnEscape: true, positionType: \"fixed\", className: \"gd-modal-overlay\" },\n            React.createElement(CustomUrlEditorDialog, Object.assign({}, props)))));\n};\n//# sourceMappingURL=CustomUrlEditor.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nexport const AttributeUrlSectionItem = ({ item, onClickHandler, isSelected, }) => {\n    const className = cx(\"gd-list-item gd-menu-item gd-drill-to-attribute-url-option s-drill-to-attribute-url-option gd-icon-hyperlink-warning\", {\n        \"is-selected\": isSelected,\n    });\n    const onClick = useCallback(() => {\n        if (!onClickHandler) {\n            return;\n        }\n        onClickHandler(item);\n    }, [item, onClickHandler]);\n    return (React.createElement(\"div\", { className: className, onClick: onClick },\n        React.createElement(\"span\", { className: \"gd-parameter-title\" }, item.attribute.title),\n        React.createElement(\"span\", { className: \"addon\" },\n            \"(\",\n            item.displayForm.title,\n            \")\")));\n};\n//# sourceMappingURL=AttributeUrlSectionItem.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { areObjRefsEqual, objRefToString } from \"@gooddata/sdk-model\";\nimport { AttributeUrlSectionItem } from \"./AttributeUrlSectionItem.js\";\nimport { DropdownSectionHeader } from \"./DropdownSectionHeader.js\";\nexport const AttributeUrlSection = (props) => {\n    const { attributeDisplayForms, loading = false, selected, onSelect } = props;\n    const onClickHandler = useCallback((target) => {\n        onSelect(target.attributeDisplayFormRef, target.displayForm.ref);\n    }, [onSelect]);\n    if (!loading && attributeDisplayForms.length === 0) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DropdownSectionHeader, { className: \"s-drill-to-attribute-url-section-title\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoUrl.attributeUrlSectionTitle\" })),\n        loading ? (React.createElement(\"div\", { className: \"gd-drill-to-url-section-loading s-drill-to-attribute-url-section-loading\" },\n            React.createElement(\"div\", { className: \"gd-spinner small\" }))) : (React.createElement(\"div\", { className: \"gd-drill-to-url-section-items\" }, attributeDisplayForms.map((item) => (React.createElement(AttributeUrlSectionItem, { key: objRefToString(item.displayForm.ref), item: item, isSelected: areObjRefsEqual(item.displayForm.ref, selected || undefined), onClickHandler: onClickHandler })))))));\n};\n//# sourceMappingURL=AttributeUrlSection.js.map","// (C) 2020-2023 GoodData Corporation\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport uniqWith from \"lodash/uniqWith.js\";\nimport { invariant } from \"ts-invariant\";\nimport { selectAllCatalogAttributesMap, selectAllCatalogDisplayFormsMap, selectSelectedWidgetRef, useDashboardSelector, } from \"../../../../../model/index.js\";\nfunction areAttributesWithDisplayFormsEqual(a, b) {\n    return areObjRefsEqual(a.displayForm.ref, b.displayForm.ref);\n}\nexport function useAttributesWithDisplayForms(attributes) {\n    const widgetRef = useDashboardSelector(selectSelectedWidgetRef);\n    invariant(widgetRef, \"must have selected widget\");\n    const allAttributes = useDashboardSelector(selectAllCatalogAttributesMap);\n    const allDisplayForms = useDashboardSelector(selectAllCatalogDisplayFormsMap);\n    const incomingDisplayFormRefs = attributes.map((a) => a.attributeHeader.ref);\n    const result = incomingDisplayFormRefs.reduce((result, ref) => {\n        const displayForm = allDisplayForms.get(ref);\n        if (!displayForm) {\n            return result;\n        }\n        const attribute = allAttributes.get(displayForm.attribute);\n        if (!attribute) {\n            return result;\n        }\n        const linkDisplayForms = attribute.attribute.displayForms.filter((df) => df.displayFormType === \"GDC.link\");\n        result.linkDisplayForms.push(...linkDisplayForms.map((df) => ({\n            attribute: attribute.attribute,\n            attributeDisplayFormRef: ref,\n            displayForm: df,\n        })));\n        result.allDisplayForms.push(...attribute.attribute.displayForms.map((df) => ({\n            attribute: attribute.attribute,\n            attributeDisplayFormRef: ref,\n            displayForm: df,\n        })));\n        return result;\n    }, {\n        linkDisplayForms: [],\n        allDisplayForms: [],\n    });\n    return {\n        allDisplayForms: uniqWith(result.allDisplayForms, areAttributesWithDisplayFormsEqual),\n        linkDisplayForms: uniqWith(result.linkDisplayForms, areAttributesWithDisplayFormsEqual),\n    };\n}\n//# sourceMappingURL=useAttributesWithDisplayForms.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button, Dropdown } from \"@gooddata/sdk-ui-kit\";\nimport { invariant } from \"ts-invariant\";\nimport { isDrillToAttributeUrlConfig, isDrillToCustomUrlConfig, } from \"../../../../drill/types.js\";\nimport { CustomUrlSection } from \"../../../../drill/DrillConfigPanel/DrillToUrl/CustomUrlSection.js\";\nimport { CustomUrlEditor } from \"../../../../drill/DrillConfigPanel/DrillToUrl/CustomUrlEditor.js\";\nimport { useClientWorkspaceIdentifiers } from \"@gooddata/sdk-ui\";\nimport { AttributeUrlSection } from \"../../../../drill/DrillConfigPanel/DrillToUrl/AttributeUrlSection.js\";\nimport { selectAllCatalogDisplayFormsMap, useDashboardSelector, selectBackendCapabilities, selectSettings, selectAllCatalogAttributesMap, } from \"../../../../../model/index.js\";\nimport { useInvalidAttributeDisplayFormIdentifiers } from \"./useInvalidAttributeDisplayFormIdentifier.js\";\nimport { useAttributesWithDisplayForms } from \"./useAttributesWithDisplayForms.js\";\nfunction useButtonValue(urlDrillTarget) {\n    const intl = useIntl();\n    const displayForms = useDashboardSelector(selectAllCatalogDisplayFormsMap);\n    const attributes = useDashboardSelector(selectAllCatalogAttributesMap);\n    if (isDrillToCustomUrlConfig(urlDrillTarget) && urlDrillTarget.customUrl) {\n        return urlDrillTarget.customUrl;\n    }\n    if (isDrillToAttributeUrlConfig(urlDrillTarget) && urlDrillTarget.drillToAttributeDisplayForm) {\n        const displayForm = displayForms.get(urlDrillTarget.drillToAttributeDisplayForm);\n        invariant(displayForm, \"inconsistent state in drill to URL button\");\n        const attribute = attributes.get(displayForm.attribute);\n        invariant(attribute, \"inconsistent state in drill to URL button\");\n        return `${attribute.attribute.title} (${displayForm.title})`;\n    }\n    return intl.formatMessage({ id: \"configurationPanel.drillIntoUrl.defaultButtonValue\" });\n}\nconst dropdownAlignPoints = [{ align: \"bl tl\" }, { align: \"tl bl\" }];\nexport const DrillTargetUrlItem = (props) => {\n    const { onSelect, urlDrillTarget, attributes } = props;\n    const capabilities = useDashboardSelector(selectBackendCapabilities);\n    const settings = useDashboardSelector(selectSettings);\n    const { allDisplayForms: targetAttributesFormsAll, linkDisplayForms: targetAttributesFormsWithLinks } = useAttributesWithDisplayForms(attributes);\n    const invalidAttributeDisplayFormIdentifiers = useInvalidAttributeDisplayFormIdentifiers(urlDrillTarget, attributes);\n    const [showModal, setShowModal] = useState(false);\n    const toggleModal = () => setShowModal(!showModal);\n    const onCustomUrlHandler = (customUrl) => {\n        setShowModal(false);\n        onSelect({ customUrl });\n    };\n    const onAttributeUrlHandler = (insightAttributeDisplayForm, drillToAttributeDisplayForm) => {\n        onSelect({\n            insightAttributeDisplayForm,\n            drillToAttributeDisplayForm,\n        });\n    };\n    const { client, dataProduct } = useClientWorkspaceIdentifiers();\n    const buttonValue = useButtonValue(urlDrillTarget);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Dropdown, { closeOnParentScroll: true, alignPoints: dropdownAlignPoints, renderButton: ({ toggleDropdown, isOpen }) => (React.createElement(Button, { onClick: toggleDropdown, className: \"gd-button gd-button-primary button-dropdown dropdown-button gd-button-small s-drill-to-url-button\", iconRight: isOpen ? \"gd-icon-navigateup\" : \"gd-icon-navigatedown\", value: buttonValue })), renderBody: ({ closeDropdown }) => (React.createElement(\"div\", { className: \"gd-menu-wrapper gd-drill-to-url-body gd-drill-to-url-list s-gd-drill-to-url-body\" },\n                capabilities.supportsHyperlinkAttributeLabels ? (React.createElement(AttributeUrlSection, { attributeDisplayForms: targetAttributesFormsWithLinks, onSelect: (insightAttributeDisplayForm, drillToAttributeDisplayForm) => {\n                        onAttributeUrlHandler(insightAttributeDisplayForm, drillToAttributeDisplayForm);\n                        closeDropdown();\n                    }, selected: isDrillToAttributeUrlConfig(urlDrillTarget) &&\n                        urlDrillTarget.drillToAttributeDisplayForm })) : null,\n                React.createElement(CustomUrlSection, Object.assign({}, props, { urlDrillTarget: urlDrillTarget, toggleModal: toggleModal, closeDropdown: closeDropdown })),\n                showModal ? (React.createElement(CustomUrlEditor, { urlDrillTarget: urlDrillTarget, attributeDisplayForms: targetAttributesFormsAll, invalidAttributeDisplayFormIdentifiers: invalidAttributeDisplayFormIdentifiers, documentationLink: String(settings.drillIntoUrlDocumentationLink || \"\"), enableClientIdParameter: !!client, enableDataProductIdParameter: !!dataProduct, enableWidgetIdParameter: !!capabilities.supportsWidgetEntity, onSelect: (customUrl) => {\n                        onCustomUrlHandler(customUrl);\n                        closeDropdown();\n                    }, onClose: toggleModal })) : null)) })));\n};\n//# sourceMappingURL=DrillTargetUrlItem.js.map","// (C) 2020-2022 GoodData Corporation\nimport { areObjRefsEqual, idRef } from \"@gooddata/sdk-model\";\nimport { isDrillToCustomUrlConfig } from \"../../../../drill/types.js\";\nimport { useDashboardSelector, selectAllCatalogDisplayFormsMap } from \"../../../../../model/index.js\";\nimport { useMemo } from \"react\";\nimport { getAttributeIdentifiersPlaceholdersFromUrl } from \"../../../../../_staging/drills/drillingUtils.js\";\nexport function useInvalidAttributeDisplayFormIdentifiers(urlDrillTarget, attributes) {\n    const displayForms = useDashboardSelector(selectAllCatalogDisplayFormsMap);\n    return useMemo(() => {\n        if (isDrillToCustomUrlConfig(urlDrillTarget)) {\n            const parameters = getAttributeIdentifiersPlaceholdersFromUrl(urlDrillTarget.customUrl);\n            return parameters\n                .filter(({ identifier }) => {\n                // parameter is invalid if either it points to display form that no longer exists\n                const relevantDf = displayForms.get(idRef(identifier, \"displayForm\"));\n                if (!relevantDf) {\n                    return false;\n                }\n                // or if it points to an attribute that is no longer a valid drill target\n                return !attributes.some((attribute) => areObjRefsEqual(relevantDf.attribute, attribute.attributeHeader.formOf));\n            })\n                .map(({ identifier }) => identifier);\n        }\n        return [];\n    }, [displayForms, urlDrillTarget, attributes]);\n}\n//# sourceMappingURL=useInvalidAttributeDisplayFormIdentifier.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { BubbleHoverTrigger, Bubble } from \"@gooddata/sdk-ui-kit\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nconst tooltipAlignPoints = [\n    { align: \"cl cr\", offset: { x: 0, y: -2 } },\n    { align: \"cr cl\", offset: { x: 0, y: 10 } },\n];\nexport const getTooltip = (intl, accessibilityLimitation) => {\n    switch (accessibilityLimitation) {\n        case \"forbidden\":\n            return intl.formatMessage({ id: \"configurationPanel.drillConfig.forbiddenDashboard.tooltip\" });\n        case \"notShared\":\n            return intl.formatMessage({ id: \"configurationPanel.drillConfig.notSharedDashboard.tooltip\" });\n        default:\n            return undefined;\n    }\n};\nconst DropdownItem = (props) => {\n    const { onClick, accessibilityLimitation, title, isSelected = false } = props;\n    const icon = accessibilityLimitation === undefined ? undefined : \"gd-icon-circle-exclamation\";\n    const generatedTestClass = `s-dashboard-item s-${stringUtils.simplifyText(title)}`;\n    const classNames = cx(\"gd-list-item gd-drill-dashboard-item\", generatedTestClass, {\n        \"is-selected\": isSelected,\n    });\n    return (React.createElement(\"div\", { className: classNames, onClick: onClick, title: title },\n        icon ? React.createElement(\"span\", { className: cx(\"gd-list-icon\", icon) }) : null,\n        React.createElement(\"span\", null, title)));\n};\nexport const DashboardListItem = (props) => {\n    const { accessibilityLimitation } = props;\n    const intl = useIntl();\n    const tooltip = getTooltip(intl, accessibilityLimitation);\n    if (!tooltip) {\n        return React.createElement(DropdownItem, Object.assign({}, props));\n    }\n    return (React.createElement(BubbleHoverTrigger, { tagName: \"div\", showDelay: 200, hideDelay: 0 },\n        React.createElement(DropdownItem, Object.assign({}, props)),\n        React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: tooltipAlignPoints }, tooltip)));\n};\n//# sourceMappingURL=DashboardListItem.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { Bubble, BubbleHoverTrigger, DropdownButton } from \"@gooddata/sdk-ui-kit\";\nimport { getTooltip } from \"./DashboardListItem.js\";\nimport { useIntl } from \"react-intl\";\nconst tooltipAlignPoints = [\n    { align: \"cl cr\", offset: { x: 0, y: -2 } },\n    { align: \"cr cl\", offset: { x: 0, y: 10 } },\n];\nconst Button = (props) => {\n    const { accessibilityLimitation, toggleDropdown, isOpen, label } = props;\n    const icon = accessibilityLimitation === undefined ? undefined : \"gd-icon-circle-exclamation\";\n    return (React.createElement(DropdownButton, { className: \"dashboard-dropdown-button s-dashboards-dropdown-button\", value: label, isOpen: isOpen, onClick: toggleDropdown, iconLeft: icon }));\n};\nexport const DashboardListButton = (props) => {\n    const { accessibilityLimitation } = props;\n    const intl = useIntl();\n    const tooltip = getTooltip(intl, accessibilityLimitation);\n    if (!tooltip) {\n        return React.createElement(Button, Object.assign({}, props));\n    }\n    return (React.createElement(BubbleHoverTrigger, { tagName: \"div\", showDelay: 200, hideDelay: 0 },\n        React.createElement(Button, Object.assign({}, props)),\n        React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: tooltipAlignPoints, arrowOffsets: { \"cr cl\": [15, 0] } }, tooltip)));\n};\n//# sourceMappingURL=DashboardListButton.js.map","// (C) 2021 GoodData Corporation\nimport { areObjRefsEqual, idRef } from \"@gooddata/sdk-model\";\n/**\n * Tests whether a dashboard identifier OR dashboard ref match another dashboard's ref.\n *\n * You are reading this and probably wondering what the hell.. why is this crap here?! The situation is as follows:\n *\n * 1.  Each dashboard has 'ref', the type of ref is strictly controlled by the backend implementation. Some use\n *     URI's to reference dashboards, some use Identifiers. However as long as the backend creates refs consistently\n *     and the client treats them opaquely, then types match naturally and everything works.\n *\n * 2.  Enter drill to dashboard. For obscure reasons of the bear metadata, bear backend stored references\n *     as identifiers where everything else is URI. AND, this implementation detail leaks through the sdk-backend-bear.\n *\n * 3.  Result: When working on bear backend, simple areObjRefsEqual of refs are not enough because code could sometimes\n *     compare different types of refs.\n *\n * The code that you see here is a band-aid of that leaky abstraction. The right way would be to fix the sdk-backend-bear\n * so that the DrillToDashboard returns target ref of the correct, consistent type.\n */\nexport function dashboardMatch(identifier, ref, otherRef) {\n    return areObjRefsEqual(ref, otherRef) || areObjRefsEqual(idRef(identifier), otherRef);\n}\n//# sourceMappingURL=dashboardPredicate.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Dropdown, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport sortBy from \"lodash/sortBy.js\";\nimport { DashboardListItem } from \"./DashboardListItem.js\";\nimport { DashboardListButton } from \"./DashboardListButton.js\";\nimport { dashboardMatch } from \"../drill/utils/dashboardPredicate.js\";\nconst alignPoints = [\n    {\n        align: \"bl tl\",\n    },\n    {\n        align: \"tl bl\",\n    },\n];\nconst ITEM_HEIGHT = 25;\nconst DROPDOWN_BODY_WIDTH = 240;\nconst DROPDOWN_BODY_HEIGHT = 319;\nexport const DashboardList = ({ selected, dashboards, onSelect }) => {\n    const selectedDashboard = useMemo(() => {\n        return selected && dashboards.find((d) => dashboardMatch(d.identifier, d.ref, selected));\n    }, [selected, dashboards]);\n    const intl = useIntl();\n    const dropdownLabel = selectedDashboard\n        ? selectedDashboard.title\n        : intl.formatMessage({\n            id: \"configurationPanel.drillConfig.selectDashboard\",\n        });\n    const [searchString, setSearchString] = useState(\"\");\n    const items = useMemo(() => {\n        let items = dashboards.filter(({ title }) => title.toLowerCase().includes(searchString.toLowerCase()));\n        if (selectedDashboard) {\n            items = items.map((item) => item.identifier === selectedDashboard.identifier ? Object.assign(Object.assign({}, item), { selected: true }) : item);\n        }\n        return sortBy(items, (dashboard) => dashboard.title.toLowerCase());\n    }, [dashboards, searchString, selectedDashboard]);\n    const searchPlaceholder = intl.formatMessage({\n        id: \"configurationPanel.drillConfig.drillIntoDashboard.searchPlaceholder\",\n    });\n    return (React.createElement(Dropdown, { className: \"s-dashboards-dropdown\", closeOnParentScroll: true, closeOnMouseDrag: false, closeOnOutsideClick: true, alignPoints: alignPoints, renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"dashboards-dropdown-body s-dashboards-dropdown-body\", width: DROPDOWN_BODY_WIDTH, height: DROPDOWN_BODY_HEIGHT, searchString: searchString, searchPlaceholder: searchPlaceholder, itemHeight: ITEM_HEIGHT, showSearch: true, items: items, scrollToItem: selectedDashboard, onSearch: setSearchString, renderItem: ({ item }) => {\n                const isSelected = selectedDashboard && item.selected;\n                return (React.createElement(DashboardListItem, { isSelected: isSelected, title: item.title, onClick: () => {\n                        onSelect(item);\n                        closeDropdown();\n                    }, accessibilityLimitation: item.accessibilityLimitation }));\n            } })), onOpenStateChanged: () => {\n            setSearchString(\"\");\n        }, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DashboardListButton, { accessibilityLimitation: selectedDashboard === null || selectedDashboard === void 0 ? void 0 : selectedDashboard.accessibilityLimitation, label: dropdownLabel, isOpen: isOpen, toggleDropdown: toggleDropdown })) }));\n};\n//# sourceMappingURL=DashboardList.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { selectAccessibleDashboards, selectInaccessibleDashboards, useDashboardSelector, } from \"../../../../../model/index.js\";\nimport { DashboardList } from \"../../../../dashboardList/index.js\";\nconst buildDashboardItems = (dashboards, forbiddenDashboards, intl, selected) => {\n    const isAvailableDashboardSelected = dashboards.some((dashboard) => areObjRefsEqual(dashboard.ref, selected));\n    if (!selected || isAvailableDashboardSelected) {\n        return dashboards;\n    }\n    const selectedForbiddenItem = forbiddenDashboards.find(({ ref }) => areObjRefsEqual(ref, selected));\n    if (selectedForbiddenItem === undefined) {\n        return dashboards;\n    }\n    const { title, accessibilityLimitation } = selectedForbiddenItem;\n    const forbiddenItem = Object.assign(Object.assign({}, selectedForbiddenItem), { title: accessibilityLimitation === \"forbidden\"\n            ? intl.formatMessage({ id: \"configurationPanel.drillConfig.forbiddenDashboard\" })\n            : title });\n    return [forbiddenItem, ...dashboards];\n};\nexport const DrillTargetDashboardItem = (props) => {\n    const { onSelect, selected } = props;\n    const intl = useIntl();\n    const dashboards = useDashboardSelector(selectAccessibleDashboards);\n    const inaccessibleDashboards = useDashboardSelector(selectInaccessibleDashboards);\n    const dashboardItems = useMemo(() => {\n        return buildDashboardItems(dashboards, inaccessibleDashboards, intl, selected);\n    }, [dashboards, inaccessibleDashboards, intl, selected]);\n    return React.createElement(DashboardList, { onSelect: onSelect, dashboards: dashboardItems, selected: selected });\n};\n//# sourceMappingURL=DrillTargetDashboardItem.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { idRef, } from \"@gooddata/sdk-model\";\nimport { DRILL_TARGET_TYPE, isDrillToDashboardConfig, isDrillToUrlConfig, isDrillToCustomUrlConfig, isDrillToAttributeUrlConfig, } from \"../../../../drill/types.js\";\nimport { DrillTargetInsightItem } from \"./DrillTargetInsightItem.js\";\nimport { DrillTargetUrlItem } from \"./DrillTargetUrlItem.js\";\nimport { DrillTargetDashboardItem } from \"./DrillTargetDashboardItem.js\";\nexport const DrillTargets = (props) => {\n    const { item } = props;\n    const onInsightTargetSelect = (targetItem) => {\n        const drillConfigItem = {\n            transition: \"pop-up\",\n            origin: getOrigin(item),\n            type: \"drillToInsight\",\n            target: targetItem.insight.ref,\n        };\n        props.onSetup(drillConfigItem, Object.assign(Object.assign({}, item), { insightRef: targetItem.insight.ref }));\n    };\n    const onDashboardTargetSelect = (targetItem) => {\n        const dashboard = idRef(targetItem.identifier, \"analyticalDashboard\");\n        const drillConfigItem = {\n            transition: \"in-place\",\n            origin: getOrigin(item),\n            type: \"drillToDashboard\",\n            target: dashboard,\n        };\n        props.onSetup(drillConfigItem, Object.assign(Object.assign({}, item), { dashboard }));\n    };\n    const onCustomUrlTargetSelect = (urlDrillTarget) => {\n        if (isDrillToCustomUrlConfig(urlDrillTarget)) {\n            const drillConfigItem = {\n                transition: \"new-window\",\n                origin: getOrigin(item),\n                type: \"drillToCustomUrl\",\n                target: {\n                    url: urlDrillTarget.customUrl,\n                },\n            };\n            props.onSetup(drillConfigItem, Object.assign(Object.assign({}, item), { urlDrillTarget }));\n        }\n        if (isDrillToAttributeUrlConfig(urlDrillTarget)) {\n            const drillConfigItem = {\n                transition: \"new-window\",\n                origin: getOrigin(item),\n                type: \"drillToAttributeUrl\",\n                target: {\n                    hyperlinkDisplayForm: urlDrillTarget.drillToAttributeDisplayForm,\n                    displayForm: urlDrillTarget.insightAttributeDisplayForm,\n                },\n            };\n            props.onSetup(drillConfigItem, Object.assign(Object.assign({}, item), { urlDrillTarget }));\n        }\n    };\n    switch (props.item.drillTargetType) {\n        case DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD:\n            return (React.createElement(DrillTargetDashboardItem, { selected: isDrillToDashboardConfig(item) ? item.dashboard : undefined, onSelect: onDashboardTargetSelect }));\n        case DRILL_TARGET_TYPE.DRILL_TO_INSIGHT:\n            return React.createElement(DrillTargetInsightItem, { insight: item, onSelect: onInsightTargetSelect });\n        case DRILL_TARGET_TYPE.DRILL_TO_URL:\n            return (React.createElement(DrillTargetUrlItem, { urlDrillTarget: isDrillToUrlConfig(item) ? item.urlDrillTarget : undefined, attributes: item.attributes, onSelect: onCustomUrlTargetSelect }));\n        case undefined:\n            return null;\n        default:\n            unknownDrillTargetTypeReceived(props.item.drillTargetType);\n    }\n    function unknownDrillTargetTypeReceived(targetType) {\n        throw new Error(`unknown drill target type: ${targetType}`);\n    }\n    return null;\n};\nfunction getOrigin(item) {\n    return item.type === \"attribute\"\n        ? {\n            type: \"drillFromAttribute\",\n            attribute: { localIdentifier: item.localIdentifier },\n        }\n        : {\n            type: \"drillFromMeasure\",\n            measure: { localIdentifier: item.localIdentifier },\n        };\n}\n//# sourceMappingURL=DrillTargets.js.map","// (C) 2019-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { DRILL_TARGET_TYPE } from \"../../../drill/types.js\";\nimport { DrillOriginItem } from \"./DrillOriginItem.js\";\nimport { DrillTargetType } from \"./DrillTargetType.js\";\nimport { DrillTargets } from \"./DrillTargets/DrillTargets.js\";\nimport { areObjRefsEqual, isAttributeDescriptor, } from \"@gooddata/sdk-model\";\nimport { selectDrillTargetsByWidgetRef, selectSelectedWidgetRef, useDashboardSelector, selectCatalogDateDatasets, } from \"../../../../model/index.js\";\nimport { invariant } from \"ts-invariant\";\nconst DrillConfigItem = ({ item, enabledDrillTargetTypeItems, onIncompleteChange, onSetup, onDelete, }) => {\n    const onDeleteClick = () => {\n        onDelete(item);\n    };\n    const onDrillTargetTypeSelect = (target) => {\n        onIncompleteChange(Object.assign(Object.assign({}, item), { drillTargetType: target }));\n    };\n    const classNames = cx(\"s-drill-config-item\", `s-drill-config-item-${stringUtils.simplifyText(item.title)}`, {\n        \"s-drill-config-item-incomplete\": !item.complete,\n    });\n    const targetClassNames = cx(\"s-drill-config-target\", \"drill-config-target\", {\n        \"drill-config-target-with-warning\": !!item.warning,\n    });\n    const widgetRef = useDashboardSelector(selectSelectedWidgetRef);\n    invariant(widgetRef, \"mush have widget selected\");\n    const { isFromDateAttribute, showDateFilterTransferWarning } = useDateAttributeOptions(item, widgetRef);\n    return (React.createElement(\"div\", { className: classNames },\n        React.createElement(\"div\", { className: \"drill-config-item-intro\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.clickHintItem\", values: {\n                    addon: (chunks) => React.createElement(\"span\", { className: \"addon\" }, chunks),\n                } })),\n        React.createElement(DrillOriginItem, { type: item.type, title: item.title, localIdentifier: item.localIdentifier, onDelete: onDeleteClick, isDateAttribute: isFromDateAttribute }),\n        React.createElement(\"div\", { className: targetClassNames },\n            React.createElement(\"div\", { className: \"drill-config-target-box\" },\n                React.createElement(\"div\", { className: \"drill-config-item-target\" },\n                    React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.selectTarget\" })),\n                React.createElement(DrillTargetType, { onSelect: onDrillTargetTypeSelect, selection: item.drillTargetType, enabledDrillTargetTypeItems: enabledDrillTargetTypeItems }),\n                React.createElement(DrillTargets, { item: item, onSetup: onSetup }),\n                !!item.warning && (React.createElement(\"div\", { className: \"drill-config-target-warning s-drill-config-target-warning\" },\n                    React.createElement(\"span\", { className: \"gd-icon-warning\" }),\n                    React.createElement(\"span\", null,\n                        React.createElement(FormattedMessage, { id: item.warning })))),\n                !!showDateFilterTransferWarning && (React.createElement(\"div\", { className: \"drill-config-date-filter-warning s-drill-config-date-filter-warning\" },\n                    React.createElement(\"span\", null,\n                        React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.drillIntoDashboard.dateFilterWarning\" }))))))));\n};\nfunction useDateAttributeOptions(item, widgetRef) {\n    var _a;\n    const dateAttributes = useDashboardSelector(selectCatalogDateDatasets);\n    const drillTargets = useDashboardSelector(selectDrillTargetsByWidgetRef(widgetRef));\n    return useMemo(() => {\n        var _a, _b;\n        const attributeTarget = (_b = (_a = drillTargets === null || drillTargets === void 0 ? void 0 : drillTargets.availableDrillTargets) === null || _a === void 0 ? void 0 : _a.attributes) === null || _b === void 0 ? void 0 : _b.find((attribute) => attribute.attribute.attributeHeader.localIdentifier === item.localIdentifier);\n        const isFromDateAttribute = !!(attributeTarget &&\n            isAttributeDescriptor(attributeTarget.attribute) &&\n            dateAttributes.some((attribute) => attribute.dateAttributes.some((dateAttribute) => areObjRefsEqual(dateAttribute.attribute.ref, attributeTarget.attribute.attributeHeader.formOf.ref))));\n        const isDateAttributeInIntersection = item.type === \"measure\" &&\n            item.attributes.some((attr) => dateAttributes.some((x) => x.dateAttributes.some((d) => areObjRefsEqual(d.attribute.ref, attr.attributeHeader.ref))));\n        const showDateFilterTransferWarning = item.drillTargetType === DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD &&\n            (isFromDateAttribute || isDateAttributeInIntersection);\n        return {\n            isFromDateAttribute,\n            isDateAttributeInIntersection,\n            showDateFilterTransferWarning,\n        };\n    }, [\n        (_a = drillTargets === null || drillTargets === void 0 ? void 0 : drillTargets.availableDrillTargets) === null || _a === void 0 ? void 0 : _a.attributes,\n        dateAttributes,\n        item.type,\n        item.attributes,\n        item.drillTargetType,\n        item.localIdentifier,\n    ]);\n}\nexport default DrillConfigItem;\n//# sourceMappingURL=InsightDrillConfigItem.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport InsightDrillConfigItem from \"./InsightDrillConfigItem.js\";\nimport { useDrillTargetTypeItems } from \"./useDrillTargetTypeItems.js\";\nimport { ScrollableItem } from \"@gooddata/sdk-ui-kit\";\nexport const InsightDrillConfigList = (props) => {\n    const { drillConfigItems = [], onDelete, onSetup, onIncompleteChange } = props;\n    const enabledDrillTargetTypeItems = useDrillTargetTypeItems();\n    const shouldScrollToContainer = (item, isLast) => {\n        return !item.complete && isLast;\n    };\n    const isLast = (index) => {\n        return index === drillConfigItems.length - 1;\n    };\n    return (React.createElement(\"div\", { className: \"s-drill-config-list\" }, drillConfigItems.map((item, index) => {\n        const shouldScroll = shouldScrollToContainer(item, isLast(index));\n        return (React.createElement(ScrollableItem, { scrollIntoView: shouldScroll, key: item.localIdentifier + item.drillTargetType },\n            React.createElement(InsightDrillConfigItem, { item: item, key: item.localIdentifier + item.drillTargetType, onDelete: onDelete, onSetup: onSetup, onIncompleteChange: onIncompleteChange, enabledDrillTargetTypeItems: enabledDrillTargetTypeItems })));\n    })));\n};\n//# sourceMappingURL=InsightDrillConfigList.js.map","// (C) 2022 GoodData Corporation\nimport { useIntl } from \"react-intl\";\nimport { DRILL_TARGET_TYPE } from \"../../../drill/types.js\";\nimport { selectEnableKPIDashboardDrillToDashboard, selectEnableKPIDashboardDrillToInsight, selectEnableKPIDashboardDrillToURL, useDashboardSelector, } from \"../../../../model/index.js\";\nexport const useDrillTargetTypeItems = () => {\n    const dropdownItems = [];\n    const intl = useIntl();\n    const enableKPIDashboardDrillToDashboard = useDashboardSelector(selectEnableKPIDashboardDrillToDashboard);\n    const enableKPIDashboardDrillToInsight = useDashboardSelector(selectEnableKPIDashboardDrillToInsight);\n    const enableKPIDashboardDrillToURL = useDashboardSelector(selectEnableKPIDashboardDrillToURL);\n    if (enableKPIDashboardDrillToDashboard) {\n        dropdownItems.push({\n            id: DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD,\n            title: intl.formatMessage({ id: \"configurationPanel.drillConfig.drillIntoDashboard\" }),\n        });\n    }\n    if (enableKPIDashboardDrillToInsight) {\n        dropdownItems.push({\n            id: DRILL_TARGET_TYPE.DRILL_TO_INSIGHT,\n            title: intl.formatMessage({ id: \"configurationPanel.drillConfig.drillIntoInsight\" }),\n        });\n    }\n    if (enableKPIDashboardDrillToURL) {\n        dropdownItems.push({\n            id: DRILL_TARGET_TYPE.DRILL_TO_URL,\n            title: intl.formatMessage({ id: \"configurationPanel.drillConfig.drillIntoUrl\" }),\n        });\n    }\n    return dropdownItems;\n};\n//# sourceMappingURL=useDrillTargetTypeItems.js.map","import React from \"react\";\nconst DrillMeasureSelectorItem = (props) => {\n    const onClick = () => {\n        props.onClick(props.item);\n        props.onCloseDropdown();\n    };\n    const name = props.item.measure.measureHeaderItem.name;\n    return (React.createElement(\"a\", { onClick: onClick, className: `gd-drill-measure-selector-list-item s-drill-measure-selector-item`, title: name }, name));\n};\nexport default DrillMeasureSelectorItem;\n//# sourceMappingURL=DrillMeasureSelectorItem.js.map","import React from \"react\";\nimport DrillMeasureSelectorItem from \"./DrillMeasureSelectorItem.js\";\nconst DrillMeasureSelectorList = (props) => {\n    return (React.createElement(\"div\", { className: \"gd-drill-measure-selector-list\" }, props.supportedItems.map((item) => (React.createElement(DrillMeasureSelectorItem, { key: item.measure.measureHeaderItem.localIdentifier, item: item, onClick: props.onSelect, onCloseDropdown: props.onCloseDropdown })))));\n};\nexport default DrillMeasureSelectorList;\n//# sourceMappingURL=DrillMeasureSelectorList.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { useDashboardSelector, selectCatalogDateDatasets } from \"../../../../../model/index.js\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nexport const DrillAttributeSelectorItem = (props) => {\n    const { item } = props;\n    const onClick = () => {\n        props.onClick(item);\n        props.onCloseDropdown();\n    };\n    const name = item.attribute.attributeHeader.formOf.name;\n    const dateAttributes = useDashboardSelector(selectCatalogDateDatasets);\n    const isFromDateAttribute = dateAttributes.some((attribute) => attribute.dateAttributes.some((dateAttribute) => areObjRefsEqual(dateAttribute.attribute.ref, item.attribute.attributeHeader.formOf.ref)));\n    return (React.createElement(\"a\", { onClick: onClick, className: cx(\"s-drill-attribute-selector-item\", {\n            \"gd-drill-attribute-selector-list-item\": !isFromDateAttribute,\n            \"gd-drill-attribute-date-selector-list-item\": isFromDateAttribute,\n        }), title: name }, name));\n};\n//# sourceMappingURL=DrillAttributeSelectorItem.js.map","import React from \"react\";\nimport { DrillAttributeSelectorItem } from \"./DrillAttributeSelectorItem.js\";\nconst DrillAttributeSelectorList = (props) => {\n    return (React.createElement(\"div\", { className: \"gd-drill-attribute-selector-list\" }, props.supportedItems.map((item) => (React.createElement(DrillAttributeSelectorItem, { key: item.attribute.attributeHeader.localIdentifier, item: item, onClick: props.onSelect, onCloseDropdown: props.onCloseDropdown })))));\n};\nexport default DrillAttributeSelectorList;\n//# sourceMappingURL=DrillAttributeSelectorList.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport DrillMeasureSelectorList from \"./DrillMeasureSelectorList.js\";\nimport DrillAttributeSelectorList from \"./DrillAttributeSelectorList.js\";\nconst DrillOriginSelectorBody = (props) => {\n    const { onCloseDropdown, onSelect, supportedItems } = props;\n    const stopPropagation = (e) => {\n        e.stopPropagation();\n    };\n    return (React.createElement(\"div\", { className: \"gd-drill-item-selector-dropdown s-drill-item-selector-dropdown\", onScroll: stopPropagation },\n        React.createElement(\"div\", { className: \"gd-drill-item-selector-header\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.clickHint\" }),\n            React.createElement(\"button\", { className: \"gd-button-link gd-button-icon-only gd-icon-cross\", onClick: onCloseDropdown })),\n        React.createElement(\"div\", { className: \"gd-drill-item-selector-body\" },\n            React.createElement(DrillMeasureSelectorBody, { supportedItems: supportedItems, onSelect: onSelect, onCloseDropdown: onCloseDropdown }),\n            React.createElement(DrillAttributeSelectorBody, { supportedItems: supportedItems, onSelect: onSelect, onCloseDropdown: onCloseDropdown }))));\n};\nconst DrillMeasureSelectorBody = (props) => {\n    var _a;\n    const { supportedItems, onSelect, onCloseDropdown } = props;\n    return ((_a = supportedItems.measures) === null || _a === void 0 ? void 0 : _a.length) ? (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"gd-drill-origin-selector-separator\" },\n            React.createElement(\"span\", null,\n                React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.measureValue\" }))),\n        React.createElement(DrillMeasureSelectorList, { supportedItems: supportedItems.measures, onSelect: onSelect, onCloseDropdown: onCloseDropdown }))) : null;\n};\nconst DrillAttributeSelectorBody = (props) => {\n    var _a;\n    const { supportedItems, onSelect, onCloseDropdown } = props;\n    return ((_a = supportedItems.attributes) === null || _a === void 0 ? void 0 : _a.length) ? (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"gd-drill-origin-selector-separator\" },\n            React.createElement(\"span\", null,\n                React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.attributeValue\" }))),\n        React.createElement(DrillAttributeSelectorList, { supportedItems: supportedItems.attributes, onSelect: onSelect, onCloseDropdown: onCloseDropdown }))) : null;\n};\nexport default DrillOriginSelectorBody;\n//# sourceMappingURL=DrillOriginSelectorBody.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Dropdown, DropdownButton } from \"@gooddata/sdk-ui-kit\";\nimport DrillOriginSelectorBody from \"./DrillOriginSelectorBody.js\";\nconst DROPDOWN_ALIGN_POINTS = [\n    {\n        align: \"bl tl\",\n        offset: {\n            x: 0,\n            y: 4,\n        },\n    },\n    {\n        align: \"tl bl\",\n        offset: {\n            x: 0,\n            y: -4,\n        },\n    },\n];\nexport const DrillOriginSelector = (props) => {\n    var _a, _b;\n    const { items } = props;\n    const onSelect = (selected) => {\n        props.onSelect(selected);\n    };\n    const intl = useIntl();\n    if (!((_a = items.measures) === null || _a === void 0 ? void 0 : _a.length) && !((_b = items.attributes) === null || _b === void 0 ? void 0 : _b.length)) {\n        return null;\n    }\n    return (React.createElement(Dropdown, { className: \"gd-drill-origin-selector\", closeOnParentScroll: true, closeOnMouseDrag: false, closeOnOutsideClick: true, alignPoints: DROPDOWN_ALIGN_POINTS, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DropdownButton, { value: intl.formatMessage({ id: \"configurationPanel.drillConfig.addInteraction\" }), iconLeft: \"gd-icon-add\", className: \"s-drill-show-measures customizable\", isOpen: isOpen, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DrillOriginSelectorBody, { supportedItems: items, onSelect: onSelect, onCloseDropdown: closeDropdown })) }));\n};\n//# sourceMappingURL=DrillOriginSelector.js.map","import { Bubble, BubbleHoverTrigger, Checkbox, Message } from \"@gooddata/sdk-ui-kit\";\nimport React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { changeInsightWidgetVisProperties, selectInsightByRef, useDashboardDispatch, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { getInsightVisualizationMeta } from \"@gooddata/sdk-ui-ext\";\nexport function ZoomInsightConfiguration(props) {\n    var _a, _b;\n    const { widget } = props;\n    const intl = useIntl();\n    // useState helps the status of checkbox change faster than using the zoomable value\n    const [zoomInsightState, setZoomInsightStatus] = useState((_b = (_a = widget.properties) === null || _a === void 0 ? void 0 : _a.controls) === null || _b === void 0 ? void 0 : _b.zoomInsight);\n    const dispatch = useDashboardDispatch();\n    const insight = useDashboardSelector(selectInsightByRef(widget.insight));\n    if (!insight) {\n        return null;\n    }\n    const visualizationMeta = getInsightVisualizationMeta(insight);\n    if (!visualizationMeta.supportsZooming) {\n        return null;\n    }\n    const handleZoomableChange = (isChecked) => {\n        var _a;\n        setZoomInsightStatus(isChecked);\n        dispatch(changeInsightWidgetVisProperties(widget.ref, Object.assign(Object.assign({}, widget.properties), { controls: Object.assign(Object.assign({}, (_a = widget.properties) === null || _a === void 0 ? void 0 : _a.controls), { zoomInsight: isChecked }) })));\n    };\n    return (React.createElement(\"div\", { className: \"s-zoom-and-pan zoom-and-pan-section configuration-category\" },\n        React.createElement(Checkbox, { onChange: handleZoomableChange, value: zoomInsightState, text: intl.formatMessage({ id: \"configurationPanel.zoomInsight\" }) }),\n        React.createElement(BubbleHoverTrigger, { tagName: \"abbr\", hideDelay: 1000, showDelay: 100 },\n            React.createElement(\"i\", { className: \"gd-button-link gd-icon-circle-question s-circle_question gd-button\" }),\n            React.createElement(Bubble, { alignTo: \".gd-icon-circle-question\", alignPoints: [{ align: \"cr cl\" }] }, intl.formatMessage({ id: \"configurationPanel.zoomInsight.help\" }))),\n        zoomInsightState ? (React.createElement(Message, { type: \"progress\" }, intl.formatMessage({ id: \"configurationPanel.zoomInsight.notice\" }))) : null));\n}\n//# sourceMappingURL=ZoomInsightConfiguration.js.map","// (C) 2019-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { useInsightDrillConfigPanel } from \"./useInsightDrillConfigPanel.js\";\nimport { InsightDrillConfigList } from \"../InsightDrillConfigList.js\";\nimport { DrillOriginSelector } from \"../DrillOriginSelector/DrillOriginSelector.js\";\nimport { ZoomInsightConfiguration } from \"../ZoomInsightConfiguration.js\";\n/**\n * @internal\n */\nexport const InsightDrillConfigPanel = ({ widgetRef }) => {\n    const { widget, enableKDZooming, drillConfigItems, originSelectorItems, isOriginSelectorVisible, isLoaded, onChangeItem, onOriginSelect, onSetupItem, onDeleteItem, } = useInsightDrillConfigPanel({ widgetRef });\n    return (React.createElement(React.Fragment, null,\n        !!enableKDZooming && React.createElement(ZoomInsightConfiguration, { widget: widget }),\n        React.createElement(\"div\", { className: \"configuration-category s-drill-config-panel\" },\n            React.createElement(Typography, { tagName: \"h3\" },\n                React.createElement(\"span\", null,\n                    React.createElement(FormattedMessage, { id: \"configurationPanel.drillConfig.interactions\" }))),\n            React.createElement(InsightDrillConfigList, { drillConfigItems: drillConfigItems, onDelete: onDeleteItem, onSetup: onSetupItem, onIncompleteChange: onChangeItem }),\n            isOriginSelectorVisible ? (React.createElement(DrillOriginSelector, { items: originSelectorItems, onSelect: onOriginSelect })) : !isLoaded ? (React.createElement(\"div\", { className: \"gd-spinner small\" })) : null)));\n};\n//# sourceMappingURL=InsightDrillConfigPanel.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { isInsightWidget, objRefToString } from \"@gooddata/sdk-model\";\nimport { ScrollablePanel, OverlayController, OverlayControllerProvider } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nimport cx from \"classnames\";\nimport { DASHBOARD_HEADER_OVERLAYS_Z_INDEX } from \"../../../constants/index.js\";\nimport { InsightDrillConfigPanel } from \"./InsightDrillConfigPanel/InsightDrillConfigPanel.js\";\nconst overlayController = OverlayController.getInstance(DASHBOARD_HEADER_OVERLAYS_Z_INDEX);\nexport const InsightInteractions = ({ widget }) => {\n    const widgetRefSuffix = isInsightWidget(widget)\n        ? stringUtils.simplifyText(objRefToString(widget.ref))\n        : \"\";\n    const classes = cx(\"configuration-scrollable-panel\", \"s-configuration-scrollable-panel\", `s-visualization-${widgetRefSuffix}`);\n    return (React.createElement(ScrollablePanel, { className: classes },\n        React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n            React.createElement(InsightDrillConfigPanel, { widgetRef: widget.ref }))));\n};\nexport function createInsightInteractionsScreen(widget) {\n    return React.createElement(InsightInteractions, { widget: widget });\n}\n//# sourceMappingURL=InsightInteractions.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport compact from \"lodash/compact.js\";\nimport { InsightConfiguration } from \"../../insight/configuration/InsightConfiguration.js\";\nimport { InsightInteractions } from \"../../insight/configuration/InsightInteractions.js\";\nimport { Icon } from \"@gooddata/sdk-ui-kit\";\nimport { eagerRemoveSectionItemByWidgetRef } from \"../../../../model/index.js\";\n/**\n * @internal\n */\nexport function getDefaultInsightEditMenuItems(widget, { intl, dispatch, includeInteractions = true }) {\n    return compact([\n        {\n            type: \"submenu\",\n            itemId: \"ConfigurationPanelSubmenu\",\n            tooltip: \"\",\n            itemName: intl.formatMessage({ id: \"configurationPanel.title\" }),\n            icon: \"gd-icon-settings\",\n            disabled: false,\n            className: \"s-configuration-panel-submenu\",\n            SubmenuComponent: InsightConfiguration,\n        },\n        includeInteractions && {\n            type: \"submenu\",\n            itemId: \"InteractionPanelSubmenu\",\n            tooltip: \"\",\n            itemName: intl.formatMessage({ id: \"configurationPanel.interactions\" }),\n            icon: React.createElement(Icon.Interaction, { className: \"item-icon\" }),\n            disabled: false,\n            className: \"s-configuration-panel-submenu\",\n            SubmenuComponent: InsightInteractions,\n        },\n        {\n            type: \"separator\",\n            itemId: \"InteractionPanelRemoveSeparator\",\n        },\n        {\n            type: \"button\",\n            itemId: \"InteractionPanelRemove\",\n            tooltip: \"\",\n            itemName: intl.formatMessage({ id: \"configurationPanel.remove.form.dashboard\" }),\n            icon: \"gd-icon-trash\",\n            disabled: false,\n            className: \"s-delete-insight-item\",\n            onClick: () => dispatch(eagerRemoveSectionItemByWidgetRef(widget.ref)),\n        },\n    ]);\n}\n//# sourceMappingURL=getDefaultInsightEditMenuItems.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport identity from \"lodash/identity.js\";\nimport ReactTextareaAutosize from \"react-textarea-autosize\";\nimport cx from \"classnames\";\nimport { defaultImport } from \"default-import\";\nimport { Overlay } from \"../Overlay/index.js\";\nimport { ENUM_KEY_CODE } from \"../typings/utilities.js\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst TextareaAutosize = defaultImport(ReactTextareaAutosize);\n/**\n * @internal\n */\nclass EditableLabelInner extends Component {\n    constructor(props) {\n        super(props);\n        this.focusTimeout = 0;\n        this.onDocumentClick = (e) => {\n            if (this.isClickOutsideTextarea(e.target)) {\n                const textAreaNode = this.textarea.current;\n                textAreaNode.blur();\n            }\n        };\n        this.onKeyDown = (e) => {\n            const isSubmit = e.keyCode === ENUM_KEY_CODE.KEY_CODE_ENTER;\n            const isCancel = e.keyCode === ENUM_KEY_CODE.KEY_CODE_ESCAPE;\n            if (isSubmit || isCancel) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            if (isSubmit) {\n                this.onSubmit();\n            }\n            if (isCancel) {\n                this.onCancel();\n            }\n        };\n        this.onSubmit = () => {\n            const oldValue = this.props.value;\n            const newTrimmedValue = this.state.value.trim();\n            if (newTrimmedValue === \"\") {\n                this.setState({\n                    value: \"\",\n                });\n            }\n            if (oldValue !== newTrimmedValue) {\n                this.props.onSubmit(newTrimmedValue);\n            }\n            else {\n                this.props.onCancel(oldValue);\n            }\n            this.setState({\n                value: newTrimmedValue,\n                isEditing: false,\n            });\n            this.removeListeners();\n        };\n        this.onCancel = () => {\n            const { value } = this.props;\n            this.props.onCancel(value);\n            this.setState({\n                value,\n                isEditing: false,\n            });\n            this.removeListeners();\n        };\n        this.onChange = (e) => {\n            const { value } = e.target;\n            this.setState({ value }, () => {\n                this.props.onChange(value);\n            });\n        };\n        this.edit = (_e) => {\n            if (!this.state.isEditing) {\n                this.setState({\n                    isEditing: true,\n                }, () => {\n                    this.selectAndFocus();\n                    document.addEventListener(\"mousedown\", this.onDocumentClick);\n                });\n                this.props.onEditingStart();\n            }\n        };\n        this.selectAndFocus = () => {\n            const componentElement = this.textarea.current;\n            const { scrollToEndOnEditingStart, textareaInOverlay } = this.props;\n            if (componentElement) {\n                window.clearTimeout(this.focusTimeout);\n                // without the timeout the focus sometimes got stolen by the previously active item for some reason\n                this.focusTimeout = window.setTimeout(() => {\n                    componentElement.focus();\n                    if (scrollToEndOnEditingStart && this.isMultiLine()) {\n                        componentElement.scrollTop = componentElement.scrollHeight;\n                    }\n                    componentElement.select();\n                    if (textareaInOverlay) {\n                        this.measureRootDimensions();\n                    }\n                }, 1);\n            }\n        };\n        this.state = {\n            value: props.value,\n            isEditing: false,\n            textareaWidth: 100,\n        };\n        this.root = React.createRef();\n        this.textarea = React.createRef();\n    }\n    componentDidMount() {\n        const rootNode = this.root.current;\n        rootNode.addEventListener(\"dragstart\", this.onSelectStart);\n        rootNode.addEventListener(\"selectstart\", this.onSelectStart);\n        if (this.props.autofocus) {\n            this.edit();\n        }\n    }\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.value !== newProps.value) {\n            this.setState({\n                value: newProps.value,\n            });\n        }\n    }\n    componentWillUnmount() {\n        const rootNode = this.root.current;\n        rootNode.removeEventListener(\"dragstart\", this.onSelectStart);\n        rootNode.removeEventListener(\"selectstart\", this.onSelectStart);\n        this.removeListeners();\n        clearTimeout(this.focusTimeout);\n    }\n    onSelectStart(e) {\n        e.stopPropagation();\n    }\n    isClickOutsideTextarea(clickedTarget) {\n        return this.textarea.current && !this.textarea.current.contains(clickedTarget);\n    }\n    isMultiLine() {\n        return this.props.maxRows > 1;\n    }\n    removeListeners() {\n        document.removeEventListener(\"mousedown\", this.onDocumentClick);\n    }\n    measureRootDimensions() {\n        const rootElement = this.root.current;\n        const rootElementFontSize = getComputedStyle(rootElement).fontSize;\n        this.setState({\n            textareaWidth: rootElement.offsetWidth,\n            textareaFontSize: Math.floor(parseInt(rootElementFontSize, 10)),\n        });\n    }\n    renderTextAreaInOverlay() {\n        const alignId = `gd-editable-label-${uuid()}`;\n        const style = {\n            width: this.state.textareaWidth,\n            fontSize: `${this.state.textareaFontSize}px`,\n            // http://stackoverflow.com/a/6295222\n            lineHeight: `${this.state.textareaFontSize * 1.25}px`,\n        };\n        return (React.createElement(\"div\", { role: \"textarea-wrapper\", className: `${alignId} gd-editable-label-textarea-wrapper` },\n            React.createElement(Overlay, { alignTo: `.${alignId}`, alignPoints: [\n                    {\n                        align: \"cr cr\",\n                    },\n                ] },\n                React.createElement(\"div\", { className: \"gd-editable-label-overlay\" }, this.renderTextarea(style)))));\n    }\n    renderTextarea(style = {}) {\n        return (React.createElement(TextareaAutosize, { style: style, rows: 1, maxRows: this.props.maxRows, maxLength: this.props.maxLength, onKeyDown: this.onKeyDown, onBlur: this.onSubmit, onChange: this.onChange, defaultValue: this.props.value, placeholder: this.props.placeholder, ref: this.textarea }));\n    }\n    renderEditableLabelEdit() {\n        return this.props.textareaInOverlay\n            ? this.renderTextAreaInOverlay()\n            : this.renderTextarea(this.root.current && this.props.isEditableLabelWidthBasedOnText\n                ? { width: this.root.current.getBoundingClientRect().width }\n                : {});\n    }\n    render() {\n        const editableLabelClasses = cx({\n            \"gd-editable-label\": true,\n            \"s-editable-label\": true,\n            \"is-editing\": this.state.isEditing,\n            placeholder: this.state.value === \"\",\n        }, this.props.className);\n        const displayValue = this.props.children || this.state.value || this.props.placeholder;\n        return (React.createElement(\"div\", { role: \"editable-label\", ref: this.props.innerRef, className: editableLabelClasses, onClick: this.edit },\n            React.createElement(\"div\", { className: \"gd-editable-label-inner\", ref: this.root }, this.state.isEditing ? this.renderEditableLabelEdit() : displayValue)));\n    }\n}\nEditableLabelInner.defaultProps = {\n    children: false,\n    className: \"\",\n    maxLength: 100000,\n    maxRows: 1,\n    onCancel: identity,\n    onEditingStart: identity,\n    onChange: identity,\n    placeholder: \"\",\n    scrollToEndOnEditingStart: true,\n    textareaInOverlay: false,\n    autofocus: false,\n    isEditableLabelWidthBasedOnText: false,\n};\nexport { EditableLabelInner };\n/**\n * @internal\n */\nexport const EditableLabel = React.forwardRef((props, ref) => {\n    return React.createElement(EditableLabelInner, Object.assign({}, props, { innerRef: ref }));\n});\n//# sourceMappingURL=EditableLabel.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport noop from \"lodash/noop.js\";\nimport { EditableLabel } from \"@gooddata/sdk-ui-kit\";\nexport const EditableHeadline = ({ maxLength, originalTitle, text, onTitleChange, onTitleEditingCancel = noop, onTitleEditingStart = noop, }) => (React.createElement(EditableLabel, { className: \"s-editable-label s-headline\", maxRows: 2, value: text, maxLength: maxLength, placeholder: originalTitle, onEditingStart: onTitleEditingStart, onSubmit: onTitleChange, onCancel: onTitleEditingCancel },\n    React.createElement(\"span\", null, text)));\n//# sourceMappingURL=EditableHeadline.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { insightTitle } from \"@gooddata/sdk-model\";\nimport { DashboardItemHeadlineContainer } from \"../../../presentationComponents/index.js\";\nimport { changeInsightWidgetHeader, useDashboardDispatch } from \"../../../../model/index.js\";\nimport { EditableHeadline } from \"../../common/EditableHeadline.js\";\nconst MAX_VISUALIZATION_TITLE_LENGTH = 200;\nexport const EditableDashboardInsightWidgetHeader = ({ widget, insight, clientHeight, }) => {\n    const dispatch = useDashboardDispatch();\n    const onWidgetTitleChanged = useCallback((newTitle) => {\n        if (newTitle) {\n            dispatch(changeInsightWidgetHeader(widget.ref, { title: newTitle }));\n        }\n        else if (insight) {\n            dispatch(changeInsightWidgetHeader(widget.ref, { title: insightTitle(insight) }));\n        }\n    }, [dispatch, insight, widget.ref]);\n    const maxLength = Math.max(widget.title.length, MAX_VISUALIZATION_TITLE_LENGTH);\n    return (React.createElement(DashboardItemHeadlineContainer, { clientHeight: clientHeight },\n        React.createElement(EditableHeadline, { text: widget.title, originalTitle: widget.title, maxLength: maxLength, onTitleChange: onWidgetTitleChanged })));\n};\n//# sourceMappingURL=EditableDashboardInsightWidgetHeader.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { insightVisualizationType, widgetRef } from \"@gooddata/sdk-model\";\nimport { DashboardItem, DashboardItemVisualization, getVisTypeCssClass, } from \"../../../presentationComponents/index.js\";\nimport { DashboardInsight } from \"../../insight/index.js\";\nimport { useDashboardComponentsContext } from \"../../../dashboardContexts/index.js\";\nimport { selectIsDashboardSaving, useDashboardSelector, useWidgetSelection, } from \"../../../../model/index.js\";\nimport { useEditableInsightMenu } from \"./useEditableInsightMenu.js\";\nimport { DashboardWidgetInsightGuard } from \"./DashboardWidgetInsightGuard.js\";\nimport { EditableDashboardInsightWidgetHeader } from \"./EditableDashboardInsightWidgetHeader.js\";\nexport const EditableDashboardInsightWidget = (props) => {\n    return React.createElement(DashboardWidgetInsightGuard, Object.assign({}, props, { Component: EditableDashboardInsightWidgetCore }));\n};\n/**\n * @internal\n */\nconst EditableDashboardInsightWidgetCore = ({ widget, insight, screen, onError, onExportReady, onLoadingChanged, dashboardItemClasses }) => {\n    const visType = insightVisualizationType(insight);\n    const { isSelectable, isSelected, onSelected, closeConfigPanel, hasConfigPanelOpen } = useWidgetSelection(widgetRef(widget));\n    const { menuItems } = useEditableInsightMenu({ closeMenu: closeConfigPanel, insight, widget });\n    const { InsightMenuComponentProvider, ErrorComponent, LoadingComponent } = useDashboardComponentsContext();\n    const InsightMenuComponent = useMemo(() => InsightMenuComponentProvider(insight, widget), [InsightMenuComponentProvider, insight, widget]);\n    const isSaving = useDashboardSelector(selectIsDashboardSaving);\n    const isEditable = !isSaving;\n    return (React.createElement(DashboardItem, { className: cx(dashboardItemClasses, \"type-visualization\", \"gd-dashboard-view-widget\", \"is-edit-mode\", getVisTypeCssClass(widget.type, visType), { \"is-selected\": isSelected }), screen: screen },\n        React.createElement(DashboardItemVisualization, { isSelectable: isSelectable, isSelected: isSelected, onSelected: onSelected, renderHeadline: (clientHeight) => {\n                var _a;\n                return !((_a = widget.configuration) === null || _a === void 0 ? void 0 : _a.hideTitle) && (React.createElement(EditableDashboardInsightWidgetHeader, { clientHeight: clientHeight, widget: widget, insight: insight }));\n            }, renderAfterContent: () => {\n                return (React.createElement(React.Fragment, null,\n                    !!isSelected && (React.createElement(\"div\", { className: \"dash-item-action dash-item-action-lw-options\", onClick: onSelected })),\n                    !!hasConfigPanelOpen && (React.createElement(InsightMenuComponent, { insight: insight, widget: widget, isOpen: hasConfigPanelOpen, onClose: closeConfigPanel, items: menuItems }))));\n            }, contentClassName: cx({ \"is-editable\": isEditable }), visualizationClassName: cx({ \"is-editable\": isEditable }) }, ({ clientHeight, clientWidth }) => (React.createElement(DashboardInsight, { clientHeight: clientHeight, clientWidth: clientWidth, insight: insight, widget: widget, onExportReady: onExportReady, onLoadingChanged: onLoadingChanged, onError: onError, ErrorComponent: ErrorComponent, LoadingComponent: LoadingComponent })))));\n};\n//# sourceMappingURL=EditableDashboardInsightWidget.js.map","// (C) 2021-2023 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useDashboardCustomizationsContext } from \"../../../dashboardContexts/index.js\";\nimport { getDefaultInsightEditMenuItems } from \"../../insightMenu/index.js\";\nimport { selectDrillTargetsByWidgetRef, selectSettings, useDashboardDispatch, useDashboardSelector, } from \"../../../../model/index.js\";\nexport const useEditableInsightMenu = (config) => {\n    var _a, _b;\n    const { insight, widget, closeMenu } = config;\n    const intl = useIntl();\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { enableKPIDashboardDrillToURL, enableKPIDashboardDrillToDashboard, enableKPIDashboardDrillToInsight, } = settings;\n    const configItems = useDashboardSelector(selectDrillTargetsByWidgetRef(widget.ref));\n    const someDrillingEnabled = enableKPIDashboardDrillToURL ||\n        enableKPIDashboardDrillToDashboard ||\n        enableKPIDashboardDrillToInsight;\n    const availableDrillTargets = configItems === null || configItems === void 0 ? void 0 : configItems.availableDrillTargets;\n    const someAvailableDrillTargetsExist = !!((_a = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.attributes) === null || _a === void 0 ? void 0 : _a.length) || !!((_b = availableDrillTargets === null || availableDrillTargets === void 0 ? void 0 : availableDrillTargets.measures) === null || _b === void 0 ? void 0 : _b.length);\n    const includeInteractions = someDrillingEnabled && someAvailableDrillTargetsExist;\n    const { insightMenuItemsProvider } = useDashboardCustomizationsContext();\n    const defaultMenuItems = useMemo(() => {\n        return getDefaultInsightEditMenuItems(widget, { intl, dispatch, includeInteractions });\n    }, [dispatch, intl, widget, includeInteractions]);\n    const menuItems = useMemo(() => {\n        return insightMenuItemsProvider\n            ? insightMenuItemsProvider(insight, widget, defaultMenuItems, closeMenu, \"edit\")\n            : defaultMenuItems;\n    }, [insightMenuItemsProvider, insight, widget, defaultMenuItems, closeMenu]);\n    return { menuItems };\n};\n//# sourceMappingURL=useEditableInsightMenu.js.map","// (C) 2022 GoodData Corporation\nimport { renderModeAware } from \"../../../componentDefinition/index.js\";\nimport { DefaultDashboardInsightWidget } from \"./DefaultDashboardInsightWidget.js\";\nimport { EditableDashboardInsightWidget } from \"./EditableDashboardInsightWidget.js\";\n/**\n * @internal\n */\nexport const RenderModeAwareDashboardInsightWidget = renderModeAware({\n    view: DefaultDashboardInsightWidget,\n    edit: EditableDashboardInsightWidget,\n});\n//# sourceMappingURL=RenderModeAwareDashboardInsightWidget.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nimport { isWidget, isInsightWidget, isDashboardWidget, widgetRef } from \"@gooddata/sdk-model\";\nimport { BackendProvider, convertError, useBackendStrict } from \"@gooddata/sdk-ui\";\nimport { withEventing } from \"@gooddata/sdk-backend-base\";\nimport { useDashboardEventDispatch } from \"../../../model/index.js\";\nimport { widgetExecutionFailed, widgetExecutionStarted, widgetExecutionSucceeded, } from \"../../../model/events/widget.js\";\nimport { safeSerializeObjRef } from \"../../../_staging/metadata/safeSerializeObjRef.js\";\nimport { DefaultDashboardKpiWidget } from \"./DefaultDashboardKpiWidget.js\";\nimport { RenderModeAwareDashboardInsightWidget } from \"./InsightWidget/index.js\";\n/**\n * @internal\n */\nexport const DefaultDashboardWidget = React.memo(function DefaultDashboardWidget(props) {\n    const { onError, onFiltersChange, screen, widget, backend, \n    // @ts-expect-error Don't expose index prop on public interface (we need it only for css class for KD tests)\n    index, } = props;\n    if (!isDashboardWidget(widget)) {\n        throw new UnexpectedError(\"Cannot render custom widget with DefaultWidgetRenderer! Please handle custom widget rendering in your widgetRenderer.\");\n    }\n    const ref = widgetRef(widget);\n    const dispatchEvent = useDashboardEventDispatch();\n    const effectiveBackend = useBackendStrict(backend);\n    const backendWithEventing = useMemo(() => {\n        // use a flag to report only the first result of the execution as per the events documented API\n        let hasReportedResult = false;\n        const onSuccess = (dataView, executionId) => {\n            if (!hasReportedResult) {\n                dispatchEvent(widgetExecutionSucceeded(ref, dataView, executionId));\n                hasReportedResult = true;\n            }\n        };\n        const onError = (error, executionId) => {\n            if (!hasReportedResult) {\n                dispatchEvent(widgetExecutionFailed(ref, convertError(error), executionId));\n                hasReportedResult = true;\n            }\n        };\n        return withEventing(effectiveBackend, {\n            beforeExecute: (def, executionId) => {\n                hasReportedResult = false;\n                dispatchEvent(widgetExecutionStarted(ref, def, executionId));\n            },\n            successfulResultReadAll: onSuccess,\n            successfulResultReadWindow: (_offset, _limit, dataView, executionId) => {\n                onSuccess(dataView, executionId);\n            },\n            failedExecute: onError,\n            failedResultReadAll: onError,\n            failedResultReadWindow: (_offset, _limit, error, executionId) => {\n                onError(error, executionId);\n            },\n        });\n    }, [effectiveBackend, dispatchEvent, safeSerializeObjRef(ref)]);\n    const dashboardItemClasses = `s-dash-item-${index}`;\n    if (isWidget(widget)) {\n        return (React.createElement(BackendProvider, { backend: backendWithEventing }, isInsightWidget(widget) ? (React.createElement(RenderModeAwareDashboardInsightWidget, { widget: widget, screen: screen, dashboardItemClasses: dashboardItemClasses })) : (React.createElement(DefaultDashboardKpiWidget, { kpiWidget: widget, screen: screen, dashboardItemClasses: dashboardItemClasses, onFiltersChange: onFiltersChange, onError: onError }))));\n    }\n    return React.createElement(\"div\", null, \"Unknown widget\");\n});\n//# sourceMappingURL=DefaultDashboardWidget.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { insightRef, insightTitle } from \"@gooddata/sdk-model\";\nimport { getSizeInfo } from \"../../../_staging/layout/sizing.js\";\nimport { newLoadingPlaceholderWidget } from \"../../../widgets/index.js\";\nimport { selectSettings, useDashboardDispatch, useDashboardSelector, useDashboardCommandProcessing, uiActions, enableInsightWidgetDateFilter, addLayoutSection, dispatchAndWaitFor, replaceSectionItem, } from \"../../../model/index.js\";\nexport function useNewSectionInsightListItemDropHandler(sectionIndex) {\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { run: preselectDateDataset } = useDashboardCommandProcessing({\n        commandCreator: enableInsightWidgetDateFilter,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.INSIGHT_WIDGET.FILTER_SETTINGS_CHANGED\",\n        onSuccess: (event) => {\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(event.payload.ref));\n        },\n        onError: (event) => {\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(event.payload.command.payload.ref));\n        },\n    });\n    const { run: replaceSectionItemLoader } = useDashboardCommandProcessing({\n        commandCreator: replaceSectionItem,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REPLACED\",\n        onSuccess: (event) => {\n            const ref = event.payload.items[0].widget.ref;\n            dispatch(uiActions.selectWidget(ref));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n            dispatch(uiActions.setWidgetDateDatasetAutoSelect(true));\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStarted(ref));\n            preselectDateDataset(ref, \"default\");\n        },\n    });\n    return useCallback((insight) => {\n        const correlationId = `insert-insight-list-item-${sectionIndex}`;\n        const itemIndex = 0;\n        const sizeInfo = getSizeInfo(settings, \"insight\", insight);\n        dispatchAndWaitFor(dispatch, addLayoutSection(sectionIndex, {}, [\n            {\n                type: \"IDashboardLayoutItem\",\n                size: {\n                    xl: {\n                        gridHeight: sizeInfo.height.default,\n                        gridWidth: sizeInfo.width.default,\n                    },\n                },\n                widget: newLoadingPlaceholderWidget(),\n            },\n        ], false, correlationId)).then(() => {\n            replaceSectionItemLoader(sectionIndex, itemIndex, {\n                type: \"IDashboardLayoutItem\",\n                widget: {\n                    type: \"insight\",\n                    insight: insightRef(insight),\n                    ignoreDashboardFilters: [],\n                    drills: [],\n                    title: insightTitle(insight),\n                    description: \"\",\n                },\n                size: {\n                    xl: {\n                        gridHeight: sizeInfo.height.default,\n                        gridWidth: sizeInfo.width.default,\n                    },\n                },\n            }, undefined, false, correlationId);\n        });\n    }, [dispatch, replaceSectionItemLoader, sectionIndex, settings]);\n}\n//# sourceMappingURL=useNewSectionInsightListItemDropHandler.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { idRef } from \"@gooddata/sdk-model\";\nimport { getSizeInfo } from \"../../../_staging/layout/sizing.js\";\nimport { selectSettings, useDashboardDispatch, useDashboardSelector, useDashboardCommandProcessing, uiActions, addLayoutSection, } from \"../../../model/index.js\";\nimport { KPI_PLACEHOLDER_WIDGET_ID, newKpiPlaceholderWidget } from \"../../../widgets/index.js\";\nexport function useNewSectionKpiPlaceholderDropHandler(sectionIndex) {\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { run: addNewSectionWithKpiPlaceholder } = useDashboardCommandProcessing({\n        commandCreator: addLayoutSection,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_ADDED\",\n        onSuccess: (event) => {\n            const ref = event.payload.section.items[0].widget.ref;\n            dispatch(uiActions.selectWidget(idRef(KPI_PLACEHOLDER_WIDGET_ID)));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n            dispatch(uiActions.setWidgetDateDatasetAutoSelect(true));\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStarted(ref));\n        },\n    });\n    return useCallback(() => {\n        const sizeInfo = getSizeInfo(settings, \"kpi\");\n        addNewSectionWithKpiPlaceholder(sectionIndex, {}, [\n            {\n                type: \"IDashboardLayoutItem\",\n                size: {\n                    xl: {\n                        gridHeight: sizeInfo.height.default,\n                        gridWidth: sizeInfo.width.default,\n                    },\n                },\n                widget: newKpiPlaceholderWidget(),\n            },\n        ]);\n    }, [addNewSectionWithKpiPlaceholder, sectionIndex, settings]);\n}\n//# sourceMappingURL=useNewSectionKpiPlaceholderDropHandler.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { idRef } from \"@gooddata/sdk-model\";\nimport { getInsightPlaceholderSizeInfo } from \"../../../_staging/layout/sizing.js\";\nimport { selectSettings, useDashboardDispatch, useDashboardSelector, useDashboardCommandProcessing, uiActions, addLayoutSection, } from \"../../../model/index.js\";\nimport { INSIGHT_PLACEHOLDER_WIDGET_ID, newInsightPlaceholderWidget } from \"../../../widgets/index.js\";\nexport function useNewSectionInsightPlaceholderDropHandler(sectionIndex) {\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const { run: addNewSectionWithInsightPlaceholder } = useDashboardCommandProcessing({\n        commandCreator: addLayoutSection,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.SECTION_ADDED\",\n        onSuccess: () => {\n            dispatch(uiActions.selectWidget(idRef(INSIGHT_PLACEHOLDER_WIDGET_ID)));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n        },\n    });\n    return useCallback(() => {\n        const sizeInfo = getInsightPlaceholderSizeInfo(settings);\n        addNewSectionWithInsightPlaceholder(sectionIndex, {}, [\n            {\n                type: \"IDashboardLayoutItem\",\n                size: {\n                    xl: {\n                        gridHeight: sizeInfo.height.default,\n                        gridWidth: sizeInfo.width.default,\n                    },\n                },\n                widget: newInsightPlaceholderWidget(),\n            },\n        ]);\n    }, [addNewSectionWithInsightPlaceholder, sectionIndex, settings]);\n}\n//# sourceMappingURL=useNewSectionInsightPlaceholderDropHandler.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { Col } from \"react-grid-system\";\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nimport { isInsightDraggableListItem, isInsightPlaceholderDraggableItem, isKpiPlaceholderDraggableItem, } from \"../types.js\";\nimport { useDashboardDispatch, useDashboardSelector, selectWidgetPlaceholder } from \"../../../model/index.js\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\nimport { useNewSectionInsightListItemDropHandler } from \"./useNewSectionInsightListItemDropHandler.js\";\nimport { useNewSectionKpiPlaceholderDropHandler } from \"./useNewSectionKpiPlaceholderDropHandler.js\";\nimport { useNewSectionInsightPlaceholderDropHandler } from \"./useNewSectionInsightPlaceholderDropHandler.js\";\nimport { getDashboardLayoutItemHeightForGrid } from \"../../../_staging/layout/sizing.js\";\nconst widgetCategoryMapping = {\n    \"insight-placeholder\": \"insight\",\n    insightListItem: \"visualization\",\n    \"kpi-placeholder\": \"kpi\",\n};\nexport const EmptyDashboardDropZone = () => {\n    const dispatch = useDashboardDispatch();\n    const widgetPlaceholder = useDashboardSelector(selectWidgetPlaceholder);\n    const { EmptyLayoutDropZoneBodyComponent } = useDashboardComponentsContext();\n    const handleInsightListItemDrop = useNewSectionInsightListItemDropHandler(0);\n    const handleKpiPlaceholderDrop = useNewSectionKpiPlaceholderDropHandler(0);\n    const handleInsightPlaceholderDrop = useNewSectionInsightPlaceholderDropHandler(0);\n    const [{ canDrop, isOver, itemType, item }, dropRef] = useDashboardDrop([\"insightListItem\", \"kpi-placeholder\", \"insight-placeholder\"], {\n        drop: (item) => {\n            if (isInsightDraggableListItem(item)) {\n                handleInsightListItemDrop(item.insight);\n            }\n            if (isKpiPlaceholderDraggableItem(item)) {\n                handleKpiPlaceholderDrop();\n            }\n            if (isInsightPlaceholderDraggableItem(item)) {\n                handleInsightPlaceholderDrop();\n            }\n        },\n    }, [\n        dispatch,\n        widgetPlaceholder,\n        handleInsightListItemDrop,\n        handleKpiPlaceholderDrop,\n        handleInsightPlaceholderDrop,\n    ]);\n    const { gridWidth = 12, gridHeight } = (item === null || item === void 0 ? void 0 : item.size) || {};\n    const message = React.createElement(FormattedMessage, { id: \"newDashboard.dropInsight\" });\n    const widgetCategory = widgetCategoryMapping[itemType];\n    return (React.createElement(Col, { xl: gridWidth, lg: gridWidth, md: gridWidth, sm: gridWidth, xs: gridWidth, style: {\n            minHeight: gridHeight ? getDashboardLayoutItemHeightForGrid(gridHeight) : undefined,\n        }, className: cx(\"drag-info-placeholder\", \"dash-item\", {\n            [`type-${widgetCategory}`]: !!widgetCategory,\n            \"type-none\": !widgetCategory,\n            \"s-last-drop-position\": canDrop,\n        }) },\n        React.createElement(\"div\", { className: cx(\"drag-info-placeholder-inner\", { \"can-drop\": canDrop, \"is-over\": isOver }), ref: dropRef },\n            React.createElement(EmptyLayoutDropZoneBodyComponent, null),\n            React.createElement(\"div\", { className: \"drag-info-placeholder-drop-target s-drag-info-placeholder-drop-target\" },\n                React.createElement(\"div\", { className: \"drop-target-inner\" },\n                    React.createElement(Typography, { tagName: \"p\", className: \"drop-target-message kpi-drop-target\" }, message),\n                    React.createElement(Typography, { tagName: \"p\", className: \"drop-target-message visualization-drop-target\" }, message))))));\n};\n//# sourceMappingURL=EmptyDashboardDropZone.js.map","// (C) 2007-2020 GoodData Corporation\nimport React from \"react\";\nimport range from \"lodash/range.js\";\nimport cx from \"classnames\";\nconst DOT_COUNT = 3; // the same as $loading-dots-count in loadingDots.scsss\n/**\n * @internal\n */\nexport const LoadingDots = ({ className }) => {\n    return (React.createElement(\"div\", { className: cx(\"gd-loading-dots\", className) }, range(1, DOT_COUNT + 1).map((index) => (React.createElement(\"div\", { key: index, className: `gd-loading-dots-${index}` })))));\n};\n//# sourceMappingURL=LoadingDots.js.map","// (C) 2022 GoodData Corporation\nimport { LoadingDots } from \"@gooddata/sdk-ui-kit\";\nimport cx from \"classnames\";\nimport React from \"react\";\nexport const LoadingDashboardPlaceholderWidget = () => {\n    return (React.createElement(\"div\", { className: cx(\"drag-info-placeholder\", \"dash-item\", \"type-loading\") },\n        React.createElement(LoadingDots, null)));\n};\n//# sourceMappingURL=LoadingDashboardWidget.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\nimport { extendedWidgetDebugStr } from \"../../../model/index.js\";\nimport { DefaultDashboardWidget } from \"./DefaultDashboardWidget.js\";\nimport { isDashboardWidget } from \"@gooddata/sdk-model\";\nimport { EmptyDashboardDropZone, LoadingDashboardPlaceholderWidget } from \"../../dragAndDrop/index.js\";\nimport { isInitialPlaceholderWidget, isInsightPlaceholderWidget, isKpiPlaceholderWidget, isLoadingPlaceholderWidget, } from \"../../../widgets/index.js\";\nconst BadWidgetType = () => {\n    return React.createElement(\"div\", null, \"Missing renderer\");\n};\nconst MissingWidget = () => {\n    return React.createElement(\"div\", null, \"Missing widget\");\n};\n/**\n * @internal\n */\nexport const DashboardWidget = (props) => {\n    const { WidgetComponentProvider, KpiWidgetComponentSet, InsightWidgetComponentSet } = useDashboardComponentsContext();\n    const { widget, \n    // @ts-expect-error Don't expose index prop on public interface (we need it only for css class for KD tests)\n    index, } = props;\n    const WidgetComponent = useMemo(() => {\n        // TODO: we need to get rid of this; the widget being optional at this point is the problem; the parent\n        //  components (or possibly the model) should deal with layout items that have no valid widgets associated\n        //  and thus short-circuit.\n        if (!widget) {\n            console.warn(\"Attempting render an undefined widget.\");\n            return MissingWidget;\n        }\n        const Component = WidgetComponentProvider(widget);\n        // the default WidgetComponentProvider always returns something, DefaultDashboardWidget by default\n        if (Component && Component !== DefaultDashboardWidget) {\n            return Component;\n        }\n        if (isInitialPlaceholderWidget(widget)) {\n            return EmptyDashboardDropZone;\n        }\n        if (isLoadingPlaceholderWidget(widget)) {\n            return LoadingDashboardPlaceholderWidget;\n        }\n        if (isKpiPlaceholderWidget(widget) && KpiWidgetComponentSet.creating) {\n            return KpiWidgetComponentSet.creating.CreatingPlaceholderComponent;\n        }\n        if (isInsightPlaceholderWidget(widget) && InsightWidgetComponentSet.creating) {\n            return InsightWidgetComponentSet.creating.CreatingPlaceholderComponent;\n        }\n        if (isDashboardWidget(widget)) {\n            return DefaultDashboardWidget;\n        }\n        console.warn(`Unable to render widget ${extendedWidgetDebugStr(widget)}`);\n        return BadWidgetType;\n    }, [widget]);\n    return (React.createElement(WidgetComponent, Object.assign({}, props, { \n        // @ts-expect-error Don't expose index prop on public interface (we need it only for css class for KD tests)\n        index: index })));\n};\n//# sourceMappingURL=DashboardWidget.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport DefaultMeasure from \"react-measure\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Measure = defaultImport(DefaultMeasure);\nexport const DashboardItemOverlay = ({ render, type, modifications, onHide, }) => {\n    const intl = useIntl();\n    const added = modifications.includes(\"insertedByPlugin\");\n    const modified = modifications.includes(\"modifiedByPlugin\");\n    const theme = useTheme();\n    const [size, setSize] = useState(\"none\");\n    const [height, setHeight] = useState(0);\n    const classes = classNames(\"gd-fluidlayout-item-changed\", {\n        [type]: true,\n        [size]: true,\n        added: added,\n        modified: modified,\n    });\n    const show = render && (added || modified);\n    return show ? (React.createElement(Measure, { client: true, onResize: (data) => {\n            if (data.client) {\n                setSize(data.client.height < 100 ? \"small\" : \"big\");\n                setHeight(data.client.height);\n            }\n        } }, ({ measureRef }) => {\n        var _a, _b;\n        return (React.createElement(\"div\", { className: classes, ref: measureRef },\n            React.createElement(\"div\", { className: \"gd-fluidlayout-item-changed-content\" },\n                React.createElement(\"div\", { className: \"gd-fluidlayout-item-changed-icon\", style: height ? { height } : {} },\n                    React.createElement(PluginIcon, { color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c7 })),\n                React.createElement(\"div\", { className: \"gd-fluidlayout-item-changed-info\" },\n                    React.createElement(DashboardItemOverlayInfo, { added: added, modified: modified })),\n                React.createElement(Button, { className: \"gd-button gd-button-link\", value: intl.formatMessage({ id: \"layout.widget.hideOverlay\" }), onClick: onHide }))));\n    })) : null;\n};\nconst DashboardItemOverlayInfo = ({ added, modified, }) => {\n    if (added) {\n        return React.createElement(FormattedMessage, { id: \"layout.widget.addedByPlugin\" });\n    }\n    if (modified) {\n        return React.createElement(FormattedMessage, { id: \"layout.widget.modifiedByPlugin\" });\n    }\n    return null;\n};\nconst PluginIcon = ({ color }) => {\n    return (React.createElement(\"svg\", { width: \"29\", height: \"35\", viewBox: \"0 0 29 35\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M15.6264 2.50847C14.8954 2.26481 14.1052 2.26481 13.3742 2.50847L13.2559 2.54788C11.124 3.25852 10.1752 5.74192 11.2901 7.69306L11.8345 8.64571C12.6873 10.1381 11.3879 11.9409 9.70247 11.6038L2.30263 10.1238C2.16491 10.0963 2.03641 10.2016 2.03641 10.342V32.3544C2.03641 32.4773 2.13606 32.577 2.25898 32.577H25.7456C25.859 32.577 25.9543 32.4917 25.9668 32.379L26.7587 25.2513C26.7776 25.0818 26.6066 24.955 26.4499 25.0222L23.9499 26.0936C21.5157 27.1368 18.6851 26.2215 17.3226 23.9506C16.3163 22.2735 16.3163 20.1783 17.3226 18.5012C18.6851 16.2303 21.5157 15.315 23.9499 16.3582L26.4499 17.4296C26.6066 17.4968 26.7776 17.37 26.7587 17.2005L25.9937 10.3154C25.9791 10.1838 25.8535 10.0939 25.7242 10.1227L19.3749 11.5336C17.6773 11.9109 16.3383 10.0943 17.2011 8.58438L17.7105 7.69306C18.8254 5.74192 17.8766 3.25852 15.7447 2.54788L15.6264 2.50847ZM12.8111 0.819283C13.9076 0.453794 15.093 0.453794 16.1895 0.819283L16.3077 0.858699C19.5056 1.92465 20.9288 5.64975 19.2564 8.57646L18.7471 9.46779C18.6512 9.63555 18.8 9.8374 18.9886 9.79548L25.338 8.38451C26.5014 8.12598 27.6318 8.93425 27.7634 10.1187L28.5284 17.0039C28.6979 18.5293 27.1592 19.6708 25.7485 19.0662L23.2485 17.9948C21.6327 17.3024 19.7538 17.9099 18.8494 19.4173C18.1815 20.5305 18.1815 21.9213 18.8494 23.0345C19.7538 24.5419 21.6327 25.1495 23.2485 24.457L25.7485 23.3856C27.1592 22.781 28.6979 23.9225 28.5284 25.448L27.7364 32.5756C27.6237 33.59 26.7663 34.3575 25.7456 34.3575H2.25898C1.15269 34.3575 0.255859 33.4607 0.255859 32.3544V10.342C0.255859 9.07798 1.41231 8.12991 2.65183 8.37782L10.0517 9.85778C10.2389 9.89524 10.3833 9.69493 10.2886 9.52911L9.74419 8.57646C8.07178 5.64975 9.49501 1.92465 12.6929 0.858699L12.8111 0.819283Z\", fill: color !== null && color !== void 0 ? color : \"#687581\" })));\n};\n//# sourceMappingURL=DashboardItemOverlay.js.map","export function getRefsForSection(section) {\n    return section.items().map((item) => item.ref());\n}\nexport function getRefsForItem(item) {\n    return [item.ref()];\n}\n//# sourceMappingURL=refs.js.map","// (C) 2020-2023 GoodData Corporation\nimport { isInsightWidget, isKpiWidget, } from \"@gooddata/sdk-model\";\nimport { WIDGET_DROPZONE_SIZE_INFO_DEFAULT } from \"@gooddata/sdk-ui-ext\";\nimport React, { useRef } from \"react\";\nimport cx from \"classnames\";\nimport { isCustomWidget, selectEnableWidgetCustomHeight, selectInsightsMap, selectIsInEditMode, selectSettings, uiActions, useDashboardDispatch, useDashboardSelector, selectWidgetsOverlayState, selectWidgetsModification, selectSectionModification, selectIsExport, } from \"../../model/index.js\";\nimport { isAnyPlaceholderWidget, isPlaceholderWidget } from \"../../widgets/index.js\";\nimport { getSizeInfo, calculateWidgetMinHeight } from \"../../_staging/layout/sizing.js\";\nimport { getLayoutCoordinates } from \"../../_staging/layout/coordinates.js\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\nimport { Hotspot, ResizeOverlay, useDashboardDrag, useResizeItemStatus, useWidgetDragEndHandler, WidthResizerHotspot, } from \"../dragAndDrop/index.js\";\nimport { DashboardWidget } from \"../widget/index.js\";\nimport { DEFAULT_COLUMN_CLIENT_WIDTH, DEFAULT_WIDTH_RESIZER_HEIGHT } from \"./constants.js\";\nimport { getDashboardLayoutItemHeightForRatioAndScreen, } from \"./DefaultDashboardLayoutRenderer/index.js\";\nimport { DashboardItemOverlay } from \"./DashboardItemOverlay/DashboardItemOverlay.js\";\nimport { getRefsForSection, getRefsForItem } from \"./refs.js\";\n/**\n * Tests in KD require widget index for css selectors.\n * Widget index equals to the widget order in the layout.\n * Also placeholders are ignored for this.\n */\nfunction getWidgetIndex(item) {\n    var _a, _b;\n    const sectionIndex = item.section().index();\n    const isIgnoredForIndexes = (widget) => {\n        return !widget || isAnyPlaceholderWidget(widget);\n    };\n    let itemsInSectionsBefore = 0;\n    for (let i = 0; i < sectionIndex; i += 1) {\n        itemsInSectionsBefore +=\n            (_b = (_a = item\n                .section()\n                .layout()\n                .section(i)) === null || _a === void 0 ? void 0 : _a.items().filter((i) => !isIgnoredForIndexes(i.widget())).length) !== null && _b !== void 0 ? _b : 0;\n    }\n    const ignoredWidgetsBeforeItemCount = item\n        .section()\n        .items()\n        .filter((i) => i.index() < item.index() && isIgnoredForIndexes(i.widget())).length;\n    return itemsInSectionsBefore + item.index() - ignoredWidgetsBeforeItemCount;\n}\n/**\n * @internal\n */\nexport const DashboardLayoutWidget = (props) => {\n    const { item, screen, DefaultWidgetRenderer, onDrill, onFiltersChange, onError, getLayoutDimensions } = props;\n    const dispatch = useDashboardDispatch();\n    const insights = useDashboardSelector(selectInsightsMap);\n    const settings = useDashboardSelector(selectSettings);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const isExport = useDashboardSelector(selectIsExport);\n    const enableWidgetCustomHeight = useDashboardSelector(selectEnableWidgetCustomHeight);\n    const handleDragEnd = useWidgetDragEndHandler();\n    // TODO: we should probably do something more meaningful when item has no widget; should that even\n    //  be allowed? undefined widget will make things explode down the line away so..\n    const widget = item.widget();\n    const isCustom = isCustomWidget(widget);\n    const isDraggableWidgetType = !(isPlaceholderWidget(widget) || isCustom);\n    const [{ isDragging }, dragRef] = useDashboardDrag({\n        dragItem: () => {\n            return createDraggableItem(item, insights, settings);\n        },\n        canDrag: isInEditMode && isDraggableWidgetType,\n        dragStart: (item) => {\n            dispatch(uiActions.setDraggingWidgetSource(item));\n        },\n        dragEnd: handleDragEnd,\n    }, [item, insights, isInEditMode]);\n    const { ErrorComponent, LoadingComponent } = useDashboardComponentsContext();\n    const currentSize = item.size()[screen];\n    const minHeight = calculateWidgetMinHeight(widget, currentSize, insights, settings);\n    const height = currentSize.heightAsRatio && !currentSize.gridHeight\n        ? getDashboardLayoutItemHeightForRatioAndScreen(currentSize, screen)\n        : undefined;\n    const allowOverflow = !!currentSize.heightAsRatio;\n    const className = enableWidgetCustomHeight ? \"custom-height\" : undefined;\n    const index = getWidgetIndex(item);\n    const refs = getRefsForItem(item);\n    const sectionModifications = useDashboardSelector(selectSectionModification(getRefsForSection(item.section())));\n    const itemModifications = useDashboardSelector(selectWidgetsModification(refs));\n    const overlayShow = useDashboardSelector(selectWidgetsOverlayState(refs));\n    const { isActive, isResizingColumnOrRow, heightLimitReached, widthLimitReached } = useResizeItemStatus(widget.identifier);\n    const contentRef = useRef(null);\n    function getWidthInPx() {\n        return (contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)\n            ? contentRef.current.getBoundingClientRect().width\n            : DEFAULT_COLUMN_CLIENT_WIDTH;\n    }\n    function getHeightInPx() {\n        return (contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)\n            ? contentRef.current.getBoundingClientRect().height\n            : DEFAULT_WIDTH_RESIZER_HEIGHT;\n    }\n    function getGridColumnWidth() {\n        var _a;\n        const columnWidthInGC = (_a = item.sizeForScreen(screen)) === null || _a === void 0 ? void 0 : _a.gridWidth;\n        const columnWidthInPx = getWidthInPx();\n        return columnWidthInPx / columnWidthInGC;\n    }\n    const canShowHotspot = isInEditMode && !isDragging;\n    return (React.createElement(DefaultWidgetRenderer, { DefaultWidgetRenderer: DefaultWidgetRenderer, item: item, screen: screen, allowOverflow: allowOverflow, height: height, minHeight: minHeight, className: className, contentRef: contentRef, getLayoutDimensions: getLayoutDimensions },\n        React.createElement(\"div\", { ref: dragRef, className: cx([\n                \"dashboard-widget-draggable-wrapper\",\n                { \"gd-custom-widget-export\": isCustom && isExport },\n            ]) },\n            React.createElement(DashboardWidget\n            // @ts-expect-error Don't expose index prop on public interface (we need it only for css class for KD tests)\n            , { \n                // @ts-expect-error Don't expose index prop on public interface (we need it only for css class for KD tests)\n                index: index, screen: screen, onDrill: onDrill, onError: onError, onFiltersChange: onFiltersChange, widget: widget, ErrorComponent: ErrorComponent, LoadingComponent: LoadingComponent })),\n        canShowHotspot && !isAnyPlaceholderWidget(widget) ? (React.createElement(React.Fragment, null,\n            React.createElement(ResizeOverlay, { isActive: isActive, isResizingColumnOrRow: isResizingColumnOrRow, reachedWidthLimit: widthLimitReached, reachedHeightLimit: heightLimitReached }),\n            !isCustomWidget(widget) ? (React.createElement(React.Fragment, null,\n                React.createElement(Hotspot, { dropZoneType: \"prev\", itemIndex: item.index(), sectionIndex: item.section().index(), isLastInSection: false }),\n                React.createElement(Hotspot, { dropZoneType: \"next\", itemIndex: item.index(), sectionIndex: item.section().index(), isLastInSection: item.isLast() }),\n                React.createElement(WidthResizerHotspot, { item: item, screen: screen, getGridColumnHeightInPx: getHeightInPx, getGridColumnWidth: getGridColumnWidth, getLayoutDimensions: getLayoutDimensions }))) : null)) : null,\n        React.createElement(DashboardItemOverlay, { type: \"column\", onHide: () => dispatch(uiActions.toggleWidgetsOverlay({\n                refs: [item.ref()],\n                visible: false,\n            })), render: Boolean(isInEditMode && overlayShow) && !sectionModifications.includes(\"insertedByPlugin\"), modifications: itemModifications })));\n};\nfunction getFilledSize(itemSize, sizeInfo) {\n    var _a, _b;\n    return {\n        gridWidth: ((_a = itemSize.xl) === null || _a === void 0 ? void 0 : _a.gridWidth) ||\n            (sizeInfo === null || sizeInfo === void 0 ? void 0 : sizeInfo.width.default) ||\n            WIDGET_DROPZONE_SIZE_INFO_DEFAULT.width.default,\n        gridHeight: ((_b = itemSize.xl) === null || _b === void 0 ? void 0 : _b.gridHeight) ||\n            (sizeInfo === null || sizeInfo === void 0 ? void 0 : sizeInfo.height.default) ||\n            WIDGET_DROPZONE_SIZE_INFO_DEFAULT.height.default,\n    };\n}\nfunction createDraggableItem(item, insights, settings) {\n    const widget = item.widget();\n    const { sectionIndex, itemIndex } = getLayoutCoordinates(item);\n    const size = item.size();\n    const isOnlyItemInSection = item.section().items().count() === 1;\n    if (isKpiWidget(widget)) {\n        const sizeInfo = getSizeInfo(settings, \"kpi\", widget.kpi);\n        return {\n            type: \"kpi\",\n            kpi: widget.kpi,\n            title: widget.title,\n            sectionIndex,\n            itemIndex,\n            isOnlyItemInSection,\n            size: getFilledSize(size, sizeInfo),\n        };\n    }\n    else if (isInsightWidget(widget)) {\n        const insight = insights.get(widget.insight);\n        const sizeInfo = getSizeInfo(settings, \"kpi\", insight);\n        return {\n            type: \"insight\",\n            insight,\n            sectionIndex,\n            itemIndex,\n            title: widget.title,\n            isOnlyItemInSection,\n            size: getFilledSize(size, sizeInfo),\n        };\n    }\n    else {\n        return {\n            type: widget.type,\n            widget,\n            sectionIndex,\n            itemIndex,\n            title: \"\",\n            isOnlyItemInSection,\n            size: getFilledSize(size),\n        };\n    }\n}\n//# sourceMappingURL=DashboardLayoutWidget.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nexport const WidgetDropZoneBox = (props) => {\n    const { isLast } = props;\n    return (React.createElement(\"div\", { className: cx(\"drag-info-placeholder\", \"widget-dropzone-box\", \"s-last-drop-position\", \"type-kpi\") },\n        React.createElement(\"div\", { className: cx(\"drag-info-placeholder-inner\", \"can-drop\", \"is-over\") },\n            React.createElement(\"div\", { className: \"drag-info-placeholder-drop-target\" },\n                React.createElement(\"div\", { className: \"drop-target-inner\" },\n                    React.createElement(Typography, { tagName: \"p\", className: \"drop-target-message kpi-drop-target\" }, isLast ? (React.createElement(FormattedMessage, { id: \"dropzone.widget.last.in.row.desc\", values: { b: (chunks) => React.createElement(\"b\", null, chunks) } })) : (React.createElement(FormattedMessage, { id: \"dropzone.widget.desc\", values: { b: (chunks) => React.createElement(\"b\", null, chunks) } }))))))));\n};\n//# sourceMappingURL=WidgetDropZoneBox.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { WidgetDropZoneBox } from \"./WidgetDropZoneBox.js\";\nexport const WidgetDropZone = (props) => {\n    const { isLastInSection, dropRef } = props;\n    return (React.createElement(\"div\", { className: \"widget-dropzone\", ref: dropRef },\n        React.createElement(WidgetDropZoneBox, { isLast: isLastInSection })));\n};\n//# sourceMappingURL=WidgetDropZone.js.map","import cx from \"classnames\";\nimport React, { useMemo } from \"react\";\nimport { Col } from \"react-grid-system\";\nimport { selectDraggingWidgetTarget, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { WidgetDropZone } from \"./WidgetDropZone.js\";\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nimport { useInsightListItemDropHandler } from \"./useInsightListItemDropHandler.js\";\nimport { useInsightPlaceholderDropHandler } from \"./useInsightPlaceholderDropHandler.js\";\nimport { useKpiPlaceholderDropHandler } from \"./useKpiPlaceholderDropHandler.js\";\nimport { useMoveWidgetDropHandler } from \"./useMoveWidgetHandler.js\";\nimport { getDashboardLayoutItemHeightForGrid } from \"../../../_staging/layout/sizing.js\";\nimport { isInsightDraggableItem, isInsightDraggableListItem, isInsightPlaceholderDraggableItem, isKpiDraggableItem, isKpiPlaceholderDraggableItem, } from \"../types.js\";\nexport const WidgetDropZoneColumn = (props) => {\n    const { sectionIndex, itemIndex, isLastInSection = false } = props;\n    const dropzoneCoordinates = useDashboardSelector(selectDraggingWidgetTarget);\n    const handleInsightListItemDrop = useInsightListItemDropHandler(sectionIndex, itemIndex);\n    const handleInsightPlaceholderDrop = useInsightPlaceholderDropHandler(sectionIndex, itemIndex);\n    const handleKpiPlaceholderDrop = useKpiPlaceholderDropHandler(sectionIndex, itemIndex);\n    const handleWidgetDrop = useMoveWidgetDropHandler(sectionIndex, itemIndex);\n    const dispatch = useDashboardDispatch();\n    const [collectedProps, dropRef] = useDashboardDrop([\"insightListItem\", \"kpi-placeholder\", \"insight-placeholder\", \"kpi\", \"insight\"], {\n        drop: (item) => {\n            if (isInsightDraggableListItem(item)) {\n                handleInsightListItemDrop(item.insight);\n            }\n            if (isKpiPlaceholderDraggableItem(item)) {\n                handleKpiPlaceholderDrop();\n            }\n            if (isInsightPlaceholderDraggableItem(item)) {\n                handleInsightPlaceholderDrop();\n            }\n            if (isInsightDraggableItem(item) || isKpiDraggableItem(item)) {\n                handleWidgetDrop(item);\n            }\n        },\n    }, [dispatch, handleInsightListItemDrop, handleInsightPlaceholderDrop, handleKpiPlaceholderDrop]);\n    const showDropZone = useMemo(() => (dropzoneCoordinates === null || dropzoneCoordinates === void 0 ? void 0 : dropzoneCoordinates.sectionIndex) === sectionIndex &&\n        (dropzoneCoordinates === null || dropzoneCoordinates === void 0 ? void 0 : dropzoneCoordinates.itemIndex) === itemIndex, [dropzoneCoordinates === null || dropzoneCoordinates === void 0 ? void 0 : dropzoneCoordinates.itemIndex, dropzoneCoordinates === null || dropzoneCoordinates === void 0 ? void 0 : dropzoneCoordinates.sectionIndex, itemIndex, sectionIndex]);\n    if (!showDropZone) {\n        return null;\n    }\n    const size = collectedProps.item.size;\n    return (React.createElement(Col, { xl: size.gridWidth, lg: size.gridWidth, md: size.gridWidth, sm: size.gridWidth, xs: size.gridWidth, className: cx(\"gd-fluidlayout-column\", \"gd-fluidlayout-column-dropzone\", \"s-fluid-layout-column\"), style: {\n            minHeight: getDashboardLayoutItemHeightForGrid(size.gridHeight),\n        } },\n        React.createElement(WidgetDropZone, { isLastInSection: isLastInSection, sectionIndex: sectionIndex, itemIndex: itemIndex, dropRef: dropRef })));\n};\n//# sourceMappingURL=WidgetDropZoneColumn.js.map","import cx from \"classnames\";\nimport React from \"react\";\nimport { selectIsInEditMode, useDashboardSelector } from \"../../../model/index.js\";\nimport { getLayoutCoordinates } from \"../../../_staging/layout/coordinates.js\";\nimport { Hotspot } from \"./Hotspot.js\";\nimport { WidgetDropZoneColumn } from \"./WidgetDropZoneColumn.js\";\nexport const RowEndHotspot = (props) => {\n    const { item, screen } = props;\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const { sectionIndex, itemIndex } = getLayoutCoordinates(item);\n    const isLastInSection = item.isLast();\n    const showEndingHotspot = isLastInSection && isInEditMode;\n    if (!showEndingHotspot) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(WidgetDropZoneColumn, { screen: screen, sectionIndex: sectionIndex, itemIndex: itemIndex + 1, isLastInSection: true }),\n        React.createElement(\"div\", { className: cx(\"gd-fluidlayout-column\", \"gd-fluidlayout-column-row-end-hotspot\", \"s-fluid-layout-column\", `s-fluid-layout-screen-${screen}`) },\n            React.createElement(Hotspot, { dropZoneType: \"next\", isEndingHotspot: true, itemIndex: itemIndex, sectionIndex: sectionIndex, isLastInSection: item.isLast() }))));\n};\n//# sourceMappingURL=RowEndHotspot.js.map","import cx from \"classnames\";\nimport isNil from \"lodash/isNil.js\";\nimport React, { useMemo } from \"react\";\nimport { Col } from \"react-grid-system\";\nconst isHiddenStyle = { height: 0, width: 0, overflow: \"hidden\", flex: 0 };\nexport const DashboardLayoutItemViewRenderer = (props) => {\n    var _a, _b, _c, _d, _e;\n    const { item, screen, children, className, minHeight = 0, isHidden } = props;\n    const { size, ratio, width, height } = getSizeForItem(item, screen);\n    const style = useMemo(() => {\n        let computedStyle = {\n            minHeight,\n        };\n        if (isHidden) {\n            computedStyle = Object.assign(Object.assign({}, computedStyle), isHiddenStyle);\n        }\n        return computedStyle;\n    }, [minHeight, isHidden]);\n    return (React.createElement(Col, { xl: (_a = size === null || size === void 0 ? void 0 : size.xl) === null || _a === void 0 ? void 0 : _a.gridWidth, lg: (_b = size === null || size === void 0 ? void 0 : size.lg) === null || _b === void 0 ? void 0 : _b.gridWidth, md: (_c = size === null || size === void 0 ? void 0 : size.md) === null || _c === void 0 ? void 0 : _c.gridWidth, sm: (_d = size === null || size === void 0 ? void 0 : size.sm) === null || _d === void 0 ? void 0 : _d.gridWidth, xs: (_e = size === null || size === void 0 ? void 0 : size.xs) === null || _e === void 0 ? void 0 : _e.gridWidth, className: cx(\"gd-fluidlayout-column\", \"s-fluid-layout-column\", `s-fluid-layout-screen-${screen}`, `s-fluid-layout-column-width-${width}`, {\n            [`s-fluid-layout-column-ratio-${ratio}`]: !isNil(ratio),\n            [`s-fluid-layout-column-height-${height}`]: !isNil(height),\n        }, className), style: style }, children));\n};\nfunction getSizeForItem(item, screen) {\n    const size = item.size();\n    const currentScreenSizeConfiguration = item.sizeForScreen(screen);\n    const ratio = currentScreenSizeConfiguration === null || currentScreenSizeConfiguration === void 0 ? void 0 : currentScreenSizeConfiguration.heightAsRatio;\n    const height = currentScreenSizeConfiguration === null || currentScreenSizeConfiguration === void 0 ? void 0 : currentScreenSizeConfiguration.gridHeight;\n    const width = currentScreenSizeConfiguration === null || currentScreenSizeConfiguration === void 0 ? void 0 : currentScreenSizeConfiguration.gridWidth;\n    return {\n        height,\n        width,\n        ratio,\n        size,\n    };\n}\n//# sourceMappingURL=DashboardLayoutItemViewRenderer.js.map","// (C) 2007-2023 GoodData Corporation\nimport cx from \"classnames\";\nimport React from \"react\";\nimport { RowEndHotspot, WidgetDropZoneColumn, useIsDraggingCurrentItem } from \"../../dragAndDrop/index.js\";\nimport { DashboardLayoutItemViewRenderer } from \"./DashboardLayoutItemViewRenderer.js\";\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\nimport { isCustomWidgetBase } from \"../../../model/index.js\";\nfunction getLayoutCoordinates(item) {\n    var _a;\n    return {\n        sectionIndex: (_a = item.section()) === null || _a === void 0 ? void 0 : _a.index(),\n        itemIndex: item.index(),\n    };\n}\nconst DashboardLayoutItemEditRenderer = (props) => {\n    const { item, screen, children } = props;\n    const { sectionIndex, itemIndex } = getLayoutCoordinates(item);\n    const isDraggingCurrentItem = useIsDraggingCurrentItem(sectionIndex, itemIndex);\n    const isCustomWidget = isCustomWidgetBase(item.widget());\n    return (React.createElement(React.Fragment, null,\n        isCustomWidget ? null : (React.createElement(WidgetDropZoneColumn, { screen: screen, sectionIndex: sectionIndex, itemIndex: itemIndex })),\n        React.createElement(DashboardLayoutItemViewRenderer, Object.assign({}, props, { className: cx({\n                \"current-dragging-item\": isDraggingCurrentItem,\n            }) }), children),\n        isCustomWidget ? null : React.createElement(RowEndHotspot, { item: item, screen: screen })));\n};\n/**\n * @internal\n */\nexport const DashboardLayoutItemRenderer = renderModeAware({\n    view: DashboardLayoutItemViewRenderer,\n    edit: DashboardLayoutItemEditRenderer,\n});\n//# sourceMappingURL=DashboardLayoutItemRenderer.js.map","// (C) 2022 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { selectDraggingWidgetSource, useDashboardSelector } from \"../../../model/index.js\";\nexport function useIsDraggingCurrentItem(sectionIndex, itemIndex) {\n    const dragItem = useDashboardSelector(selectDraggingWidgetSource);\n    return useMemo(() => {\n        if (!dragItem) {\n            return false;\n        }\n        return dragItem.sectionIndex === sectionIndex && dragItem.itemIndex === itemIndex;\n    }, [dragItem, sectionIndex, itemIndex]);\n}\n//# sourceMappingURL=useIsDraggingCurrentItem.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport cx from \"classnames\";\nexport function DashboardLayoutWidgetRenderer(props) {\n    const { item, screen, debug, className, contentRef, isResizedByLayoutSizingStrategy, minHeight, height, allowOverflow, children, } = props;\n    const { heightAsRatio, gridHeight } = item.size()[screen];\n    const style = useMemo(() => {\n        const computedStyle = {\n            minHeight,\n            height,\n        };\n        if (allowOverflow) {\n            computedStyle.overflowX = \"hidden\";\n            computedStyle.overflowY = \"auto\";\n        }\n        if (debug) {\n            if (!heightAsRatio) {\n                computedStyle.outline = \"solid 1px yellow\";\n            }\n            else {\n                computedStyle.border = isResizedByLayoutSizingStrategy\n                    ? \"dashed 1px #d6d6d6\"\n                    : \"solid 1px green\";\n            }\n        }\n        return computedStyle;\n    }, [minHeight, height, allowOverflow, debug, heightAsRatio, isResizedByLayoutSizingStrategy]);\n    return (React.createElement(\"div\", { ref: contentRef, className: cx(\"gd-fluidlayout-column-container\", className, {\n            \"custom-height\": !!gridHeight,\n        }), style: style }, children));\n}\n//# sourceMappingURL=DashboardLayoutWidgetRenderer.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { DashboardLayoutItemRenderer } from \"./DashboardLayoutItemRenderer.js\";\nimport { DashboardLayoutWidgetRenderer } from \"./DashboardLayoutWidgetRenderer.js\";\nconst defaultItemRenderer = (props) => (React.createElement(DashboardLayoutItemRenderer, Object.assign({}, props)));\nexport function DashboardLayoutItem(props) {\n    const { item, itemRenderer = defaultItemRenderer, widgetRenderer, screen } = props;\n    const renderProps = {\n        item,\n        screen,\n        DefaultWidgetRenderer: DashboardLayoutWidgetRenderer,\n    };\n    return itemRenderer(Object.assign(Object.assign({}, props), { DefaultItemRenderer: DashboardLayoutItemRenderer, children: widgetRenderer(renderProps) }));\n}\n//# sourceMappingURL=DashboardLayoutItem.js.map","import React from \"react\";\nimport { Row } from \"react-grid-system\";\nimport { DashboardLayoutItem } from \"./DashboardLayoutItem.js\";\nconst defaultItemKeyGetter = ({ item }) => item.index().toString();\nexport function DashboardLayoutGridRow(props) {\n    const { section, itemKeyGetter = defaultItemKeyGetter, gridRowRenderer, itemRenderer, widgetRenderer, screen, items, renderMode, } = props;\n    const rowItems = items.map((item) => (React.createElement(DashboardLayoutItem, { key: itemKeyGetter({ item, screen }), item: item, itemRenderer: itemRenderer, widgetRenderer: widgetRenderer, screen: screen })));\n    return (React.createElement(Row, { className: \"gd-fluidlayout-row s-gd-fluid-layout-row\" }, gridRowRenderer\n        ? gridRowRenderer({\n            children: rowItems,\n            screen,\n            section,\n            items,\n            renderMode,\n        })\n        : rowItems));\n}\n//# sourceMappingURL=DashboardLayoutGridRow.js.map","// (C) 2019-2020 GoodData Corporation\nimport * as React from \"react\";\nimport cx from \"classnames\";\nexport const DashboardLayoutSectionHeaderDescription = (props) => {\n    const { description } = props;\n    const className = cx(\"gd-paragraph\", \"description\", \"s-fluid-layout-row-description\");\n    return React.createElement(\"div\", { className: className }, description);\n};\n//# sourceMappingURL=DashboardLayoutSectionHeaderDescription.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { DashboardLayoutSectionHeaderDescription } from \"./DashboardLayoutSectionHeaderDescription.js\";\nexport const DashboardLayoutSectionHeader = (props) => {\n    const { title, description, renderBeforeHeader, renderHeader } = props;\n    return (React.createElement(\"div\", { className: \"gd-fluid-layout-row-header s-fluid-layout-row-header\" },\n        renderBeforeHeader,\n        React.createElement(\"div\", { className: \"gd-fluid-layout-row-header-container\" }, renderHeader !== null && renderHeader !== void 0 ? renderHeader : (React.createElement(\"div\", { className: \"gd-row-header-view\" },\n            title ? (React.createElement(\"div\", { className: \"gd-row-header-title-wrapper\" },\n                React.createElement(\"span\", { className: \"title\" },\n                    React.createElement(Typography, { tagName: \"h2\", className: \"s-fluid-layout-row-title\" }, title)))) : null,\n            description ? (React.createElement(DashboardLayoutSectionHeaderDescription, { description: description })) : null)))));\n};\n//# sourceMappingURL=DashboardLayoutSectionHeader.js.map","// (C) 2022 GoodData Corporation\nexport const emptyItemFacadeWithFullSize = {\n    index: () => 0,\n    raw: () => null,\n    widget: () => null,\n    ref: () => undefined,\n    section: () => undefined,\n    size: () => ({ xl: { gridWidth: 12 } }),\n    sizeForScreen: () => ({ gridWidth: 12 }),\n    isLast: () => true,\n    widgetEquals: () => false,\n    widgetIs: () => false,\n    hasSizeForScreen: () => false,\n    indexIs: () => false,\n    isFirst: () => true,\n    test: () => false,\n    testRaw: () => false,\n    isCustomItem: () => false,\n    isInsightWidgetItem: () => false,\n    isInsightWidgetDefinitionItem: () => false,\n    isKpiWidgetItem: () => false,\n    isKpiWidgetDefinitionItem: () => false,\n    isLayoutItem: () => false,\n    isWidgetItem: () => false,\n    isWidgetDefinitionItem: () => false,\n    isWidgetItemWithInsightRef: () => false,\n    isWidgetItemWithKpiRef: () => false,\n    isWidgetItemWithRef: () => false,\n    isEmpty: () => false,\n};\n//# sourceMappingURL=emptyFacade.js.map","// (C) 2019-2022 GoodData Corporation\nimport * as React from \"react\";\nimport { DashboardLayoutItemViewRenderer } from \"./DashboardLayoutItemViewRenderer.js\";\nimport { DashboardLayoutSectionHeader } from \"./DashboardLayoutSectionHeader.js\";\nimport { emptyItemFacadeWithFullSize } from \"./utils/emptyFacade.js\";\nexport function DashboardLayoutSectionHeaderRenderer(props) {\n    const { section, screen } = props;\n    const sectionHeader = section.header();\n    return sectionHeader ? (React.createElement(DashboardLayoutItemViewRenderer, { DefaultItemRenderer: DashboardLayoutItemViewRenderer, item: emptyItemFacadeWithFullSize, screen: screen },\n        React.createElement(DashboardLayoutSectionHeader, { title: sectionHeader.title, description: sectionHeader.description }))) : null;\n}\n//# sourceMappingURL=DashboardLayoutSectionHeaderRenderer.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nconst isHiddenStyle = { height: 0, width: 0, overflow: \"hidden\", flex: 0 };\nconst defaultStyle = {};\nexport const DashboardLayoutSectionRenderer = (props) => {\n    const { children, className, debug, isHidden } = props;\n    const style = isHidden ? isHiddenStyle : defaultStyle;\n    return (React.createElement(\"div\", { className: cx([\"gd-fluidlayout-row\", \"s-fluid-layout-row\", className], {\n            \"gd-fluidlayout-row-debug\": debug,\n        }), style: style }, children));\n};\n//# sourceMappingURL=DashboardLayoutSectionRenderer.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardSelector, useDashboardDispatch, selectWidgetsOverlayState, selectSectionModification, uiActions, } from \"../../../model/index.js\";\nimport { getRefsForSection } from \"../refs.js\";\nimport { DashboardItemOverlay } from \"./DashboardItemOverlay.js\";\nexport const DashboardLayoutSectionOverlayController = (props) => {\n    const { section } = props;\n    const dispatch = useDashboardDispatch();\n    const refs = getRefsForSection(section);\n    const overlayShow = useDashboardSelector(selectWidgetsOverlayState(refs));\n    const sectionModifications = useDashboardSelector(selectSectionModification(refs));\n    return (React.createElement(DashboardItemOverlay, { type: \"column\", onHide: () => dispatch(uiActions.toggleWidgetsOverlay({\n            refs: section.items().map((item) => item.ref()),\n            visible: false,\n        })), render: overlayShow, modifications: sectionModifications }));\n};\n//# sourceMappingURL=DashboardItemOverlayController.js.map","// (C) 2022 GoodData Corporation\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nexport function useIsDraggingWidget() {\n    const [{ canDrop: isDraggingWidget }] = useDashboardDrop([\"insightListItem\", \"kpi-placeholder\", \"insight-placeholder\", \"kpi\", \"insight\"], {}, []);\n    return isDraggingWidget;\n}\n//# sourceMappingURL=useIsDraggingWidget.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const HeightResizer = (props) => {\n    const { status } = props;\n    const boxClassName = cx(\"s-gd-fluidlayout-height-resizer\", \"gd-fluidlayout-height-resizer\", status);\n    const lineClassName = cx(\"height-resizer-line\", status);\n    return (React.createElement(\"div\", { className: boxClassName },\n        React.createElement(\"div\", { className: lineClassName })));\n};\n//# sourceMappingURL=HeightResizer.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { fluidLayoutDescriptor, INSIGHT_WIDGET_SIZE_INFO_DEFAULT } from \"@gooddata/sdk-ui-ext\";\nimport isEqual from \"lodash/fp/isEqual.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { useDashboardDrag } from \"../useDashboardDrag.js\";\nimport { isCustomWidgetBase, resizeHeight, selectInsightsMap, selectSettings, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { calculateWidgetMinHeight, getMaxHeight, getMinHeight } from \"../../../_staging/layout/sizing.js\";\nimport { HeightResizer } from \"./HeightResizer.js\";\nimport { useResizeContext } from \"../LayoutResizeContext.js\";\nimport { DEFAULT_WIDTH_RESIZER_HEIGHT } from \"../../layout/constants.js\";\nexport function HeightResizerHotspot({ section, items, screen, getLayoutDimensions, }) {\n    const dispatch = useDashboardDispatch();\n    const insightsMap = useDashboardSelector(selectInsightsMap);\n    const settings = useDashboardSelector(selectSettings);\n    const { resizeDirection, resizeItemIdentifiers, resizeStart, resizeEnd, getScrollCorrection } = useResizeContext();\n    const widgets = useMemo(() => items.map((item) => item.widget()), [items]);\n    const widgetIdentifiers = useMemo(() => widgets.map((widget) => widget.identifier), [widgets]);\n    const customWidgetsRestrictions = useMemo(() => getCustomWidgetRestrictions(items), [items]);\n    const [{ isDragging }, dragRef] = useDashboardDrag({\n        dragItem: () => {\n            const initialLayoutDimensions = getLayoutDimensions();\n            const minLimit = getMinHeight(widgets, insightsMap, customWidgetsRestrictions.heightLimit);\n            const maxLimit = getMaxHeight(widgets, insightsMap);\n            const heightsGR = getHeightsGR(items, insightsMap, screen, settings);\n            return {\n                type: \"internal-height-resizer\",\n                sectionIndex: section.index(),\n                itemIndexes: items.map((item) => item.index()),\n                initialLayoutDimensions,\n                widgetHeights: heightsGR,\n                minLimit,\n                maxLimit,\n            };\n        },\n        dragEnd: (item, monitor) => {\n            var _a;\n            const scrollCorrection = getScrollCorrection();\n            const { sectionIndex, itemIndexes, widgetHeights } = item;\n            const minLimit = getMinHeight(widgets, insightsMap, customWidgetsRestrictions.heightLimit);\n            const maxLimit = getMaxHeight(widgets, insightsMap);\n            const newHeightGR = getNewHeightGR(widgetHeights, ((_a = monitor.getDifferenceFromInitialOffset()) === null || _a === void 0 ? void 0 : _a.y) || 0, scrollCorrection.y, minLimit, maxLimit);\n            dispatch(resizeHeight(sectionIndex, itemIndexes, newHeightGR));\n            resizeEnd();\n        },\n    }, [widgets, insightsMap, customWidgetsRestrictions.heightLimit]);\n    useEffect(() => {\n        if (isDragging) {\n            resizeStart(\"height\", widgetIdentifiers);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- we want to run this only when isDragging changes\n    }, [isDragging]);\n    const areWidgetsResizing = resizeDirection !== \"none\";\n    const isColumnResizing = resizeDirection === \"width\";\n    const isOtherRowResizing = !isEmpty(resizeItemIdentifiers) && !isEqual(resizeItemIdentifiers, widgetIdentifiers);\n    const [isResizerVisible, setResizerVisibility] = useState(false);\n    const onMouseEnter = () => setResizerVisibility(true);\n    const onMouseLeave = () => setResizerVisibility(false);\n    const shouldRenderResizer = (areWidgetsResizing || isResizerVisible) && !isColumnResizing && !isOtherRowResizing;\n    const status = isDragging ? \"muted\" : \"active\";\n    return (React.createElement(\"div\", { className: \"dash-height-resizer-container s-dash-height-resizer-container\" }, customWidgetsRestrictions.allowHeightResize ? (React.createElement(\"div\", { ref: dragRef, className: \"s-dash-height-resizer-hotspot dash-height-resizer-hotspot\", onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave }, shouldRenderResizer ? React.createElement(HeightResizer, { status: status }) : null)) : null));\n}\nexport function getHeightsGR(items, insightMap, screen, settings) {\n    return items.reduce((acc, item) => {\n        var _a, _b, _c;\n        const currentSize = item.sizeForScreen(screen);\n        const widgetMinHeightPX = (_a = calculateWidgetMinHeight(item.widget(), currentSize, insightMap, settings)) !== null && _a !== void 0 ? _a : DEFAULT_WIDTH_RESIZER_HEIGHT;\n        const curHeightGR = fluidLayoutDescriptor.toGridHeight(widgetMinHeightPX);\n        const gridHeight = (_c = (_b = item.sizeForScreen(screen)) === null || _b === void 0 ? void 0 : _b.gridHeight) !== null && _c !== void 0 ? _c : curHeightGR;\n        return [...acc, gridHeight];\n    }, []);\n}\nexport function getNewHeightGR(widgetHeights, offsetYPX, scrollCorrectionY, minLimit, maxLimit) {\n    const currentWidth = Math.max(...widgetHeights);\n    const deltaHeightGR = fluidLayoutDescriptor.toGridHeight(offsetYPX - scrollCorrectionY);\n    return Math.min(maxLimit, Math.max(minLimit, currentWidth + deltaHeightGR));\n}\nfunction getCustomWidgetRestrictions(items) {\n    const customWidgetItems = items.filter((item) => isCustomWidgetBase(item.widget()));\n    const heightLimit = customWidgetItems.reduce((minCustomWidgetHeight, item) => {\n        var _a;\n        const { xl: { gridHeight = INSIGHT_WIDGET_SIZE_INFO_DEFAULT.height.default }, } = (_a = item.size()) !== null && _a !== void 0 ? _a : { xl: {} };\n        return Math.max(minCustomWidgetHeight, gridHeight);\n    }, 0);\n    return {\n        allowHeightResize: customWidgetItems.length < items.length,\n        heightLimit: customWidgetItems.length > 0 ? heightLimit : 0,\n    };\n}\n//# sourceMappingURL=HeightResizerHotspot.js.map","// (C) 2007-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { Col, Row } from \"react-grid-system\";\nimport reverse from \"lodash/fp/reverse.js\";\nimport { HeightResizerHotspot, useIsDraggingWidget } from \"../../dragAndDrop/index.js\";\nimport { DashboardLayoutItem } from \"./DashboardLayoutItem.js\";\nconst defaultItemKeyGetter = ({ item }) => item.index().toString();\nexport function DashboardLayoutGridRowEdit(props) {\n    const { section, itemKeyGetter = defaultItemKeyGetter, gridRowRenderer, itemRenderer, widgetRenderer, getLayoutDimensions, screen, items, renderMode, itemsInRowsByIndex, } = props;\n    const isDraggingWidget = useIsDraggingWidget();\n    const rowItems = useMemo(() => items.map((item) => (React.createElement(DashboardLayoutItem, { key: itemKeyGetter({ item, screen }), item: item, itemRenderer: itemRenderer, widgetRenderer: widgetRenderer, screen: screen }))), [itemKeyGetter, itemRenderer, items, screen, widgetRenderer]);\n    const extendedRows = useMemo(() => isDraggingWidget\n        ? rowItems\n        : reverse(itemsInRowsByIndex).reduce((acc, [index, itemsInRow]) => {\n            return splice(acc, index + 1, 0, React.createElement(Col, { xl: 12, key: `HeightResizerHotspot-${index}`, style: { minHeight: 0 } },\n                React.createElement(HeightResizerHotspot, { key: `HeightResizerHotspot-${index}`, screen: screen, getLayoutDimensions: getLayoutDimensions, section: section, items: itemsInRow })));\n        }, rowItems), [isDraggingWidget, rowItems, itemsInRowsByIndex, screen, getLayoutDimensions, section]);\n    return (React.createElement(Row, { className: \"gd-fluidlayout-row s-gd-fluid-layout-row\" }, gridRowRenderer\n        ? gridRowRenderer({\n            children: extendedRows,\n            screen,\n            section,\n            items,\n            renderMode,\n        })\n        : extendedRows));\n}\nfunction splice(arr, start, deleteCount, ...addItem) {\n    const result = [];\n    if (start > 0) {\n        result.push(...arr.slice(0, start));\n    }\n    result.push(...addItem);\n    const len = result.length - addItem.length;\n    const count = deleteCount <= 0 ? len : len + deleteCount;\n    if (arr[count]) {\n        result.push(...arr.slice(count));\n    }\n    return result;\n}\n//# sourceMappingURL=DashboardLayoutGridRowEdit.js.map","import flatMap from \"lodash/flatMap.js\";\nimport React, { useMemo } from \"react\";\nimport { DashboardLayoutGridRow } from \"./DashboardLayoutGridRow.js\";\nimport { DashboardLayoutSectionHeaderRenderer } from \"./DashboardLayoutSectionHeaderRenderer.js\";\nimport { DashboardLayoutSectionRenderer } from \"./DashboardLayoutSectionRenderer.js\";\nimport { DashboardLayoutSectionOverlayController } from \"../DashboardItemOverlay/DashboardItemOverlayController.js\";\nimport last from \"lodash/last.js\";\nimport { DashboardLayoutGridRowEdit } from \"./DashboardLayoutGridRowEdit.js\";\nconst defaultSectionRenderer = (props) => (React.createElement(DashboardLayoutSectionRenderer, Object.assign({}, props)));\nconst defaultHeaderRenderer = (props) => (React.createElement(DashboardLayoutSectionHeaderRenderer, Object.assign({}, props)));\nconst defaultItemKeyGetter = ({ item }) => item.index().toString();\nexport function DashboardLayoutSection(props) {\n    const { section, sectionRenderer = defaultSectionRenderer, sectionHeaderRenderer = defaultHeaderRenderer, itemKeyGetter = defaultItemKeyGetter, gridRowRenderer, itemRenderer, widgetRenderer, getLayoutDimensions, screen, renderMode, } = props;\n    const renderProps = { section, screen, renderMode };\n    const items = useMemo(() => {\n        if (renderMode === \"edit\") {\n            const itemsInRowsByIndex = section\n                .items()\n                .asGridRows(screen)\n                .map((itemsInRow) => [last(itemsInRow).index(), itemsInRow]);\n            const itemsInRow = section.items().all();\n            return (React.createElement(DashboardLayoutGridRowEdit, { screen: screen, itemsInRowsByIndex: itemsInRowsByIndex, section: section, items: itemsInRow, gridRowRenderer: gridRowRenderer, itemKeyGetter: itemKeyGetter, itemRenderer: itemRenderer, widgetRenderer: widgetRenderer, renderMode: renderMode, getLayoutDimensions: getLayoutDimensions }));\n        }\n        return flatMap(section.items().asGridRows(screen), (itemsInRow, index) => {\n            return (React.createElement(DashboardLayoutGridRow, { key: index.toString(), screen: screen, section: section, items: itemsInRow, gridRowRenderer: gridRowRenderer, itemKeyGetter: itemKeyGetter, itemRenderer: itemRenderer, widgetRenderer: widgetRenderer, renderMode: renderMode, getLayoutDimensions: getLayoutDimensions }));\n        });\n    }, [\n        getLayoutDimensions,\n        gridRowRenderer,\n        itemKeyGetter,\n        itemRenderer,\n        renderMode,\n        screen,\n        section,\n        widgetRenderer,\n    ]);\n    return sectionRenderer(Object.assign(Object.assign({}, renderProps), { DefaultSectionRenderer: DashboardLayoutSectionRenderer, children: (React.createElement(React.Fragment, null,\n            sectionHeaderRenderer({\n                section,\n                screen,\n                DefaultSectionHeaderRenderer: DashboardLayoutSectionHeaderRenderer,\n            }),\n            items,\n            renderMode === \"edit\" ? React.createElement(DashboardLayoutSectionOverlayController, { section: section }) : null)) }));\n}\n//# sourceMappingURL=DashboardLayoutSection.js.map","import cx from \"classnames\";\nimport isEqual from \"lodash/isEqual.js\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Container, ScreenClassProvider, ScreenClassRender, setConfiguration, } from \"react-grid-system\";\nimport { DashboardLayoutFacade } from \"../../../_staging/dashboard/fluidLayout/facade/layout.js\";\nimport { DASHBOARD_LAYOUT_GRID_CONFIGURATION } from \"../../constants/index.js\";\nimport { emptyDOMRect } from \"../constants.js\";\nimport { DashboardLayoutSection } from \"./DashboardLayoutSection.js\";\nimport { getLayoutWithoutGridHeights, getResizedItemPositions, unifyDashboardLayoutItemHeights, } from \"./utils/sizing.js\";\nsetConfiguration(DASHBOARD_LAYOUT_GRID_CONFIGURATION);\nconst removeHeights = (layout, enableCustomHeight) => {\n    if (enableCustomHeight) {\n        return layout;\n    }\n    return getLayoutWithoutGridHeights(layout);\n};\nconst defaultSectionKeyGetter = ({ section }) => section.index().toString();\n/**\n * DashboardLayout is customizable component for rendering {@link IDashboardLayout}.\n *\n * @alpha\n */\nexport function DashboardLayout(props) {\n    const { layout, sectionKeyGetter = defaultSectionKeyGetter, sectionRenderer, sectionHeaderRenderer, itemKeyGetter, itemRenderer, widgetRenderer, gridRowRenderer, className, debug, onMouseLeave, enableCustomHeight, renderMode = \"view\", } = props;\n    const layoutRef = React.useRef(null);\n    const { layoutFacade, resizedItemPositions } = useMemo(() => {\n        const updatedLayout = removeHeights(layout, !!enableCustomHeight);\n        const layoutFacade = DashboardLayoutFacade.for(unifyDashboardLayoutItemHeights(updatedLayout));\n        const resizedItemPositions = getResizedItemPositions(layout, layoutFacade.raw());\n        return { layoutFacade, resizedItemPositions };\n    }, [layout, enableCustomHeight]);\n    const sectionRendererWrapped = useCallback((renderProps) => sectionRenderer ? (sectionRenderer(Object.assign(Object.assign({}, renderProps), { debug }))) : (React.createElement(renderProps.DefaultSectionRenderer, Object.assign({}, renderProps, { debug: debug }))), [debug, sectionRenderer]);\n    const getLayoutDimensions = useCallback(function () {\n        return (layoutRef === null || layoutRef === void 0 ? void 0 : layoutRef.current) ? layoutRef.current.getBoundingClientRect() : emptyDOMRect;\n    }, []);\n    const widgetRendererWrapped = useCallback((renderProps) => {\n        const isResizedByLayoutSizingStrategy = resizedItemPositions.some((position) => isEqual(position, [renderProps.item.section().index(), renderProps.item.index()]));\n        return widgetRenderer ? (widgetRenderer(Object.assign(Object.assign({}, renderProps), { isResizedByLayoutSizingStrategy,\n            debug, getLayoutDimensions: getLayoutDimensions }))) : (React.createElement(renderProps.DefaultWidgetRenderer, Object.assign({}, renderProps, { debug: debug, isResizedByLayoutSizingStrategy: isResizedByLayoutSizingStrategy, getLayoutDimensions: getLayoutDimensions })));\n    }, [debug, resizedItemPositions, widgetRenderer]);\n    return (React.createElement(\"div\", { className: cx(\"gd-fluidlayout-container\", \"s-fluid-layout-container\", \"gd-dashboards\", className), onMouseLeave: onMouseLeave, ref: layoutRef },\n        React.createElement(ScreenClassProvider, { useOwnWidth: false },\n            React.createElement(ScreenClassRender, { render: (screenClass) => {\n                    const screen = screenClass;\n                    return screen ? (React.createElement(Container, { fluid: true, className: \"gd-fluidlayout-layout s-fluid-layout\" }, layoutFacade.sections().map((section) => {\n                        return (React.createElement(DashboardLayoutSection, { key: sectionKeyGetter({ section, screen }), section: section, sectionRenderer: sectionRendererWrapped, sectionHeaderRenderer: sectionHeaderRenderer, itemKeyGetter: itemKeyGetter, itemRenderer: itemRenderer, gridRowRenderer: gridRowRenderer, widgetRenderer: widgetRendererWrapped, screen: screen, renderMode: renderMode, getLayoutDimensions: getLayoutDimensions }));\n                    }))) : null;\n                } }))));\n}\n//# sourceMappingURL=DashboardLayout.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { GD_COLOR_HIGHLIGHT, GD_COLOR_WHITE, INFO_TEXT_COLOR } from \"@gooddata/sdk-ui-kit\";\nexport const DashboardLayoutSectionBorderMarker = (props) => {\n    const { active, className } = props;\n    const background = active ? `var(--gd-palette-primary-base, ${GD_COLOR_HIGHLIGHT})` : \"#E6E6E6\";\n    const color = active ? GD_COLOR_WHITE : INFO_TEXT_COLOR;\n    return (React.createElement(\"svg\", { width: \"20\", height: \"20\", xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", className: className },\n        React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n            React.createElement(\"circle\", { cx: \"10\", cy: \"10\", r: \"10\", fill: background }),\n            React.createElement(\"path\", { d: \"M6.5 9.5H14c.2761424 0 .5.22385763.5.5 0 .2761424-.2238576.5-.5.5H6.5V14c0 .2761424-.22385763.5-.5.5-.27614237 0-.5-.2238576-.5-.5V6c0-.27614237.22385763-.5.5-.5.27614237 0 .5.22385763.5.5v3.5z\", fill: color, fillRule: \"nonzero\" }))));\n};\n//# sourceMappingURL=DashboardLayoutSectionBorderMarker.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DashboardLayoutSectionBorderMarker } from \"./DashboardLayoutSectionBorderMarker.js\";\nexport const DashboardLayoutSectionBorderLine = (props) => {\n    const { position, status } = props;\n    return (React.createElement(\"div\", { className: cx(\"gd-fluidlayout-row-separator\", \"s-fluidlayout-row-separator\", position, status) },\n        React.createElement(DashboardLayoutSectionBorderMarker, { className: \"gd-fluidlayout-row-separator-icon gd-fluidlayout-row-separator-icon-left\", active: props.status === \"active\" }),\n        React.createElement(DashboardLayoutSectionBorderMarker, { className: \"gd-fluidlayout-row-separator-icon gd-fluidlayout-row-separator-icon-right\", active: props.status === \"active\" })));\n};\n//# sourceMappingURL=DashboardLayoutSectionBorderLine.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { DashboardLayoutSectionBorderLine } from \"./DashboardLayoutSectionBorderLine.js\";\nexport const DashboardLayoutSectionBorder = (props) => (React.createElement(React.Fragment, null,\n    React.createElement(DashboardLayoutSectionBorderLine, { position: \"top\", status: props.status }),\n    props.children,\n    React.createElement(DashboardLayoutSectionBorderLine, { position: \"bottom\", status: props.status })));\n//# sourceMappingURL=DashboardLayoutSectionBorder.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DashboardLayoutSectionBorder, useIsDraggingWidget, } from \"../../dragAndDrop/index.js\";\nimport { selectActiveSectionIndex, useDashboardSelector } from \"../../../model/index.js\";\nconst isHiddenStyle = { height: 0, width: 0, overflow: \"hidden\", flex: 0 };\nconst defaultStyle = {};\nfunction useBorderStatus(sectionIndex) {\n    const activeSectionIndex = useDashboardSelector(selectActiveSectionIndex);\n    const isDraggingWidget = useIsDraggingWidget();\n    if (isDraggingWidget) {\n        return \"muted\";\n    }\n    const isActive = activeSectionIndex === sectionIndex;\n    return !isActive ? \"invisible\" : \"muted\";\n}\nexport const EditableDashboardLayoutSectionRenderer = (props) => {\n    const { children, className, debug, isHidden, section } = props;\n    const style = isHidden ? isHiddenStyle : defaultStyle;\n    const status = useBorderStatus(section.index());\n    return (React.createElement(\"div\", { className: cx([\"gd-fluidlayout-row\", \"s-fluid-layout-row\", className], {\n            \"gd-fluidlayout-row-debug\": debug,\n        }), style: style },\n        React.createElement(DashboardLayoutSectionBorder, { status: status }, children)));\n};\n//# sourceMappingURL=EditableDashboardLayoutSectionRenderer.js.map","// (C) 2022 GoodData Corporation\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\nimport { DashboardLayoutSectionRenderer } from \"./DashboardLayoutSectionRenderer.js\";\nimport { EditableDashboardLayoutSectionRenderer } from \"./EditableDashboardLayoutSectionRenderer.js\";\n/**\n * render function for DashboardLayoutSection respecting render mode\n *\n * @internal\n */\nexport const renderModeAwareDashboardLayoutSectionRenderer = renderModeAware({\n    view: DashboardLayoutSectionRenderer,\n    edit: EditableDashboardLayoutSectionRenderer,\n});\n//# sourceMappingURL=RenderModeAwareDashboardLayoutSectionRenderer.js.map","// (C) 2019-2022 GoodData Corporation\nimport React, { useCallback, useState } from \"react\";\nimport { Bubble, EditableLabel } from \"@gooddata/sdk-ui-kit\";\nimport { useIntl } from \"react-intl\";\nconst BUBBLE_ALIGN_POINTS = [{ align: \"bl tl\" }];\nconst ARROW_OFFSETS = { \"bl tl\": [0, 7] };\nconst BUBBLE_STYLE = \"bubble-primary\";\nexport function EditableLabelWithBubble({ onEditingStart, maxLength, value, warningLimit, onCancel, alignTo, className, maxRows, placeholderMessage, children, onSubmit, }) {\n    const intl = useIntl();\n    const [currentValue, setCurrentValue] = useState(value);\n    const [editing, setEditing] = useState(false);\n    const charactersCountLeft = maxLength - currentValue.length;\n    const maximumCharactersCount = maxLength;\n    const bubbleMessage = intl.formatMessage({ id: \"layout.header.characters.left\" }, { currentCharactersCount: charactersCountLeft, maximumCharactersCount });\n    const currentValueLength = currentValue.length;\n    const isBubbleVisible = editing && maxLength - currentValueLength <= warningLimit;\n    const onStart = useCallback(() => {\n        setEditing(true);\n        onEditingStart === null || onEditingStart === void 0 ? void 0 : onEditingStart();\n    }, [onEditingStart]);\n    const onCancelCallback = useCallback(() => {\n        setEditing(false);\n        setCurrentValue(value);\n        onCancel === null || onCancel === void 0 ? void 0 : onCancel();\n    }, [onCancel, value]);\n    const onSubmitCallback = useCallback((newValue) => {\n        setEditing(false);\n        setCurrentValue(newValue);\n        onSubmit(newValue);\n    }, [onSubmit]);\n    const onChange = useCallback((newValue) => {\n        setCurrentValue(newValue);\n    }, []);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EditableLabel, { className: className, maxRows: maxRows, value: value, maxLength: maxLength, placeholder: placeholderMessage, onEditingStart: onStart, onCancel: onCancelCallback, onChange: onChange, onSubmit: onSubmitCallback }, children),\n        isBubbleVisible ? (React.createElement(Bubble, { alignTo: alignTo, className: BUBBLE_STYLE, alignPoints: BUBBLE_ALIGN_POINTS, arrowOffsets: ARROW_OFFSETS }, bubbleMessage)) : null));\n}\n//# sourceMappingURL=EditableLabelWithBubble.js.map","// (C) 2019-2022 GoodData Corporation\nexport const MAX_TITLE_LENGTH = 256;\nexport const MAX_DESCRIPTION_LENGTH = 1024;\nexport const TITLE_LENGTH_WARNING_LIMIT = 128;\nexport const DESCRIPTION_LENGTH_WARNING_LIMIT = 512;\nexport function getTitle(title) {\n    if (title && title.length > MAX_TITLE_LENGTH) {\n        return title.substring(0, MAX_TITLE_LENGTH) + \"...\";\n    }\n    return title;\n}\nexport function getDescription(description) {\n    if (description && description.length > MAX_DESCRIPTION_LENGTH) {\n        return description.substring(0, MAX_DESCRIPTION_LENGTH) + \"...\";\n    }\n    return description;\n}\n//# sourceMappingURL=sectionHeaderHelper.js.map","// (C) 2019-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { EditableLabelWithBubble } from \"./EditableLabelWithBubble.js\";\nimport { getTitle, getDescription, MAX_TITLE_LENGTH, TITLE_LENGTH_WARNING_LIMIT, MAX_DESCRIPTION_LENGTH, DESCRIPTION_LENGTH_WARNING_LIMIT, } from \"./sectionHeaderHelper.js\";\nimport { changeLayoutSectionHeader, uiActions, useDashboardDispatch } from \"../../../../model/index.js\";\nexport function SectionHeaderEditable(props) {\n    const description = getDescription(props.description);\n    const title = getTitle(props.title);\n    const { index } = props;\n    const intl = useIntl();\n    const dispatch = useDashboardDispatch();\n    const changeTitle = useCallback((title) => dispatch(changeLayoutSectionHeader(index, { title }, true)), [dispatch, index]);\n    const changeDescription = useCallback((description) => dispatch(changeLayoutSectionHeader(index, { description }, true)), [dispatch, index]);\n    const onEditingStart = useCallback(() => {\n        dispatch(uiActions.setActiveSectionIndex(index));\n    }, [dispatch, index]);\n    const onEditingEnd = useCallback(() => {\n        dispatch(uiActions.clearActiveSectionIndex());\n    }, [dispatch]);\n    const onTitleSubmit = useCallback((title) => {\n        changeTitle(title);\n        onEditingEnd();\n    }, [changeTitle, onEditingEnd]);\n    const onDescriptionSubmit = useCallback((description) => {\n        changeDescription(description);\n        onEditingEnd();\n    }, [changeDescription, onEditingEnd]);\n    return (React.createElement(\"div\", { className: \"gd-row-header-edit\" },\n        React.createElement(\"div\", { className: \"gd-editable-label-container gd-row-header-title-wrapper\" },\n            React.createElement(EditableLabelWithBubble, { className: `gd-title-for-${index} s-fluid-layout-row-title-input title gd-heading-2`, maxRows: 10, value: title || \"\", maxLength: MAX_TITLE_LENGTH, warningLimit: TITLE_LENGTH_WARNING_LIMIT, placeholderMessage: intl.formatMessage({ id: \"layout.header.add.title.placeholder\" }), alignTo: `.gd-title-for-${index}`, onSubmit: onTitleSubmit, onEditingStart: onEditingStart, onCancel: onEditingEnd })),\n        React.createElement(\"div\", { className: \"gd-editable-label-container gd-row-header-description-wrapper\" },\n            React.createElement(EditableLabelWithBubble, { className: `gd-description-for-${index} s-fluid-layout-row-description-input description`, alignTo: `.gd-description-for-${index}`, maxRows: 15, value: description || \"\", maxLength: MAX_DESCRIPTION_LENGTH, warningLimit: DESCRIPTION_LENGTH_WARNING_LIMIT, placeholderMessage: intl.formatMessage({\n                    id: \"layout.header.add.description.placeholder\",\n                }), onSubmit: onDescriptionSubmit, onEditingStart: onEditingStart, onCancel: onEditingEnd }))));\n}\n//# sourceMappingURL=SectionHeaderEditable.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { DashboardLayoutSectionBorder } from \"./DashboardLayoutSectionBorder/index.js\";\nexport const SectionDropZoneBox = (props) => {\n    const { isOver } = props;\n    return (React.createElement(\"div\", { className: \"new-row-dropzone\" },\n        React.createElement(DashboardLayoutSectionBorder, { status: isOver ? \"active\" : \"muted\" },\n            React.createElement(\"div\", { className: cx(\"drag-info-placeholder\", \"widget-dropzone-box\", \"s-last-drop-position\", \"type-kpi\") },\n                React.createElement(\"div\", { className: cx(\"drag-info-placeholder-inner\", \"can-drop\", { \"is-over\": isOver }) },\n                    React.createElement(\"div\", { className: \"drag-info-placeholder-drop-target\" },\n                        React.createElement(\"div\", { className: \"drop-target-inner\" },\n                            React.createElement(Typography, { tagName: \"p\", className: \"drop-target-message kpi-drop-target\" },\n                                React.createElement(FormattedMessage, { id: \"dropzone.new.row.desc\", values: {\n                                        b: (chunks) => React.createElement(\"b\", null, chunks),\n                                        nbsp: React.createElement(React.Fragment, null, \"\\u00A0\"),\n                                    } })))))))));\n};\n//# sourceMappingURL=SectionDropZoneBox.js.map","// (C) 2022 GoodData Corporation\nimport cx from \"classnames\";\nimport React, { useEffect } from \"react\";\nimport { useDashboardDispatch } from \"../../../model/index.js\";\nimport { isBaseDraggableMovingItem, isInsightDraggableItem, isInsightDraggableListItem, isInsightPlaceholderDraggableItem, isKpiDraggableItem, isKpiPlaceholderDraggableItem, } from \"../types.js\";\nimport { getDropZoneDebugStyle } from \"../debug.js\";\nimport { useDashboardDrop } from \"../useDashboardDrop.js\";\nimport { SectionDropZoneBox } from \"./SectionDropZoneBox.js\";\nimport { useMoveWidgetToNewSectionDropHandler } from \"./useMoveWidgetToNewSectionDropHandler.js\";\nimport { useNewSectionInsightListItemDropHandler } from \"./useNewSectionInsightListItemDropHandler.js\";\nimport { useNewSectionInsightPlaceholderDropHandler } from \"./useNewSectionInsightPlaceholderDropHandler.js\";\nimport { useNewSectionKpiPlaceholderDropHandler } from \"./useNewSectionKpiPlaceholderDropHandler.js\";\nimport { useWidgetDragHoverHandlers } from \"./useWidgetDragHoverHandlers.js\";\nexport const SectionHotspot = (props) => {\n    const { index, targetPosition } = props;\n    const dispatch = useDashboardDispatch();\n    const handleInsightListItemDrop = useNewSectionInsightListItemDropHandler(index);\n    const handleKpiPlaceholderDrop = useNewSectionKpiPlaceholderDropHandler(index);\n    const handleInsightPlaceholderDrop = useNewSectionInsightPlaceholderDropHandler(index);\n    const moveWidgetToNewSection = useMoveWidgetToNewSectionDropHandler(index);\n    const { handleDragHoverEnd } = useWidgetDragHoverHandlers();\n    const [{ canDrop, isOver }, dropRef] = useDashboardDrop([\"insightListItem\", \"kpi-placeholder\", \"insight-placeholder\", \"kpi\", \"insight\"], {\n        drop: (item) => {\n            if (isInsightDraggableListItem(item)) {\n                handleInsightListItemDrop(item.insight);\n            }\n            if (isInsightDraggableItem(item)) {\n                moveWidgetToNewSection(item);\n            }\n            if (isInsightPlaceholderDraggableItem(item)) {\n                handleInsightPlaceholderDrop();\n            }\n            if (isKpiDraggableItem(item)) {\n                moveWidgetToNewSection(item);\n            }\n            if (isKpiPlaceholderDraggableItem(item)) {\n                handleKpiPlaceholderDrop();\n            }\n        },\n        canDrop: (item) => {\n            if (isBaseDraggableMovingItem(item)) {\n                const isAdjacentSection = index === item.sectionIndex || index === item.sectionIndex + 1;\n                return !(item.isOnlyItemInSection && isAdjacentSection);\n            }\n            return true;\n        },\n    }, [dispatch, index, handleInsightListItemDrop, handleKpiPlaceholderDrop, handleInsightPlaceholderDrop]);\n    useEffect(() => {\n        if (isOver) {\n            handleDragHoverEnd();\n        }\n    }, [handleDragHoverEnd, isOver]);\n    if (!canDrop) {\n        return null;\n    }\n    const isLast = targetPosition === \"below\";\n    const debugStyle = getDropZoneDebugStyle({ isOver });\n    return (React.createElement(\"div\", { className: cx(\"row-hotspot-container\", {\n            last: isLast && canDrop,\n            \"s-last-drop-position\": isLast && canDrop,\n            hidden: !canDrop,\n        }) },\n        React.createElement(\"div\", { className: cx(\"row-hotspot\", { hidden: !canDrop }), style: Object.assign({}, debugStyle), ref: dropRef }, !!isOver && React.createElement(SectionDropZoneBox, { isOver: isOver }))));\n};\n//# sourceMappingURL=SectionHotspot.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { useDashboardDispatch, moveSectionItemToNewSectionAndRemoveOriginalSectionIfEmpty, } from \"../../../model/index.js\";\nexport function useMoveWidgetToNewSectionDropHandler(newSectionIndex) {\n    const dispatch = useDashboardDispatch();\n    return useCallback((item) => dispatch(moveSectionItemToNewSectionAndRemoveOriginalSectionIfEmpty(item.sectionIndex, item.itemIndex, newSectionIndex)), [dispatch, newSectionIndex]);\n}\n//# sourceMappingURL=useMoveWidgetToNewSectionDropHandler.js.map","// (C) 2022 GoodData Corporation\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\nimport { DashboardLayoutSectionHeaderRenderer } from \"./DashboardLayoutSectionHeaderRenderer.js\";\nimport { DashboardLayoutEditSectionHeaderRenderer } from \"./DashboardLayoutEditSectionHeaderRenderer.js\";\n/**\n * render function for DashboardLayoutSectionHeader respecting render mode\n *\n * @internal\n */\nexport const renderModeAwareDashboardLayoutSectionHeaderRenderer = renderModeAware({\n    view: DashboardLayoutSectionHeaderRenderer,\n    edit: DashboardLayoutEditSectionHeaderRenderer,\n});\n//# sourceMappingURL=RenderModeAwareDashboardLayoutSectionHeaderRenderer.js.map","// (C) 2019-2023 GoodData Corporation\nimport * as React from \"react\";\nimport { DashboardLayoutSectionHeader } from \"./DashboardLayoutSectionHeader.js\";\nimport { SectionHeaderEditable } from \"./EditableHeader/SectionHeaderEditable.js\";\nimport { emptyItemFacadeWithFullSize } from \"./utils/emptyFacade.js\";\nimport { SectionHotspot } from \"../../dragAndDrop/index.js\";\nimport { isInitialPlaceholderWidget } from \"../../../widgets/index.js\";\nimport { DashboardLayoutItemViewRenderer } from \"./DashboardLayoutItemViewRenderer.js\";\nimport { getRefsForSection } from \"../refs.js\";\nimport { selectIsSectionInsertedByPlugin, useDashboardSelector } from \"../../../model/index.js\";\nexport function DashboardLayoutEditSectionHeaderRenderer(props) {\n    const { section, screen } = props;\n    const sectionHeader = section.header();\n    const isInitialDropzone = section.index() === 0 && section.items().every((i) => isInitialPlaceholderWidget(i.widget()));\n    const refs = getRefsForSection(section);\n    const isEditingDisabled = useDashboardSelector(selectIsSectionInsertedByPlugin(refs));\n    return (React.createElement(DashboardLayoutItemViewRenderer, { DefaultItemRenderer: DashboardLayoutItemViewRenderer, item: emptyItemFacadeWithFullSize, screen: screen },\n        React.createElement(DashboardLayoutSectionHeader, { title: sectionHeader === null || sectionHeader === void 0 ? void 0 : sectionHeader.title, description: sectionHeader === null || sectionHeader === void 0 ? void 0 : sectionHeader.description, renderBeforeHeader: !isInitialDropzone && React.createElement(SectionHotspot, { index: section.index(), targetPosition: \"above\" }), renderHeader: !isInitialDropzone && !isEditingDisabled ? (React.createElement(SectionHeaderEditable, { title: (sectionHeader === null || sectionHeader === void 0 ? void 0 : sectionHeader.title) || \"\", description: (sectionHeader === null || sectionHeader === void 0 ? void 0 : sectionHeader.description) || \"\", index: section.index() })) : undefined })));\n}\n//# sourceMappingURL=DashboardLayoutEditSectionHeaderRenderer.js.map","// (C) 2022 GoodData Corporation\nimport { renderModeAware } from \"../componentDefinition/index.js\";\nimport { EmptyDashboardDropZone } from \"../dragAndDrop/index.js\";\nimport { EmptyDashboardError } from \"./EmptyDashboardError.js\";\nexport const EmptyDashboardLayout = renderModeAware({\n    view: EmptyDashboardError,\n    edit: EmptyDashboardDropZone,\n});\n//# sourceMappingURL=EmptyDashboardLayout.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\nexport const EmptyDashboardError = () => {\n    const intl = useIntl();\n    const { ErrorComponent } = useDashboardComponentsContext();\n    return (React.createElement(ErrorComponent, { className: \"s-layout-error\", message: intl.formatMessage({ id: \"dashboard.error.empty.heading\" }), description: intl.formatMessage({ id: \"dashboard.error.empty.text\" }) }));\n};\n//# sourceMappingURL=EmptyDashboardError.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { objRefToString, isWidget, } from \"@gooddata/sdk-model\";\nimport { LRUCache } from \"lru-cache\";\nimport max from \"lodash/max.js\";\nimport { useDashboardSelector, selectIsExport, selectIsLayoutEmpty, selectLayout, selectInsightsMap, selectEnableWidgetCustomHeight, selectRenderMode, } from \"../../model/index.js\";\nimport { DashboardLayoutWidget } from \"./DashboardLayoutWidget.js\";\nimport { DashboardLayout, DashboardLayoutBuilder, } from \"./DefaultDashboardLayoutRenderer/index.js\";\nimport { renderModeAwareDashboardLayoutSectionRenderer } from \"./DefaultDashboardLayoutRenderer/RenderModeAwareDashboardLayoutSectionRenderer.js\";\nimport { renderModeAwareDashboardLayoutSectionHeaderRenderer } from \"./DefaultDashboardLayoutRenderer/RenderModeAwareDashboardLayoutSectionHeaderRenderer.js\";\nimport { getMemoizedWidgetSanitizer } from \"./DefaultDashboardLayoutUtils.js\";\nimport { SectionHotspot } from \"../dragAndDrop/index.js\";\nimport { isInitialPlaceholderWidget } from \"../../widgets/index.js\";\nimport { EmptyDashboardLayout } from \"./EmptyDashboardLayout.js\";\n/**\n * Get dashboard layout for exports.\n *  - Create new extra rows if current row has width of widgets greater than 12\n *\n * @internal\n * @param layout - dashboard layout to modify\n * @returns transformed layout\n */\nfunction getDashboardLayoutForExport(layout) {\n    const dashLayout = DashboardLayoutBuilder.for(layout);\n    const layoutFacade = dashLayout.facade();\n    const sections = layoutFacade.sections();\n    const screenSplitSections = sections.map((section) => ({\n        items: section.items().asGridRows(\"xl\"),\n        header: section.header(),\n    }));\n    dashLayout.removeSections();\n    screenSplitSections.forEach((wrappedSection) => {\n        wrappedSection.items.forEach((rowSection, index) => {\n            // Also ensure that all items in a section have equal grid height - the max one.\n            // This simulates non-export mode, where the flex-box stretches\n            // all the items in a row to the equal height.\n            // This is necessary as we have no control over the custom widgets heights.\n            const sectionItemsGridHeights = rowSection.map((item) => item.size().xl.gridHeight);\n            const maxGridHeight = max(sectionItemsGridHeights);\n            dashLayout.createSection((section) => {\n                rowSection.forEach((item) => {\n                    if (index === 0) {\n                        section.header(wrappedSection.header);\n                    }\n                    section.createItem(Object.assign(Object.assign({}, item.size().xl), { gridHeight: maxGridHeight }), (i) => i.widget(item.widget()));\n                });\n                return section;\n            });\n        });\n    });\n    return dashLayout.build();\n}\nconst itemKeyGetter = (keyGetterProps) => {\n    const widget = keyGetterProps.item.widget();\n    if (isWidget(widget)) {\n        return objRefToString(widget.ref);\n    }\n    return keyGetterProps.item.index().toString();\n};\n/**\n * @alpha\n */\nexport const DefaultDashboardLayout = (props) => {\n    const { onFiltersChange, onDrill, onError } = props;\n    const layout = useDashboardSelector(selectLayout);\n    const isLayoutEmpty = useDashboardSelector(selectIsLayoutEmpty);\n    const enableWidgetCustomHeight = useDashboardSelector(selectEnableWidgetCustomHeight);\n    const insights = useDashboardSelector(selectInsightsMap);\n    const isExport = useDashboardSelector(selectIsExport);\n    const renderMode = useDashboardSelector(selectRenderMode);\n    const getInsightByRef = useCallback((insightRef) => {\n        return insights.get(insightRef);\n    }, [insights]);\n    const sanitizeWidgets = useMemo(() => {\n        // keep the cache local so that it is cleared when the dashboard changes for example and this component is remounted\n        const cache = new LRUCache({ max: 100 });\n        return getMemoizedWidgetSanitizer(cache);\n    }, []);\n    const transformedLayout = useMemo(() => {\n        if (isExport) {\n            return getDashboardLayoutForExport(layout);\n        }\n        return DashboardLayoutBuilder.for(layout)\n            .modifySections((section) => section.modifyItems(sanitizeWidgets(getInsightByRef, enableWidgetCustomHeight)))\n            .build();\n    }, [layout, isExport, getInsightByRef, enableWidgetCustomHeight, sanitizeWidgets]);\n    const widgetRenderer = useCallback((renderProps) => {\n        return (React.createElement(DashboardLayoutWidget, Object.assign({ onError: onError, onDrill: onDrill, onFiltersChange: onFiltersChange }, renderProps)));\n    }, [onError, onDrill, onFiltersChange]);\n    if (isLayoutEmpty) {\n        return React.createElement(EmptyDashboardLayout, null);\n    }\n    // do not render the tailing section hotspot if there is only one section in the layout and it has only initial placeholders in it\n    const shouldRenderSectionHotspot = transformedLayout.sections.length > 1 ||\n        transformedLayout.sections[0].items.some((i) => !isInitialPlaceholderWidget(i.widget));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DashboardLayout, { className: isExport ? \"export-mode\" : \"\", layout: transformedLayout, itemKeyGetter: itemKeyGetter, widgetRenderer: widgetRenderer, enableCustomHeight: enableWidgetCustomHeight, sectionRenderer: renderModeAwareDashboardLayoutSectionRenderer, sectionHeaderRenderer: renderModeAwareDashboardLayoutSectionHeaderRenderer, renderMode: renderMode }),\n        !!shouldRenderSectionHotspot && (React.createElement(SectionHotspot, { index: transformedLayout.sections.length, targetPosition: \"below\" }))));\n};\n//# sourceMappingURL=DefaultDashboardLayout.js.map","// (C) 2020-2023 GoodData Corporation\nimport { insightId, insightUri, isWidget, widgetUri, widgetId, isInsightWidget, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport stringify from \"json-stable-stringify\";\nimport flow from \"lodash/flow.js\";\nimport { validateDashboardLayoutWidgetSize, } from \"./DefaultDashboardLayoutRenderer/index.js\";\n/**\n * We need to aggressively memoize the widget sanitization results in order to prevent expensive re-renders\n * down the line - we need to keep the widgets referentially equal whenever they are not changed.\n */\nexport const getMemoizedWidgetSanitizer = (cache) => (getInsightByRef, enableKDWidgetCustomHeight) => {\n    return (item) => {\n        const widget = item.facade().widget();\n        const insightAvailable = isInsightWidget(widget) && !!getInsightByRef(widget.insight);\n        // we need to check if the result was made with insight available or not, it might change the result\n        // of polluteWidgetRefsWithBothIdAndUri which touches the insight as well\n        const cacheKey = `${stringify(item.facade().raw(), { space: 0 })}__${insightAvailable}`;\n        if (!cache.has(cacheKey)) {\n            const resultBuilder = flow(polluteWidgetRefsWithBothIdAndUri(getInsightByRef), validateItemsSize(getInsightByRef, enableKDWidgetCustomHeight))(item);\n            cache.set(cacheKey, resultBuilder.build());\n        }\n        return item.setItem(cache.get(cacheKey));\n    };\n};\n/**\n * Ensure that areObjRefsEqual() and other predicates will be working with uncontrolled user ref inputs\n * in custom layout transformation and/or custom widget/item renderers.\n *\n * @internal\n */\nexport function polluteWidgetRefsWithBothIdAndUri(getInsightByRef) {\n    return (item) => item.widget((c) => {\n        let updatedContent = c;\n        if (isWidget(updatedContent)) {\n            updatedContent = Object.assign(Object.assign({}, updatedContent), { ref: Object.assign(Object.assign({}, updatedContent.ref), { uri: widgetUri(updatedContent), identifier: widgetId(updatedContent) }) });\n        }\n        if (isInsightWidget(updatedContent)) {\n            const insight = getInsightByRef(updatedContent.insight);\n            // sometimes this seems to be called sooner than insights are loaded leading to invariant errors\n            // since the behavior is nearly impossible to replicate reliably, let's be defensive here\n            if (insight) {\n                updatedContent = Object.assign(Object.assign({}, updatedContent), { insight: Object.assign(Object.assign({}, updatedContent.insight), { uri: insightUri(insight), identifier: insightId(insight) }) });\n            }\n        }\n        return updatedContent;\n    });\n}\n/**\n * Ensure the insight widgets conform to their allowed sizes.\n *\n * @internal\n */\nexport function validateItemsSize(getInsightByRef, enableKDWidgetCustomHeight) {\n    return (item) => {\n        const widget = item.facade().widget();\n        if (isInsightWidget(widget)) {\n            const insight = getInsightByRef(widget.insight);\n            invariant(insight, \"Inconsistent insight store\");\n            const currentSize = item.facade().size().xl;\n            const { gridWidth: currentWidth, gridHeight: currentHeight } = currentSize;\n            const { validWidth, validHeight } = validateDashboardLayoutWidgetSize(currentWidth, currentHeight, \"insight\", insight, { enableKDWidgetCustomHeight });\n            if (currentWidth !== validWidth || currentHeight !== validHeight) {\n                const gridWidthProp = currentWidth !== validWidth ? { gridWidth: validWidth } : {};\n                const gridHeightProp = currentHeight !== validHeight ? { gridHeight: validHeight } : {};\n                return item.size({\n                    xl: Object.assign(Object.assign(Object.assign({}, currentSize), gridWidthProp), gridHeightProp),\n                });\n            }\n        }\n        return item;\n    };\n}\n//# sourceMappingURL=DefaultDashboardLayoutUtils.js.map","import { __rest } from \"tslib\";\n// (C) 2020 GoodData Corporation\nimport React, { PureComponent } from \"react\";\nimport { Overlay } from \"../Overlay/index.js\";\nimport { ConfirmDialogBase } from \"./ConfirmDialogBase.js\";\n/**\n * @internal\n */\nexport class ConfirmDialog extends PureComponent {\n    render() {\n        const _a = this.props, { containerClassName } = _a, dialogProps = __rest(_a, [\"containerClassName\"]);\n        return (React.createElement(Overlay, { alignPoints: [\n                {\n                    align: \"cc cc\",\n                },\n            ], isModal: true, positionType: \"fixed\", containerClassName: containerClassName },\n            React.createElement(ConfirmDialogBase, Object.assign({}, dialogProps))));\n    }\n}\n//# sourceMappingURL=ConfirmDialog.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { ConfirmDialog, Input, Message, Typography } from \"@gooddata/sdk-ui-kit\";\nimport compact from \"lodash/compact.js\";\nimport first from \"lodash/first.js\";\nimport noop from \"lodash/noop.js\";\nimport { IntlWrapper } from \"../../localization/index.js\";\nimport { DASHBOARD_TITLE_MAX_LENGTH } from \"../../constants/index.js\";\nimport { messages } from \"../../../locales.js\";\n/**\n * @internal\n */\nexport class SaveAsNewDashboardDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.handleTitleFocus = (e) => {\n            e.target.select();\n        };\n        this.handleTitleBlur = (e) => {\n            const dashboardTitle = e.target.value.trim();\n            this.setState({\n                dashboardTitle: dashboardTitle === \"\" ? this.getDefaultDashboardTitle() : dashboardTitle,\n            });\n        };\n        this.handleTitleChange = (value) => {\n            this.setState({\n                dashboardTitle: value,\n            });\n        };\n        this.onSubmit = () => {\n            const title = this.state.dashboardTitle.trim();\n            if (this.canCreateDashboard() && title !== \"\") {\n                this.props.onSubmit(title, true, // switch to the new dashboard\n                // do not reuse the filter context in edit mode, create a new one with the current filter state\n                // otherwise use the original filter context values when creating a copy\n                !this.props.isInEditMode);\n            }\n        };\n        this.getNoteText = () => {\n            const { isKpiWidgetEnabled, isScheduleEmailsEnabled, intl } = this.props;\n            const messageId = first(compact([\n                isKpiWidgetEnabled && isScheduleEmailsEnabled && messages.saveAsNewAlertsAndEmailsMessage.id,\n                isKpiWidgetEnabled && !isScheduleEmailsEnabled && messages.saveAsNewAlertsMessage.id,\n                !isKpiWidgetEnabled && isScheduleEmailsEnabled && messages.saveAsNewEmailsMessage.id,\n            ]));\n            return messageId ? intl.formatMessage({ id: messageId }) : \"\";\n        };\n        const defaultDashboardTitle = this.getDefaultDashboardTitle();\n        this.state = {\n            dashboardTitle: defaultDashboardTitle,\n        };\n    }\n    getDefaultDashboardTitle() {\n        return this.props.intl.formatMessage({ id: \"dialogs.save.as.new.default.title\" }, {\n            title: this.props.dashboardTitle,\n        });\n    }\n    canCreateDashboard() {\n        const { isDashboardLoaded, isDashboardSaving } = this.props;\n        return isDashboardLoaded && !isDashboardSaving;\n    }\n    render() {\n        const { intl: { formatMessage }, onCancel = noop, isDashboardSaving, } = this.props;\n        const { dashboardTitle } = this.state;\n        const noteText = this.getNoteText();\n        return (React.createElement(ConfirmDialog, { onCancel: onCancel, onSubmit: this.onSubmit, isPositive: true, className: \"s-dialog save-as-new-dialog\", headline: formatMessage({ id: \"dialogs.save.as.new.title\" }), cancelButtonText: formatMessage({ id: \"cancel\" }), submitButtonText: formatMessage({ id: \"create.dashboard\" }), isSubmitDisabled: isDashboardSaving || dashboardTitle.trim() === \"\" },\n            React.createElement(Typography, { tagName: \"p\", className: \"dashboard-note\" }, formatMessage({ id: \"dialogs.save.as.new.desc\" })),\n            React.createElement(\"div\", { className: \"dashboard-title\" },\n                React.createElement(Input, { autofocus: true, maxlength: DASHBOARD_TITLE_MAX_LENGTH, onFocus: this.handleTitleFocus, onBlur: this.handleTitleBlur, value: dashboardTitle, placeholder: this.getDefaultDashboardTitle(), onChange: this.handleTitleChange })),\n            noteText ? React.createElement(Message, { type: \"progress\" }, noteText) : null));\n    }\n}\nexport const SaveAsDialogRendererIntl = injectIntl(SaveAsNewDashboardDialog);\nexport const SaveAsDialogRenderer = (props) => (React.createElement(IntlWrapper, { locale: props.locale },\n    React.createElement(SaveAsDialogRendererIntl, Object.assign({}, props))));\n//# sourceMappingURL=SaveAsDialogRenderer.js.map","// (C) 2021 GoodData Corporation\nexport const DASHBOARD_TITLE_MAX_LENGTH = 255;\n//# sourceMappingURL=dashboard.js.map","// (C) 2019-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useToastMessage } from \"@gooddata/sdk-ui-kit\";\nimport { useSaveAs } from \"./useSaveAs.js\";\nimport { SaveAsDialogRenderer } from \"./SaveAsDialogRenderer.js\";\nimport { messages } from \"../../../locales.js\";\nimport { selectIsSaveAsDialogOpen, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport function useSaveAsDialogProps() {\n    const { addSuccess, addError } = useToastMessage();\n    const dispatch = useDashboardDispatch();\n    const closeSaveAsDialog = useCallback(() => dispatch(uiActions.closeSaveAsDialog()), [dispatch]);\n    const isSaveAsDialogOpen = useDashboardSelector(selectIsSaveAsDialogOpen);\n    const onSaveAsError = useCallback(() => {\n        closeSaveAsDialog();\n        addError(messages.messagesDashboardSaveFailed);\n    }, [closeSaveAsDialog, addError]);\n    const onSaveAsSuccess = useCallback(() => {\n        closeSaveAsDialog();\n        addSuccess(messages.messagesDashboardSaveSuccess);\n    }, [closeSaveAsDialog, addSuccess]);\n    const onSaveAsCancel = useCallback(() => {\n        closeSaveAsDialog();\n    }, [closeSaveAsDialog]);\n    return {\n        isVisible: isSaveAsDialogOpen,\n        onCancel: onSaveAsCancel,\n        onError: onSaveAsError,\n        onSuccess: onSaveAsSuccess,\n    };\n}\n/**\n * @alpha\n */\nexport const DefaultSaveAsDialog = (props) => {\n    const { onSubmit, onCancel, onError, isVisible, onSuccess } = props;\n    const { locale, dashboardTitle, isKpiWidgetEnabled, isScheduleEmailsEnabled, isDashboardSaving, isDashboardLoaded, handleSaveAs, isInEditMode, } = useSaveAs({ onSubmit, onSubmitSuccess: onSuccess, onSubmitError: onError });\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(SaveAsDialogRenderer, { locale: locale, dashboardTitle: dashboardTitle, isKpiWidgetEnabled: isKpiWidgetEnabled, isDashboardLoaded: isDashboardLoaded, isDashboardSaving: isDashboardSaving, isScheduleEmailsEnabled: isScheduleEmailsEnabled, isInEditMode: isInEditMode, onSubmit: handleSaveAs, onCancel: onCancel }));\n};\n//# sourceMappingURL=index.js.map","// (C) 2019-2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { saveDashboardAs, selectBackendCapabilities, selectDashboardTitle, selectEnableKPIDashboardSchedule, selectIsDashboardSaving, selectIsInEditMode, selectLocale, useDashboardCommandProcessing, useDashboardSelector, } from \"../../../model/index.js\";\nexport const useSaveAs = (props) => {\n    var _a;\n    const { onSubmit, onSubmitSuccess, onSubmitError } = props;\n    const locale = useDashboardSelector(selectLocale);\n    const dashboardTitle = useDashboardSelector(selectDashboardTitle);\n    const isScheduleEmailsEnabled = useDashboardSelector(selectEnableKPIDashboardSchedule);\n    const capabilities = useDashboardSelector(selectBackendCapabilities);\n    const isDashboardSaving = useDashboardSelector(selectIsDashboardSaving);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const saveAsCommandProcessing = useDashboardCommandProcessing({\n        commandCreator: saveDashboardAs,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.COPY_SAVED\",\n        onError: (event) => {\n            onSubmitError === null || onSubmitError === void 0 ? void 0 : onSubmitError(event.payload.error);\n        },\n        onSuccess: (event) => {\n            onSubmitSuccess === null || onSubmitSuccess === void 0 ? void 0 : onSubmitSuccess(event.payload.dashboard);\n        },\n        onBeforeRun: (cmd) => {\n            onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(cmd.payload.title, cmd.payload.switchToCopy);\n        },\n    });\n    const handleSaveAs = useCallback((title, switchToDashboard = false, useOriginalFilterContext = true) => {\n        saveAsCommandProcessing.run(title, switchToDashboard, useOriginalFilterContext);\n    }, []);\n    return {\n        locale,\n        dashboardTitle,\n        isScheduleEmailsEnabled,\n        isKpiWidgetEnabled: (_a = capabilities.supportsKpiWidget) !== null && _a !== void 0 ? _a : false,\n        isDashboardLoaded: true,\n        isDashboardSaving,\n        isInEditMode,\n        handleSaveAs,\n        saveAsStatus: saveAsCommandProcessing.status,\n    };\n};\n//# sourceMappingURL=useSaveAs.js.map","// (C) 2019-2022 GoodData Corporation\nimport moment from \"moment\";\nexport const HOURS_IN_DAY = 24;\nexport const TIME_ANCHOR = 30;\nconst TIME_FORMAT = \"hh:mm A\";\n/**\n * @internal\n */\nexport function formatTime(h, m, format) {\n    return moment()\n        .hours(h)\n        .minutes(m)\n        .format(format || TIME_FORMAT);\n}\nexport function updateTime(h, m) {\n    const selectedTime = new Date();\n    selectedTime.setHours(h);\n    selectedTime.setMinutes(m);\n    selectedTime.setSeconds(0);\n    selectedTime.setMilliseconds(0);\n    return selectedTime;\n}\n/**\n * @internal\n * export normalizeTime function for use outside this component\n * return 7:30 if time is 7:25\n * return 8:00 if time is 7:35\n * return 0:00 if time is 23:45\n */\nexport function normalizeTime(time) {\n    let h;\n    let m;\n    const hours = time.getHours();\n    if (time.getMinutes() < TIME_ANCHOR) {\n        h = hours;\n        m = TIME_ANCHOR;\n    }\n    else {\n        h = (hours + 1) % HOURS_IN_DAY;\n        m = 0;\n    }\n    return updateTime(h, m);\n}\n//# sourceMappingURL=timeUtilities.js.map","// (C) 2020-2021 GoodData Corporation\nexport const PLATFORM_DATE_FORMAT = \"yyyy-MM-dd\";\nexport const DEFAULT_DROPDOWN_ALIGN_POINTS = [\n    {\n        align: \"bl tl\",\n    },\n    {\n        align: \"tl bl\",\n    },\n];\nexport const DEFAULT_DROPDOWN_ZINDEX = 5001;\nexport const DEFAULT_REPEAT_PERIOD = 1;\nexport const REPEAT_TYPES = {\n    WEEKLY: \"weekly\",\n    DAILY: \"daily\",\n    MONTHLY: \"monthly\",\n    CUSTOM: \"custom\",\n};\nexport const REPEAT_FREQUENCIES = {\n    DAY: \"day\",\n    MONTH: \"month\",\n    WEEK: \"week\",\n};\nexport const FREQUENCY_TYPE = [REPEAT_FREQUENCIES.DAY, REPEAT_FREQUENCIES.WEEK, REPEAT_FREQUENCIES.MONTH];\nexport const REPEAT_EXECUTE_ON = {\n    DAY_OF_MONTH: \"dayOfMonth\",\n    DAY_OF_WEEK: \"dayOfWeek\",\n};\n//# sourceMappingURL=constants.js.map","// (C) 2019-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * @internal\n */\nexport const isScheduleEmailExternalRecipient = (obj) => !isEmpty(obj) && typeof obj.email === \"string\";\n/**\n * @internal\n */\nexport const isScheduleEmailExistingRecipient = (obj) => !isEmpty(obj) && typeof obj.user === \"object\";\n//# sourceMappingURL=interfaces.js.map","// (C) 2019-2023 GoodData Corporation\nimport isDate from \"lodash/isDate.js\";\nimport format from \"date-fns/format/index.js\";\nimport { PLATFORM_DATE_FORMAT } from \"../constants.js\";\nimport capitalize from \"lodash/capitalize.js\";\nexport function convertDateToPlatformDateString(date) {\n    return isDate(date) ? format(date, PLATFORM_DATE_FORMAT) : date;\n}\nexport function convertDateToDisplayDateString(date, dateFormat) {\n    // In schedule email dialog, use date string as sub-fix of attached file name\n    // to avoid \"/\" character in file name\n    const DISPLAY_DATE_FORMAT_MAPPER = {\n        \"MM/dd/yyyy\": \"MM-dd-yyyy\",\n        \"dd/MM/yyyy\": \"dd-MM-yyyy\",\n        \"M/d/yy\": \"M-d-yy\",\n    };\n    const displayDateFormat = DISPLAY_DATE_FORMAT_MAPPER[dateFormat] || dateFormat;\n    return isDate(date) ? format(date, displayDateFormat) : date;\n}\nexport function getDate(date) {\n    return date.getDate();\n}\nexport function getDayName(date) {\n    return format(date, \"eeee\");\n}\nexport function getIntlDayName(intl, startDate) {\n    return capitalize(intl.formatDate(startDate, { weekday: \"long\" }));\n}\nexport function convertSun2MonWeekday(dayIndex) {\n    return dayIndex === 0 ? 7 : dayIndex;\n}\nexport function getDay(date) {\n    return convertSun2MonWeekday(date.getDay());\n}\nexport function getWeek(date) {\n    return Math.ceil(date.getDate() / 7);\n}\nexport function getMonth(date) {\n    return date.getMonth() + 1;\n}\nexport function getYear(date) {\n    return date.getFullYear();\n}\n//# sourceMappingURL=datetime.js.map","// (C) 2019-2023 GoodData Corporation\nimport identity from \"lodash/identity.js\";\nimport { REPEAT_EXECUTE_ON, REPEAT_TYPES } from \"../constants.js\";\nimport { getDate, getDay, getWeek } from \"./datetime.js\";\n// Delimits the frequency part from the rest.\nexport const REPEAT_DELIM = \"*\";\n// Delimits the fragments of repeatData string.\nexport const FRAGMENT_DELIM = \":\";\n// Delimits parts in one fragment.\nexport const LIST_DELIM = \",\";\n// Position of the REPEAT_DELIM determines the type of the repeat\nconst REPEAT_TYPE_BY_REPEAT_INDEX = [\"none\", \"yearly\", \"monthly\", \"weekly\", \"daily\"];\n// Name of the each frangment by position.\nconst FRAGMENT_BY_INDEX = [\"year\", \"month\", \"week\", \"day\", \"hour\", \"minute\", \"second\"];\n// Fills fragments to respective places.\nfunction fillFragments(fragments, fragObj) {\n    for (const name in fragObj) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!fragObj.hasOwnProperty(name)) {\n            continue;\n        }\n        const index = FRAGMENT_BY_INDEX.indexOf(name);\n        fragments[index] = fragObj[name];\n    }\n}\nfunction getRepeatBase(repeatType, repeatFrequency) {\n    if (repeatType !== REPEAT_TYPES.CUSTOM) {\n        return repeatType;\n    }\n    // eslint-disable-next-line no-prototype-builtins\n    if (repeatFrequency.hasOwnProperty(\"day\")) {\n        return REPEAT_TYPES.DAILY;\n    }\n    // eslint-disable-next-line no-prototype-builtins\n    if (repeatFrequency.hasOwnProperty(\"week\")) {\n        return REPEAT_TYPES.WEEKLY;\n    }\n    return REPEAT_TYPES.MONTHLY;\n}\n// Generates repeatData string\nexport function generateRepeatString(repeat) {\n    var _a, _b;\n    const { repeatType, repeatFrequency, repeatPeriod, time } = repeat;\n    const fragments = [0, 0, 0, 0, 0, 0, 0];\n    const repeatBase = getRepeatBase(repeatType, repeatFrequency);\n    const repeatDelimiterIndex = REPEAT_TYPE_BY_REPEAT_INDEX.indexOf(repeatBase);\n    // Repeats monthly\n    if (repeatBase === REPEAT_TYPES.MONTHLY) {\n        const str = repeatFrequency.month;\n        // Repeats on a day of week in n-th week of month (e.g. 3rd Monday)\n        if (((_a = repeatFrequency.month) === null || _a === void 0 ? void 0 : _a.type) === REPEAT_EXECUTE_ON.DAY_OF_WEEK) {\n            const day = str.dayOfWeek.day;\n            const week = str.dayOfWeek.week;\n            fillFragments(fragments, { day, week });\n        }\n        // Repeats on a day of month 1-31\n        else if (((_b = repeatFrequency.month) === null || _b === void 0 ? void 0 : _b.type) === REPEAT_EXECUTE_ON.DAY_OF_MONTH) {\n            const day = str.dayOfMonth;\n            fillFragments(fragments, { day });\n        }\n    }\n    // Repeats weekly\n    else if (repeatBase === REPEAT_TYPES.WEEKLY) {\n        const days = repeatFrequency.week.days;\n        fillFragments(fragments, { day: days.join(LIST_DELIM) });\n    }\n    // Repeats daily\n    else if (repeatBase === REPEAT_TYPES.DAILY) {\n        // do nothing\n    }\n    // Fill the repeat period\n    fragments[repeatDelimiterIndex - 1] = repeatPeriod;\n    // Fill the time\n    fillFragments(fragments, time);\n    // Split array of fragments into frequency part and when part (so I can join them with '*' afterwards)\n    const reptParts = [\n        fragments.slice(0, repeatDelimiterIndex),\n        fragments.slice(repeatDelimiterIndex, fragments.length),\n    ];\n    // Join into one repeatData string\n    return reptParts.map((p) => p.join(FRAGMENT_DELIM)).join(REPEAT_DELIM);\n}\nexport function setDailyRepeat(repeatData) {\n    repeatData.repeatFrequency = {\n        day: true,\n    };\n}\nexport function setMonthlyRepeat(repeatData, repeatExecuteOn, startDate) {\n    let repeatExecuteOnData;\n    if (repeatExecuteOn === REPEAT_EXECUTE_ON.DAY_OF_MONTH) {\n        repeatExecuteOnData = getDate(startDate);\n    }\n    else if (repeatExecuteOn === REPEAT_EXECUTE_ON.DAY_OF_WEEK) {\n        repeatExecuteOnData = {\n            day: getDay(startDate),\n            week: getWeek(startDate),\n        };\n    }\n    repeatData.repeatFrequency = {\n        month: {\n            type: repeatExecuteOn,\n            [repeatExecuteOn]: repeatExecuteOnData,\n        },\n    };\n}\nexport function setWeeklyRepeat(repeatData, startDate) {\n    repeatData.repeatFrequency = {\n        week: {\n            days: [getDay(startDate)],\n        },\n    };\n}\nconst MONTH_INDEX = 1;\nconst WEEK_INDEX = 2;\nconst DAY_INDEX = 3;\nconst HOUR_INDEX = 4;\nconst MINUTE_INDEX = 5;\nconst SECOND_INDEX = 6;\nfunction getFirstUsedFragmentIndex(fragments) {\n    const firstFragmentIndex = fragments.findIndex(identity);\n    if (firstFragmentIndex === -1) {\n        throw new Error(\"Invalid recurrence string\");\n    }\n    return firstFragmentIndex;\n}\nexport function parseRepeatString(repeat) {\n    const fragmentsStrings = repeat.replace(REPEAT_DELIM, FRAGMENT_DELIM).split(FRAGMENT_DELIM);\n    const fragments = fragmentsStrings.map((s) => {\n        if (s.indexOf(LIST_DELIM) !== -1) {\n            throw new Error(\"List items are not supported in recurrence string parsing\");\n        }\n        return parseInt(s);\n    });\n    const firstFragmentIndex = getFirstUsedFragmentIndex(fragments);\n    const firstFragmentValue = fragments[firstFragmentIndex];\n    let repeatType = REPEAT_TYPES.CUSTOM;\n    let repeatFrequency = {};\n    const customRepeatNumber = firstFragmentValue !== 1;\n    if (firstFragmentIndex === MONTH_INDEX) {\n        if (fragments[WEEK_INDEX] === 0) {\n            repeatType = REPEAT_TYPES.CUSTOM;\n            repeatFrequency = {\n                month: {\n                    type: REPEAT_EXECUTE_ON.DAY_OF_MONTH,\n                    dayOfMonth: fragments[DAY_INDEX],\n                },\n            };\n        }\n        else {\n            repeatType = customRepeatNumber ? REPEAT_TYPES.CUSTOM : REPEAT_TYPES.MONTHLY;\n            repeatFrequency = {\n                month: {\n                    type: REPEAT_EXECUTE_ON.DAY_OF_WEEK,\n                    dayOfWeek: {\n                        day: fragments[DAY_INDEX],\n                        week: fragments[WEEK_INDEX],\n                    },\n                },\n            };\n        }\n    }\n    if (firstFragmentIndex === WEEK_INDEX) {\n        repeatType = customRepeatNumber ? REPEAT_TYPES.CUSTOM : REPEAT_TYPES.WEEKLY;\n        repeatFrequency = {\n            week: {\n                days: [fragments[3]],\n            },\n        };\n    }\n    if (firstFragmentIndex === DAY_INDEX) {\n        repeatType = customRepeatNumber ? REPEAT_TYPES.CUSTOM : REPEAT_TYPES.DAILY;\n        repeatFrequency = { day: true };\n    }\n    return {\n        repeatType,\n        repeatFrequency,\n        repeatPeriod: firstFragmentValue,\n        time: {\n            hour: fragments[HOUR_INDEX],\n            minute: fragments[MINUTE_INDEX],\n            second: fragments[SECOND_INDEX],\n        },\n    };\n}\n//# sourceMappingURL=repeat.js.map","// (C) 2019-2023 GoodData Corporation\nimport { userFullName } from \"@gooddata/sdk-model\";\nimport { isScheduleEmailExistingRecipient, } from \"../interfaces.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport flatMap from \"lodash/flatMap.js\";\nexport const getScheduledEmailRecipientUniqueIdentifier = (recipient) => isScheduleEmailExistingRecipient(recipient) ? recipient.user.login : recipient.email;\nexport const getScheduledEmailRecipientEmail = (recipient) => isScheduleEmailExistingRecipient(recipient) ? recipient.user.email : recipient.email;\nexport const getScheduledEmailRecipientDisplayName = (recipient) => isScheduleEmailExistingRecipient(recipient) ? userFullName(recipient.user) : recipient.email;\nconst scheduleEmailRecipientDelimiter = /[,;\\s]/;\nexport const splitScheduledEmailRecipients = (recipients) => {\n    return flatMap(recipients, (recipient) => {\n        return splitScheduledEmailRecipientByDelimiter(recipient, scheduleEmailRecipientDelimiter);\n    });\n};\nexport const uniqueScheduledEmailRecipients = (recipients) => {\n    const recipientIds = [];\n    return recipients.filter((recipient) => {\n        const recipientId = getScheduledEmailRecipientUniqueIdentifier(recipient);\n        if (recipientIds.includes(recipientId)) {\n            return false;\n        }\n        else {\n            recipientIds.push(recipientId);\n            return true;\n        }\n    });\n};\nconst splitScheduledEmailRecipientByDelimiter = (recipient, delimiter) => {\n    if (isScheduleEmailExistingRecipient(recipient)) {\n        return [recipient];\n    }\n    return splitScheduledEmailExternalRecipientByDelimiter(recipient, delimiter);\n};\nconst splitScheduledEmailExternalRecipientByDelimiter = (recipient, delimiter) => {\n    return recipient.email\n        .split(delimiter)\n        .map((val) => val.trim())\n        .filter((val) => !isEmpty(val))\n        .map((email) => ({ email }));\n};\n//# sourceMappingURL=scheduledMailRecipients.js.map","// (C) 2021-2022 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\n/**\n * Gets the user full name\n *\n * @param user - user to get full name of\n * @returns the user full name\n * @public\n */\nexport function userFullName(user) {\n    invariant(user, \"user to get full name of must be specified\");\n    return user.fullName;\n}\n//# sourceMappingURL=index.js.map","// (C) 2019-2020 GoodData Corporation\nconst JANUARY_OFFSET = -new Date(2011, 0, 1, 0, 0, 0, 0).getTimezoneOffset();\nconst JUNE_OFFSET = -new Date(2011, 5, 1, 0, 0, 0, 0).getTimezoneOffset();\nconst timezonesRaw = [\n    [\"Pacific/Midway\", \"GMT-11:00 International Date Line West\", -660, -660],\n    [\"Pacific/Pago_Pago\", \"GMT-11:00 Samoa\", -660, -660],\n    [\"Pacific/Honolulu\", \"GMT-10:00 Hawaii\", -600, -600],\n    [\"America/Juneau\", \"GMT-09:00 Alaska\", -540, -480],\n    [\"America/Los_Angeles\", \"GMT-08:00 Pacific Time (US & Canada)\", -480, -420],\n    [\"America/Tijuana\", \"GMT-08:00 Tijuana\", -480, -420],\n    [\"America/Phoenix\", \"GMT-07:00 Arizona\", -420, -420],\n    [\"America/Chihuahua\", \"GMT-07:00 Chihuahua\", -420, -360],\n    [\"America/Mazatlan\", \"GMT-07:00 Mazatlan\", -420, -360],\n    [\"America/Denver\", \"GMT-07:00 Mountain Time (US & Canada)\", -420, -360],\n    [\"America/Guatemala\", \"GMT-06:00 Central America\", -360, -360],\n    [\"America/Chicago\", \"GMT-06:00 Central Time (US & Canada)\", -360, -300],\n    [\"America/Mexico_City\", \"GMT-06:00 Mexico City\", -360, -300],\n    [\"America/Monterrey\", \"GMT-06:00 Monterrey\", -360, -300],\n    [\"America/Regina\", \"GMT-06:00 Saskatchewan\", -360, -360],\n    [\"America/Bogota\", \"GMT-05:00 Bogota\", -300, -300],\n    [\"America/New_York\", \"GMT-05:00 Eastern Time (US & Canada)\", -300, -240],\n    [\"America/Indiana/Indianapolis\", \"GMT-05:00 Indiana (East)\", -300, -240],\n    [\"America/Lima\", \"GMT-05:00 Lima\", -300, -300],\n    [\"America/Caracas\", \"GMT-04:30 Caracas\", -270, -270],\n    [\"America/Halifax\", \"GMT-04:00 Atlantic Time (Canada)\", -240, -180],\n    [\"America/Guyana\", \"GMT-04:00 Georgetown\", -240, -240],\n    [\"America/La_Paz\", \"GMT-04:00 La Paz\", -240, -240],\n    [\"America/Santiago\", \"GMT-04:00 Santiago\", -180, -240],\n    [\"America/St_Johns\", \"GMT-03:30 Newfoundland\", -210, -150],\n    [\"America/Sao_Paulo\", \"GMT-03:00 Brasilia\", -120, -180],\n    [\"America/Argentina/Buenos_Aires\", \"GMT-03:00 Buenos Aires\", -180, -180],\n    [\"America/Godthab\", \"GMT-03:00 Greenland\", -180, -120],\n    [\"Atlantic/South_Georgia\", \"GMT-02:00 Mid-Atlantic\", -120, -120],\n    [\"Atlantic/Azores\", \"GMT-01:00 Azores\", -60, 0],\n    [\"Atlantic/Cape_Verde\", \"GMT-01:00 Cape Verde Is.\", -60, -60],\n    [\"Africa/Casablanca\", \"GMT+00:00 Casablanca\", 0, 0],\n    [\"Europe/Dublin\", \"GMT+00:00 Dublin\", 0, 60],\n    [\"Europe/Lisbon\", \"GMT+00:00 Lisbon\", 0, 60],\n    [\"Europe/London\", \"GMT+00:00 London\", 0, 60],\n    [\"Africa/Monrovia\", \"GMT+00:00 Monrovia\", 0, 0],\n    [\"Etc/UTC\", \"GMT+00:00 UTC\", 0, 0],\n    [\"Europe/Amsterdam\", \"GMT+01:00 Amsterdam\", 60, 120],\n    [\"Europe/Belgrade\", \"GMT+01:00 Belgrade\", 60, 120],\n    [\"Europe/Berlin\", \"GMT+01:00 Berlin\", 60, 120],\n    [\"Europe/Bratislava\", \"GMT+01:00 Bratislava\", 60, 120],\n    [\"Europe/Brussels\", \"GMT+01:00 Brussels\", 60, 120],\n    [\"Europe/Budapest\", \"GMT+01:00 Budapest\", 60, 120],\n    [\"Europe/Copenhagen\", \"GMT+01:00 Copenhagen\", 60, 120],\n    [\"Europe/Ljubljana\", \"GMT+01:00 Ljubljana\", 60, 120],\n    [\"Europe/Madrid\", \"GMT+01:00 Madrid\", 60, 120],\n    [\"Europe/Paris\", \"GMT+01:00 Paris\", 60, 120],\n    [\"Europe/Prague\", \"GMT+01:00 Prague\", 60, 120],\n    [\"Europe/Rome\", \"GMT+01:00 Rome\", 60, 120],\n    [\"Europe/Sarajevo\", \"GMT+01:00 Sarajevo\", 60, 120],\n    [\"Europe/Skopje\", \"GMT+01:00 Skopje\", 60, 120],\n    [\"Europe/Stockholm\", \"GMT+01:00 Stockholm\", 60, 120],\n    [\"Europe/Vienna\", \"GMT+01:00 Vienna\", 60, 120],\n    [\"Europe/Warsaw\", \"GMT+01:00 Warsaw\", 60, 120],\n    [\"Africa/Algiers\", \"GMT+01:00 West Central Africa\", 60, 60],\n    [\"Europe/Zagreb\", \"GMT+01:00 Zagreb\", 60, 120],\n    [\"Europe/Athens\", \"GMT+02:00 Athens\", 120, 180],\n    [\"Europe/Bucharest\", \"GMT+02:00 Bucharest\", 120, 180],\n    [\"Africa/Cairo\", \"GMT+02:00 Cairo\", 120, 180],\n    [\"Africa/Harare\", \"GMT+02:00 Harare\", 120, 120],\n    [\"Europe/Helsinki\", \"GMT+02:00 Helsinki\", 120, 180],\n    [\"Europe/Istanbul\", \"GMT+02:00 Istanbul\", 120, 180],\n    [\"Asia/Jerusalem\", \"GMT+02:00 Jerusalem\", 120, 180],\n    [\"Europe/Kiev\", \"GMT+02:00 Kyiv\", 120, 180],\n    [\"Europe/Minsk\", \"GMT+02:00 Minsk\", 120, 180],\n    [\"Africa/Johannesburg\", \"GMT+02:00 Pretoria\", 120, 120],\n    [\"Europe/Riga\", \"GMT+02:00 Riga\", 120, 180],\n    [\"Europe/Sofia\", \"GMT+02:00 Sofia\", 120, 180],\n    [\"Europe/Tallinn\", \"GMT+02:00 Tallinn\", 120, 180],\n    [\"Europe/Vilnius\", \"GMT+02:00 Vilnius\", 120, 180],\n    [\"Asia/Baghdad\", \"GMT+03:00 Baghdad\", 180, 180],\n    [\"Asia/Kuwait\", \"GMT+03:00 Kuwait\", 180, 180],\n    [\"Europe/Moscow\", \"GMT+03:00 Moscow\", 180, 240],\n    [\"Africa/Nairobi\", \"GMT+03:00 Nairobi\", 180, 180],\n    [\"Asia/Riyadh\", \"GMT+03:00 Riyadh\", 180, 180],\n    [\"Asia/Tehran\", \"GMT+03:30 Tehran\", 210, 270],\n    [\"Asia/Baku\", \"GMT+04:00 Baku\", 240, 300],\n    [\"Asia/Muscat\", \"GMT+04:00 Muscat\", 240, 240],\n    [\"Asia/Tbilisi\", \"GMT+04:00 Tbilisi\", 240, 240],\n    [\"Asia/Yerevan\", \"GMT+04:00 Yerevan\", 240, 300],\n    [\"Asia/Kabul\", \"GMT+04:30 Kabul\", 270, 270],\n    [\"Asia/Yekaterinburg\", \"GMT+05:00 Ekaterinburg\", 300, 360],\n    [\"Asia/Karachi\", \"GMT+05:00 Karachi\", 300, 300],\n    [\"Asia/Tashkent\", \"GMT+05:00 Tashkent\", 300, 300],\n    [\"Asia/Kolkata\", \"GMT+05:30 Kolkata\", 330, 330],\n    [\"Asia/Colombo\", \"GMT+05:30 Sri Jayawardenepura\", 330, 330],\n    [\"Asia/Kathmandu\", \"GMT+05:45 Kathmandu\", 345, 345],\n    [\"Asia/Almaty\", \"GMT+06:00 Almaty\", 360, 360],\n    [\"Asia/Dhaka\", \"GMT+06:00 Dhaka\", 360, 360],\n    [\"Asia/Novosibirsk\", \"GMT+06:00 Novosibirsk\", 360, 420],\n    [\"Asia/Rangoon\", \"GMT+06:30 Rangoon\", 390, 390],\n    [\"Asia/Bangkok\", \"GMT+07:00 Bangkok\", 420, 420],\n    [\"Asia/Jakarta\", \"GMT+07:00 Jakarta\", 420, 420],\n    [\"Asia/Krasnoyarsk\", \"GMT+07:00 Krasnoyarsk\", 420, 480],\n    [\"Asia/Shanghai\", \"GMT+08:00 Beijing\", 480, 480],\n    [\"Asia/Chongqing\", \"GMT+08:00 Chongqing\", 480, 480],\n    [\"Asia/Hong_Kong\", \"GMT+08:00 Hong Kong\", 480, 480],\n    [\"Asia/Irkutsk\", \"GMT+08:00 Irkutsk\", 480, 540],\n    [\"Asia/Kuala_Lumpur\", \"GMT+08:00 Kuala Lumpur\", 480, 480],\n    [\"Australia/Perth\", \"GMT+08:00 Perth\", 480, 480],\n    [\"Asia/Singapore\", \"GMT+08:00 Singapore\", 480, 480],\n    [\"Asia/Taipei\", \"GMT+08:00 Taipei\", 480, 480],\n    [\"Asia/Ulaanbaatar\", \"GMT+08:00 Ulaan Bataar\", 480, 480],\n    [\"Asia/Urumqi\", \"GMT+08:00 Urumqi\", 480, 480],\n    [\"Asia/Seoul\", \"GMT+09:00 Seoul\", 540, 540],\n    [\"Asia/Tokyo\", \"GMT+09:00 Tokyo\", 540, 540],\n    [\"Asia/Yakutsk\", \"GMT+09:00 Yakutsk\", 540, 600],\n    [\"Australia/Adelaide\", \"GMT+09:30 Adelaide\", 630, 570],\n    [\"Australia/Darwin\", \"GMT+09:30 Darwin\", 570, 570],\n    [\"Australia/Brisbane\", \"GMT+10:00 Brisbane\", 600, 600],\n    [\"Pacific/Guam\", \"GMT+10:00 Guam\", 600, 600],\n    [\"Australia/Hobart\", \"GMT+10:00 Hobart\", 660, 600],\n    [\"Australia/Melbourne\", \"GMT+10:00 Melbourne\", 660, 600],\n    [\"Pacific/Port_Moresby\", \"GMT+10:00 Port Moresby\", 600, 600],\n    [\"Australia/Sydney\", \"GMT+10:00 Sydney\", 660, 600],\n    [\"Asia/Vladivostok\", \"GMT+10:00 Vladivostok\", 600, 660],\n    [\"Asia/Kamchatka\", \"GMT+11:00 Kamchatka\", 660, 720],\n    [\"Asia/Magadan\", \"GMT+11:00 Magadan\", 660, 720],\n    [\"Pacific/Noumea\", \"GMT+11:00 New Caledonia\", 660, 660],\n    [\"Pacific/Auckland\", \"GMT+12:00 Auckland\", 780, 720],\n    [\"Pacific/Fiji\", \"GMT+12:00 Fiji\", 780, 720],\n    [\"Pacific/Majuro\", \"GMT+12:00 Marshall Is.\", 720, 720],\n    [\"Pacific/Tongatapu\", \"GMT+13:00 Nuku'alofa\", 780, 780],\n];\nconst timezones = timezonesRaw.map((t) => ({\n    identifier: t[0],\n    title: t[1],\n    januaryOffset: t[2],\n    juneOffset: t[3],\n}));\nconst TIMEZONE_BY_OFFSETS = timezones.find((tz) => tz.januaryOffset === JANUARY_OFFSET && tz.juneOffset === JUNE_OFFSET);\nexport const TIMEZONE_DEFAULT = getTimezoneByIdentifier(\"Etc/UTC\");\nexport function getUserTimezone() {\n    return TIMEZONE_BY_OFFSETS || TIMEZONE_DEFAULT;\n}\nexport function getTimezoneByIdentifier(title) {\n    return timezones.find((tz) => tz.identifier === title);\n}\n//# sourceMappingURL=timezone.js.map","// (C) 2019-2022 GoodData Corporation\nconst EMAIL_REGEX = \n// disabling as there are issues with the regex but we rather not touch it...\n// eslint-disable-next-line\n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport function isEmail(value) {\n    return EMAIL_REGEX.test(value);\n}\n//# sourceMappingURL=validate.js.map","// (C) 2019-2021 GoodData Corporation\nconst SCREEN_BREAKPOINT_SM = 640;\n// https://github.com/gooddata/gdc-goodstrap/blob/master/src/core/MediaQueries.js#L61\nexport const isMobileView = () => window.innerWidth <= SCREEN_BREAKPOINT_SM;\n//# sourceMappingURL=responsive.js.map","// (C) 2019-2022 GoodData Corporation\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport { isMobileView } from \"../utils/responsive.js\";\nclass Textarea extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.getTextareaClassNames = () => {\n            const { hasError, hasWarning } = this.props;\n            return cx(\"gd-input-field\", {\n                \"has-error\": hasError,\n                \"has-warning\": hasWarning,\n            });\n        };\n        this.onBlur = (_e) => {\n            if (isMobileView()) {\n                this.setState({ rows: 1 });\n            }\n        };\n        this.onChange = (e) => {\n            this.props.onChange(e.target.value);\n        };\n        this.onFocus = (_e) => {\n            if (isMobileView()) {\n                this.setState({ rows: this.props.rows });\n            }\n        };\n        this.renderCollapseIndicator = () => {\n            return React.createElement(\"span\", { className: \"gd-input-component-indicator\" }, \"\\u22EF\");\n        };\n        this.state = {\n            rows: isMobileView() ? 1 : props.rows,\n        };\n    }\n    render() {\n        const { className, label, maxlength, placeholder, value } = this.props;\n        const { rows } = this.state;\n        const classNames = cx(`gd-input-component gd-textarea-component ${className}`, {\n            \"gd-textarea-component-collapsed\": rows === 1,\n        });\n        return (React.createElement(\"div\", { className: classNames },\n            React.createElement(\"label\", { className: \"gd-label\" }, label),\n            React.createElement(\"label\", { className: \"gd-input\" },\n                React.createElement(\"textarea\", { className: this.getTextareaClassNames(), maxLength: maxlength, placeholder: placeholder, value: value, rows: rows, onBlur: this.onBlur, onChange: this.onChange, onFocus: this.onFocus }),\n                rows === 1 ? this.renderCollapseIndicator() : null)));\n    }\n}\nTextarea.defaultProps = {\n    className: \"\",\n    hasError: false,\n    hasWarning: false,\n};\nexport { Textarea };\n//# sourceMappingURL=Textarea.js.map","// (C) 2019-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Dropdown, DropdownList, DropdownButton, SingleSelectListItem } from \"@gooddata/sdk-ui-kit\";\nimport { invariant } from \"ts-invariant\";\nimport { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX, REPEAT_EXECUTE_ON, } from \"../../constants.js\";\nimport { getDate, getIntlDayName, getWeek } from \"../../utils/datetime.js\";\nimport { messages } from \"../../../../../locales.js\";\nconst DROPDOWN_WIDTH = 154;\nconst getLocalizationKey = (id) => {\n    switch (id) {\n        case REPEAT_EXECUTE_ON.DAY_OF_MONTH:\n            return messages.scheduleDialogEmailRepeatsExecuteOn_dayOfMonth;\n        case REPEAT_EXECUTE_ON.DAY_OF_WEEK:\n            return messages.scheduleDialogEmailRepeatsExecuteOn_dayOfWeek;\n        default:\n            throw new Error(\"Invariant: Unexpected localization key.\");\n    }\n};\nexport const RepeatExecuteOnSelect = (props) => {\n    const { onChange, repeatExecuteOn, startDate } = props;\n    const intl = useIntl();\n    const repeatExecuteOnItems = useMemo(() => {\n        return [REPEAT_EXECUTE_ON.DAY_OF_MONTH, REPEAT_EXECUTE_ON.DAY_OF_WEEK].map((id) => {\n            const localizationKey = getLocalizationKey(id);\n            return {\n                id,\n                title: intl.formatMessage(localizationKey, {\n                    date: getDate(startDate),\n                    day: getIntlDayName(intl, startDate),\n                    week: getWeek(startDate),\n                }),\n            };\n        });\n    }, [intl, startDate]);\n    const repeatExecuteOnItem = repeatExecuteOnItems.find((item) => item.id === repeatExecuteOn);\n    invariant(repeatExecuteOnItem, \"Inconsistent state in RepeatExecuteOnSelect\");\n    return (React.createElement(Dropdown, { alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, className: \"gd-schedule-email-dialog-repeat-execute-on s-gd-schedule-email-dialog-repeat-execute-on\", renderBody: ({ closeDropdown, isMobile }) => (React.createElement(DropdownList, { width: DROPDOWN_WIDTH, items: repeatExecuteOnItems, isMobile: isMobile, renderItem: ({ item }) => (React.createElement(SingleSelectListItem, { title: item.title, onClick: () => {\n                    onChange(item.id);\n                    closeDropdown();\n                }, isSelected: repeatExecuteOnItem.id === item.id })) })), renderButton: ({ toggleDropdown }) => (React.createElement(DropdownButton, { value: repeatExecuteOnItem.title, onClick: toggleDropdown })), overlayPositionType: \"sameAsTarget\", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }));\n};\n//# sourceMappingURL=RepeatExecuteOnSelect.js.map","// (C) 2019-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Dropdown, DropdownList, DropdownButton, SingleSelectListItem } from \"@gooddata/sdk-ui-kit\";\nimport { invariant } from \"ts-invariant\";\nimport { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX, FREQUENCY_TYPE, REPEAT_FREQUENCIES, } from \"../../constants.js\";\nimport { messages } from \"../../../../../locales.js\";\nconst DROPDOWN_WIDTH = 100;\nconst getLocalizationKey = (id) => {\n    switch (id) {\n        case REPEAT_FREQUENCIES.DAY:\n            return messages.scheduleDialogEmailRepeatsFrequencies_day;\n        case REPEAT_FREQUENCIES.MONTH:\n            return messages.scheduleDialogEmailRepeatsFrequencies_month;\n        case REPEAT_FREQUENCIES.WEEK:\n            return messages.scheduleDialogEmailRepeatsFrequencies_week;\n        default:\n            throw new Error(\"Invariant: Unexpected localization key.\");\n    }\n};\nexport const RepeatFrequencySelect = (props) => {\n    const { onChange, repeatFrequency, repeatPeriod } = props;\n    const intl = useIntl();\n    const repeatFrequencyItems = useMemo(() => {\n        return FREQUENCY_TYPE.map((id) => {\n            const localizationKey = getLocalizationKey(id);\n            return {\n                id,\n                title: intl.formatMessage(localizationKey, {\n                    n: repeatPeriod,\n                }),\n            };\n        });\n    }, [intl, repeatPeriod]);\n    const repeatFrequencyItem = repeatFrequencyItems.find((item) => item.id === repeatFrequency);\n    invariant(repeatFrequencyItem, \"Inconsistent state in RepeatFrequencySelect\");\n    return (React.createElement(Dropdown, { alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, className: \"gd-schedule-email-dialog-repeat-frequency s-gd-schedule-email-dialog-repeat-frequency\", renderButton: ({ toggleDropdown }) => (React.createElement(DropdownButton, { value: repeatFrequencyItem.title, onClick: toggleDropdown })), renderBody: ({ closeDropdown, isMobile }) => (React.createElement(DropdownList, { width: DROPDOWN_WIDTH, items: repeatFrequencyItems, isMobile: isMobile, renderItem: ({ item }) => (React.createElement(SingleSelectListItem, { title: item.title, onClick: () => {\n                    onChange(item.id);\n                    closeDropdown();\n                }, isSelected: repeatFrequencyItem.id === item.id })) })), overlayPositionType: \"sameAsTarget\", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }));\n};\n//# sourceMappingURL=RepeatFrequencySelect.js.map","// (C) 2019-2022 GoodData Corporation\nimport * as React from \"react\";\nexport class RepeatPeriodSelect extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.isInvalidValue = (value, repeatPeriod) => {\n            return value === \"\" || isNaN(repeatPeriod) || repeatPeriod <= 0;\n        };\n        this.triggerChangeEvent = (repeatPeriod) => {\n            if (this.state.repeatPeriod !== repeatPeriod) {\n                this.setState({ repeatPeriod }, () => this.props.onChange(repeatPeriod));\n            }\n        };\n        this.onBlur = (e) => {\n            const trimmedValue = e.target.value.trim();\n            const repeatPeriod = parseInt(trimmedValue, 10);\n            if (this.isInvalidValue(trimmedValue, repeatPeriod)) {\n                this.setState({ repeatPeriod: this.props.repeatPeriod || 1 });\n                return;\n            }\n            this.triggerChangeEvent(repeatPeriod);\n        };\n        this.onChange = (e) => {\n            const trimmedValue = e.target.value.trim();\n            const repeatPeriod = parseInt(trimmedValue, 10);\n            if (this.isInvalidValue(trimmedValue, repeatPeriod)) {\n                this.setState({ repeatPeriod: \"\" });\n                return;\n            }\n            this.triggerChangeEvent(repeatPeriod);\n        };\n        this.state = {\n            repeatPeriod: props.repeatPeriod || 1,\n        };\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"gd-schedule-email-dialog-repeat-period\" },\n            React.createElement(\"input\", { className: \"gd-input-field\", onBlur: this.onBlur, onChange: this.onChange, value: this.state.repeatPeriod })));\n    }\n}\n//# sourceMappingURL=RepeatPeriodSelect.js.map","// (C) 2019-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Dropdown, DropdownList, DropdownButton, SingleSelectListItem } from \"@gooddata/sdk-ui-kit\";\nimport { invariant } from \"ts-invariant\";\nimport { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX, REPEAT_TYPES } from \"../../constants.js\";\nimport { getWeek, getIntlDayName } from \"../../utils/datetime.js\";\nimport { messages } from \"../../../../../locales.js\";\nconst DROPDOWN_WIDTH = 199;\nconst getLocalizationKey = (id) => {\n    switch (id) {\n        case REPEAT_TYPES.DAILY:\n            return messages.scheduleDialogEmailRepeats_daily;\n        case REPEAT_TYPES.WEEKLY:\n            return messages.scheduleDialogEmailRepeats_weekly;\n        case REPEAT_TYPES.MONTHLY:\n            return messages.scheduleDialogEmailRepeats_monthly;\n        case REPEAT_TYPES.CUSTOM:\n            return messages.scheduleDialogEmailRepeats_custom;\n        default:\n            throw new Error(\"Invariant: Unexpected localization key.\");\n    }\n};\nexport const RepeatTypeSelect = (props) => {\n    const { onChange, repeatType, startDate } = props;\n    const intl = useIntl();\n    const repeatItems = useMemo(() => {\n        return [REPEAT_TYPES.DAILY, REPEAT_TYPES.WEEKLY, REPEAT_TYPES.MONTHLY, REPEAT_TYPES.CUSTOM].map((id) => {\n            const localizationKey = getLocalizationKey(id);\n            return {\n                id,\n                title: intl.formatMessage(localizationKey, {\n                    day: getIntlDayName(intl, startDate),\n                    week: getWeek(startDate),\n                }),\n            };\n        });\n    }, [intl, startDate]);\n    const repeatTypeItem = repeatItems.find((item) => item.id === repeatType);\n    invariant(repeatTypeItem, \"Inconsistent state in RepeatTypeSelect\");\n    return (React.createElement(Dropdown, { alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, className: \"gd-schedule-email-dialog-repeat-type s-gd-schedule-email-dialog-repeat-type\", renderButton: ({ toggleDropdown }) => (React.createElement(DropdownButton, { value: repeatTypeItem.title, onClick: toggleDropdown })), renderBody: ({ closeDropdown, isMobile }) => (React.createElement(DropdownList, { width: DROPDOWN_WIDTH, items: repeatItems, isMobile: isMobile, renderItem: ({ item }) => (React.createElement(SingleSelectListItem, { title: item.title, onClick: () => {\n                    onChange(item.id);\n                    closeDropdown();\n                }, isSelected: repeatTypeItem.id === item.id })) })), overlayPositionType: \"sameAsTarget\", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }));\n};\n//# sourceMappingURL=RepeatTypeSelect.js.map","// (C) 2019-2022 GoodData Corporation\nimport * as React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { REPEAT_EXECUTE_ON, REPEAT_FREQUENCIES, REPEAT_TYPES } from \"../../constants.js\";\nimport { RepeatExecuteOnSelect } from \"./RepeatExecuteOnSelect.js\";\nimport { RepeatFrequencySelect } from \"./RepeatFrequencySelect.js\";\nimport { RepeatPeriodSelect } from \"./RepeatPeriodSelect.js\";\nimport { RepeatTypeSelect } from \"./RepeatTypeSelect.js\";\nclass RepeatSelectRender extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onChange = () => this.props.onChange(this.state);\n        this.onRepeatTypeChange = (repeatType) => {\n            if (this.state.repeatType !== repeatType) {\n                this.setState({\n                    repeatExecuteOn: REPEAT_EXECUTE_ON.DAY_OF_MONTH,\n                    repeatFrequency: REPEAT_FREQUENCIES.DAY,\n                    repeatPeriod: 1,\n                    repeatType,\n                }, this.onChange);\n            }\n        };\n        this.onRepeatPeriodChange = (repeatPeriod) => {\n            if (this.state.repeatPeriod !== repeatPeriod) {\n                this.setState({ repeatPeriod }, this.onChange);\n            }\n        };\n        this.onRepeatFrequencyChange = (repeatFrequency) => {\n            if (this.state.repeatFrequency !== repeatFrequency) {\n                this.setState({ repeatFrequency }, this.onChange);\n            }\n        };\n        this.renderRepeatExecuteOn = () => {\n            const { startDate } = this.props;\n            const { repeatExecuteOn, repeatFrequency } = this.state;\n            if (repeatFrequency !== REPEAT_FREQUENCIES.MONTH) {\n                return null;\n            }\n            return (React.createElement(RepeatExecuteOnSelect, { repeatExecuteOn: repeatExecuteOn, startDate: startDate, onChange: this.onRepeatExecuteOnChange }));\n        };\n        this.onRepeatExecuteOnChange = (repeatExecuteOn) => {\n            if (this.state.repeatExecuteOn !== repeatExecuteOn) {\n                this.setState({ repeatExecuteOn }, this.onChange);\n            }\n        };\n        const { repeatExecuteOn, repeatFrequency, repeatPeriod, repeatType } = props;\n        this.state = {\n            repeatExecuteOn,\n            repeatFrequency,\n            repeatPeriod,\n            repeatType,\n        };\n    }\n    render() {\n        const { label, startDate } = this.props;\n        const { repeatType } = this.state;\n        return (React.createElement(\"div\", { className: \"gd-input-component gd-schedule-email-dialog-repeat\" },\n            React.createElement(\"label\", { className: \"gd-label\" }, label),\n            React.createElement(\"div\", null,\n                React.createElement(RepeatTypeSelect, { repeatType: repeatType, startDate: startDate, onChange: this.onRepeatTypeChange }),\n                this.renderCustomRepeat())));\n    }\n    renderCustomRepeat() {\n        const { intl } = this.props;\n        const { repeatFrequency, repeatPeriod, repeatType } = this.state;\n        if (repeatType !== REPEAT_TYPES.CUSTOM) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: \"gd-schedule-email-dialog-repeat-custom\" },\n            React.createElement(\"span\", { className: \"gd-schedule-email-dialog-repeat-every\" }, intl.formatMessage({\n                id: \"dialogs.schedule.email.repeats.every\",\n            })),\n            React.createElement(RepeatPeriodSelect, { repeatPeriod: repeatPeriod, onChange: this.onRepeatPeriodChange }),\n            React.createElement(RepeatFrequencySelect, { repeatFrequency: repeatFrequency, repeatPeriod: repeatPeriod, onChange: this.onRepeatFrequencyChange }),\n            React.createElement(\"div\", { className: \"break-the-row\" }),\n            this.renderRepeatExecuteOn()));\n    }\n}\nexport const RepeatSelect = injectIntl(RepeatSelectRender);\n//# sourceMappingURL=RepeatSelect.js.map","// (C) 2019-2020 GoodData Corporation\nimport * as React from \"react\";\nimport { Input as InputSDK } from \"@gooddata/sdk-ui-kit\";\nexport const Input = (props) => {\n    const { className = \"\", label, maxlength, placeholder, value, onChange } = props;\n    const classNames = `gd-input-component ${className}`;\n    return (React.createElement(\"div\", { className: classNames },\n        React.createElement(\"label\", { className: \"gd-label\" }, label),\n        React.createElement(InputSDK, { hasError: false, maxlength: maxlength, placeholder: placeholder, value: value, onChange: \n            // as any, the value will indeed always be string\n            // TODO improve typings of Input in ui-kit to have properly typed the onChange related to the input type\n            onChange })));\n};\n//# sourceMappingURL=Input.js.map","// (C) 2020-2023 GoodData Corporation\nimport React from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport debounce from \"lodash/debounce.js\";\nimport noop from \"lodash/noop.js\";\nimport format from \"date-fns/format/index.js\";\nimport parse from \"date-fns/parse/index.js\";\nimport isValid from \"date-fns/isValid/index.js\";\nimport isSameDay from \"date-fns/isSameDay/index.js\";\nimport classNames from \"classnames\";\nimport { IntlWrapper } from \"@gooddata/sdk-ui\";\nimport { injectIntl } from \"react-intl\";\nimport { DayPicker } from \"react-day-picker\";\nimport { getOptimalAlignment } from \"../utils/overlay.js\";\nimport { elementRegion } from \"../utils/domUtilities.js\";\nimport { DEFAULT_DATE_FORMAT } from \"../constants/platform.js\";\nimport enUS from \"date-fns/locale/en-US/index.js\";\nimport de from \"date-fns/locale/de/index.js\";\nimport es from \"date-fns/locale/es/index.js\";\nimport fr from \"date-fns/locale/fr/index.js\";\nimport ja from \"date-fns/locale/ja/index.js\";\nimport nl from \"date-fns/locale/nl/index.js\";\nimport pt from \"date-fns/locale/pt/index.js\";\nimport ptBR from \"date-fns/locale/pt-BR/index.js\";\nimport zhCN from \"date-fns/locale/zh-CN/index.js\";\nimport ru from \"date-fns/locale/ru/index.js\";\nconst DATEPICKER_OUTSIDE_DAY_SELECTOR = \"rdp-day_outside\";\nconst convertedLocales = {\n    \"en-US\": enUS,\n    \"de-DE\": de,\n    \"es-ES\": es,\n    \"fr-FR\": fr,\n    \"ja-JP\": ja,\n    \"nl-NL\": nl,\n    \"pt-BR\": ptBR,\n    \"pt-PT\": pt,\n    \"zh-Hans\": zhCN,\n    \"ru-RU\": ru,\n};\nfunction formatDate(date, dateFormat) {\n    return format(date, dateFormat);\n}\nfunction convertLocale(locale) {\n    return convertedLocales[locale];\n}\nfunction parseDate(str, dateFormat) {\n    try {\n        const parsedDate = parse(str, dateFormat, new Date());\n        // parse only dates with 4-digit years. this mimics moment.js behavior - it parses only dates above 1900\n        // this is to make sure that the picker input is not overwritten in the middle of writing the year with year \"0002\" when writing 2020.\n        //\n        // it's also necessary to parse only when the input string fully matches with the desired format\n        // to make sure that the picker input is not overwritten in the middle of writing.\n        // e.g, let's consider a case where dateFormat is \"dd/MM/yyyy\" and the DayPickerInput has already been filled with a valid string \"13/09/2020\",\n        // then an user wants to change only the month \"13/09/2020\" -> \"13/11/2020\" by removing \"09\" and typing \"11\".\n        // in such case the parsing should wait until the user completes typing \"11\" (otherwise if parsing is done right after the first \"1\" is typed,\n        // the cursor automatically moves to the end of the string in the middle of writing, causing a bad experience for the user).\n        if (isValid(parsedDate) &&\n            parsedDate.getFullYear() >= 1000 &&\n            str === formatDate(parsedDate, dateFormat)) {\n            return parsedDate;\n        }\n        return;\n    }\n    catch (_a) {\n        return;\n    }\n}\nfunction convertWeekStart(weekStart) {\n    switch (weekStart) {\n        case \"Sunday\":\n            return 0;\n        case \"Monday\":\n            return 1;\n        default:\n            throw new Error(`Unknown week start ${weekStart}`);\n    }\n}\nclass WrappedDatePicker extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.datePickerContainerRef = React.createRef();\n        this.inputRef = React.createRef();\n        this.resizeHandler = debounce(() => this.alignDatePicker(), 100);\n        const { alignPoints, date, dateFormat } = props;\n        this.state = {\n            align: alignPoints[0].align,\n            selectedDate: date,\n            monthDate: date,\n            inputValue: formatDate(date || new Date(), dateFormat),\n            isOpen: false,\n        };\n        this.handleDayChanged = this.handleDayChanged.bind(this);\n        this.handleMonthChanged = this.handleMonthChanged.bind(this);\n        this.handleInputChanged = this.handleInputChanged.bind(this);\n        this.alignDatePicker = this.alignDatePicker.bind(this);\n        this.setComponentRef = this.setComponentRef.bind(this);\n        this.handleWrapperClick = this.handleWrapperClick.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n    componentDidMount() {\n        const { date, dateFormat } = this.props;\n        this.setState({ selectedDate: this.updateDate(date || new Date()) });\n        this.setState({ inputValue: formatDate(date || new Date(), dateFormat) });\n        window.addEventListener(\"resize\", this.resizeHandler);\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { props } = this;\n        if (props.date > nextProps.date || props.date < nextProps.date) {\n            const selectedDate = this.updateDate(nextProps.date);\n            this.setState({ selectedDate });\n            this.setState({ monthDate: selectedDate });\n            this.setState({ inputValue: formatDate(selectedDate, props.dateFormat) });\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.resizeHandler);\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n    handleClickOutside(event) {\n        if (this.datePickerContainerRef.current &&\n            !this.datePickerContainerRef.current.contains(event.target) &&\n            this.inputRef &&\n            !this.inputRef.current.contains(event.target)) {\n            this.setState({ isOpen: false });\n        }\n    }\n    componentDidUpdate(_prevProps, prevState) {\n        if (this.state.isOpen && !prevState.isOpen) {\n            this.alignDatePicker();\n        }\n    }\n    setComponentRef(ref) {\n        this.rootRef = ref;\n    }\n    getInputClasses() {\n        return classNames(\"input-text\", \"small-12\", this.props.size, `gd-datepicker-input-${uuid()}`);\n    }\n    getComponentClasses() {\n        return classNames(\"gd-datepicker\", this.props.className, this.props.size, \"gd-datepicker-input\", this.state.isOpen ? \"gd-datepicker-focused\" : \"\");\n    }\n    getOverlayWrapperClasses() {\n        const [inputAnchorPoint, pickerAnchorPoint] = this.state.align.split(\" \");\n        return classNames(\"gd-datepicker-picker\", \"gd-datepicker-OverlayWrapper\", `gd-datepicker-OverlayWrapper-${inputAnchorPoint}-xx`, `gd-datepicker-OverlayWrapper-xx-${pickerAnchorPoint}`);\n    }\n    updateDate(date) {\n        return this.normalizeDate(date);\n    }\n    handleInputChanged(e) {\n        const { value } = e.target;\n        const parsedDate = parseDate(value, this.props.dateFormat);\n        this.setState({ inputValue: value });\n        if (parsedDate) {\n            this.setState({\n                selectedDate: parsedDate,\n                monthDate: parsedDate,\n            }, () => {\n                this.props.onChange(this.state.selectedDate);\n            });\n        }\n        else {\n            if (this.props.resetOnInvalidValue) {\n                this.setState({\n                    selectedDate: this.state.selectedDate,\n                    monthDate: this.state.selectedDate,\n                });\n                return;\n            }\n            this.setState({\n                selectedDate: undefined,\n                monthDate: undefined,\n            }, () => {\n                this.props.onChange(null);\n            });\n        }\n    }\n    handleDayChanged(newlySelectedDate) {\n        if (!newlySelectedDate) {\n            this.setState({ isOpen: false });\n            return;\n        }\n        if (isSameDay(this.state.selectedDate, newlySelectedDate)) {\n            this.setState({ isOpen: false });\n            return;\n        }\n        this.inputRef.current.focus();\n        this.setState({\n            selectedDate: newlySelectedDate,\n            monthDate: newlySelectedDate,\n            inputValue: formatDate(newlySelectedDate, this.props.dateFormat),\n            isOpen: false,\n        }, () => {\n            this.props.onChange(newlySelectedDate);\n        });\n    }\n    handleMonthChanged(month) {\n        this.inputRef.current.focus();\n        this.setState({ monthDate: month });\n    }\n    normalizeDate(date) {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    }\n    alignDatePicker() {\n        const { alignPoints } = this.props;\n        const container = this.datePickerContainerRef.current.parentElement;\n        if (!alignPoints || !container)\n            return;\n        const optimalAlignment = getOptimalAlignment({\n            targetRegion: elementRegion(this.rootRef),\n            selfRegion: elementRegion(container),\n            alignPoints,\n        });\n        const { align } = optimalAlignment.alignment;\n        this.setState({\n            align,\n        }, () => {\n            this.props.onAlign(align);\n        });\n    }\n    onKeyDown(e) {\n        if (e.key === \"Escape\" || e.key === \"Tab\") {\n            this.setState({ isOpen: false });\n        }\n    }\n    handleWrapperClick(e) {\n        const { classList } = e.target;\n        /**\n         * Prevent default fixes bug BB-332 but prevents in closing other dropdowns (Bug BB-1102)\n         * so we want to prevent default only when clicking on outside dates in datepicker\n         */\n        if (e.target && classList && classList.contains(DATEPICKER_OUTSIDE_DAY_SELECTOR)) {\n            e.preventDefault();\n        }\n    }\n    render() {\n        const { inputValue, selectedDate, monthDate, isOpen } = this.state;\n        const { placeholder, intl, tabIndex } = this.props;\n        const classNamesProps = {\n            root: this.getOverlayWrapperClasses(),\n        };\n        return (React.createElement(\"div\", { role: \"datepicker\", className: this.getComponentClasses(), ref: this.setComponentRef, onClick: this.handleWrapperClick },\n            React.createElement(\"input\", { onKeyDown: this.onKeyDown, tabIndex: tabIndex, onClick: () => this.setState({ isOpen: true }), onFocus: () => this.setState({ isOpen: true }), ref: this.inputRef, value: inputValue, className: this.getInputClasses(), placeholder: placeholder, onChange: this.handleInputChanged }),\n            isOpen ? (React.createElement(\"div\", { role: \"datepicker-picker\", ref: this.datePickerContainerRef },\n                React.createElement(DayPicker, { classNames: classNamesProps, locale: convertLocale(intl.locale), showOutsideDays: true, mode: \"single\", onSelect: this.handleDayChanged, selected: selectedDate, month: monthDate, onMonthChange: this.handleMonthChanged, weekStartsOn: convertWeekStart(this.props.weekStart) }))) : null,\n            React.createElement(\"span\", { className: \"gd-datepicker-icon gd-icon-calendar\" })));\n    }\n}\nWrappedDatePicker.defaultProps = {\n    className: \"\",\n    date: new Date(),\n    placeholder: \"\",\n    onChange: noop,\n    resetOnInvalidValue: false,\n    size: \"\",\n    tabIndex: 0,\n    alignPoints: [{ align: \"bl tl\" }, { align: \"br tr\" }, { align: \"tl bl\" }, { align: \"tr br\" }],\n    onAlign: noop,\n    dateFormat: DEFAULT_DATE_FORMAT,\n    weekStart: \"Sunday\",\n};\nexport { WrappedDatePicker };\nconst DatePickerWithIntl = injectIntl(WrappedDatePicker);\n/**\n * @internal\n */\nexport class Datepicker extends React.PureComponent {\n    render() {\n        return (React.createElement(IntlWrapper, { locale: this.props.locale },\n            React.createElement(DatePickerWithIntl, Object.assign({}, this.props))));\n    }\n}\n//# sourceMappingURL=Datepicker.js.map","// (C) 2020 GoodData Corporation\n// default date format used on client\nexport const DEFAULT_DATE_FORMAT = \"MM/dd/yyyy\";\n//# sourceMappingURL=platform.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport { translationUtils } from \"@gooddata/util\";\nimport { IntlWrapper } from \"@gooddata/sdk-ui\";\nimport noop from \"lodash/noop.js\";\nimport { Dropdown, DropdownButton, DropdownList } from \"../Dropdown/index.js\";\nimport { formatTime, normalizeTime, updateTime, HOURS_IN_DAY, TIME_ANCHOR } from \"./utils/timeUtilities.js\";\nimport { SingleSelectListItem } from \"../List/index.js\";\nconst DEFAULT_WIDTH = 199;\nconst MINUTES_IN_HOUR = 60;\nconst MAX_VISIBLE_ITEMS_COUNT = 10;\nexport { normalizeTime, formatTime };\nclass WrappedTimepicker extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.dropdownRef = React.createRef();\n        this.getTimeItems = (selectedTime) => {\n            let currentItem;\n            const items = [];\n            const { h: hours, m: minutes } = selectedTime;\n            for (let h = 0; h < HOURS_IN_DAY; h += 1) {\n                for (let m = 0; m < MINUTES_IN_HOUR; m += TIME_ANCHOR) {\n                    const item = {\n                        h,\n                        m,\n                        title: formatTime(h, m),\n                    };\n                    items.push(item);\n                    if (h === hours && m === minutes) {\n                        currentItem = item;\n                    }\n                }\n            }\n            return { items, currentItem };\n        };\n        this.updateDropdownWidth = () => {\n            const { width } = this.dropdownRef.current.getBoundingClientRect();\n            this.setState({ dropdownWidth: width });\n        };\n        this.handleTimeChanged = (newlySelectedTime) => {\n            if (!newlySelectedTime) {\n                return;\n            }\n            const { h, m } = newlySelectedTime;\n            const selectedTime = updateTime(h, m);\n            this.setState({ selectedTime }, () => this.props.onChange(selectedTime));\n        };\n        this.updateLocaleForMoment();\n        const time = props.time || new Date();\n        this.state = {\n            dropdownWidth: DEFAULT_WIDTH,\n            selectedTime: props.skipNormalizeTime ? time : normalizeTime(time),\n        };\n    }\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (newProps.time !== this.props.time) {\n            const updatedTime = newProps.time || new Date();\n            this.setState({\n                selectedTime: this.props.skipNormalizeTime ? updatedTime : normalizeTime(updatedTime),\n            });\n        }\n    }\n    componentDidMount() {\n        this.updateDropdownWidth();\n    }\n    getComponentClasses() {\n        return `gd-datepicker ${this.props.className} gd-datepicker-input gd-timepicker`;\n    }\n    updateLocaleForMoment() {\n        moment.locale(translationUtils.sanitizeLocaleForMoment(this.props.intl.locale));\n    }\n    render() {\n        const { overlayPositionType, maxVisibleItemsCount, overlayZIndex } = this.props;\n        const { dropdownWidth, selectedTime } = this.state;\n        const time = {\n            h: selectedTime.getHours(),\n            m: selectedTime.getMinutes(),\n        };\n        const { items, currentItem } = this.getTimeItems(time);\n        return (React.createElement(\"div\", { className: this.getComponentClasses(), ref: this.dropdownRef },\n            React.createElement(Dropdown, { overlayPositionType: overlayPositionType, alignPoints: [\n                    {\n                        align: \"bl tl\",\n                    },\n                    {\n                        align: \"tl bl\",\n                    },\n                ], renderButton: ({ openDropdown, isOpen }) => (React.createElement(DropdownButton, { value: formatTime(time.h, time.m), isOpen: isOpen, onClick: openDropdown, iconLeft: \"gd-icon-timer\" })), renderBody: ({ closeDropdown, isMobile }) => (React.createElement(DropdownList, { isMobile: isMobile, width: dropdownWidth, items: items, renderItem: ({ item }) => (React.createElement(SingleSelectListItem, { title: item.title, isSelected: item === currentItem, onClick: () => {\n                            this.handleTimeChanged(item);\n                            closeDropdown();\n                        } })), maxVisibleItemsCount: maxVisibleItemsCount })), overlayZIndex: overlayZIndex })));\n    }\n}\nWrappedTimepicker.defaultProps = {\n    className: \"\",\n    maxVisibleItemsCount: MAX_VISIBLE_ITEMS_COUNT,\n    time: new Date(),\n    onChange: noop,\n    overlayZIndex: 0,\n    skipNormalizeTime: false,\n};\nexport { WrappedTimepicker };\nconst TimePickerWithIntl = injectIntl(WrappedTimepicker);\n/**\n * @internal\n */\nexport class Timepicker extends React.PureComponent {\n    render() {\n        return (React.createElement(IntlWrapper, { locale: this.props.locale },\n            React.createElement(TimePickerWithIntl, Object.assign({}, this.props))));\n    }\n}\n//# sourceMappingURL=Timepicker.js.map","// (C) 2019-2023 GoodData Corporation\nimport * as React from \"react\";\nimport { Datepicker, Timepicker } from \"@gooddata/sdk-ui-kit\";\nimport { DEFAULT_DROPDOWN_ZINDEX } from \"../constants.js\";\nconst MAX_VISIBLE_ITEMS_COUNT = 5;\nexport class DateTime extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.timeChange = (selectedTime) => {\n            this.props.onTimeChange({\n                hour: selectedTime.getHours(),\n                minute: selectedTime.getMinutes(),\n                second: selectedTime.getSeconds(),\n            });\n        };\n    }\n    render() {\n        const { date, dateFormat, label, locale, timezone, onDateChange, weekStart } = this.props;\n        return (React.createElement(\"div\", { className: \"gd-input-component gd-schedule-email-dialog-datetime s-gd-schedule-email-dialog-datetime\" },\n            React.createElement(\"label\", { className: \"gd-label\" }, label),\n            React.createElement(\"div\", null,\n                React.createElement(Datepicker, { date: date, dateFormat: dateFormat, locale: locale, placeholder: dateFormat, resetOnInvalidValue: true, onChange: onDateChange, weekStart: weekStart }),\n                React.createElement(Timepicker, { className: \"gd-schedule-email-dialog-datetime-time\", maxVisibleItemsCount: MAX_VISIBLE_ITEMS_COUNT, skipNormalizeTime: true, time: date, onChange: this.timeChange, overlayPositionType: \"sameAsTarget\", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }),\n                React.createElement(\"span\", { className: \"gd-schedule-email-dialog-datetime-timezone s-gd-schedule-email-dialog-datetime-timezone\" }, timezone))));\n    }\n}\n//# sourceMappingURL=DateTime.js.map","import { Icon } from \"./Icon.js\";\nconst INSIGHT_ICON_MAP = {\n    \"local:scatter\": Icon.ScatterPlot,\n    \"local:donut\": Icon.Donut,\n    \"local:headline\": Icon.HeadlineChart,\n    \"local:treemap\": Icon.TreeMap,\n    \"local:combo2\": Icon.Combo,\n    \"local:heatmap\": Icon.HeatMap,\n    \"local:bubble\": Icon.Bubble,\n    \"local:bullet\": Icon.Bullet,\n    \"local:bar\": Icon.Bar,\n    \"local:table\": Icon.Table,\n    \"local:area\": Icon.StackedArea,\n    \"local:column\": Icon.Column,\n    \"local:line\": Icon.Line,\n    \"local:pushpin\": Icon.Geo,\n    \"local:pie\": Icon.Pie,\n    \"local:sankey\": Icon.Sankey,\n    \"local:dependencywheel\": Icon.DependencyWheel,\n    \"local:funnel\": Icon.Funnel,\n    \"local:pyramid\": Icon.Pyramid,\n    \"local:waterfall\": Icon.Waterfall,\n};\n/**\n * @internal\n */\nexport const InsightIcon = ({ visualizationUrl, iconProps = {} }) => {\n    if (!visualizationUrl || !INSIGHT_ICON_MAP[visualizationUrl]) {\n        return null;\n    }\n    return INSIGHT_ICON_MAP[visualizationUrl](iconProps);\n};\n//# sourceMappingURL=InsightIcon.js.map","// (C) 2022 GoodData Corporation\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger, Dropdown, Button } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX } from \"../../constants.js\";\nconst ALIGN_POINTS = [\n    { align: \"bc tc\", offset: { x: 0, y: 0 } },\n    { align: \"tc bc\", offset: { x: 0, y: 0 } },\n];\nexport const ScheduleDropdown = (props) => {\n    const { title, applyDisabled, onApply, onCancel, iconComponent, contentComponent, buttonClassName, bodyClassName, buttonDisabled, } = props;\n    const intl = useIntl();\n    const renderBody = (closeDropdown) => {\n        return (React.createElement(\"div\", { className: \"gd-dropdown overlay\" },\n            React.createElement(\"div\", { className: cx(\"gd-schedule-dropdown-body\", bodyClassName) },\n                renderBodyHeader(),\n                renderBodyContentWrapper(),\n                renderBodyFooter(closeDropdown))));\n    };\n    const renderBodyHeader = () => {\n        return (React.createElement(\"div\", { className: \"gd-schedule-dropdown-header\" },\n            React.createElement(\"span\", null, title)));\n    };\n    const renderBodyContentWrapper = () => {\n        return React.createElement(\"div\", { className: \"gd-schedule-dropdown-content\" }, contentComponent);\n    };\n    const renderBodyFooter = (closeDropdown) => {\n        const cancelText = intl.formatMessage({ id: \"gs.list.cancel\" });\n        const applyText = intl.formatMessage({ id: \"gs.list.apply\" });\n        return (React.createElement(\"div\", { className: \"gd-schedule-dropdown-footer\" },\n            React.createElement(Button, { className: \"gd-button-secondary gd-button-small\", value: cancelText, onClick: () => {\n                    onCancel === null || onCancel === void 0 ? void 0 : onCancel();\n                    closeDropdown();\n                } }),\n            React.createElement(Button, { className: \"gd-button-action gd-button-small\", disabled: applyDisabled, value: applyText, onClick: () => {\n                    onApply === null || onApply === void 0 ? void 0 : onApply();\n                    closeDropdown();\n                } })));\n    };\n    return (React.createElement(Dropdown, { overlayPositionType: \"sameAsTarget\", alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, overlayZIndex: DEFAULT_DROPDOWN_ZINDEX, ignoreClicksOnByClass: [\".schedule-dropdown-ignore-click\"], renderButton: ({ toggleDropdown }) => (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n            React.createElement(\"a\", { className: cx(\"gd-schedule-dropdown-button\", buttonClassName, {\n                    \"gd-schedule-dropdown-button-disabled\": !!buttonDisabled,\n                }), target: \"_blank\", rel: \"noopener noreferrer\", onClick: () => {\n                    !buttonDisabled && toggleDropdown();\n                } },\n                iconComponent ? (React.createElement(\"div\", { className: \"gd-schedule-dropdown-button-icon\" }, iconComponent)) : null,\n                title),\n            buttonDisabled ? (React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: ALIGN_POINTS },\n                React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.attachment.select.disabled.message\" }))) : null)), renderBody: ({ closeDropdown }) => renderBody(closeDropdown) }));\n};\n//# sourceMappingURL=ScheduleDropdown.js.map","// (C) 2022 GoodData Corporation\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport identity from \"lodash/identity.js\";\nimport { Icon, InsightIcon, Typography } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { ScheduleDropdown } from \"./ScheduleDropdown.js\";\nexport const AttachmentsSelectionDropdown = (props) => {\n    var _a, _b;\n    const { dashboardTitle, insightWidgets = [], onApply } = props;\n    const intl = useIntl();\n    const theme = useTheme();\n    const ICON_COLOR = (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c5;\n    const ICON_SIZE_BUTTON = 18;\n    const ICON_PROPS = { color: ICON_COLOR, height: 19, width: 26 };\n    const [dashboardSelected, setDashboardSelected] = useState(props.dashboardSelected);\n    const [widgetsSelected, setWidgetsSelected] = useState(props.widgetsSelected);\n    const handleWidgetSelectedChange = useCallback((widgetRef) => {\n        const widgetRefKey = objRefToString(widgetRef);\n        setWidgetsSelected(Object.assign(Object.assign({}, widgetsSelected), { [widgetRefKey]: !widgetsSelected[widgetRefKey] }));\n    }, [widgetsSelected]);\n    const handleOnApply = useCallback(() => {\n        onApply(dashboardSelected, widgetsSelected);\n    }, [onApply, dashboardSelected, widgetsSelected]);\n    const handleOnCancel = useCallback(() => {\n        setDashboardSelected(props.dashboardSelected);\n        setWidgetsSelected(props.widgetsSelected);\n    }, [props.dashboardSelected, props.widgetsSelected]);\n    const canApply = (dashboardSelected || Object.values(widgetsSelected).some(identity)) &&\n        (dashboardSelected != props.dashboardSelected ||\n            JSON.stringify(widgetsSelected) !== JSON.stringify(props.widgetsSelected));\n    return (React.createElement(ScheduleDropdown, { title: intl.formatMessage({ id: \"dialogs.schedule.email.attachment.select\" }), applyDisabled: !canApply, onApply: handleOnApply, onCancel: handleOnCancel, buttonClassName: \"s-schedule-select-attachments-button\", bodyClassName: \"s-schedule-select-attachments-body\", buttonDisabled: insightWidgets.length === 0, iconComponent: React.createElement(Icon.AttachmentClip, { color: ICON_COLOR, width: ICON_SIZE_BUTTON, height: ICON_SIZE_BUTTON }), contentComponent: React.createElement(\"div\", { className: \"gd-attachments-selection-dropdown\" },\n            React.createElement(Typography, { tagName: \"h3\" },\n                React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.attachment.select.dashboard.header\" })),\n            React.createElement(\"div\", null,\n                React.createElement(\"label\", { className: \"input-checkbox-label s-schedule-dashboard-attachment-label\" },\n                    React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox\", checked: dashboardSelected, onChange: (event) => setDashboardSelected(event.target.checked) }),\n                    React.createElement(Icon.Dashboard, Object.assign({}, ICON_PROPS)),\n                    React.createElement(\"span\", { title: dashboardTitle, className: \"input-label-text\" }, dashboardTitle))),\n            React.createElement(Typography, { tagName: \"h3\" },\n                React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.attachment.select.widgets.header\" })),\n            insightWidgets.map((widget) => (React.createElement(\"div\", { key: objRefToString(widget) },\n                React.createElement(\"label\", { className: \"input-checkbox-label s-schedule-widget-attachment-label\" },\n                    React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox\", checked: widgetsSelected[objRefToString(widget)], onChange: () => handleWidgetSelectedChange(widget) }),\n                    React.createElement(InsightIcon, { visualizationUrl: widget.visualizationUrl, iconProps: ICON_PROPS }),\n                    React.createElement(\"span\", { title: widget.title, className: \"input-label-text\" }, widget.title)))))) }));\n};\n//# sourceMappingURL=AttachmentsSelectionDropdown.js.map","// (C) 2022 GoodData Corporation\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { Dropdown, DropdownButton, DropdownList, SingleSelectListItem, Icon } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { ScheduleDropdown } from \"./ScheduleDropdown.js\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX } from \"../../constants.js\";\nconst ICON_SIZE_BUTTON = 18;\nconst DROPDOWN_WIDTH = 70;\nexport const FormatOptionsDropdown = (props) => {\n    var _a, _b;\n    const { onApply } = props;\n    const intl = useIntl();\n    const theme = useTheme();\n    const FORMAT_VALUES = [\"csv\", \"xlsx\"];\n    const [format, setFormat] = useState(props.format);\n    const [mergeHeaders, setMergeHeaders] = useState(props.mergeHeaders);\n    const [includeFilters, setIncludeFilters] = useState(props.includeFilters);\n    const canApply = format !== props.format ||\n        mergeHeaders !== props.mergeHeaders ||\n        includeFilters !== props.includeFilters;\n    const handleOnApply = useCallback(() => onApply({\n        format,\n        mergeHeaders,\n        includeFilters,\n    }), [format, mergeHeaders, includeFilters, onApply]);\n    const handleOnCancel = useCallback(() => {\n        setFormat(props.format);\n        setMergeHeaders(props.mergeHeaders);\n        setIncludeFilters(props.includeFilters);\n    }, [props.format, props.mergeHeaders, props.includeFilters]);\n    const renderBodyContentSelector = () => {\n        return (React.createElement(\"div\", { className: \"gd-format-options-dropdown-selector\" },\n            React.createElement(\"span\", { className: \"input-label-text\" },\n                React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.insight.format\" })),\n            React.createElement(\"div\", null,\n                React.createElement(Dropdown, { overlayPositionType: \"sameAsTarget\", className: \"s-format-options-dropdown\", alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, overlayZIndex: DEFAULT_DROPDOWN_ZINDEX, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DropdownButton, { className: \"s-format-options-format-dropdown-button\", value: format.toUpperCase(), isOpen: isOpen, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { width: DROPDOWN_WIDTH, items: FORMAT_VALUES, renderItem: ({ item }) => {\n                            return (React.createElement(SingleSelectListItem, { className: \"s-format-options-dropdown-content schedule-dropdown-ignore-click\", title: item.toUpperCase(), onClick: () => {\n                                    setFormat(item);\n                                    closeDropdown();\n                                } }));\n                        } })) }))));\n    };\n    const renderBodyContentSelectorOptions = () => {\n        return (React.createElement(\"div\", { className: \"gd-format-options-dropdown-xlsx\" },\n            React.createElement(\"div\", null,\n                React.createElement(\"label\", { className: \"input-checkbox-label\" },\n                    React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox s-attachments-merge-headers\", checked: mergeHeaders, onChange: (event) => setMergeHeaders(event.target.checked) }),\n                    React.createElement(\"span\", { className: \"input-label-text\" },\n                        React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.attribute.merged\" })))),\n            React.createElement(\"div\", null,\n                React.createElement(\"label\", { className: \"input-checkbox-label s-attachments-include-filters\" },\n                    React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox\", checked: includeFilters, onChange: (event) => setIncludeFilters(event.target.checked) }),\n                    React.createElement(\"span\", { className: \"input-label-text\" },\n                        React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.show.filters\" }))))));\n    };\n    return (React.createElement(ScheduleDropdown, { title: intl.formatMessage({ id: \"dialogs.schedule.email.format.options\" }), applyDisabled: !canApply, onApply: handleOnApply, onCancel: handleOnCancel, buttonClassName: \"s-schedule-format-options-button\", bodyClassName: \"s-schedule-format-options-body\", iconComponent: React.createElement(Icon.SettingsGear, { color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c6, width: ICON_SIZE_BUTTON, height: ICON_SIZE_BUTTON }), contentComponent: React.createElement(\"div\", { className: \"gd-format-options-dropdown\" },\n            renderBodyContentSelector(),\n            format === \"xlsx\" && renderBodyContentSelectorOptions()) }));\n};\n//# sourceMappingURL=FormatOptionsDropdown.js.map","// (C) 2019-2022 GoodData Corporation\nimport * as React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport identity from \"lodash/identity.js\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { AttachmentsSelectionDropdown } from \"./AttachmentsSelectionDropdown.js\";\nimport { FormatOptionsDropdown } from \"./FormatOptionsDropdown.js\";\nconst AttachmentItem = ({ format, children }) => (React.createElement(\"div\", { \"aria-label\": \"dashboard-attachment\", className: \"gd-dashboard-attachment s-gd-dashboard-attachment\" },\n    React.createElement(\"span\", { className: \"gd-dashboard-attachment-format\" }, format),\n    React.createElement(\"span\", { className: \"gd-dashboard-attachment-name\" }, children)));\nexport const Attachments = (props) => {\n    const { dashboardTitle, dashboardSelected, widgetsSelected, insightWidgets = [], configuration, canExportTabular, onAttachmentsSelectionChanged, onAttachmentsConfigurationChanged, } = props;\n    const isSomeWidgetSelected = Object.values(widgetsSelected).some(identity);\n    const selectedWidgetsTitles = insightWidgets\n        .filter((widget) => widgetsSelected[objRefToString(widget)])\n        .map((widget) => widget.title);\n    return (React.createElement(\"div\", { className: \"gd-input-component gd-schedule-email-attachments s-schedule-email-attachments\" },\n        React.createElement(\"label\", { className: \"gd-label\" },\n            React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.attachments.label\" })),\n        React.createElement(\"div\", { className: \"gd-dashboard-attachment-list\" },\n            React.createElement(\"div\", { className: \"gd-dashboard-attachment-list-content\" },\n                dashboardSelected ? (React.createElement(AttachmentItem, { format: \"pdf\" },\n                    React.createElement(\"span\", { className: \"shortened-name\" }, dashboardTitle))) : null,\n                selectedWidgetsTitles.length !== 0 ? (React.createElement(AttachmentItem, { format: configuration.format },\n                    React.createElement(\"span\", { className: \"shortened-name\", title: selectedWidgetsTitles.join(\",\\n\") }, selectedWidgetsTitles.join(\", \")),\n                    selectedWidgetsTitles.length > 1 ? (React.createElement(\"span\", null, `(${selectedWidgetsTitles.length})`)) : null)) : null),\n            canExportTabular ? (React.createElement(\"div\", { className: \"gd-schedule-email-dialog-attachments\" },\n                React.createElement(AttachmentsSelectionDropdown, { dashboardTitle: dashboardTitle, dashboardSelected: dashboardSelected, insightWidgets: insightWidgets, widgetsSelected: widgetsSelected, onApply: onAttachmentsSelectionChanged }),\n                isSomeWidgetSelected ? (React.createElement(FormatOptionsDropdown, { format: configuration.format, mergeHeaders: configuration.mergeHeaders, includeFilters: configuration.includeFilters, onApply: onAttachmentsConfigurationChanged })) : null)) : null)));\n};\n//# sourceMappingURL=Attachments.js.map","// (C) 2019-2023 GoodData Corporation\n/* eslint-disable import/named,import/namespace */\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { components as ReactSelectComponents, } from \"react-select\";\nimport debounce from \"lodash/debounce.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isEqual from \"lodash/isEqual.js\";\nimport includes from \"lodash/includes.js\";\nimport { Bubble, BubbleHoverTrigger, Message, LoadingMask } from \"@gooddata/sdk-ui-kit\";\nimport { isEmail } from \"../../utils/validate.js\";\nimport { isScheduleEmailExistingRecipient, isScheduleEmailExternalRecipient, } from \"../../interfaces.js\";\nimport { getScheduledEmailRecipientDisplayName, getScheduledEmailRecipientEmail, getScheduledEmailRecipientUniqueIdentifier, splitScheduledEmailRecipients, uniqueScheduledEmailRecipients, } from \"../../utils/scheduledMailRecipients.js\";\nimport { messages } from \"../../../../../locales.js\";\nconst MAXIMUM_RECIPIENTS_RECEIVE = 60;\nconst DELAY_TIME = 500;\nconst PADDING = 16;\nconst REMOVE_ICON_WIDTH = 21;\nconst LOADING_MENU_HEIGHT = 50;\nconst CREATE_OPTION = \"create-option\";\nconst SELECT_OPTION = \"select-option\";\nconst { Menu, Input } = ReactSelectComponents;\nconst bubbleAlignPoints = [{ align: \"cr cl\" }];\nexport class RecipientsSelectRenderer extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.recipientRef = React.createRef();\n        this.renderEmptyContainer = () => {\n            return null;\n        };\n        this.renderNoOptionsContainer = (commonProps) => {\n            const { selectProps: { inputValue }, } = commonProps;\n            if (inputValue) {\n                return (React.createElement(Message, { className: \"gd-recipient-existed s-gd-recipient-existed\", type: \"warning\", contrast: true },\n                    React.createElement(FormattedMessage, { id: \"options.menu.schedule.email.recipient.warning.existed\" })));\n            }\n            return this.renderEmptyContainer();\n        };\n        this.renderMenuOptions = (menuProps) => {\n            const { isLoading, author } = this.props;\n            const { options, getValue, selectProps: { inputValue }, } = menuProps;\n            const selectedValues = getValue() || [];\n            const selectedItemsCount = selectedValues.length;\n            const areAllValuesSelected = options.length &&\n                options.every((option) => (isScheduleEmailExistingRecipient(option) && isEqual(option, author)) ||\n                    this.isRecipientAdded(selectedValues, getScheduledEmailRecipientEmail(option)));\n            if (isLoading) {\n                return this.renderLoadingIcon(menuProps);\n            }\n            if (!inputValue && (selectedItemsCount >= MAXIMUM_RECIPIENTS_RECEIVE || areAllValuesSelected)) {\n                return this.renderEmptyContainer();\n            }\n            return this.renderMenuOptionsContainer(menuProps);\n        };\n        this.renderMenuOptionsContainer = (menuProps) => {\n            return (React.createElement(Menu, Object.assign({ className: \"s-gd-recipients-menu-container\" }, menuProps), menuProps.children));\n        };\n        this.renderLoadingIcon = (menuProps) => {\n            return (React.createElement(Menu, Object.assign({ className: \"s-gd-recipients-menu-container\" }, menuProps),\n                React.createElement(LoadingMask, { height: LOADING_MENU_HEIGHT })));\n        };\n        this.renderOwnerValueContainer = (name, email) => {\n            const { isMulti } = this.props;\n            const selectTypeClassName = isMulti ? \"multiple-value\" : \"single-value\";\n            // when editing schedule created by another user, the owner should be rendered as email address\n            const value = this.currentUserIsAuthor() ? name : email;\n            return (React.createElement(\"div\", { style: this.getStyle(), className: `gd-recipient-value-item s-gd-recipient-value-item ${selectTypeClassName} gd-owner-user` },\n                React.createElement(\"div\", { className: \"gd-recipient-label\" }, value)));\n        };\n        this.renderMultiValueItemContainer = (label, removeIcon) => {\n            return (React.createElement(\"div\", { className: \"gd-recipient-value-item s-gd-recipient-value-item multiple-value\" },\n                React.createElement(\"div\", { style: this.getStyle(), className: \"gd-recipient-label\" }, label),\n                React.createElement(\"div\", { \"aria-label\": \"remove-icon\", className: \"s-gd-recipient-remove\" }, removeIcon)));\n        };\n        this.renderErrorValueContainer = (label, removeIcon, bubbleMessageTranslationId) => {\n            return (React.createElement(\"div\", { className: \"gd-recipient-value-item s-gd-recipient-value-item multiple-value not-valid\" },\n                React.createElement(BubbleHoverTrigger, { className: \"gd-recipient-not-valid-bubble\", showDelay: 0, hideDelay: 0 },\n                    React.createElement(\"div\", { className: \"recipient-item-not-valid\" },\n                        React.createElement(\"div\", { style: this.getStyle(), className: \"gd-recipient-label\" }, label),\n                        React.createElement(\"div\", { className: \"s-gd-recipient-remove\" }, removeIcon)),\n                    React.createElement(Bubble, { className: \"bubble-negative s-gd-recipient-not-valid-email\", alignPoints: bubbleAlignPoints },\n                        React.createElement(FormattedMessage, { id: bubbleMessageTranslationId })))));\n        };\n        this.renderSingleValueContainer = (singleValueProps) => {\n            const { data } = singleValueProps;\n            const displayName = getScheduledEmailRecipientDisplayName(data);\n            const email = getScheduledEmailRecipientEmail(data);\n            return this.renderOwnerValueContainer(displayName, email);\n        };\n        this.renderMultiValueContainer = (multiValueProps) => {\n            const { data, children } = multiValueProps;\n            // MultiValueRemove component from react-select\n            const removeIcon = children[1];\n            if (isScheduleEmailExistingRecipient(data) && isEqual(data, this.props.author)) {\n                const displayName = getScheduledEmailRecipientDisplayName(data);\n                const email = getScheduledEmailRecipientEmail(data);\n                return this.renderOwnerValueContainer(displayName, email);\n            }\n            const email = getScheduledEmailRecipientEmail(data);\n            if (!isEmail(email)) {\n                return this.renderErrorValueContainer(email, removeIcon, messages.scheduleEmailOptionRecepientInvalid.id);\n            }\n            // don't allow adding external recipients to schedules created by somebody else than the current user\n            if (!this.currentUserIsAuthor() &&\n                isScheduleEmailExternalRecipient(data) &&\n                !this.isOriginalExternalRecipient(data)) {\n                return this.renderErrorValueContainer(email, removeIcon, messages.scheduleEmailOptionRecepientExternalNotAllowed.id);\n            }\n            return this.renderMultiValueItemContainer(email, removeIcon);\n        };\n        this.renderOptionLabel = (recipient) => {\n            const email = getScheduledEmailRecipientEmail(recipient);\n            const isExternalUser = isScheduleEmailExternalRecipient(recipient);\n            const isExternalUserMatchingExistingEmail = isExternalUser &&\n                this.props.options.some((option) => getScheduledEmailRecipientEmail(option) === email);\n            // When we are typing in react-select, it creates a new option on the background (check this.getNewOptionData)\n            // To avoid displaying duplicities in the options, do not render external user option,\n            // when it matches existing user email.\n            if (isExternalUserMatchingExistingEmail) {\n                return null;\n            }\n            if (isEmail(email) && isExternalUser) {\n                if (this.currentUserIsAuthor()) {\n                    // Render warning message, when it's an external recipient\n                    return (React.createElement(\"div\", { className: \"s-gd-recipient-option-item s-recipient-not-in-workspace-warning\" },\n                        React.createElement(Message, { type: \"warning\", contrast: true },\n                            React.createElement(FormattedMessage, { id: \"options.menu.schedule.email.recipient.warning.belong.workspace\" }))));\n                }\n                else {\n                    // Render warning message, when it's an external recipient and the current user is not the author\n                    // Other users cannot add external recipients\n                    return (React.createElement(\"div\", { className: \"s-gd-recipient-option-item s-external-recipient-not-allowed\" },\n                        React.createElement(Message, { type: \"error\", contrast: true },\n                            React.createElement(FormattedMessage, { id: \"options.menu.schedule.email.recipient.external.not.allowed\" }))));\n                }\n            }\n            return (React.createElement(\"div\", { className: \"gd-recipient-option-item s-gd-recipient-option-item\" },\n                React.createElement(\"span\", { className: \"gd-recipient-option-label-item s-gd-recipient-option-label-item\" }, email),\n                this.renderRecipientValue(recipient)));\n        };\n        this.getNewOptionData = (inputValue) => ({\n            email: inputValue,\n        });\n        this.renderRecipientValue = (recipient) => {\n            const isExternalUser = isScheduleEmailExternalRecipient(recipient);\n            const email = getScheduledEmailRecipientEmail(recipient);\n            if (!isExternalUser && isEmail(email)) {\n                return (React.createElement(\"span\", { className: \"gd-recipient-option-value-item s-gd-recipient-option-value-item\" }, getScheduledEmailRecipientDisplayName(recipient)));\n            }\n            return this.renderEmptyContainer();\n        };\n        this.renderInputContainer = (inputProps) => {\n            const { isMulti } = this.props;\n            if (!isMulti) {\n                return this.renderEmptyContainer();\n            }\n            return (React.createElement(\"div\", { className: \"gd-recipient-input s-gd-recipient-input\" },\n                React.createElement(Input, Object.assign({}, inputProps))));\n        };\n        this.handleOnChange = (selectedValues, actionTypes) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            const splittedSelectedValues = splitScheduledEmailRecipients(selectedValues);\n            const newSelectedValues = uniqueScheduledEmailRecipients(splittedSelectedValues);\n            const { value, allowEmptySelection } = this.props;\n            const { action } = actionTypes;\n            if (value.length >= MAXIMUM_RECIPIENTS_RECEIVE &&\n                (action === CREATE_OPTION || action === SELECT_OPTION)) {\n                (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n                return;\n            }\n            if (newSelectedValues === null) {\n                if (allowEmptySelection) {\n                    (_d = (_c = this.props).onChange) === null || _d === void 0 ? void 0 : _d.call(_c, []);\n                }\n                else {\n                    (_f = (_e = this.props).onChange) === null || _f === void 0 ? void 0 : _f.call(_e, [value[0]]);\n                }\n                return;\n            }\n            (_h = (_g = this.props).onChange) === null || _h === void 0 ? void 0 : _h.call(_g, newSelectedValues);\n        };\n        this.loadUserListItems = (searchString) => {\n            const { options, value, canListUsersInProject, onLoad } = this.props;\n            const matchedUserList = this.getMatchedRecipientEmails(options, searchString);\n            const matchedUserListCount = matchedUserList.length;\n            const isRecipientAdded = this.isRecipientAdded(value, searchString);\n            if (!canListUsersInProject || isRecipientAdded || matchedUserListCount > 0) {\n                return;\n            }\n            this.setState({ isLoading: true });\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad({ search: searchString });\n        };\n        this.onMenuOpen = () => {\n            const { onLoad, canListUsersInProject, options } = this.props;\n            const userListCount = options.length;\n            if (!userListCount && canListUsersInProject) {\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad();\n            }\n        };\n        this.onSearchCore = (searchString) => {\n            this.loadUserListItems(searchString);\n        };\n        this.onSearch = debounce(this.onSearchCore, DELAY_TIME);\n        this.isRecipientAdded = (value, searchKey) => {\n            return value.some((recipient) => isEqual(getScheduledEmailRecipientUniqueIdentifier(recipient), searchKey));\n        };\n    }\n    componentDidMount() {\n        const { current } = this.recipientRef;\n        if (!current) {\n            return;\n        }\n        // update owner component style after recipient rendered\n        const ownerContainer = current.querySelector(\".gd-owner-user\");\n        const style = this.getStyle();\n        if (ownerContainer && style) {\n            ownerContainer.setAttribute(\"style\", `max-width: ${style.maxWidth}px`);\n        }\n    }\n    render() {\n        const { isMulti, options, value } = this.props;\n        const creatableSelectComponent = Object.assign(Object.assign({}, ReactSelectComponents), { IndicatorsContainer: this.renderEmptyContainer, Input: this.renderInputContainer, MultiValueContainer: this.renderMultiValueContainer, Menu: this.renderMenuOptions, Placeholder: this.renderEmptyContainer, SingleValue: this.renderSingleValueContainer, NoOptionsMessage: this.renderNoOptionsContainer });\n        return (React.createElement(\"div\", { className: \"gd-input-component gd-recipients-field s-gd-schedule-email-dialog-recipients\" },\n            React.createElement(\"label\", { className: \"gd-label\" },\n                React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.to.label\" })),\n            React.createElement(\"div\", { ref: this.recipientRef, className: \"gd-input s-gd-recipients-value\" },\n                React.createElement(CreatableSelect, { className: \"gd-recipients-container\", classNamePrefix: \"gd-recipients\", components: creatableSelectComponent, getNewOptionData: this.getNewOptionData, formatOptionLabel: this.renderOptionLabel, isClearable: false, isDisabled: !isMulti, isMulti: isMulti, onChange: \n                    // using as any as it would be too tricky to type properly\n                    this.handleOnChange, onInputChange: this.onSearch, onMenuOpen: this.onMenuOpen, options: options, value: value, getOptionValue: getScheduledEmailRecipientUniqueIdentifier, getOptionLabel: getScheduledEmailRecipientEmail }))));\n    }\n    getStyle() {\n        const { current } = this.recipientRef;\n        const { width } = (!isEmpty(current) && current.getBoundingClientRect()) || { width: undefined };\n        return {\n            maxWidth: width\n                ? width - PADDING - REMOVE_ICON_WIDTH // label item width equal value item container - padding - remove icon\n                : \"100%\",\n        };\n    }\n    currentUserIsAuthor() {\n        const { currentUser, author } = this.props;\n        return isScheduleEmailExistingRecipient(author) && areObjRefsEqual(author.user.ref, currentUser.ref);\n    }\n    isOriginalExternalRecipient(recipient) {\n        return this.props.originalValue.some((option) => {\n            return isScheduleEmailExternalRecipient(option) && option.email === recipient.email;\n        });\n    }\n    getMatchedRecipientEmails(options, searchKey) {\n        return searchKey\n            ? options.filter((recipient) => includes(getScheduledEmailRecipientEmail(recipient), searchKey))\n            : [];\n    }\n}\n//# sourceMappingURL=RecipientsSelectRenderer.js.map","// (C) 2019-2020 GoodData Corporation\n/* eslint-disable import/named,import/namespace */\nimport React, { useMemo, useState } from \"react\";\nimport sortBy from \"lodash/sortBy.js\";\nimport { useWorkspaceUsers } from \"../../useWorkspaceUsers.js\";\nimport { RecipientsSelectRenderer } from \"./RecipientsSelectRenderer.js\";\nexport const RecipientsSelect = (props) => {\n    const { backend, workspace, author, currentUser, value, originalValue, onChange, onError, canListUsersInProject, enableKPIDashboardScheduleRecipients, allowEmptySelection, } = props;\n    const [search, setSearch] = useState();\n    const { result, status } = useWorkspaceUsers({ backend, workspace, search, onError });\n    const options = useMemo(() => { var _a; return sortBy((_a = result === null || result === void 0 ? void 0 : result.map((user) => ({ user }))) !== null && _a !== void 0 ? _a : [], \"user.email\"); }, [result]);\n    return (React.createElement(RecipientsSelectRenderer, { canListUsersInProject: canListUsersInProject, isMulti: enableKPIDashboardScheduleRecipients, options: options, value: value, originalValue: originalValue, onChange: onChange, author: author, currentUser: currentUser, onLoad: (queryOptions) => {\n            setSearch(queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.search);\n        }, isLoading: status === \"loading\" || status === \"pending\", allowEmptySelection: allowEmptySelection }));\n};\n//# sourceMappingURL=RecipientsSelect.js.map","import { useBackendStrict, useCancelablePromise, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport { useDashboardSelector, selectCanListUsersInWorkspace } from \"../../../model/index.js\";\n/**\n * Hook allowing to download workspace users\n * @param config - configuration of the hook\n * @internal\n */\nexport function useWorkspaceUsers({ search, backend, workspace, onCancel, onError, onLoading, onPending, onSuccess, }) {\n    const effectiveBackend = useBackendStrict(backend);\n    const effectiveWorkspace = useWorkspaceStrict(workspace);\n    const canListUsersInWorkspace = useDashboardSelector(selectCanListUsersInWorkspace);\n    // if the user cannot list the users, do not even try and resolve to an empty array\n    const promise = canListUsersInWorkspace\n        ? () => {\n            let loader = effectiveBackend.workspace(effectiveWorkspace).users();\n            if (search) {\n                loader = loader.withOptions({ search: `%${search}` });\n            }\n            return loader.queryAll();\n        }\n        : () => Promise.resolve([]);\n    return useCancelablePromise({ promise, onCancel, onError, onLoading, onPending, onSuccess }, [\n        effectiveBackend,\n        effectiveWorkspace,\n        search,\n    ]);\n}\n//# sourceMappingURL=useWorkspaceUsers.js.map","// (C) 2019-2022 GoodData Corporation\nimport * as React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Icon } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { isMobileView } from \"../../utils/responsive.js\";\nexport const AttachmentNoWidgets = (props) => {\n    var _a, _b;\n    const { className = \"\", fileName, label } = props;\n    const intl = useIntl();\n    const theme = useTheme();\n    const classNames = `gd-input-component gd-attachment-component ${className}`;\n    const nameOfAttachment = isMobileView() ? \"PDF\" : fileName;\n    const textFilters = intl.formatMessage({ id: \"dialogs.schedule.email.attachment.filter\" });\n    return (React.createElement(\"div\", { className: classNames },\n        React.createElement(\"label\", { className: \"gd-label\" }, label),\n        React.createElement(\"span\", { className: \"gd-icon-pdf\" },\n            React.createElement(Icon.Pdf, { width: 11, height: 14, color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c8 })),\n        React.createElement(\"span\", { className: \"s-attachment-name\" }, `${nameOfAttachment} ${textFilters}`)));\n};\n//# sourceMappingURL=AttachmentNoWidgets.js.map","// (C) 2019-2023 GoodData Corporation\nimport * as React from \"react\";\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport differenceBy from \"lodash/differenceBy.js\";\nimport isEqual from \"lodash/isEqual.js\";\nimport omit from \"lodash/omit.js\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport parse from \"date-fns/parse/index.js\";\nimport { normalizeTime, ConfirmDialogBase, Overlay, Message } from \"@gooddata/sdk-ui-kit\";\nimport { uriRef, objRefToString, areObjRefsEqual, isDashboardAttachment, isWidgetAttachment, } from \"@gooddata/sdk-model\";\nimport { withContexts } from \"@gooddata/sdk-ui\";\nimport memoize from \"lodash/memoize.js\";\nimport { DEFAULT_REPEAT_PERIOD, PLATFORM_DATE_FORMAT, REPEAT_EXECUTE_ON, REPEAT_FREQUENCIES, REPEAT_TYPES, } from \"../constants.js\";\nimport { isScheduleEmailExistingRecipient, isScheduleEmailExternalRecipient, } from \"../interfaces.js\";\nimport { generateRepeatString, setDailyRepeat, setMonthlyRepeat, setWeeklyRepeat, parseRepeatString, } from \"../utils/repeat.js\";\nimport { getScheduledEmailSummaryString } from \"../utils/scheduledMailSummary.js\";\nimport { getScheduledEmailRecipientEmail } from \"../utils/scheduledMailRecipients.js\";\nimport { getTimezoneByIdentifier, getUserTimezone, TIMEZONE_DEFAULT } from \"../utils/timezone.js\";\nimport { getDate, getMonth, getYear, convertDateToDisplayDateString, convertDateToPlatformDateString, } from \"../utils/datetime.js\";\nimport { isEmail } from \"../utils/validate.js\";\nimport { Textarea } from \"./Textarea.js\";\nimport { RepeatSelect } from \"./RepeatSelect/RepeatSelect.js\";\nimport { Input } from \"./Input.js\";\nimport { DateTime } from \"./DateTime.js\";\nimport { Attachments } from \"./Attachments/Attachments.js\";\nimport { RecipientsSelect } from \"./RecipientsSelect/RecipientsSelect.js\";\nimport { IntlWrapper } from \"../../../localization/index.js\";\nimport { DASHBOARD_TITLE_MAX_LENGTH } from \"../../../constants/index.js\";\nimport { AttachmentNoWidgets } from \"./Attachments/AttachmentNoWidgets.js\";\nconst MAX_MESSAGE_LENGTH = 200;\nconst MAX_SUBJECT_LENGTH = 200;\nconst MAX_DASHBOARD_TITLE_LENGTH = DASHBOARD_TITLE_MAX_LENGTH;\nconst MAX_HYPHEN_LENGTH = 3;\nconst userToRecipient = memoize((user) => ({\n    user,\n}));\nclass ScheduledMailDialogRendererUI extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onAlign = (alignment) => {\n            if (alignment.top < 0) {\n                this.setState({ alignment: \"tc tc\" });\n            }\n        };\n        this.renderAttachment = () => {\n            const { intl, dashboardTitle, dashboardInsightWidgets, enableWidgetExportScheduling, canExportTabular, } = this.props;\n            const { dashboardSelected, widgetsSelected, configuration } = this.state.attachments;\n            const defaultAttachment = this.getDefaultAttachment();\n            const fileName = `${defaultAttachment}.pdf`;\n            return enableWidgetExportScheduling ? (React.createElement(Attachments, { dashboardTitle: dashboardTitle, insightWidgets: dashboardInsightWidgets, dashboardSelected: dashboardSelected, widgetsSelected: widgetsSelected, configuration: configuration, canExportTabular: canExportTabular, onAttachmentsSelectionChanged: this.onAttachmentsChange, onAttachmentsConfigurationChanged: this.onAttachmentsConfigurationChange })) : (React.createElement(AttachmentNoWidgets, { className: \"s-gd-schedule-email-dialog-attachment\", label: intl.formatMessage({ id: \"dialogs.schedule.email.attachment.label\" }), fileName: fileName }));\n        };\n        this.renderDateTime = () => {\n            const { dateFormat, intl, locale, weekStart } = this.props;\n            const { repeat: { time }, startDate, } = this.state;\n            const sendDate = new Date(getYear(startDate), getMonth(startDate) - 1, getDate(startDate), time.hour, time.minute);\n            return (React.createElement(DateTime, { date: sendDate, dateFormat: dateFormat, label: intl.formatMessage({ id: \"dialogs.schedule.email.time.label\" }), locale: locale, timezone: this.state.userTimezone.title, onDateChange: this.onDateChange, onTimeChange: this.onTimeChange, weekStart: weekStart }));\n        };\n        this.renderMessage = () => {\n            const { intl } = this.props;\n            const defaultEmailBody = this.getDefaultEmailBody();\n            return (React.createElement(Textarea, { className: \"s-gd-schedule-email-dialog-message\", label: intl.formatMessage({ id: \"dialogs.schedule.email.message.label\" }), maxlength: MAX_MESSAGE_LENGTH, placeholder: defaultEmailBody, rows: 4, onChange: this.onMessageChange, value: this.state.emailBody }));\n        };\n        this.renderFiltersMessage = () => {\n            const { enableWidgetExportScheduling, hasDefaultFilters, editSchedule } = this.props;\n            if (editSchedule) {\n                return (React.createElement(Message, { className: \"gd-schedule-email-dialog-filters-message \", type: \"progress\" },\n                    React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.filters.not.saved\" })));\n            }\n            if (enableWidgetExportScheduling && !hasDefaultFilters) {\n                return (React.createElement(Message, { className: \"gd-schedule-email-dialog-filters-message \", type: \"progress\" },\n                    React.createElement(FormattedMessage, { id: \"dialogs.schedule.email.filters\" })));\n            }\n        };\n        this.renderRecipients = () => {\n            var _a, _b;\n            const { selectedRecipients } = this.state;\n            const { backend, workspace, canListUsersInProject, enableKPIDashboardScheduleRecipients, currentUser, editSchedule, } = this.props;\n            // it should be possible to remove the only remaining recipient if the author unsubscribed\n            const allowEmptySelection = (_a = editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.unsubscribed) === null || _a === void 0 ? void 0 : _a.some((unsubscribedRecipient) => { var _a; return unsubscribedRecipient === ((_a = editSchedule.createdBy) === null || _a === void 0 ? void 0 : _a.email); });\n            return (React.createElement(RecipientsSelect, { author: userToRecipient((editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.createdBy) ? editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.createdBy : currentUser), currentUser: currentUser, canListUsersInProject: canListUsersInProject, enableKPIDashboardScheduleRecipients: enableKPIDashboardScheduleRecipients, value: selectedRecipients, originalValue: ((_b = this.originalEditState) === null || _b === void 0 ? void 0 : _b.selectedRecipients) || [], onChange: this.onRecipientsChange, onError: this.props.onError, backend: backend, workspace: workspace, allowEmptySelection: allowEmptySelection }));\n        };\n        this.renderUnsubscribedRecipients = () => {\n            var _a;\n            const { intl, editSchedule } = this.props;\n            const unsubscribedAmount = ((_a = editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.unsubscribed) === null || _a === void 0 ? void 0 : _a.length) === undefined ? 0 : editSchedule.unsubscribed.length;\n            return (unsubscribedAmount !== 0 && (React.createElement(\"div\", { className: \"gd-input-component\" },\n                React.createElement(\"span\", { className: \"gd-schedule-email-dialog-unsubscribed-recipients\" }, intl.formatMessage({ id: \"dialogs.schedule.email.unsubscribed.recipients\" }, { n: unsubscribedAmount })))));\n        };\n        this.renderRepeats = () => {\n            const { intl } = this.props;\n            const { startDate, repeat } = this.state;\n            let repeatFrequency = REPEAT_FREQUENCIES.DAY;\n            let repeatExecuteOn = REPEAT_EXECUTE_ON.DAY_OF_MONTH;\n            if (repeat.repeatFrequency.week) {\n                repeatFrequency = REPEAT_FREQUENCIES.WEEK;\n            }\n            else if (repeat.repeatFrequency.month) {\n                repeatFrequency = REPEAT_FREQUENCIES.MONTH;\n                repeatExecuteOn = repeat.repeatFrequency.month.type;\n            }\n            return (React.createElement(RepeatSelect, { label: intl.formatMessage({ id: \"dialogs.schedule.email.repeats.label\" }), repeatExecuteOn: repeatExecuteOn, repeatFrequency: repeatFrequency, repeatPeriod: repeat.repeatPeriod, repeatType: repeat.repeatType, startDate: startDate, onChange: this.onRepeatsChange }));\n        };\n        this.renderSubject = () => {\n            const { intl } = this.props;\n            return (React.createElement(Input, { className: \"s-gd-schedule-email-dialog-subject\", label: intl.formatMessage({ id: \"dialogs.schedule.email.subject.label\" }), maxlength: MAX_SUBJECT_LENGTH, placeholder: this.getDefaultSubject(), value: this.state.emailSubject, onChange: this.onSubjectChange }));\n        };\n        // Listeners\n        this.onScheduleDialogSubmit = () => {\n            var _a;\n            const { onSubmit, onSave, editSchedule } = this.props;\n            if (editSchedule) {\n                if (onSave) {\n                    const originalFilterContext = (_a = editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.attachments[0]) === null || _a === void 0 ? void 0 : _a.filterContext;\n                    onSave(this.getScheduleEmailData(), originalFilterContext);\n                }\n            }\n            else {\n                if (onSubmit) {\n                    onSubmit(this.getScheduleEmailData());\n                }\n            }\n        };\n        this.onDateChange = (selectedDateObject) => {\n            const { repeatFrequency } = this.state.repeat;\n            const newRepeat = cloneDeep(this.state.repeat);\n            if (repeatFrequency.month) {\n                setMonthlyRepeat(newRepeat, repeatFrequency.month.type, selectedDateObject);\n            }\n            else if (repeatFrequency.week) {\n                setWeeklyRepeat(newRepeat, selectedDateObject);\n            }\n            else {\n                setDailyRepeat(newRepeat);\n            }\n            this.setState({\n                startDate: selectedDateObject,\n                repeat: newRepeat,\n            });\n        };\n        this.onTimeChange = (time) => {\n            this.setState((prevState) => {\n                return {\n                    repeat: Object.assign(Object.assign({}, prevState.repeat), { time }),\n                };\n            });\n        };\n        this.onRecipientsChange = (selectedRecipients) => {\n            const { editSchedule, currentUser } = this.props;\n            const allRecipientsAreEmails = selectedRecipients.map(getScheduledEmailRecipientEmail).every(isEmail);\n            const newExternalRecipientsEmails = selectedRecipients\n                .filter(isScheduleEmailExternalRecipient)\n                .map((recipient) => recipient.email);\n            const hasNewExternalRecipients = editSchedule\n                ? differenceBy(newExternalRecipientsEmails, editSchedule.bcc || []).length > 0\n                : false;\n            const author = userToRecipient((editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.createdBy) ? editSchedule === null || editSchedule === void 0 ? void 0 : editSchedule.createdBy : currentUser);\n            const currentUserIsAuthor = isScheduleEmailExistingRecipient(author) && areObjRefsEqual(author.user.ref, currentUser.ref);\n            this.setState({\n                selectedRecipients,\n                // new external recipients are not allowed when the current user is not the author of edited schedule\n                isValidScheduleEmailData: allRecipientsAreEmails && (currentUserIsAuthor || !hasNewExternalRecipients),\n            });\n        };\n        this.onMessageChange = (value) => {\n            this.setState({\n                emailBody: value,\n            });\n        };\n        this.onRepeatsChange = (data) => {\n            const { repeatExecuteOn, repeatFrequency, repeatPeriod, repeatType } = data;\n            const { startDate } = this.state;\n            const newRepeat = cloneDeep(this.state.repeat);\n            newRepeat.repeatType = repeatType;\n            newRepeat.repeatPeriod = repeatPeriod;\n            if (repeatType === REPEAT_TYPES.CUSTOM) {\n                if (repeatFrequency === REPEAT_FREQUENCIES.MONTH) {\n                    setMonthlyRepeat(newRepeat, repeatExecuteOn, startDate);\n                }\n                else if (repeatFrequency === REPEAT_FREQUENCIES.WEEK) {\n                    setWeeklyRepeat(newRepeat, startDate);\n                }\n                else {\n                    setDailyRepeat(newRepeat);\n                }\n            }\n            else if (repeatType === REPEAT_TYPES.MONTHLY) {\n                setMonthlyRepeat(newRepeat, REPEAT_EXECUTE_ON.DAY_OF_WEEK, startDate);\n            }\n            else if (repeatType === REPEAT_TYPES.WEEKLY) {\n                setWeeklyRepeat(newRepeat, startDate);\n            }\n            else {\n                setDailyRepeat(newRepeat);\n            }\n            this.setState({ repeat: newRepeat });\n        };\n        this.onSubjectChange = (value) => {\n            this.setState({\n                emailSubject: value,\n            });\n        };\n        this.onAttachmentsChange = (dashboardSelected, widgetsSelected) => {\n            this.setState({\n                attachments: Object.assign(Object.assign({}, this.state.attachments), { dashboardSelected,\n                    widgetsSelected }),\n            });\n        };\n        this.onAttachmentsConfigurationChange = (configuration) => {\n            this.setState({\n                attachments: Object.assign(Object.assign({}, this.state.attachments), { configuration }),\n            });\n        };\n        // Internal utils\n        this.getDefaultAttachment = () => {\n            const { dashboardTitle, dateFormat } = this.props;\n            const { startDate } = this.state;\n            const displayDateString = convertDateToDisplayDateString(startDate, dateFormat);\n            const dashboardTitleMaxLength = this.getDashboardTitleMaxLength(displayDateString);\n            const isDashboardTitleTooLong = dashboardTitle.length > dashboardTitleMaxLength;\n            const truncatedDashboardTitle = isDashboardTitleTooLong\n                ? dashboardTitle.substring(0, dashboardTitleMaxLength)\n                : dashboardTitle;\n            return `${truncatedDashboardTitle} - ${displayDateString}`;\n        };\n        this.getDefaultSubject = () => {\n            const { dashboardTitle } = this.props;\n            const isDashboardTitleTooLong = dashboardTitle.length > MAX_DASHBOARD_TITLE_LENGTH;\n            return isDashboardTitleTooLong\n                ? dashboardTitle.substring(0, MAX_DASHBOARD_TITLE_LENGTH)\n                : dashboardTitle;\n        };\n        this.getDefaultEmailBody = () => {\n            const { intl } = this.props;\n            return intl.formatMessage({\n                id: \"dialogs.schedule.email.message.placeholder\",\n            });\n        };\n        this.getAttachments = (dashboard) => {\n            const result = [];\n            const { dashboardSelected, widgetsSelected, configuration } = this.state.attachments;\n            if (dashboardSelected) {\n                result.push({\n                    dashboard,\n                    format: \"pdf\",\n                });\n            }\n            const exportOptions = configuration.format === \"xlsx\"\n                ? {\n                    mergeHeaders: configuration.mergeHeaders,\n                    includeFilters: configuration.includeFilters,\n                }\n                : undefined;\n            const widgetsRefStringToUriRefMap = this.props.dashboardInsightWidgets.reduce((acc, widget) => {\n                acc[objRefToString(widget)] = uriRef(widget.uri);\n                return acc;\n            }, {});\n            for (const widgetRefString in widgetsSelected) {\n                if (widgetsSelected[widgetRefString]) {\n                    result.push({\n                        widget: widgetsRefStringToUriRefMap[widgetRefString],\n                        widgetDashboard: dashboard,\n                        formats: [configuration.format],\n                        exportOptions,\n                    });\n                }\n            }\n            return result;\n        };\n        this.getScheduleEmailData = () => {\n            const { editSchedule } = this.props;\n            const when = this.getTimeSchedule();\n            const { selectedRecipients: recipients, emailSubject, emailBody } = this.state;\n            /// To: is currently only owner\n            const toEmails = recipients\n                .filter(isScheduleEmailExistingRecipient)\n                .map((recipient) => recipient.user.login);\n            /// All other emails (without owner)\n            const bccEmails = recipients\n                .filter(isScheduleEmailExternalRecipient)\n                .map((recipient) => recipient.email);\n            const subject = emailSubject || this.getDefaultSubject();\n            const body = emailBody || this.getDefaultEmailBody();\n            const description = this.getSummaryMessage();\n            const attachments = this.getAttachments(this.props.dashboard);\n            let unsubscribed = undefined;\n            if (editSchedule) {\n                unsubscribed = differenceBy(editSchedule.unsubscribed, toEmails.concat(bccEmails));\n            }\n            return {\n                when,\n                to: toEmails,\n                bcc: bccEmails,\n                unsubscribed,\n                subject,\n                body,\n                attachments,\n                description,\n                title: subject,\n                // Every scheduled email is private for the logged in user.\n                unlisted: true,\n                uri: editSchedule ? editSchedule.uri : undefined,\n            };\n        };\n        this.getTimeSchedule = () => {\n            const recurrence = generateRepeatString(this.state.repeat);\n            const startDate = convertDateToPlatformDateString(this.state.startDate);\n            return {\n                recurrence,\n                startDate,\n                timeZone: this.state.userTimezone.identifier,\n            };\n        };\n        this.getSummaryMessage = () => {\n            const { startDate, repeat } = this.state;\n            return getScheduledEmailSummaryString(this.props.intl, repeat, startDate);\n        };\n        this.state = this.props.editSchedule\n            ? this.getEditState(this.props.editSchedule, this.props.users)\n            : this.getDefaultState();\n    }\n    getDefaultState() {\n        const now = new Date();\n        const normalizedTime = normalizeTime(now);\n        return {\n            alignment: \"cc cc\",\n            startDate: now,\n            userTimezone: getUserTimezone(),\n            emailSubject: \"\",\n            emailBody: \"\",\n            repeat: {\n                time: {\n                    hour: normalizedTime.getHours(),\n                    minute: normalizedTime.getMinutes(),\n                    second: 0,\n                },\n                repeatType: REPEAT_TYPES.DAILY,\n                repeatPeriod: DEFAULT_REPEAT_PERIOD,\n                repeatFrequency: {\n                    [REPEAT_FREQUENCIES.DAY]: true,\n                },\n            },\n            selectedRecipients: [userToRecipient(this.props.currentUser)],\n            isValidScheduleEmailData: true,\n            attachments: Object.assign(Object.assign({}, this.getDefaultAttachments()), { configuration: {\n                    format: \"csv\",\n                    mergeHeaders: true,\n                    includeFilters: true,\n                } }),\n        };\n    }\n    getEditState(schedule, users) {\n        var _a, _b;\n        const defaultState = this.getDefaultState();\n        const selectedRecipients = schedule.to.concat(schedule.bcc || []).map((email) => {\n            var _a;\n            /**\n             * There can be the case that users might have different email and login address\n             * Need to make the comparison from user login, since email is not an unique value\n             */\n            if (email === ((_a = schedule.createdBy) === null || _a === void 0 ? void 0 : _a.login)) {\n                return userToRecipient(schedule.createdBy);\n            }\n            else {\n                return { email };\n            }\n        });\n        /**\n         *  At this point, all recipients except the author are stored as external (IScheduleEmailExternalRecipient).\n         *  They will be compared with workspace users and potentially switched to workspace recipients (IScheduleEmailExistingRecipient)\n         *  and obtain correct values to be displayed on UI\n         */\n        const processedRecipients = selectedRecipients.map((recipient) => {\n            if (isScheduleEmailExternalRecipient(recipient)) {\n                // need to make the comparison from user login, since email is not an unique value\n                const user = users.find((user) => user.login === recipient.email);\n                if (user) {\n                    return { user };\n                }\n            }\n            return recipient;\n        });\n        const dashboardAttachments = schedule.attachments.filter(isDashboardAttachment);\n        const widgetAttachments = schedule.attachments.filter(isWidgetAttachment);\n        const widgetsSelected = this.props.dashboardInsightWidgets.reduce((acc, widget) => {\n            const widgetKey = objRefToString(widget);\n            acc[widgetKey] = widgetAttachments.some((widgetAttachment) => {\n                return areObjRefsEqual(widgetAttachment.widget, widget);\n            });\n            return acc;\n        }, {});\n        const configuration = widgetAttachments.length === 0\n            ? defaultState.attachments.configuration\n            : {\n                format: widgetAttachments[0].formats[0] || \"csv\",\n                mergeHeaders: ((_a = widgetAttachments[0].exportOptions) === null || _a === void 0 ? void 0 : _a.mergeHeaders) || false,\n                includeFilters: ((_b = widgetAttachments[0].exportOptions) === null || _b === void 0 ? void 0 : _b.includeFilters) || false,\n            };\n        const newState = Object.assign(Object.assign({}, defaultState), { emailSubject: schedule.subject, emailBody: schedule.body, selectedRecipients: processedRecipients, userTimezone: getTimezoneByIdentifier(schedule.when.timeZone) || TIMEZONE_DEFAULT, startDate: parse(schedule.when.startDate, PLATFORM_DATE_FORMAT, new Date()), isValidScheduleEmailData: true, repeat: parseRepeatString(schedule.when.recurrence), attachments: {\n                dashboardSelected: dashboardAttachments.length !== 0,\n                widgetsSelected,\n                configuration,\n            } });\n        this.originalEditState = newState;\n        return newState;\n    }\n    getDefaultAttachments() {\n        const { enableWidgetExportScheduling, defaultAttachment, dashboardInsightWidgets } = this.props;\n        const isDefaultAttachmentValid = dashboardInsightWidgets.some((widget) => areObjRefsEqual(widget.ref, defaultAttachment));\n        if (enableWidgetExportScheduling && defaultAttachment && isDefaultAttachmentValid) {\n            return {\n                dashboardSelected: false,\n                widgetsSelected: { [objRefToString(defaultAttachment)]: true },\n            };\n        }\n        else {\n            return {\n                dashboardSelected: true,\n                widgetsSelected: dashboardInsightWidgets.reduce((acc, widget) => {\n                    acc[objRefToString(widget)] = false;\n                    return acc;\n                }, {}),\n            };\n        }\n    }\n    render() {\n        const { intl, onCancel, editSchedule, enableWidgetExportScheduling } = this.props;\n        const { alignment, isValidScheduleEmailData } = this.state;\n        const alignPoints = [\n            {\n                align: alignment,\n            },\n        ];\n        const isSubmitDisabled = !isValidScheduleEmailData ||\n            (editSchedule &&\n                isEqual(omit(this.originalEditState, \"alignment\"), omit(this.state, \"alignment\")));\n        return (React.createElement(Overlay, { alignPoints: alignPoints, className: \"gd-schedule-email-dialog-overlay\", isModal: true, positionType: \"fixed\", onAlign: this.onAlign },\n            React.createElement(ConfirmDialogBase, { className: \"gd-schedule-email-dialog s-gd-schedule-email-dialog\", isPositive: true, headline: enableWidgetExportScheduling\n                    ? intl.formatMessage({ id: \"dialogs.schedule.email.heading\" })\n                    : intl.formatMessage({ id: \"dialogs.schedule.email.headline\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), submitButtonText: editSchedule\n                    ? intl.formatMessage({ id: `dialogs.schedule.email.save` })\n                    : intl.formatMessage({ id: `dialogs.schedule.email.submit` }), isSubmitDisabled: isSubmitDisabled, submitOnEnterKey: false, onCancel: onCancel, onSubmit: this.onScheduleDialogSubmit },\n                this.renderFiltersMessage(),\n                this.renderRecipients(),\n                this.renderUnsubscribedRecipients(),\n                this.renderSubject(),\n                this.renderMessage(),\n                this.renderAttachment(),\n                React.createElement(\"div\", { className: \"hr\" }),\n                this.renderDateTime(),\n                this.renderRepeats())));\n    }\n    getDashboardTitleMaxLength(displayDateString) {\n        return MAX_DASHBOARD_TITLE_LENGTH - displayDateString.trim().length - MAX_HYPHEN_LENGTH;\n    }\n}\nScheduledMailDialogRendererUI.defaultProps = {\n    dateFormat: \"MM/dd/yyyy\",\n};\nexport { ScheduledMailDialogRendererUI };\nexport const ScheduledMailDialogRendererIntl = withContexts(injectIntl(ScheduledMailDialogRendererUI));\nexport const ScheduledMailDialogRenderer = (props) => (React.createElement(IntlWrapper, { locale: props.locale },\n    React.createElement(ScheduledMailDialogRendererIntl, Object.assign({}, props))));\n//# sourceMappingURL=ScheduledMailDialogRenderer.js.map","import { invariant } from \"ts-invariant\";\nimport { REPEAT_TYPES, REPEAT_FREQUENCIES, FREQUENCY_TYPE, REPEAT_EXECUTE_ON } from \"../constants.js\";\nimport { getDayName, getWeek, getDate } from \"./datetime.js\";\nimport { messages } from \"../../../../locales.js\";\nconst AM = \"AM\";\nconst PM = \"PM\";\nfunction getRepeatFrequencyType(repeatFrequency) {\n    // eslint-disable-next-line no-prototype-builtins\n    const result = FREQUENCY_TYPE.find((type) => repeatFrequency.hasOwnProperty(type));\n    invariant(result, \"Unknown scheduled email frequency\");\n    return result;\n}\nfunction getScheduledEmailRepeatString(intl, options, startDate) {\n    var _a;\n    const { repeatType, repeatPeriod, repeatFrequency } = options;\n    const isCustomRepeatType = repeatType === REPEAT_TYPES.CUSTOM;\n    const day = getDayName(startDate);\n    const week = getWeek(startDate);\n    if (!isCustomRepeatType) {\n        return intl.formatMessage(messages[`scheduleDialogEmailRepeats_${repeatType}`], { day, week });\n    }\n    const every = intl.formatMessage({\n        id: \"dialogs.schedule.email.repeats.every\",\n    });\n    const repeatFrequencyType = getRepeatFrequencyType(repeatFrequency);\n    const frequencies = intl.formatMessage(messages[`scheduleDialogEmailRepeatsFrequencies_${repeatFrequencyType}`], {\n        n: repeatPeriod,\n    });\n    const appliedRepeatExecuteOn = repeatFrequencyType === REPEAT_FREQUENCIES.WEEK\n        ? REPEAT_EXECUTE_ON.DAY_OF_WEEK\n        : (_a = repeatFrequency.month) === null || _a === void 0 ? void 0 : _a.type;\n    const executeOn = repeatFrequencyType !== REPEAT_FREQUENCIES.DAY\n        ? intl.formatMessage(messages[`scheduleDialogEmailRepeatsExecuteOn_${appliedRepeatExecuteOn}`], {\n            date: getDate(startDate),\n            day: getDayName(startDate),\n            week: getWeek(startDate),\n        })\n        : \"\";\n    // every 2 months on the first Friday\n    return `${every} ${repeatPeriod} ${frequencies} ${executeOn}`.trim();\n}\nfunction getFormattedTime(time) {\n    const { hour, minute } = time;\n    const timeSuffix = getTimePeriod(hour);\n    const formattedMinute = getFormattedMinute(minute);\n    const formattedHour = getFormattedHour(hour);\n    // 12:00 AM\n    return `${formattedHour}:${formattedMinute} ${timeSuffix}`;\n}\nfunction getTimePeriod(hour) {\n    return hour >= 12 ? PM : AM;\n}\nfunction getFormattedMinute(minute) {\n    return minute < 10 ? \"0\" + minute : \"\" + minute;\n}\nfunction getFormattedHour(hour) {\n    let formattedHour = hour > 12 ? hour - 12 : hour;\n    if (hour === 0) {\n        formattedHour = 12;\n    }\n    return formattedHour;\n}\nexport function getScheduledEmailSummaryString(intl, recurrency, startDate) {\n    const repeatDays = getScheduledEmailRepeatString(intl, recurrency, startDate);\n    const atLocalization = intl.formatMessage({ id: \"gs.date.at\" });\n    const time = getFormattedTime(recurrency.time);\n    // every 2 months on the first Friday at 12:00 AM\n    return `${repeatDays} ${atLocalization} ${time}`;\n}\n//# sourceMappingURL=scheduledMailSummary.js.map","// (C) 2022 GoodData Corporation\nimport { isDashboardAttributeFilter } from \"@gooddata/sdk-model\";\nimport omit from \"lodash/omit.js\";\nexport const stripLocalIdentifierFromFilters = (filters) => filters.map((filter) => {\n    if (isDashboardAttributeFilter(filter)) {\n        return { attributeFilter: omit(filter.attributeFilter, \"localIdentifier\") };\n    }\n    return filter;\n});\n//# sourceMappingURL=stripLocalIdentifierFromFilters.js.map","// (C) 2019-2023 GoodData Corporation\nimport React from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { ScheduledMailDialogRenderer } from \"./ScheduledMailDialogRenderer/ScheduledMailDialogRenderer.js\";\nimport { useScheduledEmail } from \"./useScheduledEmail.js\";\n/**\n * @alpha\n */\nexport const DefaultScheduledEmailDialog = (props) => {\n    const { onSubmit, onSuccess, onError, onSave, onSaveSuccess, onSaveError, onCancel, isVisible, editSchedule, users, } = props;\n    const { currentUser, dashboardRef, dashboardTitle, dashboardInsightWidgets, hasDefaultFilters, handleCreateScheduledEmail, handleSaveScheduledEmail, locale, canListUsersInWorkspace, canExportTabular, dateFormat, weekStart, enableKPIDashboardSchedule, enableKPIDashboardScheduleRecipients, enableWidgetExportScheduling, defaultAttachment, } = useScheduledEmail({\n        onSubmit,\n        onSubmitSuccess: onSuccess,\n        onSubmitError: onError,\n        onSave,\n        onSaveSuccess: onSaveSuccess,\n        onSaveError: onSaveError,\n    });\n    // trigger the invariant only if the user tries to open the dialog\n    if (isVisible) {\n        invariant(enableKPIDashboardSchedule, \"Feature flag enableKPIDashboardSchedule must be enabled to make ScheduledMailDialog work properly.\");\n    }\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(ScheduledMailDialogRenderer, { editSchedule: editSchedule, locale: locale, canListUsersInProject: canListUsersInWorkspace, canExportTabular: canExportTabular, enableKPIDashboardScheduleRecipients: enableKPIDashboardScheduleRecipients, enableWidgetExportScheduling: enableWidgetExportScheduling, dateFormat: dateFormat, currentUser: currentUser, dashboard: dashboardRef, dashboardTitle: dashboardTitle, dashboardInsightWidgets: dashboardInsightWidgets, hasDefaultFilters: hasDefaultFilters, onSubmit: handleCreateScheduledEmail, onSave: handleSaveScheduledEmail, onCancel: onCancel, onError: onError, defaultAttachment: defaultAttachment, users: users, weekStart: weekStart }));\n};\n//# sourceMappingURL=index.js.map","// (C) 2019-2023 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { isInsightWidget, } from \"@gooddata/sdk-model\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { useDashboardSelector, selectDashboardTitle, selectDashboardUriRef, selectCurrentUser, selectLocale, selectFilterContextFilters, selectDateFormat, selectWeekStart, selectEnableKPIDashboardScheduleRecipients, selectCanListUsersInWorkspace, selectEnableKPIDashboardSchedule, selectEnableInsightExportScheduling, selectOriginalFilterContextFilters, selectWidgets, isCustomWidget, selectCanExportTabular, selectScheduleEmailDialogDefaultAttachment, selectInsightsMap, } from \"../../../model/index.js\";\nimport { useCreateScheduledEmail } from \"./useCreateScheduledEmail.js\";\nimport { invariant } from \"ts-invariant\";\nimport { useSaveScheduledEmail } from \"./useSaveScheduledEmail.js\";\nimport { stripLocalIdentifierFromFilters } from \"./utils/stripLocalIdentifierFromFilters.js\";\nexport const useScheduledEmail = (props) => {\n    const { onSubmit, onSubmitSuccess, onSubmitError, onSave, onSaveSuccess, onSaveError } = props;\n    // Bear model expects that all refs are sanitized to uriRefs.\n    const dashboardUriRef = useDashboardSelector(selectDashboardUriRef);\n    // if this bombs then the controller code is bugged because it should not even allow to get\n    // to this point for dashboards that are not persisted. scheduling is not possible for such\n    // dashboards and so the respective menus to trigger the scheduling must not be present\n    invariant(dashboardUriRef, \"attempting to schedule email for unsaved dashboard\");\n    const dashboardTitle = useDashboardSelector(selectDashboardTitle);\n    const dashboardWidgets = useDashboardSelector(selectWidgets);\n    const dashboardInsights = useDashboardSelector(selectInsightsMap);\n    const dashboardInsightWidgets = dashboardWidgets\n        .filter(isInsightWidget)\n        .filter((widget) => !isCustomWidget(widget))\n        .map((widget) => {\n        var _a;\n        return Object.assign(Object.assign({}, widget), { visualizationUrl: (_a = dashboardInsights.get(widget.insight)) === null || _a === void 0 ? void 0 : _a.insight.visualizationUrl });\n    });\n    const currentUser = useDashboardSelector(selectCurrentUser);\n    const locale = useDashboardSelector(selectLocale);\n    const filters = useDashboardSelector(selectFilterContextFilters);\n    const originalFilters = useDashboardSelector(selectOriginalFilterContextFilters);\n    const dateFormat = useDashboardSelector(selectDateFormat);\n    const weekStart = useDashboardSelector(selectWeekStart);\n    const enableKPIDashboardScheduleRecipients = useDashboardSelector(selectEnableKPIDashboardScheduleRecipients);\n    const canListUsersInWorkspace = useDashboardSelector(selectCanListUsersInWorkspace);\n    const canExportTabular = useDashboardSelector(selectCanExportTabular);\n    const enableKPIDashboardSchedule = useDashboardSelector(selectEnableKPIDashboardSchedule);\n    const enableWidgetExportScheduling = useDashboardSelector(selectEnableInsightExportScheduling);\n    const defaultAttachment = useDashboardSelector(selectScheduleEmailDialogDefaultAttachment);\n    const scheduledEmailCreator = useCreateScheduledEmail({\n        onSuccess: onSubmitSuccess,\n        onError: onSubmitError,\n        onBeforeRun: onSubmit,\n    });\n    // Compare filters without local identifiers as they are optional\n    // which might cause false negative comparison result.\n    const originalFiltersWithouLocalIdentifiers = stripLocalIdentifierFromFilters(originalFilters);\n    const filtersWithoutLocalIdentifiers = stripLocalIdentifierFromFilters(filters);\n    const hasDefaultFilters = isEqual(originalFiltersWithouLocalIdentifiers, filtersWithoutLocalIdentifiers);\n    const handleCreateScheduledEmail = useCallback((scheduledEmail, customFilters) => {\n        // If dashboard filters are not changed, do not save them to scheduled email filter context.\n        // Like this, future filter changes stored in the original dashboard filter context\n        // are correctly propagated to the scheduled emails with the original filter context.\n        const filtersToStore = hasDefaultFilters ? undefined : filters;\n        scheduledEmailCreator.create(scheduledEmail, customFilters !== null && customFilters !== void 0 ? customFilters : filtersToStore);\n    }, [filters, hasDefaultFilters]);\n    const scheduledEmailCreationStatus = scheduledEmailCreator.creationStatus;\n    const scheduledEmailSaver = useSaveScheduledEmail({\n        onSuccess: onSaveSuccess,\n        onError: onSaveError,\n        onBeforeRun: onSave,\n    });\n    const handleSaveScheduledEmail = useCallback((scheduledEmail, filterContextRef) => {\n        scheduledEmailSaver.save(scheduledEmail, filterContextRef);\n    }, []);\n    const scheduledEmailSavingStatus = scheduledEmailSaver.savingStatus;\n    return {\n        dashboardRef: dashboardUriRef,\n        dashboardTitle,\n        dashboardInsightWidgets,\n        hasDefaultFilters,\n        canListUsersInWorkspace,\n        canExportTabular,\n        enableKPIDashboardSchedule,\n        enableKPIDashboardScheduleRecipients,\n        enableWidgetExportScheduling,\n        dateFormat,\n        weekStart,\n        currentUser,\n        locale,\n        defaultAttachment,\n        handleCreateScheduledEmail,\n        scheduledEmailCreationStatus,\n        handleSaveScheduledEmail,\n        scheduledEmailSavingStatus,\n    };\n};\n//# sourceMappingURL=useScheduledEmail.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { createScheduledEmail, useDashboardCommandProcessing, } from \"../../../model/index.js\";\nimport { ensureAllTimeFilterForExport } from \"../../../_staging/exportUtils/filterUtils.js\";\nexport const useCreateScheduledEmail = ({ onBeforeRun, onSuccess, onError, } = {}) => {\n    const scheduledEmailCommandProcessing = useDashboardCommandProcessing({\n        commandCreator: createScheduledEmail,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.SCHEDULED_EMAIL.CREATED\",\n        onError: (event) => {\n            onError === null || onError === void 0 ? void 0 : onError(event.payload.error);\n        },\n        onSuccess: (event) => {\n            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(event.payload.scheduledEmail);\n        },\n        onBeforeRun: (cmd) => {\n            var _a;\n            onBeforeRun === null || onBeforeRun === void 0 ? void 0 : onBeforeRun(cmd.payload.scheduledEmail, (_a = cmd.payload.filterContext) === null || _a === void 0 ? void 0 : _a.filters);\n        },\n    });\n    const create = useCallback((scheduledEmailToCreate, filters) => {\n        const filterContext = filters && {\n            title: \"filterContext\",\n            description: \"\",\n            filters: ensureAllTimeFilterForExport(filters),\n        };\n        scheduledEmailCommandProcessing.run(scheduledEmailToCreate, filterContext);\n    }, []);\n    return {\n        create,\n        creationStatus: scheduledEmailCommandProcessing.status,\n    };\n};\n//# sourceMappingURL=useCreateScheduledEmail.js.map","// (C) 2020-2021 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { saveScheduledEmail, useDashboardCommandProcessing, } from \"../../../model/index.js\";\nexport const useSaveScheduledEmail = ({ onBeforeRun, onSuccess, onError, } = {}) => {\n    const scheduledEmailCommandProcessing = useDashboardCommandProcessing({\n        commandCreator: saveScheduledEmail,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.SCHEDULED_EMAIL.SAVED\",\n        onError: (event) => {\n            onError === null || onError === void 0 ? void 0 : onError(event.payload.error);\n        },\n        onSuccess: () => {\n            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();\n        },\n        onBeforeRun: (cmd) => {\n            onBeforeRun === null || onBeforeRun === void 0 ? void 0 : onBeforeRun(cmd.payload.scheduledEmail);\n        },\n    });\n    const save = useCallback((scheduledEmailToSave, filterContextRef) => {\n        scheduledEmailCommandProcessing.run(scheduledEmailToSave, filterContextRef);\n    }, []);\n    return {\n        save,\n        savingStatus: scheduledEmailCommandProcessing.status,\n    };\n};\n//# sourceMappingURL=useSaveScheduledEmail.js.map","import { __rest } from \"tslib\";\n// (C) 2020 GoodData Corporation\nimport React, { Component } from \"react\";\nimport { Overlay } from \"../Overlay/index.js\";\nimport { DialogBase } from \"./DialogBase.js\";\n/**\n * @internal\n */\nexport class Dialog extends Component {\n    render() {\n        const _a = this.props, { containerClassName, onClick, onMouseUp, onMouseOver } = _a, dialogProps = __rest(_a, [\"containerClassName\", \"onClick\", \"onMouseUp\", \"onMouseOver\"]);\n        return (React.createElement(Overlay, { alignPoints: [\n                {\n                    align: \"cc cc\",\n                },\n            ], isModal: true, positionType: \"fixed\", containerClassName: containerClassName, onMouseUp: onMouseUp, onMouseOver: onMouseOver, onClick: onClick },\n            React.createElement(DialogBase, Object.assign({}, dialogProps))));\n    }\n}\n//# sourceMappingURL=Dialog.js.map","// (C) 2022 GoodData Corporation\nimport { isDashboardAttachment, isWidgetAttachment } from \"@gooddata/sdk-model\";\nimport { Icon } from \"@gooddata/sdk-ui-kit\";\nimport compact from \"lodash/compact.js\";\nexport const getRecipientsLabel = (intl, recipients, currentUserEmail) => {\n    const numberOfRecipients = recipients.length;\n    return numberOfRecipients === 1 && recipients[0] === currentUserEmail\n        ? intl.formatMessage({ id: \"dialogs.schedule.management.recipients.onlyYou\" })\n        : intl.formatMessage({\n            id: \"dialogs.schedule.management.recipients\",\n        }, { n: numberOfRecipients });\n};\nexport const getAttachmentType = (intl, attachments) => {\n    const hasDashboardAttachment = attachments.some(isDashboardAttachment);\n    const numberOfWidgetAttachments = attachments.filter(isWidgetAttachment).length;\n    if (hasDashboardAttachment && numberOfWidgetAttachments) {\n        return {\n            AttachmentIcon: Icon.Many,\n            attachmentLabel: intl.formatMessage({ id: \"dialogs.schedule.management.attachments.mixed\" }, { n: numberOfWidgetAttachments }),\n        };\n    }\n    else if (numberOfWidgetAttachments) {\n        return {\n            AttachmentIcon: Icon.Insight,\n            attachmentLabel: intl.formatMessage({ id: \"dialogs.schedule.management.attachments.widgets\" }, { n: numberOfWidgetAttachments }),\n        };\n    }\n    else {\n        return {\n            AttachmentIcon: Icon.Dashboard,\n            attachmentLabel: intl.formatMessage({ id: \"dialogs.schedule.management.attachments.dashboard\" }),\n        };\n    }\n};\nexport const getFormatsLabel = (attachments) => {\n    const hasPdfFormat = attachments.some(isDashboardAttachment);\n    const widgetAttachments = attachments.filter(isWidgetAttachment);\n    const hasCsvFormat = widgetAttachments.some((attachment) => attachment.formats.includes(\"csv\"));\n    const hasXlsxFormat = widgetAttachments.some((attachment) => attachment.formats.includes(\"xlsx\"));\n    return compact([hasPdfFormat && \"PDF\", hasCsvFormat && \"CSV\", hasXlsxFormat && \"XLSX\"]).join(\", \");\n};\n//# sourceMappingURL=utils.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger, ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { getAttachmentType, getFormatsLabel, getRecipientsLabel } from \"./utils.js\";\nimport { gdColorDisabled } from \"../../constants/colors.js\";\nconst ICON_TOOLTIP_ALIGN_POINTS = [\n    { align: \"cr cl\", offset: { x: 0, y: 0 } },\n    { align: \"cl cr\", offset: { x: 0, y: 0 } },\n];\nconst TEXT_TOOLTIP_ALIGN_POINTS = [\n    { align: \"tc bc\", offset: { x: 0, y: 0 } },\n    { align: \"bc tc\", offset: { x: 0, y: 0 } },\n];\nexport const ScheduledEmail = (props) => {\n    var _a, _b, _c;\n    const intl = useIntl();\n    const theme = useTheme();\n    const { scheduledEmail, currentUserEmail, onDelete, onEdit, canManageScheduledMail, users } = props;\n    const { subject, to, bcc, attachments } = scheduledEmail;\n    const recipients = [...to, ...(bcc !== null && bcc !== void 0 ? bcc : [])];\n    const recipientsLabel = getRecipientsLabel(intl, recipients, currentUserEmail);\n    const formatsLabel = getFormatsLabel(attachments);\n    const { AttachmentIcon, attachmentLabel } = getAttachmentType(intl, attachments);\n    const subtitle = `${recipientsLabel} • ${attachmentLabel} • ${formatsLabel}`;\n    const handleClick = useCallback(() => {\n        if (canManageScheduledMail) {\n            onEdit(scheduledEmail, users);\n        }\n    }, [scheduledEmail, canManageScheduledMail, users]);\n    return (React.createElement(\"div\", { className: cx(\"gd-scheduled-email\", \"s-scheduled-email\", { editable: canManageScheduledMail }) },\n        React.createElement(\"div\", { className: \"gd-scheduled-email-delete\" },\n            React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n                React.createElement(\"span\", { className: \"gd-scheduled-email-delete-icon s-scheduled-email-delete-icon\", onClick: () => onDelete(scheduledEmail) }),\n                React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: ICON_TOOLTIP_ALIGN_POINTS },\n                    React.createElement(FormattedMessage, { id: \"dialogs.schedule.management.delete\" })))),\n        React.createElement(\"div\", { className: \"gd-scheduled-email-content\", onClick: handleClick },\n            React.createElement(\"div\", { className: \"gd-scheduled-email-icon\" },\n                React.createElement(AttachmentIcon, { color: (_c = (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c5) !== null && _c !== void 0 ? _c : gdColorDisabled, width: 18, height: 16 })),\n            React.createElement(\"div\", { className: \"gd-scheduled-email-text-content\" },\n                React.createElement(\"div\", { className: \"gd-scheduled-email-title\" },\n                    React.createElement(\"strong\", null,\n                        React.createElement(ShortenedText, { className: \"gd-scheduled-email-shortened-text\", tooltipAlignPoints: TEXT_TOOLTIP_ALIGN_POINTS }, subject))),\n                React.createElement(\"div\", null,\n                    React.createElement(\"span\", { className: \"gd-scheduled-email-subtitle\" },\n                        React.createElement(ShortenedText, { className: \"gd-scheduled-email-shortened-text\", tooltipAlignPoints: TEXT_TOOLTIP_ALIGN_POINTS }, subtitle)))))));\n};\n//# sourceMappingURL=ScheduledEmail.js.map","// (C) 2021-2022 GoodData Corporation\nexport const gdColorStateBlank = \"#94a1ad\";\nexport const gdColorDisabled = \"#b0beca\";\n//# sourceMappingURL=colors.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { LoadingSpinner } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { ScheduledEmail } from \"./ScheduledEmail.js\";\nexport const ScheduledEmails = (props) => {\n    var _a, _b;\n    const { isLoading, scheduledEmails, currentUserEmail, onDelete, onEdit, noSchedulesMessageId, canManageScheduledMail, users, } = props;\n    const theme = useTheme();\n    if (isLoading) {\n        return (React.createElement(\"div\", { className: \"gd-loading-equalizer-wrap\" },\n            React.createElement(\"div\", { className: \"gd-loading-equalizer gd-loading-equalizer-fade\" },\n                React.createElement(LoadingSpinner, { className: \"large gd-loading-equalizer-spinner\", color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c9 }))));\n    }\n    if (scheduledEmails.length === 0) {\n        return (React.createElement(\"div\", { className: \"gd-scheduled-emails-message s-no-schedules-message\" },\n            React.createElement(FormattedMessage, { id: noSchedulesMessageId, values: { br: React.createElement(\"br\", null) } })));\n    }\n    return (React.createElement(React.Fragment, null, scheduledEmails.map((scheduledEmail) => (React.createElement(ScheduledEmail, { key: scheduledEmail.identifier, scheduledEmail: scheduledEmail, currentUserEmail: currentUserEmail, onDelete: onDelete, onEdit: onEdit, users: users, canManageScheduledMail: canManageScheduledMail })))));\n};\n//# sourceMappingURL=ScheduledEmails.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useBackendStrict, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { ConfirmDialog } from \"@gooddata/sdk-ui-kit\";\nexport const DeleteScheduleConfirmDialog = (props) => {\n    const { scheduledEmail, onCancel, onSuccess, onError } = props;\n    const { ref, subject } = scheduledEmail;\n    const effectiveBackend = useBackendStrict();\n    const effectiveWorkspace = useWorkspaceStrict();\n    const intl = useIntl();\n    const handleDeleteScheduledMail = async () => {\n        try {\n            await effectiveBackend.workspace(effectiveWorkspace).dashboards().deleteScheduledMail(ref);\n            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();\n        }\n        catch (err) {\n            onError === null || onError === void 0 ? void 0 : onError(err);\n        }\n    };\n    return (React.createElement(ConfirmDialog, { displayCloseButton: true, isPositive: false, headline: intl.formatMessage({ id: \"dialogs.schedule.management.delete.dialog\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), submitButtonText: intl.formatMessage({ id: \"delete\" }), onSubmit: handleDeleteScheduledMail, onClose: onCancel, onCancel: onCancel, className: \"gd-scheduled-email-delete-dialog s-scheduled-email-delete-dialog\", containerClassName: \"gd-scheduled-email-delete-dialog-overlay\" },\n        React.createElement(\"span\", { className: \"s-scheduled-email-delete-dialog-content\" },\n            React.createElement(FormattedMessage, { id: \"dialogs.schedule.management.delete.dialog.confirm\", values: {\n                    b: (chunks) => (React.createElement(\"span\", { className: \"gd-scheduled-email-delete-dialog-text\" },\n                        chunks,\n                        \" \",\n                        React.createElement(\"strong\", null, subject))),\n                } }))));\n};\n//# sourceMappingURL=DeleteScheduleConfirmDialog.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Button, Dialog, Typography, Tabs } from \"@gooddata/sdk-ui-kit\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { ScheduledEmails } from \"./ScheduledEmails.js\";\nimport { useScheduledEmailManagement } from \"./useScheduledEmailManagement.js\";\nimport { DeleteScheduleConfirmDialog } from \"./DeleteScheduleConfirmDialog.js\";\nimport { selectCurrentUser, useDashboardSelector, selectCanManageScheduledMail, } from \"../../../model/index.js\";\nimport { messages } from \"../../../locales.js\";\n/**\n * @alpha\n */\nexport const ScheduledEmailManagementDialog = (props) => {\n    const { onAdd, onEdit, onDeleteSuccess: onDelete, onClose, onLoadError, onDeleteError } = props;\n    const [scheduledEmailToDelete, setScheduledEmailToDelete] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [scheduledEmailsByUser, setScheduledEmailsByUser] = useState([]);\n    const [scheduledEmails, setScheduledEmails] = useState([]);\n    const [selectedTabId, setSelectedTabId] = useState(messages.scheduleManagementTabUser.id);\n    const [isFirstLoaded, setIsFirstLoaded] = useState(true);\n    const [users, setUsers] = useState([]);\n    const canManageScheduledMail = useDashboardSelector(selectCanManageScheduledMail);\n    const currentUser = useDashboardSelector(selectCurrentUser);\n    const intl = useIntl();\n    const onLoadSuccess = useCallback((emailManagement) => {\n        const { scheduledEmails, users } = emailManagement;\n        const emailsByUser = scheduledEmails.filter((scheduledEmail) => { var _a; return areObjRefsEqual(currentUser.ref, (_a = scheduledEmail.createdBy) === null || _a === void 0 ? void 0 : _a.ref); });\n        setIsLoading(false);\n        setScheduledEmails(scheduledEmails);\n        setScheduledEmailsByUser(canManageScheduledMail ? emailsByUser : scheduledEmails);\n        setUsers(users);\n        if (isFirstLoaded) {\n            if (emailsByUser.length === 0 && canManageScheduledMail) {\n                setSelectedTabId(messages.scheduleManagementTabAll.id);\n            }\n            setIsFirstLoaded(false);\n        }\n    }, []);\n    const handleScheduleDelete = useCallback((scheduledEmail) => {\n        setScheduledEmailToDelete(scheduledEmail);\n    }, []);\n    const handleScheduleEdit = useCallback((scheduledEmail, users) => {\n        onEdit === null || onEdit === void 0 ? void 0 : onEdit(scheduledEmail, users);\n    }, []);\n    const handleScheduleDeleteSuccess = useCallback(() => {\n        onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n        setScheduledEmailToDelete(null);\n        setIsLoading(true);\n    }, []);\n    const handleTabChange = useCallback((tab) => {\n        setSelectedTabId(tab.id);\n    }, []);\n    useScheduledEmailManagement({\n        loadScheduledMails: isLoading,\n        onError: onLoadError,\n        onSuccess: onLoadSuccess,\n    });\n    const noSchedulesMessageId = selectedTabId === messages.scheduleManagementTabAll.id\n        ? messages.scheduleManagementNoSchedules.id\n        : messages.scheduleManagementNoSchedulesByUser.id;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Dialog, { displayCloseButton: true, onCancel: onClose, className: \"gd-scheduled-email-management-dialog s-scheduled-email-management-dialog\" },\n            React.createElement(\"div\", { className: \"gd-scheduled-email-management-dialog-title\" },\n                React.createElement(Typography, { tagName: \"h3\", className: \"gd-dialog-header\" },\n                    React.createElement(FormattedMessage, { id: \"dialogs.schedule.management.title\" }))),\n            !isFirstLoaded && canManageScheduledMail ? (React.createElement(Tabs, { className: \"gd-scheduled-email-management-dialog-tabs\", tabs: [messages.scheduleManagementTabUser, messages.scheduleManagementTabAll], selectedTabId: selectedTabId, onTabSelect: handleTabChange })) : null,\n            React.createElement(\"div\", { className: \"gd-scheduled-emails-content\" },\n                React.createElement(ScheduledEmails, { onDelete: handleScheduleDelete, onEdit: handleScheduleEdit, isLoading: isLoading, scheduledEmails: selectedTabId === messages.scheduleManagementTabAll.id\n                        ? scheduledEmails\n                        : scheduledEmailsByUser, currentUserEmail: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email, noSchedulesMessageId: noSchedulesMessageId, canManageScheduledMail: canManageScheduledMail, users: users })),\n            React.createElement(\"div\", { className: \"gd-content-divider\" }),\n            React.createElement(\"div\", { className: \"gd-buttons\" },\n                React.createElement(Button, { onClick: onAdd, className: \"gd-button-secondary gd-add-button s-add-button\", iconLeft: \"gd-icon-plus\", value: intl.formatMessage({ id: \"dialogs.schedule.management.addSchedule\" }) }),\n                React.createElement(Button, { onClick: onClose, className: \"gd-button-secondary s-close-button\", value: intl.formatMessage({ id: \"close\" }) }))),\n        scheduledEmailToDelete ? (React.createElement(DeleteScheduleConfirmDialog, { scheduledEmail: scheduledEmailToDelete, onCancel: () => setScheduledEmailToDelete(null), onSuccess: handleScheduleDeleteSuccess, onError: onDeleteError })) : null));\n};\n//# sourceMappingURL=ScheduledEmailManagementDialog.js.map","// (C) 2022 GoodData Corporation\nimport { useBackendStrict, useCancelablePromise, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport { selectCanManageScheduledMail, selectDashboardRef, useDashboardSelector, } from \"../../../model/index.js\";\nexport const useScheduledEmailManagement = (props) => {\n    const { onError, onSuccess, loadScheduledMails } = props;\n    const dashboardRef = useDashboardSelector(selectDashboardRef);\n    const canManageScheduledMail = useDashboardSelector(selectCanManageScheduledMail);\n    const effectiveBackend = useBackendStrict();\n    const effectiveWorkspace = useWorkspaceStrict();\n    const loadResultPromise = loadScheduledMails\n        ? async () => {\n            const scheduledEmails = await effectiveBackend\n                .workspace(effectiveWorkspace)\n                .dashboards()\n                .getScheduledMailsForDashboard(dashboardRef, {\n                loadUserData: canManageScheduledMail,\n                createdByCurrentUser: !canManageScheduledMail,\n            });\n            const users = canManageScheduledMail\n                ? await effectiveBackend.workspace(effectiveWorkspace).users().queryAll()\n                : [];\n            return { scheduledEmails: scheduledEmails.reverse(), users };\n        }\n        : null;\n    return useCancelablePromise({ promise: loadResultPromise, onError, onSuccess }, [\n        effectiveBackend,\n        effectiveWorkspace,\n        canManageScheduledMail,\n        dashboardRef,\n        loadScheduledMails,\n    ]);\n};\n//# sourceMappingURL=useScheduledEmailManagement.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\n/**\n * @internal\n */\nexport const ContentDivider = () => {\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"gd-share-dialog-content-divider\" })));\n};\n//# sourceMappingURL=ContentDivider.js.map","// (C) 2021 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { BubbleHoverTrigger, Bubble } from \"../../../Bubble/index.js\";\n/**\n * @internal\n */\nexport const AddUserOrGroupButton = (props) => {\n    const { isDisabled, onClick } = props;\n    const buttonClassNames = cx({\n        disabled: isDisabled,\n    }, \"gd-button\", \"gd-button-link\", \"gd-icon-plus\", \"s-add-users-or-groups\");\n    const handleClick = useCallback((e) => {\n        e.preventDefault();\n        if (isDisabled) {\n            return;\n        }\n        onClick();\n    }, [isDisabled, onClick]);\n    return (React.createElement(\"div\", null,\n        React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n            React.createElement(\"a\", { className: buttonClassNames, target: \"_blank\", rel: \"noopener noreferrer\", onClick: handleClick },\n                React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.add\" })),\n            React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: [{ align: \"cr cl\" }] },\n                React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.add.info\" })))));\n};\n//# sourceMappingURL=AddGranteeButton.js.map","import isEmpty from \"lodash/isEmpty.js\";\n/**\n * @internal\n */\nexport const isGranteeUser = (obj) => {\n    return !isEmpty(obj) && obj.type === \"user\";\n};\n/**\n * @internal\n */\nexport const isGranularGranteeUser = (obj) => {\n    return !isEmpty(obj) && obj.type === \"granularUser\";\n};\n/**\n * @internal\n */\nexport const isGranteeUserInactive = (obj) => {\n    return !isEmpty(obj) && obj.type === \"inactive_owner\";\n};\n/**\n * @internal\n */\nexport const isGranteeGroup = (obj) => {\n    return !isEmpty(obj) && obj.type === \"group\";\n};\n/**\n * @internal\n */\nexport const isGranularGranteeGroup = (obj) => {\n    return !isEmpty(obj) && obj.type === \"granularGroup\";\n};\n/**\n * @internal\n */\nexport const isGranularGrantee = (obj) => {\n    return isGranularGranteeUser(obj) || isGranularGranteeGroup(obj);\n};\n/**\n * @internal\n */\nexport const isGranteeGroupAll = (obj) => {\n    return !isEmpty(obj) && obj.type === \"groupAll\";\n};\n/**\n * @internal\n */\nexport const isGranteeItem = (obj) => {\n    return (!isEmpty(obj) &&\n        (isGranteeGroupAll(obj) || isGranteeGroup(obj) || isGranteeUserInactive(obj) || isGranteeUser(obj)));\n};\n/**\n * @internal\n */\nexport const isSelectErrorOption = (obj) => {\n    return !isEmpty(obj) && obj.type === \"error\";\n};\n//# sourceMappingURL=types.js.map","import { areObjRefsEqual, idRef, objRefToString, uriRef, } from \"@gooddata/sdk-model\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { isGranteeGroup, isGranteeGroupAll, isGranularGranteeGroup, } from \"./types.js\";\nimport differenceWith from \"lodash/differenceWith.js\";\nimport partition from \"lodash/partition.js\";\n/**\n * @internal\n */\nexport const GROUP_ALL_ID = \"groupAll\";\n/**\n * @internal\n */\nexport const GranteeGroupAll = {\n    id: uriRef(GROUP_ALL_ID),\n    type: \"groupAll\",\n};\n/**\n * @internal\n */\nexport const INACTIVE_OWNER_ID = \"inactive_owner\";\n/**\n * @internal\n */\nexport const InactiveOwner = {\n    id: uriRef(INACTIVE_OWNER_ID),\n    type: \"inactive_owner\",\n};\n/**\n * @internal\n */\nconst exhaustiveCheck = (_param) => {\n    throw new Error(\"unknown grantee type\");\n};\n/**\n * @internal\n */\nexport const getGranteeLabel = (grantee, intl) => {\n    if (grantee.type === \"user\" || grantee.type === \"granularUser\") {\n        if (grantee.isCurrentUser) {\n            return intl.formatMessage({ id: \"shareDialog.share.grantee.item.you\" }, { userName: grantee.name });\n        }\n        return grantee.name;\n    }\n    else if (grantee.type === \"group\" || grantee.type === \"granularGroup\") {\n        return grantee.name;\n    }\n    else if (grantee.type === \"groupAll\") {\n        return intl.formatMessage({ id: \"shareDialog.share.grantee.item.user.all\" });\n    }\n    else if (grantee.type === \"inactive_owner\") {\n        return intl.formatMessage({ id: \"shareDialog.share.grantee.item.user.inactive\" });\n    }\n    else {\n        exhaustiveCheck(grantee);\n    }\n};\n/**\n * @internal\n */\nexport const sortGranteesByName = (intl) => (granteeA, granteeB) => {\n    const textA = getGranteeLabel(granteeA, intl).toUpperCase();\n    const textB = getGranteeLabel(granteeB, intl).toUpperCase();\n    return textA < textB ? -1 : textA > textB ? 1 : 0;\n};\nexport const sortGranteeList = (grantees, intl) => {\n    const granteeSort = sortGranteesByName(intl);\n    const hasAllGroup = hasGroupAll(grantees);\n    const granteesWithNoAllGroup = grantees.filter((g) => !isGranteeGroupAll(g));\n    const [groups, users] = partition(granteesWithNoAllGroup, (grantee) => isGranteeGroup(grantee) || isGranularGranteeGroup(grantee));\n    const sorted = [...groups.sort(granteeSort), ...users.sort(granteeSort)];\n    if (hasAllGroup) {\n        return [GranteeGroupAll, ...sorted];\n    }\n    return sorted;\n};\n/**\n * @internal\n */\nexport const notInArrayFilter = (array, notInArray) => {\n    return differenceWith(array, notInArray, (g, g1) => areObjRefsEqual(g.id, g1.id));\n};\n/**\n * @internal\n */\nexport const hasGroupAll = (array) => {\n    return array.some((g) => areObjRefsEqual(g.id, GranteeGroupAll.id));\n};\n/**\n * @internal\n */\nexport const getAppliedGrantees = (grantees, granteesToAdd, granteesToDelete) => {\n    const omitDeleted = notInArrayFilter(grantees, granteesToDelete);\n    return [...omitDeleted, ...granteesToAdd];\n};\n/**\n * @internal\n */\nexport const getGranteeItemTestId = (grantee, prefix) => {\n    const prefixValue = prefix ? `${prefix}-` : \"\";\n    const id = objRefToString(grantee.id).split(\"/\").pop();\n    return `s-gd-grantee-item-id-${prefixValue}${stringUtils.simplifyText(id)}`;\n};\n/**\n * @internal\n */\nexport const getGranularGranteeClassNameId = (grantee) => {\n    const id = objRefToString(grantee.id).split(\"/\").pop();\n    return `gd-granular-grantee-item-id-${stringUtils.simplifyText(id)}`;\n};\n/**\n * @internal\n */\nexport const getGranularPermissionFromUserPermissions = (userPermissions) => {\n    if (userPermissions.canEditAffectedObject || userPermissions.canEditLockedAffectedObject) {\n        return \"EDIT\";\n    }\n    else if (userPermissions.canShareAffectedObject || userPermissions.canShareLockedAffectedObject) {\n        return \"SHARE\";\n    }\n    else if (userPermissions.canViewAffectedObject) {\n        return \"VIEW\";\n    }\n    else {\n        return undefined;\n    }\n};\n/**\n * Decide whether specific grantee is the currently logged in user.\n *\n * In some cases, current user might have uriRef instead of idRef or vice versa. This would result in\n * a false negative match. Method conveniently checks also user login to avoid such mismatch.\n *\n * @internal\n */\nexport const getIsGranteeCurrentUser = (granteeRef, currentUser) => {\n    return (areObjRefsEqual(granteeRef, currentUser.ref) || areObjRefsEqual(granteeRef, idRef(currentUser.login)));\n};\n//# sourceMappingURL=utils.js.map","// (C) 2021 GoodData Corporation\nimport React, { useContext } from \"react\";\nconst defaultLabels = {\n    accessTypeLabel: \"access-type-label\",\n    accessRegimeLabel: \"access-regime-label\",\n    removeAccessGranteeTooltip: \"remove-access-grantee-tooltip\",\n    removeAccessCreatorTooltip: \"remove-access-creator-tooltip\",\n};\nconst LabelsContext = React.createContext(defaultLabels);\n/**\n * @internal\n */\nexport const useComponentLabelsContext = () => useContext(LabelsContext);\n/**\n * @internal\n */\nexport const ComponentLabelsProvider = (props) => {\n    const { children, labels } = props;\n    return React.createElement(LabelsContext.Provider, { value: labels }, children);\n};\n//# sourceMappingURL=ComponentLabelsContext.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger } from \"../../../Bubble/index.js\";\nimport { useComponentLabelsContext } from \"./ComponentLabelsContext.js\";\nconst alignPoints = [{ align: \"cr cl\" }];\nexport const GranteeUserIcon = () => {\n    return (React.createElement(\"div\", { className: \"gd-grantee-item-icon-left-background\" },\n        React.createElement(\"span\", { className: \"gd-grantee-item-icon gd-grantee-icon-user gd-grantee-item-icon-left\" })));\n};\nexport const GranteeUserInactiveIcon = () => {\n    return (React.createElement(\"div\", { className: \"gd-grantee-item-icon-left-background\" },\n        React.createElement(\"span\", { className: \"gd-grantee-item-icon-inactive gd-grantee-icon-user gd-grantee-item-icon-left\" })));\n};\nexport const GranteeGroupIcon = () => {\n    return (React.createElement(\"div\", { className: \"gd-grantee-item-icon-left-background\" },\n        React.createElement(\"span\", { className: \"gd-grantee-item-icon gd-grantee-icon-group gd-grantee-item-icon-left\" })));\n};\nexport const GranteeRemoveIcon = (props) => {\n    const { onClick, mode } = props;\n    const labels = useComponentLabelsContext();\n    return (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0, className: \"gd-grantee-item-delete\" },\n        React.createElement(\"span\", { className: \"gd-grantee-item-icon gd-grantee-icon-trash gd-grantee-item-icon-right s-gd-grantee-item-delete\", onClick: onClick, \"aria-label\": \"Share dialog grantee delete\" }),\n        React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: alignPoints }, mode === \"ShareGrantee\" ? (React.createElement(React.Fragment, null,\n            \" \",\n            labels.removeAccessGranteeTooltip,\n            \" \")) : (React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.item.remove.selection\" })))));\n};\nexport const GranteeOwnerRemoveIcon = () => {\n    const labels = useComponentLabelsContext();\n    return (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0, className: \"gd-grantee-item-delete-owner\" },\n        React.createElement(\"span\", { className: \"gd-grantee-item-icon gd-grantee-item-icon-owner gd-grantee-item-icon-right\" },\n            React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.item.creator\" })),\n        React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: alignPoints }, labels.removeAccessCreatorTooltip)));\n};\n//# sourceMappingURL=GranteeIcons.js.map","// (C) 2023 GoodData Corporation\nimport { __rest } from \"tslib\";\nimport { Bubble } from \"./Bubble.js\";\nimport { BubbleHoverTrigger } from \"./BubbleHoverTrigger.js\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\n/**\n * @internal\n */\nexport function withBubble(WrappedComponent) {\n    const ResultComponent = (props) => {\n        const { showBubble = true, alignPoints = [{ align: \"cr cl\" }], bubbleTextId, triggerClassName } = props, wrappedComponentProps = __rest(props, [\"showBubble\", \"alignPoints\", \"bubbleTextId\", \"triggerClassName\"]);\n        const intl = useIntl();\n        if (!showBubble || !bubbleTextId) {\n            return React.createElement(WrappedComponent, Object.assign({}, props));\n        }\n        const bubbleText = intl.formatMessage({ id: bubbleTextId });\n        return (React.createElement(BubbleHoverTrigger, { className: triggerClassName },\n            React.createElement(WrappedComponent, Object.assign({}, wrappedComponentProps)),\n            React.createElement(Bubble, { alignPoints: alignPoints },\n                React.createElement(\"div\", null, bubbleText))));\n    };\n    return ResultComponent;\n}\n//# sourceMappingURL=withBubble.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { withBubble } from \"../../../../Bubble/index.js\";\nimport { granularPermissionMessageLabels } from \"../../../../locales.js\";\nconst GranularPermissionSelectItem = ({ permission, grantee, selectedPermission, toggleDropdown, handleSetSelectedPermission, onChange, }) => {\n    const intl = useIntl();\n    const handleOnChange = useCallback((permission) => {\n        toggleDropdown();\n        if (permission.id !== selectedPermission) {\n            handleSetSelectedPermission(permission.id);\n            onChange(Object.assign(Object.assign({}, grantee), { permissions: [permission.id] }));\n        }\n    }, [grantee, toggleDropdown, handleSetSelectedPermission, onChange, selectedPermission]);\n    const isSelected = useMemo(() => permission.id === selectedPermission, [permission, selectedPermission]);\n    return (React.createElement(\"div\", { onClick: () => {\n            if (permission.enabled) {\n                handleOnChange(permission);\n            }\n        }, className: cx(\"gd-list-item\", \"gd-menu-item\", \"gd-granular-permission-select-item\", \"s-granular-permission-item\", {\n            \"is-disabled\": !permission.enabled,\n            \"is-selected\": isSelected,\n        }) },\n        React.createElement(\"div\", null, intl.formatMessage(granularPermissionMessageLabels[permission.id]))));\n};\nexport const GranularPermissionSelectItemWithBubble = withBubble(GranularPermissionSelectItem);\n//# sourceMappingURL=GranularPermissionItem.js.map","// (C) 2023 GoodData Corporation\nimport React, { useCallback, useContext, useMemo } from \"react\";\nimport noop from \"lodash/noop.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getGranularPermissionFromUserPermissions, getIsGranteeCurrentUser } from \"./utils.js\";\nimport { isGranularGrantee, isGranularGranteeUser } from \"./types.js\";\nconst defaultContext = {\n    onInteraction: noop,\n    currentUser: undefined,\n};\nconst ComponentInteractionContext = React.createContext(defaultContext);\n/**\n * @internal\n */\nexport const useComponentInteractionContext = () => useContext(ComponentInteractionContext);\n/**\n * @internal\n */\nexport const ComponentInteractionProvider = (props) => {\n    const { children, onInteraction, currentUser, currentUserPermissions, isCurrentUserWorkspaceManager, isSharedObjectLocked, sharedObjectStatus, } = props;\n    const flowId = useMemo(() => uuidv4(), []);\n    const currentUserPermission = useMemo(() => getGranularPermissionFromUserPermissions(currentUserPermissions), [currentUserPermissions]);\n    const handleInteraction = useCallback((data) => {\n        onInteraction(Object.assign(Object.assign({}, data), { flowId,\n            currentUserPermission,\n            isSharedObjectLocked,\n            sharedObjectStatus,\n            isCurrentUserWorkspaceManager }));\n    }, [\n        onInteraction,\n        flowId,\n        currentUserPermission,\n        isSharedObjectLocked,\n        sharedObjectStatus,\n        isCurrentUserWorkspaceManager,\n    ]);\n    return (React.createElement(ComponentInteractionContext.Provider, { value: {\n            onInteraction: handleInteraction,\n            currentUser,\n        } }, children));\n};\nexport const useShareDialogInteraction = () => {\n    const { onInteraction, currentUser } = useComponentInteractionContext();\n    const openInteraction = useCallback(() => onInteraction({\n        type: \"SHARE_DIALOG_OPENED\",\n    }), [onInteraction]);\n    const closeInteraction = useCallback(() => onInteraction({\n        type: \"SHARE_DIALOG_CLOSED\",\n    }), [onInteraction]);\n    const saveInteraction = useCallback(() => onInteraction({\n        type: \"SHARE_DIALOG_SAVED\",\n    }), [onInteraction]);\n    const permissionsDropdownOpenInteraction = useCallback((grantee, isExistingGrantee, granteeEffectivePermission) => {\n        if (!isGranularGrantee(grantee)) {\n            return;\n        }\n        onInteraction({\n            type: \"SHARE_DIALOG_PERMISSIONS_DROPDOWN_OPENED\",\n            isCurrentUserSelfUpdating: getIsGranteeCurrentUser(grantee.id, currentUser),\n            isExistingGrantee,\n            granteeType: isGranularGranteeUser(grantee) ? \"user\" : \"group\",\n            granteeEffectivePermission,\n        });\n    }, [onInteraction, currentUser]);\n    const permissionsChangeInteraction = useCallback((grantee, isExistingGrantee, granteeEffectivePermission, granteeUpdatedPermission) => {\n        if (!isGranularGrantee(grantee)) {\n            return;\n        }\n        onInteraction({\n            type: \"SHARE_DIALOG_PERMISSIONS_CHANGED\",\n            isCurrentUserSelfUpdating: getIsGranteeCurrentUser(grantee.id, currentUser),\n            isExistingGrantee,\n            granteeType: isGranularGranteeUser(grantee) ? \"user\" : \"group\",\n            granteeEffectivePermission,\n            granteeUpdatedPermission,\n        });\n    }, [onInteraction, currentUser]);\n    const permissionsRemoveInteraction = useCallback((grantee, isExistingGrantee, granteeEffectivePermission) => {\n        if (!isGranularGrantee(grantee)) {\n            return;\n        }\n        onInteraction({\n            type: \"SHARE_DIALOG_GRANTEE_REMOVED\",\n            isCurrentUserSelfUpdating: getIsGranteeCurrentUser(grantee.id, currentUser),\n            isExistingGrantee,\n            granteeType: isGranularGranteeUser(grantee) ? \"user\" : \"group\",\n            granteeEffectivePermission,\n        });\n    }, [onInteraction, currentUser]);\n    const granteeAddInteraction = useCallback((grantee) => {\n        if (!isGranularGrantee(grantee)) {\n            return;\n        }\n        onInteraction({\n            type: \"SHARE_DIALOG_GRANTEE_ADDED\",\n            granteeType: isGranularGranteeUser(grantee) ? \"user\" : \"group\",\n        });\n    }, [onInteraction]);\n    const availableGranteeListOpenInteraction = useCallback((numberOfAvailableGrantees) => onInteraction({ type: \"SHARE_DIALOG_AVAILABLE_GRANTEE_LIST_OPENED\", numberOfAvailableGrantees }), [onInteraction]);\n    return {\n        openInteraction,\n        closeInteraction,\n        saveInteraction,\n        permissionsDropdownOpenInteraction,\n        permissionsChangeInteraction,\n        permissionsRemoveInteraction,\n        granteeAddInteraction,\n        availableGranteeListOpenInteraction,\n    };\n};\n//# sourceMappingURL=ComponentInteractionContext.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { GranularPermissionSelectItemWithBubble } from \"./GranularPermissionItem.js\";\nimport { ItemsWrapper, Separator } from \"../../../../List/index.js\";\nimport { Overlay } from \"../../../../Overlay/index.js\";\nimport { withBubble } from \"../../../../Bubble/index.js\";\nimport { granularPermissionMessageLabels } from \"../../../../locales.js\";\nimport { useShareDialogInteraction } from \"../ComponentInteractionContext.js\";\nconst overlayAlignPoints = [{ align: \"br tr\" }];\nconst RemoveItem = ({ disabled, tooltipId, onClick, }) => {\n    const className = cx(\"gd-list-item gd-menu-item\", \"s-granular-permission-remove\", {\n        \"is-disabled\": disabled,\n    });\n    const FormattedMessageWithBubble = withBubble(FormattedMessage);\n    return (React.createElement(\"div\", { className: className, onClick: onClick },\n        React.createElement(FormattedMessageWithBubble, { id: granularPermissionMessageLabels.remove.id, showBubble: disabled, bubbleTextId: tooltipId })));\n};\nexport const GranularPermissionsDropdownBody = ({ grantee, granteePossibilities, alignTo, isShowDropdown, selectedPermission, toggleDropdown, onChange, onDelete, handleSetSelectedPermission, mode, }) => {\n    const { permissionsChangeInteraction, permissionsRemoveInteraction } = useShareDialogInteraction();\n    const handleOnDelete = useCallback(() => {\n        if (granteePossibilities.remove.enabled) {\n            const changedGrantee = Object.assign(Object.assign({}, grantee), { permissions: [], inheritedPermissions: [] });\n            onDelete(changedGrantee);\n            permissionsRemoveInteraction(grantee, mode === \"ShareGrantee\", granteePossibilities.assign.effective);\n            toggleDropdown();\n        }\n    }, [grantee, onDelete, toggleDropdown, mode, granteePossibilities, permissionsRemoveInteraction]);\n    const handleOnChange = useCallback((changedGrantee) => {\n        permissionsChangeInteraction(grantee, mode === \"ShareGrantee\", granteePossibilities.assign.effective, changedGrantee.permissions[0]);\n        onChange(changedGrantee);\n    }, [grantee, onChange, mode, granteePossibilities, permissionsChangeInteraction]);\n    if (!isShowDropdown) {\n        return null;\n    }\n    return (React.createElement(Overlay, { key: \"GranularPermissionsSelect\", alignTo: `.${alignTo}`, alignPoints: overlayAlignPoints, className: \"s-granular-permissions-overlay\", closeOnMouseDrag: true, closeOnOutsideClick: true, closeOnParentScroll: true, onClose: toggleDropdown },\n        React.createElement(ItemsWrapper, { smallItemsSpacing: true },\n            granteePossibilities.assign.items.map((permissionItem) => {\n                return (!permissionItem.hidden && (React.createElement(GranularPermissionSelectItemWithBubble, { grantee: grantee, key: permissionItem.id, permission: permissionItem, selectedPermission: selectedPermission, toggleDropdown: toggleDropdown, onChange: handleOnChange, handleSetSelectedPermission: handleSetSelectedPermission, bubbleTextId: permissionItem.tooltip, showBubble: !permissionItem.enabled })));\n            }),\n            React.createElement(Separator, null),\n            React.createElement(RemoveItem, { disabled: !granteePossibilities.remove.enabled, onClick: handleOnDelete, tooltipId: granteePossibilities.remove.tooltip }))));\n};\n//# sourceMappingURL=GranularPermissionsDropdownBody.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { getGranularGranteeClassNameId } from \"../utils.js\";\nimport { granularPermissionMessageLabels } from \"../../../../locales.js\";\nimport { GranularPermissionsDropdownBody } from \"./GranularPermissionsDropdownBody.js\";\nimport { withBubble } from \"../../../../Bubble/index.js\";\nexport const GranularPermissionsDropdown = ({ grantee, granteePossibilities, isDropdownDisabled, isDropdownOpen, toggleDropdown, onChange, onDelete, className, mode, }) => {\n    const intl = useIntl();\n    const [selectedPermission, setSelectedPermission] = useState(granteePossibilities.assign.effective);\n    const handleSetSelectedPermission = (permission) => {\n        setSelectedPermission(permission);\n    };\n    const handleClick = useCallback(() => {\n        if (!isDropdownDisabled) {\n            toggleDropdown();\n        }\n    }, [isDropdownDisabled, toggleDropdown]);\n    const granularGranteeClassName = getGranularGranteeClassNameId(grantee);\n    const buttonValue = intl.formatMessage(granularPermissionMessageLabels[selectedPermission]);\n    return (React.createElement(\"div\", { className: className },\n        React.createElement(\"div\", { className: cx(\"s-granular-permission-button\", \"gd-granular-permission-button\", \"dropdown-button\", granularGranteeClassName, {\n                \"is-active\": isDropdownOpen,\n                \"gd-icon-navigateup\": !isDropdownDisabled && isDropdownOpen,\n                \"gd-icon-navigatedown\": !isDropdownDisabled && !isDropdownOpen,\n                disabled: isDropdownDisabled,\n                \"gd-icon-right\": !isDropdownDisabled,\n            }), onClick: handleClick, \"aria-label\": \"Share dialog granular permissions button\" },\n            React.createElement(\"div\", { className: \"s-granular-permission-button-title gd-granular-permission-button-title\" }, buttonValue)),\n        React.createElement(GranularPermissionsDropdownBody, { alignTo: granularGranteeClassName, grantee: grantee, granteePossibilities: granteePossibilities, toggleDropdown: toggleDropdown, isShowDropdown: isDropdownOpen, onChange: onChange, onDelete: onDelete, selectedPermission: selectedPermission, handleSetSelectedPermission: handleSetSelectedPermission, mode: mode })));\n};\nexport const GranularPermissionsDropdownWithBubble = withBubble(GranularPermissionsDropdown);\n//# sourceMappingURL=GranularPermissionsDropdown.js.map","// (C) 2023 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nexport const usePermissionsDropdownState = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggleOpen = useCallback(() => setIsOpen(!isOpen), [isOpen]);\n    return { isDropdownOpen: isOpen, toggleDropdown: toggleOpen };\n};\n//# sourceMappingURL=usePermissionsDropdownState.js.map","// (C) 2023 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport { isGranularGranteeUser, } from \"../types.js\";\nimport { granularPermissionMessageTooltips } from \"../../../../locales.js\";\nconst allPermissionsSorted = [\"EDIT\", \"SHARE\", \"VIEW\"];\nexport const getEffectivePermission = (permissions, inheritedPermissions, isSharedObjectLocked) => {\n    const allUserPermissions = [...permissions, ...inheritedPermissions];\n    const effectivePermission = allPermissionsSorted.find((permission) => allUserPermissions.includes(permission));\n    invariant(effectivePermission, \"Provided item permissions are incomplete or invalid\");\n    if (isSharedObjectLocked && effectivePermission === \"EDIT\") {\n        return \"SHARE\";\n    }\n    return effectivePermission;\n};\nconst disableWithTooltip = (possibility, tooltip) => {\n    possibility.enabled = false;\n    possibility.tooltip = tooltip;\n};\nconst getPermissionTypeItems = (grantee, currentUserPermissions, isSharedObjectLocked) => {\n    return allPermissionsSorted.map((permission, permissionIndex) => {\n        const item = {\n            id: permission,\n            enabled: true,\n            tooltip: \"\",\n            hidden: false,\n        };\n        // don't allow setting permissions higher that the current user\n        if ((permission === \"EDIT\" && !currentUserPermissions.canEditAffectedObject) ||\n            (permission === \"SHARE\" && !currentUserPermissions.canShareAffectedObject) ||\n            !currentUserPermissions.canViewAffectedObject) {\n            disableWithTooltip(item, \"shareDialog.share.granular.grantee.tooltip.cannotGrantHigher\");\n        }\n        // hide Edit & share on inherited object\n        if (permission === \"EDIT\" && isSharedObjectLocked) {\n            item.hidden = true;\n        }\n        // don't allow setting permission lower that permission obtained indirectly\n        grantee.inheritedPermissions.forEach((inheritedPermission) => {\n            const inheritedPermissionIndex = allPermissionsSorted.indexOf(inheritedPermission);\n            if (permissionIndex > inheritedPermissionIndex) {\n                disableWithTooltip(item, isGranularGranteeUser(grantee)\n                    ? granularPermissionMessageTooltips.cannotGrantLowerForUser.id\n                    : granularPermissionMessageTooltips.cannotGrantLowerForGroup.id);\n            }\n        });\n        return item;\n    });\n};\nexport const getGranteePossibilities = (grantee, currentUserPermissions, isSharedObjectLocked) => {\n    const granteeEffectivePermission = getEffectivePermission(grantee.permissions, grantee.inheritedPermissions, isSharedObjectLocked);\n    // the \"Remove\" option state\n    const remove = {\n        enabled: true,\n        tooltip: \"\",\n    };\n    // state of the whole permissions selection dropdown\n    const change = {\n        enabled: true,\n        tooltip: \"\",\n    };\n    //state of the permissions selection dropdown items\n    const permissionTypeItems = getPermissionTypeItems(grantee, currentUserPermissions, isSharedObjectLocked);\n    // cannot change or remove permissions of a grantee that has higher permission than the current user\n    if ((granteeEffectivePermission === \"EDIT\" && !currentUserPermissions.canEditAffectedObject) ||\n        (granteeEffectivePermission === \"SHARE\" && !currentUserPermissions.canShareAffectedObject)) {\n        const tooltipId = isGranularGranteeUser(grantee)\n            ? granularPermissionMessageTooltips.cannotChangeHigherForUser.id\n            : granularPermissionMessageTooltips.cannotChangeHigherForGroup.id;\n        disableWithTooltip(change, tooltipId);\n        disableWithTooltip(remove, tooltipId);\n    }\n    // cannot remove permission that is defined on the object in parent workspace\n    if (grantee.permissions.length === 0 && grantee.inheritedPermissions.length !== 0) {\n        disableWithTooltip(remove, isGranularGranteeUser(grantee)\n            ? granularPermissionMessageTooltips.cannotRemoveFromParentForUser.id\n            : granularPermissionMessageTooltips.cannotRemoveFromParentForGroup.id);\n    }\n    // disable all permissions change if all assignment options are disabled and also the Remove option is disabled\n    if (change.enabled &&\n        !remove.enabled &&\n        permissionTypeItems.every((item) => !item.enabled || item.hidden || item.id === granteeEffectivePermission)) {\n        disableWithTooltip(change, isGranularGranteeUser(grantee)\n            ? granularPermissionMessageTooltips.noChangeAvailableForUser.id\n            : granularPermissionMessageTooltips.noChangeAvailableForGroup.id);\n    }\n    return {\n        remove,\n        assign: {\n            items: permissionTypeItems,\n            effective: granteeEffectivePermission,\n        },\n        change,\n    };\n};\n//# sourceMappingURL=permissionsLogic.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { GranteeUserIcon } from \"../GranteeIcons.js\";\nimport { getGranteeItemTestId, getGranteeLabel } from \"../utils.js\";\nimport { GranularPermissionsDropdownWithBubble } from \"./GranularPermissionsDropdown.js\";\nimport { usePermissionsDropdownState } from \"./usePermissionsDropdownState.js\";\nimport { getGranteePossibilities } from \"./permissionsLogic.js\";\nimport { useShareDialogInteraction } from \"../ComponentInteractionContext.js\";\nexport const GranularGranteeUserItem = (props) => {\n    const { grantee, currentUserPermissions, isSharedObjectLocked, onChange, onDelete, mode } = props;\n    const { email } = grantee;\n    const { isDropdownOpen, toggleDropdown } = usePermissionsDropdownState();\n    const { permissionsDropdownOpenInteraction } = useShareDialogInteraction();\n    const intl = useIntl();\n    const itemClassName = cx({ \"s-share-dialog-current-user\": grantee.isCurrentUser }, \"s-share-dialog-grantee-item\", \"gd-share-dialog-grantee-item\", getGranteeItemTestId(grantee), { \"is-active\": isDropdownOpen });\n    const label = useMemo(() => {\n        return getGranteeLabel(grantee, intl);\n    }, [grantee, intl]);\n    const renderSubtitle = useMemo(() => email && email !== label, [email, label]);\n    const granteePossibilities = useMemo(() => getGranteePossibilities(grantee, currentUserPermissions, isSharedObjectLocked), [grantee, currentUserPermissions, isSharedObjectLocked]);\n    const handleToggleDropdown = useCallback(() => {\n        toggleDropdown();\n        if (!isDropdownOpen) {\n            permissionsDropdownOpenInteraction(grantee, mode === \"ShareGrantee\", granteePossibilities.assign.effective);\n        }\n    }, [\n        toggleDropdown,\n        isDropdownOpen,\n        grantee,\n        mode,\n        permissionsDropdownOpenInteraction,\n        granteePossibilities,\n    ]);\n    return (React.createElement(\"div\", { className: itemClassName },\n        React.createElement(GranularPermissionsDropdownWithBubble, { grantee: grantee, granteePossibilities: granteePossibilities, isDropdownOpen: isDropdownOpen, toggleDropdown: handleToggleDropdown, onChange: onChange, onDelete: onDelete, isDropdownDisabled: !granteePossibilities.change.enabled, bubbleTextId: granteePossibilities.change.tooltip, className: \"gd-grantee-granular-permission\", triggerClassName: \"gd-grantee-granular-permission-bubble-trigger\", mode: mode }),\n        React.createElement(\"div\", { className: \"gd-grantee-content\" },\n            React.createElement(\"div\", { className: \"gd-grantee-content-label\" }, label),\n            renderSubtitle ? (React.createElement(\"div\", { className: \"gd-grantee-content-label gd-grantee-content-email\" }, email)) : null),\n        React.createElement(GranteeUserIcon, null)));\n};\n//# sourceMappingURL=GranularGranteeUserItem.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { GranteeGroupIcon } from \"../GranteeIcons.js\";\nimport { getGranteeItemTestId, getGranteeLabel } from \"../utils.js\";\nimport { GranularPermissionsDropdownWithBubble } from \"./GranularPermissionsDropdown.js\";\nimport { usePermissionsDropdownState } from \"./usePermissionsDropdownState.js\";\nimport { getGranteePossibilities } from \"./permissionsLogic.js\";\nimport { useShareDialogInteraction } from \"../ComponentInteractionContext.js\";\nexport const GranularGranteeGroupItem = (props) => {\n    const { grantee, currentUserPermissions, isSharedObjectLocked, onChange, onDelete, mode } = props;\n    const { isDropdownOpen, toggleDropdown } = usePermissionsDropdownState();\n    const { permissionsDropdownOpenInteraction } = useShareDialogInteraction();\n    const intl = useIntl();\n    const itemClassName = cx(\"s-share-dialog-grantee-item\", \"gd-share-dialog-grantee-item\", getGranteeItemTestId(grantee), {\n        \"is-active\": isDropdownOpen,\n    });\n    const label = useMemo(() => getGranteeLabel(grantee, intl), [grantee, intl]);\n    const granteePossibilities = useMemo(() => getGranteePossibilities(grantee, currentUserPermissions, isSharedObjectLocked), [grantee, currentUserPermissions, isSharedObjectLocked]);\n    const handleToggleDropdown = useCallback(() => {\n        toggleDropdown();\n        if (!isDropdownOpen) {\n            permissionsDropdownOpenInteraction(grantee, mode === \"ShareGrantee\", granteePossibilities.assign.effective);\n        }\n    }, [\n        toggleDropdown,\n        isDropdownOpen,\n        grantee,\n        mode,\n        permissionsDropdownOpenInteraction,\n        granteePossibilities,\n    ]);\n    return (React.createElement(\"div\", { className: itemClassName },\n        React.createElement(GranularPermissionsDropdownWithBubble, { grantee: grantee, granteePossibilities: granteePossibilities, isDropdownOpen: isDropdownOpen, toggleDropdown: handleToggleDropdown, onChange: onChange, onDelete: onDelete, isDropdownDisabled: !granteePossibilities.change.enabled, bubbleTextId: granteePossibilities.change.tooltip, className: \"gd-grantee-granular-permission\", triggerClassName: \"gd-grantee-granular-permission-bubble-trigger\", mode: mode }),\n        React.createElement(\"div\", { className: \"gd-grantee-content\" },\n            React.createElement(\"div\", { className: \"gd-grantee-content-label\" }, label)),\n        React.createElement(GranteeGroupIcon, null)));\n};\n//# sourceMappingURL=GranularGranteeGroupItem.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { isGranteeUser, isGranteeGroup, isGranteeGroupAll, isGranularGranteeUser, isGranularGranteeGroup, } from \"./types.js\";\nimport { getGranteeLabel, getGranteeItemTestId } from \"./utils.js\";\nimport { GranteeGroupIcon, GranteeOwnerRemoveIcon, GranteeRemoveIcon, GranteeUserIcon, GranteeUserInactiveIcon, } from \"./GranteeIcons.js\";\nimport { Button } from \"../../../Button/index.js\";\nimport { GranularGranteeUserItem } from \"./GranularPermissions/GranularGranteeUserItem.js\";\nimport { GranularGranteeGroupItem } from \"./GranularPermissions/GranularGranteeGroupItem.js\";\nimport { invariant } from \"ts-invariant\";\nconst granteeUserTitleRenderer = (grantee, intl) => {\n    const userName = getGranteeLabel(grantee, intl);\n    if (grantee.status === \"Inactive\") {\n        const inactiveLabel = ` (${intl.formatMessage({\n            id: \"shareDialog.share.grantee.item.user.inactive\",\n        })})`;\n        return (React.createElement(React.Fragment, null,\n            userName,\n            React.createElement(\"span\", { className: \"gd-grantee-content-label-inactive\" }, inactiveLabel)));\n    }\n    return React.createElement(React.Fragment, null,\n        \" \",\n        userName,\n        \" \");\n};\nconst GranteeUserItem = (props) => {\n    const { grantee, mode, onDelete } = props;\n    const intl = useIntl();\n    const onClick = useCallback(() => {\n        onDelete(grantee);\n    }, [grantee, onDelete]);\n    const itemClassName = cx({ \"s-share-dialog-owner\": grantee.isOwner, \"s-share-dialog-current-user\": grantee.isCurrentUser }, \"gd-share-dialog-grantee-item\", getGranteeItemTestId(grantee));\n    return (React.createElement(\"div\", { className: itemClassName },\n        grantee.isOwner ? (React.createElement(GranteeOwnerRemoveIcon, null)) : (React.createElement(GranteeRemoveIcon, { mode: mode, onClick: onClick })),\n        React.createElement(\"div\", { className: \"gd-grantee-content\" },\n            React.createElement(\"div\", { className: \"gd-grantee-content-label\" }, granteeUserTitleRenderer(grantee, intl)),\n            React.createElement(\"div\", { className: \"gd-grantee-content-label gd-grantee-content-email\" }, grantee.email)),\n        grantee.status === \"Active\" ? React.createElement(GranteeUserIcon, null) : React.createElement(GranteeUserInactiveIcon, null)));\n};\nconst GranteeUserInactiveItem = (props) => {\n    const { grantee } = props;\n    const intl = useIntl();\n    const granteeLabel = useMemo(() => {\n        return getGranteeLabel(grantee, intl);\n    }, [grantee, intl]);\n    const itemClassName = cx(\"gd-share-dialog-grantee-item\", \"s-share-dialog-inactive-owner\", getGranteeItemTestId(grantee));\n    return (React.createElement(\"div\", { className: itemClassName },\n        React.createElement(GranteeOwnerRemoveIcon, null),\n        React.createElement(\"div\", { className: \"gd-grantee-content\" },\n            React.createElement(\"div\", { className: \"gd-grantee-content-label-inactive\" }, granteeLabel),\n            React.createElement(\"div\", { className: \"gd-grantee-content-label-inactive gd-grantee-content-inactive\" },\n                React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.item.user.inactive.description\" }))),\n        React.createElement(GranteeUserInactiveIcon, null)));\n};\nconst GranteeGroupItem = (props) => {\n    const { grantee, onDelete, mode } = props;\n    const intl = useIntl();\n    const onClick = useCallback(() => {\n        onDelete(grantee);\n    }, [grantee, onDelete]);\n    const groupName = useMemo(() => getGranteeLabel(grantee, intl), [grantee, intl]);\n    const numOfUsers = useMemo(() => {\n        if (grantee.memberCount) {\n            return intl.formatMessage({\n                id: \"shareDialog.share.grantee.item.users.count\",\n            }, { granteeCount: grantee.memberCount });\n        }\n    }, [grantee, intl]);\n    const itemClassName = cx(\"gd-share-dialog-grantee-item\", getGranteeItemTestId(grantee));\n    return (React.createElement(\"div\", { className: itemClassName },\n        React.createElement(GranteeRemoveIcon, { mode: mode, onClick: onClick }),\n        React.createElement(\"div\", { className: \"gd-grantee-content\" },\n            React.createElement(\"div\", { className: \"gd-grantee-content-label\" }, groupName),\n            numOfUsers ? (React.createElement(\"div\", { className: \"gd-grantee-count-button\" },\n                React.createElement(Button, { className: \"gd-button-link-dimmed gd-button gd-grantee-content-user-count s-grantee-content-user-count\", value: numOfUsers }))) : null),\n        React.createElement(GranteeGroupIcon, null)));\n};\n/**\n * @internal\n */\nexport const GranteeItemComponent = (props) => {\n    const { grantee, mode, currentUserPermissions, isSharedObjectLocked, onDelete, onChange } = props;\n    if (isGranularGranteeUser(grantee)) {\n        return (React.createElement(GranularGranteeUserItem, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isSharedObjectLocked, grantee: grantee, onChange: onChange, onDelete: onDelete, mode: mode }));\n    }\n    else if (isGranularGranteeGroup(grantee)) {\n        return (React.createElement(GranularGranteeGroupItem, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isSharedObjectLocked, grantee: grantee, onChange: onChange, onDelete: onDelete, mode: mode }));\n    }\n    else if (isGranteeUser(grantee)) {\n        return React.createElement(GranteeUserItem, { grantee: grantee, mode: mode, onDelete: onDelete });\n    }\n    else if (grantee.type === \"inactive_owner\") {\n        return React.createElement(GranteeUserInactiveItem, { grantee: grantee });\n    }\n    else if (isGranteeGroup(grantee) || isGranteeGroupAll(grantee)) {\n        return React.createElement(GranteeGroupItem, { grantee: grantee, mode: mode, onDelete: onDelete });\n    }\n    else {\n        invariant(grantee, \"Illegal grantee used.\");\n    }\n};\n//# sourceMappingURL=GranteeItem.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n/**\n * @internal\n */\nexport const GranteeListEmpty = () => {\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-grantee-list-empty-selection s-gd-share-dialog-grantee-list-empty-selection\" },\n        React.createElement(\"span\", null,\n            React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.add.empty.selection\" }))));\n};\n//# sourceMappingURL=GranteeListEmpty.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { serializeObjRef } from \"@gooddata/sdk-model\";\nimport { GranteeItemComponent } from \"./GranteeItem.js\";\nimport { GranteeListEmpty } from \"./GranteeListEmpty.js\";\nimport { useIntl } from \"react-intl\";\nimport { sortGranteeList } from \"./utils.js\";\n/**\n * @internal\n */\nexport const GranteeList = (props) => {\n    const { grantees, mode, areGranularPermissionsSupported, currentUserPermissions, isSharedObjectLocked, onDelete, onChange, } = props;\n    const intl = useIntl();\n    const sortedGrantees = useMemo(() => {\n        return sortGranteeList(grantees, intl);\n    }, [grantees, intl]);\n    if (grantees.length === 0) {\n        return React.createElement(GranteeListEmpty, null);\n    }\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-grantee-list\" }, sortedGrantees.map((grantee) => {\n        return (React.createElement(GranteeItemComponent, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isSharedObjectLocked, key: serializeObjRef(grantee.id), grantee: grantee, mode: mode, areGranularPermissionsSupported: areGranularPermissionsSupported, onDelete: onDelete, onChange: onChange }));\n    })));\n};\n//# sourceMappingURL=GranteeList.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { LoadingMask } from \"../../../LoadingMask/index.js\";\n/**\n * @internal\n */\nexport const GranteeListLoading = () => {\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-grantee-list-empty-selection\" },\n        React.createElement(LoadingMask, { size: \"large\" })));\n};\n//# sourceMappingURL=GranteeListLoading.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"../../../Typography/index.js\";\nimport { AddUserOrGroupButton } from \"./AddGranteeButton.js\";\nimport { GranteeList } from \"./GranteeList.js\";\nimport { GranteeListLoading } from \"./GranteeListLoading.js\";\n/**\n * @internal\n */\nexport const ShareGranteeContent = (props) => {\n    const { isLoading, grantees, areGranularPermissionsSupported, currentUserPermissions, isSharedObjectLocked, onAddGrantee, onChange, onDelete, } = props;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"gd-share-dialog-grantee-content-header\" },\n            React.createElement(Typography, { tagName: \"h3\" },\n                React.createElement(FormattedMessage, { id: \"shareDialog.share.grantee.list.title\" })),\n            React.createElement(AddUserOrGroupButton, { onClick: onAddGrantee, isDisabled: isLoading })),\n        isLoading ? (React.createElement(GranteeListLoading, null)) : (React.createElement(GranteeList, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isSharedObjectLocked, grantees: grantees, mode: \"ShareGrantee\", areGranularPermissionsSupported: areGranularPermissionsSupported, onChange: onChange, onDelete: onDelete }))));\n};\n//# sourceMappingURL=ShareGranteeContent.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const SharedObjectCheckboxControl = ({ isChecked, isSupported, onChange, name, label, className, }) => {\n    if (!isSupported) {\n        return null;\n    }\n    const handleOnChange = (e) => onChange(e.target.checked);\n    const classNames = cx(\"input-checkbox-label\", className);\n    return (React.createElement(\"label\", { className: classNames },\n        React.createElement(\"input\", { type: \"checkbox\", name: name, className: \"input-checkbox\", checked: isChecked, onChange: handleOnChange, \"aria-label\": name }),\n        React.createElement(\"span\", { className: \"input-label-text\" }, label)));\n};\n//# sourceMappingURL=SharedObjectCheckboxControl.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { useComponentLabelsContext } from \"./ComponentLabelsContext.js\";\nimport { SharedObjectCheckboxControl } from \"./SharedObjectCheckboxControl.js\";\n/**\n * @internal\n */\nexport const SharedObjectUnderLenientControl = ({ isUnderLenientControl, isLeniencyControlSupported, onUnderLenientControlChange, }) => {\n    const labels = useComponentLabelsContext();\n    return (React.createElement(SharedObjectCheckboxControl, { isChecked: isUnderLenientControl, isSupported: isLeniencyControlSupported, onChange: onUnderLenientControlChange, label: labels.accessRegimeLabel, name: \"shared-accessRegimeLabel-control\", className: \"s-shared-object-under-lenient-control\" }));\n};\n//# sourceMappingURL=SharedObjectUnderLenientControl.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { useComponentLabelsContext } from \"./ComponentLabelsContext.js\";\nimport { SharedObjectCheckboxControl } from \"./SharedObjectCheckboxControl.js\";\n/**\n * @internal\n */\nexport const SharedObjectLockControl = ({ isLocked, isLockingSupported, onLockChange, }) => {\n    const labels = useComponentLabelsContext();\n    return (React.createElement(SharedObjectCheckboxControl, { isChecked: isLocked, isSupported: isLockingSupported, onChange: onLockChange, label: labels.accessTypeLabel, name: \"shared-dialog-lock\", className: \"s-shared-object-lock\" }));\n};\n//# sourceMappingURL=SharedObjectLockControl.js.map","// (C) 2023 GoodData Corporation\nimport { useEffect, useMemo, useState } from \"react\";\nimport { objRefToString } from \"@gooddata/sdk-model\";\nimport { stringUtils } from \"@gooddata/util\";\nimport isNil from \"lodash/isNil.js\";\nconst LOCAL_STORAGE_KEY_PREFIX = \"gdc_share_dialog_admin_message_visible_\";\nconst createLocalStorageKey = (currentUserRef) => LOCAL_STORAGE_KEY_PREFIX + stringUtils.simplifyText(objRefToString(currentUserRef));\nconst getLocalStorageValue = (key, defaultValue) => {\n    const item = localStorage.getItem(key);\n    const value = JSON.parse(item);\n    return isNil(value) ? defaultValue : value;\n};\nexport const useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(() => getLocalStorageValue(key, defaultValue));\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n    return [value, setValue];\n};\nexport const useAdminInformationMessageState = (currentUserRef) => {\n    const localStorageKey = useMemo(() => createLocalStorageKey(currentUserRef), [currentUserRef]);\n    const [isMessageVisible, setIsMessageVisible] = useLocalStorage(localStorageKey, true);\n    const handleMessageClose = () => setIsMessageVisible(false);\n    return {\n        isMessageVisible,\n        handleMessageClose,\n    };\n};\n//# sourceMappingURL=useAdminInformationMessage.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Message } from \"../../../Messages/index.js\";\nexport const AdminInformationMessage = ({ isVisible, onClose }) => {\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(Message, { type: \"progress\", className: \"gd-granular-permissions-admin-information s-granular-permissions-admin-information\", onClose: onClose },\n        React.createElement(\"span\", { \"aria-label\": \"Share dialog admin information message\" },\n            React.createElement(FormattedMessage, { id: \"shareDialog.share.granular.administrator.info\", values: { b: (chunks) => React.createElement(\"strong\", null, chunks) } }))));\n};\n//# sourceMappingURL=AdminInformationMessage.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport compact from \"lodash/compact.js\";\nimport { ConfirmDialogBase } from \"../../ConfirmDialogBase.js\";\nimport { ContentDivider } from \"./ContentDivider.js\";\nimport { ShareGranteeContent } from \"./ShareGranteeContent.js\";\nimport { SharedObjectUnderLenientControl } from \"./SharedObjectUnderLenientControl.js\";\nimport { SharedObjectLockControl } from \"./SharedObjectLockControl.js\";\nimport { useAdminInformationMessageState } from \"./useAdminInformationMessage.js\";\nimport { AdminInformationMessage } from \"./AdminInformationMessage.js\";\n/**\n * @internal\n */\nexport const ShareGranteeBase = (props) => {\n    const { currentUser, isLoading, isLockedNow, isUnderLenientControlNow, grantees, sharedObject, isDirty, currentUserPermissions, onCancel, onSubmit, onGranteeDelete, onGranularGranteeChange, onAddGranteeButtonClick, onLockChange, onUnderLenientControlChange, isCurrentUserWorkspaceManager, } = props;\n    const { owner, isLeniencyControlSupported, isLockingSupported, areGranularPermissionsSupported, isMetadataObjectLockingSupported, isLocked, canWorkspaceManagerSeeEverySharedObject, } = sharedObject;\n    const intl = useIntl();\n    const { isMessageVisible, handleMessageClose } = useAdminInformationMessageState(currentUser.ref);\n    const granteeList = useMemo(() => {\n        return compact([owner, ...grantees]);\n    }, [grantees, owner]);\n    const dialogLabels = useMemo(() => {\n        return {\n            headline: intl.formatMessage({ id: \"shareDialog.share.grantee.title\" }),\n            cancelButtonText: intl.formatMessage({ id: \"cancel\" }),\n            submitButtonText: intl.formatMessage({ id: \"save\" }),\n        };\n    }, [intl]);\n    const shouldDisplayAdminMessage = useMemo(() => canWorkspaceManagerSeeEverySharedObject &&\n        isCurrentUserWorkspaceManager &&\n        !isLoading &&\n        isMessageVisible, [canWorkspaceManagerSeeEverySharedObject, isCurrentUserWorkspaceManager, isLoading, isMessageVisible]);\n    return (React.createElement(ConfirmDialogBase, { className: \"gd-share-dialog s-gd-share-grantees\", displayCloseButton: true, isPositive: true, isSubmitDisabled: !isDirty, headline: dialogLabels.headline, cancelButtonText: dialogLabels.cancelButtonText, submitButtonText: dialogLabels.submitButtonText, onCancel: onCancel, onSubmit: onSubmit },\n        React.createElement(ShareGranteeContent, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isLocked, isLoading: isLoading, grantees: granteeList, areGranularPermissionsSupported: areGranularPermissionsSupported, onAddGrantee: onAddGranteeButtonClick, onDelete: onGranteeDelete, onChange: onGranularGranteeChange }),\n        React.createElement(ContentDivider, null),\n        React.createElement(AdminInformationMessage, { isVisible: shouldDisplayAdminMessage, onClose: handleMessageClose }),\n        React.createElement(SharedObjectUnderLenientControl, { isUnderLenientControl: isUnderLenientControlNow, isLeniencyControlSupported: isLeniencyControlSupported, onUnderLenientControlChange: onUnderLenientControlChange }),\n        isMetadataObjectLockingSupported ? (React.createElement(SharedObjectLockControl, { isLocked: isLockedNow, isLockingSupported: isLockingSupported, onLockChange: onLockChange })) : null));\n};\n//# sourceMappingURL=ShareGranteeBase.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport { components as ReactSelectComponents, } from \"react-select\";\nimport { Typography } from \"../../../Typography/index.js\";\nimport { LoadingMask } from \"../../../LoadingMask/index.js\";\nimport { isGranteeItem, isGranteeUser, isSelectErrorOption, } from \"./types.js\";\nimport { getGranteeItemTestId } from \"./utils.js\";\nexport const EmptyRenderer = () => {\n    return null;\n};\nexport const LoadingMessageRenderer = () => {\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-loading-mask-container\" },\n        React.createElement(LoadingMask, { size: \"small\" })));\n};\nexport const NoOptionsMessageRenderer = (props) => {\n    return (React.createElement(\"div\", { className: \"s-gd-share-dialog-no-option\", \"aria-label\": \"Share dialog no match\" },\n        React.createElement(ReactSelectComponents.NoOptionsMessage, Object.assign({}, props))));\n};\nexport const MenuListRendered = (props) => {\n    return (React.createElement(ReactSelectComponents.MenuList, Object.assign({}, props),\n        React.createElement(\"div\", { className: \"s-gd-share-dialog-menu\", \"aria-label\": \"Share dialog menu list\" }, props.children)));\n};\nexport const InputRendered = (props) => {\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-input s-gd-share-dialog-input\" },\n        React.createElement(ReactSelectComponents.Input, Object.assign({}, props))));\n};\nconst OptionContentRenderer = (item) => {\n    if (isGranteeUser(item.value)) {\n        return (React.createElement(React.Fragment, null,\n            item.label,\n            \" \",\n            React.createElement(\"span\", { className: \"option-email\" }, item.value.email)));\n    }\n    return React.createElement(React.Fragment, null,\n        \" \",\n        item.label,\n        \" \");\n};\nexport const ErrorOptionRenderer = (errorOption) => {\n    return (React.createElement(\"div\", { className: `gd-share-dialog-option-error s-gd-share-dialog-option-error`, \"aria-label\": \"Share dialog error\" },\n        React.createElement(\"span\", { className: \"gd-share-dialog-option-error-content\" }, errorOption.label)));\n};\nexport const OptionRenderer = (props) => {\n    const { className, cx, isFocused, innerRef, innerProps, data } = props;\n    if (isSelectErrorOption(data)) {\n        return ErrorOptionRenderer(data);\n    }\n    let sTestStyle = \"\";\n    if (isGranteeItem(data.value)) {\n        sTestStyle = getGranteeItemTestId(data.value, \"option\");\n    }\n    const componentStyle = cx({\n        option: true,\n        \"option--is-focused\": isFocused,\n    }, className);\n    return (React.createElement(\"div\", Object.assign({ ref: innerRef, className: `${componentStyle} ${sTestStyle}` }, innerProps),\n        React.createElement(\"div\", { className: \"option-content\" }, OptionContentRenderer(data))));\n};\nexport const GroupHeadingRenderer = (props) => {\n    const { label } = props.data;\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-select-group-heading\" },\n        React.createElement(Typography, { tagName: \"h3\" }, label)));\n};\n//# sourceMappingURL=AsyncSelectComponents.js.map","// (C) 2021-2023 GoodData Corporation\nimport { areObjRefsEqual, isUserAccess, isUserGroupAccess, isGranularUserAccess, isGranularUserGroupAccess, } from \"@gooddata/sdk-model\";\nimport { typesUtils } from \"@gooddata/util\";\nimport { isGranteeGroupAll, isGranteeUserInactive, isGranteeUser, isGranularGrantee, } from \"./ShareDialogBase/types.js\";\nimport { GranteeGroupAll, InactiveOwner, getAppliedGrantees, hasGroupAll, getIsGranteeCurrentUser, } from \"./ShareDialogBase/utils.js\";\nconst mapUserStatusToGranteeStatus = (status) => {\n    if (status === \"DISABLED\") {\n        return \"Inactive\";\n    }\n    return \"Active\";\n};\n/**\n * @internal\n */\nexport const mapWorkspaceUserToGrantee = (user, currentUser) => {\n    return {\n        type: \"user\",\n        id: user.ref,\n        name: user.name,\n        email: user.email,\n        isOwner: false,\n        isCurrentUser: getIsGranteeCurrentUser(user.ref, currentUser),\n        status: mapUserStatusToGranteeStatus(user.status),\n    };\n};\n/**\n * @internal\n */\nexport const mapWorkspaceUserGroupToGrantee = (userGroup) => {\n    return {\n        id: userGroup.ref,\n        type: \"group\",\n        name: userGroup.name,\n    };\n};\n/**\n * @internal\n */\nexport const mapUserFullName = (user) => {\n    if (user.fullName) {\n        return user.fullName;\n    }\n    return `${user.firstName} ${user.lastName}`;\n};\n/**\n * @internal\n */\nexport const mapOwnerToGrantee = (user, currentUserRef) => {\n    return {\n        type: \"user\",\n        id: user.ref,\n        name: mapUserFullName(user),\n        email: user.email,\n        isOwner: true,\n        isCurrentUser: areObjRefsEqual(user.ref, currentUserRef),\n        status: \"Active\",\n    };\n};\n/**\n * @internal\n */\nexport const mapUserToInactiveOwner = () => {\n    return InactiveOwner;\n};\n/**\n * @internal\n */\nexport const mapShareStatusToGroupAll = (shareStatus) => {\n    if (shareStatus === \"public\") {\n        return GranteeGroupAll;\n    }\n};\n/**\n * @internal\n */\nexport const mapGranteesToGranularAccessGrantees = (grantees, added) => {\n    const guard = typesUtils.combineGuards(isGranteeGroupAll, isGranteeUserInactive);\n    return grantees\n        .filter((g) => !guard(g))\n        .map((g) => {\n        if (isGranularGrantee(g)) {\n            return {\n                type: g.type,\n                granteeRef: g.id,\n                permissions: g.permissions,\n                inheritedPermissions: g.inheritedPermissions,\n            };\n        }\n        else {\n            const type = isGranteeUser(g) ? \"granularUser\" : \"granularGroup\";\n            return {\n                type,\n                granteeRef: g.id,\n                // When grantee is not granular, we need to insert some dummy permission when adding access.\n                permissions: added ? [\"VIEW\"] : [],\n                inheritedPermissions: [],\n            };\n        }\n    });\n};\n/**\n * @internal\n */\nexport const mapUserAccessToGrantee = (userAccess, currentUser) => {\n    const { user, type } = userAccess;\n    return {\n        type,\n        id: user.ref,\n        name: mapUserFullName(user),\n        email: user.email,\n        isOwner: false,\n        isCurrentUser: getIsGranteeCurrentUser(user.ref, currentUser),\n        status: mapUserStatusToGranteeStatus(user.status),\n    };\n};\n/**\n * @internal\n */\nexport const mapUserGroupAccessToGrantee = (userGroupAccess) => {\n    const { userGroup, type } = userGroupAccess;\n    return {\n        type,\n        id: userGroup.ref,\n        name: userGroup.name,\n    };\n};\n/**\n * @internal\n */\nexport const mapGranularUserAccessToGrantee = (userAccess, currentUser) => {\n    const { user, type, permissions, inheritedPermissions } = userAccess;\n    return {\n        type,\n        id: user.ref,\n        name: mapUserFullName(user),\n        email: user.email,\n        isOwner: false,\n        isCurrentUser: getIsGranteeCurrentUser(user.ref, currentUser),\n        status: mapUserStatusToGranteeStatus(user.status),\n        permissions,\n        inheritedPermissions,\n    };\n};\n/**\n * @internal\n */\nexport const mapGranularUserGroupAccessToGrantee = (userGroupAccess) => {\n    const { userGroup, type, permissions, inheritedPermissions } = userGroupAccess;\n    return {\n        type,\n        id: userGroup.ref,\n        name: userGroup.name,\n        permissions,\n        inheritedPermissions,\n    };\n};\nexport const mapAccessGranteeDetailToGrantee = (accessGranteeDetail, currentUser) => {\n    if (isUserAccess(accessGranteeDetail)) {\n        return mapUserAccessToGrantee(accessGranteeDetail, currentUser);\n    }\n    else if (isUserGroupAccess(accessGranteeDetail)) {\n        return mapUserGroupAccessToGrantee(accessGranteeDetail);\n    }\n    else if (isGranularUserAccess(accessGranteeDetail)) {\n        return mapGranularUserAccessToGrantee(accessGranteeDetail, currentUser);\n    }\n    else if (isGranularUserGroupAccess(accessGranteeDetail)) {\n        return mapGranularUserGroupAccessToGrantee(accessGranteeDetail);\n    }\n};\n/**\n * @internal\n */\nexport const mapGranteesToShareStatus = (grantees, granteesToAdd, granteesToDelete) => {\n    const appliedGrantees = getAppliedGrantees(grantees, granteesToAdd, granteesToDelete);\n    if (hasGroupAll(appliedGrantees)) {\n        return \"public\";\n    }\n    if (appliedGrantees.length > 0) {\n        return \"shared\";\n    }\n    return \"private\";\n};\n/**\n * @internal\n */\nexport const mapSharedObjectToAffectedSharedObject = (sharedObject, owner, isLockingSupported, isLeniencyControlSupported, areGranularPermissionsSupported = false, isMetadataObjectLockingSupported = true, canWorkspaceManagerSeeEverySharedObject = false) => {\n    const { ref, shareStatus, isLocked, isUnderStrictControl } = sharedObject;\n    return {\n        ref,\n        shareStatus,\n        owner,\n        isLocked: !!isLocked,\n        isUnderLenientControl: !isUnderStrictControl,\n        isLockingSupported,\n        isLeniencyControlSupported,\n        areGranularPermissionsSupported,\n        isMetadataObjectLockingSupported,\n        canWorkspaceManagerSeeEverySharedObject,\n    };\n};\n//# sourceMappingURL=shareDialogMappers.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport debounce from \"debounce-promise\";\nimport { useIntl } from \"react-intl\";\nimport AsyncSelect from \"react-select/async\";\nimport { useBackendStrict, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { isGranteeItem } from \"./types.js\";\nimport { EmptyRenderer, GroupHeadingRenderer, InputRendered, LoadingMessageRenderer, MenuListRendered, NoOptionsMessageRenderer, OptionRenderer, } from \"./AsyncSelectComponents.js\";\nimport { loadGranteeOptionsPromise } from \"./backend/loadGranteeOptionsPromise.js\";\nimport { useShareDialogInteraction } from \"./ComponentInteractionContext.js\";\nconst SEARCH_INTERVAL = 400;\n/**\n * @internal\n */\nexport const AddGranteeSelect = (props) => {\n    const { appliedGrantees, currentUser, sharedObjectRef, onSelectGrantee } = props;\n    const backend = useBackendStrict();\n    const workspace = useWorkspaceStrict();\n    const { availableGranteeListOpenInteraction } = useShareDialogInteraction();\n    const intl = useIntl();\n    const selectRef = useRef(null);\n    useEffect(() => {\n        selectRef.current.focus();\n    }, []);\n    const onSelect = useCallback((value) => {\n        const grantee = value.value;\n        if (isGranteeItem(grantee)) {\n            onSelectGrantee(grantee);\n        }\n    }, [onSelectGrantee]);\n    const noOptionsMessage = useMemo(() => () => {\n        return intl.formatMessage({\n            id: \"shareDialog.share.grantee.add.search.no.matching.items\",\n        });\n    }, [intl]);\n    const loadOptions = useMemo(() => debounce(loadGranteeOptionsPromise(currentUser, sharedObjectRef, appliedGrantees, backend, workspace, intl, availableGranteeListOpenInteraction), SEARCH_INTERVAL, {\n        leading: true,\n    }), [\n        backend,\n        workspace,\n        intl,\n        appliedGrantees,\n        currentUser,\n        sharedObjectRef,\n        availableGranteeListOpenInteraction,\n    ]);\n    const onKeyDownCallback = useCallback((e) => {\n        const target = e.target;\n        // react-select has default behavior on space and tab key  - open menu / select first option etc.\n        // We need disable this behavior for space key by set e.preventDefault when input is empty and for tab key completely\n        //space\n        if (e.keyCode === 32 && !target.value) {\n            e.preventDefault();\n        }\n        // tab\n        if (e.keyCode === 9) {\n            e.preventDefault();\n        }\n    }, []);\n    const filterOption = (option) => {\n        const grantee = option.value;\n        if (isGranteeItem(grantee)) {\n            return !appliedGrantees.some((g) => {\n                return areObjRefsEqual(g.id, grantee.id);\n            });\n        }\n        return true;\n    };\n    return (React.createElement(\"div\", { className: \"gd-share-dialog-content-select\" },\n        React.createElement(AsyncSelect, { ref: selectRef, defaultMenuIsOpen: true, classNamePrefix: \"gd-share-dialog\", components: {\n                DropdownIndicator: EmptyRenderer,\n                IndicatorSeparator: EmptyRenderer,\n                Input: InputRendered,\n                Option: OptionRenderer,\n                GroupHeading: GroupHeadingRenderer,\n                LoadingMessage: LoadingMessageRenderer,\n                LoadingIndicator: EmptyRenderer,\n                MenuList: MenuListRendered,\n                NoOptionsMessage: NoOptionsMessageRenderer,\n            }, loadOptions: loadOptions, defaultOptions: true, placeholder: intl.formatMessage({\n                id: \"shareDialog.share.grantee.add.search.placeholder\",\n            }), onKeyDown: onKeyDownCallback, noOptionsMessage: noOptionsMessage, onChange: onSelect, value: null, filterOption: filterOption })));\n};\n//# sourceMappingURL=AddGranteeSelect.js.map","// (C) 2021-2023 GoodData Corporation\nimport { getGranteeLabel, GranteeGroupAll, hasGroupAll, sortGranteesByName } from \"../utils.js\";\nimport { mapWorkspaceUserGroupToGrantee, mapWorkspaceUserToGrantee } from \"../../shareDialogMappers.js\";\nimport { isAvailableUserGroupAccessGrantee, isAvailableUserAccessGrantee, } from \"@gooddata/sdk-model\";\nconst createErrorOption = (intl) => {\n    return [\n        {\n            isDisabled: true,\n            type: \"error\",\n            label: intl.formatMessage({\n                id: \"shareDialog.share.grantee.add.search.error.message\",\n            }),\n        },\n    ];\n};\nconst matchAllGroupQueryString = (query, allGroupLabel) => {\n    return allGroupLabel.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1;\n};\n/**\n * @internal\n */\nexport const loadGranteeOptionsPromise = (currentUser, sharedObjectRef, appliedGrantees, backend, workspace, intl, onGranteesLoaded) => async (inputValue) => {\n    try {\n        const availableGrantees = await backend\n            .workspace(workspace)\n            .accessControl()\n            .getAvailableGrantees(sharedObjectRef, inputValue);\n        const mappedUsers = availableGrantees\n            .filter(isAvailableUserAccessGrantee)\n            .map((availableGrantee) => mapWorkspaceUserToGrantee(availableGrantee, currentUser))\n            .sort(sortGranteesByName(intl))\n            .map((user) => {\n            return {\n                label: getGranteeLabel(user, intl),\n                value: user,\n            };\n        });\n        let mappedGroups = availableGrantees\n            .filter(isAvailableUserGroupAccessGrantee)\n            .map((availableGrantee) => mapWorkspaceUserGroupToGrantee(availableGrantee))\n            .sort(sortGranteesByName(intl))\n            .map((group) => {\n            return {\n                label: getGranteeLabel(group, intl),\n                value: group,\n            };\n        });\n        const allGroupLabel = getGranteeLabel(GranteeGroupAll, intl);\n        const supportsEveryoneUserGroupForAccessControl = backend.capabilities.supportsEveryoneUserGroupForAccessControl;\n        if (!hasGroupAll(appliedGrantees) &&\n            matchAllGroupQueryString(inputValue, allGroupLabel) &&\n            supportsEveryoneUserGroupForAccessControl) {\n            const groupAllOption = {\n                label: allGroupLabel,\n                value: GranteeGroupAll,\n            };\n            mappedGroups = [groupAllOption, ...mappedGroups];\n        }\n        onGranteesLoaded([...mappedUsers, ...mappedGroups].length);\n        return [\n            {\n                label: intl.formatMessage({ id: \"shareDialog.share.grantee.add.label.group\" }),\n                options: mappedGroups,\n            },\n            {\n                label: intl.formatMessage({ id: \"shareDialog.share.grantee.add.label.user\" }),\n                options: mappedUsers,\n            },\n        ];\n    }\n    catch (_a) {\n        return createErrorOption(intl);\n    }\n};\n//# sourceMappingURL=loadGranteeOptionsPromise.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { GranteeList } from \"./GranteeList.js\";\nimport { isGranteeGroup, isGranteeUser, } from \"./types.js\";\nimport { AddGranteeSelect } from \"./AddGranteeSelect.js\";\n/**\n * In case of user and group, we need to make sure, that the added grantee has some default granular permission.\n */\nconst enrichGranteeWithDefaultPermission = (grantee) => {\n    const defaultPermissions = {\n        permissions: [\"VIEW\"],\n        inheritedPermissions: [],\n    };\n    if (isGranteeUser(grantee)) {\n        return Object.assign(Object.assign(Object.assign({}, grantee), defaultPermissions), { type: \"granularUser\" });\n    }\n    else {\n        return Object.assign(Object.assign(Object.assign({}, grantee), defaultPermissions), { type: \"granularGroup\" });\n    }\n};\n/**\n * @internal\n */\nexport const AddGranteeContent = (props) => {\n    const { appliedGrantees, currentUser, addedGrantees, areGranularPermissionsSupported, currentUserPermissions, isSharedObjectLocked, sharedObjectRef, onDelete, onAddUserOrGroups, onGranularGranteeChange, } = props;\n    const onSelectGrantee = useCallback((grantee) => {\n        if (!appliedGrantees.some((g) => areObjRefsEqual(g.id, grantee.id))) {\n            if (areGranularPermissionsSupported && (isGranteeUser(grantee) || isGranteeGroup(grantee))) {\n                onAddUserOrGroups(enrichGranteeWithDefaultPermission(grantee));\n            }\n            else {\n                onAddUserOrGroups(grantee);\n            }\n        }\n    }, [appliedGrantees, onAddUserOrGroups, areGranularPermissionsSupported]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(AddGranteeSelect, { currentUser: currentUser, appliedGrantees: appliedGrantees, sharedObjectRef: sharedObjectRef, onSelectGrantee: onSelectGrantee }),\n        React.createElement(GranteeList, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isSharedObjectLocked, grantees: addedGrantees, mode: \"AddGrantee\", areGranularPermissionsSupported: areGranularPermissionsSupported, onDelete: onDelete, onChange: onGranularGranteeChange })));\n};\n//# sourceMappingURL=AddGranteeContent.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button } from \"../../../Button/index.js\";\nimport { ConfirmDialogBase } from \"../../ConfirmDialogBase.js\";\nimport { AddGranteeContent } from \"./AddGranteeContent.js\";\nimport { ContentDivider } from \"./ContentDivider.js\";\nconst BackButton = (props) => {\n    const { onClick: onBackClick } = props;\n    return (React.createElement(Button, { value: \"\", className: \"gd-button-primary gd-button-icon-only gd-icon-navigateleft gd-share-dialog-header-back-button s-share-dialog-navigate-back\", onClick: onBackClick }));\n};\n/**\n * @internal\n */\nexport const AddGranteeBase = (props) => {\n    const { appliedGrantees, addedGrantees, currentUser, isDirty, currentUserPermissions, sharedObject, onCancel, onSubmit, onBackClick, onAddUserOrGroups, onDelete, onGranularGranteeChange, } = props;\n    const intl = useIntl();\n    const { isLocked: isSharedObjectLocked, ref: sharedObjectRef, areGranularPermissionsSupported, } = sharedObject;\n    const backButtonRenderer = useCallback(() => {\n        return React.createElement(BackButton, { onClick: onBackClick });\n    }, [onBackClick]);\n    return (React.createElement(ConfirmDialogBase, { className: \"gd-share-dialog gd-share-dialog-add-users s-gd-share-add-grantees\", displayCloseButton: true, isPositive: true, isSubmitDisabled: !isDirty, headline: intl.formatMessage({ id: \"shareDialog.share.grantee.add.info\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), submitButtonText: intl.formatMessage({ id: \"shareDialog.share.grantee.share\" }), onCancel: onBackClick, onSubmit: onSubmit, onClose: onCancel, headerLeftButtonRenderer: backButtonRenderer },\n        React.createElement(AddGranteeContent, { currentUserPermissions: currentUserPermissions, isSharedObjectLocked: isSharedObjectLocked, currentUser: currentUser, addedGrantees: addedGrantees, appliedGrantees: appliedGrantees, areGranularPermissionsSupported: areGranularPermissionsSupported, sharedObjectRef: sharedObjectRef, onAddUserOrGroups: onAddUserOrGroups, onDelete: onDelete, onGranularGranteeChange: onGranularGranteeChange }),\n        React.createElement(ContentDivider, null)));\n};\n//# sourceMappingURL=AddGranteeBase.js.map","// (C) 2021-2023 GoodData Corporation\nimport { useCallback, useMemo, useState } from \"react\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { isGranteeUserInactive, isGranularGrantee, } from \"./types.js\";\nimport { notInArrayFilter, getAppliedGrantees } from \"./utils.js\";\nimport { useGetAccessList } from \"./backend/useGetAccessList.js\";\nimport { mapShareStatusToGroupAll } from \"../shareDialogMappers.js\";\nimport { useShareDialogInteraction } from \"./ComponentInteractionContext.js\";\n/**\n * @internal\n */\nconst useShareDialogState = (isUnderLenientControl, isLocked) => {\n    const [dialogMode, setDialogMode] = useState(\"ShareGrantee\");\n    const [isGranteesLoading, setIsGranteesLoading] = useState(true);\n    const [grantees, setGrantees] = useState([]);\n    const [granteesToAdd, setGranteesToAdd] = useState([]);\n    const [granteesToDelete, setGranteesToDelete] = useState([]);\n    const [granteesToUpdate, setGranteesToUpdate] = useState([]);\n    const [isUnderLenientControlNow, setUnderLenientControlNow] = useState(isUnderLenientControl);\n    const [isLockedNow, setLockedNow] = useState(isLocked);\n    const [originalGranularGrantees, setOriginalGranularGrantees] = useState([]);\n    const { granteeAddInteraction } = useShareDialogInteraction();\n    const onGranularGranteeAddChange = useCallback((grantee) => {\n        setGranteesToAdd((state) => state.map((s) => (areObjRefsEqual(s.id, grantee.id) ? grantee : s)));\n    }, []);\n    const onSharedGranteeDelete = useCallback((grantee) => {\n        setGranteesToDelete((state) => [...state, grantee]);\n        setGranteesToUpdate((state) => state.filter((s) => !areObjRefsEqual(s.id, grantee.id)));\n    }, []);\n    const onAddedGranteeDelete = useCallback((grantee) => {\n        setGranteesToAdd((state) => state.filter((g) => !areObjRefsEqual(g.id, grantee.id)));\n    }, []);\n    const onGranteeAdd = useCallback((grantee) => {\n        setGranteesToAdd((state) => [...state, grantee]);\n        granteeAddInteraction(grantee);\n    }, [granteeAddInteraction]);\n    const onGranularGranteeShareChange = useCallback((grantee) => {\n        const originalGrantee = originalGranularGrantees.find((g) => areObjRefsEqual(g.id, grantee.id));\n        const hasChangedPermissions = !isEqual(originalGrantee === null || originalGrantee === void 0 ? void 0 : originalGrantee.permissions, grantee.permissions);\n        setGranteesToUpdate((state) => {\n            const filteredUpdatedGrantees = state.filter((s) => !areObjRefsEqual(s.id, grantee.id));\n            const isAlreadyUpdated = filteredUpdatedGrantees.length !== state.length;\n            if (isAlreadyUpdated && !hasChangedPermissions) {\n                return filteredUpdatedGrantees;\n            }\n            return [...filteredUpdatedGrantees, grantee];\n        });\n        setGrantees((state) => state.map((s) => (areObjRefsEqual(s.id, grantee.id) ? grantee : s)));\n    }, [originalGranularGrantees]);\n    const onAddGranteeButtonClick = useCallback(() => {\n        setDialogMode(\"AddGrantee\");\n    }, []);\n    const onAddGranteeBackClick = useCallback(() => {\n        setDialogMode(\"ShareGrantee\");\n        setGranteesToAdd([]);\n    }, []);\n    const onLoadGrantees = useCallback((grantees, groupAll) => {\n        if (groupAll) {\n            const allGrantees = [...grantees, groupAll];\n            setGrantees(allGrantees);\n            setOriginalGranularGrantees(allGrantees.filter(isGranularGrantee));\n        }\n        else {\n            setGrantees(grantees);\n            setOriginalGranularGrantees(grantees.filter(isGranularGrantee));\n        }\n        setIsGranteesLoading(false);\n    }, []);\n    const onUnderLenientControlChange = useCallback((isUnderLenientControl) => {\n        setUnderLenientControlNow(isUnderLenientControl);\n    }, []);\n    const onLockChange = useCallback((isLocked) => {\n        setLockedNow(isLocked);\n    }, []);\n    return {\n        dialogMode,\n        isGranteesLoading,\n        grantees,\n        granteesToAdd,\n        granteesToDelete,\n        granteesToUpdate,\n        onLoadGrantees,\n        onSharedGranteeDelete,\n        onAddedGranteeDelete,\n        onGranteeAdd,\n        onAddGranteeButtonClick,\n        onAddGranteeBackClick,\n        isUnderLenientControlNow,\n        isLockedNow,\n        onUnderLenientControlChange,\n        onLockChange,\n        onGranularGranteeShareChange,\n        onGranularGranteeAddChange,\n    };\n};\n/**\n * @internal\n */\nexport const useShareDialogBase = (props) => {\n    const { sharedObject, currentUser, onSubmit, onError } = props;\n    const { ref, shareStatus, owner, isUnderLenientControl, isLocked, areGranularPermissionsSupported } = sharedObject;\n    const { saveInteraction: shareDialogSaveInteraction } = useShareDialogInteraction();\n    const { dialogMode, isGranteesLoading, isLockedNow, isUnderLenientControlNow, grantees, granteesToAdd, granteesToDelete, granteesToUpdate, onLoadGrantees, onSharedGranteeDelete, onAddedGranteeDelete, onGranteeAdd, onAddGranteeButtonClick, onAddGranteeBackClick, onLockChange, onUnderLenientControlChange, onGranularGranteeAddChange, onGranularGranteeShareChange, } = useShareDialogState(isUnderLenientControl, isLocked);\n    const onLoadGranteesSuccess = useCallback((result) => {\n        if (areGranularPermissionsSupported) {\n            onLoadGrantees(result, undefined);\n        }\n        else {\n            const groupAll = mapShareStatusToGroupAll(shareStatus);\n            onLoadGrantees(result, groupAll);\n        }\n    }, [onLoadGrantees, shareStatus, areGranularPermissionsSupported]);\n    useGetAccessList({ currentUser, sharedObjectRef: ref, onSuccess: onLoadGranteesSuccess, onError });\n    const isShareDialogDirty = useMemo(() => {\n        if (areGranularPermissionsSupported) {\n            return granteesToUpdate.length !== 0 || granteesToDelete.length !== 0;\n        }\n        else {\n            return (granteesToDelete.length !== 0 ||\n                isLocked !== isLockedNow ||\n                isUnderLenientControl !== isUnderLenientControlNow);\n        }\n    }, [\n        granteesToUpdate,\n        granteesToDelete,\n        isLocked,\n        isLockedNow,\n        isUnderLenientControl,\n        isUnderLenientControlNow,\n        areGranularPermissionsSupported,\n    ]);\n    const isAddDialogDirty = useMemo(() => {\n        return granteesToAdd.length !== 0;\n    }, [granteesToAdd]);\n    const onSubmitShareGrantee = useCallback(() => {\n        if (!isShareDialogDirty) {\n            return;\n        }\n        const allGranteesToAdd = [...granteesToAdd, ...granteesToUpdate];\n        shareDialogSaveInteraction();\n        onSubmit(grantees, allGranteesToAdd, granteesToDelete, isUnderLenientControlNow, isLockedNow);\n    }, [\n        grantees,\n        granteesToUpdate,\n        granteesToAdd,\n        granteesToDelete,\n        isShareDialogDirty,\n        isUnderLenientControlNow,\n        isLockedNow,\n        onSubmit,\n        shareDialogSaveInteraction,\n    ]);\n    const onSubmitAddGrantee = useCallback(() => {\n        if (!isAddDialogDirty) {\n            return;\n        }\n        const allGranteesToAdd = [...granteesToAdd, ...granteesToUpdate];\n        shareDialogSaveInteraction();\n        onSubmit(grantees, allGranteesToAdd, granteesToDelete, isUnderLenientControlNow, isLockedNow);\n    }, [\n        grantees,\n        granteesToUpdate,\n        granteesToAdd,\n        granteesToDelete,\n        isAddDialogDirty,\n        isUnderLenientControlNow,\n        isLockedNow,\n        onSubmit,\n        shareDialogSaveInteraction,\n    ]);\n    const sharedGrantees = useMemo(() => {\n        return notInArrayFilter(grantees, granteesToDelete);\n    }, [grantees, granteesToDelete]);\n    const appliedGranteesWithOwner = useMemo(() => {\n        const appliedGrantees = getAppliedGrantees(grantees, granteesToAdd, granteesToDelete);\n        if (isGranteeUserInactive(owner) || areGranularPermissionsSupported) {\n            return appliedGrantees;\n        }\n        return [...appliedGrantees, owner];\n    }, [grantees, granteesToDelete, granteesToAdd, areGranularPermissionsSupported, owner]);\n    return {\n        onAddedGranteeDelete,\n        onSharedGranteeDelete,\n        onAddGranteeBackClick,\n        onAddGranteeButtonClick,\n        onGranteeAdd,\n        onSubmitShareGrantee,\n        onSubmitAddGrantee,\n        isGranteesLoading,\n        granteesToAdd,\n        dialogMode,\n        isShareDialogDirty,\n        isAddDialogDirty,\n        sharedGrantees,\n        appliedGranteesWithOwner,\n        onLockChange,\n        onUnderLenientControlChange,\n        onGranularGranteeShareChange,\n        onGranularGranteeAddChange,\n        isUnderLenientControlNow,\n        isLockedNow,\n    };\n};\n//# sourceMappingURL=useShareDialogBase.js.map","// (C) 2021-2023 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { useBackendStrict, useCancelablePromise, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { mapAccessGranteeDetailToGrantee } from \"../../shareDialogMappers.js\";\n/**\n * @internal\n */\nexport const useGetAccessList = (props) => {\n    const { sharedObjectRef, currentUser, onSuccess, onError } = props;\n    const effectiveBackend = useBackendStrict();\n    const effectiveWorkspace = useWorkspaceStrict();\n    const promise = () => effectiveBackend.workspace(effectiveWorkspace).accessControl().getAccessList(sharedObjectRef);\n    const onSuccessCallBack = useCallback((result) => {\n        const grantees = result.map((item) => mapAccessGranteeDetailToGrantee(item, currentUser));\n        onSuccess(grantees);\n    }, [currentUser, onSuccess]);\n    useCancelablePromise({ promise, onError, onSuccess: onSuccessCallBack }, [\n        effectiveBackend,\n        effectiveWorkspace,\n        sharedObjectRef,\n        onSuccessCallBack,\n    ]);\n};\n//# sourceMappingURL=useGetAccessList.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useEffect } from \"react\";\nimport { Overlay } from \"../../../Overlay/index.js\";\nimport { ShareGranteeBase } from \"./ShareGranteeBase.js\";\nimport { AddGranteeBase } from \"./AddGranteeBase.js\";\nimport { useShareDialogBase } from \"./useShareDialogBase.js\";\nimport { useShareDialogInteraction } from \"./ComponentInteractionContext.js\";\nconst alignPoints = [{ align: \"cc cc\" }];\n/**\n * @internal\n */\nexport const ShareDialogBase = (props) => {\n    const { onCancel, sharedObject, currentUser, currentUserPermissions, isCurrentUserWorkspaceManager } = props;\n    const { openInteraction, closeInteraction } = useShareDialogInteraction();\n    useEffect(() => {\n        openInteraction();\n    }, [openInteraction]);\n    const handleCancel = useCallback(() => {\n        onCancel();\n        closeInteraction();\n    }, [onCancel, closeInteraction]);\n    const { onAddedGranteeDelete, onSharedGranteeDelete, onAddGranteeBackClick, onAddGranteeButtonClick, onGranteeAdd, onSubmitShareGrantee, onSubmitAddGrantee, granteesToAdd, dialogMode, isShareDialogDirty, isAddDialogDirty, sharedGrantees, appliedGranteesWithOwner, isGranteesLoading, isLockedNow, isUnderLenientControlNow, onLockChange, onUnderLenientControlChange, onGranularGranteeAddChange, onGranularGranteeShareChange, } = useShareDialogBase(props);\n    return (React.createElement(Overlay, { alignPoints: alignPoints, isModal: true, positionType: \"fixed\", className: \"gd-share-dialog-overlay\" },\n        React.createElement(\"div\", { className: \"s-gd-share-dialog\" }, dialogMode === \"ShareGrantee\" ? (React.createElement(ShareGranteeBase, { currentUserPermissions: currentUserPermissions, currentUser: currentUser, isLoading: isGranteesLoading, isDirty: isShareDialogDirty, isLockedNow: isLockedNow, isUnderLenientControlNow: isUnderLenientControlNow, sharedObject: sharedObject, grantees: sharedGrantees, onCancel: handleCancel, onSubmit: onSubmitShareGrantee, onAddGranteeButtonClick: onAddGranteeButtonClick, onGranteeDelete: onSharedGranteeDelete, onLockChange: onLockChange, onUnderLenientControlChange: onUnderLenientControlChange, onGranularGranteeChange: onGranularGranteeShareChange, isCurrentUserWorkspaceManager: isCurrentUserWorkspaceManager })) : (React.createElement(AddGranteeBase, { currentUserPermissions: currentUserPermissions, isDirty: isAddDialogDirty, currentUser: currentUser, appliedGrantees: appliedGranteesWithOwner, addedGrantees: granteesToAdd, sharedObject: sharedObject, onAddUserOrGroups: onGranteeAdd, onDelete: onAddedGranteeDelete, onCancel: handleCancel, onSubmit: onSubmitAddGrantee, onBackClick: onAddGranteeBackClick, onGranularGranteeChange: onGranularGranteeAddChange })))));\n};\n//# sourceMappingURL=ShareDialogBase.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { BackendProvider, IntlWrapper, UnexpectedSdkError, useBackendStrict, useWorkspaceStrict, WorkspaceProvider, } from \"@gooddata/sdk-ui\";\nimport { ShareDialogBase } from \"./ShareDialogBase/ShareDialogBase.js\";\nimport { mapGranteesToGranularAccessGrantees, mapGranteesToShareStatus, mapOwnerToGrantee, mapUserToInactiveOwner, mapSharedObjectToAffectedSharedObject, } from \"./shareDialogMappers.js\";\nimport { ComponentLabelsProvider } from \"./ShareDialogBase/ComponentLabelsContext.js\";\nimport { ComponentInteractionProvider } from \"./ShareDialogBase/ComponentInteractionContext.js\";\nimport noop from \"lodash/noop.js\";\n/**\n * @internal\n */\nexport const ShareDialog = (props) => {\n    const { backend, workspace, locale, sharedObject, currentUser, onApply, onCancel, onError, onInteraction = noop, isLockingSupported, isCurrentUserWorkspaceManager, labels, currentUserPermissions, } = props;\n    const effectiveBackend = useBackendStrict(backend);\n    const effectiveWorkspace = useWorkspaceStrict(workspace);\n    const areGranularPermissionsSupported = effectiveBackend.capabilities.supportsGranularAccessControl;\n    const isLeniencyControlSupported = !effectiveBackend.capabilities.usesStrictAccessControl;\n    const isMetadataObjectLockingSupported = effectiveBackend.capabilities.supportsMetadataObjectLocking;\n    const canWorkspaceManagerSeeEverySharedObject = effectiveBackend.capabilities.canWorkspaceManagerSeeEverySharedObject;\n    const { createdBy } = sharedObject;\n    const { ref: currentUserRef } = currentUser;\n    const onShareDialogBaseError = useCallback((err) => {\n        onError === null || onError === void 0 ? void 0 : onError(new UnexpectedSdkError(err.message, err));\n    }, [onError]);\n    const owner = useMemo(() => {\n        if (areGranularPermissionsSupported) {\n            return undefined;\n        }\n        if (createdBy) {\n            return mapOwnerToGrantee(createdBy, currentUserRef);\n        }\n        return mapUserToInactiveOwner();\n    }, [createdBy, currentUserRef, areGranularPermissionsSupported]);\n    const onSubmit = useCallback((grantees, granteesToAdd, granteesToDelete, isUnderLenientControl, isLocked) => {\n        const shareStatus = mapGranteesToShareStatus(grantees, granteesToAdd, granteesToDelete);\n        const isUnderStrictControl = shareStatus !== \"public\" && !isUnderLenientControl;\n        const addAccess = mapGranteesToGranularAccessGrantees(granteesToAdd, true);\n        const revokeAccess = mapGranteesToGranularAccessGrantees(granteesToDelete);\n        onApply({\n            shareStatus,\n            isUnderStrictControl,\n            isLocked,\n            granteesToAdd: addAccess,\n            granteesToDelete: revokeAccess,\n        });\n    }, [onApply]);\n    const affectedSharedObject = useMemo(() => {\n        return mapSharedObjectToAffectedSharedObject(sharedObject, owner, isLockingSupported, isLeniencyControlSupported, areGranularPermissionsSupported, isMetadataObjectLockingSupported, canWorkspaceManagerSeeEverySharedObject);\n    }, [\n        sharedObject,\n        owner,\n        isLockingSupported,\n        isLeniencyControlSupported,\n        areGranularPermissionsSupported,\n        isMetadataObjectLockingSupported,\n        canWorkspaceManagerSeeEverySharedObject,\n    ]);\n    return (React.createElement(IntlWrapper, { locale: locale },\n        React.createElement(BackendProvider, { backend: effectiveBackend },\n            React.createElement(WorkspaceProvider, { workspace: effectiveWorkspace },\n                React.createElement(ComponentLabelsProvider, { labels: labels },\n                    React.createElement(ComponentInteractionProvider, { onInteraction: onInteraction, currentUser: currentUser, currentUserPermissions: currentUserPermissions, isCurrentUserWorkspaceManager: isCurrentUserWorkspaceManager, sharedObjectStatus: affectedSharedObject.shareStatus, isSharedObjectLocked: affectedSharedObject.isLocked },\n                        React.createElement(ShareDialogBase, { currentUser: currentUser, sharedObject: affectedSharedObject, isCurrentUserWorkspaceManager: isCurrentUserWorkspaceManager, currentUserPermissions: currentUserPermissions, onCancel: onCancel, onSubmit: onSubmit, onError: onShareDialogBaseError })))))));\n};\n//# sourceMappingURL=ShareDialog.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { ShareDialog } from \"@gooddata/sdk-ui-kit\";\nimport { useIntl } from \"react-intl\";\nimport { useDashboardSelector, selectLocale } from \"../../model/index.js\";\n/**\n * @alpha\n */\nexport const DefaultShareDialog = (props) => {\n    const { workspace, backend, isVisible, sharedObject, currentUser, isLockingSupported, isCurrentUserWorkspaceManager, currentUserPermissions, onApply, onCancel, onError, onInteraction, } = props;\n    const locale = useDashboardSelector(selectLocale);\n    const intl = useIntl();\n    const labels = useMemo(() => ({\n        accessTypeLabel: intl.formatMessage({ id: \"dashboard.shareDialog.lock.label\" }),\n        accessRegimeLabel: intl.formatMessage({\n            id: \"dashboard.shareDialog.underLenientControl.label\",\n        }),\n        removeAccessCreatorTooltip: intl.formatMessage({\n            id: \"dashboard.shareDialog.removeAccessCreatorTooltip\",\n        }),\n        removeAccessGranteeTooltip: intl.formatMessage({\n            id: \"dashboard.shareDialog.removeAccessGranteeTooltip\",\n        }),\n    }), [intl]);\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(ShareDialog, { locale: locale, backend: backend, workspace: workspace, sharedObject: sharedObject, currentUser: currentUser, onApply: onApply, onCancel: onCancel, onError: onError, isLockingSupported: isLockingSupported, labels: labels, isCurrentUserWorkspaceManager: isCurrentUserWorkspaceManager, currentUserPermissions: currentUserPermissions, onInteraction: onInteraction }));\n};\n//# sourceMappingURL=DefaultShareDialog.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { cancelEditRenderMode, selectIsDashboardDirty, selectIsDashboardSaving, selectIsInEditMode, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../../../../model/index.js\";\n/**\n * @internal\n */\nexport function useCancelButtonProps() {\n    const dispatch = useDashboardDispatch();\n    const isEditing = useDashboardSelector(selectIsInEditMode);\n    const isSaving = useDashboardSelector(selectIsDashboardSaving);\n    const isDirty = useDashboardSelector(selectIsDashboardDirty);\n    const onCancelClick = useCallback(() => {\n        if (isDirty) {\n            dispatch(uiActions.openCancelEditModeDialog());\n        }\n        else {\n            dispatch(cancelEditRenderMode());\n        }\n    }, [dispatch, isDirty]);\n    return {\n        isVisible: isEditing && !isSaving,\n        onCancelClick,\n    };\n}\n/**\n * @internal\n */\nexport function DefaultCancelButton({ isVisible, onCancelClick }) {\n    const intl = useIntl();\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(Button, { className: \"gd-button-secondary cancel-button s-cancel_button\", value: intl.formatMessage({ id: \"cancel\" }), onClick: onCancelClick }));\n}\n//# sourceMappingURL=DefaultCancelButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { DefaultCancelButton } from \"./DefaultCancelButton.js\";\n/**\n * @internal\n */\nexport const CancelButton = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultCancelButton, Object.assign({}, props));\n};\n//# sourceMappingURL=CancelButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const SaveButton = (props) => {\n    const { SaveButtonComponent } = useDashboardComponentsContext();\n    return React.createElement(SaveButtonComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=SaveButton.js.map","// (C) 2022-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { selectDashboardLockStatus, selectDashboardRef, selectEnableAnalyticalDashboardPermissions, selectIsDashboardDirty, selectIsDashboardLoading, selectIsDashboardPrivate, selectIsInEditMode, selectIsLayoutEmpty, selectIsNewDashboard, selectIsReadOnly, selectListedDashboardsMap, selectIsShareButtonHidden, selectCanEditDashboardPermission, selectCanEditLockedDashboardPermission, selectCanShareDashboardPermission, selectCanShareLockedDashboardPermission, selectCanManageWorkspace, selectCanManageAnalyticalDashboard, selectSupportsHierarchicalWorkspacesCapability, } from \"../../../../model/index.js\";\n/**\n * Decide whether the user has the right to edit dashboard.\n * If dashboard permissions are enabled then use them, otherwise fallback to workspace permissions\n *\n * @internal\n */\nexport const hasEditDashboardPermission = createSelector(selectEnableAnalyticalDashboardPermissions, selectCanEditDashboardPermission, selectCanManageAnalyticalDashboard, (dashboardPermissionsEnabled, canEditDashboardPermission, canManageAnalyticalDashboard) => {\n    if (dashboardPermissionsEnabled) {\n        return canEditDashboardPermission;\n    }\n    return canManageAnalyticalDashboard;\n});\n/**\n * Decide whether the user has the right to edit locked dashboard.\n * If dashboard permissions are enabled then use them, otherwise fallback to workspace permissions\n *\n * @internal\n */\nexport const hasEditLockedDashboardPermission = createSelector(selectEnableAnalyticalDashboardPermissions, selectCanEditLockedDashboardPermission, selectCanManageWorkspace, selectSupportsHierarchicalWorkspacesCapability, (dashboardPermissionsEnabled, canEditLockedDashboardPermission, canManageWorkspace, hierarchicalWorkspacesSupported) => {\n    if (dashboardPermissionsEnabled) {\n        return canEditLockedDashboardPermission;\n    }\n    // editing locked dashboard is always disabled when hierarchical workspaces are supported (Tiger)\n    return canManageWorkspace && !hierarchicalWorkspacesSupported;\n});\n/**\n * @internal\n */\nexport const selectCanEnterEditMode = createSelector(hasEditDashboardPermission, hasEditLockedDashboardPermission, selectDashboardLockStatus, selectIsReadOnly, (hasEditDashboardPermission, hasEditLockedDashboardPermission, isLocked, isReadOnly) => !isReadOnly && hasEditDashboardPermission && (!isLocked || hasEditLockedDashboardPermission));\n/**\n * @internal\n */\nexport const selectCanEnterEditModeAndIsLoaded = createSelector(selectIsDashboardLoading, selectCanEnterEditMode, (isLoading, canEnterEditMode) => !isLoading && canEnterEditMode);\n/**\n * @internal\n */\nexport const selectIsPrivateDashboard = createSelector(selectEnableAnalyticalDashboardPermissions, selectIsDashboardPrivate, selectIsNewDashboard, (arePermissionsEnabled, isPrivate, isCreatingNewDashboard) => arePermissionsEnabled && (isCreatingNewDashboard || isPrivate));\n/**\n * @internal\n */\nexport function selectCanSaveDashboard(state) {\n    return selectIsNewDashboard(state) ? !selectIsLayoutEmpty(state) : selectIsDashboardDirty(state);\n}\n/**\n * @internal\n */\nexport const selectIsCurrentDashboardVisibleInList = createSelector(selectDashboardRef, selectListedDashboardsMap, (currentDashboardRef, dashboardsList) => Boolean(currentDashboardRef && dashboardsList.has(currentDashboardRef)));\n/**\n * @internal\n */\nexport const selectIsShareButtonVisible = createSelector(selectEnableAnalyticalDashboardPermissions, selectCanShareDashboardPermission, selectCanShareLockedDashboardPermission, selectDashboardLockStatus, selectIsCurrentDashboardVisibleInList, selectIsReadOnly, selectIsInEditMode, selectIsShareButtonHidden, (dashboardPermissionsEnabled, canShareDashboardPermission, canShareLockedDashboardPermission, isLocked, isCurrentDashboardVisibleInList, isReadOnly, isInEditMode, isShareButtonHidden) => dashboardPermissionsEnabled &&\n    canShareDashboardPermission &&\n    (!isLocked || canShareLockedDashboardPermission) &&\n    isCurrentDashboardVisibleInList &&\n    !isReadOnly &&\n    !isInEditMode &&\n    !isShareButtonHidden);\n//# sourceMappingURL=selectors.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button, useMediaQuery } from \"@gooddata/sdk-ui-kit\";\nimport { selectIsDashboardLoading, selectIsInEditMode, switchToEditRenderMode, useDashboardDispatch, useDashboardSelector, } from \"../../../../../model/index.js\";\nimport { selectCanEnterEditMode } from \"../selectors.js\";\n/**\n * @internal\n */\nexport function useEditButtonProps() {\n    const minWidthForEditing = useMediaQuery(\">=xl\");\n    const canEnterEdit = useDashboardSelector(selectCanEnterEditMode);\n    const isDashboardLoading = useDashboardSelector(selectIsDashboardLoading);\n    const isEditing = useDashboardSelector(selectIsInEditMode);\n    const dispatch = useDashboardDispatch();\n    const onEditClick = useCallback(() => dispatch(switchToEditRenderMode()), [dispatch]);\n    return {\n        isVisible: minWidthForEditing && !isEditing && canEnterEdit,\n        isEnabled: !isDashboardLoading,\n        onEditClick,\n    };\n}\n/**\n * @internal\n */\nexport function DefaultEditButton({ isVisible, isEnabled, onEditClick }) {\n    const intl = useIntl();\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(Button, { className: \"gd-button-action gd-icon-pencil s-edit_button\", value: intl.formatMessage({ id: \"controlButtons.edit.value\" }), disabled: !isEnabled, onClick: onEditClick }));\n}\n//# sourceMappingURL=DefaultEditButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { DefaultEditButton } from \"./DefaultEditButton.js\";\n/**\n * @internal\n */\nexport const EditButton = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultEditButton, Object.assign({}, props));\n};\n//# sourceMappingURL=EditButton.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { selectCanCreateAnalyticalDashboard, selectEnableKPIDashboardSaveAsNew, selectIsSaveAsNewButtonHidden, selectIsExport, uiActions, useDashboardDispatch, useDashboardSelector, selectIsReadOnly, } from \"../../../../../model/index.js\";\nimport { selectCanEnterEditModeAndIsLoaded } from \"../selectors.js\";\nimport { createSelector } from \"@reduxjs/toolkit\";\n/**\n * @internal\n */\nexport const selectIsSaveAsNewButtonVisible = createSelector(selectEnableKPIDashboardSaveAsNew, selectIsSaveAsNewButtonHidden, selectCanEnterEditModeAndIsLoaded, selectCanCreateAnalyticalDashboard, selectIsExport, selectIsReadOnly, (isSaveAsNewEnabled, isSaveAsButtonHidden, isDashboardEditable, canCreateDashboard, isExport, isReadOnly) => {\n    /*\n     * The reasoning behind this condition is as follows. Do not show separate Save As button if:\n     *\n     *\n     * 1.  The feature is not enabled or\n     * 2.  If is disabled by config\n     * 3.  If the dashboard can be edited; in this case, the save as option is part of the dropdown menu;\n     *     it is somewhat more hidden\n     * 4.  dashboard is not in export mode\n     * 5.  If the user cannot create dashboards - e.g. does not have permissions to do so (is viewer for example).\n     * 6.  If the dashboard is in read-only mode.\n     */\n    return (isSaveAsNewEnabled &&\n        !isSaveAsButtonHidden &&\n        !isDashboardEditable &&\n        !isExport &&\n        canCreateDashboard &&\n        !isReadOnly);\n});\n/**\n * @internal\n */\nexport function useSaveAsNewButtonProps() {\n    const dashboardDispatch = useDashboardDispatch();\n    const isVisible = useDashboardSelector(selectIsSaveAsNewButtonVisible);\n    const onSaveAsNewClick = useCallback(() => {\n        dashboardDispatch(uiActions.openSaveAsDialog());\n    }, [dashboardDispatch]);\n    return {\n        isVisible,\n        onSaveAsNewClick,\n    };\n}\n/**\n * @internal\n */\nexport function DefaultSaveAsNewButton({ isVisible, onSaveAsNewClick }) {\n    const intl = useIntl();\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(Button, { className: \"gd-button-secondary s-save_as_new_button\", value: intl.formatMessage({ id: \"save.as.new\" }), onClick: onSaveAsNewClick }));\n}\n//# sourceMappingURL=DefaultSaveAsNewButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { DefaultSaveAsNewButton } from \"./DefaultSaveAsNewButton.js\";\n/**\n * @internal\n */\nexport const SaveAsNewButton = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultSaveAsNewButton, Object.assign({}, props));\n};\n//# sourceMappingURL=SaveAsNewButton.js.map","// (C) 2021 GoodData Corporation\n/**\n * This implementation of share button keeps it out of sight and effectively disables it.\n *\n * @alpha\n */\nexport const HiddenShareButton = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenShareButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { uiActions, useDashboardDispatch, useDashboardSelector } from \"../../../../../model/index.js\";\nimport { HiddenShareButton } from \"./HiddenShareButton.js\";\nimport { selectIsShareButtonVisible } from \"../selectors.js\";\n/**\n * @internal\n */\nexport function useShareButtonProps() {\n    const dispatch = useDashboardDispatch();\n    const onShareButtonClick = useCallback(() => dispatch(uiActions.openShareDialog()), [dispatch]);\n    const isVisible = useDashboardSelector(selectIsShareButtonVisible);\n    return {\n        isVisible,\n        onShareButtonClick,\n    };\n}\n/**\n * @alpha\n */\nexport const DefaultShareButton = ({ isVisible, onShareButtonClick, }) => {\n    const intl = useIntl();\n    if (!isVisible) {\n        return React.createElement(HiddenShareButton, null);\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { onClick: () => onShareButtonClick(), value: intl.formatMessage({ id: \"share.button.text\" }), className: \"gd-button-secondary dash-header-share-button s-header-share-button gd-button gd-icon-users\" })));\n};\n//# sourceMappingURL=DefaultShareButton.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { DefaultShareButton } from \"./DefaultShareButton.js\";\n/**\n * @internal\n */\nexport const ShareButton = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultShareButton, Object.assign({}, props));\n};\n//# sourceMappingURL=ShareButton.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport { CancelButton, EditButton, SaveAsNewButton, SaveButton, ShareButton } from \"./button/index.js\";\n/**\n * @alpha\n */\nexport const DefaultButtonBar = (props) => {\n    const { children, cancelButtonProps, saveButtonProps, editButtonProps, saveAsNewButtonProps, shareButtonProps, childContentPosition = \"left\", } = props;\n    // TODO INE allow customization of buttons via getter from props\n    return (React.createElement(\"div\", { className: \"dash-control-buttons\" },\n        childContentPosition === \"left\" && children,\n        React.createElement(CancelButton, Object.assign({}, cancelButtonProps)),\n        React.createElement(SaveButton, Object.assign({}, saveButtonProps)),\n        React.createElement(EditButton, Object.assign({}, editButtonProps)),\n        React.createElement(SaveAsNewButton, Object.assign({}, saveAsNewButtonProps)),\n        React.createElement(ShareButton, Object.assign({}, shareButtonProps)),\n        childContentPosition === \"right\" && children));\n};\n//# sourceMappingURL=DefaultButtonBar.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger, Button, ItemsWrapper, Overlay, SingleSelectListItem, } from \"@gooddata/sdk-ui-kit\";\nconst overlayAlignPoints = [{ align: \"br tr\" }];\nconst bubbleAlignPoints = [{ align: \"cl tr\" }];\n/**\n * @alpha\n */\nexport const DefaultMenuButton = (props) => {\n    const { menuItems } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const onMenuButtonClick = useCallback(() => {\n        setIsOpen((prevIsOpen) => !prevIsOpen);\n    }, []);\n    const visibleMenuItems = useMemo(() => menuItems.filter((item) => item.visible !== false), [menuItems]);\n    if (!visibleMenuItems.length) {\n        if (!menuItems.length) {\n            // only warn if the items were really empty before filtering\n            console.warn(\"DefaultMenuButton rendered without menu items. Make sure you are passing some items there.\");\n        }\n        return null;\n    }\n    const renderMenuItems = () => {\n        return (React.createElement(Overlay, { key: \"topBarMenuButton\", alignTo: \".s-header-options-button\", alignPoints: overlayAlignPoints, className: \"gd-header-menu-overlay\", closeOnMouseDrag: true, closeOnOutsideClick: true, onClose: onMenuButtonClick },\n            React.createElement(ItemsWrapper, { smallItemsSpacing: true }, visibleMenuItems.map((menuItem) => {\n                if (menuItem.type === \"separator\") {\n                    return (React.createElement(SingleSelectListItem, { key: menuItem.itemId, type: menuItem.type, className: menuItem.className }));\n                }\n                if (menuItem.type === \"header\") {\n                    return (React.createElement(SingleSelectListItem, { key: menuItem.itemId, type: menuItem.type, title: menuItem.itemName, className: menuItem.className }));\n                }\n                const selectorClassName = `gd-menu-item-${menuItem.itemId}`;\n                const body = (React.createElement(SingleSelectListItem, { className: cx(\"gd-menu-item\", menuItem.className, `s-${menuItem.itemId}`, {\n                        [selectorClassName]: menuItem.tooltip,\n                        \"is-disabled\": menuItem.disabled,\n                    }), key: menuItem.itemId, title: menuItem.itemName, onClick: menuItem.disabled\n                        ? undefined\n                        : () => {\n                            var _a;\n                            (_a = menuItem.onClick) === null || _a === void 0 ? void 0 : _a.call(menuItem);\n                            setIsOpen(false);\n                        } }));\n                if (!menuItem.tooltip) {\n                    return body;\n                }\n                return (React.createElement(BubbleHoverTrigger, { key: menuItem.itemId },\n                    body,\n                    React.createElement(Bubble, { alignTo: `.${selectorClassName}`, alignPoints: bubbleAlignPoints },\n                        React.createElement(\"span\", null, menuItem.tooltip))));\n            }))));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { onClick: onMenuButtonClick, value: \"\\u22EF\", className: \"gd-button-primary dash-header-options-button s-header-options-button gd-button\" }),\n        isOpen ? renderMenuItems() : null));\n};\n//# sourceMappingURL=DefaultMenuButton.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const ButtonBar = (props) => {\n    const { ButtonBarComponent } = useDashboardComponentsContext();\n    return React.createElement(ButtonBarComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=ButtonBar.js.map","// (C) 2022-2023 GoodData Corporation\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { isProtectedDataError } from \"@gooddata/sdk-backend-spi\";\nimport { useToastMessage } from \"@gooddata/sdk-ui-kit\";\nimport { exportDashboardToPdf, selectCanCreateAnalyticalDashboard, selectCanExportPdf, selectEnableKPIDashboardExportPDF, selectEntitlementExportPdf, selectIsInEditMode, selectIsInViewMode, selectIsNewDashboard, selectIsReadOnly, selectIsSaveAsNewButtonHidden, selectLayoutHasAnalyticalWidgets, selectMenuButtonItemsVisibility, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardScheduledEmails, useDashboardSelector, } from \"../../../model/index.js\";\nimport { downloadFile } from \"../../../_staging/fileUtils/downloadFile.js\";\nimport { messages } from \"../../../locales.js\";\nimport { selectIsSaveAsNewButtonVisible } from \"../buttonBar/button/index.js\";\n/**\n * @internal\n */\nexport function useDefaultMenuItems() {\n    const intl = useIntl();\n    const isNewDashboard = useDashboardSelector(selectIsNewDashboard);\n    const isEmptyLayout = !useDashboardSelector(selectLayoutHasAnalyticalWidgets); // we need at least one non-custom widget there\n    const { addSuccess, addError, addProgress, removeMessage } = useToastMessage();\n    const { isScheduledEmailingVisible, defaultOnScheduleEmailing } = useDashboardScheduledEmails();\n    const dispatch = useDashboardDispatch();\n    const openSaveAsDialog = useCallback(() => dispatch(uiActions.openSaveAsDialog()), [dispatch]);\n    const openDeleteDialog = useCallback(() => dispatch(uiActions.openDeleteDialog()), [dispatch]);\n    const lastExportMessageId = useRef(\"\");\n    const { run: exportDashboard } = useDashboardCommandProcessing({\n        commandCreator: exportDashboardToPdf,\n        successEvent: \"GDC.DASH/EVT.EXPORT.PDF.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onBeforeRun: () => {\n            lastExportMessageId.current = addProgress(messages.messagesExportResultStart, \n            // make sure the message stays there until removed by either success or error\n            { duration: 0 });\n        },\n        onSuccess: (e) => {\n            if (lastExportMessageId.current) {\n                removeMessage(lastExportMessageId.current);\n            }\n            addSuccess(messages.messagesExportResultSuccess);\n            downloadFile(e.payload.result);\n        },\n        onError: (err) => {\n            if (lastExportMessageId.current) {\n                removeMessage(lastExportMessageId.current);\n            }\n            if (isProtectedDataError(err)) {\n                addError(messages.messagesExportResultRestrictedError);\n            }\n            else {\n                addError(messages.messagesExportResultError);\n            }\n        },\n    });\n    const defaultOnSaveAs = useCallback(() => {\n        if (isNewDashboard) {\n            return;\n        }\n        openSaveAsDialog();\n    }, [isNewDashboard, openSaveAsDialog]);\n    const defaultOnExportToPdf = useCallback(() => {\n        if (isNewDashboard) {\n            return;\n        }\n        exportDashboard();\n    }, [exportDashboard, isNewDashboard]);\n    const isReadOnly = useDashboardSelector(selectIsReadOnly);\n    const isInViewMode = useDashboardSelector(selectIsInViewMode);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const canCreateDashboard = useDashboardSelector(selectCanCreateAnalyticalDashboard);\n    const isSaveAsNewHidden = useDashboardSelector(selectIsSaveAsNewButtonHidden);\n    const isStandaloneSaveAsNewButtonVisible = useDashboardSelector(selectIsSaveAsNewButtonVisible);\n    const canExport = useDashboardSelector(selectCanExportPdf);\n    const isKPIDashboardExportPDFEnabled = !!useDashboardSelector(selectEnableKPIDashboardExportPDF);\n    const isExportPdfEntitlementPresent = !!useDashboardSelector(selectEntitlementExportPdf);\n    const menuButtonItemsVisibility = useDashboardSelector(selectMenuButtonItemsVisibility);\n    return useMemo(() => {\n        var _a, _b, _c;\n        if (isNewDashboard) {\n            return [];\n        }\n        const isDeleteVisible = isInEditMode && ((_a = menuButtonItemsVisibility.deleteButton) !== null && _a !== void 0 ? _a : true);\n        /**\n         * Do not show save as new button in menu item when it is already shown\n         * as a standalone top bar button.\n         */\n        const isSaveAsVisible = !isStandaloneSaveAsNewButtonVisible &&\n            canCreateDashboard &&\n            !isSaveAsNewHidden &&\n            ((_b = menuButtonItemsVisibility.saveAsNewButton) !== null && _b !== void 0 ? _b : true);\n        const isSaveAsDisabled = isEmptyLayout || isNewDashboard || isReadOnly;\n        const isPdfExportVisible = isInViewMode &&\n            canExport &&\n            isKPIDashboardExportPDFEnabled &&\n            isExportPdfEntitlementPresent &&\n            ((_c = menuButtonItemsVisibility.pdfExportButton) !== null && _c !== void 0 ? _c : true);\n        return [\n            {\n                type: \"button\",\n                itemId: \"save_as_menu_item\",\n                disabled: isSaveAsDisabled,\n                visible: isSaveAsVisible,\n                itemName: intl.formatMessage({ id: \"options.menu.save.as\" }),\n                tooltip: \n                // the tooltip is only relevant to non-read only states\n                !isReadOnly && isSaveAsDisabled\n                    ? intl.formatMessage({ id: \"options.menu.save.as.tooltip\" })\n                    : undefined,\n                onClick: defaultOnSaveAs,\n            },\n            {\n                type: \"separator\",\n                itemId: \"save-as-separator\",\n                // show the separator if at least one item of the two groups is visible as well\n                visible: isSaveAsVisible && (isPdfExportVisible || isScheduledEmailingVisible || isDeleteVisible),\n            },\n            {\n                type: \"button\",\n                itemId: \"pdf-export-item\",\n                itemName: intl.formatMessage({ id: \"options.menu.export.PDF\" }),\n                onClick: defaultOnExportToPdf,\n                visible: isPdfExportVisible,\n            },\n            {\n                type: \"button\",\n                itemId: \"schedule-email-item\",\n                itemName: intl.formatMessage({ id: \"options.menu.schedule.email\" }),\n                onClick: defaultOnScheduleEmailing,\n                visible: isScheduledEmailingVisible,\n            },\n            {\n                type: \"button\",\n                itemId: \"delete_dashboard\",\n                itemName: intl.formatMessage({ id: \"options.menu.delete\" }),\n                onClick: openDeleteDialog,\n                visible: isDeleteVisible,\n                className: \"delete-button\",\n            },\n        ];\n    }, [\n        canCreateDashboard,\n        canExport,\n        defaultOnExportToPdf,\n        defaultOnSaveAs,\n        defaultOnScheduleEmailing,\n        intl,\n        isEmptyLayout,\n        isExportPdfEntitlementPresent,\n        isInEditMode,\n        isInViewMode,\n        isKPIDashboardExportPDFEnabled,\n        isNewDashboard,\n        isReadOnly,\n        isSaveAsNewHidden,\n        isScheduledEmailingVisible,\n        isStandaloneSaveAsNewButtonVisible,\n        menuButtonItemsVisibility.deleteButton,\n        menuButtonItemsVisibility.pdfExportButton,\n        menuButtonItemsVisibility.saveAsNewButton,\n        openDeleteDialog,\n    ]);\n}\n//# sourceMappingURL=useDefaultMenuItems.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const MenuButton = (props) => {\n    const { MenuButtonComponent } = useDashboardComponentsContext();\n    return React.createElement(MenuButtonComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=MenuButton.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const Title = (props) => {\n    const { TitleComponent } = useDashboardComponentsContext();\n    return React.createElement(TitleComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=Title.js.map","/**\n * This implementation of top bar keeps it out of sight.\n *\n * @alpha\n */\nexport const HiddenTopBar = (_props) => {\n    return null;\n};\n//# sourceMappingURL=HiddenTopBar.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { BubbleHoverTrigger, Bubble, Icon } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { gdColorStateBlank } from \"../../../constants/colors.js\";\n/**\n * @alpha\n */\nexport const LockedStatusIndicator = (props) => {\n    var _a, _b, _c;\n    const theme = useTheme();\n    if (!props.isLocked) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"s-locked-status gd-locked-status\" },\n        React.createElement(BubbleHoverTrigger, null,\n            React.createElement(Icon.Lock, { className: \"gd-icon-locked\", width: 25, height: 24, color: (_c = (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c6) !== null && _c !== void 0 ? _c : gdColorStateBlank }),\n            React.createElement(Bubble, { alignPoints: [{ align: \"bc tl\" }], alignTo: `.gd-icon-locked` },\n                React.createElement(FormattedMessage, { id: \"header.lockStatus.tooltip\", values: { b: (chunks) => React.createElement(\"b\", null, chunks) } })))));\n};\n//# sourceMappingURL=LockedStatusIndicator.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { selectCanManageAnalyticalDashboard, selectSettings, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { LockedStatusIndicator } from \"./LockedStatusIndicator.js\";\n/**\n * @alpha\n */\nexport const DefaultLockedStatus = (props) => {\n    const settings = useDashboardSelector(selectSettings);\n    const canManageAnalyticalDashboard = useDashboardSelector(selectCanManageAnalyticalDashboard);\n    if (!settings.enableNewAnalyticalDashboardsNavigation || !canManageAnalyticalDashboard) {\n        return null;\n    }\n    return React.createElement(LockedStatusIndicator, Object.assign({}, props));\n};\n//# sourceMappingURL=DefaultLockedStatus.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { BubbleHoverTrigger, Bubble } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\n/**\n * @alpha\n */\nexport const ShareStatusIndicator = (props) => {\n    const { shareStatus, isUnderStrictControl } = props;\n    if (shareStatus !== \"private\") {\n        return null;\n    }\n    const tooltip = isUnderStrictControl ? (React.createElement(FormattedMessage, { id: \"header.shareStatus.private.strict.tooltip\" })) : (React.createElement(FormattedMessage, { id: \"header.shareStatus.private.not.strict.tooltip\" }));\n    return (React.createElement(\"div\", { className: \"s-share-status gd-share-status\" },\n        React.createElement(BubbleHoverTrigger, null,\n            React.createElement(\"div\", { className: \"gd-share-indicator\" },\n                React.createElement(\"i\", { className: \"gd-share-icon gd-icon-invisible\" }),\n                React.createElement(FormattedMessage, { id: \"header.shareStatus.private.text\" })),\n            React.createElement(Bubble, { alignPoints: [{ align: \"bc tl\" }], alignTo: `.gd-share-icon` }, tooltip))));\n};\n//# sourceMappingURL=ShareStatusIndicator.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { selectCanManageAnalyticalDashboard, selectEnableAnalyticalDashboardPermissions, selectSupportsAccessControlCapability, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { ShareStatusIndicator } from \"./ShareStatusIndicator.js\";\n/**\n * @alpha\n */\nexport const DefaultShareStatus = (props) => {\n    const arePermissionsEnabled = useDashboardSelector(selectEnableAnalyticalDashboardPermissions);\n    const supportsAccessControl = useDashboardSelector(selectSupportsAccessControlCapability);\n    const canManageAnalyticalDashboard = useDashboardSelector(selectCanManageAnalyticalDashboard);\n    if (!arePermissionsEnabled || !supportsAccessControl || !canManageAnalyticalDashboard) {\n        return null;\n    }\n    return React.createElement(ShareStatusIndicator, Object.assign({}, props));\n};\n//# sourceMappingURL=DefaultShareStatus.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger, Button } from \"@gooddata/sdk-ui-kit\";\nimport noop from \"lodash/noop.js\";\nimport { dispatchAndWaitFor, saveDashboard, selectEnableAnalyticalDashboardPermissions, selectIsDashboardDirty, selectIsDashboardSaving, selectIsInEditMode, useDashboardDispatch, useDashboardSelector, selectDashboardTitle, selectLayoutHasAnalyticalWidgets, } from \"../../../../../model/index.js\";\nimport { messages } from \"../../../../../locales.js\";\nimport { selectCanSaveDashboard, selectIsPrivateDashboard } from \"../selectors.js\";\n/**\n * @internal\n */\nexport function useSaveButtonProps() {\n    const dispatch = useDashboardDispatch();\n    const title = useDashboardSelector(selectDashboardTitle);\n    const intl = useIntl();\n    const emptyTitle = intl.formatMessage({ id: \"untitled\" });\n    // In some cases, when you click the save button (for example immediately after you insert an insight)\n    // and the dashboard is still processing some related requests to this insight, it can take few seconds,\n    // before the CMD.SAVE starts to process (as dashboard can process only 1 command at a time).\n    // We want to show the loading indicator immediately and avoid any double-save race conditions,\n    // so add a local state for this case.\n    const [optimisticIsSaving, setOptimisticIsSaving] = useState(false);\n    const onSaveClick = useCallback(() => {\n        setOptimisticIsSaving(true);\n        dispatchAndWaitFor(dispatch, \n        // the || is intentional, we want to replace empty string as well\n        saveDashboard(title || emptyTitle))\n            .then(() => {\n            setOptimisticIsSaving(false);\n        })\n            .catch(() => {\n            setOptimisticIsSaving(false);\n        });\n    }, [dispatch, emptyTitle, title]);\n    const isEditing = useDashboardSelector(selectIsInEditMode);\n    const isSavingDashboard = useDashboardSelector(selectIsDashboardSaving);\n    const arePermissionsEnabled = useDashboardSelector(selectEnableAnalyticalDashboardPermissions);\n    const isPrivateDashboard = useDashboardSelector(selectIsPrivateDashboard);\n    const isEmptyDashboard = !useDashboardSelector(selectLayoutHasAnalyticalWidgets); // we need at least one non-custom widget there\n    const canSaveDashboard = useDashboardSelector(selectCanSaveDashboard);\n    const isDashboardDirty = useDashboardSelector(selectIsDashboardDirty);\n    const isSaving = isSavingDashboard || optimisticIsSaving;\n    const isVisible = isEditing;\n    const isEnabled = isDashboardDirty && !isEmptyDashboard && canSaveDashboard;\n    const buttonValue = arePermissionsEnabled\n        ? messages.controlButtonsSaveValue\n        : messages.controlButtonsSaveAndPublishValue;\n    let buttonTitle = messages.controlButtonsSaveAndPublishTitle;\n    if (isPrivateDashboard) {\n        buttonTitle = messages.controlButtonsSaveAsPrivateTitle;\n    }\n    if (!canSaveDashboard) {\n        buttonTitle = messages.controlButtonsSaveAndPublishNoChanges;\n    }\n    if (isEmptyDashboard) {\n        buttonTitle = messages.controlButtonsSaveAndPublishEmpty;\n    }\n    return {\n        isVisible,\n        isEnabled,\n        isSaving,\n        buttonValue,\n        buttonTitle,\n        onSaveClick,\n    };\n}\n/**\n * @internal\n */\nexport function DefaultSaveButton({ isVisible, isEnabled, isSaving, buttonTitle, buttonValue, onSaveClick, }) {\n    const intl = useIntl();\n    if (!isVisible) {\n        return null;\n    }\n    if (isSaving) {\n        // While save is in progress, the save button needs to be disabled and show 'Saving...'\n        return (React.createElement(Button, { className: \"gd-button-action s-saving_button\", value: intl.formatMessage({ id: \"controlButtons.saving.value\" }), disabled: true, onClick: noop }));\n    }\n    return (React.createElement(BubbleHoverTrigger, null,\n        React.createElement(Button, { className: \"gd-button-action save-publish-button s-save_button\", value: intl.formatMessage(buttonValue), onClick: onSaveClick, disabled: !isEnabled }),\n        React.createElement(Bubble, { alignPoints: [{ align: \"bc tr\" }], arrowOffsets: { \"bc tr\": [10, 20] }, alignTo: `.save-publish-button` },\n            React.createElement(FormattedMessage, Object.assign({}, buttonTitle)))));\n}\n//# sourceMappingURL=DefaultSaveButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { renameDashboard, selectDashboardShareInfo, selectDashboardTitle, selectIsExport, selectIsReadOnly, selectPersistedDashboard, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { ButtonBar, DefaultButtonBar } from \"../buttonBar/index.js\";\nimport { DefaultMenuButton, MenuButton, useDefaultMenuItems } from \"../menuButton/index.js\";\nimport { Title } from \"../title/index.js\";\nimport { HiddenTopBar } from \"./HiddenTopBar.js\";\nimport { DefaultLockedStatus, DefaultShareStatus } from \"../shareIndicators/index.js\";\nimport { useCancelButtonProps, useEditButtonProps, useSaveAsNewButtonProps, useSaveButtonProps, useShareButtonProps, } from \"../buttonBar/button/index.js\";\n/**\n * @alpha\n */\nexport const useTopBarProps = () => {\n    const dispatch = useDashboardDispatch();\n    const title = useDashboardSelector(selectDashboardTitle);\n    const isReadOnly = useDashboardSelector(selectIsReadOnly);\n    const shareInfo = useDashboardSelector(selectDashboardShareInfo);\n    const persistedDashboard = useDashboardSelector(selectPersistedDashboard);\n    const defaultMenuItems = useDefaultMenuItems();\n    const shareButtonProps = useShareButtonProps();\n    const editButtonProps = useEditButtonProps();\n    const cancelButtonProps = useCancelButtonProps();\n    const saveButtonProps = useSaveButtonProps();\n    const saveAsNewButtonProps = useSaveAsNewButtonProps();\n    const onTitleChanged = useCallback((title) => {\n        dispatch(renameDashboard(title));\n    }, [dispatch]);\n    return {\n        menuButtonProps: { menuItems: defaultMenuItems, DefaultMenuButton: DefaultMenuButton },\n        titleProps: {\n            title,\n            onTitleChanged: isReadOnly ? undefined : onTitleChanged,\n        },\n        buttonBarProps: {\n            shareButtonProps,\n            editButtonProps,\n            cancelButtonProps,\n            saveButtonProps,\n            saveAsNewButtonProps,\n            DefaultButtonBar: DefaultButtonBar,\n        },\n        shareStatusProps: {\n            shareStatus: shareInfo.shareStatus,\n            // new dashboards are considered under strict control as well for the share status purposes\n            isUnderStrictControl: !persistedDashboard || !!persistedDashboard.isUnderStrictControl,\n        },\n        lockedStatusProps: {\n            isLocked: !!shareInfo.isLocked,\n        },\n        DefaultTopBar,\n    };\n};\nconst TopBarCore = (props) => {\n    const { menuButtonProps, titleProps, buttonBarProps, shareStatusProps, lockedStatusProps } = props;\n    return (React.createElement(\"div\", { className: \"dash-header s-top-bar\" },\n        React.createElement(\"div\", { className: \"dash-header-inner\" },\n            React.createElement(DefaultLockedStatus, Object.assign({}, lockedStatusProps)),\n            React.createElement(Title, Object.assign({}, titleProps)),\n            React.createElement(DefaultShareStatus, Object.assign({}, shareStatusProps)),\n            React.createElement(ButtonBar, Object.assign({}, buttonBarProps))),\n        React.createElement(MenuButton, Object.assign({}, menuButtonProps))));\n};\n/**\n * @alpha\n */\nexport function DefaultTopBar(props) {\n    const isExport = useDashboardSelector(selectIsExport);\n    if (isExport) {\n        return React.createElement(HiddenTopBar, Object.assign({}, props));\n    }\n    return React.createElement(TopBarCore, Object.assign({}, props));\n}\n//# sourceMappingURL=DefaultTopBar.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\n/**\n * @internal\n */\nexport const TitleWrapper = ({ children }) => {\n    return React.createElement(\"div\", { className: \"dash-title-wrapper\" }, children);\n};\n//# sourceMappingURL=TitleWrapper.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { TitleWrapper } from \"./TitleWrapper.js\";\n/**\n * @alpha\n */\nexport const DefaultTitle = (props) => {\n    const { title } = props;\n    return (React.createElement(TitleWrapper, null,\n        React.createElement(\"div\", { className: \"s-gd-dashboard-title s-dash-title dash-title static\" }, title)));\n};\n//# sourceMappingURL=DefaultTitle.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { EditableLabel } from \"@gooddata/sdk-ui-kit\";\nimport { defineMessage, useIntl } from \"react-intl\";\nimport { TitleWrapper } from \"./TitleWrapper.js\";\nimport { DASHBOARD_TITLE_MAX_LENGTH } from \"../../constants/index.js\";\nimport { selectDashboardTitle, useDashboardSelector } from \"../../../model/index.js\";\nconst placeholderMessage = defineMessage({ id: \"untitled\" });\n/**\n * @alpha\n */\nexport const EditableTitle = (props) => {\n    const { title, onTitleChanged } = props;\n    const intl = useIntl();\n    const dashboardTitle = useDashboardSelector(selectDashboardTitle);\n    return (React.createElement(TitleWrapper, null,\n        React.createElement(EditableLabel, { value: title, onSubmit: onTitleChanged, maxRows: 1, maxLength: DASHBOARD_TITLE_MAX_LENGTH, className: \"s-gd-dashboard-title s-dash-title dash-title editable\", isEditableLabelWidthBasedOnText: true, autofocus: !dashboardTitle, placeholder: intl.formatMessage(placeholderMessage) }, title)));\n};\n//# sourceMappingURL=EditableTitle.js.map","// (C) 2022 GoodData Corporation\nimport { DefaultTitle } from \"./DefaultTitle.js\";\nimport { EditableTitle } from \"./EditableTitle.js\";\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\n/**\n * @internal\n */\nexport const RenderModeAwareTitle = renderModeAware({\n    view: DefaultTitle,\n    edit: EditableTitle,\n});\n//# sourceMappingURL=RenderModeAwareTitle.js.map","/**\n * This implementation of toolbar keeps it out of sight.\n *\n * @internal\n */\nexport const HiddenToolbar = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenToolbar.js.map","// (C) 2020-2022 GoodData Corporation\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Default modifier applied to any theme passed to Dashboard component\n * @param theme - theme to modify\n * @beta\n */\nexport const defaultDashboardThemeModifier = (theme) => {\n    var _a, _b, _c, _d, _e;\n    const modifiedTheme = cloneDeep(theme);\n    if ((_c = (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.dashboards) === null || _a === void 0 ? void 0 : _a.content) === null || _b === void 0 ? void 0 : _b.kpiWidget) === null || _c === void 0 ? void 0 : _c.kpi) {\n        // duplicate dashboard specific kpi customization to the generic kpi key\n        modifiedTheme.kpi = Object.assign({}, theme.dashboards.content.kpiWidget.kpi);\n    }\n    const additionalCssProperties = [];\n    /**\n     * The second copy of --gd-chart/table-backgroundColor is necessary for rewriting in\n     * the local scope. Works in pair with 'dash-item-content' class from dashboard.scss.\n     */\n    if ((_d = theme === null || theme === void 0 ? void 0 : theme.chart) === null || _d === void 0 ? void 0 : _d.backgroundColor) {\n        additionalCssProperties.push(`--gd-dashboards-content-widget-chart-backgroundColor: ${theme.chart.backgroundColor};`);\n    }\n    if ((_e = theme === null || theme === void 0 ? void 0 : theme.table) === null || _e === void 0 ? void 0 : _e.backgroundColor) {\n        additionalCssProperties.push(`--gd-dashboards-content-widget-table-backgroundColor: ${theme.table.backgroundColor};`);\n    }\n    if (!isEmpty(additionalCssProperties)) {\n        const styleTag = document.createElement(\"style\");\n        styleTag.appendChild(document.createTextNode(`:root{${additionalCssProperties.join(\"\")}}`));\n        document.head.appendChild(styleTag);\n    }\n    return modifiedTheme;\n};\n//# sourceMappingURL=defaultDashboardThemeModifier.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n/**\n * @internal\n */\nexport const AttributeDatasetInfo = ({ title, defaultAttributeFilterTitle, attributeDataSet, }) => {\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-tooltip-content s-attribute-filter-tooltip-content\" },\n        React.createElement(\"h3\", { className: \"s-attribute-filter-tooltip-header\" }, title !== null && title !== void 0 ? title : defaultAttributeFilterTitle),\n        React.createElement(\"h4\", null,\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.details.type\" })),\n        React.createElement(\"p\", { className: \"s-attribute-filter-tooltip-item-name\" }, defaultAttributeFilterTitle),\n        React.createElement(\"h4\", null,\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.details.dataset\" })),\n        React.createElement(\"p\", { className: \"s-attribute-filter-tooltip-item-dataset\" }, attributeDataSet.title)));\n};\n//# sourceMappingURL=AttributeDatasetInfo.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nconst bubbleAlignPoints = [{ align: \"cr cl\", offset: { x: 0, y: 50 } }];\n/**\n * Tooltip details for the AttributeFilterDropdownButton.\n *\n * @remarks\n * It displays AttributeFilterDropdownButton tooltip details in the GoodData look and feel.\n * It displays the default title, custom title and data set title of the related attribute filter.\n *\n * @beta\n */\nexport const AttributeFilterButtonToolip = ({ children }) => {\n    return (React.createElement(\"span\", { className: \"gd-list-item-tooltip\" },\n        React.createElement(BubbleHoverTrigger, null,\n            React.createElement(\"span\", { className: \"gd-icon-circle-question gd-list-item-tooltip-icon s-attribute-filter-tooltip-icon\" }),\n            React.createElement(Bubble, { className: \"gd-attribute-filter-details s-attribute-filter-details-bubble\", alignPoints: bubbleAlignPoints, arrowStyle: { display: \"none\" } }, children))));\n};\n//# sourceMappingURL=AttributeFilterButtonTooltip.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { stringUtils } from \"@gooddata/util\";\nimport cx from \"classnames\";\nimport { ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { AttributeFilterButtonToolip } from \"./AttributeFilterButtonTooltip.js\";\nexport const ALIGN_POINT = [\n    { align: \"tc bc\", offset: { x: 0, y: -2 } },\n    { align: \"cc tc\", offset: { x: 0, y: 10 } },\n    { align: \"bl tr\", offset: { x: -2, y: -8 } },\n];\n/**\n * Dropdown button for the AttributeFilter.\n *\n * @remarks\n * This component implements the {@link IAttributeFilterDropdownButtonProps} interface.\n * It displays AttributeFilterDropdownButton in the GoodData look and feel.\n * It displays the name of the related attribute filter as a title and the state of the selection as a subtitle.\n * It displays loading and filtering statuses.\n * It supports setting a left icon and dragging icons.\n *\n * @beta\n */\nexport const AttributeFilterDropdownButton = (props) => {\n    const { isOpen, title, selectedItemsCount, showSelectionCount = true, subtitle, isFiltering, isLoading, isLoaded, isError, isDraggable, icon, TooltipContentComponent, onClick, } = props;\n    const intl = useIntl();\n    const subtitleSelectedItemsRef = useRef(null);\n    const [displayItemCount, setDisplayItemCount] = useState(false);\n    const filterIcon = isError ? React.createElement(\"i\", { className: \"gd-icon gd-icon-circle-cross\" }) : icon;\n    useEffect(() => {\n        const element = subtitleSelectedItemsRef.current;\n        if (!element) {\n            return;\n        }\n        const roundedWidth = Math.ceil(element.getBoundingClientRect().width);\n        const displayItemCount = roundedWidth < element.scrollWidth;\n        setDisplayItemCount(displayItemCount);\n    }, [subtitle]);\n    let buttonTitle = title;\n    let buttonSubtitle = subtitle;\n    if (isLoading) {\n        buttonTitle = intl.formatMessage({ id: \"loading\" });\n        buttonSubtitle = intl.formatMessage({ id: \"loading\" });\n    }\n    else if (isFiltering) {\n        buttonSubtitle = intl.formatMessage({ id: \"filtering\" });\n    }\n    return (React.createElement(\"div\", { className: cx(\"gd-attribute-filter-dropdown-button__next\", \"s-attribute-filter\", `s-${stringUtils.simplifyText(title)}`, {\n            \"gd-message\": isError,\n            \"gd-is-filtering\": isFiltering,\n            \"gd-is-active\": isOpen,\n            \"gd-is-loaded\": isLoaded,\n            \"gd-is-draggable\": isDraggable,\n        }), onClick: onClick },\n        filterIcon ? (React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-button-icon__next\" }, filterIcon)) : null,\n        React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-button-content__next\" },\n            React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown_button-title-content__next\" },\n                React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-button-title__next\" },\n                    React.createElement(ShortenedText, { tooltipAlignPoints: ALIGN_POINT, className: \"s-attribute-filter-button-title\" }, `${buttonTitle}${!isLoading && !isFiltering ? \":\" : \"\"}`)),\n                TooltipContentComponent && isLoaded ? (React.createElement(AttributeFilterButtonToolip, null,\n                    React.createElement(TooltipContentComponent, null))) : null),\n            React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-button-subtitle__next\" },\n                React.createElement(\"span\", { className: \"gd-attribute-filter-dropdown-button-selected-items__next s-attribute-filter-button-subtitle\", ref: subtitleSelectedItemsRef }, buttonSubtitle),\n                showSelectionCount && displayItemCount ? (React.createElement(\"span\", { className: \"gd-attribute-filter-dropdown-button-selected-items-count__next\" }, `(${selectedItemsCount})`)) : null))));\n};\n//# sourceMappingURL=AttributeFilterDropdownButton.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport ReactContentLoader from \"react-content-loader\";\nimport { defaultImport } from \"default-import\";\nimport { LoadingMask } from \"../LoadingMask/index.js\";\nimport { List } from \"./List.js\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst ContentLoader = defaultImport(ReactContentLoader);\n/**\n * @internal\n */\nexport function AsyncList(props) {\n    const { className, width, height, items, itemHeight, renderItem, isLoading, nextPageItemPlaceholdersCount = 0, isLoadingNextPage, onLoadNextPage, } = props;\n    const itemRenderer = useCallback((renderItemProps) => {\n        if (renderItemProps.rowIndex + 1 > items.length) {\n            return React.createElement(LoadingPlaceholder, null);\n        }\n        return renderItem(renderItemProps);\n    }, [items, renderItem]);\n    const handleScrollEnd = useCallback((_, endRowIndex) => {\n        if (endRowIndex > items.length && !isLoadingNextPage) {\n            onLoadNextPage === null || onLoadNextPage === void 0 ? void 0 : onLoadNextPage();\n        }\n    }, [items, isLoadingNextPage, onLoadNextPage]);\n    return isLoading ? (React.createElement(LoadingMask, { height: props.height })) : (React.createElement(List, { className: cx(\"gd-async-list\", className ? className : \"\"), width: width, height: height, items: items, itemHeight: itemHeight, itemsCount: items.length + nextPageItemPlaceholdersCount, renderItem: itemRenderer, onScrollEnd: handleScrollEnd }));\n}\nfunction LoadingPlaceholder() {\n    return (React.createElement(\"div\", { className: \"gd-list-item gd-list-item-not-loaded\" },\n        React.createElement(ContentLoader, { viewBox: \"0 0 250 28\" },\n            React.createElement(\"rect\", { x: \"0\", y: \"7\", rx: \"3\", ry: \"3\", width: \"13\", height: \"13\" }),\n            React.createElement(\"rect\", { x: \"22\", y: \"7\", rx: \"3\", ry: \"3\", width: \"250\", height: \"13\" }))));\n}\n//# sourceMappingURL=AsyncList.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { Input } from \"../../Form/index.js\";\n/**\n * @internal\n */\nexport function InvertableSelectSearchBar(props) {\n    const { className, isSmall, searchString, onSearch, searchPlaceholder } = props;\n    const intl = useIntl();\n    return (React.createElement(Input, { className: cx([\n            \"gd-invertable-select-search-input gd-list-searchfield gd-flex-item-mobile\",\n            className,\n        ]), value: searchString, onChange: onSearch, placeholder: searchPlaceholder !== null && searchPlaceholder !== void 0 ? searchPlaceholder : intl.formatMessage({ id: \"gs.list.search.placeholder\" }), autofocus: true, clearOnEsc: true, isSearch: true, isSmall: isSmall }));\n}\n//# sourceMappingURL=InvertableSelectSearchBar.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { useIntl } from \"react-intl\";\n/**\n * @internal\n */\nexport function InvertableSelectAllCheckbox(props) {\n    const { isVisible, checked, onToggle, isFiltered, totalItemsCount, isPartialSelection } = props;\n    const intl = useIntl();\n    const handleToggle = useCallback((_e) => {\n        onToggle();\n    }, [onToggle]);\n    const checkboxClasses = cx(\"input-checkbox\", \"gd-checkbox-selection\", {\n        \"checkbox-indefinite\": isPartialSelection,\n    });\n    const labelClasses = cx(\"input-checkbox-label\", \"s-select-all-checkbox\");\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"gd-invertable-select-all-checkbox\" },\n        React.createElement(\"label\", { className: labelClasses },\n            React.createElement(\"input\", { readOnly: true, type: \"checkbox\", className: checkboxClasses, checked: checked, onChange: handleToggle }),\n            React.createElement(\"span\", { className: \"input-label-text\" },\n                React.createElement(\"span\", { className: cx(\"gd-list-all-checkbox\", { \"gd-list-all-checkbox-checked\": checked }) },\n                    intl.formatMessage({ id: \"gs.list.all\" }),\n                    isFiltered\n                        ? ` ${intl.formatMessage({\n                            id: \"gs.list.searchResults\",\n                        })}`\n                        : null),\n                React.createElement(\"span\", { className: \"gd-list-actions-selection-size s-list-search-selection-size\" }, `(${totalItemsCount})`)))));\n}\n//# sourceMappingURL=InvertableSelectAllCheckbox.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Message } from \"../../Messages/index.js\";\n/**\n * @internal\n */\nexport function InvertableSelectLimitWarning(props) {\n    const { limit, selectedItemsCount } = props;\n    return (React.createElement(Message, { type: \"warning\", className: \"gd-invertable-list-limitExceeded\" },\n        selectedItemsCount === limit && (React.createElement(FormattedMessage, { id: \"gs.list.limitReached\", values: { limit } })),\n        selectedItemsCount > limit && (React.createElement(FormattedMessage, { id: \"gs.list.cannotSelectMoreValues\", values: { limit } }))));\n}\n//# sourceMappingURL=InvertableSelectLimitWarning.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport { InvertableSelectLimitWarning } from \"./InvertableSelectLimitWarning.js\";\n/**\n * @internal\n */\nexport function InvertableSelectStatusBar(props) {\n    const { className, selectedItems, getItemTitle, isInverted, selectedItemsLimit } = props;\n    const intl = useIntl();\n    const isSelectionEmpty = selectedItems.length === 0;\n    const isAll = isSelectionEmpty && isInverted;\n    const isNone = isSelectionEmpty && !isInverted;\n    const isAllExcept = !isSelectionEmpty && isInverted;\n    const selectionString = useMemo(() => {\n        return selectedItems.map((selectedItem) => getItemTitle(selectedItem)).join(\", \");\n    }, [selectedItems, getItemTitle]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: cx([className, \"gd-invertable-select-selection-status\", \"s-list-status-bar\"]) },\n            React.createElement(\"span\", null,\n                \"\\u00A0\",\n                intl.formatMessage({ id: \"gs.list.is\" }),\n                \"\\u00A0\"),\n            isAll ? React.createElement(\"b\", null, intl.formatMessage({ id: \"gs.list.all\" })) : null,\n            isNone ? React.createElement(\"b\", null, intl.formatMessage({ id: \"gs.filterLabel.none\" })) : null,\n            isAllExcept ? (React.createElement(\"span\", null,\n                React.createElement(\"b\", null, intl.formatMessage({ id: \"gs.list.all\" })),\n                \"\\u00A0\",\n                intl.formatMessage({ id: \"gs.list.except\" }),\n                \"\\u00A0\")) : null,\n            !isAll && !isSelectionEmpty ? (React.createElement(React.Fragment, null,\n                React.createElement(\"span\", { className: \"gd-shortened-text gd-selection-list s-dropdown-attribute-selection-list\", title: selectionString }, selectionString),\n                `\\xa0(${selectedItems.length})`)) : null),\n        selectedItems.length >= selectedItemsLimit ? (React.createElement(InvertableSelectLimitWarning, { limit: selectedItemsLimit, selectedItemsCount: selectedItems.length })) : null));\n}\n//# sourceMappingURL=InvertableSelectStatusBar.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n/**\n * @internal\n */\nexport function InvertableSelectNoResultsMatch() {\n    return (React.createElement(\"div\", { className: \"gd-list-noResults\" },\n        React.createElement(FormattedMessage, { id: \"gs.list.noResultsMatch\" })));\n}\n//# sourceMappingURL=InvertableSelectNoResultsMatch.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\n/**\n * @internal\n */\nexport function InvertableSelectItem(props) {\n    const { title, onClick, onMouseOver, onMouseOut, isSelected, onOnly } = props;\n    const handleOnly = useCallback((e) => {\n        e.stopPropagation();\n        onOnly === null || onOnly === void 0 ? void 0 : onOnly();\n    }, [onOnly]);\n    return (React.createElement(\"div\", { className: cx({\n            \"gd-list-item\": true,\n            [`s-${stringUtils.simplifyText(title)}`]: true,\n            \"has-only-visible\": true,\n            \"is-selected\": isSelected,\n        }), onClick: onClick, onMouseOver: onMouseOver, onMouseOut: onMouseOut },\n        React.createElement(\"label\", { className: \"input-checkbox-label\" },\n            React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox\", readOnly: true, checked: isSelected }),\n            React.createElement(\"span\", { className: \"input-label-text\" }, title)),\n        React.createElement(\"span\", { className: \"gd-list-item-only\", onClick: handleOnly },\n            React.createElement(FormattedMessage, { id: \"gs.list.only\" }))));\n}\n//# sourceMappingURL=InvertableSelectItem.js.map","// (C) 2007-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport DefaultMeasure from \"react-measure\";\nimport { LoadingMask } from \"../../LoadingMask/index.js\";\nimport { AsyncList } from \"../AsyncList.js\";\nimport { useInvertableSelect } from \"./useInvertableSelect.js\";\nimport { InvertableSelectSearchBar } from \"./InvertableSelectSearchBar.js\";\nimport { InvertableSelectAllCheckbox } from \"./InvertableSelectAllCheckbox.js\";\nimport { InvertableSelectStatusBar } from \"./InvertableSelectStatusBar.js\";\nimport { InvertableSelectNoResultsMatch } from \"./InvertableSelectNoResultsMatch.js\";\nimport { ErrorComponent } from \"@gooddata/sdk-ui\";\nimport { InvertableSelectItem } from \"./InvertableSelectItem.js\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Measure = defaultImport(DefaultMeasure);\n/**\n * @internal\n */\nexport function InvertableSelect(props) {\n    const { className, width, height, adaptiveWidth, adaptiveHeight, isSingleSelect = false, items, totalItemsCount, itemHeight, getItemTitle, isInverted = true, selectedItems, selectedItemsLimit = Infinity, onSearch, searchString, searchPlaceholder, error, isLoading, nextPageItemPlaceholdersCount, isLoadingNextPage, onLoadNextPage, renderError = defaultError, renderLoading = defaultLoading, renderSearchBar = defaultSearchBar, renderNoData = defaultNoData, renderItem = defaultItem, renderStatusBar = defaultStatusBar, renderActions = defaultActions, } = props;\n    const { onSelectAllCheckboxChange, onSelectAllCheckboxToggle, selectOnly, selectItems, deselectItems, selectionState, getIsItemSelected, } = useInvertableSelect(props);\n    const itemRenderer = useCallback(({ item }) => {\n        return renderItem({\n            onSelect: () => {\n                selectItems([item]);\n            },\n            onDeselect: () => {\n                deselectItems([item]);\n            },\n            onSelectOnly: () => selectOnly(item),\n            item,\n            isSelected: getIsItemSelected(item),\n        });\n    }, [renderItem, getIsItemSelected, selectItems, deselectItems, selectOnly]);\n    return (React.createElement(\"div\", { className: \"gd-invertable-select\" },\n        React.createElement(\"div\", { className: \"gd-invertable-select-search-bar\" }, renderSearchBar({ onSearch, searchPlaceholder, searchString })),\n        isLoading ? (React.createElement(\"div\", { className: \"gd-invertable-select-loading\" }, renderLoading({ height }))) : error ? (React.createElement(\"div\", { className: \"gd-invertable-select-error\" }, renderError({ height, error }))) : (React.createElement(React.Fragment, null,\n            renderActions({\n                isVisible: items.length > 0,\n                checked: selectionState !== \"none\",\n                onToggle: onSelectAllCheckboxToggle,\n                onChange: onSelectAllCheckboxChange,\n                isFiltered: (searchString === null || searchString === void 0 ? void 0 : searchString.length) > 0,\n                totalItemsCount,\n                isPartialSelection: selectionState === \"partial\",\n            }),\n            items.length > 0 && (React.createElement(Measure, { client: true }, ({ measureRef, contentRect }) => {\n                return (React.createElement(\"div\", { className: \"gd-invertable-select-list\", ref: measureRef },\n                    React.createElement(AsyncList, { className: cx(className, {\n                            \"is-multiselect\": !isSingleSelect,\n                        }), width: adaptiveWidth ? contentRect === null || contentRect === void 0 ? void 0 : contentRect.client.width : width, height: adaptiveHeight\n                            ? contentRect === null || contentRect === void 0 ? void 0 : contentRect.client.height\n                            : Math.min(items.length, 10) * itemHeight, items: items, itemHeight: itemHeight, renderItem: itemRenderer, nextPageItemPlaceholdersCount: nextPageItemPlaceholdersCount, isLoadingNextPage: isLoadingNextPage, onLoadNextPage: onLoadNextPage })));\n            })),\n            items.length === 0 && (React.createElement(\"div\", { className: \"gd-invertable-select-no-data\" }, renderNoData === null || renderNoData === void 0 ? void 0 : renderNoData({ height }))))),\n        React.createElement(\"div\", { className: \"gd-invertable-select-status-bar\" }, renderStatusBar({ getItemTitle, isInverted, selectedItems, selectedItemsLimit }))));\n}\nfunction defaultError(props) {\n    const { error } = props;\n    return React.createElement(ErrorComponent, { message: error === null || error === void 0 ? void 0 : error.message });\n}\nfunction defaultLoading(props) {\n    const { height } = props;\n    return React.createElement(LoadingMask, { height: height });\n}\nfunction defaultSearchBar(props) {\n    const { onSearch, searchPlaceholder, searchString } = props;\n    return (React.createElement(InvertableSelectSearchBar, { searchPlaceholder: searchPlaceholder, onSearch: onSearch, searchString: searchString }));\n}\nfunction defaultNoData() {\n    return React.createElement(InvertableSelectNoResultsMatch, null);\n}\nfunction defaultItem(props) {\n    return React.createElement(InvertableSelectItem, Object.assign({}, props));\n}\nfunction defaultStatusBar(props) {\n    const { isInverted, selectedItems, getItemTitle, selectedItemsLimit } = props;\n    return (React.createElement(InvertableSelectStatusBar, { isInverted: isInverted, selectedItems: selectedItems, getItemTitle: getItemTitle, selectedItemsLimit: selectedItemsLimit }));\n}\nfunction defaultActions(props) {\n    const { checked, onToggle, onChange, isFiltered, totalItemsCount, isPartialSelection, isVisible } = props;\n    return (React.createElement(InvertableSelectAllCheckbox, { isVisible: isVisible, checked: checked, onChange: onChange, onToggle: onToggle, isFiltered: isFiltered, totalItemsCount: totalItemsCount, isPartialSelection: isPartialSelection }));\n}\n//# sourceMappingURL=InvertableSelect.js.map","// (C) 2007-2023 GoodData Corporation\nimport { useMemo, useCallback } from \"react\";\nimport differenceBy from \"lodash/differenceBy.js\";\nimport intersectionBy from \"lodash/intersectionBy.js\";\nimport keyBy from \"lodash/keyBy.js\";\nimport noop from \"lodash/noop.js\";\n/**\n * @internal\n */\nexport function useInvertableSelect(props) {\n    const { items, totalItemsCount, getItemKey, searchString, isInverted = true, selectedItems, onSelect = noop, } = props;\n    const isSearch = searchString.length > 0;\n    const isSelectionEmpty = selectedItems.length === 0;\n    const selectionMap = useMemo(() => {\n        return keyBy(selectedItems, getItemKey);\n    }, [selectedItems, getItemKey]);\n    const itemsNotInSelection = useMemo(() => differenceBy(items, selectedItems, getItemKey), [items, selectedItems, getItemKey]);\n    const itemsInSelection = useMemo(() => intersectionBy(items, selectedItems, getItemKey), [items, selectedItems, getItemKey]);\n    const loadedSelectedItems = useMemo(\n    // For inverted list, items are selected when they are not in the selection\n    () => (isInverted ? itemsNotInSelection : itemsInSelection), [isInverted, itemsNotInSelection, itemsInSelection]);\n    const loadedUnselectedItems = useMemo(\n    // For inverted list, items are unselected when they are in the selection\n    () => (isInverted ? itemsInSelection : itemsNotInSelection), [isInverted, itemsNotInSelection, itemsInSelection]);\n    const selectionState = useMemo(() => {\n        if (!isSearch) {\n            // Negative filter with no selection\n            if (isInverted && isSelectionEmpty) {\n                return \"all\";\n            }\n            // Positive filter with all items selected\n            if (!isInverted && loadedSelectedItems.length === totalItemsCount) {\n                return \"all\";\n            }\n            // Positive filter with no selection\n            if (!isInverted && isSelectionEmpty) {\n                return \"none\";\n            }\n            // Negative filter with all items selected\n            if (isInverted && loadedUnselectedItems.length === totalItemsCount) {\n                return \"none\";\n            }\n        }\n        else {\n            if (isInverted && itemsInSelection.length === 0) {\n                return \"all\";\n            }\n            if (!isInverted && itemsInSelection.length === totalItemsCount) {\n                return \"all\";\n            }\n            if (isInverted && itemsInSelection.length === totalItemsCount) {\n                return \"none\";\n            }\n            if (!isInverted && itemsInSelection.length === 0) {\n                return \"none\";\n            }\n        }\n        return \"partial\";\n    }, [\n        isInverted,\n        isSelectionEmpty,\n        totalItemsCount,\n        loadedSelectedItems,\n        isSearch,\n        loadedUnselectedItems,\n        itemsInSelection.length,\n    ]);\n    const getIsItemSelected = useCallback((item) => {\n        const itemKey = getItemKey(item);\n        return isInverted ? !selectionMap[itemKey] : !!selectionMap[itemKey];\n    }, [isInverted, selectionMap, getItemKey]);\n    const selectAll = useCallback(() => {\n        onSelect([], true);\n    }, [onSelect]);\n    const selectNone = useCallback(() => {\n        onSelect([], false);\n    }, [onSelect]);\n    const selectOnly = useCallback((item) => {\n        onSelect([item], false);\n    }, [onSelect]);\n    const selectItems = useCallback((items) => {\n        const newItems = isInverted\n            ? differenceBy(selectedItems, items, getItemKey)\n            : selectedItems.concat(items);\n        if (!isSearch && !isInverted && newItems.length === totalItemsCount) {\n            // Selecting last item -> select all\n            selectAll();\n        }\n        else {\n            onSelect(newItems, isInverted);\n        }\n    }, [isInverted, selectedItems, onSelect, selectAll, getItemKey, totalItemsCount, isSearch]);\n    const deselectItems = useCallback((items) => {\n        const newItems = isInverted\n            ? selectedItems.concat(items)\n            : differenceBy(selectedItems, items, getItemKey);\n        if (!isSearch && isInverted && newItems.length === totalItemsCount) {\n            selectNone();\n        }\n        else {\n            onSelect(newItems, isInverted);\n        }\n    }, [isInverted, selectedItems, onSelect, selectNone, getItemKey, totalItemsCount, isSearch]);\n    const onSelectAllCheckboxToggle = useCallback(() => {\n        if (isSearch) {\n            if (selectionState === \"all\" || loadedSelectedItems.length === items.length) {\n                // Reduce selection, if is all, or all loaded is selected\n                deselectItems(loadedSelectedItems);\n            }\n            else {\n                // Extend selection if is none or partial\n                selectItems(loadedUnselectedItems);\n            }\n        }\n        else if (selectionState === \"all\") {\n            // Is all -> select none\n            selectNone();\n        }\n        else {\n            // Is partial or none -> select all\n            selectAll();\n        }\n    }, [\n        items,\n        selectionState,\n        loadedUnselectedItems,\n        loadedSelectedItems,\n        selectItems,\n        deselectItems,\n        selectAll,\n        selectNone,\n        isSearch,\n    ]);\n    const onSelectAllCheckboxChange = useCallback((value) => {\n        if (isSearch) {\n            if (value) {\n                selectItems(loadedUnselectedItems);\n            }\n            else {\n                deselectItems(loadedSelectedItems);\n            }\n        }\n        else if (value) {\n            selectAll();\n        }\n        else {\n            selectNone();\n        }\n    }, [\n        loadedUnselectedItems,\n        loadedSelectedItems,\n        selectItems,\n        deselectItems,\n        selectAll,\n        selectNone,\n        isSearch,\n    ]);\n    return {\n        onSelectAllCheckboxToggle,\n        onSelectAllCheckboxChange,\n        getIsItemSelected,\n        selectionState,\n        selectItems,\n        deselectItems,\n        selectOnly,\n    };\n}\n//# sourceMappingURL=useInvertableSelect.js.map","// (C) 2022-2023 GoodData Corporation\nimport { UnexpectedSdkError } from \"@gooddata/sdk-ui\";\nimport { invariant } from \"ts-invariant\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { attributeElementsCount, filterAttributeElements, isPositiveAttributeFilter, } from \"@gooddata/sdk-model\";\n/**\n * @internal\n */\nexport const ThrowMissingComponentError = (componentName, providerName) => () => {\n    throw new UnexpectedSdkError(`Component: ${componentName} is missing in the ${providerName}.`);\n};\n/**\n * @internal\n */\nexport const throwMissingCallbackError = (callbackName, providerName) => (..._args) => {\n    throw new UnexpectedSdkError(`Callback: ${callbackName} is missing in the ${providerName}.`);\n};\n/**\n * @internal\n */\nexport function getElementTitle(element, intl) {\n    return element.formattedTitle || element.title || `(${intl.formatMessage({ id: \"empty_value\" })})`;\n}\n/**\n * @internal\n */\nexport function getElementTitles(elements, intl) {\n    return elements.map((el) => getElementTitle(el, intl)).join(\", \");\n}\n/**\n * @internal\n */\nexport function getElementKey(element) {\n    return element.uri;\n}\n/**\n * @internal\n */\nexport function validateAttributeFilterProps(props) {\n    var _a, _b;\n    const { connectToPlaceholder, filter, onApply, parentFilters, hiddenElements, staticElements, backend } = props;\n    invariant(!(filter && connectToPlaceholder), \"It's not possible to combine 'filter' property with 'connectToPlaceholder' property. Either provide a filter, or a placeholer.\");\n    invariant(!(filter && !onApply), \"It's not possible to use 'filter' property without 'onApply' property. Either provide 'onApply' callback or use placeholders.\");\n    invariant(filter || connectToPlaceholder, \"No filter or placeholer provided. Provide one of the properties: 'filter', 'connectToPlaceholder'.\");\n    invariant(!(!((_a = backend === null || backend === void 0 ? void 0 : backend.capabilities) === null || _a === void 0 ? void 0 : _a.supportsElementsQueryParentFiltering) && !isEmpty(parentFilters)), \"Parent filtering is not supported by the current backend implementation.\");\n    invariant(!(!((_b = backend === null || backend === void 0 ? void 0 : backend.capabilities) === null || _b === void 0 ? void 0 : _b.supportsElementsQueryParentFiltering) &&\n        !isEmpty(hiddenElements) &&\n        isEmpty(staticElements)), \"Hidden elements are not supported by the current backend implementation.\");\n}\n/**\n * @internal\n */\nexport function isValidSingleSelectionFilter(selectionMode, filter, limitingAttributeFilters) {\n    const isSingleSelect = selectionMode === \"single\";\n    const hasEmptyParentFilters = isEmpty(limitingAttributeFilters);\n    const isPositiveWithMaxOneElement = isPositiveAttributeFilter(filter) && attributeElementsCount(filterAttributeElements(filter)) < 2;\n    if (isSingleSelect) {\n        if (!isPositiveWithMaxOneElement) {\n            console.error(\"Provided 'filter' or 'connectToPlaceholder' property is not compatible with given single selection mode. It needs to be positive filter with max one item selected in attribute elements\");\n            return false;\n        }\n        if (!hasEmptyParentFilters) {\n            console.error(\"Parent filtering can not be used together with single selection mode. Use only one of these properties at the same time.\");\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=utils.js.map","import { __rest } from \"tslib\";\n// (C) 2022 GoodData Corporation\nimport React, { createContext, useContext } from \"react\";\nimport { ThrowMissingComponentError } from \"../utils.js\";\nconst AttributeFilterComponentsContext = createContext({\n    ErrorComponent: ThrowMissingComponentError(\"ErrorComponent\", \"AttributeFilterComponentsContext\"),\n    LoadingComponent: ThrowMissingComponentError(\"LoadingComponent\", \"AttributeFilterComponentsContext\"),\n    DropdownButtonComponent: ThrowMissingComponentError(\"DropdownButtonComponent\", \"AttributeFilterComponentsContext\"),\n    DropdownBodyComponent: ThrowMissingComponentError(\"DropdownBodyComponent\", \"AttributeFilterComponentsContext\"),\n    DropdownActionsComponent: ThrowMissingComponentError(\"DropdownActionsComponent\", \"AttributeFilterComponentsContext\"),\n    ElementsSearchBarComponent: ThrowMissingComponentError(\"ElementsSearchBarComponent\", \"AttributeFilterComponentsContext\"),\n    ElementsSelectComponent: ThrowMissingComponentError(\"ElementsSelectComponent\", \"AttributeFilterComponentsContext\"),\n    ElementsSelectLoadingComponent: ThrowMissingComponentError(\"ElementsSelectLoadingComponent\", \"AttributeFilterComponentsContext\"),\n    ElementsSelectItemComponent: ThrowMissingComponentError(\"ElementsSelectItemComponent\", \"AttributeFilterComponentsContext\"),\n    ElementsSelectErrorComponent: ThrowMissingComponentError(\"ElementsSelectErrorComponent\", \"AttributeFilterComponentsContext\"),\n    ElementsSelectActionsComponent: ThrowMissingComponentError(\"ElementsSelectActionsComponent\", \"AttributeFilterComponentsContext\"),\n    EmptyResultComponent: ThrowMissingComponentError(\"EmptyResultComponent\", \"AttributeFilterComponentsContext\"),\n    StatusBarComponent: ThrowMissingComponentError(\"StatusBarComponent\", \"AttributeFilterComponentsContext\"),\n});\nAttributeFilterComponentsContext.displayName = \"AttributeFilterComponentsContext\";\n/**\n * @internal\n */\nexport const useAttributeFilterComponentsContext = () => {\n    return useContext(AttributeFilterComponentsContext);\n};\n/**\n * @internal\n */\nexport const AttributeFilterComponentsProvider = (props) => {\n    const { children } = props, components = __rest(props, [\"children\"]);\n    return (React.createElement(AttributeFilterComponentsContext.Provider, { value: components }, children));\n};\n//# sourceMappingURL=AttributeFilterComponentsContext.js.map","// (C) 2019-2022 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * Type-guard testing whether the provided object is an instance of {@link AnyPlaceholder}.\n * @public\n */\nexport function isAnyPlaceholder(obj) {\n    const guards = [isPlaceholder, isComposedPlaceholder];\n    return guards.some((pred) => pred(obj));\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IPlaceholder}.\n * @public\n */\nexport function isPlaceholder(obj) {\n    return !isEmpty(obj) && obj.type === \"IPlaceholder\";\n}\n/**\n * Type-guard testing whether the provided object is an instance of {@link IComposedPlaceholder}.\n * @public\n */\nexport function isComposedPlaceholder(obj) {\n    return (!isEmpty(obj) &&\n        obj.type === \"IComposedPlaceholder\");\n}\n//# sourceMappingURL=base.js.map","// (C) 2019-2023 GoodData Corporation\nimport React, { createContext, useContext, useDebugValue, useState } from \"react\";\nimport noop from \"lodash/noop.js\";\n/**\n * @internal\n */\nconst PlaceholdersContext = createContext({\n    state: {\n        placeholders: {},\n    },\n    updateState: noop,\n});\nPlaceholdersContext.displayName = \"PlaceholdersContext\";\n/**\n * @internal\n */\nexport const usePlaceholdersContext = () => useContext(PlaceholdersContext);\n/**\n * Wraps component into a PlaceholdersContext consumer enabling the children of this to access the current\n * placeholders state.\n *\n * @public\n */\nexport function PlaceholdersProvider(props) {\n    var _a;\n    const { children, initialValues } = props;\n    const accumulator = {};\n    const initialPlaceholdersState = (_a = initialValues === null || initialValues === void 0 ? void 0 : initialValues.reduce((acc, [placeholder, value]) => {\n        acc[placeholder.id] = Object.assign(Object.assign({}, placeholder), { value });\n        return acc;\n    }, accumulator)) !== null && _a !== void 0 ? _a : {};\n    const [state, updateState] = useState({\n        placeholders: initialPlaceholdersState,\n    });\n    useDebugValue(state);\n    return (React.createElement(PlaceholdersContext.Provider, { value: {\n            state,\n            updateState,\n        } }, children));\n}\n//# sourceMappingURL=context.js.map","// (C) 2019-2022 GoodData Corporation\nimport isArray from \"lodash/isArray.js\";\nimport { isPlaceholder, isAnyPlaceholder, isComposedPlaceholder, } from \"./base.js\";\n/**\n * Set placeholder value to the context.\n * @internal\n */\nexport function setPlaceholder(placeholder, value, state) {\n    if (placeholder.validate) {\n        placeholder.validate(value);\n    }\n    if (isPlaceholder(placeholder)) {\n        return Object.assign(Object.assign({}, state), { placeholders: Object.assign(Object.assign({}, state.placeholders), { [placeholder.id]: Object.assign(Object.assign({}, placeholder), { value }) }) });\n    }\n    return state;\n}\n/**\n * Resolve placeholder value from the context, or fallback to default value.\n * @internal\n */\nexport function resolvePlaceholderValue(placeholder, state) {\n    var _a, _b;\n    const placeholderValue = (_b = (_a = state.placeholders[placeholder.id]) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : placeholder.defaultValue;\n    if (placeholder.validate) {\n        placeholder.validate(placeholderValue);\n    }\n    return placeholderValue;\n}\n/**\n * Resolve composed placeholder value with provided resolution context.\n * @internal\n */\nexport function resolveComposedPlaceholderValue(placeholder, state, resolutionContext) {\n    const values = placeholder.placeholders.map((p) => resolveValueWithPlaceholders(p, state, resolutionContext));\n    return placeholder.computeValue(values, resolutionContext);\n}\n/**\n * Resolve value(s) that can possibly contain also placeholder(s) to actual value(s).\n * Arrays with nested placeholders that are holding arrays are flattened.\n * You can specify custom resolution context for the composed placeholders.\n *\n * This is method you want to use to replace placeholders in any value with actual placeholder values.\n * It does not support object traversing as most of the visualizations interfaces\n * are consuming only arrays or single values.\n *\n * @internal\n */\nexport function resolveValueWithPlaceholders(value, state, resolutionContext) {\n    if (isPlaceholder(value)) {\n        return resolvePlaceholderValue(value, state);\n    }\n    else if (isComposedPlaceholder(value)) {\n        return resolveComposedPlaceholderValue(value, state, resolutionContext);\n    }\n    else if (isArray(value)) {\n        return value.reduce((acc, v) => {\n            const resolvedValue = resolveValueWithPlaceholders(v, state, resolutionContext);\n            if (isAnyPlaceholder(v)) {\n                // Omit placeholder values that are not set\n                if (!resolvedValue) {\n                    return acc;\n                }\n                else if (isArray(resolvedValue)) {\n                    acc.push(...resolvedValue.filter((v) => typeof v !== \"undefined\"));\n                    return acc;\n                }\n            }\n            acc.push(resolvedValue);\n            return acc;\n        }, []);\n    }\n    return value;\n}\n//# sourceMappingURL=resolve.js.map","// (C) 2021-2023 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { usePlaceholder } from \"@gooddata/sdk-ui\";\n/**\n * @internal\n */\nexport const useResolveFilterInput = (filter, connectToPlaceholder) => {\n    const [resolvedPlaceholder, setPlaceholderValue] = usePlaceholder(connectToPlaceholder);\n    const currentFilter = resolvedPlaceholder !== null && resolvedPlaceholder !== void 0 ? resolvedPlaceholder : filter;\n    const setConnectedPlaceholderValue = useCallback((filter) => {\n        if (connectToPlaceholder) {\n            setPlaceholderValue(filter);\n        }\n    }, [connectToPlaceholder, setPlaceholderValue]);\n    return {\n        filter: currentFilter,\n        setConnectedPlaceholderValue,\n    };\n};\n//# sourceMappingURL=useResolveFilterInput.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { useResolveValueWithPlaceholders } from \"@gooddata/sdk-ui\";\nimport { filterIsEmpty } from \"@gooddata/sdk-model\";\nimport isFunction from \"lodash/isFunction.js\";\n/**\n * @internal\n */\nexport const useResolveParentFiltersInput = (parentFilters, overAttribute) => {\n    const resolvedParentFilters = useResolveValueWithPlaceholders(parentFilters);\n    return useMemo(() => {\n        return getParentFiltersWithOverAttribute(resolvedParentFilters, overAttribute);\n    }, [resolvedParentFilters, overAttribute]);\n};\nconst getParentFiltersWithOverAttribute = (parentFilters, overAttribute) => {\n    if (!parentFilters || !overAttribute) {\n        return [];\n    }\n    const overAttributeGetter = isFunction(overAttribute) ? overAttribute : () => overAttribute;\n    return parentFilters\n        .map((attributeFilter, index) => {\n        return {\n            attributeFilter,\n            overAttribute: overAttributeGetter(attributeFilter, index),\n        };\n    })\n        .filter((item) => {\n        return !filterIsEmpty(item.attributeFilter);\n    });\n};\n//# sourceMappingURL=useResolveParentFiltersInput.js.map","// (C) 2019-2022 GoodData Corporation\nimport { useCallback, useMemo, useRef } from \"react\";\nimport stableStringify from \"json-stable-stringify\";\nimport { isPlaceholder, } from \"./base.js\";\nimport { usePlaceholdersContext } from \"./context.js\";\nimport { invariant } from \"ts-invariant\";\nimport { setPlaceholder, resolvePlaceholderValue, resolveComposedPlaceholderValue, resolveValueWithPlaceholders, } from \"./resolve.js\";\n/**\n * React hook to obtain/set placeholder value.\n *\n * @remarks\n * See {@link IPlaceholder}.\n *\n * Note: When placeholder is not provided, setting its value will result in the error.\n *\n * @public\n */\nexport function usePlaceholder(placeholder) {\n    const { state, updateState } = usePlaceholdersContext();\n    const resolvedPlaceholderValue = isPlaceholder(placeholder)\n        ? resolvePlaceholderValue(placeholder, state)\n        : undefined;\n    const setPlaceholderValue = useCallback((valueOrUpdateCallback) => {\n        updateState((s) => {\n            invariant(isPlaceholder(placeholder), \"usePlaceholder: Cannot set value of the placeholder - placeholder was not provided.\");\n            const resoledPlaceholderValue = resolvePlaceholderValue(placeholder, s);\n            const updatedValue = valueOrUpdateCallback instanceof Function\n                ? valueOrUpdateCallback(resoledPlaceholderValue)\n                : valueOrUpdateCallback;\n            return setPlaceholder(placeholder, updatedValue, s);\n        });\n    }, []);\n    return [resolvedPlaceholderValue, setPlaceholderValue];\n}\n/**\n * React hook to obtain/set multiple placeholder values at once.\n *\n * @remarks\n * This is useful to perform placeholders atomic change.\n * See {@link IPlaceholder}.\n * @public\n */\nexport function usePlaceholders(placeholders) {\n    const { state, updateState } = usePlaceholdersContext();\n    const resolvedPlaceholderValues = placeholders.map((placeholder) => resolvePlaceholderValue(placeholder, state));\n    const memoizedResolvedValues = useMultiValueMemoStringify(resolvedPlaceholderValues);\n    const setPlaceholderValues = useCallback((valueOrUpdateCallback) => {\n        updateState((s) => {\n            const resolvedValues = placeholders.map((placeholder) => resolvePlaceholderValue(placeholder, s));\n            const updatedValues = typeof valueOrUpdateCallback === \"function\"\n                ? valueOrUpdateCallback(resolvedValues)\n                : valueOrUpdateCallback;\n            return placeholders.reduce((acc, placeholder, i) => {\n                return setPlaceholder(placeholder, updatedValues[i], acc);\n            }, s);\n        });\n    }, []);\n    return [memoizedResolvedValues, setPlaceholderValues];\n}\n/**\n * React hook to obtain composed placeholder value.\n *\n * @remarks\n * You can provide custom context for the composed placeholders resolution.\n * See {@link IComposedPlaceholder}.\n *\n * @public\n */\nexport function useComposedPlaceholder(placeholder, resolutionContext) {\n    const { state } = usePlaceholdersContext();\n    const resolvedValue = resolveComposedPlaceholderValue(placeholder, state, resolutionContext);\n    return useMemoStringify(resolvedValue);\n}\n/**\n * React hook that resolves any value(s) that can possibly contain also placeholder(s) to actual value(s).\n *\n * @remarks\n * You can provide custom context for the composed placeholders resolution.\n *\n * @public\n */\nexport function useResolveValueWithPlaceholders(value, resolutionContext) {\n    const { state } = usePlaceholdersContext();\n    const resolvedValue = resolveValueWithPlaceholders(value, state, resolutionContext);\n    return useMemoStringify(resolvedValue);\n}\n/**\n * React hook that resolves multiple value(s) that can possibly contain also placeholder(s) to actual value(s).\n *\n * @remarks\n * You can provide custom context for the composed placeholders resolution.\n *\n * @public\n */\nexport function useResolveValuesWithPlaceholders(values, resolutionContext) {\n    const { state } = usePlaceholdersContext();\n    const resolvedValues = values === null || values === void 0 ? void 0 : values.map((value) => resolveValueWithPlaceholders(value, state, resolutionContext));\n    return useMultiValueMemoStringify(resolvedValues);\n}\n/**\n * Memoize value by its stringified value, to avoid new reference on each render.\n *\n * @param value - value to memoize\n * @returns - memoized value\n * @internal\n */\nexport function useMemoStringify(value) {\n    return useMemo(() => {\n        return value;\n    }, [stableStringify(value)]);\n}\n/**\n * Memoize multiple values by their stringified value, to avoid new reference on each render.\n *\n * @param values - values to memoize\n * @returns - memoized values\n * @internal\n */\nexport function useMultiValueMemoStringify(values) {\n    var _a;\n    const prevValues = useRef((_a = values === null || values === void 0 ? void 0 : values.map((v) => ({\n        hash: stableStringify(v),\n        value: v,\n    }))) !== null && _a !== void 0 ? _a : []);\n    return useMemo(() => {\n        return values === null || values === void 0 ? void 0 : values.map((val, idx) => {\n            const hash = stableStringify(val);\n            if (hash === prevValues.current[idx].hash) {\n                return prevValues.current[idx].value;\n            }\n            prevValues.current[idx] = {\n                hash,\n                value: val,\n            };\n            return val;\n        });\n    }, [stableStringify(values)]);\n}\n//# sourceMappingURL=hooks.js.map","// (C) 2021-2022 GoodData Corporation\nimport identity from \"lodash/identity.js\";\nconst init = identity;\nconst initStart = (state) => {\n    state.initialization.status = \"loading\";\n};\nconst initSuccess = (state) => {\n    state.initialization.status = \"success\";\n};\nconst initError = (state, action) => {\n    state.initialization.status = \"error\";\n    state.initialization.error = action.payload.error;\n};\nconst initCancel = (state) => {\n    state.initialization.status = \"canceled\";\n};\n/**\n * @internal\n */\nexport const initReducers = {\n    init,\n    initStart,\n    initSuccess,\n    initError,\n    initCancel,\n};\n//# sourceMappingURL=initReducers.js.map","import identity from \"lodash/identity.js\";\nconst loadAttributeRequest = identity;\nconst loadAttributeStart = (state) => {\n    state.attribute.status = \"loading\";\n    state.attribute.error = undefined;\n};\nconst loadAttributeSuccess = (state, action) => {\n    state.attribute.status = \"success\";\n    state.attribute.data = action.payload.attribute;\n};\nconst loadAttributeError = (state, action) => {\n    state.attribute.status = \"error\";\n    state.attribute.error = action.payload.error;\n};\nconst loadAttributeCancelRequest = identity;\nconst loadAttributeCancel = (state) => {\n    state.attribute.status = \"canceled\";\n};\n/**\n * @internal\n */\nexport const loadAttributeReducers = {\n    loadAttributeRequest,\n    loadAttributeStart,\n    loadAttributeSuccess,\n    loadAttributeError,\n    loadAttributeCancelRequest,\n    loadAttributeCancel,\n};\n//# sourceMappingURL=loadAttributeReducers.js.map","/**\n * @internal\n */\nexport const selectState = (state) => state;\n/**\n * @internal\n */\nexport const getElementCacheKey = (state, element) => state.elementsForm === \"uris\" ? element.uri : element.title;\n/**\n * @internal\n */\nexport const selectElementsForm = (state) => state.elementsForm;\n//# sourceMappingURL=selectors.js.map","import identity from \"lodash/identity.js\";\nimport { getElementCacheKey } from \"../common/selectors.js\";\nconst loadCustomElementsRequest = identity;\nconst loadCustomElementsStart = identity;\nconst loadCustomElementsSuccess = (state, action) => {\n    action.payload.elements.forEach((el) => {\n        const cacheKey = getElementCacheKey(state, el);\n        if (!state.elements.cache[cacheKey]) {\n            state.elements.cache[cacheKey] = el;\n        }\n    });\n};\nconst loadCustomElementsError = identity;\nconst loadCustomElementsCancelRequest = identity;\nconst loadCustomElementsCancel = identity;\n/**\n * @internal\n */\nexport const loadCustomElementsReducers = {\n    loadCustomElementsRequest,\n    loadCustomElementsStart,\n    loadCustomElementsSuccess,\n    loadCustomElementsError,\n    loadCustomElementsCancelRequest,\n    loadCustomElementsCancel,\n};\n//# sourceMappingURL=loadCustomElementsReducers.js.map","import identity from \"lodash/identity.js\";\nimport { getElementCacheKey } from \"../common/selectors.js\";\nconst loadInitialElementsPageRequest = identity;\nconst loadInitialElementsPageStart = (state) => {\n    state.elements.initialPageLoad.status = \"loading\";\n    state.elements.initialPageLoad.error = undefined;\n    state.elements.currentOptions.offset = 0;\n    state.elements.lastLoadedOptions.offset = 0;\n    state.elements.data = [];\n};\nconst loadInitialElementsPageSuccess = (state, action) => {\n    state.elements.initialPageLoad.status = \"success\";\n    state.elements.totalCountWithCurrentSettings = action.payload.totalCount;\n    action.payload.elements.forEach((el) => {\n        const cacheKey = getElementCacheKey(state, el);\n        if (!state.elements.cache[cacheKey]) {\n            state.elements.cache[cacheKey] = el;\n        }\n    });\n    state.elements.data = action.payload.elements.map((el) => getElementCacheKey(state, el));\n    state.elements.lastLoadedOptions = action.payload.options;\n};\nconst loadInitialElementsPageError = (state, action) => {\n    state.elements.initialPageLoad.status = \"error\";\n    state.elements.initialPageLoad.error = action.payload.error;\n};\nconst loadInitialElementsPageCancelRequest = identity;\nconst loadInitialElementsPageCancel = (state) => {\n    state.attribute.status = \"canceled\";\n};\n/**\n * @internal\n */\nexport const loadInitialElementsPageReducers = {\n    loadInitialElementsPageRequest,\n    loadInitialElementsPageStart,\n    loadInitialElementsPageSuccess,\n    loadInitialElementsPageError,\n    loadInitialElementsPageCancelRequest,\n    loadInitialElementsPageCancel,\n};\n//# sourceMappingURL=loadInitialElementsPageReducers.js.map","import identity from \"lodash/identity.js\";\nimport { getElementCacheKey } from \"../common/selectors.js\";\nconst loadNextElementsPageRequest = identity;\nconst loadNextElementsPageStart = (state) => {\n    state.elements.nextPageLoad.status = \"loading\";\n    state.elements.nextPageLoad.error = undefined;\n};\nconst loadNextElementsPageSuccess = (state, action) => {\n    state.elements.nextPageLoad.status = \"success\";\n    action.payload.elements.forEach((el) => {\n        const cacheKey = getElementCacheKey(state, el);\n        if (!state.elements.cache[cacheKey]) {\n            state.elements.cache[cacheKey] = el;\n        }\n    });\n    state.elements.data = state.elements.data.concat(action.payload.elements.map((el) => getElementCacheKey(state, el)));\n    state.elements.lastLoadedOptions = action.payload.options;\n};\nconst loadNextElementsPageError = (state, action) => {\n    state.elements.nextPageLoad.status = \"error\";\n    state.elements.nextPageLoad.error = action.payload.error;\n};\nconst loadNextElementsPageCancelRequest = identity;\nconst loadNextElementsPageCancel = (state) => {\n    state.elements.nextPageLoad.status = \"canceled\";\n};\n/**\n * @internal\n */\nexport const loadNextElementsPageReducers = {\n    loadNextElementsPageRequest,\n    loadNextElementsPageStart,\n    loadNextElementsPageSuccess,\n    loadNextElementsPageError,\n    loadNextElementsPageCancelRequest,\n    loadNextElementsPageCancel,\n};\n//# sourceMappingURL=loadNextElementsPageReducers.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { selectState } from \"../common/selectors.js\";\n/**\n * @internal\n */\nexport const selectWorkingSelection = createSelector(selectState, (state) => state.selection.working.keys);\n/**\n * @internal\n */\nexport const selectIsWorkingSelectionInverted = createSelector(selectState, (state) => state.selection.working.isInverted);\n/**\n * @internal\n */\nexport const selectCommittedSelection = createSelector(selectState, (state) => state.selection.commited.keys);\n/**\n * @internal\n */\nexport const selectIsCommittedSelectionInverted = createSelector(selectState, (state) => state.selection.commited.isInverted);\n/**\n * @internal\n */\nexport const selectInvertableWorkingSelection = createSelector(selectWorkingSelection, selectIsWorkingSelectionInverted, (keys, isInverted) => ({\n    keys,\n    isInverted,\n}));\n/**\n * @internal\n */\nexport const selectInvertableCommittedSelection = createSelector(selectCommittedSelection, selectIsCommittedSelectionInverted, (keys, isInverted) => ({\n    keys,\n    isInverted,\n}));\n/**\n * @internal\n */\nexport const selectIsWorkingSelectionChanged = createSelector(selectIsWorkingSelectionInverted, selectWorkingSelection, selectIsCommittedSelectionInverted, selectCommittedSelection, (isWorkingSelectionInverted, workingSelection, isCommitedSelectionInverted, commitedSelection) => isWorkingSelectionInverted !== isCommitedSelectionInverted ||\n    !isEqual([...commitedSelection].sort(), [...workingSelection].sort()));\n/**\n * @internal\n */\nexport const selectIsWorkingSelectionEmpty = createSelector(selectWorkingSelection, isEmpty);\n//# sourceMappingURL=selectionSelectors.js.map","import isNil from \"lodash/isNil.js\";\nimport { selectCommittedSelection, selectIsCommittedSelectionInverted, selectIsWorkingSelectionInverted, selectWorkingSelection, } from \"./selectionSelectors.js\";\nconst changeSelection = (state, action) => {\n    state.selection.working.keys = action.payload.selection;\n    if (!isNil(action.payload.isInverted)) {\n        state.selection.working.isInverted = action.payload.isInverted;\n    }\n};\nconst revertSelection = (state) => {\n    const committedSelection = selectCommittedSelection(state);\n    const isCommittedSelectionInverted = selectIsCommittedSelectionInverted(state);\n    state.selection.working.keys = committedSelection;\n    state.selection.working.isInverted = isCommittedSelectionInverted;\n};\nconst commitSelection = (state) => {\n    const workingSelection = selectWorkingSelection(state);\n    const isWorkingSelectionInverted = selectIsWorkingSelectionInverted(state);\n    state.selection.commited.keys = workingSelection;\n    state.selection.commited.isInverted = isWorkingSelectionInverted;\n};\nconst invertSelection = (state) => {\n    const isWorkingSelectionInverted = selectIsWorkingSelectionInverted(state);\n    state.selection.working.isInverted = !isWorkingSelectionInverted;\n};\nconst clearSelection = (state) => {\n    state.selection.working.keys = [];\n};\n/**\n * @internal\n */\nexport const selectionReducers = {\n    changeSelection,\n    revertSelection,\n    commitSelection,\n    invertSelection,\n    clearSelection,\n};\n//# sourceMappingURL=selectionReducers.js.map","// (C) 2021-2022 GoodData Corporation\nimport identity from \"lodash/identity.js\";\nconst setElementsTotalCount = (state, action) => {\n    state.elements.totalCount = action.payload.totalCount;\n};\nconst initTotalCount = identity;\nconst initTotalCountStart = (state) => {\n    state.elements.totalCountInitialization.status = \"loading\";\n};\nconst initTotalCountSuccess = (state) => {\n    state.elements.totalCountInitialization.status = \"success\";\n};\nconst initTotalCountError = (state, action) => {\n    state.elements.totalCountInitialization.status = \"error\";\n    state.elements.totalCountInitialization.error = action.payload.error;\n};\nconst initTotalCountCancel = (state) => {\n    state.elements.totalCountInitialization.status = \"canceled\";\n};\nconst setElementsTotalCountWithCurrentSettings = (state, action) => {\n    state.elements.totalCountWithCurrentSettings = action.payload.totalCount;\n};\nconst setOffset = (state, action) => {\n    state.elements.currentOptions.offset = action.payload.offset;\n};\nconst setSearch = (state, action) => {\n    state.elements.currentOptions.search = action.payload.search;\n};\nconst setOrder = (state, action) => {\n    state.elements.currentOptions.order = action.payload.order;\n};\nconst setLimit = (state, action) => {\n    state.elements.currentOptions.limit = action.payload.limit;\n};\nconst setLimitingAttributeFilters = (state, action) => {\n    state.elements.currentOptions.limitingAttributeFilters = action.payload.filters;\n};\nconst setLimitingAttributeFiltersAttributes = (state, action) => {\n    state.elements.limitingAttributeFiltersAttributes = action.payload.attributes;\n};\nconst setLimitingMeasures = (state, action) => {\n    state.elements.currentOptions.limitingMeasures = action.payload.filters;\n};\nconst setLimitingDateFilters = (state, action) => {\n    state.elements.currentOptions.limitingDateFilters = action.payload.filters;\n};\n/**\n * @internal\n */\nexport const elementsReducers = {\n    setElementsTotalCount,\n    initTotalCount,\n    initTotalCountStart,\n    initTotalCountSuccess,\n    initTotalCountError,\n    initTotalCountCancel,\n    setElementsTotalCountWithCurrentSettings,\n    setOffset,\n    setLimit,\n    setSearch,\n    setOrder,\n    setLimitingAttributeFilters,\n    setLimitingMeasures,\n    setLimitingDateFilters,\n    setLimitingAttributeFiltersAttributes,\n};\n//# sourceMappingURL=elementsReducers.js.map","// (C) 2021-2022 GoodData Corporation\nimport { initReducers } from \"../init/initReducers.js\";\nimport { loadAttributeReducers } from \"../loadAttribute/loadAttributeReducers.js\";\nimport { loadCustomElementsReducers } from \"../loadCustomElements/loadCustomElementsReducers.js\";\nimport { loadInitialElementsPageReducers } from \"../loadInitialElementsPage/loadInitialElementsPageReducers.js\";\nimport { loadNextElementsPageReducers } from \"../loadNextElementsPage/loadNextElementsPageReducers.js\";\nimport { selectionReducers } from \"../selection/selectionReducers.js\";\nimport { elementsReducers } from \"../elements/elementsReducers.js\";\n/**\n * @internal\n */\nexport const rootReducers = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, initReducers), loadAttributeReducers), loadInitialElementsPageReducers), loadNextElementsPageReducers), loadCustomElementsReducers), selectionReducers), elementsReducers);\n//# sourceMappingURL=rootReducers.js.map","/**\n * @internal\n */\nexport const initialState = {\n    initialization: {\n        status: \"pending\",\n    },\n    attribute: {\n        status: \"pending\",\n    },\n    elements: {\n        cache: {},\n        currentOptions: {\n            offset: 0,\n            limit: 500,\n            search: \"\",\n            limitingAttributeFilters: [],\n            limitingDateFilters: [],\n            limitingMeasures: [],\n        },\n        initialPageLoad: {\n            status: \"pending\",\n        },\n        nextPageLoad: {\n            status: \"pending\",\n        },\n        limitingAttributeFiltersAttributes: [],\n        lastLoadedOptions: {},\n        totalCountInitialization: {\n            status: \"pending\",\n        },\n    },\n    config: {},\n    selection: {\n        commited: {},\n        working: {},\n    },\n};\n//# sourceMappingURL=state.js.map","// (C) 2021-2022 GoodData Corporation\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { rootReducers } from \"./rootReducers.js\";\nimport { initialState } from \"./state.js\";\nconst attributeFilterSlice = createSlice({\n    name: \"attributeFilterSlice\",\n    // Missing properties are provided in preloadedState in createStore\n    initialState: initialState,\n    reducers: rootReducers,\n});\n/**\n * @internal\n */\nexport const sliceReducer = attributeFilterSlice.reducer;\n/**\n * @internal\n */\nexport const actions = attributeFilterSlice.actions;\n//# sourceMappingURL=slice.js.map","import { getContext } from \"redux-saga/effects\";\n/**\n * @internal\n */\nexport function* getAttributeFilterContext() {\n    return yield getContext(\"attributeFilterContext\");\n}\n//# sourceMappingURL=sagas.js.map","// (C) 2021-2023 GoodData Corporation\nimport { newNegativeAttributeFilter, newPositiveAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport difference from \"lodash/difference.js\";\nimport union from \"lodash/union.js\";\nimport { selectState } from \"../common/selectors.js\";\nimport { selectCommittedSelection, selectIsCommittedSelectionInverted, } from \"../selection/selectionSelectors.js\";\n/**\n * @internal\n */\nexport const selectAttributeFilterElementsForm = createSelector(selectState, (state) => state.elementsForm);\n/**\n * @internal\n */\nexport const selectHiddenElements = createSelector(selectState, (state) => { var _a; return (_a = state.config.hiddenElements) !== null && _a !== void 0 ? _a : []; });\n/**\n * @internal\n */\nexport const selectHiddenElementsAsAttributeElements = createSelector(selectAttributeFilterElementsForm, selectHiddenElements, (elementsForm, hiddenElements) => elementsForm === \"uris\" ? { uris: hiddenElements } : { values: hiddenElements });\n/**\n * @internal\n */\nexport const selectAttributeFilterDisplayForm = createSelector(selectState, (state) => state.displayFormRef);\n/**\n * @internal\n */\nexport const selectAttributeFilterElements = createSelector(selectAttributeFilterElementsForm, selectCommittedSelection, (elementsForm, selection) => elementsForm === \"uris\" ? { uris: selection } : { values: selection });\n/**\n * @internal\n */\nexport const selectAttributeFilterElementsWithHiddenElementsResolved = createSelector(selectAttributeFilterElementsForm, selectCommittedSelection, selectIsCommittedSelectionInverted, selectHiddenElements, (elementsForm, selection, isInverted, hiddenElements) => {\n    const updatedSelection = isInverted\n        ? union(selection, hiddenElements)\n        : difference(selection, hiddenElements);\n    return elementsForm === \"uris\" ? { uris: updatedSelection } : { values: updatedSelection };\n});\n/**\n * @internal\n */\nexport const selectAttributeFilter = createSelector(selectAttributeFilterDisplayForm, selectIsCommittedSelectionInverted, selectAttributeFilterElementsWithHiddenElementsResolved, (displayForm, isInverted, elements) => isInverted\n    ? newNegativeAttributeFilter(displayForm, elements)\n    : newPositiveAttributeFilter(displayForm, elements));\n//# sourceMappingURL=filterSelectors.js.map","// (C) 2022 GoodData Corporation\nimport { convertError } from \"@gooddata/sdk-ui\";\n/**\n * @internal\n */\nexport async function loadAttributeByDisplayForm(context, displayFormRef) {\n    return context.backend\n        .workspace(context.workspace)\n        .attributes()\n        .getAttributeByDisplayForm(displayFormRef)\n        .catch((err) => {\n        // Convert from AnalyticalBackendError to GoodDataSdkError\n        throw convertError(err);\n    });\n}\n//# sourceMappingURL=loadAttributeByDisplayForm.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { selectState } from \"../common/selectors.js\";\n/**\n * @internal\n */\nexport const selectAttribute = createSelector(selectState, (state) => state.attribute.data);\n/**\n * @internal\n */\nexport const selectAttributeStatus = createSelector(selectState, (state) => state.attribute.status);\n/**\n * @internal\n */\nexport const selectAttributeError = createSelector(selectState, (state) => state.attribute.error);\n//# sourceMappingURL=loadAttributeSelectors.js.map","import { put, call, select, takeLatest, cancelled } from \"redux-saga/effects\";\nimport { actions } from \"../store/slice.js\";\nimport { getAttributeFilterContext } from \"../common/sagas.js\";\nimport { selectAttributeFilterDisplayForm } from \"../filter/filterSelectors.js\";\nimport { loadAttributeByDisplayForm } from \"./loadAttributeByDisplayForm.js\";\nimport { selectAttribute } from \"./loadAttributeSelectors.js\";\n/**\n * @internal\n */\nexport function* loadAttributeWorker() {\n    yield takeLatest([actions.loadAttributeRequest.match, actions.loadAttributeCancelRequest.match], loadAttributeSaga);\n}\n/*\n * @internal\n */\nexport function* loadAttributeSaga(action) {\n    if (actions.loadAttributeCancelRequest.match(action)) {\n        // Saga was triggered by loadAttributeCancelRequest - do nothing, finally statement was already called, because takeLatest can run only one saga at a time === the previous one was canceled\n        return;\n    }\n    const { payload: { correlation }, } = action;\n    try {\n        const displayFormRef = yield select(selectAttributeFilterDisplayForm);\n        const context = yield call(getAttributeFilterContext);\n        yield put(actions.loadAttributeStart({ correlation }));\n        let attribute;\n        const preloadedAttribute = yield select(selectAttribute);\n        if (preloadedAttribute) {\n            attribute = preloadedAttribute;\n        }\n        else {\n            attribute = yield call(loadAttributeByDisplayForm, context, displayFormRef);\n        }\n        yield put(actions.loadAttributeSuccess({ attribute, correlation }));\n        return attribute;\n    }\n    catch (error) {\n        yield put(actions.loadAttributeError({ error, correlation }));\n    }\n    finally {\n        if (yield cancelled()) {\n            yield put(actions.loadAttributeCancel({ correlation }));\n        }\n    }\n}\n//# sourceMappingURL=loadAttributeSaga.js.map","import { createSelector } from \"@reduxjs/toolkit\";\nimport compact from \"lodash/compact.js\";\nimport { selectState } from \"../common/selectors.js\";\n/**\n * Get the elements specified by the keys.\n *\n * @remarks\n * If an element is not available in elementsMap, it is skipped. This can be the case when using hiddenElements,\n * or when a particular element is no longer accessible on the backend (either because it was removed or hidden\n * by permissions in the current context).\n *\n * @internal\n */\nexport const getElementsByKeys = (keys, elementsMap) => {\n    return compact(keys.map((key) => elementsMap[key]));\n};\n/**\n * @internal\n */\nexport const selectElementKeys = createSelector(selectState, (state) => { var _a; return (_a = state.elements.data) !== null && _a !== void 0 ? _a : []; });\n/**\n * @internal\n */\nexport const selectElementsCache = createSelector(selectState, (state) => state.elements.cache);\n/**\n * @internal\n */\nexport const selectElements = createSelector(selectElementKeys, selectElementsCache, getElementsByKeys);\n/**\n * @internal\n */\nexport const selectElementsTotalCount = createSelector(selectState, (state) => state.elements.totalCount);\n/**\n * @internal\n */\nexport const selectInitTotalCountStatus = createSelector(selectState, (state) => { var _a; return (_a = state.elements.totalCountInitialization) === null || _a === void 0 ? void 0 : _a.status; });\n/**\n * @internal\n */\nexport const selectInitTotalCountError = createSelector(selectState, (state) => { var _a; return (_a = state.elements.totalCountInitialization) === null || _a === void 0 ? void 0 : _a.error; });\n/**\n * @internal\n */\nexport const selectElementsTotalCountWithCurrentSettings = createSelector(selectState, (state) => state.elements.totalCountWithCurrentSettings);\n/**\n * @internal\n */\nexport const selectStaticElements = createSelector(selectState, (state) => { var _a; return (_a = state.config.staticElements) !== null && _a !== void 0 ? _a : []; });\n/**\n * @internal\n */\nexport const selectSearch = createSelector(selectState, (state) => state.elements.currentOptions.search);\n/**\n * @internal\n */\nexport const selectOrder = createSelector(selectState, (state) => state.elements.currentOptions.order);\n/**\n * @internal\n */\nexport const selectLimit = createSelector(selectState, (state) => state.elements.currentOptions.limit);\n/**\n * @internal\n */\nexport const selectOffset = createSelector(selectState, (state) => { var _a, _b, _c; return (_c = (_b = (_a = state.elements) === null || _a === void 0 ? void 0 : _a.lastLoadedOptions) === null || _b === void 0 ? void 0 : _b.offset) !== null && _c !== void 0 ? _c : state.elements.currentOptions.offset; });\n/**\n * @internal\n */\nexport const selectLimitingAttributeFilters = createSelector(selectState, (state) => state.elements.currentOptions.limitingAttributeFilters);\n/**\n * @internal\n */\nexport const selectLimitingMeasures = createSelector(selectState, (state) => state.elements.currentOptions.limitingMeasures);\n/**\n * @internal\n */\nexport const selectLimitingDateFilters = createSelector(selectState, (state) => state.elements.currentOptions.limitingDateFilters);\n/**\n * @internal\n */\nexport const selectLoadElementsOptions = createSelector(selectOffset, selectLimit, selectOrder, selectSearch, selectLimitingAttributeFilters, selectLimitingMeasures, selectLimitingDateFilters, (offset, limit, order, search, limitingAttributeFilters, limitingMeasures, limitingDateFilters) => {\n    return {\n        limit,\n        limitingAttributeFilters,\n        limitingDateFilters,\n        limitingMeasures,\n        offset,\n        order,\n        search,\n    };\n});\n/**\n * @internal\n */\nexport const selectLastLoadedElementsOptions = createSelector(selectState, (state) => {\n    return state.elements.lastLoadedOptions;\n});\n/**\n * @internal\n */\nexport const selectLimitingAttributeFiltersAttributes = createSelector(selectState, (state) => state.elements.limitingAttributeFiltersAttributes);\n//# sourceMappingURL=elementsSelectors.js.map","import { invariant } from \"ts-invariant\";\n// inspired by the same thing in sdk-backend-base, copied here to avoid the dependency\nexport class InMemoryPaging {\n    constructor(allItems, limit = 50, offset = 0) {\n        this.allItems = allItems;\n        invariant(offset >= 0, `paging offset must be non-negative, got: ${offset}`);\n        invariant(limit > 0, `limit must be a positive number, got: ${limit}`);\n        // this will naturally return empty items if at the end of data; limit will always be positive\n        this.items = allItems.slice(offset, offset + limit);\n        // offset is at most at the end of all available elements\n        this.offset = Math.min(offset, allItems.length);\n        // limit is always kept as-requested\n        this.limit = limit;\n        this.totalCount = allItems.length;\n    }\n    async next() {\n        if (this.items.length === 0) {\n            return this;\n        }\n        return new InMemoryPaging(this.allItems, this.limit, this.offset + this.items.length);\n    }\n    async goTo(pageIndex) {\n        if (this.items.length === 0) {\n            return this;\n        }\n        return new InMemoryPaging(this.allItems, this.limit, pageIndex * this.items.length);\n    }\n    async all() {\n        return [...this.allItems];\n    }\n    async allSorted(compareFn) {\n        return [...this.allItems].sort(compareFn);\n    }\n}\n//# sourceMappingURL=InMemoryPaging.js.map","// (C) 2022 GoodData Corporation\nimport { isElementsQueryOptionsElementsByPrimaryDisplayFormValue, isElementsQueryOptionsElementsByValue, NotImplemented, } from \"@gooddata/sdk-backend-spi\";\nimport { attributeElementsIsEmpty, isAttributeElementsByRef, } from \"@gooddata/sdk-model\";\nimport flow from \"lodash/flow.js\";\nimport { InMemoryPaging } from \"./InMemoryPaging.js\";\nconst resolveHiddenElements = (hiddenElements) => (staticElements) => {\n    if (attributeElementsIsEmpty(hiddenElements)) {\n        return staticElements;\n    }\n    return isAttributeElementsByRef(hiddenElements)\n        ? staticElements.filter((item) => !hiddenElements.uris.includes(item.uri))\n        : staticElements.filter((item) => !hiddenElements.values.includes(item.title));\n};\nconst resolveSelectedElements = (selectedElements) => (staticElements) => {\n    if (!selectedElements) {\n        return staticElements;\n    }\n    if (isElementsQueryOptionsElementsByPrimaryDisplayFormValue(selectedElements)) {\n        throw new NotImplemented(\"Elements by primary display form value are not supported yet\");\n    }\n    return isElementsQueryOptionsElementsByValue(selectedElements)\n        ? staticElements.filter((element) => selectedElements.values.includes(element.title))\n        : staticElements.filter((element) => selectedElements.uris.includes(element.uri));\n};\nconst resolveStringFilter = (filter) => (staticElements) => {\n    return filter\n        ? staticElements.filter((item) => item.title.toLowerCase().includes(filter.toLowerCase()))\n        : staticElements;\n};\n/**\n * @internal\n */\nexport async function loadElementsFromStaticElements(options, hiddenElementsInfo, staticElements) {\n    let resolvedElements = flow(resolveHiddenElements(hiddenElementsInfo.hiddenElements), resolveSelectedElements(options.elements), resolveStringFilter(options.search))(staticElements);\n    if (options.order === \"desc\") {\n        resolvedElements = [...resolvedElements].reverse();\n    }\n    return new InMemoryPaging(resolvedElements, options.limit, options.offset);\n}\n//# sourceMappingURL=loadElementsFromStaticElements.js.map","// (C) 2022-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { isElementsQueryOptionsElementsByValue, isValueBasedElementsQueryOptionsElements, } from \"@gooddata/sdk-backend-spi\";\nimport { attributeElementsIsEmpty, newNegativeAttributeFilter, newAttribute, newPositiveAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { convertError, DataViewFacade } from \"@gooddata/sdk-ui\";\nimport { InMemoryPaging } from \"./InMemoryPaging.js\";\nasync function loadElementsAsExecution(backend, workspace, displayFormRef, elements, hiddenElementsInfo) {\n    const elementValues = elements.values;\n    const filters = [newPositiveAttributeFilter(displayFormRef, elementValues)];\n    if (!attributeElementsIsEmpty(hiddenElementsInfo.hiddenElements)) {\n        filters.push(newNegativeAttributeFilter(displayFormRef, hiddenElementsInfo.hiddenElements));\n    }\n    const executionResult = await backend\n        .workspace(workspace)\n        .execution()\n        .forItems([newAttribute(displayFormRef)], filters)\n        .execute()\n        .catch((err) => {\n        throw convertError(err);\n    });\n    const executionDataView = await executionResult.readAll().catch((err) => {\n        throw convertError(err);\n    });\n    const dataViewFacade = DataViewFacade.for(executionDataView);\n    const [headers] = dataViewFacade.meta().attributeHeaders();\n    return headers.map(([header]) => {\n        return {\n            title: header.attributeHeaderItem.name,\n            uri: header.attributeHeaderItem.uri,\n        };\n    });\n}\n/**\n * @internal\n */\nexport async function loadElementsFromBackend(context, options, hiddenElementsInfo) {\n    const { backend, workspace } = context;\n    const { displayFormRef, elements, limit, limitingAttributeFilters, limitingDateFilters, limitingMeasures, offset, search, order, includeTotalCountWithoutFilters, excludePrimaryLabel = true, signal, } = options;\n    const isInitialSelectionRequest = isEmpty(limitingAttributeFilters) &&\n        isEmpty(limitingDateFilters) &&\n        isEmpty(limitingMeasures) &&\n        !search &&\n        !excludePrimaryLabel &&\n        !order &&\n        offset === 0;\n    // Bear validElements API does not support loading elements by values,\n    // but it's possible to load them with execution API.\n    // This is necessary to load the initial selection.\n    if (isElementUrisSupported(backend) &&\n        isElementsQueryOptionsElementsByValue(elements) &&\n        isInitialSelectionRequest) {\n        const resolvedElements = await loadElementsAsExecution(backend, workspace, displayFormRef, elements, hiddenElementsInfo);\n        return new InMemoryPaging(resolvedElements, limit, offset);\n    }\n    let loader = backend.workspace(workspace).attributes().elements().forDisplayForm(displayFormRef);\n    const loaderOptions = {};\n    if (limit) {\n        loader = loader.withLimit(limit);\n    }\n    if (offset) {\n        loader = loader.withOffset(offset);\n    }\n    if (search) {\n        loaderOptions.filter = search;\n    }\n    if (excludePrimaryLabel && !isElementUrisSupported(backend)) {\n        loaderOptions.excludePrimaryLabel = true;\n    }\n    if (elements) {\n        loaderOptions.elements =\n            !isElementUrisSupported(backend) && !isValueBasedElementsQueryOptionsElements(elements)\n                ? { primaryValues: elements.uris }\n                : elements;\n    }\n    if (order) {\n        loaderOptions.order = order;\n    }\n    if (includeTotalCountWithoutFilters) {\n        loaderOptions.includeTotalCountWithoutFilters = includeTotalCountWithoutFilters;\n    }\n    if (!isEmpty(loaderOptions)) {\n        loader = loader.withOptions(loaderOptions);\n    }\n    if (limitingDateFilters === null || limitingDateFilters === void 0 ? void 0 : limitingDateFilters.length) {\n        loader = loader.withDateFilters(limitingDateFilters);\n    }\n    const effectiveLimitingAttributeFilters = getLimitingAttributeFilters(displayFormRef, limitingAttributeFilters, hiddenElementsInfo.hiddenElements, hiddenElementsInfo.attribute);\n    if (effectiveLimitingAttributeFilters.length) {\n        loader = loader.withAttributeFilters(effectiveLimitingAttributeFilters);\n    }\n    if (limitingMeasures === null || limitingMeasures === void 0 ? void 0 : limitingMeasures.length) {\n        loader = loader.withMeasures(limitingMeasures);\n    }\n    if (signal) {\n        loader.withSignal(signal);\n    }\n    return loader.query().catch((error) => {\n        throw convertError(error);\n    });\n}\nexport const isElementUrisSupported = (backend) => !!backend.capabilities.supportsElementUris;\nfunction getLimitingAttributeFilters(displayFormRef, limitingAttributeFilters, hiddenElements, attribute) {\n    if (attributeElementsIsEmpty(hiddenElements)) {\n        return limitingAttributeFilters !== null && limitingAttributeFilters !== void 0 ? limitingAttributeFilters : [];\n    }\n    // add a virtual parent filter to get rid of the hidden elements\n    // this is the only way that does not mess up offsets since it is handled by the server \"natively\"\n    const hiddenElementsVirtualFilter = {\n        attributeFilter: newNegativeAttributeFilter(displayFormRef, hiddenElements),\n        overAttribute: attribute.ref,\n    };\n    return [hiddenElementsVirtualFilter, ...(limitingAttributeFilters !== null && limitingAttributeFilters !== void 0 ? limitingAttributeFilters : [])];\n}\n//# sourceMappingURL=loadElementsFromBackend.js.map","import { loadElementsFromStaticElements } from \"./loadElementsFromStaticElements.js\";\nimport { loadElementsFromBackend } from \"./loadElementsFromBackend.js\";\n/**\n * @internal\n */\nexport async function loadElements(context, options, hiddenElementsInfo, staticElements) {\n    return (staticElements === null || staticElements === void 0 ? void 0 : staticElements.length)\n        ? loadElementsFromStaticElements(options, hiddenElementsInfo, staticElements)\n        : loadElementsFromBackend(context, options, hiddenElementsInfo);\n}\n//# sourceMappingURL=loadElements.js.map","import omit from \"lodash/omit.js\";\nimport { call, select } from \"redux-saga/effects\";\nimport { selectAttributeFilterDisplayForm, selectHiddenElementsAsAttributeElements, } from \"../filter/filterSelectors.js\";\nimport { selectAttribute } from \"../loadAttribute/loadAttributeSelectors.js\";\nimport { getAttributeFilterContext } from \"../common/sagas.js\";\nimport { selectStaticElements } from \"./elementsSelectors.js\";\nimport { loadElements } from \"./loadElements.js\";\n/**\n * @internal\n */\nexport function* elementsSaga(options) {\n    const context = yield call(getAttributeFilterContext);\n    const hiddenElements = yield select(selectHiddenElementsAsAttributeElements);\n    const attribute = yield select(selectAttribute);\n    const attributeFilterDisplayFormRef = yield select(selectAttributeFilterDisplayForm);\n    const staticElements = yield select(selectStaticElements);\n    const elementsQueryResult = yield call(loadElements, context, Object.assign({ displayFormRef: attributeFilterDisplayFormRef }, options), {\n        hiddenElements,\n        attribute,\n    }, staticElements);\n    return {\n        elements: elementsQueryResult.items,\n        totalCount: elementsQueryResult.totalCount,\n        options: omit(options, \"signal\"),\n    };\n}\n//# sourceMappingURL=elementsSaga.js.map","// (C) 2022 GoodData Corporation\nimport { convertError } from \"@gooddata/sdk-ui\";\nimport { filterObjRef } from \"@gooddata/sdk-model\";\n/**\n * @internal\n */\nexport async function loadLimitingAttributeFiltersAttributes(context, limitingAttributeFilters) {\n    const displayFormRefs = limitingAttributeFilters.map((limitingAttributeFilter) => filterObjRef(limitingAttributeFilter.attributeFilter));\n    return Promise.all(displayFormRefs.map((displayFormRef) => context.backend\n        .workspace(context.workspace)\n        .attributes()\n        .getAttributeByDisplayForm(displayFormRef))).catch((err) => {\n        // Convert from AnalyticalBackendError to GoodDataSdkError\n        throw convertError(err);\n    });\n}\n//# sourceMappingURL=loadLimitingAttributeFiltersAttributes.js.map","import { put, call, takeLatest, select, cancelled } from \"redux-saga/effects\";\nimport { getAttributeFilterContext } from \"../common/sagas.js\";\nimport { selectElementsForm } from \"../common/selectors.js\";\nimport { elementsSaga } from \"../elements/elementsSaga.js\";\nimport { selectLoadElementsOptions } from \"../elements/elementsSelectors.js\";\nimport { actions } from \"../store/slice.js\";\nimport { loadLimitingAttributeFiltersAttributes } from \"./loadLimitingAttributeFiltersAttributes.js\";\n/**\n * @internal\n */\nexport function* loadInitialElementsPageWorker() {\n    yield takeLatest([actions.loadInitialElementsPageRequest.match, actions.loadInitialElementsPageCancelRequest.match], loadInitialElementsPageSaga);\n}\n/**\n * @internal\n */\nexport function* loadInitialElementsPageSaga(action) {\n    var _a;\n    if (actions.loadInitialElementsPageCancelRequest.match(action)) {\n        // Saga was triggered by cancel request - do nothing - do nothing, finally statement was already called, because takeLatest can run only one saga at a time === the previous one was canceled\n        return;\n    }\n    const context = yield call(getAttributeFilterContext);\n    const abortController = new AbortController();\n    const { payload: { correlation }, } = action;\n    try {\n        yield put(actions.loadInitialElementsPageStart({ correlation }));\n        const loadOptions = yield select(selectLoadElementsOptions);\n        const elementsForm = yield select(selectElementsForm);\n        const loadOptionsWithExcludePrimaryLabel = Object.assign(Object.assign({}, loadOptions), { signal: abortController.signal, excludePrimaryLabel: !context.backend.capabilities.supportsElementUris && elementsForm === \"values\" });\n        const result = yield call(elementsSaga, loadOptionsWithExcludePrimaryLabel);\n        const limitingAttributeFiltersAttributes = yield call(loadLimitingAttributeFiltersAttributes, context, (_a = loadOptions.limitingAttributeFilters) !== null && _a !== void 0 ? _a : []);\n        yield put(actions.setLimitingAttributeFiltersAttributes({ attributes: limitingAttributeFiltersAttributes }));\n        yield put(actions.loadInitialElementsPageSuccess(Object.assign(Object.assign({}, result), { correlation })));\n    }\n    catch (error) {\n        yield put(actions.loadInitialElementsPageError({\n            error,\n            correlation,\n        }));\n    }\n    finally {\n        if (yield cancelled()) {\n            abortController.abort();\n            yield put(actions.loadInitialElementsPageCancel({ correlation }));\n        }\n    }\n}\n//# sourceMappingURL=loadInitialElementsPageSaga.js.map","import { createSelector } from \"@reduxjs/toolkit\";\nimport isEqual from \"lodash/isEqual.js\";\nimport omit from \"lodash/omit.js\";\nimport { selectState } from \"../common/selectors.js\";\nimport { selectElementsTotalCountWithCurrentSettings, selectLastLoadedElementsOptions, selectLoadElementsOptions, } from \"../elements/elementsSelectors.js\";\n/**\n * @internal\n */\nexport const selectLoadNextElementsPageStatus = createSelector(selectState, (state) => state.elements.nextPageLoad.status);\n/**\n * @internal\n */\nexport const selectLoadNextElementsPageError = createSelector(selectState, (state) => state.elements.nextPageLoad.error);\n/**\n * @internal\n */\nexport const selectLoadNextElementsPageOptions = createSelector(selectLastLoadedElementsOptions, (options) => {\n    return Object.assign(Object.assign({}, options), { offset: options.offset + options.limit });\n});\n/**\n * @internal\n */\nexport const selectHasNextPage = createSelector(selectLastLoadedElementsOptions, selectElementsTotalCountWithCurrentSettings, (lastLoadedOptions, totalCountWithCurrentSettings) => {\n    return lastLoadedOptions.offset + lastLoadedOptions.limit < totalCountWithCurrentSettings;\n});\n/**\n * @internal\n */\nexport const selectIsLoadElementsOptionsChanged = createSelector(selectLoadElementsOptions, selectLastLoadedElementsOptions, (loadOptions, lastLoadedOptions) => {\n    return !isEqual(omit(loadOptions, \"offset\", \"excludePrimaryLabel\"), omit(lastLoadedOptions, \"offset\", \"excludePrimaryLabel\"));\n});\n//# sourceMappingURL=loadNextElementsPageSelectors.js.map","import { put, call, takeLatest, select, cancelled } from \"redux-saga/effects\";\nimport { getAttributeFilterContext } from \"../common/sagas.js\";\nimport { selectElementsForm } from \"../common/selectors.js\";\nimport { elementsSaga } from \"../elements/elementsSaga.js\";\nimport { actions } from \"../store/slice.js\";\nimport { selectHasNextPage, selectLoadNextElementsPageOptions } from \"./loadNextElementsPageSelectors.js\";\n/**\n * @internal\n */\nexport function* loadNextElementsPageWorker() {\n    yield takeLatest([\n        actions.loadNextElementsPageRequest.match,\n        actions.loadNextElementsPageCancelRequest.match,\n        actions.loadInitialElementsPageRequest.match,\n    ], loadNextElementsPageSaga);\n}\n/**\n * @internal\n */\nexport function* loadNextElementsPageSaga(action) {\n    const context = yield call(getAttributeFilterContext);\n    if (actions.loadNextElementsPageCancelRequest.match(action) ||\n        actions.loadInitialElementsPageRequest.match(action)) {\n        // Saga was triggered by cancel request - do nothing, finally statement was already called, because takeLatest can run only one saga at a time === the previous one was canceled\n        return;\n    }\n    const { payload: { correlation }, } = action;\n    const hasNextPage = yield select(selectHasNextPage);\n    if (!hasNextPage) {\n        return;\n    }\n    try {\n        yield put(actions.loadNextElementsPageStart({ correlation }));\n        const loadOptions = yield select(selectLoadNextElementsPageOptions);\n        const elementsForm = yield select(selectElementsForm);\n        const loadOptionsWithExcludePrimaryLabel = Object.assign(Object.assign({}, loadOptions), { excludePrimaryLabel: !context.backend.capabilities.supportsElementUris && elementsForm === \"values\" });\n        const result = yield call(elementsSaga, loadOptionsWithExcludePrimaryLabel);\n        yield put(actions.loadNextElementsPageSuccess(Object.assign(Object.assign({}, result), { correlation })));\n    }\n    catch (error) {\n        yield put(actions.loadNextElementsPageError({\n            error,\n            correlation,\n        }));\n    }\n    finally {\n        if (yield cancelled()) {\n            yield put(actions.loadNextElementsPageCancel({ correlation }));\n        }\n    }\n}\n//# sourceMappingURL=loadNextElementsPageSaga.js.map","import { race, put, call, take, takeEvery, cancelled } from \"redux-saga/effects\";\nimport { elementsSaga } from \"../elements/elementsSaga.js\";\nimport { actions } from \"../store/slice.js\";\n/**\n * @internal\n */\nexport function* loadCustomElementsWorker() {\n    yield takeEvery([actions.loadCustomElementsRequest.match], loadCustomElementsSaga);\n}\n/**\n * @internal\n */\nexport function* loadCustomElementsSaga(action) {\n    const { payload: { correlation, options }, } = action;\n    try {\n        yield put(actions.loadCustomElementsStart({ correlation }));\n        const { result, canceled, anotherRequest, } = yield race({\n            result: call(elementsSaga, options),\n            anotherRequest: take((a) => actions.loadCustomElementsRequest.match(a) &&\n                (correlation ? a.payload.correlation === correlation : true)),\n            canceled: take((a) => actions.loadCustomElementsCancelRequest.match(a) &&\n                (correlation ? a.payload.correlation === correlation : true)),\n        });\n        if (result) {\n            yield put(actions.loadCustomElementsSuccess(Object.assign(Object.assign({}, result), { correlation })));\n            return result;\n        }\n        else if (canceled || anotherRequest) {\n            yield put(actions.loadCustomElementsCancel({ correlation }));\n        }\n    }\n    catch (error) {\n        yield put(actions.loadCustomElementsError({\n            error,\n            correlation,\n        }));\n    }\n    finally {\n        if (yield cancelled()) {\n            yield put(actions.loadCustomElementsCancel({ correlation }));\n        }\n    }\n}\n//# sourceMappingURL=loadCustomElementsSaga.js.map","import { fork, take, race } from \"redux-saga/effects\";\nimport { loadAttributeSaga } from \"../loadAttribute/loadAttributeSaga.js\";\nimport { actions } from \"../store/slice.js\";\n/**\n * @internal\n */\nexport function* initAttributeSaga(correlation) {\n    yield fork(loadAttributeSaga, actions.loadAttributeRequest({ correlation }));\n    const { error, } = yield race({\n        success: take((a) => actions.loadAttributeSuccess.match(a) && a.payload.correlation === correlation),\n        error: take((a) => actions.loadAttributeError.match(a) && a.payload.correlation === correlation),\n        cancel: take((a) => actions.loadAttributeCancel.match(a) && a.payload.correlation === correlation),\n    });\n    if (error) {\n        throw error.payload.error;\n    }\n}\n//# sourceMappingURL=initAttributeSaga.js.map","import { select, fork, take, race, call } from \"redux-saga/effects\";\nimport { isAttributeElementsByRef } from \"@gooddata/sdk-model\";\nimport { loadCustomElementsSaga } from \"../loadCustomElements/loadCustomElementsSaga.js\";\nimport { selectAttributeFilterElements } from \"../filter/filterSelectors.js\";\nimport { actions } from \"../store/slice.js\";\nimport { getAttributeFilterContext } from \"../common/sagas.js\";\nimport { selectElementsForm } from \"../common/selectors.js\";\n/**\n * @internal\n */\nexport function* initSelectionSaga(correlation) {\n    const elements = yield select(selectAttributeFilterElements);\n    const context = yield call(getAttributeFilterContext);\n    const elementsForm = yield select(selectElementsForm);\n    const elementKeys = isAttributeElementsByRef(elements) ? elements.uris : elements.values;\n    if (elementKeys.length === 0) {\n        return;\n    }\n    const initSelectionCorrelation = `initSelection_${correlation}`;\n    yield fork(loadCustomElementsSaga, actions.loadCustomElementsRequest({\n        options: {\n            elements,\n            offset: 0,\n            limit: 550,\n            search: undefined,\n            excludePrimaryLabel: !context.backend.capabilities.supportsElementUris && elementsForm === \"values\",\n        },\n        correlation: initSelectionCorrelation,\n    }));\n    const { error, } = yield race({\n        success: take((a) => actions.loadCustomElementsSuccess.match(a) &&\n            a.payload.correlation === initSelectionCorrelation),\n        error: take((a) => actions.loadCustomElementsError.match(a) &&\n            a.payload.correlation === initSelectionCorrelation),\n        cancel: take((a) => actions.loadCustomElementsCancel.match(a) &&\n            a.payload.correlation === initSelectionCorrelation),\n    });\n    if (error) {\n        throw error.payload.error;\n    }\n}\n//# sourceMappingURL=initSelectionSaga.js.map","import { fork, race, take } from \"redux-saga/effects\";\nimport { loadInitialElementsPageSaga } from \"../loadInitialElementsPage/loadInitialElementsPageSaga.js\";\nimport { actions } from \"../store/slice.js\";\n/**\n * @internal\n */\nexport function* initAttributeElementsPageSaga(correlation) {\n    yield fork(loadInitialElementsPageSaga, actions.loadInitialElementsPageRequest({ correlation }));\n    const { error, } = yield race({\n        success: take((a) => actions.loadInitialElementsPageSuccess.match(a) && a.payload.correlation === correlation),\n        error: take((a) => actions.loadInitialElementsPageError.match(a) && a.payload.correlation === correlation),\n        cancel: take((a) => actions.loadInitialElementsPageCancel.match(a) && a.payload.correlation === correlation),\n    });\n    if (error) {\n        throw error.payload.error;\n    }\n}\n//# sourceMappingURL=initElementsPageSaga.js.map","import { put, fork, race, take, call, select } from \"redux-saga/effects\";\nimport { loadCustomElementsSaga } from \"../loadCustomElements/loadCustomElementsSaga.js\";\nimport { actions } from \"../store/slice.js\";\nimport { getAttributeFilterContext } from \"../common/sagas.js\";\nimport { selectElementsForm } from \"../common/selectors.js\";\n/**\n * @internal\n */\nexport function* initTotalCountSaga(correlation) {\n    const initTotalCountCorrelation = `initTotalCount_${correlation}`;\n    const context = yield call(getAttributeFilterContext);\n    const elementsForm = yield select(selectElementsForm);\n    yield fork(loadCustomElementsSaga, actions.loadCustomElementsRequest({\n        options: {\n            limit: 1,\n            includeTotalCountWithoutFilters: true,\n            excludePrimaryLabel: !context.backend.capabilities.supportsElementUris && elementsForm === \"values\",\n        },\n        correlation: initTotalCountCorrelation,\n    }));\n    const { success, error, } = yield race({\n        success: take((a) => actions.loadCustomElementsSuccess.match(a) &&\n            a.payload.correlation === initTotalCountCorrelation),\n        error: take((a) => actions.loadCustomElementsError.match(a) &&\n            a.payload.correlation === initTotalCountCorrelation),\n        cancel: take((a) => actions.loadCustomElementsCancel.match(a) &&\n            a.payload.correlation === initTotalCountCorrelation),\n    });\n    if (error) {\n        throw error.payload.error;\n    }\n    else if (success) {\n        yield put(actions.setElementsTotalCount({\n            totalCount: success.payload.totalCount,\n        }));\n    }\n}\n//# sourceMappingURL=initTotalCount.js.map","// (C) 2022-2023 GoodData Corporation\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { attributeElementsIsEmpty, filterAttributeElements, isNegativeAttributeFilter, } from \"@gooddata/sdk-model\";\n/**\n * @internal\n */\nexport function isLimitingAttributeFiltersEmpty(limitingAttributeFilters) {\n    return (isEmpty(limitingAttributeFilters) ||\n        limitingAttributeFilters.every((limitingAttributeFilter) => isNegativeAttributeFilter(limitingAttributeFilter.attributeFilter)\n            ? attributeElementsIsEmpty(filterAttributeElements(limitingAttributeFilter.attributeFilter))\n            : false));\n}\n//# sourceMappingURL=utils.js.map","import { all, call, cancelled, put, select, takeLatest } from \"redux-saga/effects\";\nimport { actions } from \"../store/slice.js\";\nimport { selectHiddenElements } from \"../filter/filterSelectors.js\";\nimport { initAttributeSaga } from \"./initAttributeSaga.js\";\nimport { initSelectionSaga } from \"./initSelectionSaga.js\";\nimport { initAttributeElementsPageSaga } from \"./initElementsPageSaga.js\";\nimport { initTotalCountSaga } from \"./initTotalCount.js\";\nimport { selectLimitingAttributeFilters } from \"../elements/elementsSelectors.js\";\nimport { isLimitingAttributeFiltersEmpty } from \"../../../utils.js\";\n/**\n * @internal\n */\nexport function* initWorker() {\n    yield takeLatest(actions.init.match, initSaga);\n}\nfunction* initSaga(action) {\n    const { payload: { correlation }, } = action;\n    try {\n        yield put(actions.initStart({ correlation }));\n        const hiddenElements = yield select(selectHiddenElements);\n        const limitingFilters = yield select(selectLimitingAttributeFilters);\n        const loadTotal = !isLimitingAttributeFiltersEmpty(limitingFilters);\n        const sagas = [initSelectionSaga, initAttributeElementsPageSaga];\n        if ((hiddenElements === null || hiddenElements === void 0 ? void 0 : hiddenElements.length) > 0) {\n            // the rest need the attribute already loaded for the hiddenElements to work\n            yield call(initAttributeSaga, correlation);\n        }\n        else {\n            sagas.unshift(initAttributeSaga);\n        }\n        if (loadTotal) {\n            // total count without applying parent filter needs to be fetched separately.\n            // It is because the fact that when elements fetched filtered by parent selection, the includeTotalCountWithoutFilters: true option does not work, despite its name\n            sagas.push(initTotalCountSaga);\n        }\n        yield all(sagas.map((saga) => call(saga, correlation)));\n        yield put(actions.initSuccess({ correlation: correlation }));\n    }\n    catch (error) {\n        yield put(actions.initError({ error, correlation: correlation }));\n    }\n    finally {\n        if (yield cancelled()) {\n            yield all([put(actions.initCancel({ correlation: correlation }))]);\n        }\n    }\n}\n//# sourceMappingURL=initSaga.js.map","import { put, call, takeLatest, cancelled } from \"redux-saga/effects\";\nimport { actions } from \"../store/slice.js\";\nimport { initTotalCountSaga as initLoadTotalCountSaga } from \"../init/initTotalCount.js\";\n/**\n * @internal\n */\nexport function* initTotalCountWorker() {\n    yield takeLatest(actions.initTotalCount.match, initTotalCountSaga);\n}\nfunction* initTotalCountSaga(action) {\n    const { payload: { correlation }, } = action;\n    try {\n        yield put(actions.initTotalCountStart({ correlation }));\n        yield call(initLoadTotalCountSaga, correlation);\n        yield put(actions.initTotalCountSuccess({ correlation: correlation }));\n    }\n    catch (error) {\n        yield put(actions.initTotalCountError({ error, correlation: correlation }));\n    }\n    finally {\n        if (yield cancelled()) {\n            yield put(actions.initTotalCountCancel({ correlation: correlation }));\n        }\n    }\n}\n//# sourceMappingURL=initTotalCountSaga.js.map","import { all, fork } from \"redux-saga/effects\";\nimport { initWorker, loadAttributeWorker, loadInitialElementsPageWorker, loadNextElementsPageWorker, loadCustomElementsWorker, initTotalCountWorker, } from \"./sagas.js\";\nexport function* rootSaga() {\n    try {\n        yield all([\n            loadAttributeWorker,\n            loadInitialElementsPageWorker,\n            loadNextElementsPageWorker,\n            loadCustomElementsWorker,\n            initWorker,\n            initTotalCountWorker,\n        ].map((worker) => fork(worker)));\n    }\n    catch (e) {\n        console.error(\"Root saga failed\", e);\n    }\n}\n//# sourceMappingURL=rootSaga.js.map","// (C) 2022-2023 GoodData Corporation\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport defaultReduxSaga from \"redux-saga\";\nimport { actions, sliceReducer } from \"./slice.js\";\nimport { rootSaga } from \"./rootSaga.js\";\nimport { initialState } from \"./state.js\";\nimport { filterAttributeElements, filterObjRef, isAttributeElementsByValue, isNegativeAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { defaultImport } from \"default-import\";\nconst nonSerializableActions = [\n    actions.loadAttributeError.type,\n    actions.loadInitialElementsPageError.type,\n    actions.loadNextElementsPageError.type,\n    actions.loadCustomElementsError.type,\n    actions.initError.type,\n];\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst createSagaMiddleware = defaultImport(defaultReduxSaga);\n// We cannot handle event listeners inside saga, as once the root saga is canceled,\n// take effects are not working anymore, but we may want to listen for actions,\n// that can be fired even during the \"cleanup\" phase, after the cancelation.\nconst eventListeningMiddleware = (eventListener) => (store) => (next) => (action) => {\n    // First dispatch the action, so we have already updated store in the event listeners.\n    const result = next(action);\n    eventListener(result, (selector) => selector(store.getState()));\n    return result;\n};\n/**\n * @internal\n */\nexport function createAttributeFilterHandlerStore(context) {\n    const sagaMiddleware = createSagaMiddleware({\n        context: {\n            attributeFilterContext: context,\n        },\n    });\n    const displayFormRef = filterObjRef(context.attributeFilter);\n    const elements = filterAttributeElements(context.attributeFilter);\n    const elementsForm = isAttributeElementsByValue(elements) ? \"values\" : \"uris\";\n    const elementKeys = isAttributeElementsByValue(elements) ? elements.values : elements.uris;\n    const isInverted = isNegativeAttributeFilter(context.attributeFilter);\n    const store = configureStore({\n        preloadedState: Object.assign(Object.assign({}, initialState), { attribute: {\n                data: context.attribute,\n                status: \"success\",\n            }, displayFormRef,\n            elementsForm, selection: {\n                commited: {\n                    keys: elementKeys,\n                    isInverted,\n                },\n                working: {\n                    keys: elementKeys,\n                    isInverted,\n                },\n            }, config: {\n                hiddenElements: context.hiddenElements,\n                staticElements: context.staticElements,\n            } }),\n        reducer: sliceReducer,\n        middleware: (getDefaultMiddleware) => {\n            return getDefaultMiddleware({\n                thunk: false,\n                serializableCheck: {\n                    ignoredActions: nonSerializableActions,\n                    ignoredPaths: [\n                        \"initialization.error\",\n                        \"attribute.error\",\n                        \"elements.initialPageLoad.error\",\n                        \"elements.nextPageLoad.error\",\n                    ],\n                },\n            }).concat([sagaMiddleware, eventListeningMiddleware(context.eventListener)]);\n        },\n    });\n    const rootSagaTask = sagaMiddleware.run(rootSaga);\n    return {\n        context,\n        cancelRootSaga: () => {\n            rootSagaTask.cancel();\n        },\n        dispatch: (action) => {\n            store.dispatch(action);\n        },\n        select: (selector) => {\n            return selector(store.getState());\n        },\n    };\n}\n//# sourceMappingURL=createStore.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { selectState } from \"../common/selectors.js\";\n/**\n * @internal\n */\nexport const selectInitStatus = createSelector(selectState, (state) => state.initialization.status);\n/**\n * @internal\n */\nexport const selectInitError = createSelector(selectState, (state) => state.initialization.error);\n//# sourceMappingURL=initSelectors.js.map","// (C) 2021-2023 GoodData Corporation\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { selectState } from \"../common/selectors.js\";\n/**\n * @internal\n */\nexport const selectLoadInitialElementsPageStatus = createSelector(selectState, (state) => state.elements.initialPageLoad.status);\n/**\n * @internal\n */\nexport const selectLoadInitialElementsPageError = createSelector(selectState, (state) => state.elements.initialPageLoad.error);\n//# sourceMappingURL=loadInitialElementsPageSelectors.js.map","// (C) 2022 GoodData Corporation\nimport { actions, selectInvertableCommittedSelection, selectInvertableWorkingSelection, } from \"./redux/index.js\";\nconst newCallbackRegistrations = () => {\n    return {\n        // Init\n        initStart: newCallbackHandler(),\n        initSuccess: newCallbackHandler(),\n        initError: newCallbackHandler(),\n        initCancel: newCallbackHandler(),\n        // InitTotalCount\n        initTotalCountStart: newCallbackHandler(),\n        initTotalCountSuccess: newCallbackHandler(),\n        initTotalCountError: newCallbackHandler(),\n        initTotalCountCancel: newCallbackHandler(),\n        // Attribute\n        loadAttributeStart: newCallbackHandler(),\n        loadAttributeSuccess: newCallbackHandler(),\n        loadAttributeError: newCallbackHandler(),\n        loadAttributeCancel: newCallbackHandler(),\n        // Initial elements page\n        loadInitialElementsPageStart: newCallbackHandler(),\n        loadInitialElementsPageSuccess: newCallbackHandler(),\n        loadInitialElementsPageError: newCallbackHandler(),\n        loadInitialElementsPageCancel: newCallbackHandler(),\n        // Next elements page\n        loadNextElementsPageStart: newCallbackHandler(),\n        loadNextElementsPageSuccess: newCallbackHandler(),\n        loadNextElementsPageError: newCallbackHandler(),\n        loadNextElementsPageCancel: newCallbackHandler(),\n        // Custom elements\n        loadCustomElementsStart: newCallbackHandler(),\n        loadCustomElementsSuccess: newCallbackHandler(),\n        loadCustomElementsError: newCallbackHandler(),\n        loadCustomElementsCancel: newCallbackHandler(),\n        // Selection\n        selectionChanged: newCallbackHandler(),\n        selectionCommitted: newCallbackHandler(),\n        update: newCallbackHandler(),\n    };\n};\nconst newCallbackRegistrationsWithGlobalUnsubscribe = () => {\n    const registeredCallbacks = [];\n    const registrations = newCallbackRegistrations();\n    const registerCallback = (cb, registerFn) => {\n        const registeredCallback = registerFn.subscribe(cb);\n        registeredCallbacks.push(registeredCallback);\n        return registeredCallback;\n    };\n    const unsubscribeAll = () => {\n        registeredCallbacks.forEach((unsubscribe) => {\n            unsubscribe();\n        });\n    };\n    return {\n        registrations,\n        registerCallback,\n        unsubscribeAll,\n    };\n};\nfunction logError(activity, error) {\n    const cause = error.getCause();\n    const formattedCause = cause ? `\\nInner error: ${cause}` : \"\";\n    console.error(`Error while ${activity}: ${error.getMessage()}${formattedCause}`);\n}\n/**\n * @internal\n */\nexport const newAttributeFilterCallbacks = () => {\n    const { registerCallback, registrations, unsubscribeAll } = newCallbackRegistrationsWithGlobalUnsubscribe();\n    const eventListener = (action, select) => {\n        // Init\n        if (actions.initStart.match(action)) {\n            registrations.initStart.invoke(action.payload);\n        }\n        else if (actions.initSuccess.match(action)) {\n            registrations.initSuccess.invoke(action.payload);\n        }\n        else if (actions.initError.match(action)) {\n            logError(\"initializing\", action.payload.error);\n            registrations.initError.invoke(action.payload);\n        }\n        else if (actions.initCancel.match(action)) {\n            registrations.initCancel.invoke(action.payload);\n        }\n        // InitTotalCount\n        if (actions.initTotalCountStart.match(action)) {\n            registrations.initTotalCountStart.invoke(action.payload);\n        }\n        else if (actions.initTotalCountSuccess.match(action)) {\n            registrations.initTotalCountSuccess.invoke(action.payload);\n        }\n        else if (actions.initTotalCountError.match(action)) {\n            logError(\"initializing total count\", action.payload.error);\n            registrations.initTotalCountError.invoke(action.payload);\n        }\n        else if (actions.initTotalCountCancel.match(action)) {\n            registrations.initTotalCountCancel.invoke(action.payload);\n        }\n        // Attribute\n        if (actions.loadAttributeStart.match(action)) {\n            registrations.loadAttributeStart.invoke(action.payload);\n        }\n        else if (actions.loadAttributeSuccess.match(action)) {\n            registrations.loadAttributeSuccess.invoke(action.payload);\n        }\n        else if (actions.loadAttributeError.match(action)) {\n            logError(\"loading attribute\", action.payload.error);\n            registrations.loadAttributeError.invoke(action.payload);\n        }\n        else if (actions.loadAttributeCancel.match(action)) {\n            registrations.loadAttributeCancel.invoke(action.payload);\n        }\n        // Initial elements page\n        if (actions.loadInitialElementsPageStart.match(action)) {\n            registrations.loadInitialElementsPageStart.invoke(action.payload);\n        }\n        else if (actions.loadInitialElementsPageSuccess.match(action)) {\n            registrations.loadInitialElementsPageSuccess.invoke(action.payload);\n        }\n        else if (actions.loadInitialElementsPageError.match(action)) {\n            logError(\"loading initial elements page\", action.payload.error);\n            registrations.loadInitialElementsPageError.invoke(action.payload);\n        }\n        else if (actions.loadInitialElementsPageCancel.match(action)) {\n            registrations.loadInitialElementsPageCancel.invoke(action.payload);\n        }\n        // Next elements page\n        if (actions.loadNextElementsPageStart.match(action)) {\n            registrations.loadNextElementsPageStart.invoke(action.payload);\n        }\n        else if (actions.loadNextElementsPageSuccess.match(action)) {\n            registrations.loadNextElementsPageSuccess.invoke(action.payload);\n        }\n        else if (actions.loadNextElementsPageError.match(action)) {\n            logError(\"loading next elements page\", action.payload.error);\n            registrations.loadNextElementsPageError.invoke(action.payload);\n        }\n        else if (actions.loadNextElementsPageCancel.match(action)) {\n            registrations.loadNextElementsPageCancel.invoke(action.payload);\n        }\n        // Custom elements\n        if (actions.loadCustomElementsStart.match(action)) {\n            registrations.loadCustomElementsStart.invoke(action.payload);\n        }\n        else if (actions.loadCustomElementsSuccess.match(action)) {\n            registrations.loadCustomElementsSuccess.invoke(action.payload);\n        }\n        else if (actions.loadCustomElementsError.match(action)) {\n            logError(\"loading custom elements\", action.payload.error);\n            registrations.loadCustomElementsError.invoke(action.payload);\n        }\n        else if (actions.loadCustomElementsCancel.match(action)) {\n            registrations.loadCustomElementsCancel.invoke(action.payload);\n        }\n        // Selection\n        if ([\n            actions.changeSelection.match,\n            actions.revertSelection.match,\n            actions.invertSelection.match,\n            actions.clearSelection.match,\n        ].some((m) => m(action))) {\n            registrations.selectionChanged.invoke({\n                selection: select(selectInvertableWorkingSelection),\n            });\n        }\n        if (actions.commitSelection.match(action)) {\n            registrations.selectionCommitted.invoke({\n                selection: select(selectInvertableCommittedSelection),\n            });\n        }\n        if ([\n            actions.initStart.match,\n            actions.initSuccess.match,\n            actions.initError.match,\n            actions.initCancel.match,\n            actions.loadAttributeStart.match,\n            actions.loadAttributeSuccess.match,\n            actions.loadAttributeError.match,\n            actions.loadAttributeCancel.match,\n            actions.loadInitialElementsPageStart.match,\n            actions.loadInitialElementsPageSuccess.match,\n            actions.loadInitialElementsPageError.match,\n            actions.loadInitialElementsPageCancel.match,\n            actions.loadNextElementsPageStart.match,\n            actions.loadNextElementsPageSuccess.match,\n            actions.loadNextElementsPageError.match,\n            actions.loadNextElementsPageCancel.match,\n            actions.changeSelection.match,\n            actions.revertSelection.match,\n            actions.invertSelection.match,\n            actions.clearSelection.match,\n            actions.commitSelection.match,\n            actions.setLimit.match,\n            actions.setOrder.match,\n            actions.setSearch.match,\n            actions.setLimitingMeasures.match,\n            actions.setLimitingAttributeFilters.match,\n            actions.setLimitingDateFilters.match,\n        ].some((m) => m(action))) {\n            registrations.update.invoke();\n        }\n    };\n    return {\n        registrations,\n        registerCallback,\n        unsubscribeAll,\n        eventListener,\n    };\n};\n/**\n * @internal\n */\nfunction newCallbackHandler() {\n    let subscribers = [];\n    const subscribe = (cb) => {\n        subscribers.push(cb);\n        return function unsubscribe() {\n            subscribers = subscribers.filter((i) => i != cb);\n        };\n    };\n    const invoke = (payload) => {\n        subscribers.forEach((cb) => cb(payload));\n    };\n    return {\n        invoke,\n        subscribe,\n    };\n}\n//# sourceMappingURL=callbacks.js.map","// (C) 2022-2023 GoodData Corporation\nimport { invariant } from \"ts-invariant\";\nimport compact from \"lodash/compact.js\";\nimport { actions, createAttributeFilterHandlerStore, selectAttribute, selectElements, selectElementsTotalCount, selectElementsTotalCountWithCurrentSettings, selectAttributeFilter, selectSearch, selectWorkingSelection, selectCommittedSelection, selectElementsCache, getElementsByKeys, selectAttributeStatus, selectAttributeError, selectInitStatus, selectInitError, selectLoadInitialElementsPageStatus, selectLoadInitialElementsPageError, selectLoadNextElementsPageStatus, selectLoadNextElementsPageError, selectLimitingMeasures, selectLimitingAttributeFilters, selectLimitingDateFilters, selectLimit, selectOrder, selectInvertableCommittedSelection, selectInvertableWorkingSelection, selectIsWorkingSelectionChanged, selectIsWorkingSelectionEmpty, selectOffset, selectIsLoadElementsOptionsChanged, selectLimitingAttributeFiltersAttributes, selectInitTotalCountStatus, selectInitTotalCountError, } from \"./redux/index.js\";\nimport { newAttributeFilterCallbacks } from \"./callbacks.js\";\n/**\n * @internal\n */\nexport class AttributeFilterReduxBridge {\n    constructor(config) {\n        this.initializeBridge = () => {\n            this.callbacks = newAttributeFilterCallbacks();\n            this.redux = createAttributeFilterHandlerStore(Object.assign(Object.assign({}, this.config), { eventListener: (action, select) => {\n                    this.callbacks.eventListener(action, select);\n                } }));\n        };\n        //\n        // Init\n        //\n        this.init = (correlation) => {\n            this.redux.dispatch(actions.init({\n                correlation,\n            }));\n        };\n        this.getInitStatus = () => {\n            return this.redux.select(selectInitStatus);\n        };\n        this.getInitError = () => {\n            return this.redux.select(selectInitError);\n        };\n        this.onInitStart = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initStart);\n        };\n        this.onInitSuccess = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initSuccess);\n        };\n        this.onInitError = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initError);\n        };\n        this.onInitCancel = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initCancel);\n        };\n        // total count init\n        this.initTotalCount = (correlation) => {\n            this.redux.dispatch(actions.initTotalCount({\n                correlation,\n            }));\n        };\n        this.getInitTotalCountStatus = () => {\n            return this.redux.select(selectInitTotalCountStatus);\n        };\n        this.getInitTotalCountError = () => {\n            return this.redux.select(selectInitTotalCountError);\n        };\n        this.onInitTotalCountStart = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initTotalCountStart);\n        };\n        this.onInitTotalCountSuccess = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initTotalCountSuccess);\n        };\n        this.onInitTotalCountError = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initTotalCountError);\n        };\n        this.onInitTotalCountCancel = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.initTotalCountCancel);\n        };\n        //\n        // Attribute\n        //\n        this.loadAttribute = (correlation) => {\n            this.redux.dispatch(actions.loadAttributeRequest({ correlation: correlation }));\n        };\n        this.cancelAttributeLoad = () => {\n            this.redux.dispatch(actions.loadAttributeCancelRequest());\n        };\n        this.getAttribute = () => {\n            return this.redux.select(selectAttribute);\n        };\n        this.getAttributeStatus = () => {\n            return this.redux.select(selectAttributeStatus);\n        };\n        this.getAttributeError = () => {\n            return this.redux.select(selectAttributeError);\n        };\n        this.onLoadAttributeStart = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadAttributeStart);\n        };\n        this.onLoadAttributeSuccess = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadAttributeSuccess);\n        };\n        this.onLoadAttributeError = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadAttributeError);\n        };\n        this.onLoadAttributeCancel = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadAttributeCancel);\n        };\n        //\n        // Initial elements page\n        //\n        this.loadInitialElementsPage = (correlation) => {\n            this.redux.dispatch(actions.loadInitialElementsPageRequest({ correlation: correlation }));\n        };\n        this.cancelInitialElementsPageLoad = () => {\n            this.redux.dispatch(actions.loadInitialElementsPageCancelRequest());\n        };\n        this.getInitialElementsPageStatus = () => {\n            return this.redux.select(selectLoadInitialElementsPageStatus);\n        };\n        this.getInitialElementsPageError = () => {\n            return this.redux.select(selectLoadInitialElementsPageError);\n        };\n        this.onLoadInitialElementsPageStart = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadInitialElementsPageStart);\n        };\n        this.onLoadInitialElementsPageSuccess = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadInitialElementsPageSuccess);\n        };\n        this.onLoadInitialElementsPageError = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadInitialElementsPageError);\n        };\n        this.onLoadInitialElementsPageCancel = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadInitialElementsPageCancel);\n        };\n        //\n        // Next elements page\n        //\n        this.loadNextElementsPage = (correlation) => {\n            this.redux.dispatch(actions.loadNextElementsPageRequest({ correlation: correlation }));\n        };\n        this.getNextElementsPageStatus = () => {\n            return this.redux.select(selectLoadNextElementsPageStatus);\n        };\n        this.getNextElementsPageError = () => {\n            return this.redux.select(selectLoadNextElementsPageError);\n        };\n        this.onLoadNextElementsPageStart = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadNextElementsPageStart);\n        };\n        this.onLoadNextElementsPageSuccess = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadNextElementsPageSuccess);\n        };\n        this.onLoadNextElementsPageError = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadNextElementsPageError);\n        };\n        this.onLoadNextElementsPageCancel = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadNextElementsPageCancel);\n        };\n        //\n        // Custom elements\n        //\n        this.loadCustomElements = (options, correlation) => {\n            this.redux.dispatch(actions.loadCustomElementsRequest({ options, correlation: correlation }));\n        };\n        this.onLoadCustomElementsStart = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadCustomElementsStart);\n        };\n        this.onLoadCustomElementsSuccess = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadCustomElementsSuccess);\n        };\n        this.onLoadCustomElementsError = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadCustomElementsError);\n        };\n        this.onLoadCustomElementsCancel = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.loadCustomElementsCancel);\n        };\n        //\n        // Elements options\n        //\n        this.getOffset = () => {\n            return this.redux.select(selectOffset);\n        };\n        this.setSearch = (search) => {\n            this.redux.dispatch(actions.setSearch({ search }));\n        };\n        this.getSearch = () => {\n            return this.redux.select(selectSearch);\n        };\n        this.setLimit = (limit) => {\n            this.redux.dispatch(actions.setLimit({ limit }));\n        };\n        this.getLimit = () => {\n            return this.redux.select(selectLimit);\n        };\n        this.setOrder = (order) => {\n            this.redux.dispatch(actions.setOrder({ order }));\n        };\n        this.getOrder = () => {\n            return this.redux.select(selectOrder);\n        };\n        this.setLimitingMeasures = (filters) => {\n            this.redux.dispatch(actions.setLimitingMeasures({ filters }));\n        };\n        this.getLimitingMeasures = () => {\n            return this.redux.select(selectLimitingMeasures);\n        };\n        this.setLimitingAttributeFilters = (filters) => {\n            this.redux.dispatch(actions.setLimitingAttributeFilters({ filters }));\n        };\n        this.getLimitingAttributeFilters = () => {\n            return this.redux.select(selectLimitingAttributeFilters);\n        };\n        this.setLimitingDateFilters = (filters) => {\n            this.redux.dispatch(actions.setLimitingDateFilters({ filters }));\n        };\n        this.getLimitingDateFilters = () => {\n            return this.redux.select(selectLimitingDateFilters);\n        };\n        //\n        // Elements\n        //\n        this.getAllElements = () => {\n            return this.redux.select(selectElements);\n        };\n        this.getElementsByKey = (keys) => {\n            const elementsCache = this.redux.select(selectElementsCache);\n            return getElementsByKeys(keys, elementsCache);\n        };\n        this.getTotalCount = () => {\n            return this.redux.select(selectElementsTotalCount);\n        };\n        this.getTotalCountWithCurrentSettings = () => {\n            return this.redux.select(selectElementsTotalCountWithCurrentSettings);\n        };\n        this.getLimitingAttributeFiltersAttributes = () => {\n            return this.redux.select(selectLimitingAttributeFiltersAttributes);\n        };\n        //\n        // Multi select\n        //\n        this.changeMultiSelection = ({ keys, isInverted }) => {\n            this.redux.dispatch(actions.changeSelection({\n                selection: keys,\n                isInverted,\n            }));\n        };\n        this.revertMultiSelection = () => {\n            this.redux.dispatch(actions.revertSelection());\n        };\n        this.commitMultiSelection = () => {\n            this.redux.dispatch(actions.commitSelection());\n        };\n        this.invertMultiSelection = () => {\n            this.redux.dispatch(actions.invertSelection());\n        };\n        this.clearMultiSelection = () => {\n            this.redux.dispatch(actions.clearSelection());\n        };\n        this.getWorkingMultiSelection = () => {\n            return this.redux.select(selectInvertableWorkingSelection);\n        };\n        this.getCommittedMultiSelection = () => {\n            return this.redux.select(selectInvertableCommittedSelection);\n        };\n        // Single select\n        this.changeSingleSelection = (selection) => {\n            this.redux.dispatch(actions.changeSelection({\n                isInverted: false,\n                selection: compact([selection]),\n            }));\n        };\n        this.revertSingleSelection = () => {\n            this.redux.dispatch(actions.revertSelection());\n        };\n        this.commitSingleSelection = () => {\n            this.redux.dispatch(actions.commitSelection());\n        };\n        this.getWorkingSingleSelection = () => {\n            const [element, ...maybeMoreElements] = this.redux.select(selectWorkingSelection);\n            invariant(!maybeMoreElements.length, \"Trying to invoke single select method, but multiple elements are selected.\");\n            return element;\n        };\n        this.getCommittedSingleSelection = () => {\n            const [element, ...maybeMoreElements] = this.redux.select(selectCommittedSelection);\n            invariant(!maybeMoreElements.length, \"Trying to invoke single select method, but multiple elements are selected.\");\n            return element;\n        };\n        this.onMultiSelectionChanged = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.selectionChanged);\n        };\n        this.onMultiSelectionCommitted = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.selectionCommitted);\n        };\n        this.onSingleSelectionChanged = (cb) => {\n            return this.callbacks.registerCallback(({ selection }) => cb({ selection: selection.keys[0] }), this.callbacks.registrations.selectionChanged);\n        };\n        this.onSingleSelectionCommitted = (cb) => {\n            return this.callbacks.registerCallback(({ selection }) => cb({ selection: selection.keys[0] }), this.callbacks.registrations.selectionCommitted);\n        };\n        //\n        // Selection\n        //\n        this.getIsWorkingSelectionEmpty = () => {\n            return this.redux.select(selectIsWorkingSelectionEmpty);\n        };\n        this.getIsWorkingSelectionChanged = () => {\n            return this.redux.select(selectIsWorkingSelectionChanged);\n        };\n        //\n        // Filter\n        //\n        this.getFilter = () => {\n            return this.redux.select(selectAttributeFilter);\n        };\n        this.onUpdate = (cb) => {\n            return this.callbacks.registerCallback(cb, this.callbacks.registrations.update);\n        };\n        this.isLoadElementsOptionsChanged = () => {\n            return this.redux.select(selectIsLoadElementsOptionsChanged);\n        };\n        this.config = config;\n        this.initializeBridge();\n    }\n    cancelNextElementsPageLoad() {\n        this.redux.dispatch(actions.loadNextElementsPageCancelRequest());\n    }\n    cancelCustomElementsLoad(correlation) {\n        this.redux.dispatch(actions.loadCustomElementsCancelRequest({ correlation: correlation }));\n    }\n}\n//# sourceMappingURL=bridge.js.map","// (C) 2022 GoodData Corporation\nimport { v4 as uuid } from \"uuid\";\nimport { invariant } from \"ts-invariant\";\nimport { AttributeFilterReduxBridge } from \"./bridge.js\";\n/**\n * @internal\n */\nexport class AttributeFilterLoader {\n    constructor(config) {\n        this.validateStaticElementsLoad = () => {\n            var _a, _b, _c, _d, _e, _f;\n            invariant(!(((_a = this.config.staticElements) === null || _a === void 0 ? void 0 : _a.length) && ((_b = this.getLimitingAttributeFilters()) === null || _b === void 0 ? void 0 : _b.length)), \"Using limitingAttributeFilters is not supported when using static attribute elements\");\n            invariant(!(((_c = this.config.staticElements) === null || _c === void 0 ? void 0 : _c.length) && ((_d = this.getLimitingDateFilters()) === null || _d === void 0 ? void 0 : _d.length)), \"Using limitingDateFilters is not supported when using static attribute elements\");\n            invariant(!(((_e = this.config.staticElements) === null || _e === void 0 ? void 0 : _e.length) && ((_f = this.getLimitingMeasures()) === null || _f === void 0 ? void 0 : _f.length)), \"Using limitingMeasures is not supported when using static attribute elements\");\n        };\n        //\n        // Init\n        //\n        this.init = (correlation = uuid()) => {\n            this.validateStaticElementsLoad();\n            this.bridge.init(correlation);\n        };\n        this.onInitStart = (cb) => {\n            return this.bridge.onInitStart(cb);\n        };\n        this.onInitSuccess = (cb) => {\n            return this.bridge.onInitSuccess(cb);\n        };\n        this.onInitError = (cb) => {\n            return this.bridge.onInitError(cb);\n        };\n        this.onInitCancel = (cb) => {\n            return this.bridge.onInitCancel(cb);\n        };\n        this.getInitStatus = () => {\n            return this.bridge.getInitStatus();\n        };\n        this.getInitError = () => {\n            return this.bridge.getInitError();\n        };\n        //\n        // Init total count\n        //\n        this.initTotalCount = (correlation = uuid()) => {\n            this.bridge.initTotalCount(correlation);\n        };\n        this.getInitTotalCountStatus = () => {\n            return this.bridge.getInitTotalCountStatus();\n        };\n        this.getInitTotalCountError = () => {\n            return this.bridge.getInitTotalCountError();\n        };\n        this.onInitTotalCountStart = (cb) => {\n            return this.bridge.onInitTotalCountStart(cb);\n        };\n        this.onInitTotalCountSuccess = (cb) => {\n            return this.bridge.onInitTotalCountSuccess(cb);\n        };\n        this.onInitTotalCountError = (cb) => {\n            return this.bridge.onInitTotalCountError(cb);\n        };\n        this.onInitTotalCountCancel = (cb) => {\n            return this.bridge.onInitTotalCountCancel(cb);\n        };\n        //\n        // Attribute\n        //\n        this.loadAttribute = (correlation = uuid()) => {\n            this.bridge.loadAttribute(correlation);\n        };\n        this.cancelAttributeLoad = () => {\n            this.bridge.cancelAttributeLoad();\n        };\n        this.getAttribute = () => {\n            return this.bridge.getAttribute();\n        };\n        this.getAttributeError = () => {\n            return this.bridge.getAttributeError();\n        };\n        this.getAttributeStatus = () => {\n            return this.bridge.getAttributeStatus();\n        };\n        this.onLoadAttributeStart = (cb) => {\n            return this.bridge.onLoadAttributeStart(cb);\n        };\n        this.onLoadAttributeSuccess = (cb) => {\n            return this.bridge.onLoadAttributeSuccess(cb);\n        };\n        this.onLoadAttributeError = (cb) => {\n            return this.bridge.onLoadAttributeError(cb);\n        };\n        this.onLoadAttributeCancel = (cb) => {\n            return this.bridge.onLoadAttributeCancel(cb);\n        };\n        // Initial elements page\n        this.loadInitialElementsPage = (correlation = uuid()) => {\n            invariant(this.bridge.getInitStatus() === \"success\", \"Cannot call loadInitialElementsPage() before successful initialization.\");\n            this.validateStaticElementsLoad();\n            this.bridge.loadInitialElementsPage(correlation);\n        };\n        this.getInitialElementsPageStatus = () => {\n            return this.bridge.getInitialElementsPageStatus();\n        };\n        this.getInitialElementsPageError = () => {\n            return this.bridge.getInitialElementsPageError();\n        };\n        this.onLoadInitialElementsPageStart = (cb) => {\n            return this.bridge.onLoadInitialElementsPageStart(cb);\n        };\n        this.onLoadInitialElementsPageSuccess = (cb) => {\n            return this.bridge.onLoadInitialElementsPageSuccess(cb);\n        };\n        this.onLoadInitialElementsPageError = (cb) => {\n            return this.bridge.onLoadInitialElementsPageError(cb);\n        };\n        this.onLoadInitialElementsPageCancel = (cb) => {\n            return this.bridge.onLoadInitialElementsPageCancel(cb);\n        };\n        //\n        // Next elements page\n        //\n        this.loadNextElementsPage = (correlation = uuid()) => {\n            invariant(this.bridge.getInitStatus() === \"success\", \"Cannot call loadNextElementsPage() before successful initialization.\");\n            invariant(this.bridge.getInitialElementsPageStatus() === \"success\", \"Cannot call loadNextElementsPage() before loadInitialElementsPage() completes.\");\n            invariant(!this.bridge.isLoadElementsOptionsChanged(), \"Cannot call loadNextElementsPage() when load element options were changed. When options are changed, you should call loadInitialElementsPage() first.\");\n            this.bridge.loadNextElementsPage(correlation);\n        };\n        this.getNextElementsPageStatus = () => {\n            return this.bridge.getNextElementsPageStatus();\n        };\n        this.getNextElementsPageError = () => {\n            return this.bridge.getNextElementsPageError();\n        };\n        this.onLoadNextElementsPageStart = (cb) => {\n            return this.bridge.onLoadNextElementsPageStart(cb);\n        };\n        this.onLoadNextElementsPageSuccess = (cb) => {\n            return this.bridge.onLoadNextElementsPageSuccess(cb);\n        };\n        this.onLoadNextElementsPageError = (cb) => {\n            return this.bridge.onLoadNextElementsPageError(cb);\n        };\n        this.onLoadNextElementsPageCancel = (cb) => {\n            return this.bridge.onLoadNextElementsPageCancel(cb);\n        };\n        //\n        // Custom elements\n        //\n        this.loadCustomElements = (options, correlation) => {\n            this.bridge.loadCustomElements(options, correlation);\n        };\n        this.onLoadCustomElementsStart = (cb) => {\n            return this.bridge.onLoadCustomElementsStart(cb);\n        };\n        this.onLoadCustomElementsSuccess = (cb) => {\n            return this.bridge.onLoadCustomElementsSuccess(cb);\n        };\n        this.onLoadCustomElementsError = (cb) => {\n            return this.bridge.onLoadCustomElementsError(cb);\n        };\n        this.onLoadCustomElementsCancel = (cb) => {\n            return this.bridge.onLoadCustomElementsCancel(cb);\n        };\n        // Elements options\n        this.getOffset = () => {\n            return this.bridge.getOffset();\n        };\n        this.setSearch = (search) => {\n            this.bridge.setSearch(search);\n        };\n        this.getSearch = () => {\n            return this.bridge.getSearch();\n        };\n        this.setLimit = (limit) => {\n            this.bridge.setLimit(limit);\n        };\n        this.getLimit = () => {\n            return this.bridge.getLimit();\n        };\n        this.setOrder = (order) => {\n            this.bridge.setOrder(order);\n        };\n        this.getOrder = () => {\n            return this.bridge.getOrder();\n        };\n        this.setLimitingMeasures = (measures) => {\n            this.bridge.setLimitingMeasures(measures);\n        };\n        this.getLimitingMeasures = () => {\n            return this.bridge.getLimitingMeasures();\n        };\n        this.setLimitingAttributeFilters = (filters) => {\n            this.bridge.setLimitingAttributeFilters(filters);\n        };\n        this.getLimitingAttributeFilters = () => {\n            return this.bridge.getLimitingAttributeFilters();\n        };\n        this.setLimitingDateFilters = (filters) => {\n            this.bridge.setLimitingDateFilters(filters);\n        };\n        this.getLimitingDateFilters = () => {\n            return this.bridge.getLimitingDateFilters();\n        };\n        this.getAllElements = () => {\n            return this.bridge.getAllElements();\n        };\n        this.getElementsByKey = (keys) => {\n            return this.bridge.getElementsByKey(keys);\n        };\n        this.getTotalElementsCount = () => {\n            return this.bridge.getTotalCount();\n        };\n        this.getTotalElementsCountWithCurrentSettings = () => {\n            return this.bridge.getTotalCountWithCurrentSettings();\n        };\n        this.getLimitingAttributeFiltersAttributes = () => {\n            return this.bridge.getLimitingAttributeFiltersAttributes();\n        };\n        this.getFilter = () => {\n            return this.bridge.getFilter();\n        };\n        this.onUpdate = (cb) => {\n            return this.bridge.onUpdate(cb);\n        };\n        this.config = config;\n        this.bridge = new AttributeFilterReduxBridge(config);\n    }\n    cancelInitialElementsPageLoad() {\n        this.bridge.cancelInitialElementsPageLoad();\n    }\n    cancelNextElementsPageLoad() {\n        this.bridge.cancelNextElementsPageLoad();\n    }\n    cancelCustomElementsLoad(correlation) {\n        this.bridge.cancelCustomElementsLoad(correlation);\n    }\n}\n//# sourceMappingURL=loader.js.map","import { AttributeFilterLoader } from \"./loader.js\";\n/**\n * @internal\n */\nexport class MultiSelectAttributeFilterHandler extends AttributeFilterLoader {\n    constructor(config) {\n        super(config);\n        // manipulators\n        this.changeSelection = (selection) => {\n            this.bridge.changeMultiSelection(selection);\n        };\n        this.revertSelection = () => {\n            this.bridge.revertMultiSelection();\n        };\n        this.commitSelection = () => {\n            this.bridge.commitMultiSelection();\n        };\n        this.invertSelection = () => {\n            this.bridge.invertMultiSelection();\n        };\n        this.clearSelection = () => {\n            this.bridge.clearMultiSelection();\n        };\n        // selectors\n        this.getWorkingSelection = () => {\n            return this.bridge.getWorkingMultiSelection();\n        };\n        this.isWorkingSelectionEmpty = () => {\n            return this.bridge.getIsWorkingSelectionEmpty();\n        };\n        this.isWorkingSelectionChanged = () => {\n            return this.bridge.getIsWorkingSelectionChanged();\n        };\n        this.getCommittedSelection = () => {\n            return this.bridge.getCommittedMultiSelection();\n        };\n        // callbacks\n        this.onSelectionChanged = (cb) => {\n            return this.bridge.onMultiSelectionChanged(cb);\n        };\n        this.onSelectionCommitted = (cb) => {\n            return this.bridge.onMultiSelectionCommitted(cb);\n        };\n    }\n}\n//# sourceMappingURL=multiSelectHandler.js.map","// (C) 2022 GoodData Corporation\nimport { filterObjRef, newNegativeAttributeFilter, newPositiveAttributeFilter, filterAttributeElements, isAttributeElementsByRef, isPositiveAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { AttributeFilterLoader } from \"./loader.js\";\n/**\n * @internal\n */\nexport class SingleSelectAttributeFilterHandler extends AttributeFilterLoader {\n    static sanitizeConfig(config) {\n        const elements = filterAttributeElements(config.attributeFilter);\n        const keys = isAttributeElementsByRef(elements) ? elements.uris : elements.values;\n        const firstItem = keys[0];\n        const sanitizedItems = isAttributeElementsByRef(elements)\n            ? { uris: [firstItem] }\n            : { values: [firstItem] };\n        return Object.assign(Object.assign({}, config), { attributeFilter: isPositiveAttributeFilter(config.attributeFilter)\n                ? newPositiveAttributeFilter(filterObjRef(config.attributeFilter), sanitizedItems)\n                : newNegativeAttributeFilter(filterObjRef(config.attributeFilter), sanitizedItems) });\n    }\n    constructor(config) {\n        super(SingleSelectAttributeFilterHandler.sanitizeConfig(config));\n        // manipulators\n        this.changeSelection = (selection) => {\n            this.bridge.changeSingleSelection(selection);\n        };\n        this.revertSelection = () => {\n            this.bridge.revertSingleSelection();\n        };\n        this.commitSelection = () => {\n            this.bridge.commitSingleSelection();\n        };\n        // selectors\n        this.getWorkingSelection = () => {\n            return this.bridge.getWorkingSingleSelection();\n        };\n        this.isWorkingSelectionEmpty = () => {\n            return this.bridge.getIsWorkingSelectionEmpty();\n        };\n        this.isWorkingSelectionChanged = () => {\n            return this.bridge.getIsWorkingSelectionChanged();\n        };\n        this.getCommittedSelection = () => {\n            return this.bridge.getCommittedSingleSelection();\n        };\n        // callbacks\n        this.onSelectionChanged = (cb) => {\n            return this.bridge.onSingleSelectionChanged(cb);\n        };\n        this.onSelectionCommitted = (cb) => {\n            return this.bridge.onSingleSelectionCommitted(cb);\n        };\n    }\n}\n//# sourceMappingURL=singleSelectHandler.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useRef, useState, useCallback } from \"react\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { usePrevious } from \"@gooddata/sdk-ui\";\nimport { filterObjRef } from \"@gooddata/sdk-model\";\nimport { newAttributeFilterHandler, } from \"../../AttributeFilterHandler/index.js\";\n/**\n * Hook for retrieving AttributeFilterHandler {@link IMultiSelectAttributeFilterHandler} Core API for Attribute Filter components.\n * This hook is responsible for initialization of the AttributeFilterHandler.\n * @beta\n */\nexport const useAttributeFilterHandler = (props) => {\n    const { backend, workspace, filter, attribute, hiddenElements, staticElements, } = props;\n    console.log(\"useAttributeFilterHandler\", { props });\n    const [, setInvalidate] = useState(0);\n    const invalidate = () => {\n        setInvalidate((s) => s + 1);\n    };\n    const handlerRef = useRef();\n    const createNewHandler = useCallback(() => {\n        const newHandler = newAttributeFilterHandler(backend.withTelemetry(\"AttributeFilter\", { workspace, filter, hiddenElements, staticElements }), workspace, filter, {\n            attribute,\n            selectionMode: \"multi\",\n            hiddenElements,\n            staticElements,\n        });\n        handlerRef.current = newHandler;\n    }, [backend, workspace, filter, hiddenElements, staticElements, attribute]);\n    if (!handlerRef.current) {\n        createNewHandler();\n    }\n    const handler = handlerRef.current;\n    const prevProps = usePrevious(props);\n    useEffect(() => {\n        const unsubscribe = handler.onUpdate(() => {\n            invalidate();\n        });\n        if (backend !== prevProps.backend ||\n            workspace !== prevProps.workspace ||\n            !isEqual(filterObjRef(filter), filterObjRef(handler.getFilter())) ||\n            !isEqual(staticElements, prevProps.staticElements) ||\n            !isEqual(hiddenElements, prevProps.hiddenElements)) {\n            createNewHandler();\n            invalidate();\n        }\n        return () => {\n            unsubscribe();\n        };\n    }, [backend, workspace, filter, staticElements, hiddenElements, prevProps, handler, createNewHandler]);\n    return handler;\n};\n//# sourceMappingURL=useAttributeFilterHandler.js.map","/**\n * @internal\n */\nexport const SEARCH_CORRELATION = \"search\";\n/**\n * @internal\n */\nexport const RESET_CORRELATION = \"reset\";\n/**\n * @internal\n */\nexport const PARENT_FILTERS_CORRELATION = \"parentFilters\";\n/**\n * @internal\n */\nexport const MAX_SELECTION_SIZE = 500;\n//# sourceMappingURL=constants.js.map","// (C) 2022-2023 GoodData Corporation\nimport { useCallback, useEffect } from \"react\";\nimport isEqual from \"lodash/isEqual.js\";\nimport debounce from \"lodash/debounce.js\";\nimport { filterAttributeElements, isAttributeElementsByRef, isAttributeElementsByValue, isNegativeAttributeFilter, } from \"@gooddata/sdk-model\";\nimport { useBackendStrict, useWorkspaceStrict, UnexpectedSdkError } from \"@gooddata/sdk-ui\";\nimport { useResolveFilterInput } from \"./useResolveFilterInput.js\";\nimport { useResolveParentFiltersInput } from \"./useResolveParentFiltersInput.js\";\nimport { useAttributeFilterHandler } from \"./useAttributeFilterHandler.js\";\nimport { useAttributeFilterControllerData } from \"./useAttributeFilterControllerData.js\";\nimport { PARENT_FILTERS_CORRELATION, RESET_CORRELATION, SEARCH_CORRELATION } from \"./constants.js\";\nimport { isValidSingleSelectionFilter } from \"../utils.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\n/**\n * UseAttributeFilterController hook is responsible for initialization of AttributeFilterHandler {@link IMultiSelectAttributeFilterHandler} Core API for Attribute Filter components\n *\n * @remarks\n * You can access AttributeFilter state and callbacks ({@link AttributeFilterController})\n *\n * This is the best option if you need to implement fully custom UI for the attribute filter. This option requires a bit more coding, but you have a full control over the UI.\n * It has identical convenient API as AttributeFilter component - same input props and same output props that are available in the internal context of the AttributeFilter component.\n * It works out of the box with other UI.SDK things - {@link @gooddata/sdk-ui#BackendProvider}, {@link @gooddata/sdk-ui#WorkspaceProvider} and visualization definition placeholders.\n *\n * @public\n */\nexport const useAttributeFilterController = (props) => {\n    const { backend: backendInput, workspace: workspaceInput, filter: filterInput, connectToPlaceholder, parentFilters, parentFilterOverAttribute, resetOnParentFilterChange = true, onApply, onError, hiddenElements, staticElements, elementsOptions, selectionMode = \"multi\", selectFirst = false, attribute, } = props;\n    const backend = useBackendStrict(backendInput, \"AttributeFilter\");\n    const workspace = useWorkspaceStrict(workspaceInput, \"AttributeFilter\");\n    const { filter, setConnectedPlaceholderValue } = useResolveFilterInput(filterInput, connectToPlaceholder);\n    const limitingAttributeFilters = useResolveParentFiltersInput(parentFilters, parentFilterOverAttribute);\n    const handler = useAttributeFilterHandler({\n        backend,\n        filter,\n        workspace,\n        hiddenElements,\n        staticElements,\n        attribute,\n    });\n    const attributeFilterControllerData = useAttributeFilterControllerData(handler);\n    const forcedInitErrorProp = isValidSingleSelectionFilter(selectionMode, filter, limitingAttributeFilters)\n        ? {}\n        : { initError: new UnexpectedSdkError() };\n    useOnError(handler, { onError });\n    useInitOrReload(handler, {\n        filter,\n        limitingAttributeFilters,\n        limit: elementsOptions === null || elementsOptions === void 0 ? void 0 : elementsOptions.limit,\n        onApply,\n        setConnectedPlaceholderValue,\n        resetOnParentFilterChange,\n        selectionMode,\n    });\n    const callbacks = useCallbacks(handler, { onApply, setConnectedPlaceholderValue, selectionMode });\n    useSingleSelectModeHandler(handler, {\n        selectFirst,\n        onApply: callbacks.onApply,\n        selectionMode,\n    });\n    return Object.assign(Object.assign(Object.assign({}, attributeFilterControllerData), callbacks), forcedInitErrorProp);\n};\n//\nfunction useOnError(handler, props) {\n    const { onError } = props;\n    useEffect(() => {\n        function handleError(payload) {\n            onError === null || onError === void 0 ? void 0 : onError(payload.error);\n        }\n        const callbackUnsubscribeFunctions = [\n            handler.onInitError(handleError),\n            handler.onLoadAttributeError(handleError),\n            handler.onLoadInitialElementsPageError(handleError),\n            handler.onLoadNextElementsPageError(handleError),\n            handler.onLoadCustomElementsError(handleError),\n        ];\n        return () => {\n            callbackUnsubscribeFunctions.forEach((unsubscribe) => {\n                unsubscribe();\n            });\n        };\n    }, [handler, onError]);\n}\n//\nfunction useInitOrReload(handler, props) {\n    const { filter, limitingAttributeFilters, limit, resetOnParentFilterChange, setConnectedPlaceholderValue, onApply, selectionMode, } = props;\n    useEffect(() => {\n        if (limitingAttributeFilters.length > 0) {\n            handler.setLimitingAttributeFilters(limitingAttributeFilters);\n        }\n        if (limit) {\n            handler.setLimit(limit);\n        }\n        handler.init();\n        // Change of the parent filters is resolved in the useEffect bellow,\n        // it does not need full reinit.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [handler]);\n    useEffect(() => {\n        const limitingAttributesChanged = !isEqual(limitingAttributeFilters, handler.getLimitingAttributeFilters());\n        const filterChanged = !isEqual(filter, handler.getFilter());\n        const props = {\n            filter,\n            limitingAttributeFilters,\n            limitingAttributesChanged,\n            filterChanged,\n            setConnectedPlaceholderValue,\n            onApply,\n            selectionMode,\n        };\n        const change = resetOnParentFilterChange\n            ? updateAutomaticResettingFilter(handler, props)\n            : updateNonResettingFilter(handler, props);\n        refreshByType(handler, change);\n    }, [\n        filter,\n        limitingAttributeFilters,\n        resetOnParentFilterChange,\n        handler,\n        onApply,\n        setConnectedPlaceholderValue,\n        selectionMode,\n    ]);\n}\nfunction updateNonResettingFilter(handler, { filter, limitingAttributeFilters, limitingAttributesChanged, filterChanged, setConnectedPlaceholderValue, }) {\n    if (limitingAttributesChanged || filterChanged) {\n        const elements = filterAttributeElements(filter);\n        const keys = isAttributeElementsByValue(elements) ? elements.values : elements.uris;\n        const isInverted = isNegativeAttributeFilter(filter);\n        handler.changeSelection({ keys, isInverted });\n        handler.setLimitingAttributeFilters(limitingAttributeFilters);\n        handler.commitSelection();\n        const nextFilter = handler.getFilter();\n        setConnectedPlaceholderValue(nextFilter);\n        if (limitingAttributesChanged) {\n            return \"init-parent\";\n        }\n        return \"init-self\";\n    }\n    return undefined;\n}\nfunction updateAutomaticResettingFilter(handler, { filter, limitingAttributeFilters, limitingAttributesChanged, filterChanged, setConnectedPlaceholderValue, onApply, selectionMode, }) {\n    var _a;\n    if (limitingAttributesChanged) {\n        handler.changeSelection({ keys: [], isInverted: selectionMode !== \"single\" });\n        handler.setLimitingAttributeFilters(limitingAttributeFilters);\n        // the next lines are to apply selection to the state of the parent component to make the\n        // new attribute filter state persistent\n        handler.commitSelection();\n        //if filters are controlled from outside, do not call this kind of update because is already updated by controlled app\n        const nextFilter = handler.getFilter();\n        const isInverted = (_a = handler.getCommittedSelection()) === null || _a === void 0 ? void 0 : _a.isInverted;\n        setConnectedPlaceholderValue(nextFilter);\n        onApply === null || onApply === void 0 ? void 0 : onApply(nextFilter, isInverted);\n        return \"init-parent\";\n    }\n    if (filterChanged) {\n        const elements = filterAttributeElements(filter);\n        const keys = isAttributeElementsByValue(elements) ? elements.values : elements.uris;\n        const isInverted = isNegativeAttributeFilter(filter);\n        handler.changeSelection({ keys, isInverted });\n        handler.commitSelection();\n        return \"init-self\";\n    }\n    return undefined;\n}\nfunction refreshByType(handler, change) {\n    if (change === \"init-parent\") {\n        if (handler.getInitStatus() !== \"success\") {\n            handler.init(PARENT_FILTERS_CORRELATION);\n        }\n        else {\n            handler.initTotalCount(PARENT_FILTERS_CORRELATION);\n            handler.loadInitialElementsPage(PARENT_FILTERS_CORRELATION);\n        }\n    }\n    if (change === \"init-self\") {\n        handler.init();\n    }\n}\n//\nfunction useCallbacks(handler, props) {\n    const { onApply: onApplyInput, setConnectedPlaceholderValue, selectionMode } = props;\n    const onSelect = useCallback((selectedItems, isInverted) => {\n        const attributeFilter = handler.getFilter();\n        const isElementsByRef = isAttributeElementsByRef(filterAttributeElements(attributeFilter));\n        const keys = selectedItems.map((item) => (isElementsByRef ? item.uri : item.title));\n        handler.changeSelection({ keys, isInverted });\n    }, [handler]);\n    // Rule is not working with debounce\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const onSearch = useCallback(debounce((search) => {\n        if (handler.getSearch() !== search) {\n            handler.setSearch(search);\n            handler.loadInitialElementsPage(SEARCH_CORRELATION);\n        }\n    }, 200), [handler]);\n    const onLoadNextElementsPage = useCallback(() => {\n        handler.loadNextElementsPage();\n    }, [handler]);\n    const onReset = useCallback(() => {\n        handler.revertSelection();\n        if (handler.getSearch().length > 0) {\n            handler.setSearch(\"\");\n            handler.loadInitialElementsPage(RESET_CORRELATION);\n        }\n    }, [handler]);\n    const onApply = useCallback(() => {\n        var _a;\n        handler.commitSelection();\n        const nextFilter = handler.getFilter();\n        const isInverted = (_a = handler.getCommittedSelection()) === null || _a === void 0 ? void 0 : _a.isInverted;\n        setConnectedPlaceholderValue(nextFilter);\n        onApplyInput === null || onApplyInput === void 0 ? void 0 : onApplyInput(nextFilter, isInverted, selectionMode);\n    }, [onApplyInput, setConnectedPlaceholderValue, handler, selectionMode]);\n    return {\n        onApply,\n        onLoadNextElementsPage,\n        onSearch,\n        onSelect,\n        onReset,\n    };\n}\n//\nconst useSingleSelectModeHandler = (handler, props) => {\n    const { selectFirst, selectionMode, onApply } = props;\n    const committedSelectionKeys = handler.getCommittedSelection().keys;\n    const initialElementsPageStatus = handler.getInitialElementsPageStatus();\n    const elements = handler.getAllElements();\n    const filter = handler.getFilter();\n    useEffect(() => {\n        if (selectFirst &&\n            selectionMode === \"single\" &&\n            isEmpty(committedSelectionKeys) &&\n            initialElementsPageStatus === \"success\" &&\n            !isEmpty(elements)) {\n            const isElementsByRef = isAttributeElementsByRef(filterAttributeElements(filter));\n            const keys = [isElementsByRef ? elements[0].uri : elements[0].title];\n            handler.changeSelection({ keys, isInverted: false });\n            handler.commitSelection();\n            onApply();\n        }\n    }, [\n        selectFirst,\n        selectionMode,\n        committedSelectionKeys,\n        initialElementsPageStatus,\n        elements,\n        filter,\n        handler,\n        onApply,\n    ]);\n};\n//# sourceMappingURL=useAttributeFilterController.js.map","import { MultiSelectAttributeFilterHandler, SingleSelectAttributeFilterHandler } from \"./internal/index.js\";\n/**\n * @public\n */\nexport function newAttributeFilterHandler(backend, workspace, attributeFilter, options = { selectionMode: \"multi\" }) {\n    const { selectionMode, hiddenElements, staticElements, attribute } = options;\n    if (selectionMode === \"multi\") {\n        return new MultiSelectAttributeFilterHandler({\n            backend,\n            workspace,\n            attributeFilter,\n            hiddenElements,\n            staticElements,\n            attribute,\n        });\n    }\n    return new SingleSelectAttributeFilterHandler({\n        backend,\n        workspace,\n        attributeFilter,\n        hiddenElements,\n        staticElements,\n        attribute,\n    });\n}\n//# sourceMappingURL=factory.js.map","// (C) 2022 GoodData Corporation\nimport { useState, useEffect } from \"react\";\nimport { isLimitingAttributeFiltersEmpty, } from \"../../AttributeFilterHandler/index.js\";\nimport { useAttributeFilterHandlerState } from \"./useAttributeFilterHandlerState.js\";\nimport { MAX_SELECTION_SIZE, PARENT_FILTERS_CORRELATION } from \"./constants.js\";\nimport { filterObjRef } from \"@gooddata/sdk-model\";\n/**\n * @internal\n */\nexport function useAttributeFilterControllerData(handler) {\n    var _a;\n    const handlerState = useAttributeFilterHandlerState(handler);\n    const initStatus = handlerState.initialization.status;\n    const initError = handlerState.initialization.error;\n    const isInitializing = initStatus === \"loading\";\n    const attribute = handlerState.attribute.data;\n    const initialElementsPageStatus = handlerState.elements.initialPageLoad.status;\n    const initialElementsPageError = handlerState.elements.initialPageLoad.error;\n    const isLoadingInitialElementsPage = initialElementsPageStatus === \"loading\";\n    const nextElementsPageStatus = handlerState.elements.nextPageLoad.status;\n    const nextElementsPageError = handlerState.elements.nextPageLoad.error;\n    const isLoadingNextElementsPage = nextElementsPageStatus === \"loading\";\n    const elements = handlerState.elements.data;\n    const totalElementsCount = handlerState.elements.totalCount;\n    const totalElementsCountWithCurrentSettings = handlerState.elements.totalCountWithCurrentSettings;\n    const isWorkingSelectionChanged = handlerState.selection.working.isChanged;\n    const isWorkingSelectionEmpty = handlerState.selection.working.isEmpty;\n    const isWorkingSelectionInverted = handlerState.selection.working.isInverted;\n    const workingSelectionElements = handlerState.selection.working.elements;\n    const isCommittedSelectionInverted = handlerState.selection.committed.isInverted;\n    const committedSelectionElements = handlerState.selection.committed.elements;\n    const searchString = handlerState.elements.options.search;\n    const limit = handlerState.elements.options.limit;\n    const limitingAttributeFilters = handlerState.elements.options.limitingAttributeFilters;\n    const hasNextElementsPage = elements.length < totalElementsCountWithCurrentSettings;\n    const nextElementsPageSize = hasNextElementsPage\n        ? Math.min(limit, totalElementsCountWithCurrentSettings - elements.length)\n        : 0;\n    const isApplyDisabled = workingSelectionElements.length > MAX_SELECTION_SIZE ||\n        !isWorkingSelectionChanged ||\n        (!isWorkingSelectionInverted && isWorkingSelectionEmpty);\n    const isParentFiltersEmpty = isLimitingAttributeFiltersEmpty(limitingAttributeFilters);\n    const isFilteredByParentFilters = initialElementsPageStatus === \"success\" && !isParentFiltersEmpty;\n    const isFiltering = useIsFiltering(handler);\n    const parentFilterAttributes = handler.getLimitingAttributeFiltersAttributes();\n    const displayForms = (_a = attribute === null || attribute === void 0 ? void 0 : attribute.displayForms) !== null && _a !== void 0 ? _a : [];\n    const currentDisplayFormRef = filterObjRef(handlerState.attributeFilter);\n    const offset = handlerState.elements.options.offset;\n    return {\n        attribute,\n        offset,\n        limit,\n        isFiltering,\n        isInitializing,\n        initError,\n        isLoadingInitialElementsPage,\n        initialElementsPageError,\n        isLoadingNextElementsPage,\n        nextElementsPageError,\n        nextElementsPageSize,\n        elements,\n        totalElementsCount,\n        totalElementsCountWithCurrentSettings,\n        isApplyDisabled,\n        isWorkingSelectionInverted,\n        workingSelectionElements,\n        isCommittedSelectionInverted,\n        committedSelectionElements,\n        searchString,\n        isFilteredByParentFilters,\n        parentFilterAttributes,\n        displayForms,\n        currentDisplayFormRef,\n    };\n}\nfunction useIsFiltering(handler) {\n    const [isFiltering, setIsFiltering] = useState(false);\n    useEffect(() => {\n        const callbackUnsubscribeFunctions = [\n            handler.onLoadInitialElementsPageStart(handleFilteringStart),\n            handler.onLoadInitialElementsPageSuccess(handleFilteringEnd),\n            handler.onLoadInitialElementsPageError(handleFilteringEnd),\n            handler.onLoadInitialElementsPageCancel(handleFilteringEnd),\n            handler.onInitStart(handleFilteringStart),\n            handler.onInitSuccess(handleFilteringEnd),\n            handler.onInitError(handleFilteringEnd),\n            handler.onInitCancel(handleFilteringEnd),\n        ];\n        function handleFilteringStart(payload) {\n            if (payload.correlation === PARENT_FILTERS_CORRELATION) {\n                setIsFiltering(true);\n            }\n        }\n        function handleFilteringEnd(payload) {\n            if (payload.correlation === PARENT_FILTERS_CORRELATION) {\n                setIsFiltering(false);\n            }\n        }\n        return () => {\n            callbackUnsubscribeFunctions.forEach((unsubscribe) => {\n                unsubscribe();\n            });\n        };\n    }, [handler]);\n    return isFiltering;\n}\n//# sourceMappingURL=useAttributeFilterControllerData.js.map","/**\n * @internal\n */\nexport const useAttributeFilterHandlerState = (handler) => {\n    const workingSelection = handler.getWorkingSelection();\n    const committedSelection = handler.getCommittedSelection();\n    const initStatus = handler.getInitStatus();\n    return {\n        attributeFilter: handler.getFilter(),\n        initialization: {\n            status: handler.getInitStatus(),\n            error: handler.getInitError(),\n        },\n        attribute: {\n            data: handler.getAttribute(),\n            status: handler.getAttributeStatus(),\n            error: handler.getAttributeError(),\n        },\n        elements: {\n            data: handler.getAllElements(),\n            totalCount: handler.getTotalElementsCount(),\n            totalCountWithCurrentSettings: handler.getTotalElementsCountWithCurrentSettings(),\n            initialPageLoad: {\n                status: handler.getInitialElementsPageStatus(),\n                error: handler.getInitialElementsPageError(),\n            },\n            nextPageLoad: {\n                status: handler.getNextElementsPageStatus(),\n                error: handler.getNextElementsPageError(),\n            },\n            options: {\n                search: handler.getSearch(),\n                offset: handler.getOffset(),\n                limit: handler.getLimit(),\n                limitingAttributeFilters: handler.getLimitingAttributeFilters(),\n                limitingDateFilters: handler.getLimitingDateFilters(),\n                limitingMeasures: handler.getLimitingMeasures(),\n                order: handler.getOrder(),\n            },\n        },\n        selection: {\n            committed: {\n                elements: initStatus === \"success\" ? handler.getElementsByKey(committedSelection.keys) : [],\n                keys: committedSelection.keys,\n                isInverted: committedSelection.isInverted,\n            },\n            working: {\n                elements: initStatus === \"success\" ? handler.getElementsByKey(workingSelection.keys) : [],\n                keys: workingSelection.keys,\n                isInverted: workingSelection.isInverted,\n                isChanged: handler.isWorkingSelectionChanged(),\n                isEmpty: handler.isWorkingSelectionEmpty(),\n            },\n        },\n    };\n};\n//# sourceMappingURL=useAttributeFilterHandlerState.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useContext } from \"react\";\nimport { useAttributeFilterController } from \"../hooks/useAttributeFilterController.js\";\nexport const AttributeFilterContext = React.createContext(null);\nAttributeFilterContext.displayName = \"AttributeFilterContext\";\n/**\n * Context providing AttributeFilter state and callbacks wrapped as {@link AttributeFilterController}.\n * @beta\n */\nexport const useAttributeFilterContext = () => useContext(AttributeFilterContext);\n/**\n * @internal\n */\nexport const AttributeFilterContextProvider = (props) => {\n    var _a, _b;\n    const { children, fullscreenOnMobile, title: titleInput, selectionMode, selectFirst } = props;\n    const controller = useAttributeFilterController(props);\n    const title = (_b = titleInput !== null && titleInput !== void 0 ? titleInput : (_a = controller === null || controller === void 0 ? void 0 : controller.attribute) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : \"\";\n    return (React.createElement(AttributeFilterContext.Provider, { value: Object.assign(Object.assign({}, controller), { fullscreenOnMobile, title, selectionMode, selectFirst }) }, children));\n};\n//# sourceMappingURL=AttributeFilterContext.js.map","// (C) 2019-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { InvertableSelect, useMediaQuery } from \"@gooddata/sdk-ui-kit\";\nimport { useAttributeFilterComponentsContext } from \"../../Context/AttributeFilterComponentsContext.js\";\nimport { getElementTitle, getElementKey } from \"../../utils.js\";\nimport { usePrevious } from \"@gooddata/sdk-ui\";\nimport { useAttributeFilterContext } from \"../../Context/AttributeFilterContext.js\";\nimport { MAX_SELECTION_SIZE } from \"../../hooks/constants.js\";\nconst ITEM_HEIGHT = 28;\nconst MOBILE_LIST_ITEM_HEIGHT = 40;\nconst VISIBLE_ITEMS_COUNT = 10;\n/**\n * This component allows users to search Attribute Filter elements.\n * It manipulates selection.\n * It displays statues like loading, filtering etc.\n * It allows paging.\n * It displays selection status like number of elements and selected elements labels.\n * It displays messages when elements are filtered out by parent filters or the result of search is empty.\n *\n * @beta\n */\nexport const AttributeFilterElementsSelect = (props) => {\n    const { items, totalItemsCount, totalItemsCountWithCurrentSettings, isInverted, selectedItems, onSelect, searchString, onSearch, isLoading, isLoadingNextPage, nextPageSize, onLoadNextPage, error, isFilteredByParentFilters, parentFilterTitles, } = props;\n    const intl = useIntl();\n    const isMobile = useMediaQuery(\"mobileDevice\");\n    const { fullscreenOnMobile, selectionMode } = useAttributeFilterContext();\n    const { ElementsSelectLoadingComponent, ElementsSelectItemComponent, ElementsSelectErrorComponent, EmptyResultComponent, ElementsSearchBarComponent, ElementsSelectActionsComponent, StatusBarComponent, } = useAttributeFilterComponentsContext();\n    const itemHeight = fullscreenOnMobile && isMobile ? MOBILE_LIST_ITEM_HEIGHT : ITEM_HEIGHT;\n    const isAdaptiveHeight = isMobile && fullscreenOnMobile;\n    const previousItemsCount = usePrevious(totalItemsCountWithCurrentSettings);\n    const loadingHeight = useMemo(() => {\n        return Math.max((Math.min(previousItemsCount, VISIBLE_ITEMS_COUNT) || 1) * itemHeight, 20) + 32;\n    }, [previousItemsCount, itemHeight]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InvertableSelect, { className: \"gd-attribute-filter-elements-select__next\", adaptiveWidth: true, adaptiveHeight: isAdaptiveHeight, isSingleSelect: selectionMode === \"single\", items: items, totalItemsCount: totalItemsCountWithCurrentSettings, itemHeight: itemHeight, getItemKey: getElementKey, getItemTitle: (item) => {\n                return getElementTitle(item, intl);\n            }, isInverted: isInverted, selectedItems: selectedItems, selectedItemsLimit: MAX_SELECTION_SIZE, onSelect: onSelect, searchString: searchString, onSearch: onSearch, isLoading: isLoading, error: error, isLoadingNextPage: isLoadingNextPage, nextPageItemPlaceholdersCount: nextPageSize, onLoadNextPage: onLoadNextPage, renderItem: (props) => {\n                return React.createElement(ElementsSelectItemComponent, Object.assign({}, props, { fullscreenOnMobile: fullscreenOnMobile }));\n            }, renderError: () => {\n                return React.createElement(ElementsSelectErrorComponent, { error: error });\n            }, renderLoading: () => {\n                return React.createElement(ElementsSelectLoadingComponent, { height: loadingHeight });\n            }, renderNoData: ({ height }) => {\n                return (React.createElement(EmptyResultComponent, { height: height, isFilteredByParentFilters: isFilteredByParentFilters, searchString: searchString, totalItemsCount: totalItemsCount, parentFilterTitles: parentFilterTitles }));\n            }, renderSearchBar: ({ onSearch, searchString }) => {\n                return (React.createElement(ElementsSearchBarComponent, { onSearch: onSearch, searchString: searchString, isSmall: !(isMobile && fullscreenOnMobile) }));\n            }, renderStatusBar: ({ getItemTitle, isInverted, selectedItems, selectedItemsLimit }) => {\n                return (React.createElement(StatusBarComponent, { getItemTitle: getItemTitle, isFilteredByParentFilters: isFilteredByParentFilters, isInverted: isInverted, parentFilterTitles: parentFilterTitles, selectedItems: selectedItems, totalElementsCountWithCurrentSettings: totalItemsCountWithCurrentSettings, selectedItemsLimit: selectedItemsLimit }));\n            }, renderActions: ({ checked, onChange, onToggle, isFiltered, totalItemsCount, isPartialSelection, isVisible, }) => {\n                return (React.createElement(ElementsSelectActionsComponent, { isVisible: isVisible, checked: checked, onChange: onChange, onToggle: onToggle, isFiltered: isFiltered, totalItemsCount: totalItemsCount, isPartialSelection: isPartialSelection }));\n            } })));\n};\n//# sourceMappingURL=AttributeFilterElementsSelect.js.map","// (C) 2021-2022 GoodData Corporation\nexport const DEFAULT_DROPDOWN_BODY_WIDTH = 245;\n//# sourceMappingURL=constants.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport camelCase from \"lodash/camelCase.js\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { getElementTitle } from \"../../utils.js\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nconst ALIGN_POINTS = [{ align: \"bl tc\", offset: { x: 7, y: 0 } }];\n/**\n * This component represents the Attribute Filter element.\n * It displays a checkbox to add/remove to/from selection.\n * It allows users to add only this item to selection.\n * It also displays a localized empty element label in case element value is empty.\n *\n * @beta\n */\nexport const AttributeFilterElementsSelectItem = (props) => {\n    const { item, isSelected, onSelect, onSelectOnly, onDeselect } = props;\n    const intl = useIntl();\n    const onItemClick = useCallback(() => {\n        if (isSelected) {\n            onDeselect();\n        }\n        else {\n            onSelect();\n        }\n    }, [onSelect, onDeselect, isSelected]);\n    const onOnlyItemClick = useCallback((event) => {\n        event.stopPropagation();\n        onSelectOnly();\n    }, [onSelectOnly]);\n    const classes = cx(\"gd-attribute-filter-elements-select-item__next\", \"gd-list-item\", \"has-only-visible\", \"s-attribute-filter-list-item\", `s-attribute-filter-list-item-${camelCase(item.title)}`, { \"is-selected\": isSelected }, {\n        \"s-attribute-filter-list-item-selected\": isSelected,\n    }, {\n        \"gd-attribute-filter-list-empty-item\": !item.title,\n    });\n    const labelClasses = cx(\"input-checkbox-label\", {\n        \"gd-empty-value-label\": !item.title,\n    });\n    const itemTitle = getElementTitle(item, intl);\n    return (React.createElement(\"div\", { className: classes, onClick: onItemClick, title: itemTitle },\n        React.createElement(\"label\", { className: labelClasses },\n            React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox\", readOnly: true, checked: isSelected }),\n            React.createElement(\"span\", { className: \"input-label-text\" }, itemTitle)),\n        !item.title && (React.createElement(\"div\", { className: \"gd-empty-list-item-tooltip-wrapper\" },\n            React.createElement(BubbleHoverTrigger, { className: \"gd-empty-list-item-tooltip\", showDelay: 0, hideDelay: 0 },\n                React.createElement(\"span\", { className: \"gd-icon-circle-question gd-empty-value-tooltip-icon\" }),\n                React.createElement(Bubble, { className: \"bubble-primary gd-empty-item-bubble\", alignTo: \".gd-empty-value-tooltip-icon\", alignPoints: ALIGN_POINTS },\n                    React.createElement(FormattedMessage, { id: \"attributesDropdown.empty.item.tooltip\" }))))),\n        React.createElement(\"span\", { className: \"gd-list-item-only\", onClick: onOnlyItemClick },\n            React.createElement(FormattedMessage, { id: \"gs.list.only\" }))));\n};\n//# sourceMappingURL=AttributeFilterElementsSelectItem.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { NoData } from \"@gooddata/sdk-ui-kit\";\n/**\n * Component that displays empty result message\n * @beta\n */\nexport const AttributeFilterEmptySearchResult = () => {\n    const intl = useIntl();\n    return React.createElement(NoData, { noDataLabel: intl.formatMessage({ id: \"attributesDropdown.noResultsMatch\" }) });\n};\n//# sourceMappingURL=AttributeFilterEmptySearchResult.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { NoData } from \"@gooddata/sdk-ui-kit\";\n/**\n * A component that displays a message that Attribute Filer has any elements.\n * @beta\n */\nexport const AttributeFilterEmptyAttributeResult = () => {\n    const intl = useIntl();\n    return React.createElement(NoData, { noDataLabel: intl.formatMessage({ id: \"attributesDropdown.noData\" }) });\n};\n//# sourceMappingURL=AttributeFilterEmptyAttributeResult.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { BubbleHoverTrigger, Bubble } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nconst ALIGN_POINTS = [{ align: \"cr cl\" }];\nconst ARROW_OFFSETS = { \"cr cl\": [10, 0] };\n/**\n * Component that display message that all elements are filtered out by parent filers.\n * @beta\n */\nexport const AttributeFilterAllValuesFilteredResult = (props) => {\n    const { parentFilterTitles } = props;\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-empty-filtered-result__next s-attribute-filter-dropdown-all-items-filtered\" },\n        React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n            React.createElement(\"div\", { className: \"gd-filtered-message__next\" },\n                React.createElement(FormattedMessage, { id: \"attributesDropdown.allItemsFiltered\" }),\n                React.createElement(\"span\", { className: \"gd-icon-circle-question\" })),\n            React.createElement(Bubble, { className: `bubble-primary gd-attribute-filter-dropdown-bubble__next s-attribute-filter-dropdown-bubble`, alignPoints: ALIGN_POINTS, arrowOffsets: ARROW_OFFSETS },\n                React.createElement(FormattedMessage, { id: \"attributesDropdown.itemsFiltered.tooltip\", values: {\n                        filters: parentFilterTitles.join(\", \"),\n                        strong: (chunks) => React.createElement(\"strong\", null, chunks),\n                    } })))));\n};\n//# sourceMappingURL=AttributeFilterEmptyFilteredResult.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nconst ALIGN_POINTS = [{ align: \"cr cl\" }];\nconst ARROW_OFFSETS = { \"cr cl\": [10, 0] };\n/**\n * It displays list of parent filters\n * @beta\n */\nexport const AttributeFilterFilteredStatus = (props) => {\n    const { parentFilterTitles } = props;\n    const tooltipText = useMemo(() => {\n        return parentFilterTitles ? parentFilterTitles.join(\", \") : \"\";\n    }, [parentFilterTitles]);\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-filtered-status__next s-attribute-filter-dropdown-items-filtered\" },\n        React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n            React.createElement(\"div\", { className: \"gd-filtered-message__next\" },\n                \"\\u00A0\",\n                React.createElement(FormattedMessage, { id: \"attributesDropdown.itemsFiltered\" }),\n                React.createElement(\"span\", { className: \"gd-icon-circle-question\" })),\n            React.createElement(Bubble, { className: `bubble-primary gd-attribute-filter-dropdown-bubble__next s-attribute-filter-dropdown-bubble`, alignPoints: ALIGN_POINTS, arrowOffsets: ARROW_OFFSETS },\n                React.createElement(FormattedMessage, { id: \"attributesDropdown.itemsFiltered.tooltip\", values: {\n                        filters: tooltipText,\n                        strong: (chunks) => React.createElement(\"strong\", null, chunks),\n                    } })))));\n};\n//# sourceMappingURL=AttributeFilterFilteredStatus.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { InvertableSelectStatusBar } from \"@gooddata/sdk-ui-kit\";\n/**\n * A component that displays status of current selection, like number of selected elements, if Attribute Filter is inverted and list of selected elements.\n * @beta\n */\nexport const AttributeFilterSelectionStatus = (props) => {\n    const { isInverted, selectedItems, getItemTitle, selectedItemsLimit } = props;\n    return (React.createElement(InvertableSelectStatusBar, { className: \"gd-attribute-filter-selection-status__next\", isInverted: isInverted, getItemTitle: getItemTitle, selectedItems: selectedItems, selectedItemsLimit: selectedItemsLimit }));\n};\n//# sourceMappingURL=AttributeFilterSelectionStatus.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { GD_COLOR_HIGHLIGHT } from \"../utils/constants.js\";\n/**\n * @internal\n */\nexport const CustomizableCheckmark = ({ className, width, height, }) => {\n    const backgroundColor = `var(--gd-palette-primary-base, ${GD_COLOR_HIGHLIGHT})`;\n    return (React.createElement(\"svg\", { width: width, height: height, xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", className: `gd-customizable-checkmark ${className}` },\n        React.createElement(\"g\", { fill: \"none\" },\n            React.createElement(\"g\", { transform: \"translate(-294.000000, -314.000000)\", fill: \"#14b2e2\" },\n                React.createElement(\"g\", { transform: \"translate(0.000000, 234.000000)\" },\n                    React.createElement(\"path\", { d: \"M298.166667,89.75 L294,85.6875 L295.666667,84.0625 L298.166667,86.5 L304.833333,80 L306.5,81.625 L298.166667,89.75 Z\", fill: backgroundColor }))))));\n};\nCustomizableCheckmark.defaultProps = {\n    width: 13,\n    height: 10,\n};\n//# sourceMappingURL=CustomizableCheckmark.js.map","// (C) 2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport camelCase from \"lodash/camelCase.js\";\nimport { CustomizableCheckmark, useMediaQuery } from \"@gooddata/sdk-ui-kit\";\nimport { getElementTitle } from \"../../utils.js\";\nimport { useIntl } from \"react-intl\";\n/**\n * Renders elements selection list item as a single select list item.\n *\n * @beta\n */\nexport const SingleSelectionAttributeFilterElementsSelectItem = (props) => {\n    const { item, onSelectOnly, isSelected, fullscreenOnMobile = false } = props;\n    const intl = useIntl();\n    // Modify item click behavior to select only this particular item.\n    const onItemClick = useCallback((event) => {\n        event.stopPropagation();\n        onSelectOnly();\n    }, [onSelectOnly]);\n    const itemTitle = useMemo(() => getElementTitle(item, intl), [item, intl]);\n    const isMobile = useMediaQuery(\"mobileDevice\");\n    const classes = cx(\"gd-single-selection-attribute-filter-elements-select-item\", \"gd-list-item\", \"s-attribute-filter-list-item\", `s-attribute-filter-list-item-${camelCase(item.title)}`, { \"is-selected\": isSelected }, {\n        \"s-attribute-filter-list-item-selected\": isSelected,\n    });\n    return (React.createElement(\"div\", { className: classes, onClick: onItemClick, title: itemTitle },\n        React.createElement(\"span\", null, itemTitle),\n        isSelected && isMobile && fullscreenOnMobile ? (React.createElement(\"span\", { className: \"gd-customizable-checkmark-mobile-navigation-wrapper\" },\n            React.createElement(CustomizableCheckmark, { className: \"gd-customizable-checkmark-mobile-navigation\" }))) : null));\n};\n//# sourceMappingURL=SingleSelectionAttributeFilterElementsSelectItem.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\n/**\n * Compensates white space when \"All checkbox\" is missing in the attribute filter.\n */\nexport function SingleSelectionAttributeFilterElementsSelectActions() {\n    return React.createElement(\"div\", { style: { marginTop: -5 } });\n}\n//# sourceMappingURL=SingleSelectionAttributeFilterElementsActions.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { AttributeFilterFilteredStatus } from \"./AttributeFilterFilteredStatus.js\";\n/**\n * A component that displays only effective parent filters.\n * Current selection is not rendered as it is too simple for single selection filter.\n *\n * @beta\n */\nexport const SingleSelectionAttributeFilterStatusBar = (props) => {\n    const { isFilteredByParentFilters, parentFilterTitles, totalElementsCountWithCurrentSettings } = props;\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-status-bar__next\" }, isFilteredByParentFilters && totalElementsCountWithCurrentSettings > 0 ? (React.createElement(AttributeFilterFilteredStatus, { parentFilterTitles: parentFilterTitles })) : null));\n};\n//# sourceMappingURL=SingleSelectionAttributeFilterStatusBar.js.map","// (C) 2019-2023 GoodData Corporation\nimport React from \"react\";\n/**\n * This component displays empty space in actions area\n *\n * @beta\n */\nexport const SingleSelectionAttributeFilterDropdownActions = () => {\n    return React.createElement(\"div\", null);\n};\n//# sourceMappingURL=SingleSelectionAttributeFilterDropdownActions.js.map","import { AttributeFilterLoading } from \"./Components/AttributeFilterLoading.js\";\nimport { AttributeFilterError } from \"./Components/AttributeFilterError.js\";\nimport { AttributeFilterDropdownButton } from \"./Components/DropdownButton/AttributeFilterDropdownButton.js\";\nimport { AttributeFilterDropdownBody } from \"./Components/Dropdown/AttributeFilterDropdownBody.js\";\nimport { AttributeFilterDropdownActions } from \"./Components/Dropdown/AttributeFilterDropdownActions.js\";\nimport { AttributeFilterElementsSearchBar } from \"./Components/ElementsSelect/AttributeFilterElementsSearchBar.js\";\nimport { AttributeFilterElementsSelect } from \"./Components/ElementsSelect/AttributeFilterElementsSelect.js\";\nimport { AttributeFilterElementsSelectItem } from \"./Components/ElementsSelect/AttributeFilterElementsSelectItem.js\";\nimport { AttributeFilterElementsSelectError } from \"./Components/ElementsSelect/AttributeFilterElementsSelectError.js\";\nimport { AttributeFilterElementsSelectLoading } from \"./Components/ElementsSelect/AttributeFilterElementsSelectLoading.js\";\nimport { AttributeFilterEmptyResult } from \"./Components/ElementsSelect/EmptyResult/AttributeFilterEmptyResult.js\";\nimport { AttributeFilterStatusBar } from \"./Components/ElementsSelect/StatusBar/AttributeFilterStatusBar.js\";\nimport { AttributeFilterElementsActions } from \"./Components/ElementsSelect/AttributeFilterElementsActions.js\";\nimport { SingleSelectionAttributeFilterElementsSelectItem } from \"./Components/ElementsSelect/SingleSelectionAttributeFilterElementsSelectItem.js\";\nimport { SingleSelectionAttributeFilterElementsSelectActions } from \"./Components/ElementsSelect/SingleSelectionAttributeFilterElementsActions.js\";\nimport { SingleSelectionAttributeFilterStatusBar } from \"./Components/ElementsSelect/StatusBar/SingleSelectionAttributeFilterStatusBar.js\";\nimport { SingleSelectionAttributeFilterDropdownActions } from \"./Components/Dropdown/SingleSelectionAttributeFilterDropdownActions.js\";\n/**\n * @internal\n */\nexport const AttributeFilterDefaultComponents = {\n    ErrorComponent: AttributeFilterError,\n    LoadingComponent: AttributeFilterLoading,\n    DropdownButtonComponent: AttributeFilterDropdownButton,\n    DropdownBodyComponent: AttributeFilterDropdownBody,\n    DropdownActionsComponent: AttributeFilterDropdownActions,\n    ElementsSearchBarComponent: AttributeFilterElementsSearchBar,\n    ElementsSelectComponent: AttributeFilterElementsSelect,\n    ElementsSelectItemComponent: AttributeFilterElementsSelectItem,\n    ElementsSelectErrorComponent: AttributeFilterElementsSelectError,\n    ElementsSelectLoadingComponent: AttributeFilterElementsSelectLoading,\n    ElementsSelectActionsComponent: AttributeFilterElementsActions,\n    EmptyResultComponent: AttributeFilterEmptyResult,\n    StatusBarComponent: AttributeFilterStatusBar,\n};\n/**\n * @internal\n */\nexport const getAttributeFilterDefaultComponents = ({ selectionMode, }) => {\n    return Object.assign(Object.assign({}, AttributeFilterDefaultComponents), (selectionMode === \"single\"\n        ? {\n            ElementsSelectItemComponent: SingleSelectionAttributeFilterElementsSelectItem,\n            ElementsSelectActionsComponent: SingleSelectionAttributeFilterElementsSelectActions,\n            StatusBarComponent: SingleSelectionAttributeFilterStatusBar,\n            DropdownActionsComponent: SingleSelectionAttributeFilterDropdownActions,\n        }\n        : {}));\n};\n//# sourceMappingURL=AttributeFilterDefaultComponents.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\n/**\n * AttributeFilter error component that display error,\n * It does not distinguish different errors, instead it renders a generic error message.\n * @beta\n */\nexport const AttributeFilterError = (props) => {\n    const { isOpen, isDraggable } = props;\n    return (React.createElement(\"div\", { className: cx(\"gd-attribute-filter-dropdown-button__next\", \"s-attribute-filter\", \"gd-message error s-button-error\", {\n            \"gd-is-active\": isOpen,\n            \"gd-is-draggable\": isDraggable,\n        }) },\n        React.createElement(FormattedMessage, { id: \"gs.filter.error\" })));\n};\n//# sourceMappingURL=AttributeFilterError.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { AttributeFilterDropdownButton } from \"./DropdownButton/AttributeFilterDropdownButton.js\";\n/**\n * AttributeFilter component that displays a loading indicator.\n *\n * @beta\n */\nexport const AttributeFilterLoading = ({ onClick }) => (React.createElement(AttributeFilterDropdownButton, { isLoading: true, onClick: onClick }));\n//# sourceMappingURL=AttributeFilterLoading.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useMemo, useCallback } from \"react\";\nimport { useMediaQuery } from \"@gooddata/sdk-ui-kit\";\nimport { useAttributeFilterComponentsContext } from \"../../Context/AttributeFilterComponentsContext.js\";\nimport { useAttributeFilterContext } from \"../../Context/AttributeFilterContext.js\";\nimport { DEFAULT_DROPDOWN_BODY_WIDTH } from \"../../constants.js\";\n/**\n * Component showing a list of elements and controls for manipulating the selection.\n *\n * @remarks\n * It uses a component using the {@link IAttributeFilterElementsSelectProps} props for search and manipulation of filter selection\n * and a component using the {@link IAttributeFilterDropdownActionsProps} props to confirm or cancel changes.\n *\n * @beta\n */\nexport const AttributeFilterDropdownBody = (props) => {\n    const { onApplyButtonClick, onCancelButtonClick, width = DEFAULT_DROPDOWN_BODY_WIDTH } = props;\n    const { DropdownActionsComponent, ElementsSelectComponent } = useAttributeFilterComponentsContext();\n    const isMobile = useMediaQuery(\"mobileDevice\");\n    const { initialElementsPageError, nextElementsPageError, isApplyDisabled, isWorkingSelectionInverted, isLoadingInitialElementsPage, isLoadingNextElementsPage, onLoadNextElementsPage, elements, onSearch, onSelect, nextElementsPageSize, searchString, totalElementsCount, totalElementsCountWithCurrentSettings, workingSelectionElements, parentFilterAttributes, isFilteredByParentFilters, fullscreenOnMobile, selectionMode, } = useAttributeFilterContext();\n    const parentFilterTitles = useMemo(() => {\n        return parentFilterAttributes.map((attr) => attr.title);\n    }, [parentFilterAttributes]);\n    const usedWidth = isMobile && fullscreenOnMobile ? \"100%\" : width;\n    const style = { width: usedWidth };\n    const onSelectWithPotentialClose = useCallback((selectedItems, isInverted) => {\n        onSelect(selectedItems, isInverted);\n        if (selectionMode === \"single\") {\n            onApplyButtonClick();\n        }\n    }, [onSelect, onApplyButtonClick, selectionMode]);\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-body__next\", style: style },\n        React.createElement(ElementsSelectComponent, { isInverted: isWorkingSelectionInverted, isLoading: isLoadingInitialElementsPage, isLoadingNextPage: isLoadingNextElementsPage, items: elements, onLoadNextPage: onLoadNextElementsPage, onSearch: onSearch, onSelect: onSelectWithPotentialClose, nextPageSize: nextElementsPageSize, searchString: searchString, selectedItems: workingSelectionElements, totalItemsCount: totalElementsCount, totalItemsCountWithCurrentSettings: totalElementsCountWithCurrentSettings, parentFilterTitles: parentFilterTitles, isFilteredByParentFilters: isFilteredByParentFilters, error: initialElementsPageError !== null && initialElementsPageError !== void 0 ? initialElementsPageError : nextElementsPageError }),\n        React.createElement(DropdownActionsComponent, { onApplyButtonClick: onApplyButtonClick, onCancelButtonClick: onCancelButtonClick, isApplyDisabled: isApplyDisabled })));\n};\n//# sourceMappingURL=AttributeFilterDropdownBody.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\n/**\n * This component displays two buttons Apply and Cancel.\n * Apply button is disabled when selection is not changed.\n * Cancel button discard changes and close AttributeFilter dropdown.\n *\n * @beta\n */\nexport const AttributeFilterDropdownActions = ({ isApplyDisabled, onApplyButtonClick, onCancelButtonClick, }) => {\n    const intl = useIntl();\n    const cancelText = intl.formatMessage({ id: \"gs.list.cancel\" });\n    const applyText = intl.formatMessage({ id: \"gs.list.apply\" });\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions__next\" },\n        React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions-left-content__next\" }),\n        React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions-right-content__next\" },\n            React.createElement(Button, { className: \"gd-attribute-filter-cancel-button__next gd-button-secondary gd-button-small cancel-button s-cancel\", onClick: onCancelButtonClick, value: cancelText, title: cancelText }),\n            React.createElement(Button, { disabled: isApplyDisabled, className: \"gd-attribute-filter-apply-button__next gd-button-action gd-button-small s-apply\", onClick: onApplyButtonClick, value: applyText, title: applyText }))));\n};\n//# sourceMappingURL=AttributeFilterDropdownActions.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { InvertableSelectSearchBar } from \"@gooddata/sdk-ui-kit\";\n/**\n * This component displays a text field and calls onSearch callback when user types search text.\n *\n * @beta\n */\nexport const AttributeFilterElementsSearchBar = (props) => {\n    const { onSearch, searchString, isSmall } = props;\n    return React.createElement(InvertableSelectSearchBar, { onSearch: onSearch, searchString: searchString, isSmall: isSmall });\n};\n//# sourceMappingURL=AttributeFilterElementsSearchBar.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Message } from \"@gooddata/sdk-ui-kit\";\n/**\n * Component that displays a generic error message.\n * @beta\n */\nexport const AttributeFilterElementsSelectError = () => (React.createElement(Message, { type: \"error\" },\n    React.createElement(FormattedMessage, { id: \"gs.list.error\" })));\n//# sourceMappingURL=AttributeFilterElementsSelectError.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { LoadingMask } from \"@gooddata/sdk-ui-kit\";\n/**\n * Component displays loading indicator.\n *\n * @beta\n */\nexport const AttributeFilterElementsSelectLoading = (props) => React.createElement(LoadingMask, { height: props.height });\n//# sourceMappingURL=AttributeFilterElementsSelectLoading.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { InvertableSelectAllCheckbox } from \"@gooddata/sdk-ui-kit\";\n/**\n * It displays three state a checkbox and allow select all or none elements that respect current search criteria.\n * It also displays a number of elements that respect current search criteria.\n *\n * @beta\n */\nexport const AttributeFilterElementsActions = (props) => {\n    const { checked, isVisible, onChange, onToggle, isFiltered, totalItemsCount, isPartialSelection } = props;\n    return (React.createElement(InvertableSelectAllCheckbox, { isVisible: isVisible, checked: checked, onChange: onChange, onToggle: onToggle, isFiltered: isFiltered, totalItemsCount: totalItemsCount, isPartialSelection: isPartialSelection }));\n};\n//# sourceMappingURL=AttributeFilterElementsActions.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { AttributeFilterEmptySearchResult } from \"./AttributeFilterEmptySearchResult.js\";\nimport { AttributeFilterEmptyAttributeResult } from \"./AttributeFilterEmptyAttributeResult.js\";\nimport { AttributeFilterAllValuesFilteredResult } from \"./AttributeFilterEmptyFilteredResult.js\";\n/**\n * This component displays different types of messages for situations when all elements are filtered out.\n * It distinguishes messages when current criteria return empty results or all elements are filtered by parents or by search.\n * @beta\n */\nexport const AttributeFilterEmptyResult = ({ height, totalItemsCount, searchString, isFilteredByParentFilters, parentFilterTitles = [], }) => {\n    let renderEmptyResult = null;\n    const style = useMemo(() => {\n        return {\n            height,\n        };\n    }, [height]);\n    if (totalItemsCount === 0) {\n        renderEmptyResult = React.createElement(AttributeFilterEmptyAttributeResult, null);\n    }\n    else if (isFilteredByParentFilters) {\n        renderEmptyResult = (React.createElement(AttributeFilterAllValuesFilteredResult, { parentFilterTitles: parentFilterTitles }));\n    }\n    else if (searchString.length > 0) {\n        renderEmptyResult = React.createElement(AttributeFilterEmptySearchResult, null);\n    }\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-empty-result__next\", style: style }, renderEmptyResult));\n};\n//# sourceMappingURL=AttributeFilterEmptyResult.js.map","import React from \"react\";\nimport { AttributeFilterFilteredStatus } from \"./AttributeFilterFilteredStatus.js\";\nimport { AttributeFilterSelectionStatus } from \"./AttributeFilterSelectionStatus.js\";\n/**\n * A component that displays status of current selection, like number of selected elements, if Attribute Filter is inverted and list of selected elements.\n *\n * @beta\n */\nexport const AttributeFilterStatusBar = (props) => {\n    const { isFilteredByParentFilters, parentFilterTitles, totalElementsCountWithCurrentSettings, getItemTitle, isInverted, selectedItems, selectedItemsLimit, } = props;\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-status-bar__next\" },\n        React.createElement(AttributeFilterSelectionStatus, { isInverted: isInverted, getItemTitle: getItemTitle, selectedItems: selectedItems, selectedItemsLimit: selectedItemsLimit }),\n        isFilteredByParentFilters && totalElementsCountWithCurrentSettings > 0 ? (React.createElement(AttributeFilterFilteredStatus, { parentFilterTitles: parentFilterTitles })) : null));\n};\n//# sourceMappingURL=AttributeFilterStatusBar.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport { IntlWrapper } from \"@gooddata/sdk-ui\";\nimport { AttributeFilterComponentsProvider } from \"./Context/AttributeFilterComponentsContext.js\";\nimport { AttributeFilterContextProvider } from \"./Context/AttributeFilterContext.js\";\nimport { getAttributeFilterDefaultComponents } from \"./AttributeFilterDefaultComponents.js\";\n/**\n * @internal\n */\nexport const AttributeFilterProviders = (props) => {\n    const { resetOnParentFilterChange = true, children, locale, backend, workspace, title, filter, connectToPlaceholder, parentFilters, parentFilterOverAttribute, hiddenElements, staticElements, fullscreenOnMobile = false, selectionMode = \"multi\", selectFirst = false, attribute, onApply, onError, ErrorComponent, LoadingComponent, DropdownButtonComponent, DropdownBodyComponent, DropdownActionsComponent, ElementsSearchBarComponent, ElementsSelectComponent, ElementsSelectItemComponent, ElementsSelectErrorComponent, ElementsSelectLoadingComponent, ElementsSelectActionsComponent, EmptyResultComponent, StatusBarComponent, } = props;\n    const DefaultComponents = getAttributeFilterDefaultComponents(props);\n    return (React.createElement(IntlWrapper, { locale: locale },\n        React.createElement(AttributeFilterComponentsProvider, { ErrorComponent: ErrorComponent !== null && ErrorComponent !== void 0 ? ErrorComponent : DefaultComponents.ErrorComponent, LoadingComponent: LoadingComponent !== null && LoadingComponent !== void 0 ? LoadingComponent : DefaultComponents.LoadingComponent, DropdownButtonComponent: DropdownButtonComponent !== null && DropdownButtonComponent !== void 0 ? DropdownButtonComponent : DefaultComponents.DropdownButtonComponent, DropdownBodyComponent: DropdownBodyComponent !== null && DropdownBodyComponent !== void 0 ? DropdownBodyComponent : DefaultComponents.DropdownBodyComponent, DropdownActionsComponent: DropdownActionsComponent !== null && DropdownActionsComponent !== void 0 ? DropdownActionsComponent : DefaultComponents.DropdownActionsComponent, ElementsSearchBarComponent: ElementsSearchBarComponent !== null && ElementsSearchBarComponent !== void 0 ? ElementsSearchBarComponent : DefaultComponents.ElementsSearchBarComponent, ElementsSelectComponent: ElementsSelectComponent !== null && ElementsSelectComponent !== void 0 ? ElementsSelectComponent : DefaultComponents.ElementsSelectComponent, ElementsSelectItemComponent: ElementsSelectItemComponent !== null && ElementsSelectItemComponent !== void 0 ? ElementsSelectItemComponent : DefaultComponents.ElementsSelectItemComponent, ElementsSelectErrorComponent: ElementsSelectErrorComponent !== null && ElementsSelectErrorComponent !== void 0 ? ElementsSelectErrorComponent : DefaultComponents.ElementsSelectErrorComponent, ElementsSelectLoadingComponent: ElementsSelectLoadingComponent !== null && ElementsSelectLoadingComponent !== void 0 ? ElementsSelectLoadingComponent : DefaultComponents.ElementsSelectLoadingComponent, ElementsSelectActionsComponent: ElementsSelectActionsComponent !== null && ElementsSelectActionsComponent !== void 0 ? ElementsSelectActionsComponent : DefaultComponents.ElementsSelectActionsComponent, EmptyResultComponent: EmptyResultComponent !== null && EmptyResultComponent !== void 0 ? EmptyResultComponent : DefaultComponents.EmptyResultComponent, StatusBarComponent: StatusBarComponent !== null && StatusBarComponent !== void 0 ? StatusBarComponent : DefaultComponents.StatusBarComponent },\n            React.createElement(AttributeFilterContextProvider, { attribute: attribute, backend: backend, workspace: workspace, title: title, filter: filter, connectToPlaceholder: connectToPlaceholder, resetOnParentFilterChange: resetOnParentFilterChange, parentFilters: parentFilters, parentFilterOverAttribute: parentFilterOverAttribute, onApply: onApply, onError: onError, hiddenElements: hiddenElements, staticElements: staticElements, fullscreenOnMobile: fullscreenOnMobile, selectionMode: selectionMode, selectFirst: selectFirst }, children))));\n};\n//# sourceMappingURL=AttributeFilterProviders.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nconst bubbleAlignPoints = [{ align: \"bc tc\" }];\n/**\n * Tooltip details for the AttributeFilterDropdownButton.\n *\n * @remarks\n * It displays AttributeFilterDropdownButton tooltip details in the GoodData look and feel.\n * It displays the default title, custom title and data set title of the related attribute filter.\n *\n * @beta\n */\nexport const AttributeFilterButtonErrorTooltip = ({ children, errorMessage }) => {\n    return errorMessage ? (React.createElement(\"div\", { className: \"gd-attribute-filter-button-wrapper\" },\n        React.createElement(BubbleHoverTrigger, null,\n            children,\n            React.createElement(Bubble, { className: \"bubble-negative gd-attribute-filter-button-error s-attribute-filter-error-bubble\", alignPoints: bubbleAlignPoints },\n                React.createElement(\"span\", null,\n                    React.createElement(FormattedMessage, { id: \"gs.filter.error.tooltip\" })))))) : (React.createElement(React.Fragment, null, children));\n};\n//# sourceMappingURL=AttributeFilterButtonErrorTooltip.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { Dropdown, useMediaQuery } from \"@gooddata/sdk-ui-kit\";\nimport cx from \"classnames\";\nimport { useAttributeFilterComponentsContext } from \"../../Context/AttributeFilterComponentsContext.js\";\nimport { useAttributeFilterContext } from \"../../Context/AttributeFilterContext.js\";\nimport { useResolveAttributeFilterSubtitle } from \"../../hooks/useResolveAttributeFilterSubtitle.js\";\nimport { AttributeFilterButtonErrorTooltip } from \"../DropdownButton/AttributeFilterButtonErrorTooltip.js\";\nconst ALIGN_POINTS = [\n    { align: \"bl tl\" },\n    { align: \"tr tl\" },\n    { align: \"br tr\", offset: { x: -11 } },\n    { align: \"tl bl\", offset: { x: 0, y: 0 } },\n    { align: \"tr tl\", offset: { x: 0, y: -50 } },\n    { align: \"tr tl\", offset: { x: 0, y: -100 } },\n    { align: \"tr tl\", offset: { x: 0, y: -200 } },\n    { align: \"tr tl\", offset: { x: 0, y: -300 } },\n    { align: \"tr tl\", offset: { x: 0, y: -400 } },\n];\n/**\n * @internal\n */\nexport const AttributeFilterDropdown = () => {\n    const { DropdownButtonComponent, DropdownBodyComponent, LoadingComponent, ErrorComponent } = useAttributeFilterComponentsContext();\n    const { title, isInitializing, initError, isFiltering, committedSelectionElements, onReset, onApply, fullscreenOnMobile, isCommittedSelectionInverted, selectionMode, } = useAttributeFilterContext();\n    const isMobile = useMediaQuery(\"mobileDevice\");\n    const subtitle = useResolveAttributeFilterSubtitle(isCommittedSelectionInverted, committedSelectionElements);\n    const isMultiselect = selectionMode !== \"single\";\n    const showSelectionCount = isMultiselect && committedSelectionElements.length !== 0;\n    return (React.createElement(Dropdown, { className: \"gd-attribute-filter__next\", closeOnParentScroll: true, closeOnMouseDrag: true, closeOnOutsideClick: true, enableEventPropagation: true, alignPoints: ALIGN_POINTS, fullscreenOnMobile: fullscreenOnMobile, renderButton: ({ toggleDropdown, isOpen }) => (React.createElement(\"div\", { className: cx({ \"gd-is-mobile\": fullscreenOnMobile && isMobile && isOpen }) },\n            !!isInitializing && React.createElement(LoadingComponent, { onClick: toggleDropdown, isOpen: isOpen }),\n            !isInitializing && !!initError && !title && (React.createElement(ErrorComponent, { message: initError.message, error: initError })),\n            !isInitializing && !!title && (React.createElement(AttributeFilterButtonErrorTooltip, { errorMessage: initError === null || initError === void 0 ? void 0 : initError.message },\n                React.createElement(DropdownButtonComponent, { title: title, subtitle: subtitle, isFiltering: isFiltering, isLoaded: !isInitializing, isLoading: isInitializing, isOpen: isOpen, selectedItemsCount: committedSelectionElements.length, showSelectionCount: showSelectionCount, onClick: toggleDropdown, isError: !!initError }))))), onOpenStateChanged: (isOpen) => {\n            if (!isOpen) {\n                onReset();\n            }\n        }, renderBody: ({ closeDropdown }) => (React.createElement(\"div\", { className: cx({ \"gd-is-mobile\": fullscreenOnMobile && isMobile }), style: { height: fullscreenOnMobile && isMobile ? \"100%\" : \"auto\" } },\n            React.createElement(DropdownBodyComponent, { onApplyButtonClick: () => {\n                    onApply();\n                    closeDropdown();\n                }, onCancelButtonClick: closeDropdown }))) }));\n};\n//# sourceMappingURL=AttributeFilterDropdown.js.map","// (C) 2022 GoodData Corporation\nimport { useIntl } from \"react-intl\";\nimport { getElementTitles } from \"../utils.js\";\n/**\n * @internal\n */\nexport function useResolveAttributeFilterSubtitle(isCommittedSelectionInverted, committedSelectionElements) {\n    const intl = useIntl();\n    const isCommittedSelectionEmpty = committedSelectionElements.length === 0;\n    const isNone = isCommittedSelectionEmpty && !isCommittedSelectionInverted;\n    const isNegativeSelection = !isCommittedSelectionEmpty && isCommittedSelectionInverted;\n    const isPositiveSelection = !isCommittedSelectionEmpty && !isCommittedSelectionInverted;\n    let subtitle = intl.formatMessage({ id: \"gs.list.all\" });\n    if (isNegativeSelection) {\n        subtitle = `${intl.formatMessage({ id: \"gs.list.all\" })} ${intl.formatMessage({\n            id: \"gs.list.except\",\n        })} ${getElementTitles(committedSelectionElements, intl)}`;\n    }\n    else if (isPositiveSelection) {\n        subtitle = getElementTitles(committedSelectionElements, intl);\n    }\n    else if (isNone) {\n        subtitle = intl.formatMessage({ id: \"gs.filterLabel.none\" });\n    }\n    return subtitle;\n}\n//# sourceMappingURL=useResolveAttributeFilterSubtitle.js.map","// (C) 2021-2023 GoodData Corporation\nimport React from \"react\";\nimport { useBackendStrict } from \"@gooddata/sdk-ui\";\nimport { validateAttributeFilterProps } from \"./utils.js\";\nimport { AttributeFilterProviders } from \"./AttributeFilterProviders.js\";\nimport { AttributeFilterDropdown } from \"./Components/Dropdown/AttributeFilterDropdown.js\";\n/**\n * @internal\n */\nexport const AttributeFilterBase = (props) => {\n    const backend = useBackendStrict(props.backend, \"AttributeFilter\");\n    validateAttributeFilterProps(Object.assign({ backend }, props));\n    return (React.createElement(AttributeFilterProviders, Object.assign({}, props),\n        React.createElement(AttributeFilterDropdown, null)));\n};\n//# sourceMappingURL=AttributeFilterBase.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { AttributeFilterBase } from \"./AttributeFilterBase.js\";\nimport { AttributeFilterDropdownButton } from \"./Components/DropdownButton/AttributeFilterDropdownButton.js\";\n/**\n * AttributeFilterButton is a component that renders a rich button and a dropdown populated with attribute values\n * for specified attribute display form.\n * @public\n */\nexport const AttributeFilterButton = (props) => {\n    var _a;\n    return (React.createElement(AttributeFilterBase, Object.assign({}, props, { DropdownButtonComponent: (_a = props.DropdownButtonComponent) !== null && _a !== void 0 ? _a : AttributeFilterDropdownButton })));\n};\n//# sourceMappingURL=AttributeFilterButton.js.map","// (C) 2021-2023 GoodData Corporation\nimport { absoluteDateFilterValues, filterAttributeElements, filterObjRef, idRef, isNegativeAttributeFilter, isRelativeDateFilter, newNegativeAttributeFilter, newPositiveAttributeFilter, relativeDateFilterValues, } from \"@gooddata/sdk-model\";\nimport { DateFilterHelpers } from \"@gooddata/sdk-ui-filters\";\n/**\n * Converts {@link IDashboardAttributeFilter} to {@link IAttributeFilter}.\n *\n * @internal\n * @param dashboardFilter - filter to convert\n * @returns converted filter\n */\nexport function dashboardAttributeFilterToAttributeFilter(dashboardFilter) {\n    const { attributeElements, displayForm, negativeSelection } = dashboardFilter.attributeFilter;\n    if (negativeSelection) {\n        return newNegativeAttributeFilter(displayForm, attributeElements);\n    }\n    else {\n        return newPositiveAttributeFilter(displayForm, attributeElements);\n    }\n}\n/**\n * Converts {@link IAttributeFilter} to {@link IDashboardAttributeFilter}.\n *\n * @internal\n * @param filter - filter to convert\n * @param localIdentifier - localIdentifier of the filter\n * @returns converted filter\n */\nexport function attributeFilterToDashboardAttributeFilter(filter, localIdentifier, title) {\n    const attributeElements = filterAttributeElements(filter);\n    const displayForm = filterObjRef(filter);\n    return {\n        attributeFilter: {\n            attributeElements,\n            displayForm,\n            negativeSelection: isNegativeAttributeFilter(filter),\n            localIdentifier,\n            title,\n            // TODO filterElementsBy?\n        },\n    };\n}\n/**\n * Converts {@link DateFilterOption} to {@link IDashboardDateFilter} or undefined.\n *\n * @param dateFilterOption - date filter option to convert\n * @param excludeCurrentPeriod - whether or not to exclude the current period\n * @returns converted filter or undefined for All time filter\n */\nexport function dateFilterOptionToDashboardDateFilter(dateFilterOption, excludeCurrentPeriod) {\n    const tempDateDatasetId = idRef(\"TEMP\");\n    const afmFilter = DateFilterHelpers.mapOptionToAfm(dateFilterOption, tempDateDatasetId, excludeCurrentPeriod);\n    if (!afmFilter) {\n        return undefined;\n    }\n    if (isRelativeDateFilter(afmFilter)) {\n        const { from, to, granularity } = relativeDateFilterValues(afmFilter);\n        return {\n            dateFilter: {\n                type: \"relative\",\n                granularity: granularity,\n                from,\n                to,\n            },\n        };\n    }\n    else {\n        const { from, to } = absoluteDateFilterValues(afmFilter);\n        return {\n            dateFilter: {\n                type: \"absolute\",\n                granularity: \"GDC.time.date\",\n                from,\n                to,\n            },\n        };\n    }\n}\n//# sourceMappingURL=dashboardFilterConverter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { dashboardAttributeFilterToAttributeFilter } from \"../../../_staging/dashboard/dashboardFilterConverter.js\";\nimport { selectFilterContextAttributeFilters, useDashboardSelector } from \"../../../model/index.js\";\n/**\n * Returns parent filtering input props for {@link @gooddata/sdk-ui-filters#AttributeFilter} for particular dashboard attribute filter.\n *\n * @param filter - dashboard filter to get the parent filter-related data\n *\n * @public\n */\nexport const useParentFilters = (filter) => {\n    const allAttributeFilters = useDashboardSelector(selectFilterContextAttributeFilters);\n    const parentFiltersData = useMemo(() => {\n        var _a;\n        return (_a = filter.attributeFilter.filterElementsBy) === null || _a === void 0 ? void 0 : _a.map((parent) => {\n            const matchingFilter = allAttributeFilters.find((filter) => filter.attributeFilter.localIdentifier === parent.filterLocalIdentifier);\n            invariant(matchingFilter); // if this blows up, the state is inconsistent\n            return { filter: matchingFilter, over: parent.over.attributes[0] };\n        });\n    }, [allAttributeFilters, filter.attributeFilter.filterElementsBy]);\n    const parentFilters = useMemo(() => {\n        return parentFiltersData === null || parentFiltersData === void 0 ? void 0 : parentFiltersData.map((item) => dashboardAttributeFilterToAttributeFilter(item.filter));\n    }, [parentFiltersData]);\n    const parentOverLookup = useMemo(() => {\n        // no parents -> no need for the lookup function\n        if (!parentFiltersData) {\n            return undefined;\n        }\n        return (_parentFilter, index) => parentFiltersData[index].over;\n    }, [parentFiltersData]);\n    return {\n        parentFilters,\n        parentFilterOverAttribute: parentOverLookup,\n    };\n};\n//# sourceMappingURL=useParentFilters.js.map","// (C) 2022 GoodData Corporation\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport React from \"react\";\nexport const ConfigurationCategory = (props) => {\n    return (React.createElement(\"div\", { className: \"configuration-category\" },\n        React.createElement(Typography, { tagName: \"h3\" }, props.categoryTitle)));\n};\n//# sourceMappingURL=ConfigurationCategory.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nexport const ConfigurationPanelHeader = () => {\n    return (React.createElement(\"div\", { className: \"configuration-panel-header\" },\n        React.createElement(Typography, { tagName: \"h3\", className: \"configuration-panel-header-title\" },\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.configuration\" }))));\n};\n//# sourceMappingURL=ConfigurationPanelHeader.js.map","// (C) 2022 GoodData Corporation\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useDashboardSelector, selectCatalogAttributes, selectAttributeFilterDisplayFormByLocalId, } from \"../../../../../../model/index.js\";\nimport { invariant } from \"ts-invariant\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nconst ALIGN_POINTS = [{ align: \"bc tl\" }, { align: \"tc bl\" }];\nconst ARROW_OFFSET = {\n    \"bc tl\": [-100, 10],\n    \"tc bl\": [-100, -10],\n};\nexport const ParentFiltersDisabledItem = (props) => {\n    const { itemLocalId, itemTitle, hasConnectingAttributes } = props;\n    const itemDisplayForm = useDashboardSelector(selectAttributeFilterDisplayFormByLocalId(itemLocalId || \"\"));\n    const attributes = useDashboardSelector(selectCatalogAttributes);\n    const itemAttribute = attributes.find((attr) => attr.displayForms.some((df) => areObjRefsEqual(df.ref, itemDisplayForm)));\n    const currentFilterTitle = itemAttribute === null || itemAttribute === void 0 ? void 0 : itemAttribute.attribute.title;\n    invariant(itemTitle, \"The parent filter title could not be fetched.\");\n    const itemClasses = cx(\"gd-list-item attribute-filter-item s-attribute-filter-dropdown-configuration-item\", `s-${stringUtils.simplifyText(itemTitle)}`);\n    return (React.createElement(BubbleHoverTrigger, { hideDelay: 0 },\n        React.createElement(\"div\", { className: itemClasses },\n            React.createElement(\"label\", { className: \"input-checkbox-label configuration-item-title\" },\n                React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox s-checkbox\", readOnly: true, disabled: true, checked: false }),\n                React.createElement(\"span\", { className: \"input-label-text\" }, itemTitle))),\n        React.createElement(Bubble, { className: \"bubble-primary gd-attribute-filter-dropdown-bubble s-attribute-filter-dropdown-bubble\", alignPoints: ALIGN_POINTS, arrowOffsets: ARROW_OFFSET }, hasConnectingAttributes ? (React.createElement(\"div\", null,\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.filterConfiguredMessage\", values: {\n                    childTitle: currentFilterTitle,\n                    parentTitle: itemTitle,\n                    // eslint-disable-next-line react/display-name\n                    strong: (chunks) => React.createElement(\"strong\", null, chunks),\n                } }))) : (React.createElement(\"div\", null,\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.noConnectionMessage\", values: {\n                    childTitle: currentFilterTitle,\n                    parentTitle: itemTitle,\n                    // eslint-disable-next-line react/display-name\n                    strong: (chunks) => React.createElement(\"strong\", null, chunks),\n                } }))))));\n};\n//# sourceMappingURL=ParentFiltersDisabledItem.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nexport const ConnectingAttributeItem = ({ title, icon, selected, onClick, }) => {\n    const handleOnClick = (e) => {\n        onClick();\n        e.preventDefault();\n    };\n    const className = cx(\"gd-list-item\", `s-${stringUtils.simplifyText(title)}`, {\n        \"is-selected\": selected,\n    });\n    return (React.createElement(\"div\", { className: className, onClick: handleOnClick },\n        React.createElement(\"span\", { className: cx(\"gd-list-icon\", icon) }),\n        React.createElement(\"span\", null, title)));\n};\n//# sourceMappingURL=ConnectingAttributeItem.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { Dropdown, DropdownButton, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { ConnectingAttributeItem } from \"./ConnectingAttributeItem.js\";\nimport { invariant } from \"ts-invariant\";\nconst DROPDOWN_BODY_WIDTH = 205;\nconst ALIGN_POINTS = [\n    {\n        align: \"br tr\",\n    },\n    {\n        align: \"tr br\",\n    },\n];\nexport const ConnectingAttributeDropdown = (props) => {\n    const { itemLocalId, selectedConnectingAttributeRef, connectingAttributes, onSelect } = props;\n    const selectedConnectingAttribute = connectingAttributes.find((attr) => areObjRefsEqual(attr.ref, selectedConnectingAttributeRef));\n    invariant(selectedConnectingAttribute, \"Cannot find connecting attribute in the catalog attribute items.\");\n    return (React.createElement(Dropdown, { className: \"connecting-attributes-dropdown s-connecting-attributes-dropdown\", closeOnParentScroll: true, closeOnMouseDrag: true, closeOnOutsideClick: true, alignPoints: ALIGN_POINTS, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DropdownButton, { value: selectedConnectingAttribute.title, iconLeft: \"gd-icon-attribute\", title: selectedConnectingAttribute.title, isOpen: isOpen, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"connecting-attributes-dropdown-body s-connecting-attributes-dropdown-body\", width: DROPDOWN_BODY_WIDTH, items: connectingAttributes, renderItem: ({ item }) => {\n                const selected = areObjRefsEqual(item.ref, selectedConnectingAttributeRef);\n                const onClick = () => {\n                    closeDropdown();\n                    if (!selected) {\n                        onSelect(itemLocalId, item.ref);\n                    }\n                };\n                return (React.createElement(ConnectingAttributeItem, { title: item.title, icon: \"gd-icon-attribute\", selected: selected, onClick: onClick }));\n            } })) }));\n};\n//# sourceMappingURL=ConnectingAttributeDropdown.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ParentFiltersDisabledItem } from \"./ParentFiltersDisabledItem.js\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { useDashboardSelector, selectIsCircularDependency, } from \"../../../../../../model/index.js\";\nimport { ConnectingAttributeDropdown } from \"../connectingAttribute/ConnectingAttributeDropdown.js\";\nexport const ParentFiltersListItem = (props) => {\n    const { item: { isSelected, localIdentifier, selectedConnectingAttribute }, onClick, currentFilterLocalId, connectingAttributes, onConnectingAttributeSelect, title, disabled, } = props;\n    const isCircularDependency = useDashboardSelector(selectIsCircularDependency(currentFilterLocalId, localIdentifier));\n    const isDisabled = isCircularDependency || !connectingAttributes.length;\n    const showConnectingAttributeSelect = isSelected && connectingAttributes.length > 1;\n    const activeItemClasses = useMemo(() => {\n        return cx(\"gd-list-item attribute-filter-item s-attribute-filter-dropdown-configuration-item\", `s-${stringUtils.simplifyText(title)}`, {\n            \"is-selected\": isSelected,\n        });\n    }, [isSelected, title]);\n    const onSelect = useCallback(() => {\n        const connectingAttributeRefs = connectingAttributes.map((attr) => attr.ref);\n        onClick(localIdentifier, !isSelected, connectingAttributeRefs);\n    }, [isSelected, localIdentifier, onClick, connectingAttributes]);\n    if (isDisabled) {\n        return (React.createElement(ParentFiltersDisabledItem, { hasConnectingAttributes: !!connectingAttributes.length, itemTitle: title, itemLocalId: currentFilterLocalId }));\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: activeItemClasses, onClick: () => !disabled && onSelect(), title: title },\n            React.createElement(\"label\", { className: \"input-checkbox-label configuration-item-title\" },\n                React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox s-checkbox\", checked: isSelected, disabled: disabled, readOnly: true }),\n                React.createElement(\"span\", { className: \"input-label-text\" }, title),\n                showConnectingAttributeSelect ? (React.createElement(\"span\", { className: \"addon\" },\n                    \"\\u00A0\",\n                    React.createElement(FormattedMessage, { id: \"attributesDropdown.attributeNameWithData\" }))) : null)),\n        showConnectingAttributeSelect ? (React.createElement(ConnectingAttributeDropdown, { itemLocalId: localIdentifier, connectingAttributes: connectingAttributes, selectedConnectingAttributeRef: selectedConnectingAttribute || connectingAttributes[0].ref, onSelect: onConnectingAttributeSelect })) : null));\n};\n//# sourceMappingURL=ParentFiltersListItem.js.map","// (C) 2022-2023 GoodData Corporation\nimport React from \"react\";\nimport { ParentFiltersListItem } from \"./ParentFiltersListItem.js\";\nimport { useDashboardSelector, selectSupportsElementsQueryParentFiltering, } from \"../../../../../../model/index.js\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nconst ARROW_OFFSETS = { \"cr cl\": [20, 0], \"cl cr\": [-10, 0] };\nconst ALIGN_POINTS = [{ align: \"cr cl\" }, { align: \"cl cr\" }];\nexport const ParentFiltersList = (props) => {\n    const { parents, currentFilterLocalId, setParents, onConnectingAttributeChanged, connectingAttributes, attributes, disabled, disabledTooltip, } = props;\n    const isDependentFiltersEnabled = useDashboardSelector(selectSupportsElementsQueryParentFiltering);\n    if (!isDependentFiltersEnabled || parents.length < 1) {\n        return null;\n    }\n    return (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n        React.createElement(\"div\", { className: \"gd-infinite-list\" }, parents.map((item, index) => {\n            var _a;\n            return (React.createElement(ParentFiltersListItem, { key: item.localIdentifier, currentFilterLocalId: currentFilterLocalId, item: item, disabled: disabled, onClick: setParents, onConnectingAttributeSelect: onConnectingAttributeChanged, connectingAttributes: connectingAttributes[index], title: (_a = item.title) !== null && _a !== void 0 ? _a : attributes[index].title }));\n        })),\n        Boolean(disabled) && (React.createElement(Bubble, { arrowOffsets: ARROW_OFFSETS, alignPoints: ALIGN_POINTS },\n            React.createElement(\"div\", null, disabledTooltip)))));\n};\n//# sourceMappingURL=ParentFiltersList.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nexport const AttributeDisplayFormDropdownButton = ({ title, isOpened, toggleDropdown, }) => {\n    const buttonClassNames = cx(\"gd-button-primary\", \"gd-button-small\", \"button-dropdown\", \"dropdown-button\", \"attribute-display-form-button\", \"s-attribute-display-form-button\", {\n        \"is-active\": isOpened,\n    });\n    const iconRight = isOpened ? \"gd-icon-navigateup\" : \"gd-icon-navigatedown\";\n    return (React.createElement(Button, { className: buttonClassNames, title: title, value: title, onClick: toggleDropdown, iconRight: iconRight }));\n};\n//# sourceMappingURL=AttributeDisplayFormDropdownButton.js.map","import React from \"react\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { ShortenedText } from \"@gooddata/sdk-ui-kit\";\nconst getDisplayFormIcon = (type) => {\n    switch (type) {\n        case \"GDC.link\":\n            return \"gd-icon-hyperlink-warning\";\n        case \"GDC.geo.pin\":\n        case \"GDC.geo.pin_latitude\":\n        case \"GDC.geo.pin_longitude\":\n            return \"gd-icon-earth\";\n        default:\n            return \"gd-icon-label-warning\";\n    }\n};\nconst tooltipAlignPoints = [\n    { align: \"cl cr\", offset: { x: -10, y: 0 } },\n    { align: \"cr cl\", offset: { x: 10, y: 0 } },\n];\nexport const AttributeDisplayFormDropDownItem = ({ displayForm, onClick, selected, }) => {\n    const { title } = displayForm;\n    const className = cx(\"gd-list-item\", \"attribute-display-form-name\", \"s-attribute-display-form-name\", `s-attribute-display-form-name-${stringUtils.simplifyText(title)}`, getDisplayFormIcon(displayForm.displayFormType), {\n        \"is-selected\": selected,\n    });\n    const handleOnClick = () => {\n        onClick(displayForm.ref);\n    };\n    return (React.createElement(\"div\", { className: className, onClick: handleOnClick },\n        React.createElement(ShortenedText, { tooltipAlignPoints: tooltipAlignPoints }, title)));\n};\n//# sourceMappingURL=AttributeDisplayFormDropDownItem.js.map","// (C) 2022-2023 GoodData Corporation\nimport { areObjRefsEqual, idRef, uriRef, } from \"@gooddata/sdk-model\";\nimport { Dropdown, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport React from \"react\";\nimport { AttributeDisplayFormDropdownButton } from \"./AttributeDisplayFormDropdownButton.js\";\nimport { AttributeDisplayFormDropDownItem } from \"./AttributeDisplayFormDropDownItem.js\";\nconst ITEM_HEIGHT = 23;\nconst DROPDOWN_WIDTH = 225;\nconst ALIGN_POINTS = [\n    {\n        align: \"bl tl\",\n        offset: { x: 0, y: 1 },\n    },\n    {\n        align: \"tl bl\",\n        offset: { x: 0, y: -1 },\n    },\n];\nexport const AttributeDisplayFormsDropdown = ({ displayForms, selectedDisplayForm, onChange, }) => {\n    // try matching both uri and id in case the type of ref is different from what is in the ref field\n    const selectedDisplayFormTitle = displayForms.find((df) => areObjRefsEqual(idRef(df.id, \"displayForm\"), selectedDisplayForm) ||\n        areObjRefsEqual(uriRef(df.uri), selectedDisplayForm)).title;\n    return (React.createElement(Dropdown, { alignPoints: ALIGN_POINTS, renderButton: ({ isOpen, toggleDropdown }) => {\n            return (React.createElement(AttributeDisplayFormDropdownButton, { title: selectedDisplayFormTitle, isOpened: isOpen, toggleDropdown: toggleDropdown }));\n        }, renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"attribute-display-form-dropdown-body s-attribute-display-form-dropdown-body\", items: displayForms, itemHeight: ITEM_HEIGHT, width: DROPDOWN_WIDTH, renderItem: ({ item }) => {\n                const selected = areObjRefsEqual(selectedDisplayForm, item.ref);\n                const onClick = (displayForm) => {\n                    closeDropdown();\n                    if (!selected) {\n                        onChange(displayForm);\n                    }\n                };\n                return (React.createElement(AttributeDisplayFormDropDownItem, { displayForm: item, selected: selected, onClick: onClick }));\n            } })) }));\n};\n//# sourceMappingURL=AttributeDisplayFormsDropdown.js.map","// (C) 2023 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport { useDashboardCommandProcessing, setAttributeFilterSelectionMode, changeAttributeFilterSelection, } from \"../../../../../../model/index.js\";\nexport const useSelectionModeConfiguration = (attributeFilter) => {\n    var _a;\n    const { run: changeSelectionMode } = useDashboardCommandProcessing({\n        commandCreator: setAttributeFilterSelectionMode,\n        successEvent: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.SELECTION_MODE_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n    });\n    const { run: changeSelection } = useDashboardCommandProcessing({\n        commandCreator: changeAttributeFilterSelection,\n        successEvent: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.SELECTION_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n    });\n    const originalSelectionMode = (_a = attributeFilter.attributeFilter.selectionMode) !== null && _a !== void 0 ? _a : \"multi\";\n    const [selectionMode, setSelectionMode] = useState(originalSelectionMode);\n    const selectionModeChanged = originalSelectionMode !== selectionMode;\n    const onSelectionModeUpdate = useCallback((value) => {\n        setSelectionMode(value);\n    }, []);\n    const onConfigurationClose = useCallback(() => {\n        setSelectionMode(originalSelectionMode);\n    }, [originalSelectionMode]);\n    const onSelectionModeChange = useCallback(() => {\n        if (selectionMode === originalSelectionMode) {\n            return;\n        }\n        const { localIdentifier } = attributeFilter.attributeFilter;\n        if (selectionMode === \"single\") {\n            // the order is important to keep Dashboard in valid state\n            changeSelection(localIdentifier, { uris: [] }, \"IN\");\n            changeSelectionMode(localIdentifier, selectionMode);\n        }\n        else {\n            // the order is important to keep Dashboard in valid state\n            changeSelectionMode(localIdentifier, selectionMode);\n            changeSelection(localIdentifier, { uris: [] }, \"NOT_IN\");\n        }\n    }, [originalSelectionMode, selectionMode, attributeFilter, changeSelectionMode, changeSelection]);\n    return {\n        selectionMode,\n        selectionModeChanged,\n        onSelectionModeChange,\n        onSelectionModeUpdate,\n        onConfigurationClose,\n    };\n};\n//# sourceMappingURL=useSelectionModeConfiguration.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useContext, useMemo, useCallback } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { filterObjRef, areObjRefsEqual, } from \"@gooddata/sdk-model\";\nimport { selectAllCatalogDisplayFormsMap, selectAttributeFilterDisplayFormsMap, selectOtherContextAttributeFilters, useDashboardSelector, } from \"../../../model/index.js\";\nimport { dashboardAttributeFilterToAttributeFilter } from \"../../../_staging/dashboard/dashboardFilterConverter.js\";\nimport { useParentsConfiguration } from \"./dashboardDropdownBody/configuration/hooks/useParentsConfiguration.js\";\nimport { useDisplayFormConfiguration } from \"./dashboardDropdownBody/configuration/hooks/useDisplayFormConfiguration.js\";\nimport { useTitleConfiguration } from \"./dashboardDropdownBody/configuration/hooks/useTitleConfiguration.js\";\nimport { useSelectionModeConfiguration } from \"./dashboardDropdownBody/configuration/hooks/useSelectionModeConfiguration.js\";\nexport const AttributeFilterParentFiltering = React.createContext(null); // TODO: Fix typing\nAttributeFilterParentFiltering.displayName = \"AttributeFilterParentFiltering\";\n/**\n * @internal\n */\nexport const useAttributeFilterParentFiltering = () => useContext(AttributeFilterParentFiltering);\n/**\n * @internal\n */\nexport const AttributeFilterParentFilteringProvider = (props) => {\n    var _a, _b;\n    const { children, filter: currentFilter, attributes } = props;\n    const attributeFilter = useMemo(() => dashboardAttributeFilterToAttributeFilter(currentFilter), [currentFilter]);\n    const memoizedAttributes = useMemo(() => {\n        return attributes !== null && attributes !== void 0 ? attributes : [];\n    }, [attributes]);\n    const filterRef = useMemo(() => {\n        return filterObjRef(attributeFilter);\n    }, [attributeFilter]);\n    const neighborFilters = useDashboardSelector(selectOtherContextAttributeFilters(filterRef));\n    const catalogDisplayFormsMap = useDashboardSelector(selectAllCatalogDisplayFormsMap);\n    const attributeFilterDisplayFormsMap = useDashboardSelector(selectAttributeFilterDisplayFormsMap);\n    const filterDisplayForm = attributeFilterDisplayFormsMap.get(currentFilter.attributeFilter.displayForm);\n    invariant(filterDisplayForm);\n    const attributeByDisplayForm = memoizedAttributes.find((attribute) => areObjRefsEqual(attribute.ref, filterDisplayForm.attribute));\n    const attributeFilterDisplayForm = filterDisplayForm.attribute;\n    const defaultAttributeFilterTitle = (_b = (_a = catalogDisplayFormsMap.get(filterDisplayForm.attribute)) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : attributeByDisplayForm === null || attributeByDisplayForm === void 0 ? void 0 : attributeByDisplayForm.title;\n    const { parents, configurationChanged, onParentSelect, onConnectingAttributeChanged, onParentFiltersChange, onConfigurationClose: onParentFiltersClose, } = useParentsConfiguration(neighborFilters, currentFilter);\n    const { onDisplayFormSelect, filterDisplayForms, displayFormChanged, onDisplayFormChange, onConfigurationClose: onDisplayFormClose, displayFormChangeStatus, } = useDisplayFormConfiguration(currentFilter, memoizedAttributes);\n    const { title, titleChanged, titleChangeStatus, onTitleUpdate, onTitleReset, onTitleChange, onConfigurationClose: onTitleClose, } = useTitleConfiguration(currentFilter, defaultAttributeFilterTitle);\n    const { selectionMode, selectionModeChanged, onSelectionModeChange, onSelectionModeUpdate, onConfigurationClose: onSelectionModeClose, } = useSelectionModeConfiguration(currentFilter);\n    const onConfigurationSave = useCallback(() => {\n        // the order is important to keep the app in valid state\n        if (selectionMode === \"single\") {\n            onParentFiltersChange();\n            onSelectionModeChange();\n        }\n        else {\n            onSelectionModeChange();\n            onParentFiltersChange();\n        }\n        onDisplayFormChange();\n        onTitleChange();\n    }, [selectionMode, onParentFiltersChange, onDisplayFormChange, onTitleChange, onSelectionModeChange]);\n    const onConfigurationClose = useCallback(() => {\n        onParentFiltersClose();\n        onDisplayFormClose();\n        onTitleClose();\n        onSelectionModeClose();\n    }, [onParentFiltersClose, onDisplayFormClose, onTitleClose, onSelectionModeClose]);\n    const showDisplayFormPicker = filterDisplayForms.availableDisplayForms.length > 1;\n    const showResetTitle = title !== defaultAttributeFilterTitle;\n    return (React.createElement(AttributeFilterParentFiltering.Provider, { value: {\n            parents,\n            onParentSelect,\n            onConnectingAttributeChanged,\n            onParentFiltersChange,\n            onDisplayFormSelect,\n            filterDisplayForms,\n            displayFormChanged,\n            onDisplayFormChange,\n            onConfigurationSave,\n            onConfigurationClose,\n            showDisplayFormPicker,\n            configurationChanged,\n            displayFormChangeStatus,\n            title,\n            defaultAttributeFilterTitle,\n            showResetTitle,\n            titleChanged,\n            titleChangeStatus,\n            onTitleChange,\n            onTitleUpdate,\n            onTitleReset,\n            attributeFilterDisplayForm,\n            selectionMode,\n            selectionModeChanged,\n            onSelectionModeChange,\n            onSelectionModeUpdate,\n        } }, children));\n};\n//# sourceMappingURL=AttributeFilterParentFilteringContext.js.map","import { useState, useMemo, useCallback } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { setAttributeFilterParents, useDispatchDashboardCommand, } from \"../../../../../../model/index.js\";\nimport { useOriginalConfigurationState } from \"./useOriginalConfigurationState.js\";\nexport function useParentsConfiguration(neighborFilters, currentFilter) {\n    const { filterElementsBy, localIdentifier: currentFilterLocalId } = currentFilter.attributeFilter;\n    invariant(currentFilterLocalId, \"Cannot initialize the attribute filter configuration panel, filter has missing 'localIdentifier' property\");\n    const saveParentFilterCommand = useDispatchDashboardCommand(setAttributeFilterParents);\n    const originalState = useOriginalConfigurationState(neighborFilters, filterElementsBy);\n    const [parents, setParents] = useState(originalState);\n    function onParentSelect(localIdentifier, isSelected, overAttributes) {\n        const changedParentIndex = parents.findIndex((parent) => parent.localIdentifier === localIdentifier);\n        const changedItem = Object.assign({}, parents[changedParentIndex]);\n        changedItem.isSelected = isSelected;\n        changedItem.overAttributes = overAttributes;\n        if (isSelected) {\n            changedItem.selectedConnectingAttribute = overAttributes[0];\n        }\n        else {\n            // set connecting attributes to undefined to properly check for\n            // state updates\n            changedItem.selectedConnectingAttribute = undefined;\n            changedItem.overAttributes = undefined;\n        }\n        const changedParentItems = [...parents];\n        changedParentItems[changedParentIndex] = changedItem;\n        setParents(changedParentItems);\n    }\n    function onConnectingAttributeChanged(localIdentifier, selectedAttribute) {\n        const changedParentIndex = parents.findIndex((parent) => parent.localIdentifier === localIdentifier);\n        const changedItem = Object.assign({}, parents[changedParentIndex]);\n        changedItem.selectedConnectingAttribute = selectedAttribute;\n        const changedParentItems = [...parents];\n        changedParentItems[changedParentIndex] = changedItem;\n        setParents(changedParentItems);\n    }\n    const configurationChanged = useMemo(() => {\n        return !isEqual(parents, originalState);\n    }, [parents, originalState]);\n    const onParentFiltersChange = useCallback(() => {\n        // dispatch the command only if the configuration changed\n        if (configurationChanged) {\n            const parentFilters = [];\n            parents.forEach((parentItem) => {\n                var _a;\n                if (parentItem.isSelected && ((_a = parentItem.overAttributes) === null || _a === void 0 ? void 0 : _a.length)) {\n                    const overAttribute = parentItem.selectedConnectingAttribute || parentItem.overAttributes[0];\n                    parentFilters.push({\n                        filterLocalIdentifier: parentItem.localIdentifier,\n                        over: {\n                            attributes: [overAttribute],\n                        },\n                    });\n                }\n            });\n            saveParentFilterCommand(currentFilter.attributeFilter.localIdentifier, parentFilters);\n        }\n    }, [parents, configurationChanged, currentFilter, saveParentFilterCommand]);\n    const onConfigurationClose = useCallback(() => {\n        setParents(originalState);\n    }, [originalState]);\n    return {\n        parents,\n        configurationChanged,\n        onParentSelect,\n        onConnectingAttributeChanged,\n        onParentFiltersChange,\n        onConfigurationClose,\n    };\n}\n//# sourceMappingURL=useParentsConfiguration.js.map","// (C) 2022-2023 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { invariant } from \"ts-invariant\";\n/**\n * @internal\n */\nexport function useOriginalConfigurationState(neighborFilters, filterElementsBy) {\n    return useMemo(() => {\n        return neighborFilters.map((neighborFilter) => {\n            var _a;\n            const neighborFilterLocalId = neighborFilter.attributeFilter.localIdentifier;\n            const neighborFilterDisplayForm = neighborFilter.attributeFilter.displayForm;\n            const neighborFilterTitle = neighborFilter.attributeFilter.title;\n            const isSelected = (filterElementsBy === null || filterElementsBy === void 0 ? void 0 : filterElementsBy.some((by) => by.filterLocalIdentifier === neighborFilterLocalId)) || false;\n            const overAttributes = (_a = filterElementsBy === null || filterElementsBy === void 0 ? void 0 : filterElementsBy.find((by) => by.filterLocalIdentifier === neighborFilterLocalId)) === null || _a === void 0 ? void 0 : _a.over.attributes;\n            invariant(neighborFilterLocalId, \"Cannot initialize the attribute filter configuration panel, neighbor filter has missing 'localIdentifier' property.\");\n            return {\n                localIdentifier: neighborFilterLocalId,\n                displayForm: neighborFilterDisplayForm,\n                isSelected,\n                overAttributes: overAttributes,\n                selectedConnectingAttribute: overAttributes === null || overAttributes === void 0 ? void 0 : overAttributes[0],\n                title: neighborFilterTitle,\n            };\n        });\n    }, [neighborFilters, filterElementsBy]);\n}\n//# sourceMappingURL=useOriginalConfigurationState.js.map","// (C) 2022-2023 GoodData Corporation\nimport { areObjRefsEqual, } from \"@gooddata/sdk-model\";\nimport { useState, useCallback } from \"react\";\nimport { useDashboardSelector, selectCatalogAttributes, setAttributeFilterDisplayForm, useDashboardCommandProcessing, } from \"../../../../../../model/index.js\";\nexport function useDisplayFormConfiguration(currentFilter, attributes) {\n    const catalogAttributes = useDashboardSelector(selectCatalogAttributes);\n    const { run: changeDisplayForm, status: displayFormChangeStatus } = useDashboardCommandProcessing({\n        commandCreator: setAttributeFilterDisplayForm,\n        successEvent: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.DISPLAY_FORM_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n    });\n    const originalDisplayForm = currentFilter.attributeFilter.displayForm;\n    const [filterDisplayForms, setFilterDisplayForms] = useState(() => {\n        var _a, _b, _c;\n        const currentDisplayForm = currentFilter.attributeFilter.displayForm;\n        const availableDisplayForms = (_a = catalogAttributes.find((attribute) => attribute.displayForms.some((df) => areObjRefsEqual(df.ref, currentDisplayForm)))) === null || _a === void 0 ? void 0 : _a.displayForms;\n        const attributeAvailableDisplayForms = (_c = (_b = attributes.find((attribute) => attribute.displayForms.some((df) => areObjRefsEqual(df.ref, currentDisplayForm)))) === null || _b === void 0 ? void 0 : _b.displayForms) !== null && _c !== void 0 ? _c : [];\n        const result = availableDisplayForms !== null && availableDisplayForms !== void 0 ? availableDisplayForms : attributeAvailableDisplayForms;\n        return {\n            selectedDisplayForm: currentDisplayForm,\n            availableDisplayForms: result,\n        };\n    });\n    const displayFormChanged = !areObjRefsEqual(originalDisplayForm, filterDisplayForms.selectedDisplayForm);\n    const onDisplayFormSelect = useCallback((displayForm) => {\n        const updatedDisplayForms = Object.assign({}, filterDisplayForms);\n        updatedDisplayForms.selectedDisplayForm = displayForm;\n        setFilterDisplayForms(updatedDisplayForms);\n    }, [filterDisplayForms]);\n    const onDisplayFormChange = useCallback(() => {\n        if (!areObjRefsEqual(originalDisplayForm, filterDisplayForms.selectedDisplayForm)) {\n            changeDisplayForm(currentFilter.attributeFilter.localIdentifier, filterDisplayForms.selectedDisplayForm);\n        }\n    }, [filterDisplayForms, originalDisplayForm, currentFilter, changeDisplayForm]);\n    const onConfigurationClose = useCallback(() => {\n        setFilterDisplayForms((old) => (Object.assign(Object.assign({}, old), { selectedDisplayForm: originalDisplayForm })));\n    }, [originalDisplayForm]);\n    return {\n        onDisplayFormSelect,\n        filterDisplayForms,\n        displayFormChanged,\n        onDisplayFormChange,\n        onConfigurationClose,\n        displayFormChangeStatus,\n    };\n}\n//# sourceMappingURL=useDisplayFormConfiguration.js.map","// (C) 2023 GoodData Corporation\nimport { useState, useCallback } from \"react\";\nimport { setAttributeFilterTitle, useDashboardCommandProcessing, useDashboardUserInteraction, } from \"../../../../../../model/index.js\";\nexport function useTitleConfiguration(currentFilter, defaultAttributeFilterTitle) {\n    var _a;\n    const { run: changeTitle, status: titleChangeStatus } = useDashboardCommandProcessing({\n        commandCreator: setAttributeFilterTitle,\n        successEvent: \"GDC.DASH/EVT.FILTER_CONTEXT.ATTRIBUTE_FILTER.TITLE_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n    });\n    const userInteraction = useDashboardUserInteraction();\n    const originalTitle = (_a = currentFilter.attributeFilter.title) !== null && _a !== void 0 ? _a : defaultAttributeFilterTitle;\n    const [title, setTitle] = useState(originalTitle);\n    const titleChanged = originalTitle !== title;\n    const onTitleUpdate = useCallback((value) => {\n        setTitle(value);\n    }, []);\n    const onTitleChange = useCallback(() => {\n        if (title !== originalTitle) {\n            const updatedTitle = title !== defaultAttributeFilterTitle ? title === null || title === void 0 ? void 0 : title.trim() : undefined;\n            changeTitle(currentFilter.attributeFilter.localIdentifier, updatedTitle);\n        }\n    }, [title, currentFilter, defaultAttributeFilterTitle, changeTitle]);\n    const onTitleReset = useCallback(() => {\n        setTitle(undefined);\n        userInteraction.attributeFilterTitleResetClicked();\n    }, []);\n    const onConfigurationClose = useCallback(() => {\n        setTitle(originalTitle);\n    }, [originalTitle]);\n    return {\n        title,\n        titleChanged,\n        titleChangeStatus,\n        onTitleChange,\n        onTitleUpdate,\n        onTitleReset,\n        onConfigurationClose,\n    };\n}\n//# sourceMappingURL=useTitleConfiguration.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { Input } from \"@gooddata/sdk-ui-kit\";\nimport { ConfigurationCategory } from \"../ConfigurationCategory.js\";\nexport const AttributeTitleRenaming = (props) => {\n    const { categoryTitle, resetTitleText, showResetTitle, attributeTitle, onClick, onChange } = props;\n    const buttonClassNames = \"gd-button gd-button-link attribute-filter-renaming-title-reset s-attribute-filter-renaming-title-reset\";\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"configuration-category-title\" },\n            React.createElement(ConfigurationCategory, { categoryTitle: categoryTitle }),\n            showResetTitle ? (React.createElement(\"a\", { className: buttonClassNames, target: \"_blank\", rel: \"noopener noreferrer\", onClick: onClick }, resetTitleText)) : null),\n        React.createElement(Input, { className: \"configuration-attribute-filter-title s-configuration-attribute-filter-title\", value: attributeTitle, onChange: onChange })));\n};\n//# sourceMappingURL=AttributeTitleRenaming.js.map","// (C) 2022-2023 GoodData Corporation\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport React from \"react\";\nconst ARROW_OFFSETS = { \"cr cl\": [20, 0], \"cl cr\": [-10, 0] };\nconst ALIGN_POINTS = [{ align: \"cr cl\" }, { align: \"cl cr\" }];\nexport const SelectionModeItem = (props) => {\n    const { item, itemTitle, selected, disabled, disabledTooltip, onClick } = props;\n    const className = cx(\"gd-list-item\", {\n        \"is-selected\": selected,\n    }, {\n        \"is-disabled\": disabled,\n    }, \"s-selection-mode-dropdown-item\", `s-selection-mode-dropdown-item-${item}`);\n    return (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },\n        React.createElement(\"div\", { className: className, onClick: () => !disabled && onClick() }, itemTitle),\n        Boolean(disabled) && (React.createElement(Bubble, { arrowOffsets: ARROW_OFFSETS, alignPoints: ALIGN_POINTS },\n            React.createElement(\"div\", null, disabledTooltip)))));\n};\n//# sourceMappingURL=SelectionModeItem.js.map","// (C) 2022-2023 GoodData Corporation\nimport cx from \"classnames\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport React from \"react\";\nexport const SelectionModeButton = (props) => {\n    const { title, isOpen, toggleDropdown } = props;\n    const buttonClassNames = cx(\"gd-button-primary\", \"gd-button-small\", \"button-dropdown\", \"dropdown-button\", \"selection-mode-dropdown-button\", \"s-selection-mode-dropdown-button\", {\n        \"is-active\": isOpen,\n    });\n    const iconRight = isOpen ? \"gd-icon-navigateup\" : \"gd-icon-navigatedown\";\n    return (React.createElement(Button, { className: buttonClassNames, title: title, value: title, onClick: toggleDropdown, iconRight: iconRight }));\n};\n//# sourceMappingURL=SelectionModeButton.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { ConfigurationCategory } from \"../ConfigurationCategory.js\";\nimport { Dropdown, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport { SelectionModeItem } from \"./SelectionModeItem.js\";\nimport { SelectionModeButton } from \"./SelectionModeButton.js\";\nconst ITEM_HEIGHT = 23;\nconst DROPDOWN_WIDTH = 225;\nconst ALIGN_POINTS = [\n    {\n        align: \"bl tl\",\n        offset: { x: 0, y: 1 },\n    },\n    {\n        align: \"tl bl\",\n        offset: { x: 0, y: -1 },\n    },\n];\nexport const SelectionMode = (props) => {\n    const { selectionTitleText, multiSelectionOptionText, singleSelectionOptionText, singleSelectionDisabledTooltip, selectionMode, onSelectionModeChange, disabled, } = props;\n    const selectionOptionTitleMap = {\n        multi: multiSelectionOptionText,\n        single: singleSelectionOptionText,\n    };\n    const items = [\"multi\", \"single\"];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ConfigurationCategory, { categoryTitle: selectionTitleText }),\n        React.createElement(\"div\", { className: \"configuration-selection-mode\" },\n            React.createElement(Dropdown, { alignPoints: ALIGN_POINTS, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(SelectionModeButton, { isOpen: isOpen, title: selectionOptionTitleMap[selectionMode], toggleDropdown: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"attribute-display-form-dropdown-body s-selection-mode-dropdown-body\", items: items, itemHeight: ITEM_HEIGHT, width: DROPDOWN_WIDTH, renderItem: ({ item }) => (React.createElement(SelectionModeItem, { item: item, itemTitle: selectionOptionTitleMap[item], selected: item === selectionMode, disabled: item === \"single\" && disabled, disabledTooltip: singleSelectionDisabledTooltip, onClick: () => {\n                            closeDropdown();\n                            onSelectionModeChange(item);\n                        } })) })) }))));\n};\n//# sourceMappingURL=SelectionMode.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { ConfigurationCategory } from \"./ConfigurationCategory.js\";\nimport { ConfigurationPanelHeader } from \"./ConfigurationPanelHeader.js\";\nimport { useDashboardSelector, selectOtherContextAttributeFilters, selectFilterContextAttributeFilters, selectSupportsElementsQueryParentFiltering, } from \"../../../../../model/index.js\";\nimport { ParentFiltersList } from \"./parentFilters/ParentFiltersList.js\";\nimport { invariant } from \"ts-invariant\";\nimport { AttributeDisplayFormsDropdown } from \"./displayForms/AttributeDisplayFormsDropdown.js\";\nimport { useAttributeFilterParentFiltering } from \"../../AttributeFilterParentFilteringContext.js\";\nimport { useConnectingAttributes } from \"./hooks/useConnectingAttributes.js\";\nimport { LoadingSpinner } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { useAttributes } from \"../../../../../_staging/sharedHooks/useAttributes.js\";\nimport { AttributeTitleRenaming } from \"./title/AttributeTitleRenaming.js\";\nimport { SelectionMode } from \"./selectionMode/SelectionMode.js\";\nexport const AttributeFilterConfiguration = (props) => {\n    var _a, _b;\n    const { filterRef, filterByText, displayValuesAsText, titleText, resetTitleText, selectionTitleText, multiSelectionOptionText, singleSelectionOptionText, singleSelectionDisabledTooltip, parentFiltersDisabledTooltip, closeHandler, } = props;\n    const theme = useTheme();\n    useEffect(() => {\n        return () => {\n            closeHandler();\n        };\n    }, [closeHandler]);\n    const neighborFilters = useDashboardSelector(selectOtherContextAttributeFilters(filterRef));\n    const isDependentFiltersEnabled = useDashboardSelector(selectSupportsElementsQueryParentFiltering);\n    const neighborFilterDisplayForms = useMemo(() => {\n        return neighborFilters.map((filter) => filter.attributeFilter.displayForm);\n    }, [neighborFilters]);\n    const currentFilter = useDashboardSelector(selectFilterContextAttributeFilters).find((filter) => neighborFilters.every((neighborFilter) => filter.attributeFilter.localIdentifier !== neighborFilter.attributeFilter.localIdentifier));\n    invariant(currentFilter, \"Cannot find current filter in the filter context store.\");\n    const { title, defaultAttributeFilterTitle, parents, onParentSelect, onConnectingAttributeChanged, showDisplayFormPicker, filterDisplayForms, onDisplayFormSelect, showResetTitle, onTitleUpdate, onTitleReset, selectionMode, onSelectionModeUpdate, } = useAttributeFilterParentFiltering();\n    const { connectingAttributesLoading, connectingAttributes } = useConnectingAttributes(currentFilter.attributeFilter.displayForm, neighborFilterDisplayForms);\n    const { attributes, attributesLoading } = useAttributes(neighborFilterDisplayForms);\n    const parentsSelected = useCallback(() => {\n        return parents.filter((parent) => parent.isSelected).length > 0;\n    }, [parents]);\n    if (connectingAttributesLoading || attributesLoading) {\n        return (React.createElement(\"div\", { className: \"gd-loading-equalizer-attribute-filter-config-wrap\" },\n            React.createElement(LoadingSpinner, { className: \"large gd-loading-equalizer-spinner\", color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c9 })));\n    }\n    if (!filterRef || !connectingAttributes || !attributes) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"s-attribute-filter-dropdown-configuration attribute-filter-dropdown-configuration sdk-edit-mode-on\" },\n        React.createElement(ConfigurationPanelHeader, null),\n        React.createElement(AttributeTitleRenaming, { categoryTitle: titleText, resetTitleText: resetTitleText, onClick: onTitleReset, onChange: onTitleUpdate, showResetTitle: showResetTitle, attributeTitle: title !== null && title !== void 0 ? title : defaultAttributeFilterTitle }),\n        React.createElement(SelectionMode, { selectionTitleText: selectionTitleText, multiSelectionOptionText: multiSelectionOptionText, singleSelectionOptionText: singleSelectionOptionText, singleSelectionDisabledTooltip: singleSelectionDisabledTooltip, selectionMode: selectionMode, onSelectionModeChange: onSelectionModeUpdate, disabled: parentsSelected() }),\n        isDependentFiltersEnabled && parents.length > 0 ? (React.createElement(ConfigurationCategory, { categoryTitle: filterByText })) : null,\n        React.createElement(ParentFiltersList, { currentFilterLocalId: currentFilter.attributeFilter.localIdentifier, parents: parents, setParents: onParentSelect, onConnectingAttributeChanged: onConnectingAttributeChanged, connectingAttributes: connectingAttributes, attributes: attributes, disabled: selectionMode === \"single\", disabledTooltip: parentFiltersDisabledTooltip }),\n        showDisplayFormPicker ? (React.createElement(\"div\", { className: \"s-display-form-configuration\" },\n            React.createElement(ConfigurationCategory, { categoryTitle: displayValuesAsText }),\n            React.createElement(\"div\", { className: \"configuration-panel-body\" },\n                React.createElement(AttributeDisplayFormsDropdown, { displayForms: filterDisplayForms.availableDisplayForms, selectedDisplayForm: filterDisplayForms.selectedDisplayForm, onChange: onDisplayFormSelect })))) : null));\n};\n//# sourceMappingURL=AttributeFilterConfiguration.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useMemo } from \"react\";\nimport { queryConnectingAttributes, useDashboardQueryProcessing, selectSupportsElementsQueryParentFiltering, useDashboardSelector, } from \"../../../../../../model/index.js\";\n/**\n * @internal\n */\nexport function useConnectingAttributes(currentFilterDisplayForm, neighborFiltersDisplayForms) {\n    const isDependentFiltersEnabled = useDashboardSelector(selectSupportsElementsQueryParentFiltering);\n    const pairs = useMemo(() => neighborFiltersDisplayForms.map((neighborDisplayForm) => [\n        currentFilterDisplayForm,\n        neighborDisplayForm,\n    ]), [neighborFiltersDisplayForms, currentFilterDisplayForm]);\n    const { run: getConnectingAttributes, result: connectingAttributes, status: connectingAttributesStatus, error: connectingAttributesError, } = useDashboardQueryProcessing({\n        queryCreator: queryConnectingAttributes,\n    });\n    useEffect(() => {\n        // if the backend does not support the parent attributes, we must not run the query, it will end in an error\n        if (isDependentFiltersEnabled) {\n            getConnectingAttributes(pairs);\n        }\n    }, [pairs, getConnectingAttributes, isDependentFiltersEnabled]);\n    const connectingAttributesLoading = useMemo(() => {\n        return connectingAttributesStatus === \"pending\" || connectingAttributesStatus === \"running\";\n    }, [connectingAttributesStatus]);\n    if (!isDependentFiltersEnabled) {\n        // if the backend does not support the parent attributes, return en empty response\n        return {\n            connectingAttributes: [],\n            connectingAttributesError: undefined,\n            connectingAttributesLoading: false,\n        };\n    }\n    return {\n        connectingAttributes,\n        connectingAttributesLoading,\n        connectingAttributesError,\n    };\n}\n//# sourceMappingURL=useConnectingAttributes.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger, Button } from \"@gooddata/sdk-ui-kit\";\nconst ALIGN_POINTS = [{ align: \"bc tc\", offset: { x: -1, y: 5 } }];\n/**\n * @internal\n */\nexport const AttributeFilterDeleteButton = (props) => {\n    const { onDelete } = props;\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-delete-button\" },\n        React.createElement(BubbleHoverTrigger, null,\n            React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-button-small gd-icon-trash gd-delete-button s-delete-button\", disabled: false, onClick: onDelete }),\n            React.createElement(Bubble, { className: `bubble-primary`, alignPoints: ALIGN_POINTS },\n                React.createElement(FormattedMessage, { id: \"attributesDropdown.removeTooltip\" })))));\n};\n//# sourceMappingURL=AttributeFilterDeleteButton.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger, Button } from \"@gooddata/sdk-ui-kit\";\nconst ALIGN_POINTS = [{ align: \"bc tc\", offset: { x: -1, y: 5 } }];\n/**\n * @internal\n */\nexport const AttributeFilterConfigurationButton = (props) => {\n    const { onConfiguration } = props;\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-configuration-button\" },\n        React.createElement(BubbleHoverTrigger, null,\n            React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-icon-settings gd-button-small gd-configuration-button s-configuration-button\", disabled: false, onClick: onConfiguration }),\n            React.createElement(Bubble, { className: `bubble-primary`, alignPoints: ALIGN_POINTS },\n                React.createElement(FormattedMessage, { id: \"attributesDropdown.configuration\" })))));\n};\n//# sourceMappingURL=AttributeFilterConfigurationButton.js.map","// (C) 2019-2023 GoodData Corporation\nimport React from \"react\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { AttributeFilterConfigurationButton, AttributeFilterDeleteButton } from \"@gooddata/sdk-ui-filters\";\nimport { areObjRefsEqual, } from \"@gooddata/sdk-model\";\nimport { invariant } from \"ts-invariant\";\nimport { selectAllCatalogAttributesMap, selectAttributeFilterDisplayFormsMap, selectIsDeleteFilterButtonEnabled, selectIsInEditMode, useDashboardSelector, } from \"../../../model/index.js\";\nfunction useIsConfigButtonVisible(filterDisplayFormRef, attributes) {\n    const isEditMode = useDashboardSelector(selectIsInEditMode);\n    const dfMap = useDashboardSelector(selectAttributeFilterDisplayFormsMap);\n    const filterDisplayForm = dfMap.get(filterDisplayFormRef);\n    invariant(filterDisplayForm);\n    const attributesMap = useDashboardSelector(selectAllCatalogAttributesMap);\n    if (!attributes) {\n        return false;\n    }\n    const attributeByDisplayForm = attributes === null || attributes === void 0 ? void 0 : attributes.find((attribute) => areObjRefsEqual(attribute.ref, filterDisplayForm.attribute));\n    const filterAttribute = attributesMap.get(filterDisplayForm.attribute) || attributeByDisplayForm;\n    invariant(filterAttribute);\n    return isEditMode;\n}\n/**\n * @internal\n */\nexport const CustomAttributeFilterDropdownActions = ({ isApplyDisabled, onApplyButtonClick, onCancelButtonClick, onConfigurationButtonClick, onDeleteButtonClick, cancelText, applyText, filterDisplayFormRef, attributes, filterSelectionMode, }) => {\n    const isEditMode = useDashboardSelector(selectIsInEditMode);\n    const isDeleteButtonEnabled = useDashboardSelector(selectIsDeleteFilterButtonEnabled);\n    const isConfigButtonVisible = useIsConfigButtonVisible(filterDisplayFormRef, attributes);\n    const isSingleSelect = filterSelectionMode === \"single\";\n    if (!isEditMode && isSingleSelect) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions__next\" },\n        React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions-left-content__next\" },\n            isEditMode && isDeleteButtonEnabled ? (React.createElement(React.Fragment, null,\n                React.createElement(AttributeFilterDeleteButton, { onDelete: onDeleteButtonClick }),\n                React.createElement(\"div\", { className: \"gd-button-separator\" }))) : null,\n            isConfigButtonVisible ? (React.createElement(AttributeFilterConfigurationButton, { onConfiguration: onConfigurationButtonClick })) : null),\n        !isSingleSelect ? (React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions-right-content__next\" },\n            React.createElement(Button, { className: \"gd-attribute-filter-cancel-button__next gd-button-secondary gd-button-small cancel-button s-cancel\", onClick: onCancelButtonClick, value: cancelText, title: cancelText }),\n            React.createElement(Button, { disabled: isApplyDisabled, className: \"gd-attribute-filter-apply-button__next gd-button-action gd-button-small s-apply\", onClick: onApplyButtonClick, value: applyText, title: applyText }))) : null));\n};\n/**\n * @internal\n */\nexport const CustomConfigureAttributeFilterDropdownActions = ({ isSaveDisabled, onSaveButtonClick, onCancelButtonClick, cancelText, saveText }) => {\n    return (React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions__next\" },\n        React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions-left-content__next\" }),\n        React.createElement(\"div\", { className: \"gd-attribute-filter-dropdown-actions-right-content__next\" },\n            React.createElement(Button, { className: \"gd-attribute-filter-cancel-button__next gd-button-secondary gd-button-small cancel-button s-cancel\", onClick: onCancelButtonClick, value: cancelText, title: cancelText }),\n            React.createElement(Button, { disabled: isSaveDisabled, className: \"gd-attribute-filter-apply-button__next gd-button-action gd-button-small s-apply\", onClick: onSaveButtonClick, value: saveText, title: saveText }))));\n};\n//# sourceMappingURL=CustomDropdownActions.js.map","// (C) 2022-2023 GoodData Corporation\nimport { useEffect, useMemo } from \"react\";\nimport { queryAttributeDataSet, useDashboardQueryProcessing, } from \"../../../../../../model/index.js\";\n/**\n * @internal\n */\nexport function useAttributeDataSet(displayForm, loadQuery = true) {\n    const { run: getAttributeDataSet, result: attributeDataSet, status: attributesDataSetLoadingStatus, error: attributesDataSetLoadingError, } = useDashboardQueryProcessing({\n        queryCreator: queryAttributeDataSet,\n    });\n    useEffect(() => {\n        if (loadQuery) {\n            getAttributeDataSet(displayForm);\n        }\n    }, [displayForm, loadQuery, getAttributeDataSet]);\n    const attributesDataSetLoading = useMemo(() => {\n        return attributesDataSetLoadingStatus === \"pending\" || attributesDataSetLoadingStatus === \"running\";\n    }, [attributesDataSetLoadingStatus]);\n    return {\n        attributeDataSet,\n        attributesDataSetLoading,\n        attributesDataSetLoadingError,\n    };\n}\n//# sourceMappingURL=useAttributeDataSet.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { AttributeFilterButton, AttributeFilterDropdownButton, AttributeFilterElementsSelect, useAutoOpenAttributeFilterDropdownButton, useOnCloseAttributeFilterDropdownButton, AttributeDatasetInfo, } from \"@gooddata/sdk-ui-filters\";\nimport { attributeFilterToDashboardAttributeFilter, dashboardAttributeFilterToAttributeFilter, } from \"../../../_staging/dashboard/dashboardFilterConverter.js\";\nimport { useParentFilters } from \"./useParentFilters.js\";\nimport { filterObjRef } from \"@gooddata/sdk-model\";\nimport { AttributeFilterConfiguration } from \"./dashboardDropdownBody/configuration/AttributeFilterConfiguration.js\";\nimport { CustomAttributeFilterDropdownActions, CustomConfigureAttributeFilterDropdownActions, } from \"./CustomDropdownActions.js\";\nimport { removeAttributeFilter, useDashboardDispatch, selectLocale, useDashboardSelector, selectIsInEditMode, } from \"../../../model/index.js\";\nimport { AttributeFilterParentFilteringProvider, useAttributeFilterParentFiltering, } from \"./AttributeFilterParentFilteringContext.js\";\nimport { LoadingMask, LOADING_HEIGHT } from \"@gooddata/sdk-ui-kit\";\nimport { useAttributes } from \"../../../_staging/sharedHooks/useAttributes.js\";\nimport { useAttributeDataSet } from \"./dashboardDropdownBody/configuration/hooks/useAttributeDataSet.js\";\n/**\n * Default implementation of the attribute filter to use on the dashboard's filter bar.\n *\n * This will use the SDK's AttributeFilter with the button styled same as we have it today on KD.\n *\n * @alpha\n */\nexport const DefaultDashboardAttributeFilter = (props) => {\n    const { filter, onFilterChanged, isDraggable, autoOpen, onClose } = props;\n    const { parentFilters, parentFilterOverAttribute } = useParentFilters(filter);\n    const locale = useDashboardSelector(selectLocale);\n    const isEditMode = useDashboardSelector(selectIsInEditMode);\n    const attributeFilter = useMemo(() => dashboardAttributeFilterToAttributeFilter(filter), [filter]);\n    const [isConfigurationOpen, setIsConfigurationOpen] = useState(false);\n    const filterRef = useMemo(() => {\n        return filterObjRef(attributeFilter);\n    }, [attributeFilter]);\n    const dispatch = useDashboardDispatch();\n    const handleRemoveAttributeFilter = useCallback(() => dispatch(removeAttributeFilter(filter.attributeFilter.localIdentifier)), [filter, dispatch]);\n    const intl = useIntl();\n    const cancelText = intl.formatMessage({ id: \"gs.list.cancel\" });\n    const saveText = intl.formatMessage({ id: \"attributesDropdown.save\" });\n    const applyText = intl.formatMessage({ id: \"gs.list.apply\" });\n    const displayValuesAsText = intl.formatMessage({ id: \"attributesDropdown.displayValuesAs\" });\n    const filterByText = intl.formatMessage({ id: \"attributesDropdown.filterBy\" });\n    const titleText = intl.formatMessage({ id: \"attributesDropdown.title\" });\n    const resetTitleText = intl.formatMessage({ id: \"attributesDropdown.title.reset\" });\n    const selectionTitleText = intl.formatMessage({ id: \"attributesDropdown.selectionMode\" });\n    const multiSelectionOptionText = intl.formatMessage({ id: \"attributesDropdown.selectionMode.multi\" });\n    const singleSelectionOptionText = intl.formatMessage({ id: \"attributesDropdown.selectionMode.single\" });\n    const singleSelectionDisabledTooltip = intl.formatMessage({\n        id: \"attributesDropdown.selectionMode.disabled.tooltip\",\n    });\n    const parentFiltersDisabledTooltip = intl.formatMessage({\n        id: \"attributesDropdown.parentFilter.disabled.tooltip\",\n    });\n    const onCloseFilter = useCallback(() => {\n        if (onClose) {\n            onClose();\n        }\n    }, [onClose]);\n    const attributeFilterRef = useMemo(() => {\n        return [filterRef];\n    }, [filterRef]);\n    const { attributes } = useAttributes(attributeFilterRef);\n    const CustomDropdownButton = useMemo(() => {\n        return function DropdownButton(props) {\n            useAutoOpenAttributeFilterDropdownButton(props, Boolean(autoOpen));\n            useOnCloseAttributeFilterDropdownButton(props, onCloseFilter);\n            const { isOpen, title } = props;\n            const { defaultAttributeFilterTitle, displayFormChangeStatus, attributeFilterDisplayForm } = useAttributeFilterParentFiltering();\n            const { attributeDataSet } = useAttributeDataSet(attributeFilterDisplayForm);\n            const displayAttributeTooltip = isEditMode && displayFormChangeStatus !== \"running\";\n            const CustomTooltipComponent = useMemo(() => {\n                if (displayAttributeTooltip && attributeDataSet && isOpen) {\n                    return function TooltipComponent() {\n                        return (React.createElement(AttributeDatasetInfo, { title: title, defaultAttributeFilterTitle: defaultAttributeFilterTitle, attributeDataSet: attributeDataSet }));\n                    };\n                }\n            }, [displayAttributeTooltip, defaultAttributeFilterTitle, attributeDataSet, isOpen, title]);\n            return (React.createElement(AttributeFilterDropdownButton, Object.assign({}, props, { isDraggable: isDraggable, TooltipContentComponent: CustomTooltipComponent })));\n        };\n    }, [isDraggable, autoOpen, isEditMode, onCloseFilter]);\n    const CustomDropdownActions = useMemo(() => {\n        return function DropdownActions(props) {\n            const { title, configurationChanged, displayFormChanged, titleChanged, onConfigurationSave, onConfigurationClose, selectionModeChanged, } = useAttributeFilterParentFiltering();\n            const isTitleDefined = !!title && title.length > 0;\n            const isSaveDisabled = isTitleDefined\n                ? !(configurationChanged || displayFormChanged || titleChanged || selectionModeChanged)\n                : true;\n            return (React.createElement(React.Fragment, null, isConfigurationOpen ? (React.createElement(CustomConfigureAttributeFilterDropdownActions, { isSaveDisabled: isSaveDisabled, onSaveButtonClick: () => {\n                    onConfigurationSave();\n                    setIsConfigurationOpen(false);\n                }, onCancelButtonClick: () => {\n                    setIsConfigurationOpen(false);\n                }, cancelText: cancelText, saveText: saveText })) : (React.createElement(CustomAttributeFilterDropdownActions, Object.assign({}, props, { filterDisplayFormRef: filter.attributeFilter.displayForm, filterSelectionMode: filter.attributeFilter.selectionMode, applyText: applyText, cancelText: cancelText, onConfigurationButtonClick: () => {\n                    setIsConfigurationOpen(true);\n                    onConfigurationClose();\n                }, onDeleteButtonClick: () => {\n                    handleRemoveAttributeFilter();\n                }, attributes: attributes })))));\n        };\n    }, [\n        isConfigurationOpen,\n        cancelText,\n        saveText,\n        filter.attributeFilter.displayForm,\n        filter.attributeFilter.selectionMode,\n        applyText,\n        attributes,\n        handleRemoveAttributeFilter,\n    ]);\n    const CustomElementsSelect = useMemo(() => {\n        return function ElementsSelect(props) {\n            const { displayFormChangeStatus } = useAttributeFilterParentFiltering();\n            const closeHandler = useCallback(() => {\n                setIsConfigurationOpen(false);\n            }, []);\n            if (displayFormChangeStatus === \"running\") {\n                return React.createElement(LoadingMask, { height: LOADING_HEIGHT });\n            }\n            return (React.createElement(React.Fragment, null, isConfigurationOpen ? (React.createElement(AttributeFilterConfiguration, { closeHandler: closeHandler, filterRef: filterRef, filterByText: filterByText, displayValuesAsText: displayValuesAsText, titleText: titleText, resetTitleText: resetTitleText, selectionTitleText: selectionTitleText, multiSelectionOptionText: multiSelectionOptionText, singleSelectionOptionText: singleSelectionOptionText, singleSelectionDisabledTooltip: singleSelectionDisabledTooltip, parentFiltersDisabledTooltip: parentFiltersDisabledTooltip })) : (React.createElement(AttributeFilterElementsSelect, Object.assign({}, props)))));\n        };\n    }, [\n        isConfigurationOpen,\n        filterRef,\n        filterByText,\n        displayValuesAsText,\n        titleText,\n        resetTitleText,\n        selectionTitleText,\n        multiSelectionOptionText,\n        singleSelectionOptionText,\n        singleSelectionDisabledTooltip,\n        parentFiltersDisabledTooltip,\n    ]);\n    return (React.createElement(AttributeFilterParentFilteringProvider, { filter: filter, attributes: attributes },\n        React.createElement(AttributeFilterButton, { title: filter.attributeFilter.title, resetOnParentFilterChange: false, filter: attributeFilter, onApply: (newFilter) => {\n                onFilterChanged(attributeFilterToDashboardAttributeFilter(newFilter, filter.attributeFilter.localIdentifier, filter.attributeFilter.title));\n            }, parentFilters: parentFilters, parentFilterOverAttribute: parentFilterOverAttribute, locale: locale, DropdownButtonComponent: CustomDropdownButton, DropdownActionsComponent: CustomDropdownActions, ElementsSelectComponent: CustomElementsSelect, fullscreenOnMobile: true, selectionMode: filter.attributeFilter.selectionMode, selectFirst: true })));\n};\n//# sourceMappingURL=DefaultDashboardAttributeFilter.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useEffect } from \"react\";\nimport { usePrevious } from \"@gooddata/sdk-ui\";\n/**\n * This hook is useful to inject custom isAutoOpen prop to AttributeFilterDropdownButton\n * @internal\n */\nexport const useAutoOpenAttributeFilterDropdownButton = (props, isAutoOpen) => {\n    const { onClick } = props;\n    const { isOpen: isOpenPrevious } = usePrevious(props);\n    //This effect is handling autoOpen filter by simulating button click to open dropdown\n    useEffect(() => {\n        if (isAutoOpen && !isOpenPrevious) {\n            onClick();\n        }\n    }, [onClick, isAutoOpen, isOpenPrevious]);\n};\n//# sourceMappingURL=useAutoOpenAttributeFilterDropdownButton.js.map","// (C) 2021-2022 GoodData Corporation\nimport { useEffect } from \"react\";\nimport { usePrevious } from \"@gooddata/sdk-ui\";\n/**\n * This hook is useful to inject custom onClose to AttributeFilterDropdownButton\n * @internal\n */\nexport const useOnCloseAttributeFilterDropdownButton = (props, onClose) => {\n    const { isOpen } = props;\n    const { isOpen: isOpenPrevious } = usePrevious(props);\n    //This effect is handling onClose callback by checking previous and current open state\n    useEffect(() => {\n        if (onClose && isOpenPrevious && !isOpen) {\n            onClose();\n        }\n    }, [onClose, isOpen, isOpenPrevious]);\n};\n//# sourceMappingURL=useOnCloseAttributeFilterDropdownButton.js.map","// (C) 2019-2023 GoodData Corporation\nimport moment from \"moment\";\nimport { translationUtils } from \"@gooddata/util\";\nexport const getLocalizedDateFormat = (locale) => {\n    var _a;\n    const localizedMoment = moment().locale(translationUtils.sanitizeLocaleForMoment(locale));\n    const localeData = (localizedMoment === null || localizedMoment === void 0 ? void 0 : localizedMoment.localeData) && localizedMoment.localeData();\n    return (_a = localeData === null || localeData === void 0 ? void 0 : localeData._longDateFormat) === null || _a === void 0 ? void 0 : _a.L;\n};\nexport const DEFAULT_LOCALE = \"en-US\";\n/**\n * Localized date format patterns for DAY granularity according to ICU. In case backend has the ability to define the patterns,these should\n * match with the backend definitions.\n *\n * See https://date-fns.org/docs/format and https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n */\nexport const localizedIcuDateFormatPatterns = {\n    \"en-US\": \"M/d/y\",\n    \"en-GB\": \"dd/MM/y\",\n    \"cs-CZ\": \"d. M. y\",\n    \"de-DE\": \"d.M.y\",\n    \"es-ES\": \"d/M/y\",\n    \"fr-FR\": \"dd/MM/y\",\n    \"ja-JP\": \"y/M/d\",\n    \"nl-NL\": \"d-M-y\",\n    \"pt-BR\": \"dd/MM/y\",\n    \"pt-PT\": \"dd/MM/y\",\n    \"zh-Hans\": \"y/M/d\",\n    \"ru-RU\": \"dd.MM.y\",\n};\n/**\n * Returns localized date format pattern for DAY granularity according to ICU. Unsupported locales default to en-US.\n *\n * See https://date-fns.org/docs/format and https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * @internal\n */\nexport const getLocalizedIcuDateFormatPattern = (locale) => { var _a; return (_a = localizedIcuDateFormatPatterns[locale]) !== null && _a !== void 0 ? _a : localizedIcuDateFormatPatterns[DEFAULT_LOCALE]; };\n//# sourceMappingURL=FormattingUtils.js.map","// (C) 2007-2019 GoodData Corporation\nconst SCREEN = \"only screen\";\nconst ZERO_BREAKPOINT = 0;\nconst SMALL_BREAKPOINT = 640;\nconst smallRange = {\n    lower: ZERO_BREAKPOINT,\n    upper: SMALL_BREAKPOINT,\n};\nconst getQueryMatching = (range) => `${SCREEN} and (min-width:${range.lower}px) and (max-width:${range.upper}px)`;\nconst mobileRange = smallRange;\nexport const IS_MOBILE_DEVICE = getQueryMatching(mobileRange);\n//# sourceMappingURL=MediaQueries.js.map","// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const DateFilterButton = ({ isOpen, isMobile, title, children, disabled, }) => {\n    return (React.createElement(\"div\", { className: cx(\"s-date-filter-button\", \"gd-date-filter-button\", \"dropdown-button\", isMobile && \"gd-date-filter-button-mobile\", isOpen && \"is-active\", disabled && \"disabled\") },\n        React.createElement(\"div\", { className: \"button-content\" },\n            React.createElement(\"div\", { className: \"s-date-filter-title button-title\" }, title),\n            React.createElement(\"div\", { className: \"button-subtitle\" }, children))));\n};\n//# sourceMappingURL=DateFilterButton.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { resolveLocale } from \"@gooddata/sdk-ui\";\nimport { getDateFilterTitle } from \"../utils/Translations/DateFilterTitle.js\";\nconst DateFilterTextLocalizedComponent = ({ dateFormat, filter, intl, }) => React.createElement(React.Fragment, null, getDateFilterTitle(filter, resolveLocale(intl.locale), dateFormat));\nexport const DateFilterTextLocalized = injectIntl(DateFilterTextLocalizedComponent);\n//# sourceMappingURL=DateFilterTextLocalized.js.map","// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { DateFilterButton } from \"../DateFilterButton/DateFilterButton.js\";\nimport { DateFilterTextLocalized } from \"../DateFilterTextLocalized/DateFilterTextLocalized.js\";\nexport const DateFilterButtonLocalized = ({ dateFilterOption, dateFormat, isOpen = false, isMobile = true, customFilterName, disabled, }) => {\n    return (React.createElement(DateFilterButton, { title: customFilterName || React.createElement(FormattedMessage, { id: \"dateFilterDropdown.title\" }), isOpen: isOpen, isMobile: isMobile, disabled: disabled },\n        React.createElement(\"span\", { className: \"s-button-text\" },\n            React.createElement(DateFilterTextLocalized, { filter: dateFilterOption, dateFormat: dateFormat }))));\n};\n//# sourceMappingURL=DateFilterButtonLocalized.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport DefaultMediaQuery from \"react-responsive\";\nimport { defaultImport } from \"default-import\";\nimport { CustomizableCheckmark } from \"@gooddata/sdk-ui-kit\";\nimport { MediaQueries } from \"../../constants/index.js\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst MediaQuery = defaultImport(DefaultMediaQuery);\nexport const ListItem = (_a) => {\n    var { isSelected: isActive, className, children } = _a, restProps = __rest(_a, [\"isSelected\", \"className\", \"children\"]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"button\", Object.assign({ className: cx(\"gd-list-item\", \"gd-filter-list-item\", {\n                \"is-selected\": isActive,\n                \"gd-filter-list-item-selected\": isActive,\n            }, className) }, restProps),\n            children,\n            isActive ? (React.createElement(MediaQuery, { query: MediaQueries.IS_MOBILE_DEVICE },\n                React.createElement(CustomizableCheckmark, { className: \"gd-customizable-checkmark-mobile-date-filter\" }))) : null)));\n};\n//# sourceMappingURL=ListItem.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { granularityIntlCodes } from \"../constants/i18n.js\";\nimport { messages } from \"../../locales.js\";\nexport const ExcludeCurrentPeriodToggleLabel = (props) => {\n    const id = !props.disabled && props.granularity\n        ? messages[`${granularityIntlCodes[props.granularity]}Excluded`].id\n        : messages.allTimeExcluded.id;\n    return (React.createElement(FormattedMessage, { id: id }, (...children) => React.createElement(\"span\", { className: \"input-label-text\" }, children)));\n};\n//# sourceMappingURL=ExcludeCurrentPeriodToggleLabel.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { ExcludeCurrentPeriodToggleLabel } from \"./ExcludeCurrentPeriodToggleLabel.js\";\nconst alignPoints = [{ align: \"tc bc\" }];\nexport const ExcludeCurrentPeriodToggle = ({ value, onChange, disabled, granularity, }) => (React.createElement(\"div\", { className: \"gd-extended-date-filter-exclude-current\" },\n    React.createElement(BubbleHoverTrigger, null,\n        React.createElement(\"label\", { className: cx(\"s-exclude-current-period\", \"input-checkbox-label\", {\n                \"s-exclude-current-perod-enabled\": !disabled,\n                \"s-exclude-current-perod-disabled\": disabled,\n            }) },\n            React.createElement(\"input\", { type: \"checkbox\", className: \"input-checkbox\", checked: value, onChange: (e) => onChange(e.target.checked), disabled: disabled }),\n            \"\\u2002\",\n            React.createElement(ExcludeCurrentPeriodToggleLabel, { granularity: granularity, disabled: disabled })),\n        disabled ? (React.createElement(Bubble, { alignPoints: alignPoints },\n            React.createElement(FormattedMessage, { id: \"filters.excludeCurrentPeriod.unavailable\" }))) : null)));\n//# sourceMappingURL=ExcludeCurrentPeriodToggle.js.map","import { __rest } from \"tslib\";\n// (C) 2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const VisibleScrollbar = (_a) => {\n    var { className, children } = _a, restProps = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(\"gd-visible-scrollbar\", className) }, restProps), children));\n};\n//# sourceMappingURL=VisibleScrollbar.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { ListItem } from \"../ListItem/ListItem.js\";\nexport const AllTimeFilterItem = ({ className, filterOption, selectedFilterOption, onSelectedFilterOptionChange }) => (React.createElement(ListItem, { isSelected: filterOption.localIdentifier === selectedFilterOption.localIdentifier, onClick: () => onSelectedFilterOptionChange(filterOption), className: cx(\"s-all-time\", className) }, filterOption.name ? filterOption.name : React.createElement(FormattedMessage, { id: \"filters.allTime.title\" })));\n//# sourceMappingURL=AllTimeFilterItem.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const DateFilterFormWrapper = (_a) => {\n    var { children, isMobile, className } = _a, restProps = __rest(_a, [\"children\", \"isMobile\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(className, \"gd-date-filter-form-wrapper\", !isMobile && \"gd-date-filter-form-wrapper-desktop\") }, restProps),\n        React.createElement(\"div\", { className: \"gd-date-filter-form-wrapper-inner\" }, children)));\n};\n//# sourceMappingURL=DateFilterFormWrapper.js.map","// (C) 2007-2022 GoodData Corporation\nimport moment from \"moment\";\nimport { platformDateFormat, TIME_FORMAT } from \"../constants/Platform.js\";\nconst mergeModifiers = (defaultModifiers, userModifiers) => defaultModifiers ? { modifiers: Object.assign(Object.assign({}, defaultModifiers), userModifiers) } : undefined;\nconst mergeDayPickerPropsBody = (defaultProps, userProps) => (Object.assign(Object.assign(Object.assign({}, defaultProps), userProps), mergeModifiers(defaultProps.modifiers, userProps.modifiers)));\nexport const mergeDayPickerProps = (defaultProps, userProps) => (userProps ? mergeDayPickerPropsBody(defaultProps, userProps) : defaultProps);\nexport const areRangeBoundsCrossed = (from, to) => from && to ? moment(from).isAfter(moment(to)) : false;\nexport const getPlatformStringFromDate = (value) => moment(value).format(platformDateFormat);\nexport const getTimeStringFromDate = (value) => moment(value).format(TIME_FORMAT);\n//# sourceMappingURL=utils.js.map","// (C) 2019 GoodData Corporation\nimport React from \"react\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { getLocalizedDateFormat } from \"../utils/FormattingUtils.js\";\nconst DateRangePickerErrorComponent = (props) => {\n    const { dateFormat, errorId, intl } = props;\n    return (React.createElement(\"div\", { className: \"gd-date-range-picker-error-message s-absolute-range-error\" },\n        React.createElement(FormattedMessage, { id: errorId, values: { format: dateFormat || getLocalizedDateFormat(intl.locale) } })));\n};\nexport const DateRangePickerError = injectIntl(DateRangePickerErrorComponent);\n//# sourceMappingURL=DateRangePickerError.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\n// This has to be a class because DayPickerInput refs to it internally.\n// See https://github.com/gpbl/react-day-picker/issues/748 for more information\nexport class DateRangePickerInputFieldBody extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.inputRef = React.createRef();\n        this.invokeInputMethod = (key) => {\n            if (this.inputRef.current) {\n                this.inputRef.current[key]();\n            }\n        };\n        this.blur = () => this.invokeInputMethod(\"blur\");\n        this.focus = () => this.invokeInputMethod(\"focus\");\n    }\n    get value() {\n        if (this.inputRef.current) {\n            return this.inputRef.current.value;\n        }\n        return \"\";\n    }\n    render() {\n        const { className } = this.props;\n        return (React.createElement(\"span\", { className: cx(className) },\n            React.createElement(\"span\", { className: \"gd-icon-calendar\" }),\n            React.createElement(\"input\", Object.assign({}, this.props, { ref: this.inputRef, className: \"input-text s-date-range-picker-input-field\" }))));\n    }\n}\n//# sourceMappingURL=DateRangePickerInputFieldBody.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useState, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport isValid from \"date-fns/isValid/index.js\";\nimport parse from \"date-fns/parse/index.js\";\nimport format from \"date-fns/format/index.js\";\nimport { DateRangePickerInputFieldBody } from \"./DateRangePickerInputFieldBody.js\";\nimport { convertPlatformDateStringToDate } from \"../utils/DateConversions.js\";\nimport { TIME_FORMAT } from \"../constants/Platform.js\";\nimport { getPlatformStringFromDate, getTimeStringFromDate } from \"./utils.js\";\nfunction formatDate(date, dateFormat) {\n    return format(date, dateFormat);\n}\nfunction parseDate(str, dateFormat) {\n    try {\n        const parsedDate = parse(str, dateFormat, new Date());\n        // parse only dates with 4-digit years. this mimics moment.js behavior - it parses only dates above 1900\n        // this is to make sure that the picker input is not overwritten in the middle of writing the year with year \"0002\" when writing 2020.\n        //\n        // it's also necessary to parse only when the input string fully matches with the desired format\n        // to make sure that the picker input is not overwritten in the middle of writing.\n        // e.g, let's consider a case where dateFormat is \"dd/MM/yyyy\" and the DayPickerInput has already been filled with a valid string \"13/09/2020\",\n        // then an user wants to change only the month \"13/09/2020\" -> \"13/11/2020\" by removing \"09\" and typing \"11\".\n        // in such case the parsing should wait until the user completes typing \"11\" (otherwise if parsing is done right after the first \"1\" is typed,\n        // the cursor automatically moves to the end of the string in the middle of writing, causing a bad experience for the user).\n        if (isValid(parsedDate) &&\n            parsedDate.getFullYear() >= 1000 &&\n            str === formatDate(parsedDate, dateFormat)) {\n            return parsedDate;\n        }\n        return;\n    }\n    catch (_a) {\n        return;\n    }\n}\nconst DateTimePickerComponent = React.forwardRef((props, ref) => {\n    const { placeholderDate, value, onChange, dateFormat, handleDayClick, isMobile, isTimeEnabled, onKeyDown, className, error = false, } = props;\n    // keeping local copy to enable time update onBlur\n    const [pickerTime, setPickerTime] = useState(getTimeStringFromDate(value));\n    const [inputValue, setInputValue] = useState(formatDate(value, dateFormat));\n    useEffect(() => {\n        setInputValue(formatDate(value, dateFormat));\n    }, [value, dateFormat]);\n    // make sure it contains appropriate time if enabled\n    const adjustDate = (selectedDate) => {\n        if (isTimeEnabled && selectedDate) {\n            const previousDate = value !== null && value !== void 0 ? value : moment(pickerTime, TIME_FORMAT).toDate();\n            selectedDate.setHours(previousDate.getHours());\n            selectedDate.setMinutes(previousDate.getMinutes());\n        }\n        return selectedDate;\n    };\n    const onDateChange = (selectedDate) => {\n        onChange(adjustDate(selectedDate));\n    };\n    const handleInputChange = (value) => {\n        setInputValue(value);\n        const parsedDate = parseDate(value, dateFormat);\n        onDateChange(parsedDate);\n    };\n    const onTimeChange = (input) => {\n        const date = value !== null && value !== void 0 ? value : new Date(); // set today in case of invalid date\n        const time = moment(input, TIME_FORMAT);\n        if (time.isValid()) {\n            date.setHours(time.hours());\n            date.setMinutes(time.minutes());\n            setPickerTime(input);\n        }\n        onChange(date);\n    };\n    return (React.createElement(\"div\", { className: cx(className, isTimeEnabled && \"gd-flex-row\") },\n        isMobile ? (React.createElement(DateRangePickerInputFieldBody, { type: \"date\", className: cx(\"s-date-range-picker-date\", \"gd-date-range-picker-input\", \"gd-date-range-picker-input-native\", error && \"gd-date-range-picker-input-error\"), placeholder: placeholderDate, onChange: (event) => onDateChange(convertPlatformDateStringToDate(event.target.value)), value: getPlatformStringFromDate(value) })) : (React.createElement(\"div\", { className: cx(\"gd-date-range-picker-input\", error && \"gd-date-range-picker-input-error\") },\n            React.createElement(\"span\", null,\n                React.createElement(\"span\", { className: \"gd-icon-calendar\" }),\n                React.createElement(\"input\", { onKeyDown: onKeyDown, ref: ref, placeholder: placeholderDate, onChange: (event) => handleInputChange(event.target.value), onClick: handleDayClick, onFocus: handleDayClick, value: inputValue, className: \"input-text s-date-range-picker-input-field\" })))),\n        isTimeEnabled ? (React.createElement(\"span\", { className: cx(\"gd-date-range-picker-input\", \"gd-date-range-picker-input-time\", \"s-date-range-picker-input-time\", error && \"gd-date-range-picker-input-error\") },\n            React.createElement(\"span\", { className: \"gd-icon-clock\" }),\n            React.createElement(\"input\", { type: \"time\", className: \"input-text\", onChange: (event) => onTimeChange(event.target.value), value: pickerTime }))) : null));\n});\nDateTimePickerComponent.displayName = \"DateTimePickerComponent\";\nconst DateTimePickerWithInt = injectIntl(DateTimePickerComponent, { forwardRef: true });\nDateTimePickerWithInt.displayName = \"DateTimePicker\";\nexport { DateTimePickerWithInt };\n//# sourceMappingURL=DateTimePicker.js.map","// (C) 2007-2023 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DayPicker, } from \"react-day-picker\";\nimport { injectIntl } from \"react-intl\";\nimport { Overlay } from \"@gooddata/sdk-ui-kit\";\nimport { mergeDayPickerProps } from \"./utils.js\";\nimport { DateRangePickerError } from \"./DateRangePickerError.js\";\nimport { DateTimePickerWithInt } from \"./DateTimePicker.js\";\nimport { DAY_END_TIME } from \"../constants/Platform.js\";\nimport enUS from \"date-fns/locale/en-US/index.js\";\nimport de from \"date-fns/locale/de/index.js\";\nimport es from \"date-fns/locale/es/index.js\";\nimport fr from \"date-fns/locale/fr/index.js\";\nimport ja from \"date-fns/locale/ja/index.js\";\nimport nl from \"date-fns/locale/nl/index.js\";\nimport pt from \"date-fns/locale/pt/index.js\";\nimport ptBR from \"date-fns/locale/pt-BR/index.js\";\nimport zhCN from \"date-fns/locale/zh-CN/index.js\";\nimport ru from \"date-fns/locale/ru/index.js\";\nconst convertedLocales = {\n    \"en-US\": enUS,\n    \"de-DE\": de,\n    \"es-ES\": es,\n    \"fr-FR\": fr,\n    \"ja-JP\": ja,\n    \"nl-NL\": nl,\n    \"pt-BR\": ptBR,\n    \"pt-PT\": pt,\n    \"zh-Hans\": zhCN,\n    \"ru-RU\": ru,\n};\nconst ALIGN_POINTS = [{ align: \"bl tl\", offset: { x: 0, y: 1 } }];\nfunction convertLocale(locale) {\n    return convertedLocales[locale];\n}\nfunction convertWeekStart(weekStart) {\n    switch (weekStart) {\n        case \"Sunday\":\n            return 0;\n        case \"Monday\":\n            return 1;\n        default:\n            throw new Error(`Unknown week start ${weekStart}`);\n    }\n}\nclass DateRangePickerComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dateRangePickerInputFrom = React.createRef();\n        this.dateRangePickerInputTo = React.createRef();\n        this.dateRangePickerContainer = React.createRef();\n        this.handleRangeSelect = (_range, selectedDate) => {\n            let calculatedFrom;\n            let calculatedTo;\n            // it is better to use selectedDate property as _range is not working correctly in corner cases\n            if (this.state.selectedInput == \"from\") {\n                calculatedFrom = this.setTimeForDate(selectedDate, this.state.inputFromValue);\n                calculatedTo = this.state.inputToValue;\n            }\n            else {\n                calculatedFrom = this.state.inputFromValue;\n                calculatedTo = this.setTimeForDate(selectedDate, this.state.inputToValue);\n            }\n            this.setState({\n                inputFromValue: calculatedFrom,\n                inputToValue: calculatedTo,\n                selectedRange: { from: calculatedFrom, to: calculatedTo },\n                isOpen: false,\n            }, () => {\n                this.updateRange(calculatedFrom, calculatedTo);\n            });\n        };\n        this.updateRange = (from, to) => {\n            this.props.onRangeChange({ from, to });\n        };\n        this.handleFromDayClick = () => {\n            this.setState({\n                selectedInput: \"from\",\n                isOpen: true,\n                monthDate: this.props.range.from,\n            });\n        };\n        this.handleToDayClick = () => {\n            this.setState({\n                selectedInput: \"to\",\n                isOpen: true,\n                monthDate: this.props.range.to,\n            });\n        };\n        this.handleFromChange = (date) => {\n            if (date) {\n                this.setState({ inputFromValue: date });\n            }\n            this.setState({\n                selectedRange: { from: date, to: this.state.selectedRange.to },\n                monthDate: date,\n            }, () => {\n                this.updateRange(date, this.state.selectedRange.to);\n            });\n        };\n        this.handleToChange = (date) => {\n            if (date) {\n                this.setState({ inputToValue: date });\n            }\n            this.setState({\n                selectedRange: { from: this.state.selectedRange.from, to: date },\n                monthDate: date,\n            }, () => {\n                this.updateRange(this.state.selectedRange.from, date);\n            });\n        };\n        this.state = {\n            isOpen: false,\n            inputFromValue: this.props.range.from,\n            inputToValue: this.props.range.to,\n            selectedRange: { from: this.props.range.from, to: this.props.range.to },\n            monthDate: null,\n            selectedInput: null,\n        };\n        this.handleMonthChanged = this.handleMonthChanged.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.handleMonthChanged = this.handleMonthChanged.bind(this);\n        this.handleRangeSelect = this.handleRangeSelect.bind(this);\n        this.handleFromDayClick = this.handleFromDayClick.bind(this);\n        this.handleToDayClick = this.handleToDayClick.bind(this);\n        this.handleFromChange = this.handleFromChange.bind(this);\n        this.handleToChange = this.handleToChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n    render() {\n        const { dateFormat, range: { from, to }, dayPickerProps, intl, isMobile, errors: { from: errorFrom, to: errorTo } = { from: undefined, to: undefined }, isTimeEnabled, weekStart = \"Sunday\", shouldOverlayDatePicker = false, } = this.props;\n        const defaultDayPickerProps = {\n            mode: \"range\",\n            showOutsideDays: true,\n            modifiers: { start: from, end: to },\n            selected: { from, to },\n            locale: convertLocale(intl.locale),\n        };\n        const dayPickerPropsWithDefaults = mergeDayPickerProps(defaultDayPickerProps, dayPickerProps);\n        const classNameProps = {\n            root: `gd-date-range-picker-picker s-date-range-calendar-${this.state.selectedInput}`,\n        };\n        const DatePicker = (React.createElement(\"div\", { className: \"gd-date-range-picker-wrapper\", ref: this.dateRangePickerContainer },\n            React.createElement(DayPicker, Object.assign({}, dayPickerPropsWithDefaults, { onSelect: this.handleRangeSelect, selected: this.state.selectedRange, month: this.state.monthDate, classNames: classNameProps, onMonthChange: this.handleMonthChanged, weekStartsOn: convertWeekStart(weekStart) }))));\n        const OverlayDatePicker = (React.createElement(Overlay, { alignTo: `.gd-date-range-picker-${isTimeEnabled ? this.state.selectedInput : \"from\"}`, alignPoints: ALIGN_POINTS, closeOnOutsideClick: true, closeOnMouseDrag: true, closeOnParentScroll: true }, DatePicker));\n        const FromField = (React.createElement(DateTimePickerWithInt, { onKeyDown: this.onKeyDown, ref: this.dateRangePickerInputFrom, placeholderDate: intl.formatMessage({ id: \"filters.from\" }), onChange: this.handleFromChange, value: this.state.inputFromValue, dateFormat: dateFormat, isMobile: isMobile, handleDayClick: this.handleFromDayClick, isTimeEnabled: isTimeEnabled, className: cx(\"s-date-range-picker-from\", \"gd-date-range-picker-from\"), error: typeof errorFrom !== \"undefined\" }));\n        const ToField = (React.createElement(DateTimePickerWithInt, { onKeyDown: this.onKeyDown, ref: this.dateRangePickerInputTo, placeholderDate: intl.formatMessage({ id: \"filters.to\" }), onChange: this.handleToChange, value: this.state.inputToValue, dateFormat: dateFormat, isMobile: isMobile, handleDayClick: this.handleToDayClick, isTimeEnabled: isTimeEnabled, className: cx(\"s-date-range-picker-to\", \"gd-date-range-picker-to\"), defaultTime: DAY_END_TIME, error: typeof errorTo !== \"undefined\" }));\n        const DatePickerComponent = shouldOverlayDatePicker ? OverlayDatePicker : DatePicker;\n        const isFromInputDatePickerOpen = this.state.selectedInput === \"from\" && this.state.isOpen;\n        const isToInputDatePickerOpen = this.state.selectedInput === \"to\" && this.state.isOpen;\n        return (React.createElement(React.Fragment, null,\n            isTimeEnabled ? (React.createElement(\"div\", { className: \"gd-date-range-picker datetime s-date-range-picker\" },\n                React.createElement(\"label\", null, intl.formatMessage({ id: \"filters.from\" })),\n                FromField,\n                isFromInputDatePickerOpen ? DatePickerComponent : null,\n                React.createElement(\"label\", null, intl.formatMessage({ id: \"filters.to\" })),\n                ToField,\n                isToInputDatePickerOpen ? DatePickerComponent : null)) : (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: \"gd-date-range-picker gd-flex-row s-date-range-picker\" },\n                    FromField,\n                    React.createElement(\"span\", { className: \"gd-date-range-picker-dash\" }, \"\\u2013\"),\n                    ToField),\n                this.state.isOpen ? DatePickerComponent : null)),\n            errorFrom || errorTo ? (React.createElement(DateRangePickerError, { dateFormat: dateFormat, errorId: \n                // This means that when both inputs are invalid, error is shown only for \"from\"\n                errorFrom || errorTo })) : null));\n    }\n    onKeyDown(e) {\n        if (e.key === \"Escape\" || e.key === \"Tab\") {\n            this.setState({ isOpen: false });\n        }\n    }\n    handleMonthChanged(month) {\n        this.setState({ monthDate: month });\n    }\n    // get new date object composed from the date of the first argument\n    // and the time of the date provided as the second argument\n    setTimeForDate(date, time) {\n        const result = new Date(date);\n        result.setHours(time.getHours());\n        result.setMinutes(time.getMinutes());\n        return result;\n    }\n    handleClickOutside(event) {\n        if (this.dateRangePickerContainer.current &&\n            !this.dateRangePickerContainer.current.contains(event.target) &&\n            this.dateRangePickerInputFrom &&\n            !this.dateRangePickerInputFrom.current.contains(event.target) &&\n            this.dateRangePickerInputTo &&\n            !this.dateRangePickerInputTo.current.contains(event.target)) {\n            this.setState({ isOpen: false });\n        }\n    }\n}\nexport const DateRangePicker = injectIntl(DateRangePickerComponent);\n//# sourceMappingURL=DateRangePicker.js.map","// (C) 2007-2022 GoodData Corporation\nimport { convertDateToPlatformDateString, convertPlatformDateStringToDate, } from \"../utils/DateConversions.js\";\nimport { platformDateFormat, platformDateTimeFormat } from \"../constants/Platform.js\";\nexport const dateRangeToDateFilterValue = (range, localIdentifier, isTimeForAbsoluteRangeEnabled) => {\n    const parsingFormat = isTimeForAbsoluteRangeEnabled ? platformDateTimeFormat : platformDateFormat;\n    return {\n        from: convertDateToPlatformDateString(range.from, parsingFormat),\n        to: convertDateToPlatformDateString(range.to, parsingFormat),\n        localIdentifier,\n        type: \"absoluteForm\",\n        name: \"\",\n        visible: true,\n    };\n};\nexport const dateFilterValueToDateRange = (value, isTimeForAbsoluteRangeEnabled = false) => {\n    const isFromTimeDefined = value.from && value.from.split(\" \").length > 1;\n    const isToTimeDefined = value.to && value.to.split(\" \").length > 1;\n    const from = value && convertPlatformDateStringToDate(value.from);\n    const to = value && convertPlatformDateStringToDate(value.to);\n    if (from && !isFromTimeDefined && isTimeForAbsoluteRangeEnabled) {\n        from.setHours(0);\n        from.setMinutes(0);\n    }\n    if (to && !isToTimeDefined && isTimeForAbsoluteRangeEnabled) {\n        to.setHours(23);\n        to.setMinutes(59);\n    }\n    return { from, to };\n};\n//# sourceMappingURL=conversions.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { DateRangePicker } from \"../DateRangePicker/DateRangePicker.js\";\nimport { dateFilterValueToDateRange, dateRangeToDateFilterValue } from \"./conversions.js\";\nconst dayPickerProps = {\n    mode: \"range\",\n    weekStartsOn: 0, // Sunday, regardless of locale\n};\n/**\n * @internal\n */\nexport class AbsoluteDateFilterForm extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleRangeChange = (range) => {\n            const { selectedFilterOption, isTimeEnabled } = this.props;\n            this.props.onSelectedFilterOptionChange(dateRangeToDateFilterValue(range, selectedFilterOption.localIdentifier, isTimeEnabled));\n        };\n    }\n    render() {\n        const { dateFormat, isMobile, selectedFilterOption, errors, isTimeEnabled, weekStart, shouldOverlayDatePicker, } = this.props;\n        return (React.createElement(DateRangePicker, { dateFormat: dateFormat, onRangeChange: this.handleRangeChange, range: dateFilterValueToDateRange(selectedFilterOption, isTimeEnabled), errors: errors, isMobile: isMobile, dayPickerProps: dayPickerProps, isTimeEnabled: isTimeEnabled, weekStart: weekStart, shouldOverlayDatePicker: shouldOverlayDatePicker }));\n    }\n}\n//# sourceMappingURL=AbsoluteDateFilterForm.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport cx from \"classnames\";\nexport const ListItemTooltip = (_a) => {\n    var { children, className, bubbleAlignPoints } = _a, restProps = __rest(_a, [\"children\", \"className\", \"bubbleAlignPoints\"]);\n    return (React.createElement(\"span\", Object.assign({ className: cx(\"gd-list-item-tooltip\", className) }, restProps),\n        React.createElement(BubbleHoverTrigger, null,\n            React.createElement(\"span\", { className: \"gd-icon-circle-question gd-list-item-tooltip-icon\" }),\n            React.createElement(Bubble, { alignPoints: bubbleAlignPoints }, children))));\n};\n//# sourceMappingURL=ListItemTooltip.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const TabsWrapper = (_a) => {\n    var { className, children } = _a, restProps = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(\"gd-tabs small is-condensed\", className) }, restProps), children));\n};\nexport const Tab = (_a) => {\n    var { selected, className, children } = _a, restProps = __rest(_a, [\"selected\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(selected && \"is-active\", \"gd-tab\", className) }, restProps), children));\n};\n//# sourceMappingURL=Tabs.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport sortBy from \"lodash/sortBy.js\";\nimport { TabsWrapper, Tab } from \"../Tabs/Tabs.js\";\nimport { granularityIntlCodes } from \"../constants/i18n.js\";\nimport { messages } from \"../../locales.js\";\nconst granularityOrders = {\n    \"GDC.time.year\": 0,\n    \"GDC.time.quarter\": 1,\n    \"GDC.time.month\": 2,\n    \"GDC.time.week_us\": 3,\n    \"GDC.time.date\": 4,\n    \"GDC.time.hour\": 5,\n    \"GDC.time.minute\": 6,\n};\nconst sortGranularities = (granularities) => sortBy(granularities, (granularity) => granularityOrders[granularity]);\nexport const GranularityTabs = ({ availableGranularities, onSelectedGranularityChange, selectedGranularity, }) => (React.createElement(TabsWrapper, { className: \"gd-relative-filter-form-granularity-tabs s-relative-filter-form-granularity-tabs\" }, sortGranularities(availableGranularities).map((granularity) => {\n    const intlGranularity = granularityIntlCodes[granularity];\n    return (React.createElement(Tab, { key: granularity, selected: granularity === selectedGranularity, onClick: () => onSelectedGranularityChange(granularity), className: `s-granularity-${intlGranularity}` },\n        React.createElement(FormattedMessage, { id: messages[intlGranularity].id })));\n})));\n//# sourceMappingURL=GranularityTabs.js.map","export const itemToString = (item) => {\n    if ((item === null || item === void 0 ? void 0 : item.type) === \"option\" && item.label) {\n        return item.label;\n    }\n    return \"\";\n};\nexport const getSelectableItems = (selectItems) => selectItems.filter((item) => item.type === \"option\");\n//# sourceMappingURL=utils.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const SelectOption = (_a) => {\n    var { isFocused, isSelected, className, children } = _a, restProps = __rest(_a, [\"isFocused\", \"isSelected\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(\"gd-list-item\", \"gd-select-option\", isSelected && \"gd-select-option-is-selected\", isFocused && \"gd-select-option-is-focused s-select-item-focused\", className) }, restProps), children));\n};\n//# sourceMappingURL=SelectOption.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const SelectHeading = (_a) => {\n    var { children, className } = _a, otherProps = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(\"gd-select-heading gd-list-item gd-list-item-header\", className) }, otherProps), children));\n};\n//# sourceMappingURL=SelectHeading.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const Separator = (_a) => {\n    var { className } = _a, restProps = __rest(_a, [\"className\"]);\n    return (React.createElement(\"hr\", Object.assign({ className: cx(\"gd-separator-generic\", className) }, restProps)));\n};\n//# sourceMappingURL=Separator.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Separator } from \"../Separator/Separator.js\";\nexport const SelectSeparator = (_a) => {\n    var { className } = _a, otherProps = __rest(_a, [\"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(\"gd-select-separator\", className) }, otherProps),\n        React.createElement(Separator, null)));\n};\n//# sourceMappingURL=SelectSeparator.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { VariableSizeList as List } from \"react-window\";\nimport cx from \"classnames\";\nimport range from \"lodash/range.js\";\nimport { SelectOption } from \"./SelectOption.js\";\nimport { SelectHeading } from \"./SelectHeading.js\";\nimport { SelectSeparator } from \"./SelectSeparator.js\";\nimport { getSelectableItems } from \"./utils.js\";\nexport const defaultVisibleItemsRange = 3;\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst optionGetter = ({ items, selectedItem, highlightedIndex, getItemProps, optionClassName, }) => {\n    return function WrappedSelectOption({ index, style }) {\n        const selectableOptions = getSelectableItems(items);\n        const item = items[index];\n        if (item.type === \"option\") {\n            return (React.createElement(SelectOption, Object.assign({}, getItemProps({\n                key: `${item.type}-${item.value}`,\n                item,\n                index: selectableOptions.indexOf(item),\n                isSelected: selectedItem && item ? selectedItem.value === item.value : false,\n                className: optionClassName,\n            }), { isFocused: selectableOptions[highlightedIndex] && item\n                    ? selectableOptions[highlightedIndex].value === item.value\n                    : false, style: style }), item.label));\n        }\n        else if (item.type === \"heading\" || item.type === \"error\") {\n            // for now errors look the same as headings\n            return (React.createElement(SelectHeading, { key: `${item.type}-${item.label}`, style: style }, item.label));\n        }\n        else if (item.type === \"separator\") {\n            return React.createElement(SelectSeparator, { key: `${item.type}-${index}`, style: style });\n        }\n        return null;\n    };\n};\nconst itemHeightByTypeMap = {\n    option: 32,\n    heading: 22,\n    error: 22,\n    separator: 1,\n};\nconst getItemHeight = (items) => (index) => {\n    const itemType = items[index].type;\n    return itemHeightByTypeMap[itemType];\n};\nexport const getMedianIndex = (array) => Math.floor(array.length / 2);\nclass VirtualizedSelectMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.listRef = React.createRef();\n        this.scrollToIndex = (index = this.props.highlightedIndex) => {\n            if (this.listRef.current) {\n                const { items } = this.props;\n                const selectableOptions = getSelectableItems(items);\n                const optionIndex = index !== null ? index : getMedianIndex(getSelectableItems(items));\n                const highlightedOption = selectableOptions[optionIndex];\n                // highlightedIndex ignores non selectable items, but scrollToItem doesn't.\n                const actualItemIndex = items.indexOf(highlightedOption);\n                this.listRef.current.scrollToItem(actualItemIndex, \"center\");\n            }\n        };\n        this.scrollToTop = () => {\n            if (!this.listRef.current) {\n                return;\n            }\n            this.listRef.current.scrollTo(0);\n        };\n        this.componentDidUpdate = (lastProps) => {\n            const { highlightedIndex, items, setHighlightedIndex, inputValue } = this.props;\n            const lastSelectibleLastItemIndex = getSelectableItems(lastProps.items).length - 1;\n            const selectiblelastItemIndex = getSelectableItems(items).length - 1;\n            const lastHighlightIsAtStart = lastProps.highlightedIndex === 0;\n            const lastHighlightIsAtEnd = lastProps.highlightedIndex === lastSelectibleLastItemIndex;\n            const highlightIsAtStart = highlightedIndex === 0;\n            const highlightIsAtEnd = highlightedIndex === selectiblelastItemIndex;\n            const isHighlightLoopedBack = lastHighlightIsAtStart && highlightIsAtEnd;\n            const isHighlightLoopedForward = lastHighlightIsAtEnd && highlightIsAtStart;\n            const isInputValueEmpty = inputValue.trim() === \"\";\n            const isInputValueReset = lastProps.inputValue.trim() !== \"\" && isInputValueEmpty;\n            const isInputValueChanged = lastProps.inputValue.trim() !== inputValue.trim();\n            const medianIndex = getMedianIndex(getSelectableItems(items));\n            if (isInputValueReset) {\n                // We need to set highlight to medianIndex manually after clearing inputValue\n                setHighlightedIndex(medianIndex);\n            }\n            else if (isInputValueChanged) {\n                // We need to set highlight to 0 manually after filtering\n                setHighlightedIndex(0);\n            }\n            const hasOnlyOneItem = this.props.items.length === 1;\n            if (isInputValueReset) {\n                // We need to restore explicitly medianIndex scroll position immediately after inputValue reset\n                // even though setHighlightedIndex(medianIndex) is called, because it takes effect after one tick\n                this.scrollToIndex(medianIndex);\n            }\n            else if (isHighlightLoopedBack || isHighlightLoopedForward) {\n                this.scrollToIndex();\n            }\n            else if (hasOnlyOneItem) {\n                // if there is only one item, we need to explicitly scroll to top\n                // in order to handle error messages being scrolled out of view\n                this.scrollToTop();\n            }\n        };\n    }\n    render() {\n        const { items, selectedItem, highlightedIndex, getItemProps, getMenuProps, className, optionClassName, visibleItemsRange, } = this.props;\n        const Option = optionGetter({\n            items,\n            selectedItem,\n            highlightedIndex,\n            getItemProps,\n            optionClassName,\n        });\n        const middleItemIndex = getMedianIndex(getSelectableItems(items));\n        const visibleIndexes = range(Math.max(middleItemIndex - visibleItemsRange, 0), Math.min(middleItemIndex + visibleItemsRange + 1, items.length));\n        const listHeight = visibleIndexes.reduce((totalHeight, itemIndex) => totalHeight + getItemHeight(items)(itemIndex), 0);\n        return (React.createElement(\"div\", Object.assign({}, getMenuProps({ className: cx(\"gd-select-menu-wrapper\", className) })),\n            React.createElement(\"div\", { className: \"gd-select-menu s-select-menu\" },\n                React.createElement(List, { className: \"List\", ref: this.listRef, itemCount: items.length, itemSize: getItemHeight(items), height: listHeight, width: \"100%\", overscanCount: 10, estimatedItemSize: itemHeightByTypeMap.option, \n                    // IE shows an unnecessary scrollbar when the list has only one item\n                    // this means we have to explicitly disallow that\n                    // we also cannot use className prop because react-window sets overflow using style\n                    style: items.length === 1 ? { overflow: \"hidden\" } : undefined }, Option))));\n    }\n    componentDidMount() {\n        if (!this.props.inputValue) {\n            const medianIndex = getMedianIndex(getSelectableItems(this.props.items));\n            this.props.setHighlightedIndex(medianIndex);\n            this.scrollToIndex(medianIndex);\n        }\n        else {\n            this.scrollToIndex();\n        }\n    }\n}\n// static cannot have <V>\nVirtualizedSelectMenu.defaultProps = {\n    selectedItem: null,\n    visibleItemsRange: defaultVisibleItemsRange,\n};\nexport { VirtualizedSelectMenu };\n//# sourceMappingURL=VirtualizedSelectMenu.js.map","// (C) 2019-2022 GoodData Corporation\nimport range from \"lodash/range.js\";\nimport { granularityIntlCodes } from \"../constants/i18n.js\";\nimport { getSelectableItems } from \"../Select/utils.js\";\nimport { messages } from \"../../locales.js\";\nexport const MINUTE = \"GDC.time.minute\";\nexport const HOUR = \"GDC.time.hour\";\nexport const DAY = \"GDC.time.date\";\nexport const WEEK_US = \"GDC.time.week_us\";\nexport const MONTH = \"GDC.time.month\";\nexport const QUARTER = \"GDC.time.quarter\";\nexport const YEAR = \"GDC.time.year\";\nconst emptyInputInfo = {\n    inputCategory: \"Empty\",\n};\nconst tooBigInputInfo = {\n    inputCategory: \"TooBig\",\n};\nconst granularityOffsetLimits = {\n    [MINUTE]: 120,\n    [HOUR]: 48,\n    [DAY]: 365,\n    [WEEK_US]: 104,\n    [MONTH]: 60,\n    [QUARTER]: 20,\n    [YEAR]: 20,\n};\nconst offsetMaxValue = 99999;\nconst getTrimmedInput = (input) => input === null || input === void 0 ? void 0 : input.trim();\nconst isOffsetReasonablyBig = (offset) => Math.abs(offset) <= offsetMaxValue;\nconst parseInput = (trimmedInput) => {\n    if (!trimmedInput) {\n        return emptyInputInfo;\n    }\n    // matches only integers, we do not want to support floats\n    const numericMatch = /^[^-\\d]*(-?\\d+)(?:\\s|$)/.exec(trimmedInput);\n    if (numericMatch) {\n        const numericText = numericMatch[1];\n        const numericValue = Number.parseInt(numericText, 10);\n        return isOffsetReasonablyBig(numericValue)\n            ? {\n                offset: numericValue,\n                isOnlyNumber: numericText === trimmedInput,\n                inputCategory: \"Numeric\",\n            }\n            : tooBigInputInfo;\n    }\n    return {\n        inputCategory: \"Textual\",\n        trimmedValue: trimmedInput,\n    };\n};\nconst getOption = (offset, granularity, intl) => {\n    const dateCode = granularityIntlCodes[granularity];\n    const offsetCode = offset < 0 ? \"history\" : offset === 0 ? \"today\" : \"future\";\n    return {\n        type: \"option\",\n        value: offset,\n        label: intl.formatMessage(messages[`${dateCode}_${offsetCode}`], { offset, n: Math.abs(offset) }),\n    };\n};\nconst getOptionsForOffsets = (offsets, granularity, intl) => offsets.map((offset) => getOption(offset, granularity, intl));\nconst getDefaultOptions = (granularity, intl) => {\n    const optionRange = granularityOffsetLimits[granularity];\n    const negativeOptions = getOptionsForOffsets(range(-optionRange, 0), granularity, intl);\n    const positiveOptions = getOptionsForOffsets(range(1, optionRange + 1), granularity, intl);\n    return [\n        ...negativeOptions,\n        { type: \"separator\" },\n        getOption(0, granularity, intl),\n        { type: \"separator\" },\n        ...positiveOptions,\n    ];\n};\nconst getTooBigOptions = (intl) => [\n    {\n        type: \"error\",\n        label: intl.formatMessage({ id: \"filters.floatingRange.tooBig\" }, { limit: offsetMaxValue }),\n    },\n];\nconst getNoMatchOptions = (intl) => [\n    {\n        type: \"error\",\n        label: intl.formatMessage({ id: \"filters.floatingRange.noMatch\" }),\n    },\n];\nconst getOptionsByNumber = (offset, granularity, intl) => {\n    // for positive offsets, show the \"ahead\" option first\n    // to allow power users to use positive numbers for \"ahead\" and negative for \"ago\"\n    // and doing just -5 -> enter -> 5 -> enter to make the filter from 5 ago to 5 ahead\n    const offsets = offset > 0 ? [offset, -offset] : [offset];\n    return getOptionsForOffsets(offsets, granularity, intl);\n};\nconst getFullTextOptions = (offset, granularity, intl) => {\n    const coreOffsets = [-1, 0, 1];\n    const absOffset = Math.abs(offset);\n    const offsets = offset !== undefined && absOffset > 1 ? [-absOffset, ...coreOffsets, absOffset] : coreOffsets;\n    return getOptionsForOffsets(offsets, granularity, intl);\n};\nconst getFullTextMatches = (trimmedInput, offset, granularity, intl) => {\n    const searchString = trimmedInput.toLowerCase();\n    const matches = getFullTextOptions(offset, granularity, intl).filter((option) => option.label.toLowerCase().includes(searchString));\n    return matches.length > 0 ? matches : getNoMatchOptions(intl);\n};\nexport const findRelativeDateFilterOptionByLabel = (options, input) => {\n    const trimmedInput = getTrimmedInput(input);\n    return getSelectableItems(options).find((option) => option.label === trimmedInput);\n};\nexport const findRelativeDateFilterOptionByValue = (options, value) => {\n    return getSelectableItems(options).find((option) => option.value === value);\n};\nexport function getRelativeDateFilterItems(input = \"\", granularity = DAY, intl) {\n    const trimmedInput = getTrimmedInput(input);\n    const inputInfo = parseInput(trimmedInput);\n    switch (inputInfo.inputCategory) {\n        case \"Empty\":\n            return getDefaultOptions(granularity, intl);\n        case \"TooBig\":\n            return getTooBigOptions(intl);\n        case \"Textual\":\n            return getFullTextMatches(inputInfo.trimmedValue, undefined, granularity, intl);\n        case \"Numeric\": {\n            const { offset, isOnlyNumber } = inputInfo;\n            return isOnlyNumber\n                ? getOptionsByNumber(offset, granularity, intl)\n                : getFullTextMatches(trimmedInput, offset, granularity, intl);\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport DefaultDownshift from \"downshift\";\nimport cx from \"classnames\";\nimport { getSelectableItems, itemToString } from \"../Select/utils.js\";\nimport { defaultVisibleItemsRange, getMedianIndex, VirtualizedSelectMenu, } from \"../Select/VirtualizedSelectMenu.js\";\nimport { defaultImport } from \"default-import\";\nimport { findRelativeDateFilterOptionByValue } from \"./utils.js\";\nimport noop from \"lodash/noop.js\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Downshift = defaultImport(DefaultDownshift);\nclass DynamicSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.onChange = (option) => {\n            if (option) {\n                this.props.onChange(option.value);\n            }\n        };\n        this.componentDidUpdate = (lastProps) => {\n            var _a;\n            if (lastProps.value !== this.props.value) {\n                const defaultItems = this.props.getItems(this.props.value.toString());\n                const inputValue = ((_a = findRelativeDateFilterOptionByValue(defaultItems, this.props.value)) === null || _a === void 0 ? void 0 : _a.label) ||\n                    this.props.value.toString();\n                this.setState({\n                    inputValue,\n                });\n            }\n        };\n        this.focus = () => {\n            if (this.inputRef.current) {\n                this.inputRef.current.focus();\n            }\n        };\n        this.blur = () => {\n            if (this.inputRef.current) {\n                this.inputRef.current.blur();\n            }\n        };\n        this.onInputValueChanged = (inputValue) => {\n            if (inputValue !== this.state.inputValue) {\n                this.setState({ inputValue });\n            }\n        };\n        this.onBlurHandler = (selectedItem, selectItem, closeMenu) => {\n            const { customValueValidator, value } = this.props;\n            if (customValueValidator) {\n                closeMenu();\n                this.onInputValueChanged(value === null || value === void 0 ? void 0 : value.toString());\n            }\n            else {\n                selectItem(selectedItem);\n                this.onInputValueChanged(selectedItem ? selectedItem.label : \"\");\n            }\n        };\n        this.onChangeHandler = (event, selectItem) => {\n            const { customValueValidator } = this.props;\n            const currentValue = event.target.value;\n            if (customValueValidator === null || customValueValidator === void 0 ? void 0 : customValueValidator(currentValue)) {\n                selectItem({\n                    type: \"option\",\n                    value: Number(currentValue),\n                    label: currentValue,\n                });\n            }\n            // Downshifts onInputValueChanged fires twice and with an old value,\n            // so we need to use our own callback\n            this.onInputValueChanged(currentValue);\n        };\n        const selectedItem = props.value !== undefined\n            ? findRelativeDateFilterOptionByValue(\n            // pass the current value to make sure the searched options include it even if it is outside the default range\n            props.getItems(props.value.toString()), props.value)\n            : null;\n        this.state = {\n            inputValue: selectedItem ? itemToString(selectedItem) : props.value ? props.value.toString() : \"\",\n        };\n    }\n    render() {\n        const { initialIsOpen, placeholder, getItems, value = null, className, style, optionClassName, visibleItemsRange, } = this.props;\n        const items = getItems(this.state.inputValue);\n        // this is important to correctly find out selected option. It is different than 'items'.\n        const itemsByValue = value !== null ? getItems(value.toString()) : [];\n        // Downshift requires null as empty selected item, if we would pass undefined it would change\n        // from controlled to uncontrolled component\n        const selectedItem = (value !== null && findRelativeDateFilterOptionByValue(itemsByValue, value)) || null;\n        const selectableItems = getSelectableItems(items);\n        const isFiltered = this.state.inputValue.trim() !== \"\";\n        return (React.createElement(Downshift, { onChange: this.onChange, itemToString: itemToString, initialIsOpen: initialIsOpen, selectedItem: selectedItem, itemCount: selectableItems.length, inputValue: this.state.inputValue, \n            // automatically highlight (and therefore scroll to) the middle option if default items are displayed\n            defaultHighlightedIndex: selectedItem || isFiltered ? 0 : getMedianIndex(selectableItems) }, ({ getInputProps, getMenuProps, getItemProps, isOpen, openMenu, closeMenu, inputValue, highlightedIndex, setHighlightedIndex, selectItem, }) => {\n            // Without this, highlight is not properly reset during filtering\n            const effectiveHighlightedIndex = highlightedIndex > selectableItems.length - 1 ? 0 : highlightedIndex;\n            const menuProps = {\n                items,\n                selectedItem,\n                highlightedIndex: effectiveHighlightedIndex,\n                getItemProps,\n                getMenuProps,\n                className: \"gd-dynamic-select-menu\",\n                optionClassName,\n                inputValue,\n                setHighlightedIndex,\n                visibleItemsRange,\n            };\n            return (React.createElement(\"div\", { className: cx(\"gd-dynamic-select\", className), style: style },\n                React.createElement(\"div\", { className: \"gd-dynamic-select-input-wrapper\" },\n                    React.createElement(\"input\", Object.assign({ type: \"text\", className: \"s-relative-range-input gd-input-field\" }, getInputProps({\n                        ref: this.inputRef,\n                        placeholder: selectedItem ? selectedItem.label : placeholder,\n                        value: inputValue,\n                        onFocus: () => {\n                            this.setState({ inputValue: \"\" });\n                            openMenu();\n                        },\n                        onChange: (event) => this.onChangeHandler(event, selectItem),\n                        onBlur: () => this.onBlurHandler(selectedItem, selectItem, closeMenu),\n                    })))),\n                isOpen && items.length > 0 ? React.createElement(VirtualizedSelectMenu, Object.assign({}, menuProps)) : null));\n        }));\n    }\n}\nDynamicSelect.defaultProps = {\n    onChange: noop,\n    initialIsOpen: false,\n    visibleItemsRange: defaultVisibleItemsRange,\n};\nexport { DynamicSelect };\n//# sourceMappingURL=DynamicSelect.js.map","// (C) 2019-2023 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DynamicSelect } from \"../DynamicSelect/DynamicSelect.js\";\nimport { getRelativeDateFilterItems } from \"../DynamicSelect/utils.js\";\nimport { injectIntl } from \"react-intl\";\nimport { defaultVisibleItemsRange } from \"../Select/VirtualizedSelectMenu.js\";\nclass RelativeRangePickerComponent extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.toFieldRef = React.createRef();\n        this.isTouchDevice = () => {\n            return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n        };\n        this.focusToField = () => {\n            const isTouchDevice = this.isTouchDevice();\n            if (this.toFieldRef.current) {\n                /**\n                 * Prevents hover style from persisting after switching to another field on\n                 * touchscreen devices.\n                 */\n                isTouchDevice\n                    ? setTimeout(() => {\n                        var _a;\n                        (_a = this.toFieldRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n                    }, 0)\n                    : this.toFieldRef.current.focus();\n            }\n        };\n        this.blurToField = () => {\n            const isTouchDevice = this.isTouchDevice();\n            if (this.toFieldRef.current) {\n                isTouchDevice\n                    ? setTimeout(() => {\n                        var _a;\n                        (_a = this.toFieldRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n                    }, 0)\n                    : this.toFieldRef.current.blur();\n            }\n        };\n        this.handleFromChange = (from) => {\n            this.props.onSelectedFilterOptionChange(Object.assign(Object.assign({}, this.props.selectedFilterOption), { from }));\n            if (from !== undefined) {\n                this.focusToField();\n            }\n        };\n        this.handleToChange = (to) => {\n            this.props.onSelectedFilterOptionChange(Object.assign(Object.assign({}, this.props.selectedFilterOption), { to }));\n            this.blurToField();\n        };\n    }\n    render() {\n        const { handleFromChange, handleToChange } = this;\n        const { selectedFilterOption, intl, isMobile } = this.props;\n        const mobileVisibleItemsRange = 5;\n        const commonProps = {\n            visibleItemsRange: isMobile ? mobileVisibleItemsRange : defaultVisibleItemsRange,\n            optionClassName: \"s-relative-date-filter-option s-do-not-close-dropdown-on-click\",\n            getItems: (value) => {\n                const items = getRelativeDateFilterItems(value, selectedFilterOption.granularity, intl);\n                // separators are not needed in mobile as all the items have borders\n                return isMobile ? items.filter((item) => item.type !== \"separator\") : items;\n            },\n        };\n        return (React.createElement(\"div\", { className: \"gd-relative-range-picker s-relative-range-picker\" },\n            React.createElement(DynamicSelect, Object.assign({ value: selectedFilterOption.from, onChange: handleFromChange, placeholder: intl.formatMessage({ id: \"filters.from\" }), className: cx(\"gd-relative-range-picker-picker\", \"s-relative-range-picker-from\", isMobile && \"gd-relative-range-picker-picker-mobile\") }, commonProps)),\n            React.createElement(\"span\", { className: \"gd-relative-range-picker-dash\" }, \"\\u2013\"),\n            React.createElement(DynamicSelect, Object.assign({ value: selectedFilterOption.to, onChange: handleToChange, placeholder: intl.formatMessage({ id: \"filters.to\" }), className: cx(\"gd-relative-range-picker-picker\", \"s-relative-range-picker-to\", isMobile && \"gd-relative-range-picker-picker-mobile\") }, commonProps, { ref: this.toFieldRef }))));\n    }\n}\nexport const RelativeRangePicker = injectIntl(RelativeRangePickerComponent);\n//# sourceMappingURL=RelativeRangePicker.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { GranularityTabs } from \"./GranularityTabs.js\";\nimport { RelativeRangePicker } from \"../RelativeRangePicker/RelativeRangePicker.js\";\n/**\n * @internal\n */\nexport const RelativeDateFilterForm = ({ selectedFilterOption, availableGranularities, onSelectedFilterOptionChange, isMobile, }) => (React.createElement(React.Fragment, null,\n    React.createElement(GranularityTabs, { availableGranularities: availableGranularities, selectedGranularity: selectedFilterOption.granularity, onSelectedGranularityChange: (granularity) => onSelectedFilterOptionChange(Object.assign(Object.assign(Object.assign({}, selectedFilterOption), (selectedFilterOption.granularity !== granularity && {\n            from: undefined,\n            to: undefined,\n        })), { granularity })) }),\n    React.createElement(RelativeRangePicker, { selectedFilterOption: selectedFilterOption, onSelectedFilterOptionChange: onSelectedFilterOptionChange, \n        // Do not reuse components across different tabs, caused problems with focus/blur handling.\n        key: selectedFilterOption.granularity, isMobile: isMobile })));\n//# sourceMappingURL=RelativeDateFilterForm.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2019 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nexport const ListHeading = (_a) => {\n    var { children, className } = _a, otherProps = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: cx(\"gd-list-item gd-list-item-header gd-filter-list-heading\", className) }, otherProps), children));\n};\n//# sourceMappingURL=ListHeading.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { messages } from \"../../locales.js\";\nexport const RelativePresetTitleTranslated = ({ granularity }) => {\n    const intlDesc = messages[granularity] || null;\n    if (!intlDesc) {\n        return null;\n    }\n    return React.createElement(FormattedMessage, { id: intlDesc.id });\n};\n//# sourceMappingURL=RelativePresetTitleTranslated.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport kebabCase from \"lodash/kebabCase.js\";\nimport cx from \"classnames\";\nimport { ListItem } from \"../ListItem/ListItem.js\";\nimport { ListHeading } from \"../ListHeading/ListHeading.js\";\nimport { RelativePresetTitleTranslated } from \"../RelativePresetTitleTranslated/RelativePresetTitleTranslated.js\";\nimport { DateFilterTextLocalized } from \"../DateFilterTextLocalized/DateFilterTextLocalized.js\";\nconst granularityOrder = [\n    \"GDC.time.year\",\n    \"GDC.time.quarter\",\n    \"GDC.time.month\",\n    \"GDC.time.week_us\",\n    \"GDC.time.date\",\n    \"GDC.time.hour\",\n    \"GDC.time.minute\",\n];\n/**\n * @internal\n */\nexport const RelativePresetFilterItems = ({ dateFormat, filterOption, selectedFilterOption, onSelectedFilterOptionChange, className, }) => {\n    const relativePresets = granularityOrder\n        .filter((granularity) => {\n        var _a;\n        return Boolean(((_a = filterOption === null || filterOption === void 0 ? void 0 : filterOption[granularity]) === null || _a === void 0 ? void 0 : _a.length) > 0);\n    })\n        .map((granularity) => ({\n        granularity,\n        items: filterOption[granularity],\n    }));\n    return (React.createElement(React.Fragment, null, relativePresets.map((preset) => (React.createElement(React.Fragment, { key: preset.granularity },\n        React.createElement(ListHeading, { className: className },\n            React.createElement(RelativePresetTitleTranslated, { granularity: preset.granularity })),\n        preset.items.map((item) => (React.createElement(ListItem, { key: item.localIdentifier, isSelected: item.localIdentifier === selectedFilterOption.localIdentifier, onClick: () => onSelectedFilterOptionChange(item), className: cx(`s-relative-preset-${kebabCase(item.localIdentifier)}`, className) },\n            React.createElement(DateFilterTextLocalized, { filter: item, dateFormat: dateFormat })))))))));\n};\n//# sourceMappingURL=RelativePresetFilterItems.js.map","// (C) 2019-2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nexport const EditModeMessage = () => (React.createElement(\"div\", { className: \"s-extended-date-filter-edit-mode-message gd-extended-date-filter-edit-mode-message\" },\n    React.createElement(\"div\", { className: \"gd-extended-date-filter-edit-mode-message-text\" },\n        React.createElement(FormattedMessage, { id: \"dateFilterDropdown.setDefault\", values: {\n                nbsp: React.createElement(React.Fragment, null, \"\\u00A0\"),\n            } })),\n    React.createElement(\"hr\", { className: \"gd-separator-generic\" })));\n//# sourceMappingURL=EditModeMessage.js.map","import { __rest } from \"tslib\";\n// (C) 2019 GoodData Corporation\nimport React from \"react\";\nexport const DateFilterHeader = (_a) => {\n    var { children, changeRoute } = _a, otherProps = __rest(_a, [\"children\", \"changeRoute\"]);\n    return (React.createElement(\"button\", Object.assign({ className: \"gd-extended-date-filter-header s-do-not-close-dropdown-on-click\", onClick: (e) => {\n            e.preventDefault();\n            changeRoute(null);\n        } }, otherProps),\n        React.createElement(\"span\", { className: \"gd-icon-navigateleft\" }),\n        \"\\u2003\",\n        children));\n};\n//# sourceMappingURL=DateFilterHeader.js.map","// (C) 2019 GoodData Corporation\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nconst DateFilterBodyButtonComponent = (props) => (React.createElement(Button, { type: \"button\", value: props.intl.formatMessage({ id: props.messageId }), className: props.className, disabled: props.disabled, onClick: props.onClick }));\nexport const DateFilterBodyButton = injectIntl(DateFilterBodyButtonComponent);\n//# sourceMappingURL=DateFilterBodyButton.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport kebabCase from \"lodash/kebabCase.js\";\nimport cx from \"classnames\";\nimport { ListItem } from \"../ListItem/ListItem.js\";\nimport { DateFilterTextLocalized } from \"../DateFilterTextLocalized/DateFilterTextLocalized.js\";\nexport const AbsolutePresetFilterItems = ({ filterOptions, dateFormat, selectedFilterOption, onSelectedFilterOptionChange, className, }) => (React.createElement(React.Fragment, null, filterOptions.map((item) => (React.createElement(ListItem, { key: item.localIdentifier, isSelected: item.localIdentifier === selectedFilterOption.localIdentifier, onClick: () => onSelectedFilterOptionChange(item), className: cx(`s-absolute-preset-${kebabCase(item.localIdentifier)}`, className) },\n    React.createElement(DateFilterTextLocalized, { filter: item, dateFormat: dateFormat }))))));\n//# sourceMappingURL=AbsolutePresetFilterItems.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport cx from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ListItem } from \"../ListItem/ListItem.js\";\nimport { ExcludeCurrentPeriodToggle } from \"../ExcludeCurrentPeriodToggle/ExcludeCurrentPeriodToggle.js\";\nimport { VisibleScrollbar } from \"../VisibleScrollbar/VisibleScrollbar.js\";\nimport { getDateFilterOptionGranularity } from \"../utils/OptionUtils.js\";\nimport { AllTimeFilterItem } from \"./AllTimeFilterItem.js\";\nimport { DateFilterFormWrapper } from \"../DateFilterFormWrapper/DateFilterFormWrapper.js\";\nimport { AbsoluteDateFilterForm } from \"../AbsoluteDateFilterForm/AbsoluteDateFilterForm.js\";\nimport { ListItemTooltip } from \"../ListItemTooltip/ListItemTooltip.js\";\nimport { RelativeDateFilterForm } from \"../RelativeDateFilterForm/RelativeDateFilterForm.js\";\nimport { RelativePresetFilterItems } from \"./RelativePresetFilterItems.js\";\nimport { EditModeMessage } from \"./EditModeMessage.js\";\nimport { DateFilterHeader } from \"./DateFilterHeader.js\";\nimport { DateFilterBodyButton } from \"./DateFilterBodyButton.js\";\nimport { AbsolutePresetFilterItems } from \"./AbsolutePresetFilterItems.js\";\nimport { isAbsoluteDateFilterForm, isRelativeDateFilterForm, } from \"@gooddata/sdk-model\";\nconst ACTIONS_BUTTONS_HEIGHT = 53;\nconst EXCLUDE_OPEN_PERIOD_HEIGHT = 30; // height of 'Exclude open period' checkbox component\nconst MARGIN_BOTTOM = 8;\nconst MOBILE_WIDTH = 414; // iPhone 11 Pro Max\nconst ITEM_CLASS_MOBILE = \"gd-date-filter-item-mobile\";\nexport class DateFilterBody extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            route: null,\n        };\n        this.changeRoute = (route = null) => {\n            this.setState({ route });\n        };\n        this.renderAllTime = () => {\n            const { filterOptions, isMobile, selectedFilterOption, onSelectedFilterOptionChange } = this.props;\n            return filterOptions.allTime ? (React.createElement(AllTimeFilterItem, { filterOption: filterOptions.allTime, selectedFilterOption: selectedFilterOption, onSelectedFilterOptionChange: onSelectedFilterOptionChange, className: isMobile ? ITEM_CLASS_MOBILE : undefined })) : null;\n        };\n        this.renderAbsoluteForm = () => {\n            const { dateFormat, filterOptions, selectedFilterOption, onSelectedFilterOptionChange, isTimeForAbsoluteRangeEnabled, isMobile, errors, weekStart, } = this.props;\n            if (!filterOptions.absoluteForm) {\n                return null;\n            }\n            const { route } = this.state;\n            const isSelected = filterOptions.absoluteForm.localIdentifier === selectedFilterOption.localIdentifier;\n            const isOnRoute = route === \"absoluteForm\";\n            return (React.createElement(React.Fragment, null,\n                !isMobile || !isOnRoute ? (React.createElement(ListItem, { isSelected: isSelected, onClick: () => {\n                        this.changeRoute(\"absoluteForm\");\n                        if (!isAbsoluteDateFilterForm(selectedFilterOption)) {\n                            onSelectedFilterOptionChange(filterOptions.absoluteForm);\n                        }\n                    }, className: cx(\"s-absolute-form\", \"s-do-not-close-dropdown-on-click\", isMobile && ITEM_CLASS_MOBILE) }, filterOptions.absoluteForm.name ? (filterOptions.absoluteForm.name) : (React.createElement(FormattedMessage, { id: \"filters.staticPeriod\" })))) : null,\n                isSelected && (!isMobile || isOnRoute) ? (React.createElement(DateFilterFormWrapper, { isMobile: isMobile },\n                    React.createElement(AbsoluteDateFilterForm, { dateFormat: dateFormat, errors: (errors === null || errors === void 0 ? void 0 : errors.absoluteForm) || undefined, onSelectedFilterOptionChange: onSelectedFilterOptionChange, selectedFilterOption: selectedFilterOption, isMobile: isMobile, isTimeEnabled: isTimeForAbsoluteRangeEnabled, weekStart: weekStart }))) : null));\n        };\n        this.renderRelativeForm = () => {\n            const { filterOptions, selectedFilterOption, onSelectedFilterOptionChange, availableGranularities, isMobile, } = this.props;\n            if (!filterOptions.relativeForm) {\n                return null;\n            }\n            const { route } = this.state;\n            const isSelected = filterOptions.relativeForm.localIdentifier === selectedFilterOption.localIdentifier;\n            const isOnRoute = route === \"relativeForm\";\n            return (React.createElement(React.Fragment, null,\n                !isMobile || !isOnRoute ? (React.createElement(ListItem, { isSelected: isSelected, onClick: () => {\n                        this.changeRoute(\"relativeForm\");\n                        if (!isRelativeDateFilterForm(selectedFilterOption)) {\n                            onSelectedFilterOptionChange(filterOptions.relativeForm);\n                        }\n                    }, className: cx(\"s-relative-form\", \"s-do-not-close-dropdown-on-click\", isMobile && ITEM_CLASS_MOBILE) },\n                    filterOptions.relativeForm.name ? (filterOptions.relativeForm.name) : (React.createElement(FormattedMessage, { id: \"filters.floatingRange\" })),\n                    !isMobile ? (React.createElement(ListItemTooltip, { bubbleAlignPoints: [{ align: \"cr cl\" }] },\n                        React.createElement(FormattedMessage, { id: \"filters.floatingRange.tooltip\" }))) : null)) : null,\n                isSelected && (!isMobile || isOnRoute) ? (React.createElement(DateFilterFormWrapper, { isMobile: isMobile },\n                    React.createElement(RelativeDateFilterForm, { onSelectedFilterOptionChange: (option) => {\n                            onSelectedFilterOptionChange(option);\n                        }, selectedFilterOption: selectedFilterOption, availableGranularities: availableGranularities, isMobile: isMobile }))) : null));\n        };\n        this.renderAbsolutePreset = () => {\n            const { dateFormat, filterOptions, selectedFilterOption, onSelectedFilterOptionChange, isMobile } = this.props;\n            return filterOptions.absolutePreset && filterOptions.absolutePreset.length > 0 ? (React.createElement(AbsolutePresetFilterItems, { dateFormat: dateFormat, filterOptions: filterOptions.absolutePreset, selectedFilterOption: selectedFilterOption, onSelectedFilterOptionChange: onSelectedFilterOptionChange, className: isMobile ? ITEM_CLASS_MOBILE : undefined })) : null;\n        };\n        this.renderRelativePreset = () => {\n            const { dateFormat, filterOptions, selectedFilterOption, onSelectedFilterOptionChange, isMobile } = this.props;\n            return filterOptions.relativePreset ? (React.createElement(RelativePresetFilterItems, { dateFormat: dateFormat, filterOption: filterOptions.relativePreset, selectedFilterOption: selectedFilterOption, onSelectedFilterOptionChange: onSelectedFilterOptionChange, className: isMobile ? ITEM_CLASS_MOBILE : undefined })) : null;\n        };\n        this.renderExcludeCurrent = () => {\n            const { selectedFilterOption, onExcludeCurrentPeriodChange, excludeCurrentPeriod, isExcludeCurrentPeriodEnabled, } = this.props;\n            return (React.createElement(ExcludeCurrentPeriodToggle, { value: excludeCurrentPeriod, onChange: onExcludeCurrentPeriodChange, disabled: !isExcludeCurrentPeriodEnabled, granularity: getDateFilterOptionGranularity(selectedFilterOption) }));\n        };\n        this.calculateHeight = (showExcludeCurrent) => {\n            // Mobile in Horizontal Layout\n            if (window.innerHeight <= MOBILE_WIDTH) {\n                const excludeOpenPeriodHeight = showExcludeCurrent ? EXCLUDE_OPEN_PERIOD_HEIGHT : 0;\n                return window.innerHeight - excludeOpenPeriodHeight - ACTIONS_BUTTONS_HEIGHT - MARGIN_BOTTOM;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        // Dropdown component does not expose isOpened prop but it mounts\n        // this component every time it is opened and un-mounts when closed\n        if (this.props.isMobile) {\n            if (isAbsoluteDateFilterForm(this.props.selectedFilterOption)) {\n                this.changeRoute(\"absoluteForm\");\n            }\n            else if (isRelativeDateFilterForm(this.props.selectedFilterOption)) {\n                this.changeRoute(\"relativeForm\");\n            }\n        }\n    }\n    render() {\n        const { isExcludeCurrentPeriodEnabled, isMobile, isEditMode, onApplyClick, onCancelClick, closeDropdown, selectedFilterOption, dateFilterButton, errors, } = this.props;\n        const { route } = this.state;\n        const showExcludeCurrent = !isMobile || isExcludeCurrentPeriodEnabled;\n        const bodyHeight = this.calculateHeight(showExcludeCurrent);\n        let wrapperStyle = {};\n        let scrollerStyle = {};\n        if (bodyHeight) {\n            // display: flex causes the scroller is cut off when scrolling\n            wrapperStyle = { display: \"block\", height: `${bodyHeight}px` };\n            scrollerStyle = { minHeight: `${bodyHeight}px` };\n        }\n        return (React.createElement(\"div\", { className: \"gd-extended-date-filter-container\" },\n            React.createElement(\"div\", { className: cx(\"gd-extended-date-filter-body\", \"s-extended-date-filters-body\", isMobile && \"gd-extended-date-filter-body-mobile\") },\n                route === null && isMobile ? (React.createElement(\"div\", { onClick: () => {\n                        onCancelClick();\n                        closeDropdown();\n                    } }, dateFilterButton)) : null,\n                React.createElement(\"div\", { className: cx(\"gd-extended-date-filter-body-wrapper\", {\n                        \"gd-extended-date-filter-body-wrapper-wide\": isRelativeDateFilterForm(selectedFilterOption),\n                    }), style: wrapperStyle },\n                    isEditMode && !isMobile ? React.createElement(EditModeMessage, null) : null,\n                    isMobile ? (this.renderMobileContent()) : (React.createElement(VisibleScrollbar, { className: \"gd-extended-date-filter-body-scrollable\", style: scrollerStyle }, this.renderDefaultContent()))),\n                showExcludeCurrent ? this.renderExcludeCurrent() : null,\n                React.createElement(\"div\", { className: cx(\"gd-extended-date-filter-actions\") },\n                    React.createElement(\"div\", { className: \"gd-extended-date-filter-actions-buttons\" },\n                        React.createElement(DateFilterBodyButton, { messageId: \"cancel\", className: \"gd-button-secondary gd-button-small s-date-filter-cancel\", onClick: () => {\n                                onCancelClick();\n                                closeDropdown();\n                            } }),\n                        React.createElement(DateFilterBodyButton, { messageId: \"apply\", className: \"gd-button-action gd-button-small s-date-filter-apply\", disabled: !isEmpty(errors), onClick: () => {\n                                onApplyClick();\n                                closeDropdown();\n                            } }))))));\n    }\n    renderMobileContent() {\n        const { route } = this.state;\n        if (route === \"absoluteForm\") {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(DateFilterHeader, { changeRoute: this.changeRoute },\n                    React.createElement(FormattedMessage, { id: \"filters.staticPeriod\" })),\n                this.renderAbsoluteForm()));\n        }\n        if (route === \"relativeForm\") {\n            return isEmpty(this.props.availableGranularities) ? null : (React.createElement(React.Fragment, null,\n                React.createElement(DateFilterHeader, { changeRoute: this.changeRoute },\n                    React.createElement(FormattedMessage, { id: \"filters.floatingRange\" })),\n                this.renderRelativeForm()));\n        }\n        return this.renderDefaultContent();\n    }\n    renderDefaultContent() {\n        return (React.createElement(React.Fragment, null,\n            this.renderAllTime(),\n            this.renderAbsoluteForm(),\n            !isEmpty(this.props.availableGranularities) ? this.renderRelativeForm() : null,\n            this.renderAbsolutePreset(),\n            this.renderRelativePreset()));\n    }\n}\n//# sourceMappingURL=DateFilterBody.js.map","import { __rest } from \"tslib\";\n// (C) 2007-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport flow from \"lodash/flow.js\";\nimport noop from \"lodash/noop.js\";\nimport DefaultMediaQuery from \"react-responsive\";\nimport { defaultImport } from \"default-import\";\nimport { Dropdown } from \"@gooddata/sdk-ui-kit\";\nimport { IntlWrapper } from \"@gooddata/sdk-ui\";\nimport { MediaQueries } from \"../constants/index.js\";\nimport { DateFilterButtonLocalized } from \"./DateFilterButtonLocalized/DateFilterButtonLocalized.js\";\nimport { DateFilterBody } from \"./DateFilterBody/DateFilterBody.js\";\nimport { applyExcludeCurrentPeriod } from \"./utils/PeriodExclusion.js\";\nimport { DEFAULT_DATE_FORMAT, TIME_FORMAT_WITH_SEPARATOR } from \"./constants/Platform.js\";\nimport { filterVisibleDateFilterOptions, sanitizePresetIntervals } from \"./utils/OptionUtils.js\";\nimport format from \"date-fns/format/index.js\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/49189#issuecomment-1137802865\nconst MediaQuery = defaultImport(DefaultMediaQuery);\nexport const verifyDateFormat = (dateFormat) => {\n    try {\n        // Try to format the current date to verify if dateFormat is a valid format.\n        format(new Date(), dateFormat);\n        return dateFormat;\n    }\n    catch (_a) {\n        // If an error occurs, then dateFormat is invalid and the default format should be used instead. Also, a warning is written in the console.\n        console.warn(`Unsupported date format ${dateFormat}, the default format ${DEFAULT_DATE_FORMAT} is used instead.`);\n        return DEFAULT_DATE_FORMAT;\n    }\n};\nconst adjustDateFormatForDisplay = (dateFormat, isTimeForAbsoluteRangeEnabled = false) => isTimeForAbsoluteRangeEnabled ? dateFormat + TIME_FORMAT_WITH_SEPARATOR : dateFormat;\nexport const DateFilterCore = (_a) => {\n    var { originalSelectedFilterOption, originalExcludeCurrentPeriod, onDropdownOpenChanged, customFilterName, dateFormat, disabled, locale, filterOptions, isTimeForAbsoluteRangeEnabled, weekStart } = _a, dropdownBodyProps = __rest(_a, [\"originalSelectedFilterOption\", \"originalExcludeCurrentPeriod\", \"onDropdownOpenChanged\", \"customFilterName\", \"dateFormat\", \"disabled\", \"locale\", \"filterOptions\", \"isTimeForAbsoluteRangeEnabled\", \"weekStart\"]);\n    const verifiedDateFormat = verifyDateFormat(dateFormat);\n    const filteredFilterOptions = useMemo(() => {\n        return flow(filterVisibleDateFilterOptions, sanitizePresetIntervals)(filterOptions);\n    }, [filterOptions]);\n    return (React.createElement(IntlWrapper, { locale: locale || \"en-US\" },\n        React.createElement(MediaQuery, { query: MediaQueries.IS_MOBILE_DEVICE }, (isMobile) => {\n            const dateFilterButton = (isOpen = false) => (React.createElement(DateFilterButtonLocalized, { disabled: disabled, isMobile: isMobile, isOpen: isOpen, dateFilterOption: applyExcludeCurrentPeriod(originalSelectedFilterOption, originalExcludeCurrentPeriod), dateFormat: adjustDateFormatForDisplay(verifiedDateFormat, isTimeForAbsoluteRangeEnabled), customFilterName: customFilterName }));\n            return (React.createElement(Dropdown, { closeOnParentScroll: true, closeOnMouseDrag: true, closeOnOutsideClick: true, enableEventPropagation: true, alignPoints: [\n                    { align: \"bl tl\" },\n                    { align: \"tr tl\" },\n                    { align: \"br tr\", offset: { x: -11 } },\n                    { align: \"tr tl\", offset: { x: 0, y: -100 } },\n                    { align: \"tr tl\", offset: { x: 0, y: -50 } },\n                ], onOpenStateChanged: onDropdownOpenChanged, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(\"span\", { onClick: disabled ? noop : toggleDropdown }, dateFilterButton(isOpen))), ignoreClicksOnByClass: [\n                    \".s-do-not-close-dropdown-on-click\",\n                    \".rdp-day\", // absolute range picker calendar items\n                ], renderBody: ({ closeDropdown }) => (\n                // Dropdown component uses React.Children.map and adds special props to this component\n                // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\n                React.createElement(DateFilterBody, Object.assign({}, dropdownBodyProps, { filterOptions: filteredFilterOptions, isMobile: isMobile, closeDropdown: closeDropdown, dateFilterButton: dateFilterButton(), dateFormat: verifiedDateFormat, isTimeForAbsoluteRangeEnabled: isTimeForAbsoluteRangeEnabled, weekStart: weekStart }))) }));\n        })));\n};\n//# sourceMappingURL=DateFilterCore.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport isEqual from \"lodash/isEqual.js\";\nimport isNil from \"lodash/isNil.js\";\nimport noop from \"lodash/noop.js\";\nimport { isAbsoluteDateFilterForm, } from \"@gooddata/sdk-model\";\nimport { canExcludeCurrentPeriod } from \"./utils/PeriodExclusion.js\";\nimport { DateFilterCore } from \"./DateFilterCore.js\";\nimport { validateFilterOption } from \"./validation/OptionValidation.js\";\nimport { isUiRelativeDateFilterForm, } from \"./interfaces/index.js\";\nimport { DEFAULT_DATE_FORMAT } from \"./constants/Platform.js\";\nimport { normalizeSelectedFilterOption } from \"./utils/FilterOptionNormalization.js\";\n/**\n * {@link https://sdk.gooddata.com/gooddata-ui/docs/date_filter_component.html | DateFilter} is a component for configuring a date filter value.\n *\n * @public\n */\nclass DateFilter extends React.PureComponent {\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!isEqual(nextProps.selectedFilterOption, prevState.initSelectedFilterOption) ||\n            nextProps.excludeCurrentPeriod !== prevState.initExcludeCurrentPeriod) {\n            return DateFilter.getStateFromProps(nextProps);\n        }\n        return null;\n    }\n    static getStateFromProps(props) {\n        const canExcludeCurrent = canExcludeCurrentPeriod(props.selectedFilterOption);\n        return {\n            initSelectedFilterOption: props.selectedFilterOption,\n            selectedFilterOption: props.selectedFilterOption,\n            initExcludeCurrentPeriod: props.excludeCurrentPeriod,\n            excludeCurrentPeriod: canExcludeCurrent ? props.excludeCurrentPeriod : false,\n            isTimeForAbsoluteRangeEnabled: props.isTimeForAbsoluteRangeEnabled,\n            isExcludeCurrentPeriodEnabled: canExcludeCurrent,\n        };\n    }\n    constructor(props) {\n        super(props);\n        this.handleApplyClick = () => {\n            const normalizedSelectedFilterOption = normalizeSelectedFilterOption(this.state.selectedFilterOption);\n            this.props.onApply(normalizedSelectedFilterOption, this.state.excludeCurrentPeriod);\n        };\n        this.onChangesDiscarded = () => {\n            this.setState(() => DateFilter.getStateFromProps(this.props));\n        };\n        this.onCancelClicked = () => {\n            this.props.onCancel();\n            this.onChangesDiscarded();\n        };\n        this.onDropdownOpenChanged = (isOpen) => {\n            if (isOpen) {\n                this.props.onOpen();\n            }\n            else {\n                this.props.onClose();\n                this.onChangesDiscarded();\n            }\n        };\n        this.handleExcludeCurrentPeriodChange = (excludeCurrentPeriod) => {\n            this.setState({ excludeCurrentPeriod });\n        };\n        this.handleSelectedFilterOptionChange = (selectedFilterOption) => {\n            this.setState((state) => DateFilter.getStateFromSelectedOption(selectedFilterOption, state.excludeCurrentPeriod));\n        };\n        this.state = DateFilter.getStateFromProps(props);\n    }\n    componentDidMount() {\n        DateFilter.checkInitialFilterOption(this.props.selectedFilterOption);\n    }\n    render() {\n        const { customFilterName, dateFilterMode, dateFormat, filterOptions, selectedFilterOption: originalSelectedFilterOption, excludeCurrentPeriod: originalExcludeCurrentPeriod, availableGranularities, isEditMode, locale, isTimeForAbsoluteRangeEnabled, weekStart, } = this.props;\n        const { excludeCurrentPeriod, selectedFilterOption, isExcludeCurrentPeriodEnabled } = this.state;\n        return dateFilterMode === \"hidden\" ? null : (React.createElement(DateFilterCore, { availableGranularities: availableGranularities, customFilterName: customFilterName, dateFormat: dateFormat, disabled: dateFilterMode === \"readonly\", excludeCurrentPeriod: excludeCurrentPeriod, originalExcludeCurrentPeriod: originalExcludeCurrentPeriod, isExcludeCurrentPeriodEnabled: isExcludeCurrentPeriodEnabled, isTimeForAbsoluteRangeEnabled: isTimeForAbsoluteRangeEnabled, isEditMode: isEditMode, filterOptions: filterOptions, selectedFilterOption: selectedFilterOption, originalSelectedFilterOption: originalSelectedFilterOption, locale: locale, onApplyClick: this.handleApplyClick, onCancelClick: this.onCancelClicked, onDropdownOpenChanged: this.onDropdownOpenChanged, onExcludeCurrentPeriodChange: this.handleExcludeCurrentPeriodChange, onSelectedFilterOptionChange: this.handleSelectedFilterOptionChange, errors: validateFilterOption(selectedFilterOption), weekStart: weekStart }));\n    }\n}\nDateFilter.defaultProps = {\n    dateFormat: DEFAULT_DATE_FORMAT,\n    isEditMode: false,\n    isTimeForAbsoluteRangeEnabled: false,\n    locale: \"en-US\",\n    onCancel: noop,\n    onOpen: noop,\n    onClose: noop,\n    weekStart: \"Sunday\",\n};\nDateFilter.getStateFromSelectedOption = (selectedFilterOption, excludeCurrentPeriod) => {\n    const canExcludeCurrent = canExcludeCurrentPeriod(selectedFilterOption);\n    return {\n        selectedFilterOption,\n        excludeCurrentPeriod: canExcludeCurrent ? excludeCurrentPeriod : false,\n        isExcludeCurrentPeriodEnabled: canExcludeCurrent,\n    };\n};\nDateFilter.checkInitialFilterOption = (filterOption) => {\n    if (isAbsoluteDateFilterForm(filterOption) && (isNil(filterOption.from) || isNil(filterOption.to))) {\n        console.warn(\"The default filter option is not valid. Values 'from' and 'to' from absoluteForm filter option must be specified.\");\n    }\n    if (isUiRelativeDateFilterForm(filterOption) &&\n        (isNil(filterOption.from) || isNil(filterOption.to))) {\n        console.warn(\"The default filter option is not valid. Values 'from' and 'to' from relativeForm filter option must be specified.\");\n    }\n};\nexport { DateFilter };\n//# sourceMappingURL=DateFilter.js.map","// (C) 2007-2021 GoodData Corporation\nimport { isUiRelativeDateFilterForm } from \"../interfaces/index.js\";\nexport function normalizeSelectedFilterOption(selectedFilterOption) {\n    if (isUiRelativeDateFilterForm(selectedFilterOption) &&\n        selectedFilterOption.from > selectedFilterOption.to) {\n        return Object.assign(Object.assign({}, selectedFilterOption), { from: selectedFilterOption.to, to: selectedFilterOption.from });\n    }\n    return selectedFilterOption;\n}\n//# sourceMappingURL=FilterOptionNormalization.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { DateFilter, getLocalizedIcuDateFormatPattern } from \"@gooddata/sdk-ui-filters\";\nimport { dateFilterOptionToDashboardDateFilter } from \"../../../_staging/dashboard/dashboardFilterConverter.js\";\nimport { matchDateFilterToDateFilterOptionWithPreference } from \"../../../_staging/dateFilterConfig/dateFilterOptionMapping.js\";\nimport { selectBackendCapabilities, selectIsInEditMode, selectLocale, selectSettings, selectWeekStart, useDashboardSelector, } from \"../../../model/index.js\";\n/**\n * Default implementation of the attribute filter to use on the dashboard's filter bar.\n *\n * This will use the SDK's DateFilter with the button styled same as we have it today on KD.\n *\n * @alpha\n */\nexport const DefaultDashboardDateFilter = (props) => {\n    const settings = useDashboardSelector(selectSettings);\n    const capabilities = useDashboardSelector(selectBackendCapabilities);\n    const locale = useDashboardSelector(selectLocale);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const weekStart = useDashboardSelector(selectWeekStart);\n    const { filter, onFilterChanged, config, readonly } = props;\n    const [lastSelectedOptionId, setLastSelectedOptionId] = useState(\"\");\n    const { dateFilterOption, excludeCurrentPeriod } = useMemo(() => matchDateFilterToDateFilterOptionWithPreference(filter, config.dateFilterOptions, lastSelectedOptionId), [filter, config.dateFilterOptions, lastSelectedOptionId]);\n    const onApply = useCallback((option, exclude) => {\n        setLastSelectedOptionId(option.localIdentifier);\n        onFilterChanged(dateFilterOptionToDashboardDateFilter(option, exclude), option.localIdentifier);\n    }, [onFilterChanged]);\n    const dateFormat = settings.formatLocale\n        ? getLocalizedIcuDateFormatPattern(settings.formatLocale)\n        : settings.responsiveUiDateFormat;\n    return (React.createElement(DateFilter, { excludeCurrentPeriod: excludeCurrentPeriod, selectedFilterOption: dateFilterOption, dateFilterMode: readonly ? \"readonly\" : \"active\", filterOptions: config.dateFilterOptions, availableGranularities: config.availableGranularities, customFilterName: config.customFilterName, onApply: onApply, dateFormat: dateFormat, locale: locale, isTimeForAbsoluteRangeEnabled: !!capabilities.supportsTimeGranularities, isEditMode: isInEditMode, weekStart: weekStart }));\n};\n//# sourceMappingURL=DefaultDashboardDateFilter.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { Icon, ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { areObjRefsEqual, idRef, uriRef, } from \"@gooddata/sdk-model\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { selectCatalogAttributes, useDashboardSelector } from \"../../../model/index.js\";\nfunction isDisplayFormEqual(displayForm, identifierOrUriRef) {\n    return (areObjRefsEqual(idRef(displayForm.id, displayForm.type), identifierOrUriRef) ||\n        areObjRefsEqual(uriRef(displayForm.uri), identifierOrUriRef));\n}\nconst selectFilterAttribute = (filter) => createSelector(selectCatalogAttributes, (attributes) => attributes.find((attribute) => attribute.displayForms.some((displayForm) => isDisplayFormEqual(displayForm, filter.attributeFilter.displayForm))));\nexport const DefaultAttributeFilterDraggingComponent = ({ item }) => {\n    var _a, _b;\n    const theme = useTheme();\n    const filterAttribute = useDashboardSelector(selectFilterAttribute(item.filter));\n    if (!filterAttribute) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"attribute-filter-button is-dragging\" },\n        React.createElement(Icon.DragHandle, { width: 7, height: 26, className: \"drag-handle-icon\", color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c5 }),\n        React.createElement(\"div\", { className: \"button-content\" },\n            React.createElement(\"div\", { className: \"button-title\" },\n                React.createElement(ShortenedText, null, filterAttribute.attribute.title)))));\n};\n//# sourceMappingURL=DefaultAttributeFilterDraggingComponent.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { useIntl } from \"react-intl\";\n/**\n * @internal\n */\nexport function AddAttributeFilterButton({ className, isOpen, title }) {\n    const intl = useIntl();\n    title = title !== null && title !== void 0 ? title : intl.formatMessage({ id: \"addPanel.attributeFilter\" });\n    const rootClassNames = cx(className, \"is-loaded\", {\n        \"is-active\": isOpen,\n    });\n    return (React.createElement(\"div\", { className: rootClassNames },\n        React.createElement(\"div\", { className: \"button-content\" },\n            React.createElement(\"div\", { className: \"button-title\" }, title))));\n}\n//# sourceMappingURL=AddAttributeFilterButton.js.map","// (C) 2023 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nfunction AttrTooltipElements(props) {\n    const intl = useIntl();\n    const { elements, totalCount } = props;\n    const remainingElementsCount = totalCount - elements.length;\n    return (React.createElement(React.Fragment, null,\n        elements.map((element, idx) => (React.createElement(\"span\", { key: idx, className: \"gd-attribute-element s-attribute-element\" },\n            element.title || `(${intl.formatMessage({ id: \"empty_value\" })})`,\n            React.createElement(\"br\", null)))),\n        remainingElementsCount > 0 && (React.createElement(\"span\", { key: elements.length, className: \"attribute-tooltip-elements-more\" },\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.details.shortening_decoration\", values: { count: remainingElementsCount } })))));\n}\n/**\n * @internal\n */\nexport const AttributeListItemTooltipContent = ({ item, attributesDataSetLoading, attributesElementsLoading, attributeDataSet, attributeElements, }) => {\n    return (React.createElement(\"div\", { className: \"gd-attribute-dropdown-list-tooltip-content s-attribute-dropdown-item-list-tooltip-content\" },\n        React.createElement(\"h3\", { className: \"s-attribute-filter-tooltip-header\" }, item.attribute.title),\n        React.createElement(\"h4\", null,\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.details.dataset\" })),\n        React.createElement(\"p\", { className: \"s-attribute-filter-tooltip-item-dataset\" }, attributesDataSetLoading ? React.createElement(FormattedMessage, { id: \"loading\" }) : attributeDataSet === null || attributeDataSet === void 0 ? void 0 : attributeDataSet.title),\n        React.createElement(\"h4\", null,\n            React.createElement(FormattedMessage, { id: \"attributesDropdown.details.values\" })),\n        React.createElement(\"p\", { className: \"s-attribute-filter-tooltip-item-elements\" }, attributesElementsLoading ? (React.createElement(FormattedMessage, { id: \"loading\" })) : (React.createElement(AttrTooltipElements, { elements: attributeElements.elements, totalCount: attributeElements.totalCount })))));\n};\n//# sourceMappingURL=AttributeListItemTooltipContent.js.map","// (C) 2023 GoodData Corporation\nimport React, { useState } from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { useAttributeDataSet } from \"../../dashboardDropdownBody/configuration/hooks/useAttributeDataSet.js\";\nimport { useAttributeElements } from \"../../dashboardDropdownBody/configuration/hooks/useAttributeElements.js\";\nimport { AttributeListItemTooltipContent } from \"./AttributeListItemTooltipContent.js\";\nconst ATTR_ELEMENTS_LIMIT = 5;\nconst bubbleAlignPoints = [\n    { align: \"tr tl\", offset: { x: 0, y: -50 } },\n    { align: \"tl tr\", offset: { x: -170, y: -80 } },\n];\n/**\n * @internal\n */\nexport const AttributeListItemTooltip = ({ item }) => {\n    const [isHover, setIsHover] = useState(false);\n    const { attributeElements, attributesElementsLoading } = useAttributeElements(item.defaultDisplayForm.ref, ATTR_ELEMENTS_LIMIT, isHover);\n    const { attributeDataSet, attributesDataSetLoading } = useAttributeDataSet(item.attribute.ref, isHover);\n    return (React.createElement(\"div\", null,\n        React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0, eventsOnBubble: true, className: \"gd-attribute-item-tooltip-icon\" },\n            React.createElement(\"span\", { onMouseEnter: () => setIsHover(true), className: \"gd-icon-circle-question gd-list-item-tooltip-icon s-attribute-dropdown-list-item-tooltip\" }),\n            React.createElement(Bubble, { className: \"gd-attribute-dropdown-list-item-details s-attribute-filter-details-bubble\", alignPoints: bubbleAlignPoints, arrowStyle: { display: \"none\" } },\n                React.createElement(AttributeListItemTooltipContent, { item: item, attributesDataSetLoading: attributesDataSetLoading, attributesElementsLoading: attributesElementsLoading, attributeDataSet: attributeDataSet, attributeElements: attributeElements })))));\n};\n//# sourceMappingURL=AttributeListItemTooltip.js.map","// (C) 2023 GoodData Corporation\nimport { useEffect, useMemo } from \"react\";\nimport { queryAttributeElements, useDashboardQueryProcessing, } from \"../../../../../../model/index.js\";\n/**\n * @internal\n */\nexport function useAttributeElements(displayForm, limit, loadQuery) {\n    const { run: getAttributeElements, result: attributeElements, status: attributeElementsLoadingStatus, error: attributeElementsLoadingError, } = useDashboardQueryProcessing({\n        queryCreator: queryAttributeElements,\n    });\n    useEffect(() => {\n        if (loadQuery) {\n            getAttributeElements(displayForm, limit);\n        }\n    }, [displayForm, loadQuery, limit, getAttributeElements]);\n    const attributesElementsLoading = useMemo(() => {\n        return attributeElementsLoadingStatus === \"pending\" || attributeElementsLoadingStatus === \"running\";\n    }, [attributeElementsLoadingStatus]);\n    return {\n        attributeElements,\n        attributesElementsLoading,\n        attributeElementsLoadingError,\n    };\n}\n//# sourceMappingURL=useAttributeElements.js.map","// (C) 2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { AttributeListItemTooltip } from \"./attributeListItemTooltip/AttributeListItemTooltip.js\";\nimport { ShortenedText } from \"@gooddata/sdk-ui-kit\";\nconst TOOLTIP_ALIGN_POINT = [\n    { align: \"cr cl\", offset: { x: 10, y: 0 } },\n    { align: \"cl cr\", offset: { x: -10, y: 0 } },\n];\nconst AttributeListItem = ({ item, isLocationIconEnabled, onClick }) => {\n    const classNames = useMemo(() => {\n        const isDisplayLocationIcon = isLocationIconEnabled && !isEmpty(item === null || item === void 0 ? void 0 : item.geoPinDisplayForms);\n        return cx(`s-${stringUtils.simplifyText(item.attribute.title)}`, \"gd-attribute-list-item\", {\n            \"gd-list-item\": true,\n            \"gd-list-item-shortened\": true,\n            \"type-attribute\": !isDisplayLocationIcon,\n            \"type-geo_attribute\": isDisplayLocationIcon,\n        });\n    }, [item, isLocationIconEnabled]);\n    return (React.createElement(\"div\", { key: item.attribute.id, className: classNames, onClick: onClick },\n        React.createElement(ShortenedText, { tooltipAlignPoints: TOOLTIP_ALIGN_POINT }, item.attribute.title),\n        React.createElement(AttributeListItemTooltip, { item: item })));\n};\nexport default AttributeListItem;\n//# sourceMappingURL=AttributeListItem.js.map","// (C) 2023 GoodData Corporation\nimport { insightVisualizationType } from \"@gooddata/sdk-model\";\nconst SUPPORTED_LOCATION_ICON_CHART_TYPES = [\"pushpin\"];\nexport const isLocationIconEnabled = (insightWidgets, insightsMap) => {\n    return insightWidgets\n        .map((it) => insightsMap.get(it === null || it === void 0 ? void 0 : it.insight))\n        .map((it) => (it && insightVisualizationType(it)))\n        .some((it) => SUPPORTED_LOCATION_ICON_CHART_TYPES.includes(it));\n};\n//# sourceMappingURL=addAttributeFilterUtils.js.map","// (C) 2007-2023 GoodData Corporation\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport cx from \"classnames\";\nimport { useIntl } from \"react-intl\";\nimport { Dropdown, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport debounce from \"lodash/debounce.js\";\nimport { AddAttributeFilterButton } from \"./AddAttributeFilterButton.js\";\nimport { useDashboardSelector, selectCatalogAttributes, selectAllInsightWidgets, selectInsightsMap, } from \"../../../../model/index.js\";\nimport AttributeListItem from \"./AttributeListItem.js\";\nimport { isLocationIconEnabled } from \"./addAttributeFilterUtils.js\";\nconst dropdownAlignPoints = [\n    {\n        align: \"bl tl\",\n    },\n    {\n        align: \"tr tl\",\n    },\n    {\n        align: \"tr tl\",\n        offset: {\n            x: 0,\n            y: -100,\n        },\n    },\n    {\n        align: \"tr tl\",\n        offset: {\n            x: 0,\n            y: -50,\n        },\n    },\n    {\n        align: \"br tr\",\n        offset: {\n            x: -10,\n            y: 0,\n        },\n    },\n    {\n        align: \"tl tr\",\n        offset: {\n            x: 0,\n            y: -100,\n        },\n    },\n    {\n        align: \"tl tr\",\n        offset: {\n            x: 0,\n            y: -50,\n        },\n    },\n];\n/**\n * @internal\n */\nexport function AttributesDropdown({ className, bodyClassName, onClose, onSelect, }) {\n    const intl = useIntl();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [closeOnParentScroll, setCloseOnParentScroll] = useState(false);\n    // 1) Dragging this component into FilterBar could change height of FilterBar (FilterBar is sticky)\n    // 2) When size of sticky element changed, then scroll position of dashboard is changed\n    // 3) Then onScroll event is fired (By default window scroll event)\n    // 4) KD or external app onScroll could fire \"goodstrap.scrolled\" custom event to close all opened overlays that have closeOnParentScroll = true\n    // 5) Result is when this component change height of FilterBar it will be immediately closed after user drop it into FilterBar\n    // 6) To prevent this behavior we initialize this component with closeOnParentScroll = false\n    // 7) And in timeout 0.5 we set closeOnParentScroll = true to keep behavior that dropdown is closed when user scroll\n    useEffect(() => {\n        const timer = window.setTimeout(() => setCloseOnParentScroll(true), 500);\n        return () => {\n            if (timer !== null) {\n                window.clearTimeout(timer);\n            }\n        };\n    }, []);\n    const attributes = useDashboardSelector(selectCatalogAttributes);\n    const insightsMap = useDashboardSelector(selectInsightsMap);\n    const insightWidgets = useDashboardSelector(selectAllInsightWidgets);\n    const shouldDisplayLocationIcon = useMemo(() => isLocationIconEnabled(insightWidgets, insightsMap), [insightWidgets, insightsMap]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const onSearch = useCallback(debounce((query) => {\n        setSearchQuery(query);\n    }, 250), []);\n    const onDropdownStateChange = useCallback((isOpen) => {\n        if (!isOpen) {\n            onClose();\n        }\n    }, [onClose]);\n    const dropdownClassName = cx(className, \"s-attribute_select\", \"attribute-filter-dropdown\", \"add-attribute-filter-dropdown\");\n    const filteredMeasures = searchQuery\n        ? attributes.filter((a) => a.attribute.title.toLowerCase().includes(searchQuery.toLowerCase()))\n        : attributes;\n    return (React.createElement(Dropdown, { className: dropdownClassName, onOpenStateChanged: onDropdownStateChange, closeOnParentScroll: closeOnParentScroll, closeOnMouseDrag: true, closeOnOutsideClick: true, alignPoints: dropdownAlignPoints, openOnInit: true, renderButton: ({ isOpen }) => (React.createElement(AddAttributeFilterButton, { className: \"attribute-filter-button mobile-dropdown-button\", isOpen: isOpen })), renderBody: ({ closeDropdown }) => (React.createElement(\"div\", { className: cx(bodyClassName, \"attributes-list\") },\n            React.createElement(DropdownList, { items: filteredMeasures, searchFieldSize: \"small\", showSearch: true, onSearch: onSearch, searchString: searchQuery, searchPlaceholder: intl.formatMessage({\n                    id: \"attributesDropdown.placeholder\",\n                }), renderItem: ({ item }) => {\n                    return (React.createElement(AttributeListItem, { item: item, isLocationIconEnabled: shouldDisplayLocationIcon, onClick: () => {\n                            onSelect(item.defaultDisplayForm.ref);\n                            closeDropdown();\n                        } }));\n                } }))) }));\n}\n//# sourceMappingURL=AttributesDropdown.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\n/**\n * @internal\n */\nexport const DraggableCreatePanelItem = (props) => {\n    const { Component, disabled } = props;\n    const WrapCreatePanelItemWithDragComponent = props.WrapCreatePanelItemWithDragComponent;\n    return (React.createElement(WrapCreatePanelItemWithDragComponent, Object.assign({}, props),\n        React.createElement(Component, { disabled: disabled })));\n};\n//# sourceMappingURL=DraggableCreatePanelItem.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { DraggableCreatePanelItem } from \"../DraggableCreatePanelItem.js\";\nconst dragItem = {\n    type: \"attributeFilter-placeholder\",\n};\n/**\n * @internal\n */\nexport const DraggableAttributeFilterCreatePanelItem = ({ CreatePanelItemComponent, WrapCreatePanelItemWithDragComponent, disabled }) => {\n    return (React.createElement(DraggableCreatePanelItem, { Component: CreatePanelItemComponent, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent, dragItem: dragItem, disabled: disabled, hideDefaultPreview: false }));\n};\n//# sourceMappingURL=DraggableAttributeFilterCreatePanelItem.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\n/**\n * @internal\n */\nexport function AddAttributeFilterPlaceholder({ disabled }) {\n    const className = cx(\"add-item-placeholder\", \"add-attribute-filter-placeholder\", \"s-add-attribute-filter\", {\n        disabled,\n    });\n    return (React.createElement(\"div\", { className: className },\n        React.createElement(FormattedMessage, { id: \"addPanel.attributeFilter\" })));\n}\n//# sourceMappingURL=AddAttributeFilterPlaceholder.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nimport { DraggableAttributeFilterCreatePanelItem } from \"../../dragAndDrop/index.js\";\nimport { AddAttributeFilterPlaceholder } from \"./addAttributeFilter/index.js\";\nimport { useDashboardSelector, selectHasCatalogAttributes, selectIsWhiteLabeled, selectCanAddMoreAttributeFilters, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport function CreatableAttributeFilter(props) {\n    const { WrapCreatePanelItemWithDragComponent } = props;\n    const hasAttributes = useDashboardSelector(selectHasCatalogAttributes);\n    const canAddMoreAttributeFilters = useDashboardSelector(selectCanAddMoreAttributeFilters);\n    const isWhiteLabeled = useDashboardSelector(selectIsWhiteLabeled);\n    const disabled = !hasAttributes || !canAddMoreAttributeFilters;\n    const tooltip = disabled && !hasAttributes ? (React.createElement(\"div\", null,\n        React.createElement(FormattedMessage, { id: \"addPanel.attributeFilter.tooltip.no_attributes\" }),\n        \"\\u00A0\",\n        !isWhiteLabeled ? (React.createElement(\"a\", { href: \"https://help.gooddata.com/display/doc/Attributes+in+Logical+Data+Models\", rel: \"noopener noreferrer\", target: \"_blank\", className: \"s-add-attribute-filter-tooltip-link\" },\n            React.createElement(FormattedMessage, { id: \"addPanel.attributeFilter.tooltip.no_attributes.link\" }))) : null)) : undefined;\n    return (React.createElement(BubbleHoverTrigger, { eventsOnBubble: true, className: \"s-add-attribute-filter-bubble-trigger\" },\n        React.createElement(DraggableAttributeFilterCreatePanelItem, { CreatePanelItemComponent: AddAttributeFilterPlaceholder, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent, disabled: disabled }),\n        tooltip ? (React.createElement(Bubble, { alignPoints: [{ align: \"cr cl\", offset: { x: -20, y: 0 } }] }, tooltip)) : null));\n}\n//# sourceMappingURL=CreatableAttributeFilter.js.map","import { DefaultAttributeFilterDraggingComponent } from \"../../dragAndDrop/index.js\";\nimport { AttributesDropdown } from \"./addAttributeFilter/index.js\";\nimport { CreatableAttributeFilter } from \"./CreatableAttributeFilter.js\";\n/**\n * @internal\n */\nexport function DefaultDashboardAttributeFilterComponentSetFactory(attributeFilterProvider) {\n    return {\n        MainComponentProvider: attributeFilterProvider,\n        creating: {\n            CreatingPlaceholderComponent: AttributesDropdown,\n            CreatePanelListItemComponent: CreatableAttributeFilter,\n            type: \"attributeFilter-placeholder\",\n            priority: 10,\n        },\n        dragging: {\n            DraggingComponent: DefaultAttributeFilterDraggingComponent,\n            type: \"attributeFilter\",\n        },\n    };\n}\n//# sourceMappingURL=DefaultDashboardAttributeFilterComponentSetFactory.js.map","// (C) 2020-2023 GoodData Corporation\nimport { isDrillToLegacyDashboard } from \"@gooddata/sdk-model\";\nimport { isDrillIntersectionAttributeItem } from \"@gooddata/sdk-ui\";\nimport isEqual from \"lodash/isEqual.js\";\nimport compact from \"lodash/compact.js\";\nimport uniqWith from \"lodash/uniqWith.js\";\nimport { getDrillOriginLocalIdentifier, isDrillConfigured } from \"../../../_staging/drills/drillingUtils.js\";\nimport { isDrillToUrl } from \"../types.js\";\n/**\n * @internal\n */\nexport function getDrillDownAttributeTitle(localIdentifier, drillEvent) {\n    return (drillEvent.drillContext.intersection || [])\n        .map((intersectionElement) => intersectionElement.header)\n        .filter(isDrillIntersectionAttributeItem)\n        .filter((intersectionAttributeItem) => intersectionAttributeItem.attributeHeader.localIdentifier === localIdentifier)\n        .map((intersectionAttributeItem) => intersectionAttributeItem.attributeHeaderItem.name)[0];\n}\n/**\n * Get total number of IDrillToUrl\n * @internal\n */\nexport function getTotalDrillToUrlCount(drillDefinition) {\n    return drillDefinition.filter(isDrillToUrl).length;\n}\n/**\n * Implicit drill (currently IDrillDownDefinition and implicit IDrillToAttributeUrl) has lower priority,\n * so needs to be removed when other drill config exists for the same attribute\n *\n * @internal\n */\nexport function filterDrillFromAttributeByPriority(drillDefinitions, configuredDrills = []) {\n    // need create deep equal unique drills array because we can get same two drills that are configured and implicit e.g. IDrillToAttributeUrl\n    // and is not able to configure more drills on one origin\n    // configured once has higher priority\n    const uniqueDrillDefinitions = uniqWith(drillDefinitions, isEqual);\n    const drillOriginsWithoutImplicitDrills = compact(uniqueDrillDefinitions.map((drill) => {\n        if (!isDrillToLegacyDashboard(drill) && isDrillConfigured(drill, configuredDrills)) {\n            return getDrillOriginLocalIdentifier(drill);\n        }\n    }));\n    return uniqueDrillDefinitions.filter((drill) => {\n        if (isDrillToLegacyDashboard(drill)) {\n            return true;\n        }\n        if (!isDrillConfigured(drill, configuredDrills)) {\n            return !drillOriginsWithoutImplicitDrills.includes(getDrillOriginLocalIdentifier(drill));\n        }\n        return true;\n    });\n}\n//# sourceMappingURL=drillDownUtils.js.map","/**\n * These types are also used as s-classes for testing e.g. .s-drill-to-dashboard\n */\nexport var DrillType;\n(function (DrillType) {\n    DrillType[\"DRILL_TO_DASHBOARD\"] = \"drill-to-dashboard\";\n    DrillType[\"DRILL_TO_INSIGHT\"] = \"drill-to-insight\";\n    DrillType[\"DRILL_TO_URL\"] = \"drill-to-url\";\n    DrillType[\"DRILL_DOWN\"] = \"drill-down\";\n})(DrillType = DrillType || (DrillType = {}));\n//# sourceMappingURL=types.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport compact from \"lodash/compact.js\";\nimport { Icon } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { DrillType } from \"./types.js\";\nconst DRILL_ICON_NAME = {\n    [DrillType.DRILL_TO_DASHBOARD]: \"DrillToDashboard\",\n    [DrillType.DRILL_TO_INSIGHT]: \"DrillToInsight\",\n    [DrillType.DRILL_TO_URL]: \"Hyperlink\",\n    [DrillType.DRILL_DOWN]: \"DrillDown\",\n};\nexport const DrillSelectListItem = (props) => {\n    var _a, _b;\n    const theme = useTheme(props.theme);\n    const { item: { name, type, drillDefinition, attributeValue }, } = props;\n    const onClick = (e) => {\n        e.preventDefault();\n        props.onClick(drillDefinition);\n    };\n    const renderLoading = () => {\n        return (React.createElement(\"div\", { className: \"gd-drill-to-url-modal-picker s-drill-to-url-modal-picker\" },\n            React.createElement(\"div\", { className: \"gd-spinner small\" })));\n    };\n    const itemClassName = cx(\"gd-drill-modal-picker-list-item\", \"s-gd-drill-modal-picker-item\", `s-${type}`);\n    const IconComponent = Icon[DRILL_ICON_NAME[type]];\n    const attributeLabel = attributeValue ? `(${attributeValue})` : \"\";\n    // make sure there is no trailing space in case attributeLabel is empty\n    const title = compact([name, attributeLabel]).join(\" \");\n    return (React.createElement(\"a\", { onClick: onClick, className: itemClassName, title: title },\n        React.createElement(\"div\", { className: \"gd-drill-modal-picker-icon-wrapper\" },\n            React.createElement(IconComponent, { color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c5 })),\n        !name ? (renderLoading()) : (React.createElement(\"p\", null,\n            name,\n            attributeValue ? React.createElement(\"span\", null,\n                \"\\u00A0(\",\n                attributeValue,\n                \")\") : null))));\n};\n//# sourceMappingURL=DrillSelectListItem.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport partition from \"lodash/partition.js\";\nimport { FormattedMessage } from \"react-intl\";\nimport { isDrillDownDefinition } from \"../../../types.js\";\nimport { DrillSelectListItem } from \"./DrillSelectListItem.js\";\nexport const DrillSelectList = (props) => {\n    const { items } = props;\n    const [drillDownItems, drillItems] = partition(items, (item) => {\n        return isDrillDownDefinition(item.drillDefinition);\n    });\n    const renderItems = (items) => {\n        return items.map((item) => (React.createElement(DrillSelectListItem, { key: item.id, item: item, onClick: props.onSelect })));\n    };\n    const renderDrillDownItems = (items) => {\n        if ((items === null || items === void 0 ? void 0 : items.length) > 0) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: \"gd-drill-modal-picker-title\" },\n                    React.createElement(FormattedMessage, { id: \"drill_modal_picker.drill-down\", tagName: \"span\" })),\n                renderItems(items)));\n        }\n    };\n    const renderDrillItems = (items) => {\n        if ((items === null || items === void 0 ? void 0 : items.length) > 0) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: \"gd-drill-modal-picker-title\" },\n                    React.createElement(FormattedMessage, { id: \"drill_modal_picker.drill-into\", tagName: \"span\" })),\n                renderItems(items)));\n        }\n    };\n    return (React.createElement(\"div\", { className: \"gd-drill-modal-picker-selector-list\" },\n        renderDrillDownItems(drillDownItems),\n        renderDrillItems(drillItems)));\n};\n//# sourceMappingURL=DrillSelectList.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { DrillSelectList } from \"./DrillSelectList.js\";\nexport const DrillSelectListBody = (props) => {\n    const { items, onSelect } = props;\n    const stopPropagation = (e) => {\n        e.stopPropagation();\n    };\n    return (React.createElement(\"div\", { className: \"gd-drill-modal-picker-dropdown s-drill-item-selector-dropdown\", onScroll: stopPropagation },\n        React.createElement(\"div\", { className: \"gd-drill-modal-picker-body\" },\n            React.createElement(DrillSelectList, { items: items, onSelect: onSelect }))));\n};\n//# sourceMappingURL=DrillSelectListBody.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport stringify from \"json-stable-stringify\";\nimport { useIntl } from \"react-intl\";\nimport { invariant } from \"ts-invariant\";\nimport { UnexpectedSdkError } from \"@gooddata/sdk-ui\";\nimport { Overlay } from \"@gooddata/sdk-ui-kit\";\nimport { isDrillDownDefinition } from \"../../../types.js\";\nimport { insightTitle, isDrillFromAttribute, isDrillToDashboard, isDrillToInsight, isDrillToLegacyDashboard, } from \"@gooddata/sdk-model\";\nimport { isDrillToUrl } from \"../types.js\";\nimport { DrillSelectListBody } from \"./DrillSelectListBody.js\";\nimport { getDrillDownAttributeTitle, getTotalDrillToUrlCount } from \"../utils/drillDownUtils.js\";\nimport { DrillType } from \"./types.js\";\nimport { selectAccessibleDashboards, selectDashboardTitle, selectInsightsMap, useDashboardSelector, } from \"../../../model/index.js\";\nimport { dashboardMatch } from \"../utils/dashboardPredicate.js\";\nimport { getDrillOriginLocalIdentifier } from \"../../../_staging/drills/drillingUtils.js\";\nexport const DrillSelectDropdown = (props) => {\n    const { isOpen, dropDownAnchorClass, onClose, onSelect, drillDefinitions, drillEvent } = props;\n    const intl = useIntl();\n    const listedDashboards = useDashboardSelector(selectAccessibleDashboards);\n    const dashboardTitle = useDashboardSelector(selectDashboardTitle);\n    const insights = useDashboardSelector(selectInsightsMap);\n    const drillSelectItems = useMemo(() => createDrillSelectItems(drillDefinitions, drillEvent, insights, listedDashboards, dashboardTitle, intl), [drillDefinitions, drillEvent, insights, listedDashboards, dashboardTitle, intl]);\n    return isOpen ? (React.createElement(\"div\", { className: \"gd-drill-modal-picker-overlay-mask\" },\n        React.createElement(Overlay, { closeOnOutsideClick: true, closeOnEscape: true, alignTo: `.${dropDownAnchorClass}`, onClose: onClose },\n            React.createElement(DrillSelectListBody, { items: drillSelectItems, onSelect: onSelect })))) : null;\n};\nconst getDashboardTitle = (dashboardRef, dashboardList) => {\n    const dashboard = dashboardList.find((dashboard) => dashboardMatch(dashboard.identifier, dashboard.ref, dashboardRef));\n    return dashboard ? dashboard.title : null;\n};\nexport const createDrillSelectItems = (drillDefinitions, drillEvent, insights, dashboardList, dashboardTitle, intl) => {\n    const totalDrillToUrls = getTotalDrillToUrlCount(drillDefinitions);\n    return drillDefinitions.map((drillDefinition) => {\n        var _a;\n        invariant(!isDrillToLegacyDashboard(drillDefinition), \"Drill to pixel perfect dashboards from insight is not supported.\");\n        if (isDrillDownDefinition(drillDefinition)) {\n            const { title: drillTitle } = drillDefinition;\n            const drillDownOrigin = getDrillOriginLocalIdentifier(drillDefinition);\n            const title = getDrillDownAttributeTitle(drillDownOrigin, drillEvent);\n            return {\n                type: DrillType.DRILL_DOWN,\n                name: (_a = drillTitle !== null && drillTitle !== void 0 ? drillTitle : title) !== null && _a !== void 0 ? _a : \"NULL\",\n                drillDefinition,\n                id: stringify(drillDefinition),\n            };\n        }\n        if (isDrillToInsight(drillDefinition)) {\n            const targetInsight = insights.get(drillDefinition.target);\n            const title = targetInsight && insightTitle(targetInsight);\n            return {\n                type: DrillType.DRILL_TO_INSIGHT,\n                name: title,\n                drillDefinition,\n                id: stringify(drillDefinition),\n            };\n        }\n        if (isDrillToDashboard(drillDefinition)) {\n            const title = drillDefinition.target\n                ? getDashboardTitle(drillDefinition.target, dashboardList)\n                : dashboardTitle;\n            return {\n                type: DrillType.DRILL_TO_DASHBOARD,\n                name: title,\n                drillDefinition,\n                id: stringify(drillDefinition),\n            };\n        }\n        if (isDrillToUrl(drillDefinition)) {\n            const drillToUrlOrigin = getDrillOriginLocalIdentifier(drillDefinition);\n            const attributeValue = isDrillFromAttribute(drillDefinition.origin) && totalDrillToUrls > 1\n                ? getDrillDownAttributeTitle(drillToUrlOrigin, drillEvent)\n                : undefined;\n            return {\n                type: DrillType.DRILL_TO_URL,\n                name: intl.formatMessage({ id: \"drill_modal_picker.more.details\" }),\n                drillDefinition,\n                attributeValue,\n                id: stringify(drillDefinition),\n            };\n        }\n        const unhandledDefinition = drillDefinition;\n        throw new UnexpectedSdkError(`Unhandled drill definition: ${JSON.stringify(unhandledDefinition)}`);\n    });\n};\n//# sourceMappingURL=DrillSelectDropdown.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drill, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrill = ({ onSuccess, onError, onBeforeRun } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drill,\n        successEvent: \"GDC.DASH/EVT.DRILL.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrill.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drillDown, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrillDown = ({ onSuccess, onError, onBeforeRun } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drillDown,\n        successEvent: \"GDC.DASH/EVT.DRILL.DRILL_DOWN.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrillDown.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drillToInsight, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrillToInsight = ({ onSuccess, onError, onBeforeRun } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drillToInsight,\n        successEvent: \"GDC.DASH/EVT.DRILL.DRILL_TO_INSIGHT.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrillToInsight.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drillToDashboard, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrillToDashboard = ({ onSuccess, onError, onBeforeRun } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drillToDashboard,\n        successEvent: \"GDC.DASH/EVT.DRILL.DRILL_TO_DASHBOARD.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrillToDashboard.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drillToAttributeUrl, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrillToAttributeUrl = ({ onSuccess, onError, onBeforeRun, } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drillToAttributeUrl,\n        successEvent: \"GDC.DASH/EVT.DRILL.DRILL_TO_ATTRIBUTE_URL.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrillToAttributeUrl.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drillToCustomUrl, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrillToCustomUrl = ({ onSuccess, onError, onBeforeRun } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drillToCustomUrl,\n        successEvent: \"GDC.DASH/EVT.DRILL.DRILL_TO_CUSTOM_URL.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrillToCustomUrl.js.map","// (C) 2020-2021 GoodData Corporation\nimport { drillToLegacyDashboard, useDashboardCommandProcessing, } from \"../../../model/index.js\";\n/**\n * @internal\n */\nexport const useDrillToLegacyDashboard = ({ onSuccess, onError, onBeforeRun, } = {}) => {\n    return useDashboardCommandProcessing({\n        commandCreator: drillToLegacyDashboard,\n        successEvent: \"GDC.DASH/EVT.DRILL.DRILL_TO_LEGACY_DASHBOARD.RESOLVED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess,\n        onError,\n        onBeforeRun,\n    });\n};\n//# sourceMappingURL=useDrillToLegacyDashboard.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useState, useCallback, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { v4 as uuid } from \"uuid\";\nimport { DrillSelectDropdown } from \"./DrillSelectDropdown.js\";\nimport { isDrillToAttributeUrl, isDrillToCustomUrl, isDrillToDashboard, isDrillToInsight, } from \"@gooddata/sdk-model\";\nimport { IntlWrapper } from \"../../localization/index.js\";\nimport { selectLocale, useDashboardSelector, selectDisableDefaultDrills, selectWidgetDrills, } from \"../../../model/index.js\";\nimport { isDrillDownDefinition, } from \"../../../types.js\";\nimport { filterDrillFromAttributeByPriority } from \"../utils/drillDownUtils.js\";\nimport { useDrills } from \"../hooks/useDrills.js\";\n/**\n * @internal\n */\nexport function WithDrillSelect({ widgetRef, children, insight, onDrillDownSuccess, onDrillToInsightSuccess, onDrillToDashboardSuccess, onDrillToAttributeUrlSuccess, onDrillToCustomUrlSuccess, onError, }) {\n    const { current: drillPickerId } = useRef(uuid());\n    const [dropdownProps, setDropdownProps] = useState(null);\n    const [isOpen, setIsOpen] = useState(true);\n    const locale = useDashboardSelector(selectLocale);\n    const disableDefaultDrills = useDashboardSelector(selectDisableDefaultDrills); // TODO: maybe remove?\n    const configuredDrills = useDashboardSelector(selectWidgetDrills(widgetRef));\n    const drills = useDrills({\n        onDrillSuccess: (s) => {\n            if (disableDefaultDrills || s.payload.drillEvent.drillDefinitions.length === 0) {\n                return;\n            }\n            const drillDefinitions = s.payload.drillEvent.drillDefinitions;\n            const drillEvent = s.payload.drillEvent;\n            const context = s.payload.drillContext;\n            const filteredByPriority = filterDrillFromAttributeByPriority(drillDefinitions, configuredDrills);\n            if (filteredByPriority.length === 1) {\n                onSelect(filteredByPriority[0], drillEvent, s.correlationId, context);\n            }\n            else if (filteredByPriority.length > 1) {\n                setDropdownProps({\n                    drillDefinitions: filteredByPriority,\n                    drillEvent: drillEvent,\n                    drillContext: context,\n                    correlationId: s.correlationId,\n                });\n                setIsOpen(true);\n            }\n        },\n        onDrillDownSuccess,\n        onDrillToInsightSuccess,\n        onDrillToDashboardSuccess,\n        onDrillToAttributeUrlSuccess,\n        onDrillToCustomUrlSuccess,\n        onError: (e) => onError === null || onError === void 0 ? void 0 : onError(e.payload.error),\n    });\n    const onSelect = useCallback((drillDefinition, drillEvent, correlationId, drillContext) => {\n        var _a;\n        const effectiveDrillEvent = drillEvent !== null && drillEvent !== void 0 ? drillEvent : dropdownProps === null || dropdownProps === void 0 ? void 0 : dropdownProps.drillEvent;\n        const effectiveCorrelationId = correlationId !== null && correlationId !== void 0 ? correlationId : dropdownProps === null || dropdownProps === void 0 ? void 0 : dropdownProps.correlationId;\n        const effectiveInsight = (_a = drillContext === null || drillContext === void 0 ? void 0 : drillContext.insight) !== null && _a !== void 0 ? _a : insight;\n        if (effectiveDrillEvent) {\n            if (isDrillDownDefinition(drillDefinition)) {\n                drills.drillDown.run(effectiveInsight, drillDefinition, effectiveDrillEvent, effectiveCorrelationId);\n            }\n            else if (isDrillToInsight(drillDefinition)) {\n                drills.drillToInsight.run(drillDefinition, effectiveDrillEvent, effectiveCorrelationId);\n            }\n            else if (isDrillToDashboard(drillDefinition)) {\n                drills.drillToDashboard.run(drillDefinition, effectiveDrillEvent, effectiveCorrelationId);\n            }\n            else if (isDrillToAttributeUrl(drillDefinition)) {\n                drills.drillToAttributeUrl.run(drillDefinition, effectiveDrillEvent, effectiveCorrelationId);\n            }\n            else if (isDrillToCustomUrl(drillDefinition)) {\n                drills.drillToCustomUrl.run(drillDefinition, effectiveDrillEvent, effectiveCorrelationId);\n            }\n            setDropdownProps(null);\n            setIsOpen(false);\n        }\n    }, [dropdownProps, insight]);\n    const onClose = () => {\n        setIsOpen(false);\n    };\n    const dropDownAnchorClass = `s-drill-picker-${drillPickerId}`;\n    const drillDownDropdown = dropdownProps ? (React.createElement(IntlWrapper, { locale: locale },\n        React.createElement(DrillSelectDropdown, Object.assign({}, dropdownProps, { dropDownAnchorClass: dropDownAnchorClass, isOpen: isOpen, onClose: onClose, onSelect: onSelect })))) : null;\n    return (React.createElement(\"div\", { className: cx(\"gd-drill-modal-wrapper-mask\", dropDownAnchorClass) },\n        children({ onDrill: drills.drill.run }),\n        drillDownDropdown));\n}\n//# sourceMappingURL=WithDrillSelect.js.map","import { useDrill } from \"./useDrill.js\";\nimport { useDrillDown } from \"./useDrillDown.js\";\nimport { useDrillToInsight } from \"./useDrillToInsight.js\";\nimport { useDrillToDashboard } from \"./useDrillToDashboard.js\";\nimport { useDrillToAttributeUrl } from \"./useDrillToAttributeUrl.js\";\nimport { useDrillToCustomUrl } from \"./useDrillToCustomUrl.js\";\nimport { useDrillToLegacyDashboard } from \"./useDrillToLegacyDashboard.js\";\n/**\n * @internal\n */\nexport function useDrills({ onDrill, onDrillSuccess, onDrillError, \n//\nonDrillDown, onDrillDownSuccess, onDrillDownError, \n//\nonDrillToInsight, onDrillToInsightSuccess, onDrillToInsightError, \n//\nonDrillToDashboard, onDrillToDashboardSuccess, onDrillToDashboardError, \n//\nonDrillToAttributeUrl, onDrillToAttributeUrlSuccess, onDrillToAttributeUrlError, \n//\nonDrillToCustomUrl, onDrillToCustomUrlSuccess, onDrillToCustomUrlError, \n//\nonDrillToLegacyDashboard, onDrillToLegacyDashboardSuccess, onDrillToLegacyDashboardError, \n//\nonError, }) {\n    const drill = useDrill({\n        onBeforeRun: onDrill,\n        onSuccess: onDrillSuccess,\n        onError: onDrillError !== null && onDrillError !== void 0 ? onDrillError : onError,\n    });\n    const drillDown = useDrillDown({\n        onBeforeRun: onDrillDown,\n        onSuccess: onDrillDownSuccess,\n        onError: onDrillDownError !== null && onDrillDownError !== void 0 ? onDrillDownError : onError,\n    });\n    const drillToInsight = useDrillToInsight({\n        onBeforeRun: onDrillToInsight,\n        onSuccess: onDrillToInsightSuccess,\n        onError: onDrillToInsightError !== null && onDrillToInsightError !== void 0 ? onDrillToInsightError : onError,\n    });\n    const drillToDashboard = useDrillToDashboard({\n        onBeforeRun: onDrillToDashboard,\n        onSuccess: onDrillToDashboardSuccess,\n        onError: onDrillToDashboardError !== null && onDrillToDashboardError !== void 0 ? onDrillToDashboardError : onError,\n    });\n    const drillToAttributeUrl = useDrillToAttributeUrl({\n        onBeforeRun: onDrillToAttributeUrl,\n        onSuccess: onDrillToAttributeUrlSuccess,\n        onError: onDrillToAttributeUrlError !== null && onDrillToAttributeUrlError !== void 0 ? onDrillToAttributeUrlError : onError,\n    });\n    const drillToCustomUrl = useDrillToCustomUrl({\n        onBeforeRun: onDrillToCustomUrl,\n        onSuccess: onDrillToCustomUrlSuccess,\n        onError: onDrillToCustomUrlError !== null && onDrillToCustomUrlError !== void 0 ? onDrillToCustomUrlError : onError,\n    });\n    const drillToLegacyDashboard = useDrillToLegacyDashboard({\n        onBeforeRun: onDrillToLegacyDashboard,\n        onSuccess: onDrillToLegacyDashboardSuccess,\n        onError: onDrillToLegacyDashboardError !== null && onDrillToLegacyDashboardError !== void 0 ? onDrillToLegacyDashboardError : onError,\n    });\n    return {\n        drill,\n        drillDown,\n        drillToInsight,\n        drillToDashboard,\n        drillToAttributeUrl,\n        drillToCustomUrl,\n        drillToLegacyDashboard,\n    };\n}\n//# sourceMappingURL=useDrills.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useMemo } from \"react\";\nimport isArray from \"lodash/isArray.js\";\nimport mergeWith from \"lodash/mergeWith.js\";\nimport { insightProperties, insightSetProperties } from \"@gooddata/sdk-model\";\nimport { selectSettings, useDashboardSelector } from \"../../../../model/index.js\";\n/**\n * @internal\n */\nexport const useResolveDashboardInsightProperties = (props) => {\n    const { widget, insight } = props;\n    const settings = useDashboardSelector(selectSettings);\n    return useMemo(() => {\n        var _a;\n        if (!insight) {\n            return insight;\n        }\n        const fromWidget = widget.properties;\n        if (!fromWidget) {\n            return insight;\n        }\n        const fromWidgetWithZoomingHandled = Object.assign(Object.assign({}, fromWidget), { controls: Object.assign(Object.assign({}, fromWidget === null || fromWidget === void 0 ? void 0 : fromWidget.controls), { \n                // we need to take the relevant feature flag into account as well\n                zoomInsight: !!(settings.enableKDZooming && ((_a = fromWidget === null || fromWidget === void 0 ? void 0 : fromWidget.controls) === null || _a === void 0 ? void 0 : _a.zoomInsight)) }) });\n        const fromInsight = insightProperties(insight);\n        const merged = mergeWith({}, fromInsight, fromWidgetWithZoomingHandled, (currentValue, incomingValue) => {\n            /**\n             * Replace arrays instead of merging them. This is important for column sizing for example,\n             * where widget might provide an empty array to override the custom column sizes defined on the insight level.\n             */\n            if (isArray(currentValue)) {\n                return incomingValue;\n            }\n            // for other types fall back to the default merging strategy by returning nothing\n        });\n        return insightSetProperties(insight, merged);\n    }, [insight, widget.properties, settings]);\n};\n//# sourceMappingURL=useResolveDashboardInsightProperties.js.map","// (C) 2020-2023 GoodData Corporation\nimport { useEffect, useMemo, useState } from \"react\";\nimport { areObjRefsEqual, filterObjRef, isDashboardAttributeFilter, attributeElementsIsEmpty, } from \"@gooddata/sdk-model\";\nimport stringify from \"json-stable-stringify\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { queryWidgetFilters, selectFilterContextFilters, selectIsInEditMode, useDashboardQueryProcessing, useDashboardSelector, } from \"../../../model/index.js\";\nimport { safeSerializeObjRef } from \"../../../_staging/metadata/safeSerializeObjRef.js\";\n/**\n * Hook for obtaining the effective filters for a widget.\n *\n * @remarks\n * The filters returned should be used with {@link @gooddata/sdk-model#insightSetFilters} to obtain\n * insight that is ready for execution.\n *\n * @param widget - widget to get effective filters for\n * @param insight - insight to evaluate the filters for in context of the widget\n * @returns set of filters that should be used to execute the given widget\n *\n * @public\n */\nexport function useWidgetFilters(widget, insight) {\n    const [effectiveFiltersState, setEffectiveFiltersState] = useState({\n        filters: [],\n        filterQueryStatus: \"pending\",\n    });\n    const { status: nonIgnoredFiltersStatus, error: nonIgnoredFiltersError, result: nonIgnoredFilters, } = useNonIgnoredFilters(widget);\n    const { run: runFiltersQuery, error } = useDashboardQueryProcessing({\n        queryCreator: queryWidgetFilters,\n        onSuccess: (filters) => {\n            setEffectiveFiltersState({\n                filters,\n                filterQueryStatus: \"success\",\n            });\n        },\n        onBeforeRun: () => {\n            setEffectiveFiltersState({\n                filters: [],\n                filterQueryStatus: \"running\",\n            });\n        },\n        onRejected: () => {\n            setEffectiveFiltersState({\n                filters: [],\n                filterQueryStatus: \"rejected\",\n            });\n        },\n        onError: () => {\n            setEffectiveFiltersState({\n                filters: [],\n                filterQueryStatus: \"error\",\n            });\n        },\n    });\n    // only run the \"full\" filters query if any of the non-ignored filters has changed\n    useEffect(() => {\n        if ((widget === null || widget === void 0 ? void 0 : widget.ref) && nonIgnoredFiltersStatus === \"success\") {\n            runFiltersQuery(widget.ref, insight);\n        }\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        safeSerializeObjRef(widget === null || widget === void 0 ? void 0 : widget.ref),\n        fullFiltersDigest(nonIgnoredFilters),\n        insight,\n        nonIgnoredFiltersStatus,\n        widget === null || widget === void 0 ? void 0 : widget.dateDataSet,\n    ]);\n    return {\n        result: effectiveFiltersState.filters,\n        status: combineQueryProcessingStatuses(nonIgnoredFiltersStatus, effectiveFiltersState.filterQueryStatus),\n        error: nonIgnoredFiltersError !== null && nonIgnoredFiltersError !== void 0 ? nonIgnoredFiltersError : error,\n    };\n}\n/**\n * Hook that retrieves the non-ignored dashboard level filters for a widget.\n *\n * @param widget - widget to get the non-ignored filters for\n */\nfunction useNonIgnoredFilters(widget) {\n    const dashboardFilters = useDashboardSelector(selectFilterContextFilters);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const widgetIgnoresDateFilter = !(widget === null || widget === void 0 ? void 0 : widget.dateDataSet);\n    // usage of state object for filters and status makes changes more atomic and in sync\n    const [nonIgnoredFilterState, setNonIgnoredFilterState] = useState({\n        nonIgnoredFilterRefs: [],\n        nonIgnoredFilterStatus: \"pending\",\n    });\n    /**\n     * This handles cases where:\n     * - the set of filters themselves has changed (new filters added/filters removed)\n     * - widget itself has changed (potentially changing the ignore settings)\n     *\n     * Those are the only ways how the set of non-ignored filters can change.\n     */\n    const { run, error } = useDashboardQueryProcessing({\n        queryCreator: queryWidgetFilters,\n        onSuccess: (result) => {\n            setNonIgnoredFilterState((prevValue) => {\n                const getNewRefs = () => {\n                    // only set state if the values really changed\n                    // this prevents the full query from running unnecessarily\n                    if (!isEqual(prevValue.nonIgnoredFilterRefs, result)) {\n                        return result.map(filterObjRef);\n                    }\n                    return prevValue.nonIgnoredFilterRefs;\n                };\n                const newRefs = getNewRefs();\n                return {\n                    nonIgnoredFilterStatus: \"success\",\n                    nonIgnoredFilterRefs: newRefs,\n                };\n            });\n        },\n        onBeforeRun: () => {\n            setNonIgnoredFilterState({\n                nonIgnoredFilterRefs: [],\n                nonIgnoredFilterStatus: \"running\",\n            });\n        },\n        onRejected: () => {\n            setNonIgnoredFilterState({\n                nonIgnoredFilterRefs: [],\n                nonIgnoredFilterStatus: \"rejected\",\n            });\n        },\n        onError: () => {\n            setNonIgnoredFilterState({\n                nonIgnoredFilterRefs: [],\n                nonIgnoredFilterStatus: \"error\",\n            });\n        },\n    });\n    useEffect(() => {\n        if (widget === null || widget === void 0 ? void 0 : widget.ref) {\n            // force ignore the insight -> this way we get only the dashboard level filters even for InsightWidgets\n            run(widget.ref, null);\n        }\n    }, [\n        safeSerializeObjRef(widget === null || widget === void 0 ? void 0 : widget.ref),\n        stringify(widget === null || widget === void 0 ? void 0 : widget.ignoreDashboardFilters),\n        filtersDigest(dashboardFilters, widgetIgnoresDateFilter, isInEditMode),\n    ]);\n    const nonIgnoredFilters = useMemo(() => dashboardFilters.filter((filter) => {\n        if (isDashboardAttributeFilter(filter)) {\n            return nonIgnoredFilterState.nonIgnoredFilterRefs.some((validRef) => areObjRefsEqual(validRef, filter.attributeFilter.displayForm));\n        }\n        else {\n            return !widgetIgnoresDateFilter;\n        }\n    }), [dashboardFilters, nonIgnoredFilterState.nonIgnoredFilterRefs, widgetIgnoresDateFilter]);\n    return {\n        error,\n        status: nonIgnoredFilterState.nonIgnoredFilterStatus,\n        result: nonIgnoredFilters,\n    };\n}\n/**\n * Prioritize statuses of two following queries into single one\n * @param firstStatus - first query status\n * @param secondStatus  - second query status\n * @returns status of whole queue\n */\nfunction combineQueryProcessingStatuses(firstStatus, secondStatus) {\n    if (firstStatus === \"error\" || firstStatus === \"rejected\" || firstStatus === \"running\") {\n        return firstStatus;\n    }\n    return secondStatus;\n}\n/**\n * Gets a simplified serialized digest of the filters provided. This is useful for detecting if the set of filters has changed.\n *\n * @remarks\n * This digest is only concerned with the display forms/datasets, not the selected values of the filters\n * (it does, however, ignore noop attribute filters).\n * Also, the order of filters is ignored as it does not matter for executions.\n *\n * @param filters - filters to get digest for\n * @param ignoreDateFilter - whether to ignore date filters\n * @param isInEditMode - whether or not we are in edit mode\n * @returns\n */\nfunction filtersDigest(filters, ignoreDateFilter, isInEditMode) {\n    return filters\n        .filter((filter) => {\n        if (isDashboardAttributeFilter(filter)) {\n            /**\n             * Remove noop attribute filters in edit mode as they would cause a useless query when a new filter (noop by default) is added.\n             * Keep them in view mode so that switching to and from All on an ignored filter does not show loading.\n             * This is a tradeoff so that we optimize for the view mode performance and also keep the more frequent use case in edit mode\n             * (adding a new filter) loading-free as well. Switching to and from All in edit mode will still show loading, but have no way\n             * of telling whether a noop filter is noop because it was just added or because it was set that way by the user.\n             */\n            const isNoop = filter.attributeFilter.negativeSelection &&\n                attributeElementsIsEmpty(filter.attributeFilter.attributeElements);\n            return !isNoop || !isInEditMode;\n        }\n        else {\n            // if the widget ignores date filters, remove it from the digest to avoid false positives\n            // when date filter changes to or from All time (this effectively adds/removes the date filter in the filters set,\n            // but we do not care either way, so remove it altogether)\n            return !ignoreDateFilter;\n        }\n    })\n        .map((filter) => {\n        return isDashboardAttributeFilter(filter)\n            ? `df_${safeSerializeObjRef(filter.attributeFilter.displayForm)}`\n            : `ds_${safeSerializeObjRef(filter.dateFilter.dataSet)}`;\n    })\n        .sort()\n        .join(\"|\");\n}\n/**\n * Gets a serialized digest of the filters provided. This is useful for detecting if the set of filters has changed.\n *\n * @remarks\n * This digest also takes the selected values of the filters into account.\n * The order of filters is ignored as it does not matter for executions.\n *\n * @param filters - filters to get digest for\n * @returns\n */\nfunction fullFiltersDigest(filters) {\n    return filters\n        .map((filter) => stringify(filter))\n        .sort()\n        .join(\"|\");\n}\n//# sourceMappingURL=useWidgetFilters.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useCallback, useMemo } from \"react\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { useDashboardSelector, useDashboardDispatch, selectDrillTargetsByWidgetRef, addDrillTargets, selectDrillableItemsByWidgetRef, selectConfiguredAndImplicitDrillsByWidgetRef, selectIsInEditMode, selectEnableKPIDashboardDrillFromAttribute, } from \"../../../../../model/index.js\";\nimport { DataViewFacade, isSomeHeaderPredicateMatched, } from \"@gooddata/sdk-ui\";\n/**\n * @internal\n */\nexport const useDashboardInsightDrills = ({ widget, insight, onDrill: onDrillFn, }) => {\n    const dispatch = useDashboardDispatch();\n    const drillTargets = useDashboardSelector(selectDrillTargetsByWidgetRef(widget.ref));\n    const isDrillFromAttributeEnabled = useDashboardSelector(selectEnableKPIDashboardDrillFromAttribute);\n    const onPushData = useCallback((data) => {\n        const targets = sanitizeAvailableDrillTargets(data === null || data === void 0 ? void 0 : data.availableDrillTargets, isDrillFromAttributeEnabled);\n        if (targets && !isEqual(drillTargets === null || drillTargets === void 0 ? void 0 : drillTargets.availableDrillTargets, targets)) {\n            dispatch(addDrillTargets(widget.ref, targets));\n        }\n    }, [drillTargets, widget.ref, isDrillFromAttributeEnabled, dispatch]);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const rawDrillableItems = useDashboardSelector(selectDrillableItemsByWidgetRef(widget.ref));\n    const drillableItems = useMemo(() => {\n        return isInEditMode ? [] : rawDrillableItems;\n    }, [isInEditMode, rawDrillableItems]);\n    const implicitDrillDefinitions = useDashboardSelector(selectConfiguredAndImplicitDrillsByWidgetRef(widget.ref));\n    const onDrill = onDrillFn\n        ? (event) => {\n            const facade = DataViewFacade.for(event.dataView);\n            const matchingImplicitDrillDefinitions = implicitDrillDefinitions.filter((info) => {\n                var _a;\n                return (_a = event.drillContext.intersection) === null || _a === void 0 ? void 0 : _a.some((intersection) => isSomeHeaderPredicateMatched(info.predicates, intersection.header, facade));\n            });\n            const drillEvent = Object.assign(Object.assign({}, event), { widgetRef: widget.ref, drillDefinitions: matchingImplicitDrillDefinitions.map((info) => info.drillDefinition) });\n            return (typeof onDrillFn === \"function\" &&\n                onDrillFn(drillEvent, {\n                    insight,\n                    widget,\n                }));\n        }\n        : undefined;\n    return {\n        drillableItems,\n        onPushData,\n        onDrill,\n    };\n};\nconst sanitizeAvailableDrillTargets = (availableDrillTargets, isDrillFromAttributeEnabled) => {\n    // if no drill targets went in (likely the pushData was fired in a non-drill-related case)\n    // pass the undefined through, this avoids useless setting of the drill targets down the line\n    if (!availableDrillTargets) {\n        return availableDrillTargets;\n    }\n    // base on ff we remove attributes targets if is not supported\n    return isDrillFromAttributeEnabled\n        ? availableDrillTargets\n        : Object.assign(Object.assign({}, availableDrillTargets), { attributes: undefined });\n};\n//# sourceMappingURL=useDashboardInsightDrills.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { BubbleHoverTrigger, Bubble } from \"@gooddata/sdk-ui-kit\";\nconst bubbleAlignPoints = [{ align: \"bc tc\", offset: { x: 0, y: 0 } }];\nexport const CompactContentError = ({ className, headline, text }) => {\n    return (React.createElement(BubbleHoverTrigger, null,\n        React.createElement(\"div\", { className: `info-label-icon ${className}` }),\n        React.createElement(Bubble, { alignPoints: bubbleAlignPoints },\n            React.createElement(FormattedMessage, { id: headline }),\n            React.createElement(\"br\", null),\n            React.createElement(FormattedMessage, { id: text }))));\n};\n//# sourceMappingURL=CompactContentError.js.map","// (C) 2007-2021 GoodData Corporation\nimport React from \"react\";\nconst fullHeightWidthStyle = {\n    height: \"100%\",\n    width: \"100%\",\n};\nexport const ErrorContainer = ({ children }) => {\n    return (React.createElement(\"div\", { className: \"gd-visualization-content\", style: fullHeightWidthStyle },\n        React.createElement(\"div\", { className: \"info-label\" },\n            React.createElement(\"div\", { style: fullHeightWidthStyle }, children))));\n};\n//# sourceMappingURL=ErrorContainer.js.map","// (C) 2007-2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { CompactContentError } from \"./CompactContentError.js\";\nimport { ErrorContainer } from \"./ErrorContainer.js\";\nexport const ExecuteProtectedError = ({ fullContent }) => {\n    return (React.createElement(ErrorContainer, null, fullContent ? (React.createElement(\"div\", { className: \"info-label-icon gd-icon-warning\" },\n        React.createElement(Typography, { tagName: \"h2\" },\n            React.createElement(FormattedMessage, { id: \"visualization.execute_protected_report.headline\", tagName: \"span\" })),\n        React.createElement(Typography, { tagName: \"h2\" },\n            React.createElement(FormattedMessage, { id: \"visualization.execute_protected_report.text\", tagName: \"span\" })))) : (React.createElement(CompactContentError, { className: \"gd-icon-warning\", headline: \"visualization.execute_protected_report.headline\", text: \"visualization.execute_protected_report.text\" }))));\n};\n//# sourceMappingURL=ExecuteProtectedError.js.map","// (C) 2007-2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { CompactContentError } from \"./CompactContentError.js\";\nimport { ErrorContainer } from \"./ErrorContainer.js\";\nexport const DataTooLargeError = ({ fullContent }) => {\n    return (React.createElement(ErrorContainer, null, fullContent ? (React.createElement(\"div\", { className: \"info-label-icon gd-icon-rain\" },\n        React.createElement(Typography, { tagName: \"h2\" },\n            React.createElement(FormattedMessage, { id: \"visualization.dataTooLarge.headline\", tagName: \"span\" })),\n        React.createElement(Typography, { tagName: \"p\" },\n            React.createElement(FormattedMessage, { id: \"visualization.dataTooLarge.text\", tagName: \"span\" })))) : (React.createElement(CompactContentError, { className: \"gd-icon-rain\", headline: \"visualization.dataTooLarge.headline\", text: \"visualization.dataTooLarge.text\" }))));\n};\n//# sourceMappingURL=DataTooLargeError.js.map","// (C) 2007-2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography, BubbleHoverTrigger, Bubble } from \"@gooddata/sdk-ui-kit\";\nconst bubbleAlignPoints = [{ align: \"bc tc\", offset: { x: 0, y: 0 } }];\nexport const NoDataError = ({ fullContent }) => {\n    return (React.createElement(\"div\", { className: \"gd-visualization-content visualization-empty\" },\n        React.createElement(\"div\", { className: \"info-label info-label-empty\" }, fullContent ? (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"info-label-icon-empty\" }),\n            React.createElement(Typography, { tagName: \"p\" },\n                React.createElement(FormattedMessage, { id: \"visualization.empty.headline\", tagName: \"span\" })))) : (React.createElement(BubbleHoverTrigger, null,\n            React.createElement(\"div\", { className: \"info-label-icon-empty\" }),\n            React.createElement(Bubble, { alignPoints: bubbleAlignPoints },\n                React.createElement(FormattedMessage, { id: \"visualization.empty.headline\", tagName: \"span\" })))))));\n};\n//# sourceMappingURL=NoDataError.js.map","// (C) 2007-2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { CompactContentError } from \"./CompactContentError.js\";\nimport { ErrorContainer } from \"./ErrorContainer.js\";\nexport const OtherError = ({ fullContent }) => {\n    return (React.createElement(ErrorContainer, null, fullContent ? (React.createElement(\"div\", { className: \"info-label-icon gd-icon-warning\" },\n        React.createElement(Typography, { tagName: \"h2\" },\n            React.createElement(FormattedMessage, { id: \"visualization.error.headline\", tagName: \"span\" })),\n        React.createElement(Typography, { tagName: \"p\" },\n            React.createElement(FormattedMessage, { id: \"visualization.error.text\", tagName: \"span\" })))) : (React.createElement(CompactContentError, { className: \"gd-icon-warning\", headline: \"visualization.error.headline\", text: \"visualization.error.text\" }))));\n};\n//# sourceMappingURL=OtherError.js.map","// (C) 2007-2021 GoodData Corporation\nimport React from \"react\";\nimport { isDataTooLargeToCompute, isDataTooLargeToDisplay, isNoDataSdkError, isProtectedReport, } from \"@gooddata/sdk-ui\";\nimport { ExecuteProtectedError } from \"./ExecuteProtectedError.js\";\nimport { DataTooLargeError } from \"./DataTooLargeError.js\";\nimport { NoDataError } from \"./NoDataError.js\";\nimport { OtherError } from \"./OtherError.js\";\nimport { shouldRenderFullContent } from \"./sizingUtils.js\";\nexport const CustomError = ({ error, height, width, isCustomWidgetHeightEnabled, forceFullContent, }) => {\n    const fullContent = forceFullContent || (isCustomWidgetHeightEnabled ? shouldRenderFullContent(height, width) : true);\n    if (isProtectedReport(error)) {\n        return React.createElement(ExecuteProtectedError, { fullContent: fullContent });\n    }\n    else if (isDataTooLargeToDisplay(error) || isDataTooLargeToCompute(error)) {\n        return React.createElement(DataTooLargeError, { fullContent: fullContent });\n    }\n    else if (isNoDataSdkError(error)) {\n        return React.createElement(NoDataError, { fullContent: fullContent });\n    }\n    else if (error) {\n        return React.createElement(OtherError, { fullContent: fullContent });\n    }\n    return null;\n};\n//# sourceMappingURL=CustomError.js.map","// (C) 2007-2021 GoodData Corporation\nconst MINIMUM_LONGER_SIDE = 380;\nconst MINIMUM_SHORTER_SIDE = 200;\nexport const shouldRenderFullContent = (height, width) => {\n    if (!height || !width) {\n        return false;\n    }\n    const shorter = Math.min(width, height);\n    const longer = Math.max(width, height);\n    return shorter >= MINIMUM_SHORTER_SIDE && longer >= MINIMUM_LONGER_SIDE;\n};\n//# sourceMappingURL=sizingUtils.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const InsightBody = (props) => {\n    const { insight, widget } = props;\n    const { InsightBodyComponentProvider } = useDashboardComponentsContext();\n    const RendererComponent = useMemo(() => InsightBodyComponentProvider(insight, widget), [InsightBodyComponentProvider, insight, widget]);\n    return React.createElement(RendererComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=InsightBody.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { insightProperties, insightSetFilters, insightVisualizationUrl, objRefToString, widgetRef, } from \"@gooddata/sdk-model\";\nimport { useBackendStrict, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport stringify from \"json-stable-stringify\";\nimport cx from \"classnames\";\nimport { useDashboardComponentsContext } from \"../../../../dashboardContexts/index.js\";\nimport { selectColorPalette, selectDrillableItems, selectIsExport, selectLocale, selectMapboxToken, selectSeparators, selectSettings, useDashboardAsyncRender, useDashboardSelector, useWidgetExecutionsHandler, selectIsInEditMode, } from \"../../../../../model/index.js\";\nimport { useResolveDashboardInsightProperties } from \"../useResolveDashboardInsightProperties.js\";\nimport { useWidgetFilters } from \"../../../common/index.js\";\nimport { useDashboardInsightDrills } from \"./useDashboardInsightDrills.js\";\nimport { CustomError } from \"../CustomError/CustomError.js\";\nimport { DASHBOARD_LAYOUT_RESPONSIVE_SMALL_WIDTH } from \"../../../../constants/index.js\";\nimport { IntlWrapper } from \"../../../../localization/index.js\";\nimport { InsightBody } from \"../../InsightBody.js\";\nimport { useHandlePropertiesPushData } from \"./useHandlePropertiesPushData.js\";\nconst selectCommonDashboardInsightProps = createSelector([selectLocale, selectSettings, selectColorPalette], (locale, settings, colorPalette) => ({\n    locale,\n    settings,\n    colorPalette,\n}));\nconst selectChartConfig = createSelector([selectMapboxToken, selectSeparators, selectDrillableItems, selectIsExport, selectIsInEditMode], (mapboxToken, separators, drillableItems, isExportMode, isInEditMode) => ({\n    mapboxToken,\n    separators,\n    forceDisableDrillOnAxes: !(drillableItems === null || drillableItems === void 0 ? void 0 : drillableItems.length),\n    isExportMode,\n    isInEditMode,\n}));\n/**\n * @internal\n */\nexport const DashboardInsight = (props) => {\n    var _a;\n    const { insight, widget, clientHeight, clientWidth, backend, workspace, onError, onDrill: onDrillFn, onLoadingChanged, onExportReady, ErrorComponent: CustomErrorComponent, LoadingComponent: CustomLoadingComponent, } = props;\n    const ref = widgetRef(widget);\n    // Custom components\n    const { ErrorComponent, LoadingComponent } = useDashboardComponentsContext({\n        ErrorComponent: CustomErrorComponent,\n        LoadingComponent: CustomLoadingComponent,\n    });\n    // Context\n    const effectiveBackend = useBackendStrict(backend);\n    const effectiveWorkspace = useWorkspaceStrict(workspace);\n    const executionsHandler = useWidgetExecutionsHandler(ref);\n    // State props\n    const { locale, settings, colorPalette } = useDashboardSelector(selectCommonDashboardInsightProps);\n    const { enableKDWidgetCustomHeight } = useDashboardSelector(selectSettings);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const chartConfig = useDashboardSelector(selectChartConfig);\n    // Loading and rendering\n    const [isVisualizationLoading, setIsVisualizationLoading] = useState(false);\n    const [visualizationError, setVisualizationError] = useState();\n    const { onRequestAsyncRender, onResolveAsyncRender } = useDashboardAsyncRender(objRefToString(ref));\n    const handleLoadingChanged = useCallback(({ isLoading }) => {\n        if (isLoading) {\n            onRequestAsyncRender();\n            // if we started loading, any previous vis error is obsolete at this point, get rid of it\n            setVisualizationError(undefined);\n        }\n        else {\n            onResolveAsyncRender();\n        }\n        executionsHandler.onLoadingChanged({ isLoading });\n        setIsVisualizationLoading(isLoading);\n        onLoadingChanged === null || onLoadingChanged === void 0 ? void 0 : onLoadingChanged({ isLoading });\n    }, [onLoadingChanged, executionsHandler.onLoadingChanged]);\n    // Filtering\n    const { result: filtersForInsight, status: filtersStatus, error: filtersError, } = useWidgetFilters(widget, insight);\n    const insightWithAddedFilters = useMemo(() => insightSetFilters(insight, filtersForInsight), [\n        insight,\n        /**\n         * We use stringified value to avoid setting equal filters. This prevents cascading cache invalidation\n         * and expensive re-renders down the line. The stringification is worth it as the filters are usually\n         * pretty small thus saving more time than it is taking.\n         */\n        stringify(filtersForInsight),\n    ]);\n    const insightWithAddedWidgetProperties = useResolveDashboardInsightProperties({\n        insight: insightWithAddedFilters !== null && insightWithAddedFilters !== void 0 ? insightWithAddedFilters : insight,\n        widget,\n    });\n    const { drillableItems, onDrill, onPushData } = useDashboardInsightDrills({\n        widget,\n        insight,\n        onDrill: onDrillFn,\n    });\n    const handlePropertiesPushData = useHandlePropertiesPushData(widget, insight);\n    const handlePushData = useCallback((data) => {\n        onPushData(data);\n        executionsHandler.onPushData(data);\n        handlePropertiesPushData(data);\n    }, [onPushData, executionsHandler.onPushData, handlePropertiesPushData]);\n    const isPositionRelative = insight &&\n        insightVisualizationUrl(insight).includes(\"headline\") &&\n        clientWidth &&\n        clientWidth < DASHBOARD_LAYOUT_RESPONSIVE_SMALL_WIDTH &&\n        !enableKDWidgetCustomHeight;\n    // Error handling\n    const handleError = useCallback((error) => {\n        setVisualizationError(error);\n        onError === null || onError === void 0 ? void 0 : onError(error);\n        executionsHandler.onError(error);\n    }, [onError, executionsHandler.onError]);\n    const effectiveError = filtersError !== null && filtersError !== void 0 ? filtersError : visualizationError;\n    // CSS\n    const insightPositionStyle = useMemo(() => {\n        return {\n            width: \"100%\",\n            height: \"100%\",\n            position: \n            // Headline violates the layout contract.\n            // It should fit parent height and adapt to it as other visualizations.\n            // Now, it works differently for the Headline - parent container adapts to Headline size.\n            isPositionRelative ? \"relative\" : \"absolute\",\n        };\n    }, [isPositionRelative]);\n    const insightWrapperStyle = useMemo(() => {\n        return isVisualizationLoading || effectiveError ? { height: 0 } : undefined;\n    }, [isVisualizationLoading, effectiveError]);\n    const visualizationProperties = insightProperties(insightWithAddedWidgetProperties);\n    const isZoomable = (_a = visualizationProperties === null || visualizationProperties === void 0 ? void 0 : visualizationProperties.controls) === null || _a === void 0 ? void 0 : _a.zoomInsight;\n    return (React.createElement(\"div\", { className: cx(\"visualization-content\", { \"in-edit-mode\": isInEditMode }) },\n        React.createElement(\"div\", { className: cx(\"gd-visualization-content\", { zoomable: isZoomable }), style: insightPositionStyle },\n            React.createElement(IntlWrapper, { locale: locale },\n                filtersStatus === \"running\" || isVisualizationLoading ? React.createElement(LoadingComponent, null) : null,\n                effectiveError ? (React.createElement(CustomError, { error: effectiveError, isCustomWidgetHeightEnabled: !!(settings === null || settings === void 0 ? void 0 : settings.enableKDWidgetCustomHeight), height: clientHeight, width: clientWidth })) : null,\n                filtersStatus === \"success\" ? (React.createElement(\"div\", { className: \"insight-view-visualization\", style: insightWrapperStyle },\n                    React.createElement(InsightBody, { widget: widget, insight: insightWithAddedWidgetProperties, backend: effectiveBackend, workspace: effectiveWorkspace, drillableItems: drillableItems, onDrill: onDrill, config: chartConfig, onLoadingChanged: handleLoadingChanged, locale: locale, settings: settings, colorPalette: colorPalette, onError: handleError, pushData: handlePushData, ErrorComponent: ErrorComponent, LoadingComponent: LoadingComponent, onExportReady: onExportReady }))) : null))));\n};\n//# sourceMappingURL=DashboardInsight.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { insightVisualizationType, widgetRef } from \"@gooddata/sdk-model\";\nimport { useDashboardDispatch, useDashboardSelector, selectIsInEditMode, changeInsightWidgetVisProperties, } from \"../../../../../model/index.js\";\nfunction isSupportedWidgetProperties(properties) {\n    var _a;\n    // currently we only support the columnWidths for pivot tables\n    // this should be ideally driven by the PlugVis API, not hardcoded here\n    return !!((_a = properties === null || properties === void 0 ? void 0 : properties.controls) === null || _a === void 0 ? void 0 : _a.columnWidths);\n}\nexport function useHandlePropertiesPushData(widget, insight) {\n    const ref = widgetRef(widget);\n    const dispatch = useDashboardDispatch();\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const visType = insightVisualizationType(insight);\n    return useCallback((data) => {\n        // propagate properties from push data only for pivot tables (this is how gdc-dashboard does it)\n        if (isInEditMode && isSupportedWidgetProperties(data.properties) && visType === \"table\") {\n            dispatch(changeInsightWidgetVisProperties(ref, data.properties));\n        }\n    }, [dispatch, ref, visType, isInEditMode]);\n}\n//# sourceMappingURL=useHandlePropertiesPushData.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { WithDrillSelect } from \"../../../../drill/index.js\";\nimport { DashboardInsight } from \"./DashboardInsight.js\";\n/**\n * @internal\n */\nexport const DashboardInsightWithDrillSelect = (props) => {\n    const { widget, onDrillDown, onDrillToInsight, onDrillToAttributeUrl, onDrillToCustomUrl, onDrillToDashboard, } = props;\n    return (React.createElement(WithDrillSelect, { widgetRef: widget.ref, insight: props.insight, onDrillDownSuccess: onDrillDown, onDrillToInsightSuccess: onDrillToInsight, onDrillToAttributeUrlSuccess: onDrillToAttributeUrl, onDrillToCustomUrlSuccess: onDrillToCustomUrl, onDrillToDashboardSuccess: onDrillToDashboard }, ({ onDrill }) => {\n        return React.createElement(DashboardInsight, Object.assign({}, props, { onDrill: onDrill }));\n    }));\n};\n//# sourceMappingURL=DashboardInsightWithDrillSelect.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { selectEnableCompanyLogoInEmbeddedUI, selectIsEmbedded, selectPlatformEdition, selectCanManageWorkspace, useDashboardSelector, useDashboardUserInteraction, } from \"../../../../../model/index.js\";\nconst getHref = (canManageWorkspace) => {\n    const href = canManageWorkspace\n        ? \"https://help.gooddata.com/pages/viewpage.action?pageId=86793763&\"\n        : \"https://gooddata.com/?\";\n    const utmParameters = \"utm_medium=platform&utm_source=product&utm_content=logo\";\n    return href + utmParameters;\n};\nconst isPoweredByGDLogoPresent = createSelector([selectIsEmbedded, selectPlatformEdition, selectEnableCompanyLogoInEmbeddedUI], (isEmbedded, platformEdition, enableCompanyLogoInEmbeddedUI) => isEmbedded && platformEdition === \"free\" && enableCompanyLogoInEmbeddedUI);\nexport const PoweredByGDLogo = ({ isSmall }) => {\n    const canManageWorkspace = useDashboardSelector(selectCanManageWorkspace);\n    const isPresent = useDashboardSelector(isPoweredByGDLogoPresent);\n    const userInteraction = useDashboardUserInteraction();\n    return (React.createElement(React.Fragment, null, isPresent ? (React.createElement(\"div\", { className: cx(\"gd-powered-by-logo-wrapper\", {\n            \"gd-powered-by-logo-wrapper-small\": isSmall,\n            \"gd-powered-by-logo-wrapper-large\": !isSmall,\n        }), onClick: userInteraction.poweredByGDLogoClicked },\n        React.createElement(\"a\", { className: cx(\"gd-powered-by-logo-img\", {\n                \"gd-powered-by-logo-img-small\": isSmall,\n                \"gd-powered-by-logo-img-large\": !isSmall,\n            }), href: getHref(canManageWorkspace), target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"Powered by GoodData\" }))) : null));\n};\n//# sourceMappingURL=PoweredByGDLogo.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Overlay, ItemsWrapper, Item } from \"@gooddata/sdk-ui-kit\";\nconst overlayAlignPoints = [\n    {\n        align: \"tc bc\",\n        offset: {\n            x: -10,\n            y: -5,\n        },\n    },\n];\nconst DrillModalExportOptions = ({ showDropdown, toggleShowDropdown, exportXLSXEnabled, onExportXLSX, exportCSVEnabled, onExportCSV, }) => showDropdown ? (React.createElement(Overlay, { key: \"DrillModalOptionsMenu\", alignTo: \".export-drilled-insight\", alignPoints: overlayAlignPoints, className: \"gd-header-menu-overlay s-drill-modal-export-options\", closeOnOutsideClick: true, onClose: toggleShowDropdown },\n    React.createElement(ItemsWrapper, { smallItemsSpacing: true },\n        exportXLSXEnabled ? (React.createElement(Item, { onClick: onExportXLSX, className: \"options-menu-export-xlsx s-export-drilled-insight-xlsx\" },\n            React.createElement(FormattedMessage, { id: \"widget.options.menu.exportToXLSX\" }))) : null,\n        exportCSVEnabled ? (React.createElement(Item, { onClick: onExportCSV, className: \"options-menu-export-csv s-export-drilled-insight-csv\" },\n            React.createElement(FormattedMessage, { id: \"widget.options.menu.exportToCSV\" }))) : null))) : null;\nexport default DrillModalExportOptions;\n//# sourceMappingURL=DrillModalExportOptions.js.map","// (C) 2021 GoodData Corporation\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { BubbleHoverTrigger, Bubble } from \"@gooddata/sdk-ui-kit\";\nimport DrillModalExportOptions from \"./DrillModalExportOptions.js\";\nconst bubbleAlignPoints = [{ align: \"tc bc\" }];\nexport const DrillModalFooter = ({ exportAvailable, exportXLSXEnabled, onExportXLSX, exportCSVEnabled, onExportCSV, isLoading, }) => {\n    const [showDropdown, setShowDropdown] = useState(false);\n    const toggleShowDropdown = useCallback(() => setShowDropdown((oldValue) => !oldValue), []);\n    const handleOnExportXLSX = useCallback(() => {\n        onExportXLSX();\n        setShowDropdown(false);\n    }, [onExportXLSX]);\n    const handleOnExportCSV = useCallback(() => {\n        onExportCSV();\n        setShowDropdown(false);\n    }, [onExportCSV]);\n    const exportDisabled = !exportAvailable || (!exportXLSXEnabled && !exportCSVEnabled);\n    const toggleButton = useMemo(() => (React.createElement(\"button\", { onClick: toggleShowDropdown, className: cx(\"gd-button-link-dimmed gd-button gd-icon-download export-menu-toggle-button\", {\n            disabled: exportDisabled,\n        }), type: \"button\" },\n        React.createElement(\"span\", { className: \"gd-button-text\" },\n            React.createElement(FormattedMessage, { id: \"dialogs.export.submit\" })))), [exportDisabled, toggleShowDropdown]);\n    return (React.createElement(\"div\", { className: cx(\"s-export-drilled-insight export-drilled-insight\", {\n            \"is-disabled\": exportDisabled,\n        }) }, exportDisabled && !isLoading ? (React.createElement(BubbleHoverTrigger, null,\n        toggleButton,\n        React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: bubbleAlignPoints },\n            React.createElement(FormattedMessage, { id: \"export_unsupported.disabled\" })))) : (React.createElement(React.Fragment, null,\n        toggleButton,\n        React.createElement(DrillModalExportOptions, { showDropdown: showDropdown, toggleShowDropdown: toggleShowDropdown, exportXLSXEnabled: exportXLSXEnabled, exportCSVEnabled: exportCSVEnabled, onExportXLSX: handleOnExportXLSX, onExportCSV: handleOnExportCSV })))));\n};\n//# sourceMappingURL=DrillModalFooter.js.map","// (C) 2021 GoodData Corporation\nimport compact from \"lodash/compact.js\";\nexport function getTitleWithBreadcrumbs(insightTitle, breadcrumbs) {\n    const separator = \"\\u203A\";\n    const paddedSeparator = ` ${separator} `;\n    return compact([insightTitle, ...breadcrumbs]).join(paddedSeparator);\n}\n//# sourceMappingURL=getTitleWithBreadcrumbs.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Button, Bubble, BubbleHoverTrigger, ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { selectCanExportTabular, selectSettings, useDashboardSelector } from \"../../../../../model/index.js\";\nimport { PoweredByGDLogo } from \"./PoweredByGDLogo.js\";\nimport { DrillModalFooter } from \"./DrillModalFooter.js\";\nimport { getTitleWithBreadcrumbs } from \"./getTitleWithBreadcrumbs.js\";\nconst tooltipAlignPoints = [{ align: \"cc tc\", offset: { x: -20, y: 10 } }];\nconst bubbleAlignPoints = [{ align: \"bc tc\", offset: { x: -5, y: -5 } }];\nexport const DrillDialog = ({ insightTitle, breadcrumbs, onCloseDialog, onBackButtonClick, isBackButtonVisible, children, exportAvailable, exportXLSXEnabled, exportCSVEnabled, onExportCSV, onExportXLSX, isLoading, }) => {\n    const settings = useDashboardSelector(selectSettings);\n    const canExport = useDashboardSelector(selectCanExportTabular);\n    const shouldShowDrilledInsightExport = (settings === null || settings === void 0 ? void 0 : settings.enableDrilledInsightExport) && canExport;\n    const titleWithBreadcrumbs = getTitleWithBreadcrumbs(insightTitle, breadcrumbs);\n    return (React.createElement(\"div\", { className: \"gd-dialog gd-drill-modal-dialog s-drill-modal-dialog\" },\n        React.createElement(\"div\", { className: \"gd-dialog-header gd-dialog-header-with-border gd-drill-modal-dialog-header\" },\n            isBackButtonVisible ? (React.createElement(BubbleHoverTrigger, null,\n                React.createElement(Button, { className: \"gd-button-primary gd-button-icon-only gd-icon-navigateleft s-drill-reset-button gd-drill-reset-button\", onClick: onBackButtonClick }),\n                React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: bubbleAlignPoints },\n                    React.createElement(FormattedMessage, { id: \"drillModal.backToTop\", tagName: \"span\" })))) : null,\n            React.createElement(\"div\", { className: \"gd-drill-title s-drill-title\" },\n                React.createElement(ShortenedText, { tagName: \"div\", tooltipAlignPoints: tooltipAlignPoints, tooltipVisibleOnMouseOver: false }, titleWithBreadcrumbs)),\n            React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-icon-cross gd-drill-close-button s-drill-close-button\", onClick: onCloseDialog })),\n        React.createElement(\"div\", { className: \"gd-drill-modal-dialog-content visualization\" },\n            React.createElement(\"div\", { className: \"gd-drill-modal-dialog-content-base\" }, children)),\n        shouldShowDrilledInsightExport ? (React.createElement(\"div\", { className: \"gd-drill-modal-dialog-footer gd-drill-modal-dialog-footer-with-border s-drill-modal-dialog-footer\" },\n            React.createElement(DrillModalFooter, { exportAvailable: exportAvailable, exportXLSXEnabled: exportXLSXEnabled, exportCSVEnabled: exportCSVEnabled, onExportXLSX: onExportXLSX, onExportCSV: onExportCSV, isLoading: isLoading }))) : null,\n        React.createElement(PoweredByGDLogo, { isSmall: true })));\n};\n//# sourceMappingURL=DrillDialog.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { insightSetFilters, insightVisualizationUrl } from \"@gooddata/sdk-model\";\nimport { useBackendStrict, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport { useDashboardSelector, selectColorPalette, selectLocale, selectMapboxToken, selectSeparators, selectSettings, selectIsExport, selectDrillableItems, } from \"../../../../../model/index.js\";\nimport { useWidgetFilters } from \"../../../common/index.js\";\nimport { useResolveDashboardInsightProperties } from \"../useResolveDashboardInsightProperties.js\";\nimport { useDrillDialogInsightDrills } from \"./useDrillDialogInsightDrills.js\";\nimport { CustomError } from \"../CustomError/CustomError.js\";\nimport { IntlWrapper } from \"../../../../localization/index.js\";\nimport { InsightBody } from \"../../InsightBody.js\";\nconst insightStyle = { width: \"100%\", height: \"100%\", position: \"relative\", flex: \"1 1 auto\" };\nconst selectCommonDashboardInsightProps = createSelector([selectLocale, selectSettings, selectColorPalette], (locale, settings, colorPalette) => ({\n    locale,\n    settings,\n    colorPalette,\n}));\nconst selectChartConfig = createSelector([selectMapboxToken, selectSeparators, selectDrillableItems, selectIsExport], (mapboxToken, separators, drillableItems, isExport) => ({\n    mapboxToken,\n    separators,\n    forceDisableDrillOnAxes: !drillableItems.length,\n    isExportMode: isExport,\n}));\n/**\n * @internal\n */\nexport const DrillDialogInsight = (props) => {\n    const { insight, widget, backend, workspace, onError, onDrill: onDrillFn, onExportReady, onLoadingChanged, pushData, ErrorComponent, LoadingComponent, } = props;\n    // Context\n    const effectiveBackend = useBackendStrict(backend);\n    const effectiveWorkspace = useWorkspaceStrict(workspace);\n    // State props\n    const { locale, settings, colorPalette } = useDashboardSelector(selectCommonDashboardInsightProps);\n    const chartConfig = useDashboardSelector(selectChartConfig);\n    // Loading and rendering\n    const [isVisualizationLoading, setIsVisualizationLoading] = useState(false);\n    const [visualizationError, setVisualizationError] = useState();\n    const handleLoadingChanged = useCallback(({ isLoading }) => {\n        setIsVisualizationLoading(isLoading);\n        onLoadingChanged === null || onLoadingChanged === void 0 ? void 0 : onLoadingChanged({ isLoading });\n    }, []);\n    // Filtering\n    const { result: filtersForInsight, status: filtersStatus, error: filtersError, } = useWidgetFilters(widget, insight);\n    const insightWithAddedFilters = useMemo(() => insightSetFilters(insight, filtersForInsight), [insight, filtersForInsight]);\n    const insightWithAddedWidgetProperties = useResolveDashboardInsightProperties({\n        insight: insightWithAddedFilters !== null && insightWithAddedFilters !== void 0 ? insightWithAddedFilters : insight,\n        widget,\n    });\n    const { drillableItems, onDrill, onPushData } = useDrillDialogInsightDrills({\n        widget,\n        insight: insightWithAddedFilters !== null && insightWithAddedFilters !== void 0 ? insightWithAddedFilters : insight,\n        onDrill: onDrillFn,\n    });\n    const handlePushData = useCallback((data) => {\n        onPushData(data);\n        pushData === null || pushData === void 0 ? void 0 : pushData(data);\n    }, [onPushData, pushData]);\n    // CSS\n    const insightPositionStyle = useMemo(() => {\n        return {\n            width: \"100%\",\n            height: \"100%\",\n            position: \n            // Headline violates the layout contract.\n            // It should fit parent height and adapt to it as other visualizations.\n            // Now, it works differently for the Headline - parent container adapts to Headline size.\n            insight && insightVisualizationUrl(insight).includes(\"headline\") ? \"relative\" : \"absolute\",\n        };\n    }, [insight]);\n    // Error handling\n    const handleError = useCallback((error) => {\n        setVisualizationError(error);\n        onError === null || onError === void 0 ? void 0 : onError(error);\n    }, [onError]);\n    const effectiveError = filtersError !== null && filtersError !== void 0 ? filtersError : visualizationError;\n    const insightWrapperStyle = useMemo(() => {\n        return isVisualizationLoading || effectiveError ? { height: 0 } : undefined;\n    }, [isVisualizationLoading, effectiveError]);\n    return (React.createElement(\"div\", { style: insightStyle },\n        React.createElement(\"div\", { style: insightPositionStyle },\n            React.createElement(IntlWrapper, { locale: locale },\n                filtersStatus === \"running\" || isVisualizationLoading ? React.createElement(LoadingComponent, null) : null,\n                effectiveError ? (React.createElement(CustomError, { error: effectiveError, \n                    // drill dialog does not measure its size but is always large enough to fit the full content\n                    forceFullContent: true })) : null,\n                filtersStatus === \"success\" ? (React.createElement(\"div\", { className: \"insight-view-visualization\", style: insightWrapperStyle },\n                    React.createElement(InsightBody, { widget: widget, insight: insightWithAddedWidgetProperties, backend: effectiveBackend, workspace: effectiveWorkspace, drillableItems: drillableItems, onDrill: onDrill, config: chartConfig, onLoadingChanged: handleLoadingChanged, locale: locale, settings: settings, colorPalette: colorPalette, onError: handleError, onExportReady: onExportReady, pushData: handlePushData, ErrorComponent: ErrorComponent, LoadingComponent: LoadingComponent }))) : null))));\n};\n//# sourceMappingURL=DrillDialogInsight.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { useDashboardSelector, selectImplicitDrillsByAvailableDrillTargets, selectDrillableItemsByAvailableDrillTargets, } from \"../../../../../model/index.js\";\nimport { DataViewFacade, isSomeHeaderPredicateMatched, } from \"@gooddata/sdk-ui\";\n/**\n * @internal\n */\nexport const useDrillDialogInsightDrills = ({ widget, insight, onDrill: onDrillFn, }) => {\n    // Drilling\n    const [drillTargets, setDrillTargets] = useState();\n    const onPushData = useCallback((data) => {\n        if ((data === null || data === void 0 ? void 0 : data.availableDrillTargets) && !isEqual(drillTargets, data.availableDrillTargets)) {\n            setDrillTargets(data.availableDrillTargets);\n        }\n    }, [drillTargets]);\n    const implicitDrillDefinitions = useDashboardSelector(selectImplicitDrillsByAvailableDrillTargets(drillTargets));\n    const drillableItems = useDashboardSelector(selectDrillableItemsByAvailableDrillTargets(drillTargets));\n    const onDrill = onDrillFn\n        ? (event) => {\n            const facade = DataViewFacade.for(event.dataView);\n            const matchingImplicitDrillDefinitions = implicitDrillDefinitions.filter((info) => {\n                var _a;\n                return (_a = event.drillContext.intersection) === null || _a === void 0 ? void 0 : _a.some((intersection) => isSomeHeaderPredicateMatched(info.predicates, intersection.header, facade));\n            });\n            const drillEvent = Object.assign(Object.assign({}, event), { widgetRef: widget.ref, drillDefinitions: matchingImplicitDrillDefinitions.map((info) => info.drillDefinition) });\n            return (typeof onDrillFn === \"function\" &&\n                onDrillFn(drillEvent, {\n                    insight,\n                    widget,\n                }));\n        }\n        : undefined;\n    return {\n        drillableItems,\n        onPushData,\n        onDrill,\n    };\n};\n//# sourceMappingURL=useDrillDialogInsightDrills.js.map","// (C) 2021 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { LoadingSpinner } from \"@gooddata/sdk-ui-kit\";\nexport const ThemedLoadingEqualizer = () => {\n    var _a, _b;\n    const theme = useTheme();\n    return (React.createElement(\"div\", { className: \"gd-loading-equalizer-wrap\" },\n        React.createElement(\"div\", { className: \"gd-loading-equalizer gd-loading-equalizer-fade\" },\n            React.createElement(LoadingSpinner, { className: \"large gd-loading-equalizer-spinner\", color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c9 }),\n            React.createElement(FormattedMessage, { id: \"loading\" }))));\n};\n//# sourceMappingURL=ThemedLoadingEqualizer.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useCallback, useState } from \"react\";\nimport { idRef, insightTitle } from \"@gooddata/sdk-model\";\nimport { FullScreenOverlay, Overlay, OverlayController, OverlayControllerProvider, useMediaQuery, } from \"@gooddata/sdk-ui-kit\";\nimport { DOWNLOADER_ID } from \"../../../../../_staging/fileUtils/downloadFile.js\";\nimport { useInsightExport } from \"../../../common/index.js\";\nimport { WithDrillSelect } from \"../../../../drill/index.js\";\nimport { IntlWrapper } from \"../../../../localization/index.js\";\nimport { DrillDialog } from \"./DrillDialog.js\";\nimport { DrillDialogInsight } from \"./DrillDialogInsight.js\";\nimport { useWidgetExecutionsHandler } from \"../../../../../model/index.js\";\nimport { getTitleWithBreadcrumbs } from \"./getTitleWithBreadcrumbs.js\";\nimport { useDashboardComponentsContext } from \"../../../../dashboardContexts/index.js\";\nimport { ThemedLoadingEqualizer } from \"../../../../presentationComponents/index.js\";\nimport { DASHBOARD_HEADER_OVERLAYS_Z_INDEX } from \"../../../../constants/index.js\";\n// Header z-index start at  6000 so we need force all overlays z-indexes start at 6000 to be above header\nconst overlayController = OverlayController.getInstance(DASHBOARD_HEADER_OVERLAYS_Z_INDEX);\nconst overlayIgnoredClasses = [\n    \".s-sort-direction-arrow\",\n    \".gd-export-dialog\",\n    \".options-menu-export-xlsx\",\n    \".options-menu-export-csv\",\n    `#${DOWNLOADER_ID}`,\n];\nconst DRILL_MODAL_EXECUTION_PSEUDO_REF = idRef(\"@@GDC_DRILL_MODAL\");\nexport const InsightDrillDialog = (props) => {\n    const { widget, locale, breadcrumbs, insight, onClose, onBackButtonClick, onDrillDown } = props;\n    const isMobileDevice = useMediaQuery(\"mobileDevice\");\n    const [isLoading, setIsLoading] = useState(false);\n    const executionsHandler = useWidgetExecutionsHandler(DRILL_MODAL_EXECUTION_PSEUDO_REF);\n    const { ErrorComponent, LoadingComponent } = useDashboardComponentsContext({\n        /**\n         * There is a need to use Loading spinner instead of \"Running three dots\" loader while drill is loading.\n         * If no custom loading component is provided, LoadingComponent defaults to Loading spinner.\n         */\n        LoadingComponent: ThemedLoadingEqualizer,\n    });\n    const handleLoadingChanged = useCallback(({ isLoading }) => {\n        setIsLoading(isLoading);\n        executionsHandler.onLoadingChanged({ isLoading });\n    }, []);\n    const baseInsightTitle = insightTitle(insight);\n    const { exportCSVEnabled, exportXLSXEnabled, onExportCSV, onExportXLSX } = useInsightExport({\n        title: getTitleWithBreadcrumbs(baseInsightTitle, breadcrumbs),\n        widgetRef: DRILL_MODAL_EXECUTION_PSEUDO_REF,\n        insight,\n    });\n    const OverlayComponent = isMobileDevice ? FullScreenOverlay : Overlay;\n    return (React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n        React.createElement(OverlayComponent, { className: \"gd-drill-modal-overlay\", isModal: true, closeOnEscape: true, closeOnOutsideClick: true, ignoreClicksOnByClass: overlayIgnoredClasses, onClose: onClose, positionType: \"fixed\" },\n            React.createElement(IntlWrapper, { locale: locale },\n                React.createElement(DrillDialog, { insightTitle: baseInsightTitle, isBackButtonVisible: breadcrumbs.length > 1, onBackButtonClick: onBackButtonClick, onCloseDialog: onClose, breadcrumbs: breadcrumbs, exportAvailable: exportXLSXEnabled || exportCSVEnabled, exportXLSXEnabled: exportXLSXEnabled, exportCSVEnabled: exportCSVEnabled, onExportXLSX: onExportXLSX, onExportCSV: onExportCSV, isLoading: isLoading },\n                    React.createElement(WithDrillSelect, { widgetRef: widget.ref, insight: props.insight, onDrillDownSuccess: onDrillDown }, ({ onDrill }) => {\n                        return (React.createElement(DrillDialogInsight, Object.assign({}, props, { onDrill: onDrill, onLoadingChanged: handleLoadingChanged, onError: executionsHandler.onError, pushData: executionsHandler.onPushData, ErrorComponent: ErrorComponent, LoadingComponent: LoadingComponent })));\n                    }))))));\n};\n//# sourceMappingURL=InsightDrillDialog.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport last from \"lodash/last.js\";\nimport { selectLocale, useDashboardSelector } from \"../../../../model/index.js\";\nimport { getDrillDownAttributeTitle, } from \"../../../drill/index.js\";\nimport { isDrillDownDefinition } from \"../../../../types.js\";\nimport { getDrillOriginLocalIdentifier } from \"../../../../_staging/drills/drillingUtils.js\";\nimport { DashboardInsightWithDrillSelect } from \"./Insight/DashboardInsightWithDrillSelect.js\";\nimport { InsightDrillDialog } from \"./InsightDrillDialog/InsightDrillDialog.js\";\n/**\n * @internal\n */\nexport const DashboardInsightWithDrillDialog = (props) => {\n    const [drillSteps, setDrillSteps] = useState([]);\n    const activeDrillStep = last(drillSteps);\n    const insight = activeDrillStep === null || activeDrillStep === void 0 ? void 0 : activeDrillStep.insight;\n    const widget = props.widget;\n    const breadcrumbs = useMemo(() => drillSteps\n        .filter((s) => isDrillDownDefinition(s.drillDefinition))\n        .map((s) => {\n        var _a;\n        return (_a = getDrillDownAttributeTitle(getDrillOriginLocalIdentifier(s.drillDefinition), s.drillEvent)) !== null && _a !== void 0 ? _a : \"NULL\";\n    }), [drillSteps]);\n    const locale = useDashboardSelector(selectLocale);\n    const setNextDrillStep = useCallback((drillStep) => {\n        setDrillSteps((s) => [...s, drillStep]);\n    }, []);\n    const goBack = useCallback(() => setDrillSteps(([firstDrill]) => [firstDrill]), []);\n    const onClose = useCallback(() => setDrillSteps([]), []);\n    const onDrillDown = useCallback((evt) => setNextDrillStep(evt.payload), [setNextDrillStep]);\n    const onDrillToInsight = useCallback((evt) => setNextDrillStep(evt.payload), [setNextDrillStep]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DashboardInsightWithDrillSelect, Object.assign({}, props, { onDrillDown: onDrillDown, onDrillToInsight: onDrillToInsight })),\n        activeDrillStep ? (React.createElement(InsightDrillDialog, { locale: locale, breadcrumbs: breadcrumbs, widget: widget, insight: insight, onDrillDown: onDrillDown, onBackButtonClick: goBack, onClose: onClose })) : null));\n};\n//# sourceMappingURL=DashboardInsightWithDrillDialog.js.map","// (C) 2022 GoodData Corporation\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\nimport { ViewModeDashboardInsight } from \"./ViewModeDashboardInsight/index.js\";\nimport { EditModeDashboardInsight } from \"./EditModeDashboardInsight/index.js\";\n/**\n * Default implementation of the Dashboard Insight widget.\n *\n * @public\n */\nexport const DefaultDashboardInsight = renderModeAware({\n    view: ViewModeDashboardInsight,\n    edit: EditModeDashboardInsight,\n});\n//# sourceMappingURL=DefaultDashboardInsight.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { DashboardInsightWithDrillDialog } from \"./DashboardInsightWithDrillDialog.js\";\n/**\n * @internal\n */\nexport const ViewModeDashboardInsight = (props) => {\n    return React.createElement(DashboardInsightWithDrillDialog, Object.assign({}, props));\n};\n//# sourceMappingURL=ViewModeDashboardInsight.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { DashboardInsight } from \"../ViewModeDashboardInsight/Insight/DashboardInsight.js\";\n/**\n * @internal\n */\nexport const EditModeDashboardInsight = (props) => {\n    return React.createElement(DashboardInsight, Object.assign({}, props));\n};\n//# sourceMappingURL=EditModeDashboardInsight.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { InsightRenderer } from \"@gooddata/sdk-ui-ext\";\n/**\n * Default implementation of the InsightBody.\n *\n * @alpha\n */\nexport const DefaultInsightBody = (props) => {\n    return React.createElement(InsightRenderer, Object.assign({}, props));\n};\n//# sourceMappingURL=DefaultInsightBody.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { objRefToString, widgetRef } from \"@gooddata/sdk-model\";\nexport const DashboardInsightMenuButton = (props) => {\n    const { isOpen, items, widget, onClick } = props;\n    const onMenuButtonClick = useCallback(() => {\n        onClick();\n    }, [onClick]);\n    if (!items.length) {\n        return null;\n    }\n    const widgetRefAsString = objRefToString(widgetRef(widget));\n    const optionsIconClasses = cx(\"dash-item-action-options\", \"dash-item-action-widget-options\", \"s-dash-item-action-widget-options\", `dash-item-action-widget-options-${stringUtils.simplifyText(widgetRefAsString)}`, `s-dash-item-action-widget-options-${stringUtils.simplifyText(widgetRefAsString)}`, {\n        \"dash-item-action-widget-options-active\": isOpen,\n    });\n    return (React.createElement(\"div\", { className: \"dash-item-action-placeholder s-dash-item-action-placeholder\", onClick: onMenuButtonClick },\n        React.createElement(\"div\", { className: optionsIconClasses })));\n};\n//# sourceMappingURL=DashboardInsightMenuButton.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { DashboardInsightMenuButton } from \"./DashboardInsightMenuButton.js\";\n/**\n * @internal\n */\nexport const DefaultDashboardInsightMenuButton = (props) => {\n    return React.createElement(DashboardInsightMenuButton, Object.assign({}, props));\n};\n//# sourceMappingURL=DefaultDashboardInsightMenuButton.js.map","// (C) 2019-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { insightVisualizationType, objRefToString, widgetRef } from \"@gooddata/sdk-model\";\nimport { stringUtils } from \"@gooddata/util\";\nimport cx from \"classnames\";\nimport { useIntl } from \"react-intl\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { selectCanExportTabular, selectSettings, useDashboardSelector } from \"../../../../../model/index.js\";\nconst nonExportableVisTypes = [\"headline\", \"xirr\"];\nfunction isExportableVisualization(visType) {\n    return !nonExportableVisTypes.includes(visType);\n}\nconst bubbleAlignPoints = [{ align: \"tc bc\" }, { align: \"tc br\" }];\nexport const LegacyInsightMenuButton = ({ onClick, widget, insight, isOpen, }) => {\n    const intl = useIntl();\n    const onOptionsMenuClick = useCallback(() => {\n        onClick();\n    }, [onClick]);\n    const settings = useDashboardSelector(selectSettings);\n    const canExportTabular = useDashboardSelector(selectCanExportTabular);\n    const areExportsEnabled = settings.enableKPIDashboardExport;\n    const hasExportReportPermissions = canExportTabular;\n    const visType = insightVisualizationType(insight);\n    const isExportableVisType = isExportableVisualization(visType);\n    const canExportWidget = areExportsEnabled && hasExportReportPermissions && isExportableVisType;\n    if (!canExportWidget) {\n        return null;\n    }\n    const widgetRefValue = widgetRef(widget);\n    const objRefAsString = widgetRefValue ? objRefToString(widgetRefValue) : \"\";\n    const optionsIconClasses = cx(\"dash-item-action-options\", \"s-dash-item-action-options\", `dash-item-action-options-${stringUtils.simplifyText(objRefAsString)}`, `s-dash-item-action-options-${stringUtils.simplifyText(objRefAsString)}`, \"gd-icon-download\", {\n        \"dash-item-action-options-active\": isOpen,\n    });\n    return (React.createElement(\"div\", { className: \"dash-item-action-placeholder s-dash-item-action-placeholder\", onClick: onOptionsMenuClick },\n        React.createElement(BubbleHoverTrigger, { className: optionsIconClasses, showDelay: 500, hideDelay: 0, tagName: \"div\" },\n            React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: bubbleAlignPoints },\n                React.createElement(\"span\", null, intl.formatMessage({ id: \"options.button.bubble\" }))))));\n};\n//# sourceMappingURL=LegacyInsightMenuButton.js.map","// (C) 2020-2022 GoodData Corporation\nimport { renderModeAware } from \"../../../componentDefinition/index.js\";\nimport { DefaultDashboardInsightMenuButton } from \"../DefaultDashboardInsightMenu/index.js\";\nimport { LegacyInsightMenuButton } from \"./LegacyInsightMenu/LegacyInsightMenuButton.js\";\n/**\n * @internal\n */\nexport const LegacyDashboardInsightMenuButton = renderModeAware({\n    view: LegacyInsightMenuButton,\n    edit: DefaultDashboardInsightMenuButton,\n});\n//# sourceMappingURL=LegacyDashboardInsightMenuButton.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const DashboardInsightMenuTitle = (props) => {\n    const { insight, widget } = props;\n    const { InsightMenuTitleComponentProvider } = useDashboardComponentsContext();\n    const InsightMenuTitleComponent = useMemo(() => InsightMenuTitleComponentProvider(insight, widget), [InsightMenuTitleComponentProvider, insight, widget]);\n    return React.createElement(InsightMenuTitleComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardInsightMenuTitle.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { Button, ItemsWrapper } from \"@gooddata/sdk-ui-kit\";\nimport { DashboardInsightMenuTitle } from \"../../DashboardInsightMenuTitle.js\";\nconst itemsWrapperStyle = { width: \"100%\" };\nexport const DashboardInsightMenuContainer = (props) => {\n    return (React.createElement(\"div\", { className: \"insight-configuration\" },\n        React.createElement(\"div\", { className: \"insight-configuration-panel-header\" },\n            React.createElement(DashboardInsightMenuTitle, { widget: props.widget, insight: props.insight, renderMode: props.renderMode }),\n            React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-icon-cross configuration-panel-header-close-button s-configuration-panel-header-close-button\", onClick: props.onClose })),\n        React.createElement(ItemsWrapper, { smallItemsSpacing: true, style: itemsWrapperStyle }, props.children)));\n};\n//# sourceMappingURL=DashboardInsightMenuContainer.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger, Item } from \"@gooddata/sdk-ui-kit\";\nconst tooltipAlignPoints = [{ align: \"cl cr\" }];\nexport const DashboardInsightMenuItemButton = (props) => {\n    const { itemId, itemName, disabled, icon, onClick, tooltip, className, submenu = false } = props;\n    // for JSX icons we need an extra gd-icon-wrapper class to align the icon and the text vertically\n    return renderButtonWithTooltip(React.createElement(Item, { className: className, onClick: disabled ? undefined : onClick, disabled: disabled, subMenu: submenu },\n        React.createElement(\"span\", { className: cx({ \"gd-icon-wrapper\": icon && typeof icon !== \"string\" }) },\n            icon ? typeof icon === \"string\" ? React.createElement(\"i\", { className: icon }) : icon : null,\n            itemName)), itemId, disabled, tooltip);\n};\nfunction renderButtonWithTooltip(button, id, disabled, tooltip) {\n    if (tooltip && disabled) {\n        return (React.createElement(BubbleHoverTrigger, { className: \"s-gd-bubble-trigger-options-menu-item\" },\n            button,\n            React.createElement(Bubble, { className: `bubble-primary bubble-primary-${id} s-bubble-primary-${id}`, alignPoints: tooltipAlignPoints }, tooltip)));\n    }\n    else {\n        return button;\n    }\n}\n//# sourceMappingURL=DashboardInsightMenuItemButton.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nexport const DashboardInsightSubmenuHeader = ({ title, onHeaderClick, }) => {\n    return (React.createElement(Typography, { tagName: \"h3\", className: \"configuration-panel-header-title clickable\", onClick: onHeaderClick },\n        React.createElement(\"i\", { className: \"gd-icon-navigateleft\" }),\n        title));\n};\n//# sourceMappingURL=DashboardInsightSubmenuHeader.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { Button } from \"@gooddata/sdk-ui-kit\";\nimport { DashboardInsightSubmenuHeader } from \"./DashboardInsightSubmenuHeader.js\";\nconst screenWrapperStyle = { width: \"100%\" };\nexport const DashboardInsightSubmenuContainer = (props) => {\n    return (React.createElement(\"div\", { className: \"configuration-panel\" },\n        React.createElement(\"div\", { className: \"configuration-panel-header\" },\n            React.createElement(DashboardInsightSubmenuHeader, { title: props.title, onHeaderClick: props.onBack }),\n            React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-icon-cross configuration-panel-header-close-button s-configuration-panel-header-close-button\", onClick: props.onClose })),\n        React.createElement(\"div\", { className: \"configuration-panel-screen\", style: screenWrapperStyle }, props.children)));\n};\n//# sourceMappingURL=DashboardInsightSubmenuContainer.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { objRefToString, widgetRef } from \"@gooddata/sdk-model\";\nimport { Bubble } from \"@gooddata/sdk-ui-kit\";\nconst alignPoints = [\n    { align: \"tr tl\" },\n    { align: \"br bl\" },\n    { align: \"tl tr\" },\n    { align: \"tr tr\" },\n    { align: \"br br\" },\n];\nconst arrowDirections = {\n    \"tr tr\": \"right\",\n    \"br br\": \"right\",\n};\nconst arrowOffsets = {\n    \"tr tl\": [20, 0],\n    \"tl tr\": [-20, 0],\n};\nexport const DashboardInsightMenuBubble = (props) => {\n    const { onClose, isSubmenu, widget, children } = props;\n    const widgetRefAsString = objRefToString(widgetRef(widget));\n    return (React.createElement(Bubble, { alignTo: `.dash-item-action-widget-options-${stringUtils.simplifyText(widgetRefAsString)}`, alignPoints: alignPoints, arrowDirections: arrowDirections, arrowOffsets: arrowOffsets, className: cx(\"bubble-light\", \"gd-configuration-bubble\", \"edit-insight-config\", \"s-edit-insight-config\", \"edit-insight-config-title-1-line\", isSubmenu ? \"edit-insight-config-arrow-submenu-color\" : \"edit-insight-config-arrow-color\"), closeOnOutsideClick: true, onClose: onClose, overlayClassName: \"gd-configuration-bubble-wrapper sdk-edit-mode-on\" }, children));\n};\n//# sourceMappingURL=DashboardInsightMenuBubble.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Bubble } from \"@gooddata/sdk-ui-kit\";\nconst alignPoints = [\n    { align: \"tr tl\" },\n    { align: \"br bl\" },\n    { align: \"tl tr\" },\n    { align: \"tr tr\" },\n    { align: \"br br\" },\n];\nconst arrowOffsets = {\n    \"tr tl\": [7, 28],\n    \"br bl\": [7, -28],\n    \"tl tr\": [-7, 28],\n    \"tr tr\": [-76, 28],\n    \"br br\": [-76, -28],\n};\nconst arrowDirections = {\n    \"tr tr\": \"right\",\n    \"br br\": \"right\",\n};\nconst alignTo = \".s-dash-item.is-selected\";\nconst ignoreClicksOnByClass = [alignTo]; // do not close on click to the widget\nexport const ConfigurationBubble = (props) => {\n    const { children, classNames, onClose } = props;\n    return (React.createElement(Bubble, { className: cx(\"bubble-light gd-configuration-bubble s-gd-configuration-bubble\", classNames), overlayClassName: \"gd-configuration-bubble-wrapper sdk-edit-mode-on\", alignTo: alignTo, alignPoints: alignPoints, arrowOffsets: arrowOffsets, arrowDirections: arrowDirections, closeOnOutsideClick: true, closeOnParentScroll: false, ignoreClicksOnByClass: ignoreClicksOnByClass, onClose: onClose }, children));\n};\n//# sourceMappingURL=ConfigurationBubble.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { ConfigurationBubble } from \"../../../common/index.js\";\nexport const DashboardInsightEditMenuBubble = (props) => {\n    const { children, onClose, isSubmenu } = props;\n    return (React.createElement(ConfigurationBubble, { classNames: cx(\"edit-insight-config\", \"s-edit-insight-config\", \"edit-insight-config-title-1-line\", isSubmenu ? \"edit-insight-config-arrow-submenu-color\" : \"edit-insight-config-arrow-color\"), onClose: onClose }, children));\n};\n//# sourceMappingURL=DashboardInsightEditMenuBubble.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useState } from \"react\";\nimport { Separator } from \"@gooddata/sdk-ui-kit\";\nimport { DashboardInsightMenuContainer } from \"./DashboardInsightMenuContainer.js\";\nimport { DashboardInsightMenuItemButton } from \"./DashboardInsightMenuItemButton.js\";\nimport { DashboardInsightSubmenuContainer } from \"./DashboardInsightSubmenuContainer.js\";\nimport { selectRenderMode, useDashboardSelector } from \"../../../../../model/index.js\";\nimport { DashboardInsightMenuBubble } from \"./DashboardInsightMenuBubble.js\";\nimport { DashboardInsightEditMenuBubble } from \"./DashboardInsightEditMenuBubble.js\";\nconst DashboardInsightMenuBody = (props) => {\n    const { items, widget, insight, submenu, setSubmenu, onClose, renderMode } = props;\n    return submenu ? (React.createElement(DashboardInsightSubmenuContainer, { onClose: onClose, title: submenu.itemName, onBack: () => setSubmenu(null) },\n        React.createElement(submenu.SubmenuComponent, { widget: widget }))) : (React.createElement(DashboardInsightMenuContainer, { onClose: onClose, widget: widget, insight: insight, renderMode: renderMode },\n        React.createElement(DashboardInsightMenuRoot, { items: items, setSubmenu: setSubmenu })));\n};\nexport const DashboardInsightMenu = (props) => {\n    const { widget, onClose } = props;\n    const renderMode = useDashboardSelector(selectRenderMode);\n    const [submenu, setSubmenu] = useState(null);\n    return renderMode === \"edit\" ? (React.createElement(DashboardInsightEditMenuBubble, { onClose: onClose, isSubmenu: !!submenu },\n        React.createElement(DashboardInsightMenuBody, Object.assign({}, props, { submenu: submenu, setSubmenu: setSubmenu, renderMode: renderMode })))) : (React.createElement(DashboardInsightMenuBubble, { onClose: onClose, widget: widget, isSubmenu: !!submenu },\n        React.createElement(DashboardInsightMenuBody, Object.assign({}, props, { submenu: submenu, setSubmenu: setSubmenu, renderMode: renderMode }))));\n};\nconst DashboardInsightMenuRoot = ({ items, setSubmenu }) => {\n    return (React.createElement(React.Fragment, null, items.map((item) => {\n        if (item.type === \"separator\") {\n            return React.createElement(Separator, { key: item.itemId });\n        }\n        if (item.type === \"submenu\") {\n            return (React.createElement(DashboardInsightMenuItemButton, Object.assign({ key: item.itemId }, item, { onClick: () => setSubmenu(item), submenu: true })));\n        }\n        return React.createElement(DashboardInsightMenuItemButton, Object.assign({ key: item.itemId }, item));\n    })));\n};\n//# sourceMappingURL=index.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { DashboardInsightMenu } from \"./DashboardInsightMenu/index.js\";\n/**\n * @alpha\n */\nexport const DefaultDashboardInsightMenu = (props) => {\n    return React.createElement(DashboardInsightMenu, Object.assign({}, props));\n};\n//# sourceMappingURL=DefaultDashboardInsightMenu.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger, Item } from \"@gooddata/sdk-ui-kit\";\nconst alignPoints = [{ align: \"cl cr\" }];\nexport const LegacyInsightMenuItem = ({ bubbleId, className, isDisabled, onClick, title, bubbleMessage = \"\", }) => {\n    const itemClasses = cx(\"gd-list-item\", \"gd-menu-item\", className, { \"is-disabled\": isDisabled });\n    if (isDisabled) {\n        const button = React.createElement(Item, { className: itemClasses }, title);\n        if (bubbleMessage) {\n            return (React.createElement(BubbleHoverTrigger, { className: \"s-gd-bubble-trigger-options-menu-item\" },\n                button,\n                React.createElement(Bubble, { className: `bubble-primary bubble-primary-${bubbleId} s-bubble-primary-${bubbleId}`, alignPoints: alignPoints }, bubbleMessage)));\n        }\n        else {\n            return button;\n        }\n    }\n    else {\n        return (React.createElement(Item, { className: itemClasses, onClick: onClick }, title));\n    }\n};\n//# sourceMappingURL=LegacyInsightMenuItem.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { objRefToString, widgetRef } from \"@gooddata/sdk-model\";\nimport { Bubble, ItemsWrapper } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { LegacyInsightMenuItem } from \"./LegacyInsightMenuItem.js\";\nimport { DOWNLOADER_ID } from \"../../../../../_staging/fileUtils/downloadFile.js\";\nconst alignPoints = [{ align: \"bc tr\", offset: { x: 2, y: 0 } }];\nconst ignoredOutsideClickClasses = [`#${DOWNLOADER_ID}`];\nexport const LegacyInsightMenu = ({ widget, items, onClose }) => {\n    const widgetRefValue = widgetRef(widget);\n    const exportWidgetRefAsString = objRefToString(widgetRefValue);\n    return (React.createElement(Bubble, { alignTo: `.s-dash-item-action-options-${stringUtils.simplifyText(exportWidgetRefAsString)}`, alignPoints: alignPoints, className: \"bubble-light options-menu-bubble s-options-menu-bubble\", closeOnOutsideClick: true, \n        // we need to ignore the \"clicks\" on the hidden downloader link to prevent the menu from closing\n        // when the download starts (if the user opened it again before the download was ready)\n        ignoreClicksOnByClass: ignoredOutsideClickClasses, onClose: onClose },\n        React.createElement(ItemsWrapper, { smallItemsSpacing: true }, items.map((item) => {\n            // legacy menu does not support separators\n            if (item.type !== \"button\") {\n                return null;\n            }\n            return (React.createElement(LegacyInsightMenuItem, { key: item.itemId, bubbleId: item.itemId, bubbleMessage: item.tooltip, className: item.className, isDisabled: item.disabled, title: item.itemName, onClick: item.onClick }));\n        }))));\n};\n//# sourceMappingURL=index.js.map","// (C) 2020-2022 GoodData Corporation\nimport { DefaultDashboardInsightMenu } from \"../DefaultDashboardInsightMenu/index.js\";\nimport { renderModeAware } from \"../../../componentDefinition/index.js\";\nimport { LegacyInsightMenu } from \"./LegacyInsightMenu/index.js\";\n/**\n * @internal\n */\nexport const LegacyDashboardInsightMenu = renderModeAware({\n    view: LegacyInsightMenu,\n    edit: DefaultDashboardInsightMenu,\n});\n//# sourceMappingURL=LegacyDashboardInsightMenu.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport { insightTitle, widgetTitle } from \"@gooddata/sdk-model\";\nconst OriginalInsightTitle = (props) => {\n    const { title } = props;\n    return (React.createElement(Typography, { tagName: \"p\", className: \"insight-title s-insight-title \" },\n        React.createElement(\"span\", { title: title, className: \"original-insight-title\" }, title)));\n};\n/**\n * @internal\n */\nexport const DefaultDashboardInsightMenuTitle = (props) => {\n    const { widget, insight, renderMode } = props;\n    const title = widgetTitle(widget);\n    const originalTitle = insightTitle(insight);\n    const titlesDiffer = title !== originalTitle;\n    const renderedTitle = title ? (React.createElement(\"span\", { title: props.widget.title, className: \"insight-title s-insight-title s-insight-title-simple\" }, props.widget.title)) : null;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Typography, { tagName: \"h3\", className: \"widget-title s-widget-title\" }, renderedTitle),\n        renderMode === \"edit\" && titlesDiffer ? React.createElement(OriginalInsightTitle, { title: originalTitle }) : null));\n};\n//# sourceMappingURL=DefaultDashboardInsightMenuTitle.js.map","import lowerFirst from \"lodash/lowerFirst.js\";\nimport { DateFilterHelpers } from \"@gooddata/sdk-ui-filters\";\nimport { absoluteDateFilterValues, isAbsoluteDateFilter, isAllTimeDateFilter, isRelativeDateFilter, relativeDateFilterValues, } from \"@gooddata/sdk-model\";\nimport { messages } from \"../../../../../../locales.js\";\nfunction filterMetadata(filter) {\n    var _a, _b, _c, _d;\n    if (isRelativeDateFilter(filter)) {\n        return Object.assign(Object.assign({}, relativeDateFilterValues(filter)), { type: \"relative\" });\n    }\n    else if (isAbsoluteDateFilter(filter)) {\n        return Object.assign(Object.assign({}, absoluteDateFilterValues(filter)), { type: \"absolute\" });\n    }\n    else if (filter.dateFilter.type === \"relative\") {\n        return {\n            type: \"relative\",\n            from: Number.parseInt((_b = (_a = filter.dateFilter.from) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : \"0\", 10),\n            to: Number.parseInt((_d = (_c = filter.dateFilter.to) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : \"0\", 10),\n            granularity: filter.dateFilter.granularity,\n        };\n    }\n    else {\n        return {\n            type: \"absolute\",\n            from: filter.dateFilter.from.toString(),\n            to: filter.dateFilter.to.toString(),\n        };\n    }\n}\nexport function translateDateFilter(filter, intl, dateFormat) {\n    const metadata = filterMetadata(filter);\n    return metadata.type === \"absolute\"\n        ? DateFilterHelpers.formatAbsoluteDateRange(metadata.from, metadata.to, dateFormat)\n        : DateFilterHelpers.formatRelativeDateRange(metadata.from, metadata.to, metadata.granularity, intl);\n}\nfunction getIntlIdRoot(filter) {\n    const metadata = filterMetadata(filter);\n    if (metadata.type === \"absolute\") {\n        return messages.alertMessageRelativePresetInPeriod.id;\n    }\n    const hasOneBoundToday = metadata.from === 0 || metadata.to === 0; // e.g. last 4 months, next 6 days\n    const isLastOneX = metadata.from === -1 && metadata.to === -1; // e.g last month\n    const isNextOneX = metadata.from === 1 && metadata.to === 1; // e.g. next month\n    return hasOneBoundToday || isLastOneX || isNextOneX\n        ? messages.alertMessageRelativePreset.id\n        : messages.alertMessageRelativePresetInPeriod.id;\n}\nexport function getKpiAlertTranslationData(filter, intl, dateFormat) {\n    if (!filter || isAllTimeDateFilter(filter)) {\n        return null;\n    }\n    return {\n        intlIdRoot: getIntlIdRoot(filter),\n        rangeText: lowerFirst(translateDateFilter(filter, intl, dateFormat)),\n    };\n}\n//# sourceMappingURL=translationUtils.js.map","// (C) 2007-2020 GoodData Corporation\nimport React, { PureComponent } from \"react\";\nimport cx from \"classnames\";\n/**\n * @internal\n */\nclass Spinner extends PureComponent {\n    generateSpinnerTicks() {\n        const items = [];\n        for (let i = 1; i <= 8; i += 1) {\n            const className = `gd-dot-spinner-${i}`;\n            items.push(React.createElement(\"div\", { className: className, key: className }));\n        }\n        return items;\n    }\n    render() {\n        const { className } = this.props;\n        const spinnerClasses = cx({\n            \"gd-dot-spinner\": true,\n            [className]: !!className,\n        });\n        return React.createElement(\"div\", { className: spinnerClasses }, this.generateSpinnerTicks());\n    }\n}\nSpinner.defaultProps = {\n    className: \"\",\n};\nexport { Spinner };\n//# sourceMappingURL=Spinner.js.map","// (C) 2019-2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Icon } from \"@gooddata/sdk-ui-kit\";\nimport { useTheme } from \"@gooddata/sdk-ui-theme-provider\";\nimport { getKpiAlertTranslationData } from \"../utils/translationUtils.js\";\nexport const KpiAlertDialogDateRange = ({ filter, dateFormat }) => {\n    var _a, _b;\n    const intl = useIntl();\n    const theme = useTheme();\n    const translationData = getKpiAlertTranslationData(filter, intl, dateFormat);\n    if (!translationData) {\n        return null;\n    }\n    const { intlIdRoot, rangeText } = translationData;\n    return (React.createElement(FormattedMessage, { id: intlIdRoot, values: {\n            calendarIcon: (React.createElement(Icon.Date, { className: \"gd-icon-calendar-kpi\", color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c6 })),\n            range: React.createElement(\"strong\", null, rangeText),\n        } }));\n};\n//# sourceMappingURL=KpiAlertDialogDateRange.js.map","export const kpiAlertDialogAlignPoints = [\n    {\n        align: \"tr tl\",\n        offset: {\n            x: 18,\n            y: 0,\n        },\n    },\n    {\n        align: \"tl tr\",\n        offset: {\n            x: -18,\n            y: 0,\n        },\n    },\n    {\n        align: \"bc tc\",\n        offset: {\n            x: 0,\n            y: 18,\n        },\n    },\n    {\n        align: \"tc cr\",\n        offset: {\n            x: -100,\n            y: 90,\n        },\n    },\n    {\n        align: \"tc cl\",\n        offset: {\n            x: 100,\n            y: 90,\n        },\n    },\n    {\n        align: \"tc cr\",\n        offset: {\n            x: -50,\n            y: 90,\n        },\n    },\n    {\n        align: \"tc cl\",\n        offset: {\n            x: 50,\n            y: 90,\n        },\n    },\n];\nexport const kpiAlertDialogMobileAlignPoints = [\n    {\n        align: \"bc tc\",\n        offset: {\n            x: 0,\n            y: 18,\n        },\n    },\n    {\n        align: \"bl tl\",\n        offset: {\n            x: 0,\n            y: 18,\n        },\n    },\n    {\n        align: \"br tr\",\n        offset: {\n            x: 0,\n            y: 18,\n        },\n    },\n    {\n        align: \"tc bc\",\n        offset: {\n            x: 0,\n            y: -18,\n        },\n    },\n    {\n        align: \"tl bl\",\n        offset: {\n            x: 0,\n            y: -18,\n        },\n    },\n    {\n        align: \"tr br\",\n        offset: {\n            x: 0,\n            y: -18,\n        },\n    },\n    {\n        align: \"cc tc\",\n        offset: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        align: \"cl tl\",\n        offset: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        align: \"cr tr\",\n        offset: {\n            x: 0,\n            y: 0,\n        },\n    },\n];\n//# sourceMappingURL=alignPoints.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { createRef } from \"react\";\nimport { injectIntl } from \"react-intl\";\nclass WrappedFilterLabel extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = { hasEllipsis: false };\n        this.labelRef = createRef();\n    }\n    componentDidMount() {\n        this.checkEllipsis();\n    }\n    componentDidUpdate() {\n        this.checkEllipsis();\n    }\n    getIsDate() {\n        return this.props.isDate;\n    }\n    isAllSelected() {\n        return this.props.isAllSelected;\n    }\n    checkEllipsis() {\n        const { offsetWidth, scrollWidth } = this.labelRef.current;\n        // for some reason, IE11 returns offsetWidth = scrollWidth - 1 even when there is no ellipsis\n        const hasEllipsis = offsetWidth < scrollWidth - 1;\n        if (hasEllipsis !== this.state.hasEllipsis) {\n            this.setState({ hasEllipsis });\n        }\n    }\n    renderSelectionLabel(content) {\n        return React.createElement(\"span\", { className: \"count s-total-count\" }, content);\n    }\n    renderSelection() {\n        if (!this.getIsDate() && !this.props.noData) {\n            const { selectionSize, intl } = this.props;\n            if (this.isAllSelected()) {\n                return this.renderSelectionLabel(intl.formatMessage({ id: \"gs.filterLabel.all\" }));\n            }\n            if (selectionSize === 0) {\n                return this.renderSelectionLabel(intl.formatMessage({ id: \"gs.filterLabel.none\" }));\n            }\n            if (this.state.hasEllipsis && selectionSize > 0) {\n                return this.renderSelectionLabel(`(${selectionSize})`);\n            }\n        }\n        return false;\n    }\n    renderTitle() {\n        return [\n            React.createElement(\"span\", { className: \"filter-label-title\", key: \"title\", title: this.props.title }, this.props.title),\n            this.isAllSelected() && !this.getIsDate() && !this.props.noData ? (React.createElement(\"span\", { key: \"title-colon\" }, \": \")) : (false),\n        ];\n    }\n    renderSelectedElements() {\n        if (!this.props.selection || this.isAllSelected()) {\n            return false;\n        }\n        return [\n            React.createElement(\"span\", { key: \"selection-colon\" }, \": \"),\n            React.createElement(\"span\", { className: \"filter-label-selection\", key: \"selection\" }, this.props.selection),\n        ];\n    }\n    render() {\n        return (React.createElement(\"div\", { role: \"attribute-filter-label\", className: \"adi-attribute-filter-label s-attribute-filter-label\" },\n            React.createElement(\"span\", { className: \"label\", ref: this.labelRef },\n                this.renderTitle(),\n                this.renderSelectedElements()),\n            this.renderSelection()));\n    }\n}\nWrappedFilterLabel.defaultProps = {\n    isAllSelected: false,\n    isDate: false,\n    selection: \"\",\n    noData: false,\n};\n/**\n * @internal\n */\nexport const FilterLabel = injectIntl(WrappedFilterLabel);\n//# sourceMappingURL=FilterLabel.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport partition from \"lodash/partition.js\";\nimport { FilterLabel } from \"@gooddata/sdk-ui-kit\";\nimport { getFilterLabelFilter } from \"./utils/filterUtils.js\";\nconst ITEMS_SCROLL_LIMIT = 5;\nconst KpiAlertDialogBrokenFiltersSection = ({ filters, type, }) => {\n    if (!filters.length) {\n        return null;\n    }\n    const contentClassNames = cx(\"filter-section-content\", {\n        \"more-items\": filters.length > ITEMS_SCROLL_LIMIT,\n    });\n    return (React.createElement(\"div\", { className: \"filter-section\" },\n        React.createElement(\"div\", { className: \"filter-section-headline\" }, type === \"deleted\" ? (React.createElement(FormattedMessage, { id: \"kpiAlertDialog.removedFilters\" })) : (React.createElement(FormattedMessage, { id: \"kpiAlertDialog.ignoredFilters\" }))),\n        React.createElement(\"div\", { className: contentClassNames }, filters.map((filter) => {\n            const filterProps = getFilterLabelFilter(filter);\n            return (React.createElement(\"div\", { className: \"attribute-filter-label\", key: filter.title },\n                React.createElement(FilterLabel, Object.assign({}, filterProps))));\n        }))));\n};\nexport const KpiAlertDialogBrokenFilters = ({ brokenFilters, }) => {\n    const [deletedFilters, ignoredFilters] = useMemo(() => partition(brokenFilters, (filter) => filter.brokenType === \"deleted\"), [brokenFilters]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(KpiAlertDialogBrokenFiltersSection, { filters: deletedFilters, type: \"deleted\" }),\n        React.createElement(KpiAlertDialogBrokenFiltersSection, { filters: ignoredFilters, type: \"ignored\" })));\n};\n//# sourceMappingURL=KpiAlertDialogBrokenFilters.js.map","export function isBrokenAlertAttributeFilter(obj) {\n    return (obj === null || obj === void 0 ? void 0 : obj.type) === \"attribute\";\n}\nexport function isBrokenAlertDateFilter(obj) {\n    return (obj === null || obj === void 0 ? void 0 : obj.type) === \"date\";\n}\n//# sourceMappingURL=types.js.map","// (C) 2007-2021 GoodData Corporation\nimport { isBrokenAlertAttributeFilter } from \"../../../types.js\";\nexport function getFilterLabelFilter(item) {\n    if (isBrokenAlertAttributeFilter(item)) {\n        return {\n            isAllSelected: item.isAllSelected,\n            isDate: false,\n            selection: item.selection,\n            selectionSize: item.selectionSize,\n            title: item.title,\n        };\n    }\n    else {\n        return {\n            isAllSelected: false,\n            isDate: true,\n            selection: item.dateFilterTitle,\n            selectionSize: undefined,\n            title: item.title,\n        };\n    }\n}\n//# sourceMappingURL=filterUtils.js.map","import isNil from \"lodash/isNil.js\";\nimport round from \"lodash/round.js\";\nfunction getNumberOfDecimalPlaces(num) {\n    // http://stackoverflow.com/questions/10454518/\n    const match = `${num}`.match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match) {\n        return 0;\n    }\n    return Math.max(0, \n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n        // Adjust for scientific notation.\n        (match[2] ? +match[2] : 0));\n}\nexport function thresholdFromDecimalToPercent(threshold) {\n    // Convert threshold to percent (=> multiply by 100), but\n    // this can cause floating point error (e.g. 4.56 * 100 = 455.99999999999994).\n    // So figure out the number of decimal places specified by user,\n    // multiply threshold by 100, and then round to the number of decimal places.\n    const numberOfDecimalPlaces = getNumberOfDecimalPlaces(threshold);\n    const numberOfWantedDecimalPlaces = Math.max(numberOfDecimalPlaces - 2, 0);\n    return isNil(threshold) || isNaN(threshold) // eslint-disable-line no-restricted-globals\n        ? threshold\n        : round(threshold * 100, numberOfWantedDecimalPlaces);\n}\nexport function thresholdFromPercentToDecimal(threshold) {\n    // Convert threshold from percent (=> divide by 100), but\n    // this can cause floating point error (e.g. 4.56 / 100 = 0.045599999999999995).\n    // So figure out the number of decimal places specified by user,\n    // divide threshold by 100, and then round to the number of decimal places.\n    const numberOfDecimalPlaces = getNumberOfDecimalPlaces(threshold);\n    const numberOfWantedDecimalPlaces = Math.max(numberOfDecimalPlaces + 2, 0);\n    return isNil(threshold) || isNaN(threshold) // eslint-disable-line no-restricted-globals\n        ? threshold\n        : round(threshold / 100, numberOfWantedDecimalPlaces);\n}\nfunction sanitizeValue(value) {\n    return isNaN(value) ? 0 : value; // eslint-disable-line no-restricted-globals\n}\nexport function evaluateAlertTriggered(kpiMeasureResult, threshold, when) {\n    const sanitizedValue = sanitizeValue(kpiMeasureResult);\n    const sanitizedThreshold = sanitizeValue(threshold);\n    switch (when) {\n        case \"aboveThreshold\":\n            return sanitizedValue > sanitizedThreshold;\n        case \"underThreshold\":\n            return sanitizedValue < sanitizedThreshold;\n        default:\n            return false;\n    }\n}\n//# sourceMappingURL=alertThresholdUtils.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { Dropdown, DropdownButton, DropdownList, ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nexport const KpiAlertDialogWhenTriggeredPicker = ({ intl, onWhenTriggeredChange, whenTriggered, }) => {\n    const alertTypeItems = useMemo(() => [\n        { title: intl.formatMessage({ id: \"kpiAlertDialog.threshold.above\" }), id: \"aboveThreshold\" },\n        { title: intl.formatMessage({ id: \"kpiAlertDialog.threshold.below\" }), id: \"underThreshold\" },\n    ], [intl]);\n    const selectedItem = alertTypeItems.find((item) => item.id === whenTriggered);\n    return (React.createElement(Dropdown, { className: \"alert-select s-alert_select\", renderButton: ({ toggleDropdown }) => (React.createElement(DropdownButton, { className: \"dropdown-button\", value: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.title, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"s-alert-list\", width: 256, items: alertTypeItems, itemsCount: alertTypeItems.length, renderItem: ({ item }) => (React.createElement(\"div\", { className: cx(\"gd-list-item\", \"gd-list-item-shortened\", `s-${stringUtils.simplifyText(item.title)}`), onClick: (e) => {\n                    e.preventDefault();\n                    onWhenTriggeredChange(item.id);\n                    closeDropdown();\n                } },\n                React.createElement(ShortenedText, null, item.title))) })) }));\n};\n//# sourceMappingURL=KpiAlertDialogWhenTriggeredPicker.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { Component } from \"react\";\nimport isEqual from \"lodash/isEqual.js\";\nimport last from \"lodash/last.js\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Button, Input, Typography, Overlay, useMediaQuery, Spinner, Message } from \"@gooddata/sdk-ui-kit\";\nimport { isAttributeFilter, isDateFilter, isDashboardAttributeFilter, isDashboardDateFilter, } from \"@gooddata/sdk-model\";\nimport { KpiAlertDialogDateRange } from \"./KpiAlertDialogDateRange.js\";\nimport { kpiAlertDialogAlignPoints, kpiAlertDialogMobileAlignPoints } from \"./alignPoints.js\";\nimport { KpiAlertDialogBrokenFilters } from \"./KpiAlertDialogBrokenFilters/KpiAlertDialogBrokenFilters.js\";\nimport { thresholdFromDecimalToPercent, thresholdFromPercentToDecimal, } from \"../utils/alertThresholdUtils.js\";\nimport { areKpiAlertFiltersSameAsDashboard } from \"./utils/filterUtils.js\";\nimport { KpiAlertDialogWhenTriggeredPicker } from \"./KpiAlertDialogWhenTriggeredPicker.js\";\nconst DEFAULT_WHEN_TRIGGERED = \"aboveThreshold\";\nconst KpiAlertDialogWrapper = ({ children }) => {\n    const isMobile = useMediaQuery(\"mobileDevice\");\n    return children(isMobile);\n};\nclass KpiAlertDialog extends Component {\n    constructor(props) {\n        var _a, _b;\n        super(props);\n        this.threshold = React.createRef();\n        this.saveButton = React.createRef();\n        this.onCloseClick = (e) => {\n            e.stopPropagation();\n            this.closeDialog();\n        };\n        this.onCancelClick = (e) => {\n            e.stopPropagation();\n            this.closeDialog();\n        };\n        this.closeDialog = () => {\n            this.props.onAlertDialogCloseClick();\n        };\n        this.onSelect = (alertType) => {\n            this.setState({ alertType });\n        };\n        this.onChange = (value) => {\n            this.setState({ threshold: value.toString() });\n        };\n        this.saveKpiAlert = () => {\n            const whenTriggered = this.state.alertType;\n            let threshold = parseFloat(this.state.threshold); // convert e.g. valid .2 to 0.2\n            threshold = this.isThresholdRepresentingPercent()\n                ? thresholdFromPercentToDecimal(threshold)\n                : threshold;\n            if (this.isAlertValid() && !this.isAlertEmpty()) {\n                this.props.onAlertDialogSaveClick(threshold, whenTriggered);\n            }\n        };\n        this.deleteKpiAlert = () => {\n            this.props.onAlertDialogDeleteClick();\n        };\n        this.applyAlertFilterSetting = () => {\n            setTimeout(() => {\n                var _a, _b;\n                (_b = (_a = this.props).onApplyAlertFiltersClick) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }, 0);\n        };\n        this.state = {\n            alertType: (_b = (_a = props.alert) === null || _a === void 0 ? void 0 : _a.whenTriggered) !== null && _b !== void 0 ? _b : DEFAULT_WHEN_TRIGGERED,\n            threshold: `${this.getVisualThreshold()}`,\n        };\n    }\n    componentDidMount() {\n        this.focusThresholdInput();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isAlertLoading) {\n            this.focusThresholdInput();\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        var _a, _b;\n        if (this.props.isAlertLoading || !isEqual(this.props.alert, nextProps.alert)) {\n            this.setState({\n                alertType: (_b = (_a = nextProps.alert) === null || _a === void 0 ? void 0 : _a.whenTriggered) !== null && _b !== void 0 ? _b : DEFAULT_WHEN_TRIGGERED,\n                threshold: `${this.getVisualThreshold(nextProps)}`,\n            });\n        }\n        if (this.props.isKpiFormatLoading) {\n            this.setState({\n                threshold: `${this.getVisualThreshold(nextProps)}`,\n            });\n        }\n    }\n    render() {\n        return (React.createElement(KpiAlertDialogWrapper, null, (isMobile) => {\n            return (React.createElement(Overlay, { alignTo: \".is-alert-dialog.dash-item-content\", alignPoints: isMobile ? kpiAlertDialogMobileAlignPoints : kpiAlertDialogAlignPoints, closeOnOutsideClick: !isMobile, onClose: this.closeDialog, className: \"kpi-alert-dialog-overlay\" }, this.renderDialogBox()));\n        }));\n    }\n    renderAttributeFiltersInfo() {\n        var _a;\n        const { alert, filters } = this.props;\n        const attributeFilterCount = alert\n            ? // for existing alerts, count the stored attribute filters\n                (_a = alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters.filter(isDashboardAttributeFilter).length\n            : // otherwise (i.e. when creating a new alert) count attribute filters \"from outside\"\n                filters.filter(isAttributeFilter).length;\n        if (!attributeFilterCount) {\n            return false;\n        }\n        return (React.createElement(\"div\", { className: \"kpi-alert-dialog-text text-info\" },\n            React.createElement(FormattedMessage, { id: \"kpiAlertDialog.withAttributeFilters\", values: { numFilters: attributeFilterCount } })));\n    }\n    getVisualThreshold(props = this.props) {\n        var _a, _b, _c;\n        const threshold = ((_a = props.alert) === null || _a === void 0 ? void 0 : _a.threshold) != undefined && this.isThresholdRepresentingPercent(props)\n            ? thresholdFromDecimalToPercent((_b = props.alert) === null || _b === void 0 ? void 0 : _b.threshold)\n            : (_c = props.alert) === null || _c === void 0 ? void 0 : _c.threshold;\n        return threshold !== null && threshold !== void 0 ? threshold : \"\";\n    }\n    renderDialogBox() {\n        return (React.createElement(\"div\", { className: \"kpi-alert-dialog\" },\n            React.createElement(\"div\", { className: \"action-close gd-icon-cross\", onClick: this.onCloseClick }),\n            this.renderDialogContent()));\n    }\n    renderDeleteLink() {\n        const { alert, alertDeletingStatus, intl } = this.props;\n        if (alert) {\n            const isDeleting = alertDeletingStatus === \"inProgress\";\n            const deleteButtonTitle = isDeleting\n                ? intl.formatMessage({ id: \"kpiAlertDialog.deleting\" })\n                : intl.formatMessage({ id: \"kpiAlertDialog.delete\" });\n            return (React.createElement(Button, { key: \"delete-button\", className: \"s-delete_button gd-button-link-dimmed delete-link\", value: deleteButtonTitle, onClick: this.deleteKpiAlert, disabled: isDeleting }));\n        }\n        return false;\n    }\n    renderUpdateButton() {\n        const { alert, alertUpdatingStatus, intl, onAlertDialogUpdateClick } = this.props;\n        if (alert) {\n            const isUpdating = alertUpdatingStatus === \"inProgress\";\n            const updateButtonTitle = isUpdating\n                ? intl.formatMessage({ id: \"kpiAlertDialog.updatingTitle\" })\n                : intl.formatMessage({ id: \"kpiAlertDialog.updateBrokenTitle\" });\n            return (React.createElement(Button, { key: \"update-button\", className: \"s-update-button gd-button-action save-button\", value: updateButtonTitle, onClick: onAlertDialogUpdateClick, disabled: isUpdating }));\n        }\n        return false;\n    }\n    renderBrokenAlert() {\n        return (React.createElement(\"div\", { className: \"alert-broken\" },\n            React.createElement(Typography, { tagName: \"h3\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.brokenAlert\" })),\n            React.createElement(KpiAlertDialogBrokenFilters, { brokenFilters: this.props.brokenAlertFilters }),\n            React.createElement(\"div\", { className: \"info\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.brokenAlertAppeal\" })),\n            this.renderUpdatingErrorMessage(),\n            this.renderDeletingErrorMessage(),\n            React.createElement(\"div\", { className: \"buttons\" },\n                this.renderUpdateButton(),\n                this.renderDeleteLink())));\n    }\n    renderDialogContent() {\n        const { isAlertDialogOpening, isAlertLoading, thresholdPlaceholder, isKpiFormatLoading, intl, brokenAlertFilters, userEmail, } = this.props;\n        const { threshold, alertType } = this.state;\n        if (isAlertDialogOpening || isAlertLoading || isKpiFormatLoading) {\n            return (React.createElement(\"div\", { className: \"kpi-alert-dialog-content\" },\n                React.createElement(Spinner, { className: \"gd-dot-spinner-centered\" })));\n        }\n        if (brokenAlertFilters === null || brokenAlertFilters === void 0 ? void 0 : brokenAlertFilters.length) {\n            return React.createElement(\"div\", { className: \"kpi-alert-dialog-content\" }, this.renderBrokenAlert());\n        }\n        const inputSuffix = this.isThresholdRepresentingPercent() ? \"%\" : \"\";\n        const hasError = !this.isAlertValid() && !this.isAlertEmpty();\n        const emailMe = (React.createElement(\"span\", { className: \"underline-dotted\", title: userEmail },\n            React.createElement(FormattedMessage, { id: \"kpiAlertDialog.emailMe\" })));\n        return (React.createElement(\"div\", { className: \"kpi-alert-dialog-content\" },\n            React.createElement(\"div\", { className: \"kpi-alert-dialog-text kpi-alert-dialog-text-on-top\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.emailMeWhen\", values: { emailMe } })),\n            React.createElement(KpiAlertDialogWhenTriggeredPicker, { whenTriggered: alertType, intl: intl, onWhenTriggeredChange: this.onSelect }),\n            React.createElement(\"div\", { className: \"input-container\" },\n                React.createElement(Input, { className: \"s-threshold-input\", hasError: hasError, isSmall: true, maxlength: 16, onChange: this.onChange, onEscKeyPress: this.closeDialog, onEnterKeyPress: this.saveKpiAlert, placeholder: thresholdPlaceholder, ref: this.threshold, suffix: inputSuffix, value: threshold })),\n            this.renderFiltersMessage(),\n            this.renderFiltersDifferMessage(),\n            this.renderValidationMessage(),\n            this.renderSavingErrorMessage(),\n            this.renderDeletingErrorMessage(),\n            React.createElement(\"div\", { className: \"buttons\" },\n                React.createElement(Button, { ref: this.saveButton, className: \"gd-button-action save-button s-save_button\", value: this.getSaveButtonTitle(), onClick: this.saveKpiAlert, disabled: !this.isSavingEnabled() }),\n                React.createElement(Button, { className: \"gd-button-secondary cancel-button s-cancel_button\", value: intl.formatMessage({ id: \"cancel\" }), onClick: this.onCancelClick }),\n                this.renderDeleteLink())));\n    }\n    renderDateFilterInfo() {\n        var _a, _b;\n        if (this.props.isDateFilterIgnored) {\n            return false;\n        }\n        const { dateFormat, filters, alert } = this.props;\n        const dateFilters = alert\n            ? (_b = (_a = alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters.filter(isDashboardDateFilter)) !== null && _b !== void 0 ? _b : []\n            : filters.filter(isDateFilter);\n        const dateFilter = last(dateFilters);\n        return React.createElement(KpiAlertDialogDateRange, { filter: dateFilter, dateFormat: dateFormat });\n    }\n    renderFiltersMessage() {\n        const { intl, userEmail } = this.props;\n        const emailInfo = intl.formatMessage({ id: \"kpiAlertDialog.emailInfo\" }, { userEmail });\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { className: \"kpi-alert-dialog-text text-info\" },\n                    this.renderDateFilterInfo(),\n                    this.renderAttributeFiltersInfo()),\n                React.createElement(\"div\", { className: \"kpi-alert-dialog-text email-info\" }, emailInfo))));\n    }\n    renderFiltersDifferMessage() {\n        const filtersDiffer = !areKpiAlertFiltersSameAsDashboard(this.props.alert, this.props.filters);\n        const shouldShowFiltersDifferMessage = !!this.props.alert && filtersDiffer;\n        return shouldShowFiltersDifferMessage ? (React.createElement(Message, { type: \"warning\" },\n            React.createElement(FormattedMessage, { id: \"kpiAlertDialog.filtersDiffer\" }),\n            !!this.props.onApplyAlertFiltersClick && (React.createElement(React.Fragment, null,\n                \" \",\n                React.createElement(\"a\", { className: \"s-apply-alert-filters\", onClick: this.applyAlertFilterSetting },\n                    React.createElement(FormattedMessage, { id: \"kpiAlertDialog.filtersApply\" })))))) : (false);\n    }\n    renderValidationMessage() {\n        if (!this.isAlertValid() && !this.isAlertEmpty()) {\n            return (React.createElement(Message, { type: \"error\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.invalidNumber\", values: {\n                        strong: (chunks) => React.createElement(\"strong\", null, chunks),\n                        br: React.createElement(\"br\", null),\n                    } })));\n        }\n        return false;\n    }\n    renderSavingErrorMessage() {\n        if (this.props.alertSavingStatus === \"error\") {\n            return (React.createElement(Message, { type: \"error\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.savingFailed\" })));\n        }\n        return false;\n    }\n    renderUpdatingErrorMessage() {\n        if (this.props.alertUpdatingStatus === \"error\") {\n            return (React.createElement(Message, { type: \"error\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.updateBrokenFailed\" })));\n        }\n        return false;\n    }\n    renderDeletingErrorMessage() {\n        if (this.props.alertDeletingStatus === \"error\") {\n            return (React.createElement(Message, { type: \"error\" },\n                React.createElement(FormattedMessage, { id: \"kpiAlertDialog.deleteingFailed\" })));\n        }\n        return false;\n    }\n    getSaveButtonTitle() {\n        return this.props.alertSavingStatus === \"inProgress\"\n            ? this.getUpdatingOrSavingTitle()\n            : this.getUpdateOrSetTitle();\n    }\n    getUpdateOrSetTitle() {\n        const { alert, intl } = this.props;\n        return alert\n            ? intl.formatMessage({ id: \"kpiAlertDialog.updateTitle\" })\n            : intl.formatMessage({ id: \"kpiAlertDialog.setTitle\" });\n    }\n    getUpdatingOrSavingTitle() {\n        const { alert, intl } = this.props;\n        return alert\n            ? intl.formatMessage({ id: \"kpiAlertDialog.updatingTitle\" })\n            : intl.formatMessage({ id: \"kpiAlertDialog.settingTitle\" });\n    }\n    isThresholdRepresentingPercent(props = this.props) {\n        return !!props.isThresholdRepresentingPercent;\n    }\n    isSavingEnabled() {\n        return this.isAlertValid() && !this.isAlertEmpty() && this.props.alertSavingStatus !== \"inProgress\";\n    }\n    isAlertValid() {\n        // This is some special function, which works also with strings\n        return !isNaN(this.state.threshold); // eslint-disable-line no-restricted-globals\n    }\n    isAlertEmpty() {\n        return this.state.threshold === undefined || this.state.threshold === \"\";\n    }\n    focusThresholdInput() {\n        setTimeout(() => {\n            var _a, _b, _c;\n            if ((_c = (_b = (_a = this.threshold) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.inputNodeRef) === null || _c === void 0 ? void 0 : _c.inputNodeRef) {\n                const thresholdInputElement = this.threshold.current.inputNodeRef.inputNodeRef;\n                thresholdInputElement.focus();\n                thresholdInputElement.select();\n            }\n        }, 100);\n    }\n}\nKpiAlertDialog.defaultProps = {\n    isAlertLoading: false,\n    isKpiFormatLoading: false,\n    thresholdPlaceholder: \"\",\n    isDateFilterIgnored: false,\n    isThresholdRepresentingPercent: false,\n    filters: [],\n    isAlertDialogOpening: false,\n    alertDeletingStatus: \"idle\",\n    alertSavingStatus: \"idle\",\n    alertUpdatingStatus: \"idle\",\n};\nexport { KpiAlertDialog };\nexport default injectIntl(KpiAlertDialog);\n//# sourceMappingURL=KpiAlertDialog.js.map","// (C) 2007-2022 GoodData Corporation\nimport { absoluteDateFilterValues, areObjRefsEqual, attributeElementsIsEmpty, filterAttributeElements, filterIsEmpty, filterObjRef, isAllTimeDateFilter, isAttributeElementsByRef, isAttributeFilter, isDateFilter, isNegativeAttributeFilter, isRelativeDateFilter, relativeDateFilterValues, isDashboardAttributeFilter, isDashboardDateFilter, } from \"@gooddata/sdk-model\";\nimport isEqual from \"lodash/isEqual.js\";\nimport last from \"lodash/last.js\";\nimport sortBy from \"lodash/sortBy.js\";\nexport function isKpiAlertDateFilterSameAsDashboard(alert, appliedFilters) {\n    var _a, _b, _c;\n    const alertDateFilter = (_a = alert === null || alert === void 0 ? void 0 : alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters.find(isDashboardDateFilter);\n    const appliedDateFilter = last(appliedFilters.filter(isDateFilter));\n    if (!alertDateFilter) {\n        return !appliedDateFilter || isAllTimeDateFilter(appliedDateFilter);\n    }\n    if (!appliedDateFilter || isAllTimeDateFilter(appliedDateFilter)) {\n        return false;\n    }\n    if (isRelativeDateFilter(appliedDateFilter)) {\n        const { from, granularity, to } = relativeDateFilterValues(appliedDateFilter);\n        const sameType = alertDateFilter.dateFilter.type === \"relative\";\n        const sameFrom = ((_b = alertDateFilter.dateFilter.from) === null || _b === void 0 ? void 0 : _b.toString()) === from.toString();\n        const sameTo = ((_c = alertDateFilter.dateFilter.to) === null || _c === void 0 ? void 0 : _c.toString()) === to.toString();\n        const sameGranularity = alertDateFilter.dateFilter.granularity === granularity;\n        return [sameType, sameFrom, sameTo, sameGranularity].every(Boolean);\n    }\n    else {\n        const { from, to } = absoluteDateFilterValues(appliedDateFilter);\n        const sameType = alertDateFilter.dateFilter.type === \"absolute\";\n        const sameFrom = alertDateFilter.dateFilter.from === from;\n        const sameTo = alertDateFilter.dateFilter.to === to;\n        return [sameType, sameFrom, sameTo].every(Boolean);\n    }\n}\nfunction areKpiAlertAttributeFiltersSameAsDashboard(alert, appliedFilters) {\n    var _a, _b;\n    const alertAttributeFilters = (_b = (_a = alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters.filter(isDashboardAttributeFilter)) !== null && _b !== void 0 ? _b : [];\n    const appliedAttributeFilters = appliedFilters.filter(isAttributeFilter);\n    // empty filter is modelled as negative filter with no elements\n    const alertAttributeFiltersWithoutEmpty = alertAttributeFilters.filter((filter) => !(filter.attributeFilter.negativeSelection &&\n        attributeElementsIsEmpty(filter.attributeFilter.attributeElements)));\n    const appliedAttributeFiltersWithoutEmpty = appliedAttributeFilters.filter((filter) => !(isNegativeAttributeFilter(filter) && filterIsEmpty(filter)));\n    // the filters are considered the same if the count of non-empty filters is matching\n    // and every filter in alert has an equivalent in the applied filters\n    return (appliedAttributeFiltersWithoutEmpty.length === alertAttributeFiltersWithoutEmpty.length &&\n        appliedAttributeFiltersWithoutEmpty.every((filter) => {\n            const displayForm = filterObjRef(filter);\n            const found = alertAttributeFiltersWithoutEmpty.find((alertFilter) => areObjRefsEqual(alertFilter.attributeFilter.displayForm, displayForm));\n            if (!found) {\n                return false;\n            }\n            const negativeSelectionSame = found.attributeFilter.negativeSelection === isNegativeAttributeFilter(filter);\n            const filterElements = filterAttributeElements(filter);\n            const elementsSame = isAttributeElementsByRef(filterElements) && // TODO what about filters by value?\n                isAttributeElementsByRef(found.attributeFilter.attributeElements) && // TODO what about filters by value?\n                isEqual(sortBy(found.attributeFilter.attributeElements.uris), sortBy(filterElements.uris));\n            return negativeSelectionSame && elementsSame;\n        }));\n}\nexport function areKpiAlertFiltersSameAsDashboard(alert, appliedFilters) {\n    return (!!alert &&\n        isKpiAlertDateFilterSameAsDashboard(alert, appliedFilters) &&\n        areKpiAlertAttributeFiltersSameAsDashboard(alert, appliedFilters));\n}\n//# sourceMappingURL=filterUtils.js.map","import { __rest } from \"tslib\";\n// (C) 2021-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useDashboardSelector, selectCatalogDateDatasets, } from \"../../../../model/index.js\";\nimport { enrichBrokenAlertsInfo, KpiAlertDialog } from \"./KpiAlerts/index.js\";\nimport { useBrokenAlertFiltersMeta } from \"./useBrokenAlertFiltersMeta.js\";\nexport const KpiAlertDialogWrapper = (props) => {\n    const { brokenAlertFiltersBasicInfo, backend, workspace } = props, restProps = __rest(props, [\"brokenAlertFiltersBasicInfo\", \"backend\", \"workspace\"]);\n    const intl = useIntl();\n    const dateDatasets = useDashboardSelector(selectCatalogDateDatasets);\n    const { result: brokenAlertFiltersMeta, status } = useBrokenAlertFiltersMeta({\n        dateDatasets,\n        backend,\n        workspace,\n        brokenAlertFilters: brokenAlertFiltersBasicInfo,\n    });\n    const brokenAlertFilters = useMemo(() => {\n        if (!brokenAlertFiltersMeta) {\n            return null;\n        }\n        return enrichBrokenAlertsInfo(brokenAlertFiltersBasicInfo, intl, restProps.dateFormat, brokenAlertFiltersMeta.dateDatasets, brokenAlertFiltersMeta.attributeFiltersMeta);\n    }, [brokenAlertFiltersBasicInfo, brokenAlertFiltersMeta, intl, restProps.dateFormat]);\n    return (React.createElement(KpiAlertDialog, Object.assign({}, restProps, { isAlertDialogOpening: status === \"loading\", brokenAlertFilters: brokenAlertFilters })));\n};\n//# sourceMappingURL=KpiAlertDialogWrapper.js.map","// (C) 2021-2022 GoodData Corporation\nimport { NotSupported, } from \"@gooddata/sdk-backend-spi\";\nimport { useBackendStrict, useCancelablePromise, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport { isAttributeElementsByRef, objRefToString, } from \"@gooddata/sdk-model\";\nimport { isBrokenAlertAttributeFilterInfo } from \"../../../../model/index.js\";\n/**\n * the amount of elements to load, this should be small enough to be efficient,\n * and large enough to always be longer than the broken alert filters display\n */\nconst DEFAULT_ATTRIBUTE_ELEMENT_COUNT = 20;\n/**\n * @internal\n */\nexport function useBrokenAlertFiltersMeta({ backend, brokenAlertFilters, dateDatasets, workspace, onCancel, onError, onLoading, onPending, onSuccess, }) {\n    const effectiveBackend = useBackendStrict(backend, \"useBrokenAlertFiltersMeta\");\n    const effectiveWorkspace = useWorkspaceStrict(workspace, \"useBrokenAlertFiltersMeta\");\n    const promise = brokenAlertFilters\n        ? async () => {\n            const filtersToLoad = brokenAlertFilters.filter(isBrokenAlertAttributeFilterInfo);\n            const filterDataPromise = Promise.all(filtersToLoad.map(async (filter) => {\n                const { attributeFilter } = filter.alertFilter;\n                if (!isAttributeElementsByRef(attributeFilter.attributeElements)) {\n                    throw new NotSupported(\"Only URI attribute filters are supported in useBrokenAlertFiltersMeta\");\n                }\n                const displayForm = attributeFilter.displayForm;\n                const attributesService = effectiveBackend.workspace(effectiveWorkspace).attributes();\n                const elementsQueryOptions = {\n                    elements: attributeFilter.negativeSelection\n                        ? undefined // for negative filters we need to load the items NOT selected, however there is no way of doing that, so we load everything\n                        : effectiveBackend.capabilities.supportsElementUris\n                            ? {\n                                uris: attributeFilter.attributeElements.uris,\n                            }\n                            : {\n                                primaryValues: attributeFilter.attributeElements.uris,\n                            },\n                    includeTotalCountWithoutFilters: true,\n                };\n                const [elements, displayFormData] = await Promise.all([\n                    attributesService\n                        .elements()\n                        .forDisplayForm(displayForm)\n                        .withLimit(DEFAULT_ATTRIBUTE_ELEMENT_COUNT)\n                        .withOptions(elementsQueryOptions)\n                        .query(),\n                    attributesService.getAttributeDisplayForm(displayForm),\n                ]);\n                const attribute = await attributesService.getAttribute(displayFormData.attribute);\n                return {\n                    elements,\n                    displayForm,\n                    title: attribute.title,\n                };\n            }));\n            const filterData = await filterDataPromise;\n            const attributeFiltersMeta = filterData.reduce((acc, curr) => {\n                acc[objRefToString(curr.displayForm)] = {\n                    title: curr.title,\n                    totalElementsCount: curr.elements.totalCount,\n                    validElements: curr.elements.items,\n                };\n                return acc;\n            }, {});\n            return {\n                attributeFiltersMeta,\n                dateDatasets: dateDatasets.map((ds) => ds.dataSet),\n            };\n        }\n        : null;\n    return useCancelablePromise({ promise, onCancel, onError, onLoading, onPending, onSuccess }, [\n        effectiveBackend,\n        effectiveWorkspace,\n        brokenAlertFilters,\n    ]);\n}\n//# sourceMappingURL=useBrokenAlertFiltersMeta.js.map","// (C) 2021-2022 GoodData Corporation\nimport { UnexpectedError } from \"@gooddata/sdk-backend-spi\";\nimport { areObjRefsEqual, attributeElementsCount, attributeElementsIsEmpty, isAttributeElementsByRef, objRefToString, } from \"@gooddata/sdk-model\";\nimport { translateDateFilter } from \"./translationUtils.js\";\nimport { isBrokenAlertAttributeFilterInfo, isBrokenAlertDateFilterInfo, } from \"../../../../../../model/index.js\";\n/**\n * Takes basic broken alert info and adds additional information used for displaying of such filters to the user.\n *\n * @param brokenAlertFilters - the basic broken alert filters info to enrich\n * @param intl - the intl object used\n * @param dateFormat - the date format to be used\n * @param dateDataSets - all available date data sets\n * @param attributeFiltersMeta - additional information about attribute filters (see {@link IAttributeFilterMetaCollection} for details)\n */\nexport function enrichBrokenAlertsInfo(brokenAlertFilters, intl, dateFormat, dateDataSets, attributeFiltersMeta) {\n    return brokenAlertFilters.map((brokenFilter) => {\n        if (isBrokenAlertAttributeFilterInfo(brokenFilter)) {\n            return enrichBrokenAttributeFilter(brokenFilter, attributeFiltersMeta);\n        }\n        if (isBrokenAlertDateFilterInfo(brokenFilter)) {\n            return enrichBrokenDateFilter(brokenFilter, intl, dateFormat, dateDataSets);\n        }\n        throw new UnexpectedError(\"Unknown broken alert filter type.\");\n    });\n}\nfunction enrichBrokenDateFilter(brokenFilter, intl, dateFormat, dateDataSets) {\n    var _a;\n    const { alertFilter, brokenType } = brokenFilter;\n    const dateFilterTitle = translateDateFilter(alertFilter, intl, dateFormat);\n    const matchingDateDataset = dateDataSets.find((dataset) => areObjRefsEqual(dataset, alertFilter.dateFilter.dataSet));\n    return {\n        type: \"date\",\n        brokenType: brokenType,\n        dateFilterTitle,\n        title: (_a = matchingDateDataset === null || matchingDateDataset === void 0 ? void 0 : matchingDateDataset.title) !== null && _a !== void 0 ? _a : intl.formatMessage({ id: \"kpiAlertDialog.brokenAlertDefaultDateLabel\" }),\n    };\n}\nfunction enrichBrokenAttributeFilter(brokenFilter, attributeFiltersMeta) {\n    const { alertFilter, brokenType } = brokenFilter;\n    const metaKey = objRefToString(alertFilter.attributeFilter.displayForm);\n    const meta = attributeFiltersMeta[metaKey];\n    const isNegative = alertFilter.attributeFilter.negativeSelection;\n    const totalCount = meta.totalElementsCount;\n    const elements = meta.validElements.filter((element) => {\n        const isInSelected = isAttributeElementsByRef(alertFilter.attributeFilter.attributeElements)\n            ? alertFilter.attributeFilter.attributeElements.uris.some((uri) => uri === element.uri)\n            : alertFilter.attributeFilter.attributeElements.values.some((value) => value === element.title);\n        return isInSelected !== isNegative;\n    });\n    const selection = elements.map((el) => el.title).join(\", \");\n    const title = meta.title;\n    const selectedCount = attributeElementsCount(alertFilter.attributeFilter.attributeElements);\n    return {\n        type: \"attribute\",\n        brokenType: brokenType,\n        isAllSelected: isNegative && attributeElementsIsEmpty(alertFilter.attributeFilter.attributeElements),\n        selection,\n        selectionSize: isNegative ? totalCount - selectedCount : selectedCount,\n        title,\n    };\n}\n//# sourceMappingURL=brokenFilterUtils.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useCallback, useState } from \"react\";\nimport { createAlert, updateAlert, removeAlerts, dispatchAndWaitFor, useDashboardDispatch, } from \"../../../../model/index.js\";\nfunction useKpiAlertOperation(commandCreator, onSuccess) {\n    const [status, setStatus] = useState(\"idle\");\n    const dispatch = useDashboardDispatch();\n    const run = useCallback((...args) => {\n        setStatus(\"inProgress\");\n        dispatchAndWaitFor(dispatch, commandCreator(...args))\n            .then(() => {\n            setStatus(\"idle\");\n            onSuccess();\n        })\n            .catch(() => setStatus(\"error\"));\n    }, [onSuccess]);\n    return [status, run];\n}\nexport const useKpiAlertOperations = (closeAlertDialog) => {\n    const [creatingStatus, onCreateAlert] = useKpiAlertOperation(createAlert, closeAlertDialog);\n    const [updatingStatus, onUpdateAlert] = useKpiAlertOperation(updateAlert, closeAlertDialog);\n    const [removingStatus, onRemoveAlerts] = useKpiAlertOperation(removeAlerts, closeAlertDialog);\n    const onRemoveAlert = useCallback((alert) => {\n        onRemoveAlerts([alert.ref]);\n    }, [onRemoveAlerts]);\n    return {\n        onCreateAlert,\n        creatingStatus,\n        onUpdateAlert,\n        updatingStatus,\n        onRemoveAlert,\n        removingStatus,\n    };\n};\n//# sourceMappingURL=useKpiAlertOperations.js.map","import { __rest } from \"tslib\";\n// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DashboardItemBase } from \"./DashboardItemBase.js\";\nexport const DashboardItemKpi = (_a) => {\n    var { visualizationClassName } = _a, props = __rest(_a, [\"visualizationClassName\"]);\n    return React.createElement(DashboardItemBase, Object.assign({}, props, { visualizationClassName: cx(\"kpi\", visualizationClassName) }));\n};\n//# sourceMappingURL=DashboardItemKpi.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { areObjRefsEqual, objRefToString } from \"@gooddata/sdk-model\";\nimport { stringUtils } from \"@gooddata/util\";\nimport { useDashboardSelector, selectCatalogMeasures, useDashboardUserInteraction, } from \"../../../../../model/index.js\";\nimport { DescriptionClickTrigger } from \"../../../description/DescriptionClickTrigger.js\";\nconst getKpiMetricDescription = (metrics, ref) => {\n    var _a;\n    return (_a = metrics.find((metric) => areObjRefsEqual(metric.measure.ref, ref))) === null || _a === void 0 ? void 0 : _a.measure.description;\n};\nexport const KpiDescriptionTrigger = (props) => {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const { kpi } = props;\n    const visible = (_c = (_b = (_a = kpi.configuration) === null || _a === void 0 ? void 0 : _a.description) === null || _b === void 0 ? void 0 : _b.visible) !== null && _c !== void 0 ? _c : true;\n    const metrics = useDashboardSelector(selectCatalogMeasures);\n    const description = ((_e = (_d = kpi.configuration) === null || _d === void 0 ? void 0 : _d.description) === null || _e === void 0 ? void 0 : _e.source) === \"kpi\"\n        ? kpi.description\n        : getKpiMetricDescription(metrics, kpi.kpi.metric);\n    const trimmedDescription = description === null || description === void 0 ? void 0 : description.trim();\n    const kpiRefAsString = kpi.ref ? objRefToString(kpi.ref) : \"\";\n    const userInteraction = useDashboardUserInteraction();\n    const eventPayload = {\n        from: \"kpi\",\n        type: ((_g = (_f = kpi.configuration) === null || _f === void 0 ? void 0 : _f.description) === null || _g === void 0 ? void 0 : _g.source) === \"kpi\" ? \"custom\" : \"inherit\",\n        description: trimmedDescription,\n    };\n    if (visible && trimmedDescription && trimmedDescription !== \"\") {\n        return (React.createElement(DescriptionClickTrigger, { className: `kpi-description-${stringUtils.simplifyText(kpiRefAsString)}`, description: trimmedDescription, onOpen: () => userInteraction.descriptionTooltipOpened(eventPayload) }));\n    }\n    return null;\n};\n//# sourceMappingURL=KpiDescriptionTrigger.js.map","// (C) 2007-2023 GoodData Corporation\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { isNoDataSdkError } from \"@gooddata/sdk-ui\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { DashboardItemKpi } from \"../../../../presentationComponents/index.js\";\nimport { isAlertingTemporarilyDisabledForGivenFilter } from \"./utils/filterUtils.js\";\nimport { KpiDescriptionTrigger } from \"./KpiDescriptionTrigger.js\";\n// adapted from jQuery:\n// https://github.com/jquery/jquery/blob/a503c691dc06c59acdafef6e54eca2613c6e4032/src/offset.js#L83-L97\nfunction getNodeDocumentRelativeOffsetTop(node) {\n    var _a;\n    // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n    // Support: IE <=11+\n    // Running getBoundingClientRect on a\n    // disconnected node in IE throws an error\n    if (!node.getClientRects().length) {\n        return 0;\n    }\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = node.getBoundingClientRect();\n    const win = node.ownerDocument.defaultView;\n    return rect.top + ((_a = win === null || win === void 0 ? void 0 : win.pageYOffset) !== null && _a !== void 0 ? _a : 0);\n}\nconst disabledBubbleAlignPoints = [{ align: \"cr cl\" }, { align: \"cl cr\" }];\nconst enabledBubbleAlignPoints = [{ align: \"tc bc\" }, { align: \"tc br\" }];\nclass DashboardItemWithKpiAlert extends Component {\n    constructor() {\n        super(...arguments);\n        this.timeouts = {};\n        this.isScrolledToHighlightedAlert = false;\n        this.node = React.createRef();\n        this.state = {\n            isKpiAlertAfterSaving: false,\n            isKpiAlertAfterDeleting: false,\n            isAlertHighlighted: false,\n        };\n        this.renderAlertBox = () => {\n            const isAlertingTemporarilyDisabled = isAlertingTemporarilyDisabledForGivenFilter(this.props.kpi, this.props.filters, this.props.userWorkspaceSettings);\n            const alertIconClasses = cx(\"dash-item-action\", \"dash-item-action-alert\", \"s-dash-item-action-alert\", \"gd-icon-bell\", {\n                \"alert-set\": this.state.isKpiAlertAfterSaving,\n                \"alert-deleted\": this.state.isKpiAlertAfterDeleting,\n            });\n            // TODO: Remove \"isAlertingTemporarilyDisabledForGivenFilter\" when alerts support absolute filters (RAIL-1456, RAIL-1457).\n            //       When alert is set, we allow opening the alert box so user can edit/delete it.\n            if (this.props.isReadOnlyMode ||\n                !this.props.canSetAlert ||\n                (isAlertingTemporarilyDisabled && !this.props.alert)) {\n                return (React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0, tagName: \"div\", className: cx(alertIconClasses, \"disabled\") },\n                    React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: disabledBubbleAlignPoints }, this.getBubbleMessage(isAlertingTemporarilyDisabled))));\n            }\n            return (React.createElement(\"div\", { onClick: this.onAlertDialogOpenClick },\n                React.createElement(BubbleHoverTrigger, { className: alertIconClasses, showDelay: 500, hideDelay: 0, tagName: \"div\" },\n                    React.createElement(Bubble, { className: \"bubble-primary\", alignPoints: enabledBubbleAlignPoints },\n                        React.createElement(FormattedMessage, { id: \"kpi.alertBox.title\" })))));\n        };\n        this.onAlertDialogOpenClick = () => {\n            this.props.onAlertDialogOpenClick();\n        };\n    }\n    componentDidMount() {\n        // handle cases when this component is rendered already highlighted\n        if (this.props.isAlertHighlighted) {\n            this.updateStatePropertyForTime(\"isAlertHighlighted\", 5000);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.isKpiAlertSaved(nextProps)) {\n            this.updateStatePropertyForTime(\"isKpiAlertAfterSaving\", 1000);\n        }\n        if (this.isKpiAlertDeleted(nextProps)) {\n            this.updateStatePropertyForTime(\"isKpiAlertAfterDeleting\", 1000);\n        }\n        if (!this.props.isAlertHighlighted && nextProps.isAlertHighlighted) {\n            this.updateStatePropertyForTime(\"isAlertHighlighted\", 5000);\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.isAlertHighlighted && !this.isScrolledToHighlightedAlert) {\n            this.isScrolledToHighlightedAlert = true;\n            const node = this.node.current;\n            if (node) {\n                window.scrollTo(0, getNodeDocumentRelativeOffsetTop(node));\n            }\n        }\n    }\n    componentWillUnmount() {\n        this.clearUpdatingTimeout();\n    }\n    // toggle property to true for given amount of time\n    updateStatePropertyForTime(name, timeout) {\n        const { isKpiAlertAfterSaving, isKpiAlertAfterDeleting, isAlertHighlighted } = this.state;\n        this.clearUpdatingTimeout(name);\n        this.setState({\n            isKpiAlertAfterSaving,\n            isKpiAlertAfterDeleting,\n            isAlertHighlighted,\n            [name]: true,\n        });\n        this.timeouts[name] = setTimeout(() => {\n            this.setState({\n                isKpiAlertAfterSaving,\n                isKpiAlertAfterDeleting,\n                isAlertHighlighted,\n                [name]: false,\n            });\n        }, timeout);\n    }\n    clearUpdatingTimeout(name) {\n        if (name && this.timeouts[name]) {\n            clearTimeout(this.timeouts[name]);\n            delete this.timeouts[name];\n        }\n        else {\n            Object.keys(this.timeouts).forEach((key) => clearTimeout(this.timeouts[key]));\n            this.timeouts = {};\n        }\n    }\n    isKpiAlertSaved(nextProps) {\n        return (!this.state.isKpiAlertAfterSaving &&\n            this.props.alertSavingStatus === \"inProgress\" &&\n            nextProps.alertSavingStatus === \"idle\");\n    }\n    isKpiAlertDeleted(nextProps) {\n        return (!this.state.isKpiAlertAfterDeleting &&\n            this.props.alertDeletingStatus === \"inProgress\" &&\n            nextProps.alertDeletingStatus === \"idle\");\n    }\n    getClassNames() {\n        var _a;\n        const { kpiAlertResult } = this.props;\n        const isNoData = isNoDataSdkError(this.props.alertExecutionError);\n        const hasEvaluationResult = isNoData || (kpiAlertResult === null || kpiAlertResult === void 0 ? void 0 : kpiAlertResult.measureResult) !== undefined;\n        const content = cx(this.props.contentClassName, {\n            \"is-alert-dialog\": this.props.isAlertDialogOpen,\n            \"has-set-alert\": !!this.props.alert,\n            \"is-alert-triggered\": hasEvaluationResult && ((_a = this.props.alert) === null || _a === void 0 ? void 0 : _a.isTriggered) && !this.props.suppressAlertTriggered,\n            \"is-alert-broken\": hasEvaluationResult && this.props.isAlertBroken,\n            \"is-alert-highlighted\": this.state.isAlertHighlighted,\n            \"is-alert-evaluating\": this.props.isAlertExecutionLoading,\n        });\n        const kpi = cx(this.props.kpiClassName, \"s-dashboard-kpi-component\", \"widget-loaded\", \"visualization\", {\n            \"kpi-with-pop\": this.props.kpi.kpi.comparisonType !== \"none\",\n            \"content-loading\": this.props.isLoading,\n            \"content-loaded\": !this.props.isLoading,\n        });\n        return {\n            content,\n            kpi,\n        };\n    }\n    getBubbleMessage(isAlertingTemporarilyDisabled) {\n        const { isReadOnlyMode } = this.props;\n        if (isReadOnlyMode) {\n            return React.createElement(FormattedMessage, { id: \"kpi.alertBox.disabledInReadOnly\" });\n        }\n        if (isAlertingTemporarilyDisabled) {\n            return React.createElement(FormattedMessage, { id: \"visualization.alert_not_supported\" });\n        }\n        return React.createElement(FormattedMessage, { id: \"kpi.alertBox.unverifiedEmail\" });\n    }\n    render() {\n        const classnames = this.getClassNames();\n        return (React.createElement(DashboardItemKpi, { contentClassName: classnames.content, visualizationClassName: classnames.kpi, contentRef: this.node, renderAfterContent: () => this.props.isAlertDialogOpen && this.props.renderAlertDialog(), renderBeforeVisualization: () => {\n                var _a;\n                return !this.props.suppressDescriptionTrigger &&\n                    ((_a = this.props.userWorkspaceSettings) === null || _a === void 0 ? void 0 : _a.enableDescriptions) ? (React.createElement(KpiDescriptionTrigger, { kpi: this.props.kpi })) : null;\n            }, renderHeadline: (clientHeight) => (React.createElement(React.Fragment, null,\n                this.renderAlertBox(),\n                this.props.renderHeadline(clientHeight))), isSelectable: this.props.isSelectable, isSelected: this.props.isSelected, onSelected: this.props.onSelected }, this.props.children));\n    }\n}\nDashboardItemWithKpiAlert.defaultProps = {\n    isAlertHighlighted: false,\n    filters: [],\n    alertDeletingStatus: \"idle\",\n    alertSavingStatus: \"idle\",\n    alertUpdatingStatus: \"idle\",\n    suppressAlertTriggered: false,\n    suppressDescriptionTrigger: false,\n    isReadOnlyMode: false,\n};\nexport { DashboardItemWithKpiAlert };\n//# sourceMappingURL=DashboardItemWithKpiAlert.js.map","import { isAbsoluteDateFilter, isAllTimeDateFilter, isDateFilter, isRelativeDateFilter, relativeDateFilterValues, } from \"@gooddata/sdk-model\";\nimport last from \"lodash/last.js\";\nexport function isAlertingTemporarilyDisabledForGivenFilter(kpi, filters, userWorkspaceSettings) {\n    const hasDateDataSet = !!kpi.dateDataSet;\n    if (!hasDateDataSet) {\n        // for KPI's not connected to a dateDataSet, the filter config is irrelevant -> alerts are never disabled\n        return false;\n    }\n    const effectiveDateFilter = last(filters.filter(isDateFilter));\n    if (!effectiveDateFilter || isAllTimeDateFilter(effectiveDateFilter)) {\n        return false;\n    }\n    const isAfmExecutorEnabled = !!(userWorkspaceSettings === null || userWorkspaceSettings === void 0 ? void 0 : userWorkspaceSettings[\"kpi.alerting.useAfmExecutor\"]);\n    if (isAfmExecutorEnabled) {\n        // AfmExecutor supports all filters except static ranges\n        return isAbsoluteDateFilter(effectiveDateFilter);\n    }\n    else {\n        // we only allow the alerts for backwards-compatible filters now\n        // i.e. relative presets without exclude current period selected\n        if (!isRelativeDateFilter(effectiveDateFilter)) {\n            return true;\n        }\n        const { from, to } = relativeDateFilterValues(effectiveDateFilter);\n        const endsInPreviousPeriod = to === -1; // ends in previous period\n        const isLongerThanOnePeriod = from !== to; // but is not only that period (e.g. last year)\n        return endsInPreviousPeriod && isLongerThanOnePeriod;\n    }\n}\n//# sourceMappingURL=filterUtils.js.map","import { DataViewFacade, useBackendStrict, useWorkspaceStrict, useResolveValuesWithPlaceholders, useCancelablePromise, convertError, } from \"../base/index.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { createExecution } from \"./createExecution.js\";\n/**\n * @internal\n */\nfunction isExecutionConfiguration(obj) {\n    return !isEmpty(obj) && !!(obj === null || obj === void 0 ? void 0 : obj.seriesBy);\n}\n/**\n * React hook to get data for a specific execution.\n *\n * @public\n */\nexport function useExecutionDataView(config, deps) {\n    var _a, _b, _c;\n    const { execution, window, onCancel, onError, onLoading, onPending, onSuccess } = config;\n    const backend = useBackendStrict(config.backend, \"useExecutionDataView\");\n    const workspace = useWorkspaceStrict(config.workspace, \"useExecutionDataView\");\n    const effectiveDeps = deps !== null && deps !== void 0 ? deps : [];\n    const propsToResolve = getExecutionConfigurationProps(config.execution);\n    const [seriesBy, slicesBy, totals, filters, sortBy] = useResolveValuesWithPlaceholders([\n        propsToResolve.seriesBy,\n        propsToResolve.slicesBy,\n        propsToResolve.totals,\n        propsToResolve.filters,\n        propsToResolve.sortBy,\n    ], propsToResolve.placeholdersResolutionContext);\n    const preparedExecution = isExecutionConfiguration(execution)\n        ? createExecution(Object.assign(Object.assign({}, execution), { seriesBy: seriesBy, slicesBy,\n            totals,\n            filters,\n            sortBy,\n            backend,\n            workspace }))\n        : execution;\n    return useCancelablePromise({\n        promise: preparedExecution\n            ? () => preparedExecution\n                .execute()\n                .then((executionResult) => window\n                ? executionResult.readWindow(window.offset, window.size)\n                : executionResult.readAll())\n                .then((dataView) => {\n                return DataViewFacade.for(dataView);\n            })\n                .catch((error) => {\n                throw convertError(error);\n            })\n            : null,\n        onCancel,\n        onError,\n        onLoading,\n        onPending,\n        onSuccess,\n    }, [\n        backend,\n        workspace,\n        (_a = preparedExecution === null || preparedExecution === void 0 ? void 0 : preparedExecution.fingerprint()) !== null && _a !== void 0 ? _a : \"__executionFingerprint__\",\n        (_b = window === null || window === void 0 ? void 0 : window.offset) !== null && _b !== void 0 ? _b : \"__offset__\",\n        (_c = window === null || window === void 0 ? void 0 : window.size) !== null && _c !== void 0 ? _c : \"__size__\",\n        ...effectiveDeps,\n    ]);\n}\n/**\n * @internal\n */\nfunction getExecutionConfigurationProps(execution) {\n    if (isExecutionConfiguration(execution)) {\n        return execution;\n    }\n    return {};\n}\n//# sourceMappingURL=useExecutionDataView.js.map","// (C) 2019-2022 GoodData Corporation\nimport { isAttribute, isMeasure, MeasureGroupIdentifier, newDimension, newTwoDimensional, } from \"@gooddata/sdk-model\";\nimport compact from \"lodash/compact.js\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport { invariant } from \"ts-invariant\";\n/**\n * When caller desires just data series and no slicing, create a single-dim result.\n */\nfunction seriesOnlyDim(seriesBy) {\n    return [\n        newDimension(compact([\n            ...seriesBy.filter(isAttribute),\n            // only include MeasureGroupIdentifier if there are some measures, otherwise the execution will always fail on the backend\n            seriesBy.some(isMeasure) && MeasureGroupIdentifier,\n        ])),\n    ];\n}\n/**\n * When caller desires data series to be sliced further by some attributes (and perhaps with totals as well)\n * then create two-dim result resembling a pivot table:\n *\n * -  slices are in rows (first dim)\n * -  measures & scoping attributes will be in columns (second dim)\n */\nfunction seriesAndSlicesDim(seriesBy, slices, totals) {\n    return newTwoDimensional([...slices, ...totals], compact([\n        ...seriesBy.filter(isAttribute),\n        // only include MeasureGroupIdentifier if there are some measures, otherwise the execution will always fail on the backend\n        seriesBy.some(isMeasure) && MeasureGroupIdentifier,\n    ]));\n}\n/**\n * Given execute props, this will prepare execution to send to backend.\n *\n * @param options - create execution options\n * @internal\n */\nexport function createExecution(options) {\n    const { backend, workspace, seriesBy = [], slicesBy = [], filters = [], sortBy = [], totals = [], componentName = \"Execution\", } = options;\n    invariant(backend && workspace, \"backend and workspace must be either specified explicitly or be provided by context\");\n    const dimensions = isEmpty(slicesBy)\n        ? seriesOnlyDim(seriesBy)\n        : seriesAndSlicesDim(seriesBy, slicesBy, totals);\n    return backend\n        .withTelemetry(componentName, options)\n        .workspace(workspace)\n        .execution()\n        .forItems(seriesBy.concat(slicesBy), filters)\n        .withSorting(...sortBy)\n        .withDimensions(...dimensions);\n}\n//# sourceMappingURL=createExecution.js.map","// (C) 2022 GoodData Corporation\nimport { useMemo } from \"react\";\nimport { isNoDataError } from \"@gooddata/sdk-backend-spi\";\nimport { DataViewFacade, isNoDataSdkError, useExecutionDataView, } from \"@gooddata/sdk-ui\";\nimport compact from \"lodash/compact.js\";\n/**\n * Wrapper around useExecutionDataView that does not treat no data errors as errors.\n * This allows formats for empty values to come into play when no data is returned.\n */\nexport function useKpiExecutionDataView(config) {\n    const { primaryMeasure, backend, effectiveFilters, secondaryMeasure, workspace, shouldLoad } = config;\n    const response = useExecutionDataView({\n        backend,\n        workspace,\n        execution: shouldLoad\n            ? {\n                seriesBy: compact([primaryMeasure, secondaryMeasure]),\n                filters: effectiveFilters,\n            }\n            : undefined,\n    });\n    return useMemo(() => {\n        // do not treat no data as error here to give the user a chance to decide if no data is ok or not\n        // instead return facade for the empty dataView provided by the error (it still has useful info\n        // like measure format, name, etc.)\n        if (response.status === \"error\" &&\n            isNoDataSdkError(response.error) &&\n            isNoDataError(response.error.cause) &&\n            response.error.cause.dataView) {\n            return {\n                result: DataViewFacade.for(response.error.cause.dataView),\n                error: undefined,\n                status: \"success\",\n            };\n        }\n        return response;\n    }, [response]);\n}\n//# sourceMappingURL=useKpiExecutionDataView.js.map","import isNil from \"lodash/isNil.js\";\nimport isNumber from \"lodash/isNumber.js\";\nimport round from \"lodash/round.js\";\nimport { isMeasureFormatInPercent, measureLocalId, } from \"@gooddata/sdk-model\";\nimport { createNumberJsFormatter } from \"@gooddata/sdk-ui\";\nfunction getSeriesResult(series) {\n    if (!series) {\n        return null;\n    }\n    const value = series.dataPoints()[0].rawValue;\n    if (isNil(value)) {\n        return null;\n    }\n    if (isNumber(value)) {\n        return value;\n    }\n    return Number.parseFloat(value);\n}\nfunction getNoDataKpiResult(result, primaryMeasure) {\n    var _a, _b;\n    if (!result) {\n        return;\n    }\n    return {\n        measureDescriptor: result.meta().measureDescriptor(measureLocalId(primaryMeasure)),\n        measureFormat: (_b = (_a = result.meta().measureDescriptor(measureLocalId(primaryMeasure))) === null || _a === void 0 ? void 0 : _a.measureHeaderItem) === null || _b === void 0 ? void 0 : _b.format,\n        measureResult: undefined,\n        measureForComparisonResult: undefined,\n    };\n}\nfunction getKpiResultInner(result, primaryMeasure, secondaryMeasure, separators) {\n    const series = result === null || result === void 0 ? void 0 : result.data({ valueFormatter: createNumberJsFormatter(separators) }).series();\n    const primarySeries = series === null || series === void 0 ? void 0 : series.firstForMeasure(primaryMeasure);\n    if (secondaryMeasure && (result === null || result === void 0 ? void 0 : result.meta().measureDescriptors().length) !== 2) {\n        return undefined;\n    }\n    const secondarySeries = secondaryMeasure ? series === null || series === void 0 ? void 0 : series.firstForMeasure(secondaryMeasure) : undefined;\n    return primarySeries\n        ? {\n            measureDescriptor: primarySeries.descriptor.measureDescriptor,\n            measureFormat: primarySeries.measureFormat(),\n            measureResult: getSeriesResult(primarySeries),\n            measureForComparisonResult: getSeriesResult(secondarySeries),\n        }\n        : undefined;\n}\nexport function getKpiResult(result, primaryMeasure, secondaryMeasure, separators) {\n    return !(result === null || result === void 0 ? void 0 : result.dataView.totalCount[0])\n        ? getNoDataKpiResult(result, primaryMeasure)\n        : getKpiResultInner(result, primaryMeasure, secondaryMeasure, separators);\n}\nexport function getKpiAlertResult(result, primaryMeasure, separators) {\n    const alertSeries = result === null || result === void 0 ? void 0 : result.data({ valueFormatter: createNumberJsFormatter(separators) }).series();\n    return alertSeries\n        ? {\n            measureFormat: alertSeries.count\n                ? alertSeries.firstForMeasure(primaryMeasure).measureFormat()\n                : undefined,\n            measureResult: alertSeries.count\n                ? getSeriesResult(alertSeries.firstForMeasure(primaryMeasure))\n                : 0,\n        }\n        : undefined;\n}\nexport function getAlertThresholdInfo(kpiResult, intl) {\n    const isThresholdRepresentingPercent = (kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureFormat)\n        ? isMeasureFormatInPercent(kpiResult.measureFormat)\n        : false;\n    const value = round((kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult) || 0, 2); // sure about rounding?\n    const thresholdPlaceholder = isThresholdRepresentingPercent\n        ? `${intl.formatMessage({ id: \"kpi.alertBox.example\" })} ${value * 100}`\n        : `${intl.formatMessage({ id: \"kpi.alertBox.example\" })} ${value}`; // TODO fix floating point multiply\n    return {\n        isThresholdRepresentingPercent,\n        thresholdPlaceholder,\n    };\n}\n//# sourceMappingURL=resultUtils.js.map","import { __rest } from \"tslib\";\n// (C) 2021-2022 GoodData Corporation\nimport { NotSupported } from \"@gooddata/sdk-backend-spi\";\nimport { areObjRefsEqual, filterAttributeElements, filterObjRef, isAbsoluteDateFilter, isAttributeElementsByRef, isAttributeFilter, isNegativeAttributeFilter, isRelativeDateFilter, isDateFilterGranularity, isDashboardAttributeFilterReference, isDashboardDateFilter, isDashboardDateFilterReference, } from \"@gooddata/sdk-model\";\n/**\n * Converts a {@link IDashboardFilter} to a {@link FilterContextItem}.\n * @param filter - filter to convert\n */\nexport function dashboardFilterToFilterContextItem(filter) {\n    if (isAttributeFilter(filter)) {\n        const attributeElements = filterAttributeElements(filter);\n        if (!isAttributeElementsByRef(attributeElements)) {\n            // For attributes with a lot of elements, this transformation can be very expensive.\n            // Let's enforce user to provide element uris by himself.\n            throw new NotSupported(\"Attribute filter with text values is not supported. Please provide element uris instead.\");\n        }\n        const filterContextItem = {\n            attributeFilter: {\n                negativeSelection: isNegativeAttributeFilter(filter),\n                displayForm: filterObjRef(filter),\n                attributeElements,\n            },\n        };\n        return filterContextItem;\n    }\n    else if (isAbsoluteDateFilter(filter)) {\n        const filterContextItem = {\n            dateFilter: {\n                type: \"absolute\",\n                granularity: \"GDC.time.date\",\n                from: filter.absoluteDateFilter.from,\n                to: filter.absoluteDateFilter.to,\n                dataSet: filter.absoluteDateFilter.dataSet,\n            },\n        };\n        return filterContextItem;\n    }\n    else if (isRelativeDateFilter(filter)) {\n        if (!isDateFilterGranularity(filter.relativeDateFilter.granularity)) {\n            // Only a subset of granularity can be stored in the filter context.\n            throw new NotSupported(\"Unsupported date filter granularity! Please provide valid date filter granularity. (Check DateFilterGranularity type)\");\n        }\n        const filterContextItem = {\n            dateFilter: {\n                type: \"relative\",\n                granularity: filter.relativeDateFilter.granularity,\n                from: filter.relativeDateFilter.from,\n                to: filter.relativeDateFilter.to,\n                dataSet: filter.relativeDateFilter.dataSet,\n            },\n        };\n        return filterContextItem;\n    }\n    throw new NotSupported(\"Unsupported filter type! Please provide valid dashboard filter.\");\n}\n/**\n * Remove information about the date dataset from Date filters. Attribute filters are returned unchanged.\n * @param filter - filter to strip date dataset from\n */\nexport function stripDateDatasets(filter) {\n    if (!isDashboardDateFilter(filter)) {\n        return filter;\n    }\n    const _a = filter.dateFilter, { dataSet: _ } = _a, rest = __rest(_a, [\"dataSet\"]);\n    return {\n        dateFilter: rest,\n    };\n}\nexport function isAttributeFilterIgnored(widget, displayForm) {\n    return widget.ignoreDashboardFilters.some((filter) => isDashboardAttributeFilterReference(filter) && areObjRefsEqual(filter.displayForm, displayForm));\n}\nexport function isDateFilterIgnored(widget, displayForm) {\n    return widget.ignoreDashboardFilters.some((filter) => isDashboardDateFilterReference(filter) && areObjRefsEqual(filter.dataSet, displayForm));\n}\nexport function isDateFilterIrrelevant(widget) {\n    const dateDataSetRef = widget.dateDataSet;\n    // backward compatibility for old kpis\n    const ignoredOldWay = !!dateDataSetRef && isDateFilterIgnored(widget, dateDataSetRef);\n    // now dataSetRef is cleaned\n    const checkboxEnabled = !!dateDataSetRef;\n    return !checkboxEnabled || ignoredOldWay;\n}\n//# sourceMappingURL=filterUtils.js.map","import { ClientFormatterFacade } from \"@gooddata/number-formatter\";\nimport isNull from \"lodash/isNull.js\";\nexport const HYPHEN = \"–\"; // EN DASH (not usual 'minus')\nexport function formatMetric(number, format, separators) {\n    const convertedValue = ClientFormatterFacade.convertValue(number);\n    const { formattedValue } = ClientFormatterFacade.formatValue(convertedValue, format, separators);\n    return formattedValue;\n}\nexport function isValueUnhandledNull(value, format) {\n    const convertedValue = ClientFormatterFacade.convertValue(value);\n    const { nullConditionFormatter } = ClientFormatterFacade.formatValue(convertedValue, format);\n    return isNull(value) && !nullConditionFormatter;\n}\n//# sourceMappingURL=format.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { PureComponent } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport cx from \"classnames\";\nimport { ResponsiveText, LoadingDots } from \"@gooddata/sdk-ui-kit\";\nimport { calculateHeadlineHeightFontSize } from \"@gooddata/sdk-ui-vis-commons\";\nimport { HYPHEN, formatMetric, isValueUnhandledNull } from \"./utils/format.js\";\nconst NO_DATA_PLACEHOLDER = HYPHEN;\nconst SMALLEST_HEIGHT = 54;\nclass KpiValue extends PureComponent {\n    getKpiValueClassNames() {\n        return cx(\"kpi-value\", {\n            \"is-smallest-height\": this.props.enableCompactSize &&\n                this.props.clientHeight &&\n                this.props.clientHeight < SMALLEST_HEIGHT,\n            \"is-error-value\": !this.props.isLoading && !!this.props.error,\n            \"is-empty-value\": !this.props.isLoading && this.isValueUnhandledNull(),\n        });\n    }\n    getKpiCustomHeightStyles() {\n        if (this.props.enableCompactSize) {\n            const { height } = calculateHeadlineHeightFontSize(this.props.hasComparison, this.props.clientHeight);\n            return {\n                height: `${height}px`,\n                lineHeight: `${height}px`,\n            };\n        }\n        return undefined;\n    }\n    render() {\n        if (this.props.enableCompactSize && !this.props.clientHeight) {\n            return null;\n        }\n        return (React.createElement(TransitionGroup, { style: this.getKpiCustomHeightStyles(), className: this.getKpiValueClassNames() },\n            React.createElement(CSSTransition, { classNames: \"kpi-animation\", timeout: 300, title: this.getTitle() }, this.renderValue())));\n    }\n    renderValue() {\n        const { isLoading, error, disableKpiDrillUnderline, enableCompactSize, clientHeight, intl } = this.props;\n        if (isLoading) {\n            return React.createElement(LoadingDots, { className: \"kpi-value-loading gd-loading-dots-centered\" });\n        }\n        const value = error ? intl.formatMessage({ id: \"error\" }) : this.renderFormattedValue();\n        const valueClassNames = cx(\"kpi-value-value\", \"s-kpi-value\", {\n            \"kpi-link-style-underline\": !disableKpiDrillUnderline,\n        });\n        if (enableCompactSize) {\n            // As clientHeight first render returns undefined, need to wait to have correct value\n            // so we can adjust fontSize and make the calculations accordingly.\n            if (!clientHeight) {\n                return React.createElement(LoadingDots, { className: \"kpi-value-loading gd-loading-dots-centered\" });\n            }\n            const { fontSize } = calculateHeadlineHeightFontSize(this.props.hasComparison, clientHeight);\n            return (React.createElement(\"div\", { style: { fontSize: `${fontSize}px` } },\n                React.createElement(ResponsiveText, null,\n                    React.createElement(\"span\", { className: valueClassNames }, value))));\n        }\n        return (React.createElement(ResponsiveText, null,\n            React.createElement(\"span\", { className: valueClassNames }, value)));\n    }\n    renderFormattedValue() {\n        if (this.isValueUnhandledNull()) {\n            return NO_DATA_PLACEHOLDER;\n        }\n        return formatMetric(this.props.value, this.props.format, this.props.separators);\n    }\n    isValueUnhandledNull() {\n        var _a;\n        return isValueUnhandledNull(this.props.value, (_a = this.props.format) !== null && _a !== void 0 ? _a : \"\");\n    }\n    getTitle() {\n        const { intl } = this.props;\n        if (this.props.isLoading) {\n            return \"\";\n        }\n        if (this.props.error && this.props.errorHelp) {\n            return this.props.errorHelp;\n        }\n        if (this.isValueUnhandledNull()) {\n            return intl.formatMessage({ id: \"kpi.noData\" });\n        }\n        return \"\";\n    }\n}\nKpiValue.defaultProps = {\n    error: null,\n    value: \"\",\n    isLoading: false,\n    disableKpiDrillUnderline: false,\n};\nexport default injectIntl(KpiValue);\n//# sourceMappingURL=KpiValue.js.map","// (C) 2007-2021 GoodData Corporation\nimport isNull from \"lodash/isNull.js\";\nimport { HYPHEN } from \"./format.js\";\nexport const LIMIT = 999;\nfunction getTrend(prev, curr) {\n    const previous = prev || 0;\n    const current = curr || 0;\n    if (previous === current) {\n        return \"neutral\";\n    }\n    else if (previous < current) {\n        return \"up\";\n    }\n    return \"down\";\n}\nfunction isTrendPositive(trend, meaning) {\n    const isPositiveGrowing = trend === \"up\" && meaning === \"growIsGood\";\n    const isPositiveFalling = trend === \"down\" && meaning === \"growIsBad\";\n    return isPositiveGrowing || isPositiveFalling;\n}\nfunction isTrendNegative(trend, meaning) {\n    const isNegativeGrowing = trend === \"up\" && meaning === \"growIsBad\";\n    const isNegativeFalling = trend === \"down\" && meaning === \"growIsGood\";\n    return isNegativeGrowing || isNegativeFalling;\n}\nfunction getMeaning(trend, meaning) {\n    if (trend === \"neutral\") {\n        return \"neutral\";\n    }\n    else if (isTrendPositive(trend, meaning)) {\n        return \"positive\";\n    }\n    else if (isTrendNegative(trend, meaning)) {\n        return \"negative\";\n    }\n    return \"neutral\";\n}\nfunction getPercentageValue(prev, curr) {\n    const previous = prev || 0;\n    const current = curr || 0;\n    if (previous === 0 && current > 0) {\n        return Number.POSITIVE_INFINITY;\n    }\n    else if (previous === 0 && current < 0) {\n        return Number.NEGATIVE_INFINITY;\n    }\n    else if (previous === 0 && current === 0) {\n        return 0;\n    }\n    const percent = Math.abs(previous / 100);\n    const change = current - previous;\n    return Math.round(change / percent);\n}\nfunction getPercentage(previous, current) {\n    if (isNull(previous) && isNull(current)) {\n        return HYPHEN;\n    }\n    const percentageValue = getPercentageValue(previous, current);\n    const isOverLimit = percentageValue > LIMIT;\n    const isUnderLimit = percentageValue < -LIMIT;\n    if (isOverLimit) {\n        return `>${LIMIT}%`;\n    }\n    else if (isUnderLimit) {\n        return `<${-LIMIT}%`;\n    }\n    return `${percentageValue}%`;\n}\nexport function getPopInfo(previous, current, meaning) {\n    const trend = getTrend(previous, current);\n    const trendMeaning = getMeaning(trend, meaning);\n    const percentage = getPercentage(previous, current);\n    return {\n        trend,\n        meaning: trendMeaning,\n        percentage,\n    };\n}\nexport function getErrorPopInfo() {\n    return {\n        trend: \"neutral\",\n        meaning: \"neutral\",\n        percentage: HYPHEN,\n    };\n}\n//# sourceMappingURL=pop.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { PureComponent } from \"react\";\nimport cx from \"classnames\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { ResponsiveText } from \"@gooddata/sdk-ui-kit\";\nimport { formatMetric, HYPHEN, isValueUnhandledNull } from \"./utils/format.js\";\nimport { getErrorPopInfo, getPopInfo } from \"./utils/pop.js\";\nimport { HeadlinePagination, shouldRenderPagination, getHeadlineResponsiveClassName, } from \"@gooddata/sdk-ui-vis-commons\";\nconst LOADING_PLACEHOLDER = \"…\";\nconst NO_DATA_PLACEHOLDER = HYPHEN;\nclass KpiPop extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.kpiSectionItemNode = React.createRef();\n        this.renderPercentage = () => {\n            const popInfo = this.props.disabled || !!this.props.error\n                ? getErrorPopInfo()\n                : getPopInfo(this.props.previousPeriodValue, this.props.currentPeriodValue, this.props.meaning);\n            const tooltip = this.props.isLoading ? \"\" : popInfo.percentage;\n            return (React.createElement(\"dl\", { className: \"gd-flex-item kpi-pop-section-item kpi-pop-change headline-compare-section-item headline-tertiary-item\" },\n                React.createElement(\"div\", { className: \"headline-value-wrapper s-headline-value-wrapper\" },\n                    React.createElement(ResponsiveText, { title: tooltip, tagClassName: `is-kpi-${popInfo.meaning}`, tagName: \"dt\" }, this.renderPercentageValue(popInfo))),\n                React.createElement(\"dd\", null,\n                    React.createElement(FormattedMessage, { id: \"kpiPop.change\" }))));\n        };\n        this.renderPreviousPeriod = () => {\n            return (React.createElement(\"dl\", { className: \"gd-flex-item kpi-pop-section-item kpi-pop-period headline-compare-section-item headline-secondary-item\", title: this.renderFormattedValue() },\n                React.createElement(ResponsiveText, { tagName: \"dt\" }, this.renderPreviousPeriodValue()),\n                this.renderPreviousPeriodName()));\n        };\n    }\n    render() {\n        const { enableCompactSize, clientHeight, clientWidth } = this.props;\n        const pagination = shouldRenderPagination(enableCompactSize, clientWidth, clientHeight);\n        if (pagination) {\n            return (React.createElement(\"div\", { className: \"gd-flex-container headline-compare-section headline-paginated-compare-section\" },\n                React.createElement(HeadlinePagination, { renderSecondaryItem: this.renderPreviousPeriod, renderTertiaryItem: this.renderPercentage })));\n        }\n        return (React.createElement(\"div\", { className: this.getKpiSectionClassName() },\n            this.renderPercentage(),\n            this.renderPreviousPeriod()));\n    }\n    renderPercentageValue(popInfo) {\n        return this.props.isLoading ? (false) : (React.createElement(React.Fragment, null,\n            React.createElement(\"span\", { className: cx(`gd-icon-trend-${popInfo.trend}`, \"gd-kpi-trend-icon\") }),\n            React.createElement(\"span\", null, popInfo.percentage)));\n    }\n    renderPreviousPeriodName() {\n        return this.props.previousPeriodName ? (React.createElement(\"dd\", { className: \"headline-title-wrapper\", ref: this.kpiSectionItemNode, title: this.props.previousPeriodName }, this.props.previousPeriodName)) : (false);\n    }\n    renderPreviousPeriodValue() {\n        if (this.props.isLoading) {\n            return LOADING_PLACEHOLDER;\n        }\n        return this.props.error ? this.formatMessage(\"error\") : this.renderFormattedValue();\n    }\n    renderFormattedValue() {\n        var _a;\n        const value = this.props.previousPeriodValue;\n        if (this.props.disabled || isValueUnhandledNull(value, (_a = this.props.format) !== null && _a !== void 0 ? _a : \"\")) {\n            return NO_DATA_PLACEHOLDER;\n        }\n        return formatMetric(value, this.props.format, this.props.separators);\n    }\n    getKpiSectionClassName() {\n        const { clientWidth } = this.props;\n        const kpiSectionItemNode = this.kpiSectionItemNode.current;\n        const className = \"gd-flex-container headline-compare-section\";\n        const responsiveClassName = getHeadlineResponsiveClassName(clientWidth);\n        if (kpiSectionItemNode && responsiveClassName) {\n            return `${className} ${responsiveClassName}`;\n        }\n        return className;\n    }\n    formatMessage(id) {\n        return this.props.intl.formatMessage({ id });\n    }\n}\nKpiPop.defaultProps = {\n    error: null,\n    disabled: false,\n    isLoading: false,\n    previousPeriodName: \"\",\n    clientWidth: 0,\n    clientHeight: 0,\n    enableCompactSize: false,\n};\nexport default injectIntl(KpiPop);\n//# sourceMappingURL=KpiPop.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport DefaultMeasure from \"react-measure\";\nimport { isGoodDataSdkError, ErrorCodes } from \"@gooddata/sdk-ui\";\nimport { isAllTimeDateFilter, isDateFilter, isKpiWithComparison, } from \"@gooddata/sdk-model\";\nimport KpiValue from \"./KpiValue.js\";\nimport KpiPop from \"./KpiPop.js\";\nimport { isDateFilterIrrelevant } from \"../filterUtils.js\";\nimport { getKpiPopLabel } from \"./utils/translations.js\";\nimport cx from \"classnames\";\nimport { defaultImport } from \"default-import\";\n// There are known compatibility issues between CommonJS (CJS) and ECMAScript modules (ESM).\n// In ESM, default exports of CJS modules are wrapped in default properties instead of being exposed directly.\n// https://github.com/microsoft/TypeScript/issues/52086#issuecomment-1385978414\nconst Measure = defaultImport(DefaultMeasure);\nclass KpiContent extends Component {\n    renderPeriodOverPeriod(clientWidth, clientHeight) {\n        var _a, _b;\n        if (this.props.kpi.kpi.comparisonType === \"none\") {\n            return false;\n        }\n        const { kpiResult, enableCompactSize } = this.props;\n        const isDateFilterNotRelevant = isDateFilterIrrelevant(this.props.kpi);\n        const isDateFilterAllTime = this.props.filters.every((f) => !isDateFilter(f) || isAllTimeDateFilter(f));\n        const dateFilter = this.props.filters.find(isDateFilter); // for now we use the first date filter available for this\n        const popLabel = getKpiPopLabel(dateFilter, this.props.kpi.kpi.comparisonType, this.props.intl);\n        const popDisabled = isDateFilterAllTime || isDateFilterNotRelevant;\n        const isSdkError = isGoodDataSdkError(this.props.error);\n        const isNoData = isSdkError && this.props.error.message === ErrorCodes.NO_DATA;\n        const comparisonMeaning = isKpiWithComparison(this.props.kpi.kpi)\n            ? this.props.kpi.kpi.comparisonDirection\n            : undefined;\n        return (React.createElement(KpiPop, { disabled: popDisabled, isLoading: this.props.isLoading, currentPeriodValue: (_a = kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult) !== null && _a !== void 0 ? _a : null, previousPeriodValue: (_b = kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureForComparisonResult) !== null && _b !== void 0 ? _b : null, previousPeriodName: popLabel, format: kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureFormat, error: !isNoData ? this.props.error : undefined, separators: this.props.separators, meaning: comparisonMeaning, enableCompactSize: enableCompactSize, clientWidth: clientWidth, clientHeight: clientHeight }));\n    }\n    renderValue(clientHeight) {\n        var _a;\n        const { kpiResult, isKpiValueClickDisabled, onKpiValueClick, enableCompactSize, kpi } = this.props;\n        const isSdkError = isGoodDataSdkError(this.props.error);\n        const isNoData = isSdkError && this.props.error.message === ErrorCodes.NO_DATA;\n        const hasComparison = kpi.kpi.comparisonType !== \"none\";\n        const kpiValue = (React.createElement(KpiValue, { isLoading: this.props.isLoading, error: !isNoData ? this.props.error : undefined, errorHelp: this.props.errorHelp, value: (_a = kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult) !== null && _a !== void 0 ? _a : null, format: kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureFormat, separators: this.props.separators, disableKpiDrillUnderline: this.props.isKpiUnderlineHiddenWhenClickable, enableCompactSize: enableCompactSize, clientHeight: clientHeight, hasComparison: hasComparison }));\n        if (onKpiValueClick) {\n            if (isKpiValueClickDisabled) {\n                return React.createElement(\"span\", { className: \"kpi-link s-kpi-link-nonclickable\" }, kpiValue);\n            }\n            else {\n                return (React.createElement(\"a\", { className: \"kpi-link s-kpi-link-clickable\", onClick: this.props.onKpiValueClick }, kpiValue));\n            }\n        }\n        return kpiValue;\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"gd-kpi-widget-content\" },\n            React.createElement(\"div\", { className: cx(\"visualization-content\", { \"in-edit-mode\": this.props.isInEditMode }) },\n                React.createElement(Measure, { client: true }, ({ measureRef, contentRect }) => {\n                    var _a, _b, _c;\n                    return (React.createElement(\"div\", { className: \"gd-visualization-content\", ref: measureRef },\n                        React.createElement(\"div\", { className: \"headline\" },\n                            this.renderValue((_a = contentRect.client) === null || _a === void 0 ? void 0 : _a.height),\n                            this.renderPeriodOverPeriod((_b = contentRect.client) === null || _b === void 0 ? void 0 : _b.width, (_c = contentRect.client) === null || _c === void 0 ? void 0 : _c.height))));\n                }))));\n    }\n}\nKpiContent.defaultProps = {\n    isKpiValueClickDisabled: false,\n    filters: [],\n    isKpiUnderlineHiddenWhenClickable: false,\n};\nexport default injectIntl(KpiContent);\n//# sourceMappingURL=KpiContent.js.map","import { isAllTimeDateFilter, isRelativeDateFilter, relativeDateFilterValues, } from \"@gooddata/sdk-model\";\nconst getGeneralKpiPopLabel = (intl) => intl.formatMessage({ id: \"filters.allTime.previousPeriod\" });\nconst getRelativeFilterKpiPopLabel = (filter, intl) => {\n    const { from, to, granularity } = relativeDateFilterValues(filter);\n    const n = Math.abs(to - from) + 1;\n    switch (granularity) {\n        case \"GDC.time.minute\":\n            return intl.formatMessage({ id: `filters.minute.previousPeriod` }, { n });\n        case \"GDC.time.hour\":\n            return intl.formatMessage({ id: `filters.hour.previousPeriod` }, { n });\n        case \"GDC.time.date\":\n            return intl.formatMessage({ id: `filters.day.previousPeriod` }, { n });\n        case \"GDC.time.week_us\":\n            return intl.formatMessage({ id: `filters.week.previousPeriod` }, { n });\n        case \"GDC.time.month\":\n            return intl.formatMessage({ id: `filters.month.previousPeriod` }, { n });\n        case \"GDC.time.quarter\":\n            return intl.formatMessage({ id: `filters.quarter.previousPeriod` }, { n });\n        case \"GDC.time.year\":\n            return intl.formatMessage({ id: `filters.year.previousPeriod` }, { n });\n        default:\n            return \"\";\n    }\n};\nexport const getKpiPopLabel = (filter, comparisonType, intl) => {\n    if (comparisonType === \"lastYear\") {\n        // This string is meant to be the same no matter the filter\n        return intl.formatMessage({ id: \"filters.allTime.lastYear\" });\n    }\n    if (isRelativeDateFilter(filter) && !isAllTimeDateFilter(filter)) {\n        return getRelativeFilterKpiPopLabel(filter, intl);\n    }\n    return getGeneralKpiPopLabel(intl);\n};\n//# sourceMappingURL=translations.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { KpiContent } from \"./KpiContent/index.js\";\nimport { useDashboardSelector, selectIsInEditMode } from \"../../../../model/index.js\";\n/**\n * @internal\n */\nexport const KpiRenderer = ({ disableDrillUnderline, onDrill, isDrillable, isKpiValueClickDisabled, kpi, kpiResult, filters, separators, enableCompactSize, error, errorHelp, isLoading, }) => {\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const onPrimaryValueClick = useCallback(() => {\n        var _a;\n        if (!isDrillable || !onDrill) {\n            return;\n        }\n        return onDrill({\n            type: \"headline\",\n            element: \"primaryValue\",\n            value: (_a = kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult) === null || _a === void 0 ? void 0 : _a.toString(),\n            intersection: (kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureDescriptor)\n                ? [\n                    {\n                        header: kpiResult.measureDescriptor,\n                    },\n                ]\n                : [],\n        });\n    }, [kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult, kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureDescriptor, isDrillable, onDrill]);\n    return (React.createElement(KpiContent, { isLoading: !!isLoading, kpi: kpi, kpiResult: kpiResult, isKpiUnderlineHiddenWhenClickable: disableDrillUnderline, onKpiValueClick: isDrillable && onDrill ? onPrimaryValueClick : undefined, isKpiValueClickDisabled: isKpiValueClickDisabled, filters: filters, separators: separators, enableCompactSize: enableCompactSize, error: error, errorHelp: errorHelp, isInEditMode: isInEditMode }));\n};\n//# sourceMappingURL=KpiRenderer.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { memo, useCallback, useEffect, useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { invariant } from \"ts-invariant\";\nimport { objRefToString, widgetRef, } from \"@gooddata/sdk-model\";\nimport { convertDrillableItemsToPredicates, isSomeHeaderPredicateMatched, NoDataSdkError, } from \"@gooddata/sdk-ui\";\nimport { OverlayController, OverlayControllerProvider } from \"@gooddata/sdk-ui-kit\";\nimport { filterContextItemsToDashboardFiltersByWidget } from \"../../../../converters/index.js\";\nimport { selectDrillableItems, selectCanCreateScheduledMail, selectSettings, selectCurrentUser, useDashboardAsyncRender, useDashboardSelector, useDashboardUserInteraction, useWidgetExecutionsHandler, selectValidConfiguredDrillsByWidgetRef, uiActions, useDashboardDispatch, selectIsKpiAlertOpenedByWidgetRef, selectIsKpiAlertHighlightedByWidgetRef, selectEnableWidgetCustomHeight, selectDateFormat, useWidgetSelection, } from \"../../../../model/index.js\";\nimport { DashboardItemHeadline } from \"../../../presentationComponents/index.js\";\nimport { KpiAlertDialogWrapper } from \"./KpiAlertDialogWrapper.js\";\nimport { useKpiAlertOperations } from \"./useKpiAlertOperations.js\";\nimport { DashboardItemWithKpiAlert, evaluateAlertTriggered } from \"./KpiAlerts/index.js\";\nimport { useWidgetBrokenAlertsQuery } from \"../../common/useWidgetBrokenAlertsQuery.js\";\nimport { dashboardFilterToFilterContextItem, getAlertThresholdInfo, getKpiAlertResult, getKpiResult, KpiRenderer, stripDateDatasets, useKpiExecutionDataView, } from \"../common/index.js\";\nimport { DASHBOARD_OVERLAYS_FILTER_Z_INDEX } from \"../../../constants/index.js\";\nconst overlayController = OverlayController.getInstance(DASHBOARD_OVERLAYS_FILTER_Z_INDEX);\nconst KpiExecutorCore = (props) => {\n    const { dashboardRef, kpiWidget, backend, workspace, primaryMeasure, secondaryMeasure, effectiveFilters, alert, separators, disableDrillUnderline, isReadOnly, onDrill, onError, onFiltersChange, } = props;\n    const intl = useIntl();\n    const kpiWidgetRef = widgetRef(kpiWidget);\n    const { error, result, status } = useKpiExecutionDataView({\n        backend,\n        workspace,\n        primaryMeasure,\n        secondaryMeasure,\n        effectiveFilters,\n        shouldLoad: true,\n    });\n    const isLoading = status === \"loading\" || status === \"pending\";\n    const { error: alertExecutionError, result: alertExecutionResult, status: alertExecutionStatus, } = useKpiExecutionDataView({\n        backend,\n        workspace,\n        primaryMeasure,\n        effectiveFilters,\n        shouldLoad: true,\n    });\n    const isAlertExecutionLoading = alertExecutionStatus === \"loading\" || alertExecutionStatus === \"pending\";\n    const currentUser = useDashboardSelector(selectCurrentUser);\n    const canCreateScheduledMail = useDashboardSelector(selectCanCreateScheduledMail);\n    const settings = useDashboardSelector(selectSettings);\n    const enableCompactSize = useDashboardSelector(selectEnableWidgetCustomHeight);\n    const dateFormat = useDashboardSelector(selectDateFormat);\n    const drillableItems = useDashboardSelector(selectDrillableItems);\n    const widgetDrills = useDashboardSelector(selectValidConfiguredDrillsByWidgetRef(kpiWidgetRef));\n    const isAlertDialogOpen = useDashboardSelector(selectIsKpiAlertOpenedByWidgetRef(kpiWidgetRef));\n    const isAlertHighlighted = useDashboardSelector(selectIsKpiAlertHighlightedByWidgetRef(kpiWidgetRef));\n    const dispatch = useDashboardDispatch();\n    const openAlertDialog = useCallback(() => {\n        dispatch(uiActions.openKpiAlertDialog(kpiWidgetRef));\n    }, [kpiWidgetRef, dispatch]);\n    const closeAlertDialog = useCallback(() => {\n        dispatch(uiActions.closeKpiAlertDialog());\n    }, [dispatch]);\n    const { result: brokenAlertsBasicInfo } = useWidgetBrokenAlertsQuery(kpiWidget, alert);\n    const isAlertBroken = !!(brokenAlertsBasicInfo === null || brokenAlertsBasicInfo === void 0 ? void 0 : brokenAlertsBasicInfo.length);\n    const executionsHandler = useWidgetExecutionsHandler(widgetRef(kpiWidget));\n    useEffect(() => {\n        const err = error !== null && error !== void 0 ? error : alertExecutionError;\n        if (err) {\n            onError === null || onError === void 0 ? void 0 : onError(err);\n        }\n        // for executions we care only about KPI errors\n        if (error) {\n            executionsHandler.onError(error);\n        }\n    }, [error, alertExecutionError]);\n    useEffect(() => {\n        if (result) {\n            // empty data is considered an error for execution handling\n            if (result.rawData().isEmpty()) {\n                executionsHandler.onError(new NoDataSdkError());\n            }\n            else {\n                executionsHandler.onSuccess(result.result(), result.warnings());\n            }\n        }\n    }, [result]);\n    const handleOnDrill = useCallback((drillContext) => {\n        if (!onDrill) {\n            return false;\n        }\n        return onDrill({\n            dataView: result === null || result === void 0 ? void 0 : result.dataView,\n            drillContext,\n            drillDefinitions: kpiWidget.drills,\n            widgetRef: widgetRef(kpiWidget),\n        });\n    }, [onDrill, result, kpiWidget]);\n    const kpiAlertOperations = useKpiAlertOperations(closeAlertDialog);\n    const canSetAlert = canCreateScheduledMail;\n    const { onRequestAsyncRender, onResolveAsyncRender } = useDashboardAsyncRender(objRefToString(widgetRef(kpiWidget)));\n    useEffect(() => {\n        if (isLoading) {\n            onRequestAsyncRender();\n        }\n        else {\n            onResolveAsyncRender();\n        }\n        executionsHandler.onLoadingChanged({ isLoading: !!isLoading });\n    }, [isLoading, onRequestAsyncRender, onResolveAsyncRender]);\n    const { kpiAlertDialogClosed, kpiAlertDialogOpened } = useDashboardUserInteraction();\n    const kpiResult = getKpiResult(result, primaryMeasure, secondaryMeasure, separators);\n    const kpiAlertResult = getKpiAlertResult(alertExecutionResult, primaryMeasure, separators);\n    const { isThresholdRepresentingPercent, thresholdPlaceholder } = useMemo(() => getAlertThresholdInfo(kpiResult, intl), [kpiResult, intl]);\n    const predicates = convertDrillableItemsToPredicates(drillableItems);\n    const isDrillable = ((kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureDescriptor) &&\n        result &&\n        isSomeHeaderPredicateMatched(predicates, kpiResult.measureDescriptor, result)) ||\n        widgetDrills.length > 0;\n    const alertSavingStatus = kpiAlertOperations.creatingStatus === \"inProgress\" ||\n        kpiAlertOperations.updatingStatus === \"inProgress\"\n        ? \"inProgress\"\n        : kpiAlertOperations.creatingStatus === \"error\" || kpiAlertOperations.updatingStatus === \"error\"\n            ? \"error\"\n            : \"idle\";\n    const { isSelectable, isSelected, onSelected } = useWidgetSelection(kpiWidgetRef);\n    const onDrillHandler = onDrill && handleOnDrill;\n    return (React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n        React.createElement(DashboardItemWithKpiAlert, { kpi: kpiWidget, alert: alert, filters: effectiveFilters, userWorkspaceSettings: settings, kpiResult: kpiResult, renderHeadline: (clientHeight) => (React.createElement(DashboardItemHeadline, { title: kpiWidget.title, clientHeight: clientHeight })), kpiAlertResult: kpiAlertResult, canSetAlert: canSetAlert, isReadOnlyMode: isReadOnly, alertExecutionError: alertExecutionError !== null && alertExecutionError !== void 0 ? alertExecutionError : \n            /*\n             * if alert is broken, behave as if its execution yielded no data (which is true, we do not execute it)\n             * context: the problem is alerts on KPIs without dateDataset, their date filters are invalid\n             * and we have no idea what date dataset to put there hence it is sometimes impossible\n             * to execute them (unlike KPI Dashboards, we do not have the guarantee that there is a date\n             * filter in the filters)\n             */\n            (isAlertBroken ? new NoDataSdkError() : undefined), isLoading: isLoading, isAlertLoading: false /* alerts are always loaded at this point */, isAlertExecutionLoading: isAlertExecutionLoading, isAlertBroken: isAlertBroken, isAlertDialogOpen: isAlertDialogOpen, isAlertHighlighted: isAlertHighlighted, onAlertDialogOpenClick: () => {\n                kpiAlertDialogOpened(!!alert);\n                openAlertDialog();\n            }, renderAlertDialog: () => (React.createElement(KpiAlertDialogWrapper, { alert: alert, dateFormat: dateFormat, userEmail: currentUser.email, onAlertDialogCloseClick: () => {\n                    kpiAlertDialogClosed();\n                    closeAlertDialog();\n                }, onAlertDialogDeleteClick: () => {\n                    kpiAlertOperations.onRemoveAlert(alert);\n                }, onAlertDialogSaveClick: (threshold, whenTriggered) => {\n                    var _a, _b;\n                    if (alert) {\n                        return kpiAlertOperations.onUpdateAlert(Object.assign(Object.assign({}, alert), { threshold,\n                            whenTriggered, isTriggered: evaluateAlertTriggered(kpiAlertResult.measureResult, threshold, whenTriggered) }));\n                    }\n                    // alerts are not possible when the dashboard is not yet persisted. if the code bombs here\n                    // then it means we use view-mode KPI widget in edit-mode dashboard - there is a configuration\n                    // customization error somewhere.\n                    invariant(dashboardRef, \"attempting to create alert of an unsaved dashboard\");\n                    return kpiAlertOperations.onCreateAlert({\n                        dashboard: dashboardRef,\n                        widget: kpiWidgetRef,\n                        threshold,\n                        whenTriggered,\n                        isTriggered: evaluateAlertTriggered((_a = kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult) !== null && _a !== void 0 ? _a : 0, threshold, whenTriggered),\n                        filterContext: {\n                            title: \"filterContext\",\n                            description: \"\",\n                            filters: (_b = effectiveFilters === null || effectiveFilters === void 0 ? void 0 : effectiveFilters.map(dashboardFilterToFilterContextItem).map(stripDateDatasets)) !== null && _b !== void 0 ? _b : [],\n                        },\n                        description: \"\",\n                        title: \"\",\n                    });\n                }, onAlertDialogUpdateClick: () => {\n                    var _a, _b;\n                    return kpiAlertOperations.onUpdateAlert(Object.assign(Object.assign({}, alert), { \n                        // evaluate triggered as if the alert already used the correct filters (i.e. use the KPI execution itself)\n                        isTriggered: evaluateAlertTriggered((_a = kpiResult === null || kpiResult === void 0 ? void 0 : kpiResult.measureResult) !== null && _a !== void 0 ? _a : 0, alert.threshold, alert.whenTriggered), \n                        // change the filters to the filters currently used by the KPI\n                        filterContext: Object.assign(Object.assign({}, alert.filterContext), { filters: (_b = effectiveFilters === null || effectiveFilters === void 0 ? void 0 : effectiveFilters.map(dashboardFilterToFilterContextItem).map(stripDateDatasets)) !== null && _b !== void 0 ? _b : [] }) }));\n                }, onApplyAlertFiltersClick: onFiltersChange\n                    ? () => {\n                        var _a, _b;\n                        return onFiltersChange(filterContextItemsToDashboardFiltersByWidget((_b = (_a = alert === null || alert === void 0 ? void 0 : alert.filterContext) === null || _a === void 0 ? void 0 : _a.filters) !== null && _b !== void 0 ? _b : [], kpiWidget), true);\n                    }\n                    : undefined, isAlertLoading: isAlertExecutionLoading, alertDeletingStatus: kpiAlertOperations.removingStatus, alertSavingStatus: alertSavingStatus, alertUpdatingStatus: alertSavingStatus, filters: effectiveFilters, isThresholdRepresentingPercent: isThresholdRepresentingPercent, thresholdPlaceholder: thresholdPlaceholder, brokenAlertFiltersBasicInfo: brokenAlertsBasicInfo, backend: backend, workspace: workspace })), alertDeletingStatus: kpiAlertOperations.removingStatus, alertSavingStatus: alertSavingStatus, isSelectable: isSelectable, isSelected: isSelected, onSelected: onSelected }, () => {\n            return (React.createElement(KpiRenderer, { kpi: kpiWidget, kpiResult: kpiResult, filters: effectiveFilters !== null && effectiveFilters !== void 0 ? effectiveFilters : [], disableDrillUnderline: disableDrillUnderline, isDrillable: isDrillable, onDrill: onDrillHandler, separators: separators, enableCompactSize: enableCompactSize, error: error, errorHelp: intl.formatMessage({ id: \"kpi.error.view\" }), isLoading: isLoading }));\n        })));\n};\n/**\n * Executes the given measures and displays them as KPI\n * @internal\n */\nexport const KpiExecutor = memo(KpiExecutorCore);\n//# sourceMappingURL=KpiExecutor.js.map","// (C) 2020-2022 GoodData Corporation\nimport { useEffect } from \"react\";\nimport { queryWidgetBrokenAlerts, useDashboardQueryProcessing, useDashboardSelector, selectFilterContextFilters, } from \"../../../model/index.js\";\nexport const useWidgetBrokenAlertsQuery = (widget, alert) => {\n    const dashboardFilters = useDashboardSelector(selectFilterContextFilters);\n    const { run: runBrokenAlertsQuery, result, status, error, } = useDashboardQueryProcessing({\n        queryCreator: queryWidgetBrokenAlerts,\n    });\n    const effectiveFilters = result;\n    useEffect(() => {\n        if (widget.ref) {\n            runBrokenAlertsQuery(widget.ref);\n        }\n        // queryWidgetBrokenAlerts as a parameter it needs just widget.ref but internally result depends on alert, widget, dashboardFilters\n        // we have to call query every time when this dependency changed to get fresh results\n    }, [alert, widget, dashboardFilters]);\n    return {\n        result: effectiveFilters,\n        status,\n        error,\n    };\n};\n//# sourceMappingURL=useWidgetBrokenAlertsQuery.js.map","// (C) 2020-2022 GoodData Corporation\nimport { isAllTimeDateFilter, isDateFilter, newMeasure, newPopMeasure, newPreviousPeriodMeasure, } from \"@gooddata/sdk-model\";\nimport { UnexpectedSdkError } from \"@gooddata/sdk-ui\";\nimport { invariant } from \"ts-invariant\";\nimport { filterContextItemsToDashboardFiltersByWidget } from \"../../../../converters/index.js\";\nimport { selectAllCatalogDateDatasetsMap, useDashboardSelector } from \"../../../../model/index.js\";\nimport { useWidgetFilters } from \"../../common/index.js\";\n/**\n * @internal\n */\nexport function useKpiData({ kpiWidget, dashboardFilters, }) {\n    const { status, result, error } = useWidgetFilters(kpiWidget);\n    // we only put IDashboardFilters in, so we must get IDashboardFilters out as well\n    const effectiveFilters = result;\n    const dateDatasetsMap = useDashboardSelector(selectAllCatalogDateDatasetsMap);\n    if (!kpiWidget || status === \"pending\") {\n        return {\n            status: \"pending\",\n            error: undefined,\n            result: undefined,\n        };\n    }\n    if (status === \"error\") {\n        return {\n            status: \"error\",\n            error: error,\n            result: undefined,\n        };\n    }\n    if (status === \"rejected\") {\n        return {\n            status: \"error\",\n            error: new UnexpectedSdkError(\"Getting filter settings for a KPI widget failed.\"),\n            result: undefined,\n        };\n    }\n    if (status === \"running\") {\n        return {\n            status: \"loading\",\n            error: undefined,\n            result: undefined,\n        };\n    }\n    const allFilters = filterContextItemsToDashboardFiltersByWidget(dashboardFilters, kpiWidget);\n    const primaryMeasure = newMeasure(kpiWidget.kpi.metric);\n    const secondaryMeasure = getSecondaryMeasure(kpiWidget, primaryMeasure, effectiveFilters, dateDatasetsMap);\n    return {\n        status: \"success\",\n        error: undefined,\n        result: { primaryMeasure, secondaryMeasure, effectiveFilters, allFilters },\n    };\n}\nfunction getSecondaryMeasure(kpiWidget, primaryMeasure, effectiveFilters, dateDatasetsMap) {\n    const comparison = kpiWidget.kpi.comparisonType;\n    const isAllTime = !(effectiveFilters === null || effectiveFilters === void 0 ? void 0 : effectiveFilters.some((filter) => isDateFilter(filter) && !isAllTimeDateFilter(filter)));\n    if (comparison === \"none\" || isAllTime || !kpiWidget.dateDataSet) {\n        return undefined;\n    }\n    if (comparison === \"previousPeriod\") {\n        return newPreviousPeriodMeasure(primaryMeasure, [{ dataSet: kpiWidget.dateDataSet, periodsAgo: 1 }]);\n    }\n    if (comparison === \"lastYear\") {\n        const relevantDateDataset = dateDatasetsMap.get(kpiWidget.dateDataSet);\n        invariant(relevantDateDataset, \"Cannot find relevant date dataset in useKpiData\");\n        const yearAttribute = relevantDateDataset.dateAttributes.find((dateAttribute) => dateAttribute.granularity === \"GDC.time.year\");\n        invariant(yearAttribute, \"Cannot find yearAttribute in useKpiData\");\n        return newPopMeasure(primaryMeasure, yearAttribute.attribute.ref);\n    }\n    invariant(false, `Unknown comparison ${comparison}`);\n}\n//# sourceMappingURL=useKpiData.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { useBackendStrict, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { invariant } from \"ts-invariant\";\nimport { useDashboardComponentsContext } from \"../../../dashboardContexts/index.js\";\nimport { selectDashboardRef, selectDisableKpiDashboardHeadlineUnderline, selectFilterContextFilters, selectIsReadOnly, selectSeparators, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { KpiExecutor } from \"./KpiExecutor.js\";\nimport { useKpiData } from \"../common/index.js\";\n/**\n * @internal\n */\nexport const DashboardKpiCore = (props) => {\n    const { kpiWidget, alert, onFiltersChange, onDrill, onError, backend: customBackend, workspace: customWorkspace, ErrorComponent: CustomErrorComponent, LoadingComponent: CustomLoadingComponent, } = props;\n    invariant(kpiWidget.kpi, \"The provided widget is not a KPI widget.\");\n    const { ErrorComponent, LoadingComponent } = useDashboardComponentsContext({\n        ErrorComponent: CustomErrorComponent,\n        LoadingComponent: CustomLoadingComponent,\n    });\n    const backend = useBackendStrict(customBackend);\n    const workspace = useWorkspaceStrict(customWorkspace);\n    const dashboardRef = useDashboardSelector(selectDashboardRef);\n    const dashboardFilters = useDashboardSelector(selectFilterContextFilters);\n    const disableDrillUnderline = useDashboardSelector(selectDisableKpiDashboardHeadlineUnderline);\n    const separators = useDashboardSelector(selectSeparators);\n    const isReadOnly = useDashboardSelector(selectIsReadOnly);\n    const kpiData = useKpiData({ kpiWidget, dashboardFilters });\n    if (kpiData.status === \"loading\" || kpiData.status === \"pending\") {\n        return React.createElement(LoadingComponent, null);\n    }\n    if (kpiData.status === \"error\") {\n        return React.createElement(ErrorComponent, { message: kpiData.error.message });\n    }\n    return (React.createElement(KpiExecutor, { dashboardRef: dashboardRef, kpiWidget: kpiWidget, primaryMeasure: kpiData.result.primaryMeasure, secondaryMeasure: kpiData.result.secondaryMeasure, alert: alert, allFilters: kpiData.result.allFilters, effectiveFilters: kpiData.result.effectiveFilters, onFiltersChange: onFiltersChange, onDrill: onDrill, onError: onError, separators: separators, disableDrillUnderline: disableDrillUnderline, backend: backend, workspace: workspace, LoadingComponent: LoadingComponent, isReadOnly: isReadOnly }));\n};\n//# sourceMappingURL=DashboardKpiCore.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback } from \"react\";\nimport { useDrill, useDrillToLegacyDashboard } from \"../../../drill/index.js\";\nimport { useDashboardSelector, selectDisableDefaultDrills } from \"../../../../model/index.js\";\n/**\n * Returns a drill handler for a given KPI.\n *\n * @param kpiWidget - widget the drills of which to handle\n * @internal\n */\nexport function useKpiDrill(kpiWidget) {\n    const disableDefaultDrills = useDashboardSelector(selectDisableDefaultDrills);\n    const { run: handleDrillToLegacyDashboard } = useDrillToLegacyDashboard();\n    const { run: handleDrill } = useDrill({\n        onSuccess: (event) => {\n            if (disableDefaultDrills || !event.payload.drillEvent.drillDefinitions[0]) {\n                return;\n            }\n            handleDrillToLegacyDashboard(event.payload.drillEvent.drillDefinitions[0], event.payload.drillEvent, event.correlationId);\n        },\n    });\n    return useCallback((event) => {\n        handleDrill(event, { widget: kpiWidget });\n    }, [handleDrill, kpiWidget]);\n}\n//# sourceMappingURL=useKpiDrill.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { DashboardKpiCore } from \"./DashboardKpiCore.js\";\nimport { useKpiDrill } from \"../common/useKpiDrill.js\";\n/**\n * @internal\n */\nexport const DefaultDashboardKpiWithDrills = (props) => {\n    const { kpiWidget } = props;\n    const onDrill = useKpiDrill(kpiWidget);\n    return React.createElement(DashboardKpiCore, Object.assign({}, props, { onDrill: onDrill }));\n};\n//# sourceMappingURL=DefaultDashboardKpiWithDrills.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport { DashboardItemHeadlineContainer } from \"../../../presentationComponents/index.js\";\nimport { EditableHeadline } from \"../../common/EditableHeadline.js\";\nconst MAX_KPI_TITLE_LENGTH = 35;\nexport const EditableKpiHeadline = ({ title, onTitleChange, onTitleEditingEnd, onTitleEditingStart, clientHeight, }) => {\n    const maxLength = Math.max(title.length, MAX_KPI_TITLE_LENGTH);\n    return (React.createElement(DashboardItemHeadlineContainer, { clientHeight: clientHeight },\n        React.createElement(EditableHeadline, { text: title, originalTitle: title, maxLength: maxLength, onTitleChange: onTitleChange, onTitleEditingStart: onTitleEditingStart, onTitleEditingCancel: onTitleEditingEnd })));\n};\n//# sourceMappingURL=EditModeKpiHeadline.js.map","// (C) 2022 GoodData Corporation\nimport { ViewModeDashboardKpi } from \"./ViewModeDashboardKpi/index.js\";\nimport { EditModeDashboardKpi } from \"./EditModeDashboardKpi/index.js\";\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\n/**\n * @internal\n */\nexport const DefaultDashboardKpi = renderModeAware({\n    view: ViewModeDashboardKpi,\n    edit: EditModeDashboardKpi,\n});\n//# sourceMappingURL=DefaultDashboardKpi.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { DefaultDashboardKpiWithDrills } from \"./DefaultDashboardKpiWithDrills.js\";\n/**\n * Default implementation of the Dashboard KPI widget.\n *\n * @public\n */\nexport const ViewModeDashboardKpi = (props) => {\n    return React.createElement(DefaultDashboardKpiWithDrills, Object.assign({}, props));\n};\n//# sourceMappingURL=ViewModeDashboardKpi.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { useIntl } from \"react-intl\";\nimport { widgetRef } from \"@gooddata/sdk-model\";\nimport { NoDataSdkError, useBackendStrict, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { useDashboardSelector, useWidgetExecutionsHandler, selectEnableWidgetCustomHeight, selectSeparators, selectDisableKpiDashboardHeadlineUnderline, useDashboardDispatch, selectWidgetCoordinatesByRef, selectFilterContextFilters, uiActions, useWidgetSelection, selectIsDashboardSaving, changeKpiWidgetHeader, selectAllCatalogMeasuresMap, selectIsEmbedded, selectDisableDefaultDrills, } from \"../../../../model/index.js\";\nimport { DashboardItemKpi } from \"../../../presentationComponents/index.js\";\nimport { useDashboardComponentsContext } from \"../../../dashboardContexts/index.js\";\nimport { ConfigurationBubble } from \"../../common/index.js\";\nimport { getKpiResult, KpiRenderer, useKpiData, useKpiExecutionDataView } from \"../common/index.js\";\nimport { useOptimisticMeasureUpdate } from \"./useOptimisticMeasureUpdate.js\";\nimport { EditableKpiHeadline } from \"./EditModeKpiHeadline.js\";\nimport { useKpiDrill } from \"../common/useKpiDrill.js\";\nexport const EditModeDashboardKpi = (props) => {\n    const { kpiWidget, backend: customBackend, workspace: customWorkspace, ErrorComponent: CustomErrorComponent, LoadingComponent: CustomLoadingComponent, onError, } = props;\n    const intl = useIntl();\n    const { ErrorComponent, LoadingComponent, KpiWidgetComponentSet } = useDashboardComponentsContext({\n        ErrorComponent: CustomErrorComponent,\n        LoadingComponent: CustomLoadingComponent,\n    });\n    const KpiConfigurationComponent = KpiWidgetComponentSet.configuration.WidgetConfigPanelComponent;\n    const { isChangingMeasure, titleToShow } = useOptimisticMeasureUpdate(kpiWidget);\n    const backend = useBackendStrict(customBackend);\n    const workspace = useWorkspaceStrict(customWorkspace);\n    const dashboardFilters = useDashboardSelector(selectFilterContextFilters);\n    const { error: kpiDataError, result: kpiDataResult, status: kpiDataStatus, } = useKpiData({ kpiWidget, dashboardFilters });\n    const { primaryMeasure, secondaryMeasure, effectiveFilters } = kpiDataResult !== null && kpiDataResult !== void 0 ? kpiDataResult : {};\n    const enableCompactSize = useDashboardSelector(selectEnableWidgetCustomHeight);\n    const separators = useDashboardSelector(selectSeparators);\n    const disableDrillUnderline = useDashboardSelector(selectDisableKpiDashboardHeadlineUnderline);\n    const isDrillable = kpiWidget.drills.length > 0;\n    const isSaving = useDashboardSelector(selectIsDashboardSaving);\n    const isEditable = !isSaving;\n    const dispatch = useDashboardDispatch();\n    const coordinates = useDashboardSelector(selectWidgetCoordinatesByRef(widgetRef(kpiWidget)));\n    const onWidgetDelete = useCallback(() => {\n        dispatch(uiActions.openKpiDeleteDialog(coordinates));\n    }, [dispatch, coordinates]);\n    const measures = useDashboardSelector(selectAllCatalogMeasuresMap);\n    const currentMeasure = measures.get(kpiWidget.kpi.metric);\n    const onWidgetTitleChanged = useCallback((newTitle) => {\n        if (newTitle) {\n            dispatch(changeKpiWidgetHeader(kpiWidget.ref, { title: newTitle }));\n        }\n        else if (currentMeasure) {\n            dispatch(changeKpiWidgetHeader(kpiWidget.ref, { title: currentMeasure.measure.title }));\n        }\n    }, [currentMeasure, dispatch, kpiWidget.ref]);\n    const { error, result, status } = useKpiExecutionDataView({\n        backend,\n        workspace,\n        primaryMeasure,\n        secondaryMeasure,\n        effectiveFilters,\n        shouldLoad: kpiDataStatus === \"success\",\n    });\n    const isLoading = isChangingMeasure ||\n        status === \"loading\" ||\n        status === \"pending\" ||\n        kpiDataStatus === \"loading\" ||\n        kpiDataStatus === \"pending\";\n    const executionsHandler = useWidgetExecutionsHandler(widgetRef(kpiWidget));\n    const { isSelectable, isSelected, onSelected, hasConfigPanelOpen } = useWidgetSelection(widgetRef(kpiWidget));\n    const isEmbedded = useDashboardSelector(selectIsEmbedded);\n    const disableDefaultDrills = useDashboardSelector(selectDisableDefaultDrills);\n    const isClickEnabled = isSelected && !isEmbedded && !disableDefaultDrills;\n    const onDrill = useKpiDrill(kpiWidget);\n    const handleOnDrill = useCallback((drillContext) => {\n        return onDrill({\n            dataView: result === null || result === void 0 ? void 0 : result.dataView,\n            drillContext,\n            drillDefinitions: kpiWidget.drills,\n            widgetRef: widgetRef(kpiWidget),\n        });\n    }, [onDrill, result, kpiWidget]);\n    const handlePanelClosed = useCallback(() => dispatch(uiActions.setConfigurationPanelOpened(false)), [dispatch]);\n    const renderBeforeContent = useMemo(() => {\n        const hasConfigComponent = !!KpiConfigurationComponent;\n        const shouldHaveConfigRendered = isSelected && hasConfigPanelOpen;\n        if (!hasConfigComponent || !shouldHaveConfigRendered) {\n            return undefined;\n        }\n        return function KpiConfiguration() {\n            return (React.createElement(ConfigurationBubble, { onClose: handlePanelClosed },\n                React.createElement(KpiConfigurationComponent, { widget: kpiWidget })));\n        };\n    }, [KpiConfigurationComponent, hasConfigPanelOpen, isSelected, kpiWidget, handlePanelClosed]);\n    useEffect(() => {\n        if (error) {\n            onError === null || onError === void 0 ? void 0 : onError(error);\n            executionsHandler.onError(error);\n        }\n    }, [error, executionsHandler, onError]);\n    useEffect(() => {\n        if (result) {\n            // empty data is considered an error for execution handling\n            if (result.rawData().isEmpty()) {\n                executionsHandler.onError(new NoDataSdkError());\n            }\n            else {\n                executionsHandler.onSuccess(result.result(), result.warnings());\n            }\n        }\n    }, [result, executionsHandler]);\n    const kpiResult = useMemo(() => {\n        return getKpiResult(result, primaryMeasure, secondaryMeasure, separators);\n    }, [primaryMeasure, result, secondaryMeasure, separators]);\n    return (React.createElement(DashboardItemKpi, { visualizationClassName: cx(\"s-dashboard-kpi-component\", \"widget-loaded\", \"visualization\", {\n            \"kpi-with-pop\": kpiWidget.kpi.comparisonType !== \"none\",\n            \"content-loading\": isLoading,\n            \"content-loaded\": !isLoading,\n            \"is-editable\": isEditable,\n        }), contentClassName: cx({ \"is-editable\": isEditable }), renderBeforeContent: renderBeforeContent, renderAfterContent: () => {\n            if (isSelected) {\n                return (React.createElement(\"div\", { className: \"dash-item-action dash-item-action-delete gd-icon-trash\", onClick: onWidgetDelete }));\n            }\n            return null;\n        }, renderHeadline: (clientHeight) => (React.createElement(EditableKpiHeadline, { title: titleToShow, clientHeight: clientHeight, onTitleChange: onWidgetTitleChanged })), isSelectable: isSelectable, isSelected: isSelected, onSelected: onSelected }, () => {\n        var _a;\n        if (kpiDataStatus === \"loading\" || kpiDataStatus === \"pending\") {\n            return React.createElement(LoadingComponent, null);\n        }\n        if (kpiDataStatus === \"error\") {\n            return React.createElement(ErrorComponent, { message: kpiDataError.message });\n        }\n        return (React.createElement(KpiRenderer, { kpi: kpiWidget, kpiResult: kpiResult, filters: (_a = kpiDataResult === null || kpiDataResult === void 0 ? void 0 : kpiDataResult.effectiveFilters) !== null && _a !== void 0 ? _a : [], separators: separators, enableCompactSize: enableCompactSize, error: error, errorHelp: intl.formatMessage({ id: \"kpi.error.view\" }), isLoading: isLoading, onDrill: handleOnDrill, isDrillable: isDrillable, isKpiValueClickDisabled: !isClickEnabled, disableDrillUnderline: disableDrillUnderline }));\n    }));\n};\n//# sourceMappingURL=EditModeDashboardKpi.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useState } from \"react\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { useDashboardSelector, useDashboardEventsContext, isDashboardCommandStarted, isDashboardKpiWidgetMeasureChanged, isDashboardCommandFailed, selectAllCatalogMeasuresMap, } from \"../../../../model/index.js\";\nexport function useOptimisticMeasureUpdate(kpiWidget) {\n    // ref of the measure the KPI is being updated to\n    const [updatingMeasureRef, setUpdatingMeasureRef] = useState();\n    const measures = useDashboardSelector(selectAllCatalogMeasuresMap);\n    const currentMeasure = measures.get(kpiWidget.kpi.metric);\n    const updatingMeasure = updatingMeasureRef && measures.get(updatingMeasureRef);\n    const { registerHandler, unregisterHandler } = useDashboardEventsContext();\n    useEffect(() => {\n        const onMeasureChangingStarted = {\n            eval: (evt) => {\n                return (isDashboardCommandStarted(evt) &&\n                    evt.payload.command.type === \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_MEASURE\" &&\n                    areObjRefsEqual(evt.payload.command.payload.ref, kpiWidget.ref));\n            },\n            handler: (e) => {\n                setUpdatingMeasureRef(e.payload.command.payload.measureRef);\n            },\n        };\n        const onMeasureChangingEnded = {\n            eval: (evt) => {\n                return ((isDashboardKpiWidgetMeasureChanged(evt) &&\n                    areObjRefsEqual(evt.payload.ref, kpiWidget.ref)) ||\n                    (isDashboardCommandFailed(evt) &&\n                        evt.payload.command.type === \"GDC.DASH/CMD.KPI_WIDGET.CHANGE_MEASURE\" &&\n                        areObjRefsEqual(evt.payload.command.payload.ref, kpiWidget.ref)));\n            },\n            handler: () => {\n                setUpdatingMeasureRef(undefined);\n            },\n        };\n        registerHandler(onMeasureChangingStarted);\n        registerHandler(onMeasureChangingEnded);\n        return () => {\n            unregisterHandler(onMeasureChangingStarted);\n            unregisterHandler(onMeasureChangingEnded);\n        };\n    }, [kpiWidget.ref, registerHandler, unregisterHandler]);\n    const isChangingMeasure = !!updatingMeasureRef;\n    // if the current title of the KPI is the same as the title of the current measure, after the update is done,\n    // it will take on the title of the new measure, otherwise the title is untouched\n    const titleToShow = isChangingMeasure && kpiWidget.title === (currentMeasure === null || currentMeasure === void 0 ? void 0 : currentMeasure.measure.title) && updatingMeasure\n        ? updatingMeasure.measure.title\n        : kpiWidget.title;\n    return {\n        isChangingMeasure,\n        titleToShow,\n    };\n}\n//# sourceMappingURL=useOptimisticMeasureUpdate.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\n/**\n * @internal\n */\nexport function DraggableInsightListItem(props) {\n    const { ListItemComponent, listItemComponentProps, insight } = props;\n    const WrapInsightListItemWithDragComponent = props.WrapInsightListItemWithDragComponent;\n    return (React.createElement(WrapInsightListItemWithDragComponent, { insight: insight },\n        React.createElement(ListItemComponent, Object.assign({}, listItemComponentProps))));\n}\n//# sourceMappingURL=DraggableInsightListItem.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { InsightListItem } from \"@gooddata/sdk-ui-kit\";\nimport { DraggableInsightListItem } from \"../../../dragAndDrop/draggableWidget/DraggableInsightListItem.js\";\nexport const DraggableInsightListItemBody = (props) => {\n    const { className } = props;\n    return (React.createElement(\"div\", { className: className },\n        React.createElement(InsightListItem, Object.assign({}, props))));\n};\nexport const DraggableInsightListItemWrapper = (props) => {\n    const { WrapInsightListItemWithDragComponent, className, isLocked, title, description, showDescriptionPanel, type, updated, insight, onDescriptionPanelOpen, metadataTimeZone, } = props;\n    return (React.createElement(DraggableInsightListItem, { WrapInsightListItemWithDragComponent: WrapInsightListItemWithDragComponent, ListItemComponent: DraggableInsightListItemBody, listItemComponentProps: {\n            className,\n            isLocked,\n            title,\n            description,\n            type,\n            updated,\n            showDescriptionPanel,\n            onDescriptionPanelOpen,\n            metadataTimeZone,\n        }, insight: insight }));\n};\n//# sourceMappingURL=DraggableInsightListItemWrapper.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { insightIsLocked, insightTitle, insightUpdated, insightVisualizationType, insightCreated, } from \"@gooddata/sdk-model\";\nimport { DraggableInsightListItemBody } from \"../../dashboard/DashboardSidebar/DraggableInsightList/index.js\";\n/*\n * @internal\n */\nexport function InsightDraggingComponent({ item }) {\n    var _a;\n    const insight = item.insight;\n    const visualizationType = insightVisualizationType(insight);\n    return (React.createElement(DraggableInsightListItemBody, { className: \"move-insight-placeholder\", type: visualizationType, title: insightTitle(insight), updated: (_a = insightUpdated(insight)) !== null && _a !== void 0 ? _a : insightCreated(insight), isLocked: insightIsLocked(insight) }));\n}\n//# sourceMappingURL=InsightDraggingComponent.js.map","import { InsightDraggingComponent } from \"../../dragAndDrop/index.js\";\n/**\n * @internal\n */\nexport function DefaultDashboardInsightComponentSetFactory(insightProvider) {\n    return {\n        MainComponentProvider: insightProvider,\n        dragging: {\n            DraggingComponent: InsightDraggingComponent,\n            type: \"insight\",\n        },\n        configuration: {\n            WidgetConfigPanelComponent: () => null,\n        },\n    };\n}\n//# sourceMappingURL=DefaultDashboardInsightComponentSetFactory.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { ShortenedText } from \"@gooddata/sdk-ui-kit\";\n/*\n * @internal\n */\nexport function KpiDraggingComponent({ item }) {\n    return (React.createElement(\"div\", { className: \"move-kpi-placeholder\" },\n        React.createElement(ShortenedText, null, item.title)));\n}\n//# sourceMappingURL=KpiDraggingComponent.js.map","// (C) 2022 GoodData Corporation\n// TODO move somewhere to share with insight panel?\nexport const CONFIG_PANEL_INNER_WIDTH = 204; // must match `$gd-configuration-panel-inner-width`\n//# sourceMappingURL=constants.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { defineMessage, useIntl } from \"react-intl\";\nimport { Dropdown, DropdownButton, DropdownList, SingleSelectListItem, } from \"@gooddata/sdk-ui-kit\";\nimport { CONFIG_PANEL_INNER_WIDTH } from \"../constants.js\";\nconst alignPoints = [{ align: \"bl tl\" }, { align: \"tl bl\" }];\nconst messages = {\n    lastYear: defineMessage({ id: \"configurationPanel.comparisonTypeItems.samePeriodInPreviousYear\" }),\n    none: defineMessage({ id: \"configurationPanel.comparisonTypeItems.noComparison\" }),\n    previousPeriod: defineMessage({ id: \"configurationPanel.comparisonTypeItems.previousPeriod\" }),\n};\nconst placeholderMessage = defineMessage({ id: \"configurationPanel.selectComparisonPlaceholder\" });\nconst directionOrder = [\"previousPeriod\", \"lastYear\", \"none\"];\nexport const KpiComparisonTypeDropdown = (props) => {\n    const { comparisonType, onComparisonTypeChanged } = props;\n    const intl = useIntl();\n    const buttonValue = comparisonType\n        ? intl.formatMessage(messages[comparisonType])\n        : intl.formatMessage(placeholderMessage);\n    return (React.createElement(Dropdown, { alignPoints: alignPoints, closeOnParentScroll: true, closeOnMouseDrag: true, className: \"s-compare_with_select\", renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DropdownButton, { title: buttonValue, value: buttonValue, isOpen: isOpen, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"configuration-dropdown comparison-list\", width: CONFIG_PANEL_INNER_WIDTH, items: directionOrder, renderItem: ({ item }) => {\n                const selected = comparisonType === item;\n                return (React.createElement(SingleSelectListItem, { title: intl.formatMessage(messages[item]), isSelected: selected, onClick: () => {\n                        onComparisonTypeChanged(item);\n                        closeDropdown();\n                    } }));\n            } })) }));\n};\n//# sourceMappingURL=KpiComparisonTypeDropdown.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { defineMessage, FormattedMessage, useIntl } from \"react-intl\";\nimport { Dropdown, DropdownButton, DropdownList, SingleSelectListItem, } from \"@gooddata/sdk-ui-kit\";\nimport { CONFIG_PANEL_INNER_WIDTH } from \"../constants.js\";\nconst alignPoints = [{ align: \"bl tl\" }, { align: \"tl bl\" }];\nconst messages = {\n    growIsBad: defineMessage({ id: \"configurationPanel.comparisonDirectionItems.red\" }),\n    growIsGood: defineMessage({ id: \"configurationPanel.comparisonDirectionItems.green\" }),\n};\nconst placeholderMessage = defineMessage({ id: \"configurationPanel.selectComparisonDirectionPlaceholder\" });\nconst directionOrder = [\"growIsGood\", \"growIsBad\"];\nexport const KpiComparisonDirectionDropdown = (props) => {\n    const { comparisonDirection, onComparisonDirectionChanged } = props;\n    const intl = useIntl();\n    const buttonValue = comparisonDirection\n        ? intl.formatMessage(messages[comparisonDirection])\n        : intl.formatMessage(placeholderMessage);\n    return (React.createElement(\"div\", null,\n        React.createElement(FormattedMessage, { id: \"configurationPanel.increasingNumberIs\", tagName: \"label\" }),\n        React.createElement(Dropdown, { alignPoints: alignPoints, className: \"s-growing_number_is\", renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DropdownButton, { title: buttonValue, value: buttonValue, className: comparisonDirection ? `type-${comparisonDirection}` : \"\", isOpen: isOpen, onClick: toggleDropdown })), closeOnParentScroll: true, closeOnMouseDrag: true, renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { className: \"configuration-dropdown growing-number-is-list\", width: CONFIG_PANEL_INNER_WIDTH, items: directionOrder, renderItem: ({ item }) => {\n                    const selected = comparisonDirection === item;\n                    return (React.createElement(SingleSelectListItem, { title: intl.formatMessage(messages[item]), isSelected: selected, onClick: () => {\n                            onComparisonDirectionChanged(item);\n                            closeDropdown();\n                        } }));\n                } })) })));\n};\n//# sourceMappingURL=KpiComparisonDirectionDropdown.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { widgetRef, } from \"@gooddata/sdk-model\";\nimport { changeKpiWidgetComparison, useDashboardDispatch } from \"../../../../../model/index.js\";\nimport { KpiComparisonTypeDropdown } from \"./KpiComparisonTypeDropdown.js\";\nimport { KpiComparisonDirectionDropdown } from \"./KpiComparisonDirectionDropdown.js\";\nexport const KpiComparison = (props) => {\n    const { widget } = props;\n    const ref = widgetRef(widget);\n    const comparisonDirection = widget.kpi.comparisonDirection;\n    const comparisonType = widget.kpi.comparisonType;\n    const dispatch = useDashboardDispatch();\n    const handleComparisonTypeChanged = useCallback((newComparisonType) => {\n        dispatch(changeKpiWidgetComparison(ref, {\n            comparisonDirection,\n            comparisonType: newComparisonType,\n        }));\n    }, [dispatch, ref, comparisonDirection]);\n    const handleComparisonDirectionChanged = useCallback((newComparisonDirection) => {\n        dispatch(changeKpiWidgetComparison(ref, {\n            comparisonType,\n            comparisonDirection: newComparisonDirection,\n        }));\n    }, [dispatch, ref, comparisonType]);\n    return (React.createElement(\"div\", null,\n        React.createElement(FormattedMessage, { id: \"configurationPanel.compareWith\", tagName: \"label\" }),\n        React.createElement(KpiComparisonTypeDropdown, { comparisonType: comparisonType, onComparisonTypeChanged: handleComparisonTypeChanged }),\n        !!comparisonDirection && (React.createElement(KpiComparisonDirectionDropdown, { comparisonDirection: comparisonDirection, onComparisonDirectionChanged: handleComparisonDirectionChanged }))));\n};\n//# sourceMappingURL=KpiComparison.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useEffect } from \"react\";\nimport { widgetRef } from \"@gooddata/sdk-model\";\nimport { DateDatasetFilter } from \"../../common/index.js\";\nimport { enableKpiWidgetDateFilter, queryDateDatasetsForMeasure, selectIsWidgetLoadingAdditionalDataByWidgetRef, selectWidgetDateDatasetAutoSelect, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardQueryProcessing, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { useDateDatasetFilter } from \"../../common/configuration/useDateDatasetFilter.js\";\nimport { safeSerializeObjRef } from \"../../../../_staging/metadata/safeSerializeObjRef.js\";\nexport const KpiWidgetDateDatasetFilter = (props) => {\n    const { widget } = props;\n    const ref = widgetRef(widget);\n    const { status, run: queryDateDatasets, result, } = useDashboardQueryProcessing({\n        queryCreator: queryDateDatasetsForMeasure,\n    });\n    useEffect(() => {\n        queryDateDatasets(widget.kpi.metric);\n    }, [queryDateDatasets, widget.kpi.metric]);\n    const isWidgetDateDatasetAutoSelect = useDashboardSelector(selectWidgetDateDatasetAutoSelect);\n    const isLoadingAdditionalData = useDashboardSelector(selectIsWidgetLoadingAdditionalDataByWidgetRef(ref));\n    const dispatch = useDashboardDispatch();\n    const { run: preselectDateDataset } = useDashboardCommandProcessing({\n        commandCreator: enableKpiWidgetDateFilter,\n        successEvent: \"GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onError: () => {\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(ref));\n            dispatch(uiActions.setWidgetDateDatasetAutoSelect(false));\n        },\n        onSuccess: () => {\n            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(ref));\n        },\n    });\n    // preselect the first dataset upon loading if the auto select was true\n    useEffect(() => {\n        if (isWidgetDateDatasetAutoSelect) {\n            preselectDateDataset(ref, \"default\");\n        }\n        // We need to safely serialize ref here to avoid recalling the effect\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isWidgetDateDatasetAutoSelect, safeSerializeObjRef(ref), preselectDateDataset]);\n    const { handleDateDatasetChanged, shouldOpenDateDatasetPicker } = useDateDatasetFilter(result === null || result === void 0 ? void 0 : result.dateDatasets);\n    return (React.createElement(\"div\", { className: \"gd-kpi-date-dataset-dropdown\" },\n        React.createElement(DateDatasetFilter, { widget: widget, dateFilterCheckboxDisabled: false, isDatasetsLoading: status === \"running\" || status === \"pending\" || isLoadingAdditionalData, relatedDateDatasets: result === null || result === void 0 ? void 0 : result.dateDatasetsOrdered, shouldPickDateDataset: isWidgetDateDatasetAutoSelect, shouldOpenDateDatasetPicker: shouldOpenDateDatasetPicker, isLoadingAdditionalData: isLoadingAdditionalData, onDateDatasetChanged: handleDateDatasetChanged })));\n};\n//# sourceMappingURL=KpiWidgetDateDatasetFilter.js.map","// (C) 2007-2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { ShortenedText } from \"@gooddata/sdk-ui-kit\";\nimport { stringUtils } from \"@gooddata/util\";\nconst tooltipAlignPoints = [{ align: \"cl cr\", offset: { x: -10, y: 0 } }];\nexport const MetricDropdownItem = ({ item, isSelected, unlistedTitle, unlistedIconTitle, isMobile, onClick, }) => {\n    if (!item) {\n        return null;\n    }\n    const unlistedIcon = (item === null || item === void 0 ? void 0 : item.unlisted) ? (React.createElement(\"span\", { title: unlistedIconTitle, className: \"gd-icon-16 gd-icon-unlisted\" })) : (false);\n    const effectiveTitle = (item === null || item === void 0 ? void 0 : item.unlisted) ? unlistedTitle : item.title;\n    const metricItemClassNames = cx(`s-${stringUtils.simplifyText(effectiveTitle)}`, {\n        \"gd-list-item\": true,\n        \"gd-list-item-shortened\": true,\n        \"is-selected\": isSelected,\n    });\n    const title = isMobile ? (effectiveTitle) : (React.createElement(ShortenedText, { tooltipAlignPoints: tooltipAlignPoints }, effectiveTitle));\n    return (React.createElement(\"div\", { key: item.id, className: metricItemClassNames, onClick: onClick },\n        title,\n        unlistedIcon));\n};\n//# sourceMappingURL=MetricDropdownItem.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { areObjRefsEqual } from \"@gooddata/sdk-model\";\nimport { Dropdown, DropdownButton, DropdownList } from \"@gooddata/sdk-ui-kit\";\nimport cx from \"classnames\";\nimport debounce from \"lodash/debounce.js\";\nimport { useDashboardSelector, selectCatalogMeasures, selectEnableRenamingMeasureToMetric, } from \"../../../../../model/index.js\";\nimport { CONFIG_PANEL_INNER_WIDTH } from \"../constants.js\";\nimport { MetricDropdownItem } from \"./MetricDropdownItem.js\";\nconst alignPoints = [{ align: \"bl tl\" }];\nconst LIST_EXTRAS = 58; // search field + top/bottom borders\nconst LIST_ITEM_HEIGHT = 28;\nconst MAX_LIST_HEIGHT = 294;\nexport const MetricDropdown = (props) => {\n    var _a, _b;\n    const { onSelect, bodyClassName, selectedItems, openOnInit } = props;\n    const intl = useIntl();\n    const buttonRef = useRef(null);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const measures = useDashboardSelector(selectCatalogMeasures);\n    const shouldRenameMeasureToMetric = useDashboardSelector(selectEnableRenamingMeasureToMetric);\n    const debouncedOnSearch = useRef(debounce((newSearchQuery) => {\n        setSearchQuery(newSearchQuery);\n    }, 250));\n    const [selectedRef] = selectedItems;\n    const selectedItem = selectedRef\n        ? measures.find((m) => areObjRefsEqual(m.measure.ref, selectedItems[0]))\n        : undefined;\n    const buttonValue = (_b = (_a = selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.measure) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : intl.formatMessage({ id: \"configurationPanel.selectMeasurePlaceholder\" });\n    const onOpenStateChanged = useCallback((isOpen) => {\n        if (isOpen && searchQuery) {\n            setSearchQuery(\"\");\n        }\n    }, [searchQuery]);\n    const filteredMeasures = useMemo(() => searchQuery\n        ? measures.filter((m) => m.measure.title.toLowerCase().includes(searchQuery.toLowerCase()))\n        : measures, [measures, searchQuery]);\n    const calculateHeight = (itemsCount) => {\n        const winHeight = window.innerHeight;\n        const dropdownButtonBottom = buttonRef.current ? buttonRef.current.getBoundingClientRect().bottom : 0;\n        const minHeight = Math.min(winHeight - dropdownButtonBottom - LIST_EXTRAS, MAX_LIST_HEIGHT, LIST_ITEM_HEIGHT * itemsCount);\n        return Math.max(LIST_ITEM_HEIGHT, minHeight);\n    };\n    const height = calculateHeight(filteredMeasures.length) || MAX_LIST_HEIGHT;\n    return (React.createElement(Dropdown, { alignPoints: alignPoints, className: \"s-metric_select\", closeOnMouseDrag: true, closeOnParentScroll: true, openOnInit: openOnInit, ignoreClicksOnByClass: [\".dash-content\"], onOpenStateChanged: onOpenStateChanged, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(\"div\", { ref: buttonRef },\n            React.createElement(DropdownButton, { className: shouldRenameMeasureToMetric ? \"type-metric\" : \"type-measure\", isSmall: true, value: buttonValue, isOpen: isOpen, onClick: toggleDropdown }))), renderBody: ({ closeDropdown }) => (React.createElement(\"div\", { className: cx(bodyClassName, \"metrics-dropdown\") },\n            React.createElement(DropdownList, { items: filteredMeasures, searchFieldSize: \"small\", showSearch: true, onSearch: debouncedOnSearch.current, searchString: searchQuery, height: height, width: CONFIG_PANEL_INNER_WIDTH, \n                // disabling autofocus for now as it causes the page to scroll to top for no reason\n                disableAutofocus: true, renderItem: ({ item }) => {\n                    return (React.createElement(MetricDropdownItem, { item: item.measure, isSelected: !!selectedRef && areObjRefsEqual(selectedRef, item.measure.ref), unlistedTitle: intl.formatMessage({\n                            id: \"configurationPanel.unlistedMetric\",\n                        }), unlistedIconTitle: intl.formatMessage({\n                            id: \"configurationPanel.unlistedMetricIconTitle\",\n                        }), onClick: () => {\n                            onSelect(item.measure);\n                            closeDropdown();\n                        } }));\n                } }))) }));\n};\n//# sourceMappingURL=MetricDropdown.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { safeSerializeObjRef } from \"../../../../../_staging/metadata/safeSerializeObjRef.js\";\nimport { MetricDropdown } from \"./MetricDropdown.js\";\nexport const KpiMetricDropdown = (props) => {\n    const { widget, onMeasureChange } = props;\n    const workspace = useWorkspaceStrict();\n    const measureRef = widget === null || widget === void 0 ? void 0 : widget.kpi.metric;\n    const [selectedMeasure, setSelectedMeasure] = useState(measureRef);\n    const selectedItems = useMemo(() => (selectedMeasure ? [selectedMeasure] : []), [selectedMeasure]);\n    const handleMeasureChanged = useCallback((measure) => {\n        onMeasureChange(measure.ref);\n        setSelectedMeasure(measure.ref);\n    }, [onMeasureChange]);\n    useEffect(() => {\n        setSelectedMeasure(measureRef);\n    }, [safeSerializeObjRef(measureRef)]);\n    return (React.createElement(MetricDropdown, { workspace: workspace, openOnInit: !measureRef, bodyClassName: \"configuration-dropdown metrics-list s-metrics-list\", selectedItems: selectedItems, onSelect: handleMeasureChanged }));\n};\n//# sourceMappingURL=KpiMetricDropdown.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Button, Typography } from \"@gooddata/sdk-ui-kit\";\nexport const KpiConfigurationPanelHeader = (props) => {\n    const { onCloseButtonClick } = props;\n    return (React.createElement(\"div\", { className: \"configuration-panel-header\" },\n        React.createElement(Typography, { tagName: \"h3\", className: \"configuration-panel-header-title\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.title\" })),\n        React.createElement(Button, { className: \"gd-button-link gd-button-icon-only gd-icon-cross configuration-panel-header-close-button s-configuration-panel-header-close-button\", onClick: onCloseButtonClick })));\n};\n//# sourceMappingURL=KpiConfigurationPanelHeader.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Message } from \"@gooddata/sdk-ui-kit\";\nexport const KpiConfigurationMessages = (props) => {\n    const { numberOfAlerts } = props;\n    if (numberOfAlerts) {\n        return (React.createElement(\"div\", { className: \"warning s-alert-edit-warning\" },\n            React.createElement(Message, { type: \"warning\" },\n                React.createElement(FormattedMessage, { id: \"configurationPanel.breakAlertWarning\", values: { numAlerts: numberOfAlerts } }))));\n    }\n    return null;\n};\n//# sourceMappingURL=KpiConfigurationMessages.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport cx from \"classnames\";\nimport flatMap from \"lodash/flatMap.js\";\nimport sortBy from \"lodash/sortBy.js\";\nimport { Button, Dropdown, DropdownButton, DropdownList, NoData, SingleSelectListItem, } from \"@gooddata/sdk-ui-kit\";\nimport { widgetRef } from \"@gooddata/sdk-model\";\nimport { removeDrillForKpiWidget, selectLegacyDashboards, selectShouldHidePixelPerfectExperience, setDrillForKpiWidget, useDashboardDispatch, useDashboardSelector, } from \"../../../../../model/index.js\";\nimport { CONFIG_PANEL_INNER_WIDTH } from \"../constants.js\";\nconst alignPoints = [{ align: \"bl tl\" }, { align: \"tl bl\" }];\nconst CONFIG_PANEL_DRILL_WIDTH = CONFIG_PANEL_INNER_WIDTH - 23;\nconst DrillToDropdownButton = (props) => {\n    const { isDisabled = false, isOpen = false, value = \"\", selection, title = \"\", onClick } = props;\n    let button;\n    if (selection) {\n        button = React.createElement(DropdownButton, { title: title, value: value, onClick: onClick, isOpen: isOpen });\n    }\n    else {\n        const buttonClasses = cx(\"gd-button-secondary\", \"gd-button-small\", \"gd-icon-add\", {\n            \"is-focus\": isOpen,\n        });\n        button = (React.createElement(Button, { onClick: onClick, title: title, className: buttonClasses, value: value, disabled: isDisabled }));\n    }\n    return React.createElement(\"div\", { className: \"s-drill_to_select\" }, button);\n};\nconst KpiDrillConfigurationCore = (props) => {\n    var _a, _b;\n    const { widget } = props;\n    const intl = useIntl();\n    const dispatch = useDashboardDispatch();\n    const onDrillToSelect = useCallback((item) => {\n        dispatch(setDrillForKpiWidget(widgetRef(widget), item.dashboardRef, item.identifier));\n    }, [dispatch, widget]);\n    const onDrillToRemove = useCallback(() => {\n        dispatch(removeDrillForKpiWidget(widgetRef(widget)));\n    }, [dispatch, widget]);\n    const dashboards = useDashboardSelector(selectLegacyDashboards);\n    const drillToItem = (_b = (_a = widget.drills) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.tab;\n    const UNLISTED_DASHBOARD_TAB = {\n        title: intl.formatMessage({ id: \"configurationPanel.unlistedDashboardTab\" }),\n    };\n    const drillToItems = useMemo(() => {\n        if (!dashboards) {\n            return [];\n        }\n        const sortedDashboards = sortBy(dashboards, (dashboard) => dashboard.title);\n        return flatMap(sortedDashboards, (dash) => {\n            return [\n                {\n                    title: dash.title,\n                    identifier: dash.identifier,\n                    dashboardRef: dash.ref,\n                    type: \"header\",\n                },\n                ...dash.tabs.map((tab) => {\n                    return {\n                        title: tab.title,\n                        identifier: tab.identifier,\n                        dashboardRef: dash.ref,\n                        type: undefined,\n                    };\n                }),\n            ];\n        });\n    }, [dashboards]);\n    const foundDrillToItem = drillToItems === null || drillToItems === void 0 ? void 0 : drillToItems.find((item) => item.identifier === drillToItem);\n    const selectedDrillToItem = drillToItem ? foundDrillToItem || UNLISTED_DASHBOARD_TAB : null;\n    const buttonValue = selectedDrillToItem\n        ? selectedDrillToItem.title\n        : intl.formatMessage({ id: \"configurationPanel.selectDashboard\" });\n    return (React.createElement(\"div\", { className: \"drill-to-dropdown-container\" },\n        React.createElement(Dropdown, { className: \"drill-to-dropdown s-drill-to-dropdown\", closeOnParentScroll: true, closeOnMouseDrag: true, alignPoints: alignPoints, renderButton: ({ isOpen, toggleDropdown }) => (React.createElement(DrillToDropdownButton, { title: buttonValue, value: buttonValue, selection: selectedDrillToItem, isOpen: isOpen, onClick: toggleDropdown })), renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { isLoading: !dashboards, renderNoData: ({ hasNoMatchingData }) => (React.createElement(NoData, { hasNoMatchingData: hasNoMatchingData, noDataLabel: intl.formatMessage({\n                        id: \"configurationPanel.noLinkableDashboards\",\n                    }) })), className: \"configuration-dropdown s-drill-to-list\", width: CONFIG_PANEL_DRILL_WIDTH, items: drillToItems, renderItem: ({ item }) => {\n                    const selected = selectedDrillToItem && selectedDrillToItem.title === item.title;\n                    return (React.createElement(SingleSelectListItem, { title: item.title, isSelected: !!selected, type: item.type, onClick: () => {\n                            onDrillToSelect(item);\n                            closeDropdown();\n                        } }));\n                } })) }),\n        drillToItem ? (React.createElement(Button, { className: \"gd-button-link-dimmed gd-button-icon-only gd-icon-cross button-remove-drill-to s-button-remove-drill-to\", onClick: onDrillToRemove })) : null));\n};\nexport const KpiDrillConfiguration = (props) => {\n    const isHidden = useDashboardSelector(selectShouldHidePixelPerfectExperience);\n    if (isHidden) {\n        return null;\n    }\n    return React.createElement(KpiDrillConfigurationCore, Object.assign({}, props));\n};\n//# sourceMappingURL=KpiDrillConfiguration.js.map","// (C) 2022 GoodData Corporation\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Typography, Dropdown, DropdownList, SingleSelectListItem, DropdownButton, } from \"@gooddata/sdk-ui-kit\";\nimport { areObjRefsEqual, } from \"@gooddata/sdk-model\";\nimport { InsightDescription } from \"../../insight/configuration/InsightDescriptionConfig/InsightDescription.js\";\nconst getKpiMetricDescription = (metrics, ref) => {\n    var _a;\n    return (_a = metrics.find((metric) => areObjRefsEqual(metric.measure.ref, ref))) === null || _a === void 0 ? void 0 : _a.measure.description;\n};\nconst getStateFromConfig = (descriptionConfig, kpiDescription, metricDescription) => {\n    if (!descriptionConfig.visible) {\n        return {\n            config: \"none\",\n            description: \"\",\n        };\n    }\n    const useMetricDescription = descriptionConfig.source === \"metric\";\n    return {\n        config: descriptionConfig.source,\n        description: useMetricDescription ? metricDescription : kpiDescription,\n    };\n};\nexport function KpiDescriptionConfig(props) {\n    var _a, _b;\n    const { descriptionConfig, kpi, metrics, setDescriptionConfiguration, isKpiDescriptionEnabled, setKpiDescription, } = props;\n    const intl = useIntl();\n    const dropdownItems = useMemo(() => [\n        {\n            id: \"metric\",\n            title: intl.formatMessage({ id: \"configurationPanel.visualprops.inheritDescription\" }),\n            info: intl.formatMessage({ id: \"configurationPanel.visualprops.inheritKpiDescriptionHelp\" }),\n        },\n        {\n            id: \"kpi\",\n            title: intl.formatMessage({ id: \"configurationPanel.visualprops.customDescription\" }),\n            info: intl.formatMessage({ id: \"configurationPanel.visualprops.customKpiDescriptionHelp\" }),\n        },\n        {\n            id: \"none\",\n            title: intl.formatMessage({ id: \"configurationPanel.visualprops.noneDescription\" }),\n        },\n    ], [intl]);\n    const metricDescription = (_a = getKpiMetricDescription(metrics, kpi.kpi.metric)) !== null && _a !== void 0 ? _a : \"\";\n    const [kpiDescriptionState, setKpiDescriptionState] = useState(getStateFromConfig(descriptionConfig, kpi.description, metricDescription));\n    const [lastCustomKpiDescription, setLastCustomKpiDescription] = useState(kpi.description);\n    const handleDescriptionChange = useCallback((newDescription) => {\n        setKpiDescription(kpi, newDescription);\n        setKpiDescriptionState((prevState) => (Object.assign(Object.assign({}, prevState), { description: newDescription })));\n        setLastCustomKpiDescription(newDescription);\n    }, [kpi, setKpiDescription, setKpiDescriptionState]);\n    const handleDescriptionConfigChange = useCallback((config) => {\n        let newConfig;\n        if (config === \"none\") {\n            newConfig = {\n                visible: false,\n                source: \"metric\",\n            };\n            setKpiDescriptionState(getStateFromConfig(newConfig, \"\", \"\"));\n        }\n        else {\n            newConfig = {\n                visible: true,\n                source: config,\n            };\n            setKpiDescriptionState(getStateFromConfig(newConfig, config === \"kpi\" ? lastCustomKpiDescription : \"\", metricDescription));\n        }\n        setDescriptionConfiguration(kpi, newConfig);\n        if (config === \"kpi\") {\n            setKpiDescription(kpi, lastCustomKpiDescription !== null && lastCustomKpiDescription !== void 0 ? lastCustomKpiDescription : \"\");\n        }\n        if (config === \"none\" || config === \"metric\") {\n            setKpiDescription(kpi, \"\");\n        }\n    }, [kpi, metricDescription, setDescriptionConfiguration, setKpiDescription, lastCustomKpiDescription]);\n    return (React.createElement(React.Fragment, null, isKpiDescriptionEnabled ? (React.createElement(\"div\", { className: \"configuration-category s-description-configuration description-configuration-section\" },\n        React.createElement(Typography, { tagName: \"h3\" },\n            React.createElement(FormattedMessage, { id: \"configurationPanel.visualprops.sectionDescription\" })),\n        React.createElement(Dropdown, { closeOnParentScroll: true, renderBody: ({ closeDropdown }) => (React.createElement(DropdownList, { items: dropdownItems, renderItem: ({ item }) => {\n                    return (React.createElement(SingleSelectListItem, { title: item.title, info: item.info, isSelected: item.id === kpiDescriptionState.config, onClick: () => {\n                            handleDescriptionConfigChange(item.id);\n                            closeDropdown();\n                        } }));\n                } })), renderButton: ({ openDropdown, isOpen }) => {\n                var _a;\n                return (React.createElement(DropdownButton, { value: (_a = dropdownItems.find((item) => item.id === kpiDescriptionState.config)) === null || _a === void 0 ? void 0 : _a.title, isOpen: isOpen, onClick: openDropdown, className: \"description-config-dropdown-button s-description-config-dropdown-button\" }));\n            } }),\n        kpiDescriptionState.config === \"kpi\" || kpiDescriptionState.config === \"metric\" ? (React.createElement(InsightDescription, { description: (_b = kpiDescriptionState.description) !== null && _b !== void 0 ? _b : \"\", setDescription: handleDescriptionChange, readOnly: kpiDescriptionState.config === \"metric\" })) : null)) : null));\n}\n//# sourceMappingURL=KpiDescriptionConfig.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nimport { widgetRef } from \"@gooddata/sdk-model\";\nimport { ScrollablePanel, Typography } from \"@gooddata/sdk-ui-kit\";\nimport { AttributeFilterConfiguration } from \"../../common/index.js\";\nimport { KpiComparison } from \"./KpiComparison/KpiComparison.js\";\nimport { KpiWidgetDateDatasetFilter } from \"./KpiWidgetDateDatasetFilter.js\";\nimport { KpiMetricDropdown } from \"./KpiMetricDropdown/KpiMetricDropdown.js\";\nimport { KpiConfigurationPanelHeader } from \"./KpiConfigurationPanelHeader.js\";\nimport { KpiConfigurationMessages } from \"./KpiConfigurationMessages.js\";\nimport { KpiDrillConfiguration } from \"./KpiDrill/KpiDrillConfiguration.js\";\nimport { safeSerializeObjRef } from \"../../../../_staging/metadata/safeSerializeObjRef.js\";\nimport { changeKpiWidgetConfiguration, changeKpiWidgetDescription, queryWidgetAlertCount, selectCatalogMeasures, selectHideKpiDrillInEmbedded, selectIsEmbedded, selectSettings, useDashboardDispatch, useDashboardQueryProcessing, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { KpiDescriptionConfig } from \"./KpiDescriptionConfig.js\";\nexport const KpiConfigurationPanelCore = (props) => {\n    var _a;\n    const { widget, onMeasureChange, onClose } = props;\n    const ref = widget && widgetRef(widget);\n    const metric = widget === null || widget === void 0 ? void 0 : widget.kpi.metric;\n    const { run: runAlertNumberQuery, result: numberOfAlerts, status, } = useDashboardQueryProcessing({\n        queryCreator: queryWidgetAlertCount,\n    });\n    useEffect(() => {\n        if (ref) {\n            runAlertNumberQuery(ref);\n        }\n    }, [safeSerializeObjRef(ref)]);\n    const isNumOfAlertsLoaded = status === \"success\";\n    const configurationCategoryClasses = cx(\"configuration-category\", {\n        \"s-widget-alerts-information-loaded\": isNumOfAlertsLoaded,\n    });\n    const scrollablePanelClasses = cx(\"configuration-panel\", \"configuration-panel-kpi\", \"s-configuration-scrollable-panel\");\n    const sectionHeaderClasses = cx({ \"is-disabled\": !metric });\n    const defaultDescriptionConfig = {\n        source: \"metric\",\n        visible: true,\n    };\n    const settings = useDashboardSelector(selectSettings);\n    const measures = useDashboardSelector(selectCatalogMeasures);\n    const isEmbedded = useDashboardSelector(selectIsEmbedded);\n    const hideKpiDrillInEmbedded = useDashboardSelector(selectHideKpiDrillInEmbedded);\n    const dispatch = useDashboardDispatch();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(KpiConfigurationPanelHeader, { onCloseButtonClick: onClose }),\n        React.createElement(ScrollablePanel, { className: scrollablePanelClasses },\n            React.createElement(\"div\", { className: configurationCategoryClasses },\n                React.createElement(KpiConfigurationMessages, { numberOfAlerts: numberOfAlerts }),\n                React.createElement(Typography, { tagName: \"h3\" },\n                    React.createElement(FormattedMessage, { id: \"configurationPanel.measure\" })),\n                React.createElement(KpiMetricDropdown, { widget: widget, onMeasureChange: onMeasureChange }),\n                !!widget && (React.createElement(KpiDescriptionConfig, { kpi: widget, metrics: measures, isKpiDescriptionEnabled: settings.enableDescriptions || false, descriptionConfig: ((_a = widget.configuration) === null || _a === void 0 ? void 0 : _a.description) || defaultDescriptionConfig, setDescriptionConfiguration: (kpi, config) => {\n                        dispatch(changeKpiWidgetConfiguration(kpi.ref, Object.assign(Object.assign({}, kpi.configuration), { description: config })));\n                    }, setKpiDescription: (kpi, description) => {\n                        dispatch(changeKpiWidgetDescription(kpi.ref, {\n                            description,\n                        }));\n                    } })),\n                React.createElement(Typography, { tagName: \"h3\", className: sectionHeaderClasses },\n                    React.createElement(FormattedMessage, { id: \"configurationPanel.filterBy\" })),\n                !!widget && (React.createElement(React.Fragment, null,\n                    React.createElement(KpiWidgetDateDatasetFilter, { widget: widget }),\n                    React.createElement(AttributeFilterConfiguration, { widget: widget }))),\n                React.createElement(Typography, { tagName: \"h3\", className: sectionHeaderClasses },\n                    React.createElement(FormattedMessage, { id: \"configurationPanel.comparison\" })),\n                !!widget && React.createElement(KpiComparison, { widget: widget }),\n                isEmbedded && hideKpiDrillInEmbedded ? null : (React.createElement(React.Fragment, null,\n                    React.createElement(Typography, { tagName: \"h3\", className: sectionHeaderClasses },\n                        React.createElement(FormattedMessage, { id: \"configurationPanel.drillIntoDashboard\" })),\n                    !!widget && React.createElement(KpiDrillConfiguration, { widget: widget })))))));\n};\n//# sourceMappingURL=KpiConfigurationPanelCore.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { replaceSectionItem, selectAllCatalogMeasuresMap, selectSettings, selectWidgetCoordinatesByRef, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { getSizeInfo } from \"../../../_staging/layout/sizing.js\";\nimport { KpiConfigurationPanelCore } from \"../kpi/DefaultKpiConfigurationPanel/KpiConfigurationPanelCore.js\";\nexport const KpiPlaceholderConfigurationPanel = (props) => {\n    const { widget, onClose } = props;\n    const dispatch = useDashboardDispatch();\n    const settings = useDashboardSelector(selectSettings);\n    const measuresMap = useDashboardSelector(selectAllCatalogMeasuresMap);\n    const { itemIndex, sectionIndex } = useDashboardSelector(selectWidgetCoordinatesByRef(widget.ref));\n    const replaceKpiProcessing = useDashboardCommandProcessing({\n        commandCreator: replaceSectionItem,\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        successEvent: \"GDC.DASH/EVT.FLUID_LAYOUT.ITEM_REPLACED\",\n        onSuccess: (event) => {\n            const ref = event.payload.items[0].widget.ref;\n            dispatch(uiActions.selectWidget(ref));\n            dispatch(uiActions.setConfigurationPanelOpened(true));\n        },\n    });\n    const handleMeasureChanged = useCallback((measureRef) => {\n        const measure = measuresMap.get(measureRef);\n        invariant(measure, \"Invalid measure when creating a KPI\");\n        const sizeInfo = getSizeInfo(settings, \"kpi\");\n        // replace the placeholder that is already in place\n        replaceKpiProcessing.run(sectionIndex, itemIndex, {\n            type: \"IDashboardLayoutItem\",\n            size: {\n                xl: {\n                    gridHeight: sizeInfo.height.default,\n                    gridWidth: sizeInfo.width.default,\n                },\n            },\n            widget: {\n                type: \"kpi\",\n                description: \"\",\n                drills: [],\n                ignoreDashboardFilters: [],\n                kpi: {\n                    comparisonType: \"previousPeriod\",\n                    metric: measureRef,\n                    comparisonDirection: \"growIsGood\",\n                },\n                title: measure.measure.title,\n                dateDataSet: undefined, // the dataset is preselected elsewhere\n            },\n        });\n    }, [measuresMap, settings, replaceKpiProcessing, sectionIndex, itemIndex]);\n    return React.createElement(KpiConfigurationPanelCore, { onMeasureChange: handleMeasureChanged, onClose: onClose });\n};\n//# sourceMappingURL=KpiPlaceholderConfigurationPanel.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { invariant } from \"ts-invariant\";\nimport { isKpiPlaceholderWidget } from \"../../../widgets/index.js\";\nimport { eagerRemoveSectionItem, selectWidgetCoordinatesByRef, uiActions, useDashboardDispatch, useDashboardSelector, useWidgetSelection, } from \"../../../model/index.js\";\nimport { DashboardItem, DashboardItemContent } from \"../../presentationComponents/index.js\";\nimport { ConfigurationBubble } from \"../common/index.js\";\nimport { KpiPlaceholderConfigurationPanel } from \"./KpiPlaceholderConfigurationPanel.js\";\n/**\n * @internal\n */\nexport const DefaultDashboardKpiPlaceholderWidget = (props) => {\n    const { widget, screen } = props;\n    invariant(isKpiPlaceholderWidget(widget));\n    const dispatch = useDashboardDispatch();\n    const { itemIndex, sectionIndex } = useDashboardSelector(selectWidgetCoordinatesByRef(widget.ref));\n    const { isSelectable, isSelected } = useWidgetSelection(widget.ref);\n    // keep information if this widget has been selected in the past\n    const wasSelected = useRef(isSelected);\n    useEffect(() => {\n        if (isSelected) {\n            wasSelected.current = true;\n        }\n    }, [isSelected]);\n    useEffect(() => {\n        // if the widget was selected in the past and is now not selected, it has just been unselected\n        // -> remove its widget placeholder\n        if (wasSelected.current && !isSelected) {\n            dispatch(eagerRemoveSectionItem(sectionIndex, itemIndex));\n        }\n    }, [dispatch, isSelected, itemIndex, sectionIndex]);\n    const onClose = useCallback(() => {\n        dispatch(uiActions.setConfigurationPanelOpened(false));\n        dispatch(eagerRemoveSectionItem(sectionIndex, itemIndex));\n    }, [dispatch, itemIndex, sectionIndex]);\n    return (React.createElement(DashboardItem, { className: \"is-selected is-placeholder is-edit-mode\", screen: screen },\n        React.createElement(DashboardItemContent, { isSelected: isSelected, isSelectable: isSelectable },\n            React.createElement(ConfigurationBubble, { onClose: onClose },\n                React.createElement(KpiPlaceholderConfigurationPanel, { widget: widget, onClose: onClose })),\n            React.createElement(\"div\", { className: \"kpi-placeholder select-measure\" }))));\n};\n//# sourceMappingURL=DefaultDashboardKpiPlaceholderWidget.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { KPI_WIDGET_SIZE_INFO_DEFAULT } from \"@gooddata/sdk-ui-ext\";\nimport { DraggableCreatePanelItem } from \"../DraggableCreatePanelItem.js\";\nconst dragItem = {\n    type: \"kpi-placeholder\",\n    size: {\n        gridHeight: KPI_WIDGET_SIZE_INFO_DEFAULT.height.default,\n        gridWidth: KPI_WIDGET_SIZE_INFO_DEFAULT.width.default,\n    },\n};\n/**\n * @internal\n */\nexport const DraggableKpiCreatePanelItem = ({ CreatePanelItemComponent, WrapCreatePanelItemWithDragComponent, disabled, }) => {\n    return (React.createElement(DraggableCreatePanelItem, { Component: CreatePanelItemComponent, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent, disabled: disabled, dragItem: dragItem, hideDefaultPreview: false }));\n};\n//# sourceMappingURL=DraggableKpiCreatePanelItem.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cx from \"classnames\";\nexport const AddKpiWidgetButton = ({ disabled }) => {\n    return (React.createElement(\"div\", { className: cx(\"add-item-placeholder\", \"add-kpi-placeholder\", \"s-add-kpi\", { disabled }) },\n        React.createElement(FormattedMessage, { id: \"addPanel.kpi\" })));\n};\n//# sourceMappingURL=AddKpiWidgetButton.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { Bubble, BubbleHoverTrigger } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useDashboardSelector, selectHasCatalogMeasures, selectIsWhiteLabeled, } from \"../../../model/index.js\";\nimport { AddKpiWidgetButton, DraggableKpiCreatePanelItem } from \"../../dragAndDrop/index.js\";\nconst bubbleAlignPoints = [{ align: \"cr cl\", offset: { x: -20, y: 0 } }];\n/**\n * @internal\n */\nexport const CreatableKpi = (props) => {\n    const { WrapCreatePanelItemWithDragComponent } = props;\n    const hasMeasures = useDashboardSelector(selectHasCatalogMeasures);\n    const isWhiteLabeled = useDashboardSelector(selectIsWhiteLabeled);\n    const disabled = !hasMeasures;\n    const tooltip = disabled && (React.createElement(\"div\", null,\n        React.createElement(FormattedMessage, { id: \"addPanel.kpi.tooltip.no_measures\" }),\n        \"\\u00A0\",\n        !isWhiteLabeled && (React.createElement(\"a\", { href: \"https://help.gooddata.com/pages/viewpage.action?pageId=86794662#DataCataloginAnalyticalDesigner-AdditemstoDataCatalog\", rel: \"noopener noreferrer\", target: \"_blank\", className: \"s-add-kpi-tooltip-link\" },\n            React.createElement(FormattedMessage, { id: \"addPanel.kpi.tooltip.no_measures.link\" })))));\n    return (React.createElement(BubbleHoverTrigger, { eventsOnBubble: true, className: \"s-add-kpi-bubble-trigger\" },\n        React.createElement(DraggableKpiCreatePanelItem, { CreatePanelItemComponent: AddKpiWidgetButton, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent, disabled: disabled }),\n        tooltip ? React.createElement(Bubble, { alignPoints: bubbleAlignPoints }, tooltip) : null));\n};\n//# sourceMappingURL=CreatableKpi.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { widgetRef, widgetTitle } from \"@gooddata/sdk-model\";\nimport { changeKpiWidgetMeasure, selectAllCatalogMeasuresMap, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../../../model/index.js\";\nimport { KpiConfigurationPanelCore } from \"./KpiConfigurationPanelCore.js\";\n/**\n * @internal\n */\nexport const DefaultKpiConfigurationPanel = (props) => {\n    var _a;\n    const { widget } = props;\n    const dispatch = useDashboardDispatch();\n    const measureRef = widget.kpi.metric;\n    const measuresMap = useDashboardSelector(selectAllCatalogMeasuresMap);\n    const measureTitle = (_a = measuresMap.get(measureRef)) === null || _a === void 0 ? void 0 : _a.measure.title;\n    const handleMeasureChanged = useCallback((item) => {\n        dispatch(changeKpiWidgetMeasure(widgetRef(widget), item, \n        // if the title of the widget was the same as the title of the measure\n        // update the widget title to be the title of the newly selected measure\n        measureTitle === widgetTitle(widget) ? \"from-measure\" : undefined));\n    }, [dispatch, widget, measureTitle]);\n    const handlePanelClosed = useCallback(() => dispatch(uiActions.setConfigurationPanelOpened(false)), [dispatch]);\n    return (React.createElement(KpiConfigurationPanelCore, { widget: widget, onMeasureChange: handleMeasureChanged, onClose: handlePanelClosed }));\n};\n//# sourceMappingURL=DefaultKpiConfigurationPanel.js.map","import { KpiDraggingComponent } from \"../../dragAndDrop/index.js\";\nimport { DefaultDashboardKpiPlaceholderWidget } from \"../kpiPlaceholder/index.js\";\nimport { CreatableKpi } from \"./CreatableKpi.js\";\nimport { DefaultKpiConfigurationPanel } from \"./DefaultKpiConfigurationPanel/DefaultKpiConfigurationPanel.js\";\n/**\n * @internal\n */\nexport function DefaultDashboardKpiComponentSetFactory(kpiProvider) {\n    return {\n        MainComponentProvider: kpiProvider,\n        creating: {\n            CreatingPlaceholderComponent: DefaultDashboardKpiPlaceholderWidget,\n            CreatePanelListItemComponent: CreatableKpi,\n            type: \"kpi-placeholder\",\n            priority: 5,\n        },\n        dragging: {\n            DraggingComponent: KpiDraggingComponent,\n            type: \"kpi\",\n        },\n        configuration: {\n            WidgetConfigPanelComponent: DefaultKpiConfigurationPanel,\n        },\n    };\n}\n//# sourceMappingURL=DefaultDashboardKpiComponentSetFactory.js.map","// (C) 2020-2023 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { DialogBase } from \"./DialogBase.js\";\nimport noop from \"lodash/noop.js\";\nimport { Checkbox } from \"../Form/index.js\";\nimport { ConfirmDialogBase } from \"./ConfirmDialogBase.js\";\n/**\n * @internal\n */\nclass ExportDialogBase extends DialogBase {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            includeFilterContext: this.props.includeFilterContext,\n            mergeHeaders: this.props.mergeHeaders,\n        };\n        this.onFilterContextChange = (value) => {\n            this.setState({ includeFilterContext: value });\n        };\n        this.onMergeHeadersChange = (value) => {\n            this.setState({ mergeHeaders: value });\n        };\n        this.onSubmit = () => {\n            const { filterContextVisible } = this.props;\n            const { includeFilterContext, mergeHeaders } = this.state;\n            this.props.onSubmit({\n                includeFilterContext: filterContextVisible && includeFilterContext,\n                mergeHeaders,\n            });\n        };\n    }\n    render() {\n        const { className, displayCloseButton, isPositive, isSubmitDisabled, headline, cancelButtonText, submitButtonText, onCancel, filterContextText, filterContextTitle, filterContextVisible, mergeHeadersDisabled, mergeHeadersText, mergeHeadersTitle, } = this.props;\n        const { includeFilterContext, mergeHeaders } = this.state;\n        let filterContextCheckbox;\n        if (filterContextVisible) {\n            filterContextCheckbox = (React.createElement(Checkbox, { name: \"gs.dialog.export.checkbox.includeFilterContext\", text: filterContextText, title: filterContextTitle, value: includeFilterContext, onChange: this.onFilterContextChange }));\n        }\n        return (React.createElement(ConfirmDialogBase, { className: cx(\"gd-export-dialog\", className), displayCloseButton: displayCloseButton, isPositive: isPositive, isSubmitDisabled: isSubmitDisabled, headline: headline, cancelButtonText: cancelButtonText, submitButtonText: submitButtonText, onCancel: onCancel, onSubmit: this.onSubmit },\n            React.createElement(Checkbox, { disabled: mergeHeadersDisabled, name: \"gs.dialog.export.checkbox.mergeHeaders\", text: mergeHeadersText, title: mergeHeadersTitle, value: mergeHeaders, onChange: this.onMergeHeadersChange }),\n            filterContextCheckbox));\n    }\n}\nExportDialogBase.defaultProps = {\n    displayCloseButton: true,\n    isPositive: true,\n    isSubmitDisabled: false,\n    headline: \"Export to XLSX\",\n    cancelButtonText: \"Cancel\",\n    submitButtonText: \"Export\",\n    filterContextText: \"Include applied filters\",\n    filterContextTitle: \"INSIGHT CONTEXT\",\n    filterContextVisible: true,\n    includeFilterContext: true,\n    mergeHeaders: true,\n    mergeHeadersDisabled: false,\n    mergeHeadersText: \"Keep attribute cells merged\",\n    mergeHeadersTitle: \"CELLS\",\n    onCancel: noop,\n    onSubmit: noop,\n};\nexport { ExportDialogBase };\n//# sourceMappingURL=ExportDialogBase.js.map","// (C) 2020-2023 GoodData Corporation\nimport React from \"react\";\nimport { Overlay } from \"../Overlay/index.js\";\nimport { ExportDialogBase } from \"./ExportDialogBase.js\";\nconst alignPoints = [{ align: \"cc cc\" }];\n/**\n * @internal\n */\nexport const ExportDialog = (props) => {\n    const { className, displayCloseButton, isPositive, isSubmitDisabled, containerClassName, headline, cancelButtonText, submitButtonText, filterContextText, filterContextTitle, filterContextVisible, includeFilterContext, mergeHeaders, mergeHeadersDisabled, mergeHeadersText, mergeHeadersTitle, onCancel, onSubmit, } = props;\n    return (React.createElement(Overlay, { alignPoints: alignPoints, isModal: true, positionType: \"fixed\", containerClassName: containerClassName },\n        React.createElement(ExportDialogBase, { className: className, displayCloseButton: displayCloseButton, isPositive: isPositive, isSubmitDisabled: isSubmitDisabled, headline: headline, cancelButtonText: cancelButtonText, submitButtonText: submitButtonText, filterContextText: filterContextText, filterContextTitle: filterContextTitle, filterContextVisible: filterContextVisible, includeFilterContext: includeFilterContext, mergeHeaders: mergeHeaders, mergeHeadersDisabled: mergeHeadersDisabled, mergeHeadersText: mergeHeadersText, mergeHeadersTitle: mergeHeadersTitle, onCancel: onCancel, onSubmit: onSubmit })));\n};\nExportDialog.defaultProps = ExportDialogBase.defaultProps;\n//# sourceMappingURL=ExportDialog.js.map","// (C) 2021 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { ExportDialog } from \"@gooddata/sdk-ui-kit\";\nimport { useExportDialogContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const ExportDialogProvider = () => {\n    const { closeDialog, dialogConfig, isOpen } = useExportDialogContext();\n    const intl = useIntl();\n    const { onClose: originalOnClose } = dialogConfig;\n    const onClose = useCallback(() => {\n        originalOnClose === null || originalOnClose === void 0 ? void 0 : originalOnClose();\n        closeDialog();\n    }, [originalOnClose, closeDialog]);\n    return isOpen ? (React.createElement(ExportDialog, Object.assign({}, dialogConfig, { headline: intl.formatMessage({ id: \"dialogs.export.headline\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), submitButtonText: intl.formatMessage({ id: \"dialogs.export.submit\" }), filterContextText: intl.formatMessage({ id: \"dialogs.export.includeFilters\" }), filterContextTitle: intl.formatMessage({ id: \"dialogs.export.filters\" }), mergeHeadersText: intl.formatMessage({ id: \"dialogs.export.mergeHeaders\" }), mergeHeadersTitle: intl.formatMessage({ id: \"dialogs.export.cells\" }), onClose: onClose, onCancel: closeDialog }))) : null;\n};\n//# sourceMappingURL=ExportDialogProvider.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const TopBar = (props) => {\n    const { TopBarComponent } = useDashboardComponentsContext();\n    return React.createElement(TopBarComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=TopBar.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const SaveAsDialog = (props) => {\n    const { SaveAsDialogComponent } = useDashboardComponentsContext();\n    return React.createElement(SaveAsDialogComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=SaveAsDialog.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const FilterBar = (props) => {\n    const { FilterBarComponent } = useDashboardComponentsContext();\n    return React.createElement(FilterBarComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=FilterBar.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const ShareDialog = (props) => {\n    const { ShareDialogComponent } = useDashboardComponentsContext();\n    return React.createElement(ShareDialogComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=ShareDialog.js.map","// (C) 2020-2023 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { useToastMessage } from \"@gooddata/sdk-ui-kit\";\nimport { useDashboardSelector, selectIsShareDialogOpen, useDashboardDispatch, uiActions, selectPersistedDashboard, selectCurrentUser, useDashboardCommandProcessing, changeSharing, selectCanManageWorkspace, selectDashboardPermissions, useDashboardUserInteraction, } from \"../../../model/index.js\";\nimport { ShareDialog } from \"../../shareDialog/index.js\";\nimport { useBackendStrict, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { messages } from \"../../../locales.js\";\nconst useShareDialogDashboardHeader = () => {\n    const dispatch = useDashboardDispatch();\n    const { addSuccess, addError } = useToastMessage();\n    const { shareDialogInteraction } = useDashboardUserInteraction();\n    const isShareDialogOpen = useDashboardSelector(selectIsShareDialogOpen);\n    const persistedDashboard = useDashboardSelector(selectPersistedDashboard);\n    const currentUser = useDashboardSelector(selectCurrentUser);\n    const isWorkspaceManager = useDashboardSelector(selectCanManageWorkspace);\n    const dashboardPermissions = useDashboardSelector(selectDashboardPermissions);\n    const backend = useBackendStrict();\n    const workspace = useWorkspaceStrict();\n    const { run: runChangeSharing } = useDashboardCommandProcessing({\n        commandCreator: changeSharing,\n        successEvent: \"GDC.DASH/EVT.SHARING.CHANGED\",\n        errorEvent: \"GDC.DASH/EVT.COMMAND.FAILED\",\n        onSuccess: () => {\n            addSuccess(messages.messagesSharingChangedSuccess);\n        },\n        onError: () => {\n            addError(messages.messagesSharingChangedError);\n        },\n    });\n    const closeShareDialog = useCallback(() => dispatch(uiActions.closeShareDialog()), [dispatch]);\n    const onCloseShareDialog = useCallback(() => {\n        closeShareDialog();\n    }, [closeShareDialog]);\n    const onApplyShareDialog = useCallback((payload) => {\n        closeShareDialog();\n        runChangeSharing(payload);\n    }, [closeShareDialog, runChangeSharing]);\n    const onErrorShareDialog = useCallback(() => {\n        dispatch(uiActions.closeShareDialog());\n        addError(messages.messagesSharingDialogError);\n    }, [dispatch, addError]);\n    return {\n        backend,\n        workspace,\n        isShareDialogOpen,\n        persistedDashboard,\n        currentUser,\n        onCloseShareDialog,\n        onApplyShareDialog,\n        onErrorShareDialog,\n        onInteractionShareDialog: shareDialogInteraction,\n        isLockingSupported: isWorkspaceManager,\n        isCurrentUserWorkspaceManager: isWorkspaceManager,\n        dashboardPermissions,\n    };\n};\n/**\n * @internal\n */\nexport const ShareDialogDashboardHeader = () => {\n    const { backend, workspace, isShareDialogOpen, persistedDashboard, currentUser, onCloseShareDialog, onApplyShareDialog, onErrorShareDialog, onInteractionShareDialog, isLockingSupported, isCurrentUserWorkspaceManager, dashboardPermissions, } = useShareDialogDashboardHeader();\n    if (!isShareDialogOpen) {\n        return null;\n    }\n    const currentUserPermissions = {\n        canEditAffectedObject: dashboardPermissions.canEditDashboard,\n        canEditLockedAffectedObject: dashboardPermissions.canEditLockedDashboard,\n        canShareAffectedObject: dashboardPermissions.canShareDashboard,\n        canShareLockedAffectedObject: dashboardPermissions.canShareLockedDashboard,\n        canViewAffectedObject: dashboardPermissions.canViewDashboard,\n    };\n    return (React.createElement(ShareDialog, { backend: backend, workspace: workspace, isVisible: isShareDialogOpen, currentUser: currentUser, sharedObject: persistedDashboard, onCancel: onCloseShareDialog, onApply: onApplyShareDialog, onError: onErrorShareDialog, isLockingSupported: isLockingSupported, isCurrentUserWorkspaceManager: isCurrentUserWorkspaceManager, currentUserPermissions: currentUserPermissions, onInteraction: onInteractionShareDialog }));\n};\n//# sourceMappingURL=ShareDialogDashboardHeader.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const ScheduledEmailManagementDialog = (props) => {\n    const { ScheduledEmailManagementDialogComponent } = useDashboardComponentsContext();\n    return React.createElement(ScheduledEmailManagementDialogComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=ScheduledEmailManagementDialog.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const ScheduledEmailDialog = (props) => {\n    const { ScheduledEmailDialogComponent } = useDashboardComponentsContext();\n    return React.createElement(ScheduledEmailDialogComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=ScheduledEmailDialog.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { ScheduledEmailDialog, ScheduledEmailManagementDialog } from \"../../scheduledEmail/index.js\";\nimport { useDashboardScheduledEmails } from \"../../../model/index.js\";\nexport const ScheduledEmailDialogProvider = () => {\n    const { isScheduleEmailingDialogOpen, isScheduleEmailingManagementDialogOpen, onScheduleEmailingCancel, onScheduleEmailingCreateError, onScheduleEmailingCreateSuccess, onScheduleEmailingManagementAdd, onScheduleEmailingManagementEdit, scheduledEmailToEdit, users, onScheduleEmailingSaveError, onScheduleEmailingSaveSuccess, onScheduleEmailingManagementClose, onScheduleEmailingManagementLoadingError, onScheduleEmailingManagementDeleteSuccess, onScheduleEmailingManagementDeleteError, } = useDashboardScheduledEmails();\n    return (React.createElement(React.Fragment, null,\n        isScheduleEmailingManagementDialogOpen ? (React.createElement(ScheduledEmailManagementDialog, { isVisible: isScheduleEmailingManagementDialogOpen, onAdd: onScheduleEmailingManagementAdd, onEdit: onScheduleEmailingManagementEdit, onClose: onScheduleEmailingManagementClose, onDeleteSuccess: onScheduleEmailingManagementDeleteSuccess, onLoadError: onScheduleEmailingManagementLoadingError, onDeleteError: onScheduleEmailingManagementDeleteError })) : null,\n        isScheduleEmailingDialogOpen ? (React.createElement(ScheduledEmailDialog, { isVisible: isScheduleEmailingDialogOpen, onCancel: onScheduleEmailingCancel, onError: onScheduleEmailingCreateError, onSuccess: onScheduleEmailingCreateSuccess, editSchedule: scheduledEmailToEdit, onSaveError: onScheduleEmailingSaveError, onSaveSuccess: onScheduleEmailingSaveSuccess, users: users })) : null));\n};\n//# sourceMappingURL=ScheduledEmailDialogProvider.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { ConfirmDialog, Typography } from \"@gooddata/sdk-ui-kit\";\nimport { defineMessages, FormattedMessage, useIntl } from \"react-intl\";\nimport compact from \"lodash/compact.js\";\nimport { deleteDashboard, dispatchAndWaitFor, selectEnableKPIDashboardDrillToDashboard, selectEnableKPIDashboardScheduleRecipients, selectIsDeleteDialogOpen, selectSupportsKpiWidgetCapability, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../model/index.js\";\nconst deleteMessages = defineMessages({\n    alertsAndEmails: {\n        id: \"deleteDashboardDialog.alertsAndEmailsMessage\",\n    },\n    alerts: {\n        id: \"deleteDashboardDialog.alertsMessage\",\n    },\n    emails: {\n        id: \"deleteDashboardDialog.emailsMessage\",\n    },\n    drills: {\n        id: \"deleteDashboardDialog.drillMessage\",\n    },\n});\n/**\n * @internal\n */\nexport function useDeleteDialogProps() {\n    const dispatch = useDashboardDispatch();\n    const onCancel = useCallback(() => dispatch(uiActions.closeDeleteDialog()), [dispatch]);\n    const onDelete = useCallback(() => dispatchAndWaitFor(dispatch, deleteDashboard()).finally(() => {\n        dispatch(uiActions.closeDeleteDialog());\n    }), [dispatch]);\n    const isVisible = useDashboardSelector(selectIsDeleteDialogOpen);\n    const isKpiWidgetEnabled = useDashboardSelector(selectSupportsKpiWidgetCapability);\n    const isScheduleEmailsEnabled = useDashboardSelector(selectEnableKPIDashboardScheduleRecipients);\n    const isDrillToDashboardEnabled = useDashboardSelector(selectEnableKPIDashboardDrillToDashboard);\n    return {\n        isVisible,\n        isKpiWidgetEnabled,\n        isScheduleEmailsEnabled,\n        isDrillToDashboardEnabled,\n        onCancel,\n        onDelete,\n    };\n}\n/**\n * @internal\n */\nexport const DefaultDeleteDialog = (props) => {\n    const { isVisible, isKpiWidgetEnabled, isScheduleEmailsEnabled, isDrillToDashboardEnabled, onDelete, onCancel, } = props;\n    const intl = useIntl();\n    if (!isVisible) {\n        return null;\n    }\n    const messages = compact([\n        isKpiWidgetEnabled && isScheduleEmailsEnabled && deleteMessages.alertsAndEmails,\n        isKpiWidgetEnabled && !isScheduleEmailsEnabled && deleteMessages.alerts,\n        !isKpiWidgetEnabled && isScheduleEmailsEnabled && deleteMessages.emails,\n        isDrillToDashboardEnabled && deleteMessages.drills,\n    ]);\n    return (React.createElement(ConfirmDialog, { onCancel: onCancel, onSubmit: onDelete, isPositive: false, className: \"s-dialog s-delete_dashboard_dialog\", headline: intl.formatMessage({ id: \"deleteDashboardDialog.headline\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), submitButtonText: intl.formatMessage({ id: \"deleteDashboardDialog.submitButtonText\" }) }, messages.map((message, index) => (React.createElement(React.Fragment, { key: message.id },\n        index !== 0 && React.createElement(\"br\", null),\n        React.createElement(Typography, { tagName: \"p\" },\n            React.createElement(FormattedMessage, Object.assign({}, message))))))));\n};\n//# sourceMappingURL=DefaultDeleteDialog.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { DefaultDeleteDialog } from \"./DefaultDeleteDialog.js\";\n/**\n * @internal\n */\nexport const DeleteDialog = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultDeleteDialog, Object.assign({}, props));\n};\n//# sourceMappingURL=DeleteDialog.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { ConfirmDialog, Typography } from \"@gooddata/sdk-ui-kit\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { dispatchAndWaitFor, eagerRemoveSectionItem, selectIsKpiDeleteDialogOpen, selectKpiDeleteDialogWidgetCoordinates, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../model/index.js\";\n/**\n * @internal\n */\nexport function useKpiDeleteDialogProps() {\n    const dispatch = useDashboardDispatch();\n    const coordinates = useDashboardSelector(selectKpiDeleteDialogWidgetCoordinates);\n    const onCancel = useCallback(() => dispatch(uiActions.closeKpiDeleteDialog()), [dispatch]);\n    const onDelete = useCallback(() => dispatchAndWaitFor(dispatch, eagerRemoveSectionItem(coordinates.sectionIndex, coordinates.itemIndex)).finally(() => {\n        dispatch(uiActions.closeKpiDeleteDialog());\n    }), [coordinates, dispatch]);\n    const isVisible = useDashboardSelector(selectIsKpiDeleteDialogOpen);\n    return {\n        isVisible,\n        onCancel,\n        onDelete,\n    };\n}\n/**\n * @internal\n */\nexport const DefaultKpiDeleteDialog = (props) => {\n    const { isVisible, onDelete, onCancel } = props;\n    const intl = useIntl();\n    if (!isVisible) {\n        return null;\n    }\n    return (React.createElement(ConfirmDialog, { onCancel: onCancel, onSubmit: onDelete, isPositive: false, className: \"s-dialog\", headline: intl.formatMessage({ id: \"deleteKpiConfirmationDialog.headline\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), submitButtonText: intl.formatMessage({ id: \"deleteKpiConfirmationDialog.submitButtonText\" }) },\n        React.createElement(Typography, { tagName: \"p\" },\n            React.createElement(FormattedMessage, { id: \"deleteKpiConfirmationDialog.message\" }))));\n};\n//# sourceMappingURL=DefaultKpiDeleteDialog.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { DefaultKpiDeleteDialog } from \"./DefaultKpiDeleteDialog.js\";\n/**\n * @internal\n */\nexport const KpiDeleteDialog = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultKpiDeleteDialog, Object.assign({}, props));\n};\n//# sourceMappingURL=KpiDeleteDialog.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback } from \"react\";\nimport { ConfirmDialog, Typography } from \"@gooddata/sdk-ui-kit\";\nimport { useIntl } from \"react-intl\";\nimport { cancelEditRenderMode, uiActions, useDashboardDispatch, useDashboardSelector, selectIsCancelEditModeDialogOpen, } from \"../../model/index.js\";\n/**\n * @internal\n */\nexport const useCancelEditDialog = () => {\n    const dispatch = useDashboardDispatch();\n    const onCancel = useCallback(() => dispatch(uiActions.closeCancelEditModeDialog()), [dispatch]);\n    const onSubmit = useCallback(() => {\n        dispatch(cancelEditRenderMode());\n        dispatch(uiActions.closeCancelEditModeDialog());\n    }, [dispatch]);\n    return {\n        onCancel,\n        onSubmit,\n    };\n};\n/**\n * @internal\n */\nexport const DefaultCancelEditDialog = (props) => {\n    const intl = useIntl();\n    const showCancelEditDialog = useDashboardSelector(selectIsCancelEditModeDialogOpen);\n    if (!showCancelEditDialog) {\n        return null;\n    }\n    return (React.createElement(ConfirmDialog, { headline: intl.formatMessage({ id: \"cancelConfirmationDialog.headline\" }), submitButtonText: intl.formatMessage({ id: \"cancelConfirmationDialog.submitButtonText\" }), cancelButtonText: intl.formatMessage({ id: \"cancel\" }), onCancel: props.onCancel, onSubmit: props.onSubmit, isPositive: false, className: \"s-dialog s-cancel_confirmation_dialog\" },\n        React.createElement(Typography, { tagName: \"p\" }, intl.formatMessage({ id: \"cancelConfirmationDialog.message\" }))));\n};\n//# sourceMappingURL=DefaultCancelEditDialog.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { DefaultCancelEditDialog } from \"./DefaultCancelEditDialog.js\";\n/**\n * @internal\n */\nexport const CancelEditDialog = (props) => {\n    // No customization from useDashboardComponentsContext for now\n    return React.createElement(DefaultCancelEditDialog, Object.assign({}, props));\n};\n//# sourceMappingURL=CancelEditDialog.js.map","// (C) 2020-2022 GoodData Corporation\nimport React, { useState, useCallback } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport noop from \"lodash/noop.js\";\nimport cx from \"classnames\";\nimport { Message } from \"./Message.js\";\nimport { Overlay } from \"../Overlay/index.js\";\nimport { Typography } from \"../Typography/index.js\";\n/**\n * @internal\n */\nexport const Messages = ({ messages = [], onMessageClose = noop }) => {\n    const [expandedMessageIds, setExpandedMessageIds] = useState([]);\n    const handleMessageClose = useCallback((messageId) => {\n        setExpandedMessageIds((old) => old.filter((expandedId) => expandedId !== messageId));\n        onMessageClose(messageId);\n    }, [onMessageClose]);\n    return (React.createElement(Overlay, null,\n        React.createElement(\"div\", { className: \"gd-messages\" },\n            React.createElement(TransitionGroup, null,\n                React.createElement(CSSTransition, { classNames: \"gd-message\", timeout: 220 },\n                    React.createElement(\"div\", null, messages.map((message) => {\n                        const { id, component: Component, showMore, type, contrast, intensive, } = message;\n                        const isExpanded = expandedMessageIds.includes(message.id);\n                        return (React.createElement(\"div\", { key: id },\n                            React.createElement(Message, { className: cx(`gd-message-overlay`, !showMore && \"gd-message-overlay\", showMore && \"gd-message-overlay-custom\"), type: type, onClose: () => handleMessageClose(id), contrast: contrast, intensive: intensive }, Component ? (React.createElement(Component, null)) : (React.createElement(React.Fragment, null,\n                                React.createElement(MessageWithShowMore, { message: message, shouldShowMore: !isExpanded, handleShowMore: () => {\n                                        if (isExpanded) {\n                                            setExpandedMessageIds((old) => old.filter((expandedId) => expandedId !== id));\n                                        }\n                                        else {\n                                            setExpandedMessageIds((old) => [...old, id]);\n                                        }\n                                    } }),\n                                React.createElement(MessageSimple, { message: message }))))));\n                    })))))));\n};\nconst MessageWithShowMore = ({ message, shouldShowMore, handleShowMore, }) => {\n    const { showMore, showLess, errorDetail, type } = message;\n    if (!showMore) {\n        return null;\n    }\n    const contentClassNames = cx(\"gd-message-text-content\", \"s-message-text-content\", type, {\n        off: shouldShowMore,\n        on: !shouldShowMore,\n    });\n    const showMoreLinkClassNames = cx(\"gd-message-text-showmorelink\", \"s-message-text-showmorelink\", type);\n    return (React.createElement(\"div\", { className: \"gd-message-text-showmore\" },\n        React.createElement(Typography, { tagName: \"p\", className: \"gd-message-text-header\" },\n            React.createElement(MessageElement, { message: message, type: \"span\" }),\n            React.createElement(\"span\", { className: showMoreLinkClassNames, onClick: handleShowMore }, shouldShowMore ? showMore : showLess)),\n        React.createElement(\"div\", { className: contentClassNames }, errorDetail)));\n};\nconst MessageSimple = ({ message }) => {\n    const { showMore } = message;\n    if (showMore) {\n        return null;\n    }\n    return React.createElement(MessageElement, { message: message, type: \"div\" });\n};\nconst MessageElement = ({ message, type }) => {\n    const { text, node } = message;\n    const Component = type;\n    if (node) {\n        return React.createElement(Component, { className: \"s-message-text-header-value\" }, node);\n    }\n    return (React.createElement(Component, { className: \"s-message-text-header-value\", dangerouslySetInnerHTML: { __html: text || \"\" } }));\n};\n//# sourceMappingURL=Messages.js.map","// (C) 2021-2023 GoodData Corporation\nimport React, { useCallback, useMemo } from \"react\";\nimport { defineMessages, useIntl } from \"react-intl\";\nimport compact from \"lodash/compact.js\";\nimport { selectInvalidDrillWidgetRefs, selectInvalidUrlDrillParameterWidgetWarnings, selectIsInEditMode, selectWidgetsMap, uiActions, useDashboardDispatch, useDashboardSelector, } from \"../../../model/index.js\";\nimport { isWidget, widgetTitle } from \"@gooddata/sdk-model\";\nconst commonReplacements = {\n    b: (chunks) => React.createElement(\"b\", null, chunks),\n    i: (chunks) => React.createElement(\"i\", null, chunks),\n};\nconst localizationMessages = defineMessages({\n    invalidDrillTitle: { id: \"messages.dashboard.invalidDrills.title\" },\n    invalidDrillBody: { id: \"messages.dashboard.invalidDrills.body.modern\" },\n    invalidUrlDrillTitle: { id: \"messages.dashboard.invalidCustomUrlDrills.title\" },\n    invalidUrlDrillBody: { id: \"messages.dashboard.invalidCustomUrlDrills.body.modern\" },\n    showMore: { id: \"messages.dashboard.expandable.showMore\" },\n    showLess: { id: \"messages.dashboard.expandable.showLess\" },\n});\nconst DRILL_MESSAGE_ID = \"invalid_drill_message\";\nconst URL_DRILL_MESSAGE_ID = \"invalid_url_drill_message\";\nexport function useDrillValidationMessages() {\n    const intl = useIntl();\n    const dispatch = useDashboardDispatch();\n    const allWidgets = useDashboardSelector(selectWidgetsMap);\n    const invalidDrillWidgetRefs = useDashboardSelector(selectInvalidDrillWidgetRefs);\n    const invalidUrlDrillWidgetRefs = useDashboardSelector(selectInvalidUrlDrillParameterWidgetWarnings);\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const messages = useMemo(() => {\n        if (!isInEditMode) {\n            return [];\n        }\n        const invalidDrillWidgets = compact(invalidDrillWidgetRefs.map((ref) => allWidgets.get(ref)).filter(isWidget));\n        const invalidUrlDrillWidgets = compact(invalidUrlDrillWidgetRefs.map((ref) => allWidgets.get(ref)).filter(isWidget));\n        return compact([\n            invalidDrillWidgets.length > 0 && {\n                id: DRILL_MESSAGE_ID,\n                type: \"warning\",\n                node: intl.formatMessage(localizationMessages.invalidDrillTitle, commonReplacements),\n                errorDetail: intl.formatMessage(localizationMessages.invalidDrillBody, Object.assign({ listOfWidgetTitles: invalidDrillWidgets.map(widgetTitle).join(\", \") }, commonReplacements)),\n                showMore: intl.formatMessage(localizationMessages.showMore),\n                showLess: intl.formatMessage(localizationMessages.showLess),\n            },\n            invalidUrlDrillWidgets.length > 0 && {\n                id: URL_DRILL_MESSAGE_ID,\n                type: \"warning\",\n                node: intl.formatMessage(localizationMessages.invalidUrlDrillTitle, commonReplacements),\n                errorDetail: intl.formatMessage(localizationMessages.invalidUrlDrillBody, Object.assign({ listOfWidgetTitles: invalidUrlDrillWidgets.map(widgetTitle).join(\", \") }, commonReplacements)),\n                showMore: intl.formatMessage(localizationMessages.showMore),\n                showLess: intl.formatMessage(localizationMessages.showLess),\n            },\n        ]);\n    }, [isInEditMode, invalidDrillWidgetRefs, invalidUrlDrillWidgetRefs, intl, allWidgets]);\n    const removeMessage = useCallback((id) => {\n        if (id === DRILL_MESSAGE_ID) {\n            dispatch(uiActions.resetInvalidDrillWidgetRefs());\n        }\n        if (id === URL_DRILL_MESSAGE_ID) {\n            dispatch(uiActions.resetAllInvalidCustomUrlDrillParameterWidgetsWarnings());\n        }\n    }, [dispatch]);\n    const removeAllMessages = useCallback(() => {\n        dispatch(uiActions.resetInvalidDrillWidgetRefs());\n        dispatch(uiActions.resetAllInvalidCustomUrlDrillParameterWidgetsWarnings());\n    }, [dispatch]);\n    return {\n        messages,\n        removeMessage,\n        removeAllMessages,\n    };\n}\n//# sourceMappingURL=useDrillValidationMessages.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback, useContext, useMemo } from \"react\";\nimport { Messages, ToastMessageContext } from \"@gooddata/sdk-ui-kit\";\nimport { useDrillValidationMessages } from \"./useDrillValidationMessages.js\";\n/**\n * @internal\n */\nexport const ToastMessages = () => {\n    const { messages: toastMessages, removeMessage: removeToastMessage } = useContext(ToastMessageContext);\n    const { messages: drillValidationMessages, removeMessage: removeDrillValidationMessage } = useDrillValidationMessages();\n    const messages = useMemo(() => [...toastMessages, ...drillValidationMessages], [toastMessages, drillValidationMessages]);\n    const removeMessage = useCallback(\n    // try removing the id from both collections\n    (id) => {\n        removeToastMessage(id);\n        removeDrillValidationMessage(id);\n    }, [removeDrillValidationMessage, removeToastMessage]);\n    if (messages.length > 0) {\n        return React.createElement(Messages, { messages: messages, onMessageClose: removeMessage });\n    }\n    return null;\n};\n//# sourceMappingURL=ToastMessages.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { ExportDialogProvider } from \"../../dialogs/index.js\";\nimport { TopBar, useTopBarProps } from \"../../topBar/index.js\";\nimport { SaveAsDialog, useSaveAsDialogProps } from \"../../saveAs/index.js\";\nimport { FilterBar, useFilterBarProps } from \"../../filterBar/index.js\";\nimport { ShareDialogDashboardHeader } from \"./ShareDialogDashboardHeader.js\";\nimport { ScheduledEmailDialogProvider } from \"./ScheduledEmailDialogProvider.js\";\nimport { DeleteDialog, useDeleteDialogProps } from \"../../deleteDialog/index.js\";\nimport { KpiDeleteDialog, useKpiDeleteDialogProps } from \"../../kpiDeleteDialog/index.js\";\nimport { CancelEditDialog, useCancelEditDialog } from \"../../cancelEditDialog/index.js\";\nimport { ToastMessages } from \"../components/ToastMessages.js\";\n// these wrapper components are here to prevent the whole DashboardHeader from re-rendering whenever some\n// of the sub-components' props change. by isolating the hooks more, we make sure only the really changed component re-renders.\nconst DeleteDialogWrapper = () => {\n    const deleteDialogProps = useDeleteDialogProps();\n    return React.createElement(DeleteDialog, Object.assign({}, deleteDialogProps));\n};\nconst KpiDeleteDialogWrapper = () => {\n    const kpiDeleteDialogProps = useKpiDeleteDialogProps();\n    return React.createElement(KpiDeleteDialog, Object.assign({}, kpiDeleteDialogProps));\n};\nconst SaveAsDialogWrapper = () => {\n    const saveAsDialogProps = useSaveAsDialogProps();\n    return React.createElement(SaveAsDialog, Object.assign({}, saveAsDialogProps));\n};\nconst TopBarWrapper = () => {\n    const topBarProps = useTopBarProps();\n    return React.createElement(TopBar, Object.assign({}, topBarProps));\n};\nconst FilterBarWrapper = () => {\n    const filterBarProps = useFilterBarProps();\n    return React.createElement(FilterBar, Object.assign({}, filterBarProps));\n};\nconst CancelEditDialogWrapper = () => {\n    const cancelEditDialogProps = useCancelEditDialog();\n    return React.createElement(CancelEditDialog, Object.assign({}, cancelEditDialogProps));\n};\n// split the header parts of the dashboard so that changes to their state\n// (e.g. opening email dialog) do not re-render the dashboard body\nexport const DashboardHeader = () => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ToastMessages, null),\n        React.createElement(ExportDialogProvider, null),\n        React.createElement(ScheduledEmailDialogProvider, null),\n        React.createElement(ShareDialogDashboardHeader, null),\n        React.createElement(DeleteDialogWrapper, null),\n        React.createElement(KpiDeleteDialogWrapper, null),\n        React.createElement(SaveAsDialogWrapper, null),\n        React.createElement(TopBarWrapper, null),\n        React.createElement(FilterBarWrapper, null),\n        React.createElement(CancelEditDialogWrapper, null)));\n};\n//# sourceMappingURL=DashboardHeader.js.map","// (C) 2020 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const DashboardLayout = (props) => {\n    const { LayoutComponent } = useDashboardComponentsContext();\n    return React.createElement(LayoutComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardLayout.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { defineMessage, FormattedMessage } from \"react-intl\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { Message } from \"@gooddata/sdk-ui-kit\";\nimport { selectDateFilterConfigValidationWarnings, selectEnableRenamingProjectToWorkspace, selectIsInEditMode, selectIsNewDashboard, useDashboardSelector, } from \"../../../model/index.js\";\nconst workspaceValidationMessagesMapping = {\n    ConflictingIdentifiers: defineMessage({ id: \"filters.config.warning.conflictingIdentifiers\" }),\n    NO_CONFIG: defineMessage({ id: \"filters.config.warning.workspace.notAvailable\" }),\n    NoVisibleOptions: defineMessage({ id: \"filters.config.warning.allOptionsHidden\" }),\n    SelectedOptionInvalid: defineMessage({ id: \"filters.config.warning.selectedFilterNotValid\" }),\n    TOO_MANY_CONFIGS: defineMessage({ id: \"filters.config.warning.multipleWorkspacesConfigs\" }),\n};\nconst projectValidationMessagesMapping = Object.assign(Object.assign({}, workspaceValidationMessagesMapping), { NO_CONFIG: defineMessage({ id: \"filters.config.warning.notAvailable\" }), TOO_MANY_CONFIGS: defineMessage({ id: \"filters.config.warning.multipleProjectConfigs\" }) });\n// Some warnings make sense only when creating a new dashboard, for existing dashboards they are irrelevant\n// because existing dashboard just has some option selected anyway.\nconst validationsRelevantToNewDashboardOnly = new Set([\n    \"NoVisibleOptions\",\n    \"SelectedOptionInvalid\",\n]);\nconst selectRelevantWarnings = createSelector(selectDateFilterConfigValidationWarnings, selectIsNewDashboard, (warnings, isNew) => {\n    return isNew\n        ? warnings\n        : warnings.filter((warning) => !validationsRelevantToNewDashboardOnly.has(warning));\n});\nexport const DateFilterConfigWarnings = () => {\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const warnings = useDashboardSelector(selectRelevantWarnings);\n    const enableRenamingProjectToWorkspace = useDashboardSelector(selectEnableRenamingProjectToWorkspace);\n    const effectiveMapping = enableRenamingProjectToWorkspace\n        ? workspaceValidationMessagesMapping\n        : projectValidationMessagesMapping;\n    return isInEditMode && warnings.length > 0 ? (React.createElement(Message, { type: \"warning\", contrast: true, className: \"gd-date-filter-config-warning-message\" },\n        React.createElement(\"ul\", { className: \"gd-date-filter-config-warning-message-items\" }, warnings.map((warning) => {\n            const message = effectiveMapping[warning];\n            if (message) {\n                return (React.createElement(\"li\", { key: warning },\n                    React.createElement(FormattedMessage, { id: message.id })));\n            }\n            return null;\n        })))) : null;\n};\n//# sourceMappingURL=DateFilterConfigWarnings.js.map","// (C) 2022 GoodData Corporation\nimport React, { forwardRef, useEffect } from \"react\";\nimport { useDispatchDashboardCommand, changeFilterContextSelection, useWidgetSelection, } from \"../../../model/index.js\";\nimport { useDashboardDrop, useWidgetDragHoverHandlers } from \"../../dragAndDrop/index.js\";\nimport { DashboardLayout } from \"../../layout/index.js\";\nimport { DateFilterConfigWarnings } from \"./DateFilterConfigWarnings.js\";\nexport const DashboardMainContent = forwardRef(function DashboardMainContent(_, ref) {\n    const onFiltersChange = useDispatchDashboardCommand(changeFilterContextSelection);\n    const { deselectWidgets } = useWidgetSelection();\n    const { handleDragHoverEnd } = useWidgetDragHoverHandlers();\n    const [{ isOver }, dropRef] = useDashboardDrop([\"insight\", \"insight-placeholder\", \"insightListItem\", \"kpi\", \"kpi-placeholder\"], {});\n    useEffect(() => {\n        if (!isOver) {\n            handleDragHoverEnd();\n        }\n    }, [handleDragHoverEnd, isOver]);\n    return (React.createElement(\"div\", { className: \"gd-flex-item-stretch dash-section dash-section-kpis\", ref: ref },\n        React.createElement(\"div\", { className: \"gd-flex-container root-flex-maincontent\", ref: dropRef, onClick: deselectWidgets },\n            React.createElement(DateFilterConfigWarnings, null),\n            React.createElement(DashboardLayout, { onFiltersChange: onFiltersChange }))));\n});\n//# sourceMappingURL=DashboardMainContent.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\nexport const DashboardSidebar = (props) => {\n    const { WrapCreatePanelItemWithDragComponent, WrapInsightListItemWithDragComponent, DeleteDropZoneComponent, } = props;\n    const { SidebarComponent, KpiWidgetComponentSet, AttributeFilterComponentSet, InsightWidgetComponentSet, } = useDashboardComponentsContext();\n    return (React.createElement(SidebarComponent, Object.assign({}, props, { KpiWidgetComponentSet: KpiWidgetComponentSet, AttributeFilterComponentSet: AttributeFilterComponentSet, InsightWidgetComponentSet: InsightWidgetComponentSet, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent, WrapInsightListItemWithDragComponent: WrapInsightListItemWithDragComponent, DeleteDropZoneComponent: DeleteDropZoneComponent })));\n};\n//# sourceMappingURL=DashboardSidebar.js.map","// (C) 2007-2020 GoodData Corporation\nimport React, { Component, createRef } from \"react\";\nimport cx from \"classnames\";\nimport throttle from \"lodash/throttle.js\";\nimport pickBy from \"lodash/pickBy.js\";\nimport { elementRegion } from \"../utils/domUtilities.js\";\n/**\n * @internal\n */\nclass FlexDimensions extends Component {\n    constructor(props) {\n        super(props);\n        this.wrapperRef = createRef();\n        this.updateSize = () => {\n            const { width, height } = elementRegion(this.wrapperRef.current);\n            this.setState({\n                width,\n                height,\n            });\n        };\n        this.state = {\n            width: 0,\n            height: 0,\n        };\n        this.throttledUpdateSize = throttle(this.updateSize, 250, { leading: false });\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.throttledUpdateSize);\n        this.throttledUpdateSize();\n    }\n    componentWillUnmount() {\n        this.throttledUpdateSize.cancel();\n        window.removeEventListener(\"resize\", this.throttledUpdateSize);\n    }\n    getChildrenDimensions() {\n        return pickBy(this.state, (_, key) => {\n            const setWidth = this.props.measureWidth && key === \"width\";\n            const setHeight = this.props.measureHeight && key === \"height\";\n            return setWidth || setHeight;\n        });\n    }\n    renderChildren() {\n        const child = React.Children.only(this.props.children);\n        return React.cloneElement(child, this.getChildrenDimensions());\n    }\n    render() {\n        const classNames = cx(this.props.className);\n        return (React.createElement(\"div\", { ref: this.wrapperRef, className: classNames }, this.renderChildren()));\n    }\n}\nFlexDimensions.defaultProps = {\n    children: false,\n    className: \"\",\n    measureWidth: true,\n    measureHeight: true,\n};\nexport { FlexDimensions };\n//# sourceMappingURL=FlexDimensions.js.map","import { __rest } from \"tslib\";\n// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { insightIsLocked, insightTitle, insightSummary, insightUpdated, insightVisualizationType, insightCreated, } from \"@gooddata/sdk-model\";\nimport { InsightListItem } from \"@gooddata/sdk-ui-kit\";\nimport { InsightList } from \"../../../insightList/index.js\";\nimport { useDashboardUserInteraction, useDashboardSelector, selectSettings, } from \"../../../../model/index.js\";\nimport { DraggableInsightListItemWrapper } from \"./DraggableInsightListItemWrapper.js\";\nexport const DraggableInsightListCore = (props) => {\n    const { enableDescriptions, WrapInsightListItemWithDragComponent } = props, remainingProps = __rest(props, [\"enableDescriptions\", \"WrapInsightListItemWithDragComponent\"]);\n    const userInteraction = useDashboardUserInteraction();\n    const settings = useDashboardSelector(selectSettings);\n    return (React.createElement(InsightList, Object.assign({}, remainingProps, { renderItem: ({ item: insight, width, isFirst, isLast }) => {\n            var _a, _b;\n            if (!insight) {\n                return React.createElement(InsightListItem, { isLoading: true });\n            }\n            const visualizationType = insightVisualizationType(insight);\n            const classNames = cx(\"gd-visualizations-list-item-wrap\", {\n                \"is-first\": isFirst,\n                \"is-last\": isLast,\n            });\n            const description = (_a = insightSummary(insight)) === null || _a === void 0 ? void 0 : _a.trim();\n            const eventPayload = {\n                from: \"insight\",\n                type: \"inherit\",\n                description,\n            };\n            return (React.createElement(DraggableInsightListItemWrapper, { WrapInsightListItemWithDragComponent: WrapInsightListItemWithDragComponent, title: insightTitle(insight), description: description, showDescriptionPanel: enableDescriptions, type: visualizationType, width: width, className: classNames, updated: (_b = insightUpdated(insight)) !== null && _b !== void 0 ? _b : insightCreated(insight), isLocked: insightIsLocked(insight), insight: insight, onDescriptionPanelOpen: () => {\n                    userInteraction.descriptionTooltipOpened(eventPayload);\n                }, metadataTimeZone: settings === null || settings === void 0 ? void 0 : settings.metadataTimeZone }));\n        } })));\n};\n//# sourceMappingURL=DraggableInsightListCore.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useEffect, useRef } from \"react\";\nimport { FlexDimensions } from \"@gooddata/sdk-ui-kit\";\nimport { DraggableInsightListCore } from \"./DraggableInsightListCore.js\";\nexport const DraggableInsightList = (props) => {\n    const { recalculateSizeReference, searchAutofocus, enableDescriptions, WrapInsightListItemWithDragComponent, } = props;\n    const flexRef = useRef(null);\n    useEffect(() => {\n        var _a;\n        (_a = flexRef.current) === null || _a === void 0 ? void 0 : _a.updateSize();\n    }, [recalculateSizeReference]);\n    return (React.createElement(\"div\", { className: \"gd-visualizations-list gd-flex-item-stretch gd-flex-row-container\" },\n        React.createElement(FlexDimensions, { ref: flexRef, measureHeight: true, measureWidth: false, className: \"visualizations-flex-dimensions\" },\n            React.createElement(DraggableInsightListCore, { WrapInsightListItemWithDragComponent: WrapInsightListItemWithDragComponent, searchAutofocus: searchAutofocus, enableDescriptions: enableDescriptions }))));\n};\n//# sourceMappingURL=DraggableInsightList.js.map","// (C) 2007-2022 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nimport compact from \"lodash/compact.js\";\nimport sortBy from \"lodash/sortBy.js\";\nimport { FormattedMessage } from \"react-intl\";\nimport { DraggableInsightList } from \"./DraggableInsightList/index.js\";\nimport { selectSupportsKpiWidgetCapability, selectIsAnalyticalDesignerEnabled, useDashboardSelector, selectIsNewDashboard, selectSettings, } from \"../../../model/index.js\";\nimport cx from \"classnames\";\nexport const CreationPanel = (props) => {\n    const { className, WrapCreatePanelItemWithDragComponent, WrapInsightListItemWithDragComponent } = props;\n    const supportsKpis = useDashboardSelector(selectSupportsKpiWidgetCapability);\n    const isAnalyticalDesignerEnabled = useDashboardSelector(selectIsAnalyticalDesignerEnabled);\n    const isNewDashboard = useDashboardSelector(selectIsNewDashboard);\n    const settings = useDashboardSelector(selectSettings);\n    const KpiWidgetComponentSet = props.KpiWidgetComponentSet;\n    const AttributeFilterComponentSet = props.AttributeFilterComponentSet;\n    const InsightWidgetComponentSet = props.InsightWidgetComponentSet;\n    const addItemPanelItems = useMemo(() => {\n        const items = compact([\n            supportsKpis && KpiWidgetComponentSet.creating,\n            AttributeFilterComponentSet.creating,\n            InsightWidgetComponentSet.creating,\n        ]);\n        return sortBy(items, (item) => { var _a; return (_a = item.priority) !== null && _a !== void 0 ? _a : 0; }).map(({ CreatePanelListItemComponent, type }) => {\n            return (React.createElement(CreatePanelListItemComponent, { key: type, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent }));\n        });\n    }, [AttributeFilterComponentSet, KpiWidgetComponentSet, InsightWidgetComponentSet, supportsKpis]);\n    return (React.createElement(\"div\", { className: cx(\"configuration-panel creation-panel\", className) },\n        React.createElement(\"div\", { className: \"configuration-panel-content\" },\n            React.createElement(Typography, { tagName: \"h2\", className: \"flex-panel-item-nostretch\" },\n                React.createElement(FormattedMessage, { id: \"visualizationsList.dragToAdd\" })),\n            React.createElement(\"div\", { className: \"configuration-category drag-to-add\" },\n                React.createElement(Typography, { tagName: \"h3\" },\n                    React.createElement(FormattedMessage, { id: \"addPanel.newItem\" })),\n                React.createElement(\"div\", { className: \"add-item-panel\" }, addItemPanelItems)),\n            isAnalyticalDesignerEnabled ? (React.createElement(\"div\", { className: \"configuration-category configuration-category-vis drag-to-add flex-panel-item-stretch\" },\n                React.createElement(Typography, { tagName: \"h3\" },\n                    React.createElement(FormattedMessage, { id: \"visualizationsList.savedVisualizations\" })),\n                React.createElement(DraggableInsightList, { WrapInsightListItemWithDragComponent: WrapInsightListItemWithDragComponent, recalculateSizeReference: className, searchAutofocus: !isNewDashboard, enableDescriptions: settings === null || settings === void 0 ? void 0 : settings.enableDescriptions }))) : null)));\n};\n//# sourceMappingURL=CreationPanel.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { useWidgetSelection } from \"../../../model/index.js\";\nimport { CreationPanel } from \"./CreationPanel.js\";\n/**\n * @internal\n */\nexport const SidebarConfigurationPanel = (props) => {\n    const { configurationPanelClassName, WrapCreatePanelItemWithDragComponent, WrapInsightListItemWithDragComponent, KpiWidgetComponentSet, AttributeFilterComponentSet, InsightWidgetComponentSet, } = props;\n    const { deselectWidgets } = useWidgetSelection();\n    const DeleteDropZoneComponent = props.DeleteDropZoneComponent;\n    return (React.createElement(\"div\", { className: \"col gd-flex-item gd-sidebar-container\", onClick: deselectWidgets },\n        React.createElement(\"div\", { className: \"flex-panel-full-height\" },\n            React.createElement(CreationPanel, { className: configurationPanelClassName, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDragComponent, WrapInsightListItemWithDragComponent: WrapInsightListItemWithDragComponent, KpiWidgetComponentSet: KpiWidgetComponentSet, AttributeFilterComponentSet: AttributeFilterComponentSet, InsightWidgetComponentSet: InsightWidgetComponentSet })),\n        React.createElement(DeleteDropZoneComponent, null)));\n};\n//# sourceMappingURL=SidebarConfigurationPanel.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { renderModeAware } from \"../../componentDefinition/index.js\";\nimport { SidebarConfigurationPanel } from \"./SidebarConfigurationPanel.js\";\n/**\n * @internal\n */\nexport const RenderModeAwareDashboardSidebar = renderModeAware({\n    view: () => React.createElement(React.Fragment, null),\n    edit: SidebarConfigurationPanel,\n});\n//# sourceMappingURL=RenderModeAwareDashboardSidebar.js.map","// (C) 2022 GoodData Corporation\nimport { useDragDropManager } from \"react-dnd\";\nimport { useEffect, useState } from \"react\";\nimport { useInterval } from \"./useInterval.js\";\nconst SCROLLING_STEP = 3;\nconst SCROLLING_INTERVAL = 5;\nconst SCROLLING_BOTTOM_ZONE_HEIGHT = 100;\nconst SCROLLING_ITEM_TYPES = [\n    \"insightListItem\",\n    \"insight\",\n    \"insight-placeholder\",\n    \"kpi\",\n    \"kpi-placeholder\",\n    \"internal-width-resizer\",\n    \"internal-height-resizer\",\n];\nvar ScrollingDirection;\n(function (ScrollingDirection) {\n    ScrollingDirection[ScrollingDirection[\"Up\"] = -1] = \"Up\";\n    ScrollingDirection[ScrollingDirection[\"Down\"] = 1] = \"Down\";\n    ScrollingDirection[ScrollingDirection[\"None\"] = 0] = \"None\";\n})(ScrollingDirection || (ScrollingDirection = {}));\nexport function useDashboardDragScroll(contentRef, stickyHeaderRef, stickyFooterRef) {\n    const [scrollingDirection, setScrollingDirection] = useState(ScrollingDirection.None);\n    const dragDropManager = useDragDropManager();\n    useEffect(() => {\n        return dragDropManager.getMonitor().subscribeToOffsetChange(() => {\n            var _a, _b, _c;\n            const itemType = dragDropManager.getMonitor().getItemType();\n            const clientOffset = dragDropManager.getMonitor().getSourceClientOffset();\n            const headerCoordinations = (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n            const footerCoordinations = (_b = stickyFooterRef.current) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect();\n            const contentCoordinations = (_c = contentRef.current) === null || _c === void 0 ? void 0 : _c.getBoundingClientRect();\n            if ((itemType && !SCROLLING_ITEM_TYPES.includes(itemType)) ||\n                !clientOffset ||\n                !headerCoordinations ||\n                !footerCoordinations ||\n                !contentCoordinations) {\n                setScrollingDirection(ScrollingDirection.None);\n                return;\n            }\n            const shouldScrollUp = clientOffset.y <= (headerCoordinations === null || headerCoordinations === void 0 ? void 0 : headerCoordinations.bottom) &&\n                (headerCoordinations === null || headerCoordinations === void 0 ? void 0 : headerCoordinations.bottom) > (contentCoordinations === null || contentCoordinations === void 0 ? void 0 : contentCoordinations.top);\n            if (shouldScrollUp) {\n                setScrollingDirection(ScrollingDirection.Up);\n                return;\n            }\n            const shouldScrollDown = clientOffset.y > (footerCoordinations === null || footerCoordinations === void 0 ? void 0 : footerCoordinations.bottom) - SCROLLING_BOTTOM_ZONE_HEIGHT &&\n                (contentCoordinations === null || contentCoordinations === void 0 ? void 0 : contentCoordinations.bottom) > (footerCoordinations === null || footerCoordinations === void 0 ? void 0 : footerCoordinations.bottom);\n            if (shouldScrollDown) {\n                setScrollingDirection(ScrollingDirection.Down);\n                return;\n            }\n            setScrollingDirection(ScrollingDirection.None);\n        });\n        // we want to subscribe only once\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useInterval(() => {\n        var _a;\n        const scrollingTop = scrollingDirection * SCROLLING_STEP;\n        (_a = findScrollable(contentRef.current)) === null || _a === void 0 ? void 0 : _a.scrollBy({\n            top: scrollingTop,\n        });\n    }, scrollingDirection === ScrollingDirection.None ? null : SCROLLING_INTERVAL);\n}\n/**\n * function goes from element to its parents and finds first scrollable element\n */\nfunction findScrollable(element) {\n    if (!element) {\n        return document.documentElement;\n    }\n    if (element instanceof HTMLElement) {\n        const overflowY = window.getComputedStyle(element).overflowY;\n        const isScrollable = overflowY !== \"visible\" && overflowY !== \"hidden\";\n        if (isScrollable && element.scrollHeight >= element.clientHeight) {\n            return element;\n        }\n    }\n    return findScrollable(element.parentNode);\n}\n//# sourceMappingURL=useDashboardDragScroll.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useRef, useLayoutEffect } from \"react\";\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef(callback);\n    useLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setInterval(() => savedCallback.current(), delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n//# sourceMappingURL=useInterval.js.map","// (C) 2022-2023 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\nimport { DEBUG_SHOW_DROP_ZONES } from \"../debug.js\";\nfunction getItemStyles(initialOffset, clientOffset) {\n    if (!initialOffset || !clientOffset) {\n        return {\n            display: \"none\",\n        };\n    }\n    const { x, y } = clientOffset;\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        transform,\n        WebkitTransform: transform,\n    };\n}\nexport const ContentDragPreview = (props) => {\n    const { itemType, item, initialOffset, clientOffset } = props;\n    const { AttributeFilterComponentSet, InsightWidgetComponentSet, KpiWidgetComponentSet } = useDashboardComponentsContext();\n    const previewComponentsMap = useMemo(() => ({\n        attributeFilter: AttributeFilterComponentSet.dragging.DraggingComponent,\n        insight: InsightWidgetComponentSet.dragging.DraggingComponent,\n        kpi: KpiWidgetComponentSet.dragging.DraggingComponent,\n    }), [\n        AttributeFilterComponentSet.dragging.DraggingComponent,\n        InsightWidgetComponentSet.dragging.DraggingComponent,\n        KpiWidgetComponentSet.dragging.DraggingComponent,\n    ]);\n    const component = useMemo(() => {\n        if (!(itemType in previewComponentsMap)) {\n            if (DEBUG_SHOW_DROP_ZONES) {\n                console.warn(`DND: dnd item ${itemType} not handled by CustomDragLayer`);\n            }\n            return null;\n        }\n        const Component = previewComponentsMap[itemType];\n        return React.createElement(Component, { itemType: itemType, item: item });\n    }, [itemType, previewComponentsMap, item]);\n    return (React.createElement(\"div\", { className: \"drag-preview\", style: getItemStyles(initialOffset, clientOffset) }, component));\n};\n//# sourceMappingURL=ContentDragPreview.js.map","// (C) 2021-2022 GoodData Corporation\nimport React, { useEffect, useState } from \"react\";\nimport { HeightResizer } from \"../Resize/HeightResizer.js\";\nimport { fluidLayoutDescriptor } from \"@gooddata/sdk-ui-ext\";\nimport { useResizeHandlers } from \"../LayoutResizeContext.js\";\nimport { getLimitedSize } from \"./sizeLimiting.js\";\nexport const HeightResizerDragPreview = (props) => {\n    const { item, initialOffset, differenceFromInitialOffset, scrollCorrection, getDragLayerPosition } = props;\n    const { toggleHeightLimitReached } = useResizeHandlers();\n    const [hasReachedLimit, setReachedLimit] = useState(\"none\");\n    useEffect(() => {\n        toggleHeightLimitReached(hasReachedLimit);\n    }, [hasReachedLimit, toggleHeightLimitReached]);\n    const dragLayerOffset = getDragLayerPosition();\n    const currentUnlimitedHeightGR = getNewHeightGR(item.widgetHeights, differenceFromInitialOffset.y, scrollCorrection.y);\n    useEffect(() => {\n        const hasNowReachedLimit = hasHeightReachedLimit(currentUnlimitedHeightGR, item.minLimit, item.maxLimit);\n        if (hasNowReachedLimit !== hasReachedLimit) {\n            setReachedLimit(hasNowReachedLimit);\n        }\n    }, [currentUnlimitedHeightGR, item.minLimit, item.maxLimit, hasReachedLimit]);\n    const top = getLimitedYCoord(item, initialOffset.y, differenceFromInitialOffset.y, scrollCorrection.y);\n    const style = {\n        top: `${top - dragLayerOffset.y + scrollCorrection.y}px`,\n        left: `${initialOffset.x - dragLayerOffset.x + scrollCorrection.x}px`,\n        right: `30px`,\n    };\n    return (React.createElement(\"div\", { className: \"height-resizer-drag-preview s-height-resizer-drag-preview\", style: style },\n        React.createElement(HeightResizer, { status: \"active\" })));\n};\nfunction getPrimaryHeightGR(heightsGR) {\n    heightsGR = heightsGR || [10];\n    return Math.max(...heightsGR);\n}\nfunction hasHeightReachedLimit(heightGR, min, max) {\n    if (heightGR < min)\n        return \"min\";\n    if (heightGR > max)\n        return \"max\";\n    return \"none\";\n}\nfunction getNewHeightGR(widgetHeights, offsetYPX, scrollingCorrectionY) {\n    const primaryHeightGR = getPrimaryHeightGR(widgetHeights);\n    const totalDelta = offsetYPX - scrollingCorrectionY;\n    const deltaHeightGR = fluidLayoutDescriptor.toGridHeight(totalDelta);\n    return primaryHeightGR + deltaHeightGR;\n}\nexport function getLimitedYCoord(item, initialSourceClientOffsetY, differenceFromInitialOffsetY, scrollingCorrectionY) {\n    const { minLimit, maxLimit } = item;\n    const deltaSize = fluidLayoutDescriptor.toGridHeight(differenceFromInitialOffsetY - scrollingCorrectionY);\n    const curPrimaryHeightGR = getPrimaryHeightGR(item.widgetHeights);\n    const newSizeLimited = getLimitedSize(minLimit, maxLimit, curPrimaryHeightGR, deltaSize);\n    const deltaY = fluidLayoutDescriptor.toHeightInPx(newSizeLimited - curPrimaryHeightGR);\n    return initialSourceClientOffsetY + deltaY;\n}\n//# sourceMappingURL=HeightResizerDragPreview.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useMemo, useState } from \"react\";\nconst emptyPosition = {\n    x: 0,\n    y: 0,\n};\nexport function useScrollCorrection(getDimensions, isActive = true) {\n    const [currentPosition, setCurrentPosition] = useState(emptyPosition);\n    const initialPosition = useMemo(() => {\n        if (isActive) {\n            return getDimensions();\n        }\n        else {\n            return emptyPosition;\n        }\n    }, [isActive, getDimensions]);\n    useEffect(() => {\n        const updatePosition = () => {\n            setCurrentPosition(getDimensions);\n        };\n        if (isActive) {\n            document.addEventListener(\"scroll\", updatePosition, true);\n            updatePosition();\n        }\n        return () => document.removeEventListener(\"scroll\", updatePosition, true);\n    }, [isActive, getDimensions]);\n    const scrollCorrection = useMemo(() => {\n        return {\n            x: currentPosition.x - initialPosition.x,\n            y: currentPosition.y - initialPosition.y,\n        };\n    }, [currentPosition, initialPosition]);\n    return {\n        initialPosition,\n        currentPosition,\n        scrollCorrection,\n    };\n}\n//# sourceMappingURL=useScrollCorrection.js.map","// (C) 2022 GoodData Corporation\nimport React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport { ContentDragPreview } from \"./DragLayerPreview/ContentDragPreview.js\";\nimport { HeightResizerDragPreview } from \"./DragLayerPreview/HeightResizerDragPreview.js\";\nimport { WidthResizerDragPreview } from \"./DragLayerPreview/WidthResizerDragPreview.js\";\nimport { useScrollCorrection } from \"./Resize/useScrollCorrection.js\";\nimport { isDraggableInternalItemType } from \"./types.js\";\nimport { emptyDOMRect } from \"../layout/constants.js\";\nimport { useResizeHandlers } from \"./LayoutResizeContext.js\";\nimport { DASHBOARD_HEADER_OVERLAYS_Z_INDEX } from \"../constants/index.js\";\nconst previewComponentsMap = {\n    \"internal-height-resizer\": HeightResizerDragPreview,\n    \"internal-width-resizer\": WidthResizerDragPreview,\n};\nexport const DragLayerComponent = () => {\n    const dragLayerRef = useRef(null);\n    const { setScrollCorrection } = useResizeHandlers();\n    const dragLayerProperties = useDragLayer((monitor) => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        clientOffset: monitor.getClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        differenceFromInitialOffset: monitor.getDifferenceFromInitialOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    const { itemType, isDragging } = dragLayerProperties;\n    const getDragLayerPosition = useCallback(() => {\n        var _a, _b;\n        return (_b = (_a = dragLayerRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) !== null && _b !== void 0 ? _b : emptyDOMRect;\n    }, [dragLayerRef.current]);\n    const isResizing = itemType === \"internal-height-resizer\" || itemType === \"internal-width-resizer\";\n    const { scrollCorrection } = useScrollCorrection(getDragLayerPosition, isDragging && isResizing);\n    useEffect(() => {\n        setScrollCorrection(scrollCorrection);\n    }, [scrollCorrection, setScrollCorrection]);\n    const layerStyles = useMemo(() => {\n        const position = isResizing ? \"relative\" : \"fixed\";\n        return {\n            position,\n            pointerEvents: \"none\",\n            zIndex: DASHBOARD_HEADER_OVERLAYS_Z_INDEX + 1,\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100%\",\n        };\n    }, [isResizing]);\n    if (!isDragging) {\n        return null;\n    }\n    const Component = isDraggableInternalItemType(itemType)\n        ? previewComponentsMap[itemType]\n        : ContentDragPreview;\n    const previewProps = isDraggableInternalItemType(itemType)\n        ? Object.assign(Object.assign({}, dragLayerProperties), { getDragLayerPosition, scrollCorrection }) : dragLayerProperties;\n    return (React.createElement(\"div\", { className: \"drag-layer\", style: layerStyles, ref: dragLayerRef },\n        React.createElement(Component, Object.assign({}, previewProps))));\n};\n//# sourceMappingURL=DragLayer.js.map","// (C) 2022 GoodData Corporation\nimport cx from \"classnames\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { removeAttributeFilter, useDashboardDispatch } from \"../../model/index.js\";\nimport { getDropZoneDebugStyle } from \"./debug.js\";\nimport { useDashboardDrop } from \"./useDashboardDrop.js\";\nexport function DeleteDropZone() {\n    const dispatch = useDashboardDispatch();\n    const [{ canDrop, isOver }, dropRef] = useDashboardDrop(\"attributeFilter\", {\n        drop: ({ filter }) => {\n            const identifier = filter.attributeFilter.localIdentifier;\n            dispatch(removeAttributeFilter(identifier));\n        },\n    }, [dispatch]);\n    if (!canDrop) {\n        return null;\n    }\n    const className = cx(\"gd-dropzone\", \"gd-dropzone-delete\", {\n        \"gd-dropzone-over\": isOver,\n    });\n    const debugStyle = getDropZoneDebugStyle({ isOver });\n    return (React.createElement(\"div\", { className: className, ref: dropRef, style: debugStyle },\n        React.createElement(\"div\", { className: \"gd-dropzone-message\" },\n            React.createElement(FormattedMessage, { id: \"addPanel.deleteItem\" }))));\n}\n//# sourceMappingURL=DeleteDropZone.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { useDashboardDrag } from \"./useDashboardDrag.js\";\nimport { useWidgetDragEndHandler } from \"./draggableWidget/index.js\";\nimport { selectIsInEditMode, useDashboardSelector } from \"../../model/index.js\";\n/**\n * @internal\n */\nexport const WrapCreatePanelItemWithDrag = (props) => {\n    const { canDrag, dragItem, hideDefaultPreview, onDragEnd, onDragStart, children } = useWrapCreatePanelItemWithDrag(props);\n    const [{ isDragging }, dragRef] = useDashboardDrag({\n        dragItem,\n        canDrag,\n        hideDefaultPreview,\n        dragEnd: (_, monitor) => {\n            onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(monitor.didDrop());\n        },\n        dragStart: onDragStart,\n    }, [canDrag, onDragEnd, hideDefaultPreview, dragItem]);\n    return (React.createElement(\"div\", { ref: dragRef, className: cx({ \"is-dragging\": isDragging }) }, children));\n};\n/**\n * @internal\n */\nexport function useWrapCreatePanelItemWithDrag(props) {\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const onDragEnd = useWidgetDragEndHandler();\n    const canDrag = isInEditMode && !props.disabled;\n    return Object.assign(Object.assign({}, props), { canDrag,\n        onDragEnd });\n}\n//# sourceMappingURL=WrapCreatePanelItemWithDrag.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { useDashboardSelector, selectIsInEditMode, selectSettings } from \"../../model/index.js\";\nimport { useDashboardDrag } from \"./useDashboardDrag.js\";\nimport { useWidgetDragEndHandler } from \"./draggableWidget/useWidgetDragEndHandler.js\";\nimport { getSizeInfo } from \"../../_staging/layout/sizing.js\";\nimport { INSIGHT_WIDGET_SIZE_INFO_DEFAULT } from \"@gooddata/sdk-ui-ext\";\n/**\n * @internal\n */\nexport function WrapInsightListItemWithDrag({ children, insight }) {\n    const isInEditMode = useDashboardSelector(selectIsInEditMode);\n    const settings = useDashboardSelector(selectSettings);\n    const handleDragEnd = useWidgetDragEndHandler();\n    const [{ isDragging }, dragRef] = useDashboardDrag({\n        dragItem: () => {\n            const sizeInfo = getSizeInfo(settings, \"insight\", insight);\n            return {\n                type: \"insightListItem\",\n                insight,\n                size: {\n                    gridHeight: sizeInfo.height.default || INSIGHT_WIDGET_SIZE_INFO_DEFAULT.height.default,\n                    gridWidth: sizeInfo.width.default || INSIGHT_WIDGET_SIZE_INFO_DEFAULT.width.default,\n                },\n            };\n        },\n        canDrag: isInEditMode,\n        hideDefaultPreview: false,\n        dragEnd: handleDragEnd,\n    }, [isInEditMode, insight, handleDragEnd]);\n    return (React.createElement(\"div\", { className: classNames({ \"is-dragging\": isDragging }), ref: dragRef }, children));\n}\n//# sourceMappingURL=WrapInsightListItemWithDrag.js.map","// (C) 2020-2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardComponentsContext } from \"../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const Toolbar = (props) => {\n    const { ToolbarComponent } = useDashboardComponentsContext();\n    return React.createElement(ToolbarComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=Toolbar.js.map","// (C) 2022 GoodData Corporation\nimport React, { useRef } from \"react\";\nimport cx from \"classnames\";\nimport { IntlWrapper } from \"../../localization/index.js\";\nimport { useDashboardSelector, selectLocale, selectIsInEditMode } from \"../../../model/index.js\";\nimport { DashboardHeader } from \"../DashboardHeader/DashboardHeader.js\";\nimport { DashboardMainContent } from \"./DashboardMainContent.js\";\nimport { DashboardSidebar } from \"../DashboardSidebar/DashboardSidebar.js\";\nimport { RenderModeAwareDashboardSidebar } from \"../DashboardSidebar/RenderModeAwareDashboardSidebar.js\";\nimport { DragLayerComponent, useDashboardDragScroll, DeleteDropZone, WrapCreatePanelItemWithDrag, WrapInsightListItemWithDrag, } from \"../../dragAndDrop/index.js\";\nimport { Toolbar } from \"../../toolbar/index.js\";\nimport { OverlayController, OverlayControllerProvider } from \"@gooddata/sdk-ui-kit\";\nimport { DASHBOARD_HEADER_OVERLAYS_Z_INDEX } from \"../../constants/index.js\";\nconst overlayController = OverlayController.getInstance(DASHBOARD_HEADER_OVERLAYS_Z_INDEX);\nexport const DashboardInner = () => {\n    const locale = useDashboardSelector(selectLocale);\n    const isEditMode = useDashboardSelector(selectIsInEditMode);\n    const headerRef = useRef(null);\n    const layoutRef = useRef(null);\n    const bottomRef = useRef(null);\n    useDashboardDragScroll(layoutRef, headerRef, bottomRef);\n    return (React.createElement(IntlWrapper, { locale: locale },\n        React.createElement(\"div\", { className: cx(\"component-root\", {\n                \"sdk-edit-mode-on\": isEditMode,\n            }) },\n            React.createElement(DragLayerComponent, null),\n            React.createElement(\"div\", { className: \"gd-dashboards-root gd-flex-container\" },\n                React.createElement(DashboardSidebar, { DefaultSidebar: RenderModeAwareDashboardSidebar, DeleteDropZoneComponent: DeleteDropZone, WrapCreatePanelItemWithDragComponent: WrapCreatePanelItemWithDrag, WrapInsightListItemWithDragComponent: WrapInsightListItemWithDrag }),\n                React.createElement(\"div\", { className: \"gd-dash-content\" },\n                    React.createElement(\"div\", { className: \"gd-dash-header-wrapper gd-dash-header-wrapper-sdk-8-12\", ref: headerRef },\n                        React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n                            React.createElement(DashboardHeader, null))),\n                    React.createElement(DashboardMainContent, { ref: layoutRef }),\n                    React.createElement(\"div\", { className: \"gd-dash-bottom-position-pixel\", ref: bottomRef }))),\n            React.createElement(Toolbar, null))));\n};\n//# sourceMappingURL=DashboardInner.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { useDashboardSelector, selectDashboardLoading } from \"../../../model/index.js\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\nimport { DashboardInner } from \"./DashboardInner.js\";\nexport const DashboardLoading = (props) => {\n    const { loading, error, result } = useDashboardSelector(selectDashboardLoading);\n    const { ErrorComponent, LoadingComponent } = useDashboardComponentsContext();\n    if (error) {\n        return React.createElement(ErrorComponent, { message: error.message });\n    }\n    if (loading || !result) {\n        return React.createElement(LoadingComponent, null);\n    }\n    return React.createElement(DashboardInner, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardLoading.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Typography } from \"@gooddata/sdk-ui-kit\";\nexport const DefaultEmptyLayoutDropZoneBody = () => {\n    return (React.createElement(\"div\", { className: \"drag-info-placeholder-box s-drag-info-placeholder-box\" },\n        React.createElement(Typography, { tagName: \"h2\" },\n            React.createElement(FormattedMessage, { id: \"newDashboard.title\" }))));\n};\n//# sourceMappingURL=DefaultEmptyLayoutDropZoneBody.js.map","// (C) 2022 GoodData Corporation\nimport { BackendProvider, WorkspaceProvider, ErrorComponent as DefaultError, LoadingComponent as DefaultLoading, } from \"@gooddata/sdk-ui\";\nimport { OverlayControllerProvider, OverlayController, ToastMessageContextProvider, } from \"@gooddata/sdk-ui-kit\";\nimport { ThemeProvider } from \"@gooddata/sdk-ui-theme-provider\";\nimport React from \"react\";\nimport { DashboardStoreProvider } from \"../../../model/index.js\";\nimport { ExportDialogContextProvider, DashboardCustomizationsProvider, DashboardComponentsProvider, DashboardConfigProvider, } from \"../../dashboardContexts/index.js\";\nimport { DefaultFilterBar } from \"../../filterBar/index.js\";\nimport { DefaultDashboardLayout } from \"../../layout/index.js\";\nimport { DefaultSaveAsDialog } from \"../../saveAs/index.js\";\nimport { DefaultScheduledEmailDialog, DefaultScheduledEmailManagementDialog, } from \"../../scheduledEmail/index.js\";\nimport { DefaultShareDialog } from \"../../shareDialog/index.js\";\nimport { DefaultButtonBar, DefaultMenuButton, DefaultSaveButton, DefaultTopBar, RenderModeAwareTitle, } from \"../../topBar/index.js\";\nimport { HiddenToolbar } from \"../../toolbar/index.js\";\nimport { defaultDashboardThemeModifier } from \"../defaultDashboardThemeModifier.js\";\nimport { useDashboard } from \"../hooks/useDashboard.js\";\nimport { DashboardLoading } from \"./DashboardLoading.js\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DefaultEmptyLayoutDropZoneBody, LayoutResizeStateProvider } from \"../../dragAndDrop/index.js\";\nimport { RenderModeAwareDashboardSidebar } from \"../DashboardSidebar/RenderModeAwareDashboardSidebar.js\";\nimport { DASHBOARD_OVERLAYS_Z_INDEX } from \"../../constants/index.js\";\nconst overlayController = OverlayController.getInstance(DASHBOARD_OVERLAYS_Z_INDEX);\n/**\n * @internal\n */\nexport const DashboardRenderer = (props) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n    const { backend, workspace, hasThemeProvider, dashboardOrRef, attributeFilterProvider, dateFilterProvider, widgetProvider, insightProvider, insightBodyProvider, insightMenuButtonProvider, insightMenuProvider, insightMenuTitleProvider, kpiProvider, insightWidgetComponentSet, kpiWidgetComponentSet, attributeFilterComponentSet, } = useDashboard(props);\n    const dashboardRender = (React.createElement(BackendProvider, { backend: backend },\n        React.createElement(WorkspaceProvider, { workspace: workspace },\n            React.createElement(OverlayControllerProvider, { overlayController: overlayController },\n                React.createElement(DashboardStoreProvider, { backend: props.backend, workspace: props.workspace, dashboard: dashboardOrRef, persistedDashboard: props.persistedDashboard, filterContextRef: props.filterContextRef, eventHandlers: props.eventHandlers, config: props.config, permissions: props.permissions, onStateChange: props.onStateChange, onEventingInitialized: props.onEventingInitialized, additionalReduxContext: props.additionalReduxContext, customizationFns: props.customizationFns, widgetsOverlayFn: props.widgetsOverlayFn },\n                    React.createElement(ToastMessageContextProvider, null,\n                        React.createElement(ExportDialogContextProvider, null,\n                            React.createElement(DashboardCustomizationsProvider, { insightMenuItemsProvider: props.insightMenuItemsProvider },\n                                React.createElement(DashboardComponentsProvider, { ErrorComponent: (_a = props.ErrorComponent) !== null && _a !== void 0 ? _a : DefaultError, LoadingComponent: (_b = props.LoadingComponent) !== null && _b !== void 0 ? _b : DefaultLoading, LayoutComponent: (_c = props.LayoutComponent) !== null && _c !== void 0 ? _c : DefaultDashboardLayout, InsightComponentProvider: insightProvider, InsightBodyComponentProvider: insightBodyProvider, InsightMenuButtonComponentProvider: insightMenuButtonProvider, InsightMenuTitleComponentProvider: insightMenuTitleProvider, InsightMenuComponentProvider: insightMenuProvider, KpiComponentProvider: kpiProvider, WidgetComponentProvider: widgetProvider, ButtonBarComponent: (_d = props.ButtonBarComponent) !== null && _d !== void 0 ? _d : DefaultButtonBar, MenuButtonComponent: (_e = props.MenuButtonComponent) !== null && _e !== void 0 ? _e : DefaultMenuButton, TopBarComponent: (_f = props.TopBarComponent) !== null && _f !== void 0 ? _f : DefaultTopBar, ToolbarComponent: (_g = props.ToolbarComponent) !== null && _g !== void 0 ? _g : HiddenToolbar, TitleComponent: (_h = props.TitleComponent) !== null && _h !== void 0 ? _h : RenderModeAwareTitle, ScheduledEmailDialogComponent: (_j = props.ScheduledEmailDialogComponent) !== null && _j !== void 0 ? _j : DefaultScheduledEmailDialog, ScheduledEmailManagementDialogComponent: (_k = props.ScheduledEmailManagementDialogComponent) !== null && _k !== void 0 ? _k : DefaultScheduledEmailManagementDialog, ShareDialogComponent: (_l = props.ShareDialogComponent) !== null && _l !== void 0 ? _l : DefaultShareDialog, SaveAsDialogComponent: (_m = props.SaveAsDialogComponent) !== null && _m !== void 0 ? _m : DefaultSaveAsDialog, DashboardAttributeFilterComponentProvider: attributeFilterProvider, DashboardDateFilterComponentProvider: dateFilterProvider, FilterBarComponent: (_o = props.FilterBarComponent) !== null && _o !== void 0 ? _o : DefaultFilterBar, SidebarComponent: (_p = props.SidebarComponent) !== null && _p !== void 0 ? _p : RenderModeAwareDashboardSidebar, InsightWidgetComponentSet: insightWidgetComponentSet, KpiWidgetComponentSet: kpiWidgetComponentSet, AttributeFilterComponentSet: attributeFilterComponentSet, EmptyLayoutDropZoneBodyComponent: (_q = props.EmptyLayoutDropZoneBodyComponent) !== null && _q !== void 0 ? _q : DefaultEmptyLayoutDropZoneBody, SaveButtonComponent: (_r = props.SaveButtonComponent) !== null && _r !== void 0 ? _r : DefaultSaveButton },\n                                    React.createElement(DashboardConfigProvider, { menuButtonConfig: props.menuButtonConfig },\n                                        React.createElement(DndProvider, { backend: HTML5Backend },\n                                            React.createElement(LayoutResizeStateProvider, null,\n                                                React.createElement(DashboardLoading, Object.assign({}, props))))))))))))));\n    if (props.theme || (!hasThemeProvider && !props.disableThemeLoading)) {\n        return (React.createElement(ThemeProvider, { theme: props.theme, modifier: (_s = props.themeModifier) !== null && _s !== void 0 ? _s : defaultDashboardThemeModifier, backend: backend, workspace: workspace, \n            // Do not remove global theme styles on unmount, if the theme is provided as a prop,\n            // and the theme loading is disabled.\n            // This avoids flickering of the theme, when switching between the dashboard plugin engine and the default engine.\n            removeGlobalStylesOnUnmout: !props.disableThemeLoading }, dashboardRender));\n    }\n    return dashboardRender;\n};\n//# sourceMappingURL=DashboardRenderer.js.map","// (C) 2022 GoodData Corporation\nimport { useCallback, useMemo } from \"react\";\nimport { idRef } from \"@gooddata/sdk-model\";\nimport { useBackendStrict, useWorkspaceStrict } from \"@gooddata/sdk-ui\";\nimport { useThemeIsLoading } from \"@gooddata/sdk-ui-theme-provider\";\nimport { DefaultDashboardAttributeFilter, DefaultDashboardDateFilter, DefaultDashboardAttributeFilterComponentSetFactory, } from \"../../filterBar/index.js\";\nimport { DefaultDashboardWidget, DefaultDashboardInsightMenuButton, LegacyDashboardInsightMenuButton, DefaultDashboardInsightMenu, LegacyDashboardInsightMenu, DefaultInsightBody, DefaultDashboardInsight, DefaultDashboardKpi, DefaultDashboardInsightComponentSetFactory, DefaultDashboardKpiComponentSetFactory, DefaultDashboardInsightMenuTitle, } from \"../../widget/index.js\";\nexport const useDashboard = (props) => {\n    const { dashboard, DashboardAttributeFilterComponentProvider, DashboardDateFilterComponentProvider, WidgetComponentProvider, InsightComponentProvider, InsightBodyComponentProvider, InsightMenuButtonComponentProvider, insightMenuItemsProvider, InsightMenuComponentProvider, InsightMenuTitleComponentProvider, InsightComponentSetProvider, KpiComponentProvider, } = props;\n    const backend = useBackendStrict(props.backend);\n    const workspace = useWorkspaceStrict(props.workspace);\n    const attributeFilterProvider = useCallback((filter) => {\n        const userSpecified = DashboardAttributeFilterComponentProvider === null || DashboardAttributeFilterComponentProvider === void 0 ? void 0 : DashboardAttributeFilterComponentProvider(filter);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardAttributeFilter;\n    }, [DashboardAttributeFilterComponentProvider]);\n    const dateFilterProvider = useCallback((filter) => {\n        const userSpecified = DashboardDateFilterComponentProvider === null || DashboardDateFilterComponentProvider === void 0 ? void 0 : DashboardDateFilterComponentProvider(filter);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardDateFilter;\n    }, [DashboardDateFilterComponentProvider]);\n    const widgetProvider = useCallback((widget) => {\n        const userSpecified = WidgetComponentProvider === null || WidgetComponentProvider === void 0 ? void 0 : WidgetComponentProvider(widget);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardWidget;\n    }, [WidgetComponentProvider]);\n    const insightProvider = useCallback((insight, widget) => {\n        const userSpecified = InsightComponentProvider === null || InsightComponentProvider === void 0 ? void 0 : InsightComponentProvider(insight, widget);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardInsight;\n    }, [InsightComponentProvider]);\n    const insightBodyProvider = useCallback((insight, widget) => {\n        const userSpecified = InsightBodyComponentProvider === null || InsightBodyComponentProvider === void 0 ? void 0 : InsightBodyComponentProvider(insight, widget);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultInsightBody;\n    }, [InsightBodyComponentProvider]);\n    const insightMenuButtonProvider = useCallback((insight, widget) => {\n        const userSpecified = InsightMenuButtonComponentProvider === null || InsightMenuButtonComponentProvider === void 0 ? void 0 : InsightMenuButtonComponentProvider(insight, widget);\n        // if user customizes the items, always use the \"new\" default menu button\n        const FallbackDashboardInsightMenuButtonInner = insightMenuItemsProvider\n            ? DefaultDashboardInsightMenuButton\n            : LegacyDashboardInsightMenuButton;\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : FallbackDashboardInsightMenuButtonInner;\n    }, [InsightMenuButtonComponentProvider]);\n    const insightMenuProvider = useCallback((insight, widget) => {\n        const userSpecified = InsightMenuComponentProvider === null || InsightMenuComponentProvider === void 0 ? void 0 : InsightMenuComponentProvider(insight, widget);\n        // if user customizes the items, always use the \"new\" default menu\n        const FallbackDashboardInsightMenuInner = insightMenuItemsProvider\n            ? DefaultDashboardInsightMenu\n            : LegacyDashboardInsightMenu;\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : FallbackDashboardInsightMenuInner;\n    }, [InsightMenuComponentProvider]);\n    const insightMenuTitleProvider = useCallback((insight, widget) => {\n        const userSpecified = InsightMenuTitleComponentProvider === null || InsightMenuTitleComponentProvider === void 0 ? void 0 : InsightMenuTitleComponentProvider(insight, widget);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardInsightMenuTitle;\n    }, [InsightMenuTitleComponentProvider]);\n    const kpiProvider = useCallback((kpi, widget) => {\n        const userSpecified = KpiComponentProvider === null || KpiComponentProvider === void 0 ? void 0 : KpiComponentProvider(kpi, widget);\n        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardKpi;\n    }, [KpiComponentProvider]);\n    const dashboardOrRef = useMemo(() => {\n        return typeof dashboard === \"string\" ? idRef(dashboard) : dashboard;\n    }, [dashboard]);\n    const insightWidgetComponentSet = useMemo(() => {\n        const defaultComponentSet = DefaultDashboardInsightComponentSetFactory(insightProvider);\n        return InsightComponentSetProvider\n            ? InsightComponentSetProvider(defaultComponentSet)\n            : defaultComponentSet;\n    }, [InsightComponentSetProvider, insightProvider]);\n    const kpiWidgetComponentSet = useMemo(() => {\n        return DefaultDashboardKpiComponentSetFactory(kpiProvider);\n    }, [kpiProvider]);\n    const attributeFilterComponentSet = useMemo(() => {\n        return DefaultDashboardAttributeFilterComponentSetFactory(attributeFilterProvider);\n    }, [attributeFilterProvider]);\n    const isThemeLoading = useThemeIsLoading();\n    const hasThemeProvider = isThemeLoading !== undefined;\n    return {\n        backend,\n        workspace,\n        hasThemeProvider,\n        dashboardOrRef,\n        attributeFilterProvider,\n        dateFilterProvider,\n        widgetProvider,\n        insightProvider,\n        insightBodyProvider,\n        insightMenuButtonProvider,\n        insightMenuProvider,\n        insightMenuTitleProvider,\n        kpiProvider,\n        insightWidgetComponentSet,\n        kpiWidgetComponentSet,\n        attributeFilterComponentSet,\n    };\n};\n//# sourceMappingURL=useDashboard.js.map","// (C) 2021-2022 GoodData Corporation\nimport React from \"react\";\nimport { LoadingComponent as DefaultLoading, useClientWorkspaceStatus, useClientWorkspaceIdentifiers, useClientWorkspaceInitialized, } from \"@gooddata/sdk-ui\";\nimport { DashboardRenderer } from \"./components/DashboardRenderer.js\";\n/**\n * @internal\n */\nexport const Dashboard = (props) => {\n    var _a;\n    const workspaceStatus = useClientWorkspaceStatus();\n    const clientWsIdentifiers = useClientWorkspaceIdentifiers();\n    const isClientWorkspaceInitialized = useClientWorkspaceInitialized();\n    if (!isClientWorkspaceInitialized) {\n        return React.createElement(DashboardRenderer, Object.assign({}, props));\n    }\n    const LoadingComponent = (_a = props.LoadingComponent) !== null && _a !== void 0 ? _a : DefaultLoading;\n    /**\n     * Show loading indicator if the client workspace is loading and the workspace\n     * is not defined.\n     */\n    if (workspaceStatus !== \"success\") {\n        return React.createElement(LoadingComponent, null);\n    }\n    return React.createElement(DashboardRenderer, Object.assign({ workspace: clientWsIdentifiers.workspace }, props));\n};\n//# sourceMappingURL=Dashboard.js.map","// (C) 2021 GoodData Corporation\n/**\n * This implementation of dashboard attribute filter keeps the filter hidden out of sight. The attribute filter itself\n * will still be in effect.\n *\n * @alpha\n */\nexport const HiddenDashboardAttributeFilter = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenDashboardAttributeFilter.js.map","// (C) 2021 GoodData Corporation\n/**\n * This implementation of button bar keeps it out of sight and effectively disables it.\n *\n * @alpha\n */\nexport const HiddenButtonBar = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenButtonBar.js.map","// (C) 2021 GoodData Corporation\n/**\n * This implementation of menu button keeps it out of sight and effectively disables it.\n *\n * @alpha\n */\nexport const HiddenMenuButton = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenMenuButton.js.map","// (C) 2021 GoodData Corporation\n/**\n * This implementation of title keeps it out of sight and effectively disables it.\n *\n * @alpha\n */\nexport const HiddenTitle = () => {\n    return null;\n};\n//# sourceMappingURL=HiddenTitle.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\n/**\n * @internal\n */\nexport const DefaultDashboardToolbar = (props) => {\n    const { children } = props;\n    return React.createElement(\"div\", { className: \"gd-dashboard-toolbar s-dashboard-toolbar\" }, children);\n};\n//# sourceMappingURL=DefaultDashboardToolbar.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\n/**\n * @internal\n */\nexport const DefaultDashboardToolbarGroup = (props) => {\n    const { children, title } = props;\n    return (React.createElement(\"div\", { className: \"gd-toolbar-group\" },\n        React.createElement(\"span\", { className: \"gd-toolbar-group-title\" }, title),\n        children));\n};\n//# sourceMappingURL=DefaultDashboardToolbarGroup.js.map","// (C) 2022 GoodData Corporation\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Bubble, BubbleHoverTrigger, Button } from \"@gooddata/sdk-ui-kit\";\nconst ALIGN_POINTS = [{ align: \"tc bc\", offset: { x: 0, y: -5 } }];\nconst DashboardToolbarButtonBubbleWrapper = (props) => {\n    const { tooltip, children } = props;\n    if (!tooltip) {\n        return React.createElement(\"div\", { className: \"gd-toolbar-button-wrapper\" }, children);\n    }\n    return (React.createElement(BubbleHoverTrigger, { className: \"gd-toolbar-button-wrapper\" },\n        children,\n        React.createElement(Bubble, { alignPoints: ALIGN_POINTS }, tooltip)));\n};\n/**\n * @internal\n */\nexport const DefaultDashboardToolbarButton = (props) => {\n    const { tooltip, disabled, icon, onClick, isActive } = props;\n    return (React.createElement(DashboardToolbarButtonBubbleWrapper, { tooltip: tooltip },\n        React.createElement(Button, { className: cx(\"gd-button-secondary\", { [`gd-icon-${icon}`]: icon, \"is-active\": isActive }), disabled: disabled, onClick: onClick })));\n};\n//# sourceMappingURL=DefaultDashboardToolbarButton.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useMemo } from \"react\";\nimport { UnexpectedSdkError, useExecutionDataView, } from \"@gooddata/sdk-ui\";\nimport { useWidgetFilters } from \"./useWidgetFilters.js\";\n/**\n * This hook provides an easy way to read a data view from a custom widget. It resolves the appropriate filters\n * for the widget based on the filters currently set on the whole dashboard.\n *\n * @public\n */\nexport function useCustomWidgetExecutionDataView({ widget, execution, onCancel, onError, onLoading, onPending, onSuccess, }) {\n    var _a;\n    const filterQueryTask = useWidgetFilters(widget);\n    const dataViewTask = useExecutionDataView({\n        execution: execution\n            ? Object.assign(Object.assign({}, execution), { filters: filterQueryTask.result }) : undefined,\n        onCancel,\n        onError,\n        onLoading,\n        onPending,\n        onSuccess,\n    });\n    const rejectError = useMemo(() => {\n        if (filterQueryTask.status === \"rejected\") {\n            return new UnexpectedSdkError(\"The widget filter query was rejected\");\n        }\n        return undefined;\n    }, [filterQueryTask.status]);\n    useEffect(() => {\n        if (filterQueryTask.status === \"rejected\" && rejectError) {\n            onError === null || onError === void 0 ? void 0 : onError(rejectError);\n        }\n    }, [filterQueryTask.status, onError, rejectError]);\n    useEffect(() => {\n        if (filterQueryTask.status === \"error\") {\n            onError === null || onError === void 0 ? void 0 : onError(filterQueryTask.error);\n        }\n    }, [filterQueryTask.error, filterQueryTask.status, onError]);\n    if (filterQueryTask.status === \"pending\" || dataViewTask.status === \"pending\") {\n        return {\n            error: undefined,\n            result: undefined,\n            status: \"pending\",\n        };\n    }\n    if (filterQueryTask.status === \"running\" || dataViewTask.status === \"loading\") {\n        return {\n            error: undefined,\n            result: undefined,\n            status: \"loading\",\n        };\n    }\n    if (filterQueryTask.status === \"error\" || dataViewTask.status === \"error\") {\n        return {\n            error: ((_a = filterQueryTask.error) !== null && _a !== void 0 ? _a : dataViewTask.error),\n            result: undefined,\n            status: \"error\",\n        };\n    }\n    if (filterQueryTask.status === \"rejected\") {\n        return {\n            error: rejectError,\n            result: undefined,\n            status: \"error\",\n        };\n    }\n    return {\n        error: undefined,\n        result: dataViewTask.result,\n        status: \"success\",\n    };\n}\n//# sourceMappingURL=useCustomWidgetExecutionDataView.js.map","// (C) 2022 GoodData Corporation\nimport { useEffect, useMemo } from \"react\";\nimport { insightSetFilters, isInsight } from \"@gooddata/sdk-model\";\nimport { useBackendStrict, useCancelablePromise, useExecutionDataView, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport stringify from \"json-stable-stringify\";\nimport { useWidgetFilters } from \"./useWidgetFilters.js\";\n/**\n * This hook provides an easy way to read a data view for an insight from a custom widget.\n * It resolves the appropriate filters for the widget based on the filters currently set on the whole dashboard.\n *\n * @public\n */\nexport function useCustomWidgetInsightDataView({ widget, insight, onCancel, onError, onLoading, onPending, onSuccess, }) {\n    var _a;\n    const backend = useBackendStrict();\n    const workspace = useWorkspaceStrict();\n    const effectiveInsightTask = useCancelablePromise({\n        promise: insight\n            ? async () => {\n                return isInsight(insight)\n                    ? insight\n                    : backend\n                        .workspace(workspace)\n                        .insights()\n                        .getInsight(insight);\n            }\n            : null,\n        onCancel,\n        onPending,\n        onError,\n        onLoading,\n    }, [backend, workspace, insight]);\n    const filterQueryTask = useWidgetFilters(\n    // only pass the widget in when the insight is ready to not start the filter query while the insight is loading\n    effectiveInsightTask.result ? widget : undefined, effectiveInsightTask.result);\n    const insightWithAddedFilters = useMemo(() => effectiveInsightTask.result\n        ? insightSetFilters(effectiveInsightTask.result, filterQueryTask.result)\n        : undefined, [\n        effectiveInsightTask.result,\n        /**\n         * We use stringified value to avoid setting equal filters. This prevents cascading cache invalidation\n         * and expensive re-renders down the line. The stringification is worth it as the filters are usually\n         * pretty small thus saving more time than it is taking.\n         */\n        stringify(filterQueryTask.result),\n    ]);\n    const insightExecution = useMemo(() => {\n        return insightWithAddedFilters\n            ? backend.workspace(workspace).execution().forInsight(insightWithAddedFilters)\n            : undefined;\n    }, [backend, workspace, insightWithAddedFilters, widget]);\n    const dataViewTask = useExecutionDataView({\n        execution: insightExecution,\n        onCancel,\n        onError,\n        onSuccess,\n    });\n    useEffect(() => {\n        if (filterQueryTask.status === \"error\") {\n            onError === null || onError === void 0 ? void 0 : onError(filterQueryTask.error);\n        }\n    }, [filterQueryTask.error, filterQueryTask.status, onError]);\n    // insight non-success status has precedence, other things cannot run without an insight\n    if (effectiveInsightTask.status === \"error\" ||\n        effectiveInsightTask.status === \"loading\" ||\n        effectiveInsightTask.status === \"pending\") {\n        return {\n            error: effectiveInsightTask.error,\n            result: undefined,\n            status: effectiveInsightTask.status,\n        };\n    }\n    if (filterQueryTask.status === \"pending\" || dataViewTask.status === \"pending\") {\n        return {\n            error: undefined,\n            result: undefined,\n            status: \"pending\",\n        };\n    }\n    if (filterQueryTask.status === \"running\" || dataViewTask.status === \"loading\") {\n        return {\n            error: undefined,\n            result: undefined,\n            status: \"loading\",\n        };\n    }\n    if (filterQueryTask.status === \"error\" || dataViewTask.status === \"error\") {\n        return {\n            error: ((_a = dataViewTask.error) !== null && _a !== void 0 ? _a : filterQueryTask.error),\n            result: undefined,\n            status: \"error\",\n        };\n    }\n    return {\n        error: undefined,\n        result: dataViewTask.result,\n        status: \"success\",\n    };\n}\n//# sourceMappingURL=useCustomWidgetInsightDataView.js.map","// (C) 2022 GoodData Corporation\nimport { useBackendStrict, useExecutionDataView, useWorkspaceStrict, } from \"@gooddata/sdk-ui\";\nimport { useMemo } from \"react\";\nimport { insightSetFilters } from \"@gooddata/sdk-model\";\nimport stringify from \"json-stable-stringify\";\nimport { selectInsightByRef, useDashboardSelector } from \"../../../model/index.js\";\nimport { useWidgetFilters } from \"./useWidgetFilters.js\";\n/**\n * This hook provides an easy way to read a data view from insight widget.\n *\n * @param config - configuration of the hook\n *\n * @public\n */\nexport function useInsightWidgetDataView(config) {\n    const { insightWidget, onCancel, onError, onLoading, onPending, onSuccess } = config;\n    const backend = useBackendStrict();\n    const workspace = useWorkspaceStrict();\n    const insight = useDashboardSelector(selectInsightByRef(insightWidget === null || insightWidget === void 0 ? void 0 : insightWidget.insight));\n    const widgetFiltersPromise = useWidgetFilters(insightWidget);\n    const insightWithAddedFilters = useMemo(() => insightSetFilters(insight, widgetFiltersPromise.result), [\n        insight,\n        /**\n         * We use stringified value to avoid setting equal filters. This prevents cascading cache invalidation\n         * and expensive re-renders down the line. The stringification is worth it as the filters are usually\n         * pretty small thus saving more time than it is taking.\n         */\n        stringify(widgetFiltersPromise.result),\n    ]);\n    const insightExecution = useMemo(() => {\n        return insightWithAddedFilters && insightWidget\n            ? backend.workspace(workspace).execution().forInsight(insightWithAddedFilters)\n            : undefined;\n    }, [backend, workspace, insightWithAddedFilters, insightWidget]);\n    return useExecutionDataView({\n        execution: insightExecution,\n        onCancel,\n        onError,\n        onLoading,\n        onPending,\n        onSuccess,\n    });\n}\n//# sourceMappingURL=useInsightWidgetDataView.js.map","// (C) 2020 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const DashboardInsightMenuButton = (props) => {\n    const { insight, widget } = props;\n    const { InsightMenuButtonComponentProvider } = useDashboardComponentsContext();\n    const InsightMenuButtonComponent = useMemo(() => InsightMenuButtonComponentProvider(insight, widget), [InsightMenuButtonComponentProvider, insight, widget]);\n    return React.createElement(InsightMenuButtonComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardInsightMenuButton.js.map","// (C) 2020 GoodData Corporation\nimport React, { useMemo } from \"react\";\nimport { useDashboardComponentsContext } from \"../../dashboardContexts/index.js\";\n/**\n * @internal\n */\nexport const DashboardInsightMenu = (props) => {\n    const { insight, widget } = props;\n    const { InsightMenuComponentProvider } = useDashboardComponentsContext();\n    const InsightMenuComponent = useMemo(() => InsightMenuComponentProvider(insight, widget), [InsightMenuComponentProvider, insight, widget]);\n    return React.createElement(InsightMenuComponent, Object.assign({}, props));\n};\n//# sourceMappingURL=DashboardInsightMenu.js.map","// (C) 2021-2022 GoodData Corporation\n/**\n * Abstract base class for the Dashboard Plugin.\n *\n * @remarks\n * Each plugin should extend this class and implement at least the {@link DashboardPluginV1.register} method.\n *\n * @public\n */\nexport class DashboardPluginV1 {\n    constructor() {\n        this._pluginVersion = \"1.0\";\n        this.minEngineVersion = \"bundled\";\n        this.maxEngineVersion = \"bundled\";\n    }\n}\n//# sourceMappingURL=plugin.js.map","import { DefaultDashboardInsight, DefaultInsightBody, } from \"../../presentation/index.js\";\nimport { InvariantError } from \"ts-invariant\";\nimport includes from \"lodash/includes.js\";\nimport union from \"lodash/union.js\";\nimport { insightTags } from \"@gooddata/sdk-model\";\nconst DefaultDashboardInsightComponentProvider = () => {\n    return DefaultDashboardInsight;\n};\nconst DefaultInsightBodyComponentProvider = () => {\n    return DefaultInsightBody;\n};\nclass DefaultInsightCustomizerState {\n    constructor(logger, defaultCoreProvider, defaultInsightBodyProvider) {\n        /*\n         * Maintains index between tag and the position within coreProviderChain where the provider\n         * for each tag is located. This is used to replace existing providers in case plugins make\n         * multiple calls to `withTag` with the same tag.\n         */\n        this.tagProviderIndexes = {};\n        /*\n         * Core provider encapsulates resolution using the chain of core providers.\n         */\n        this.coreProvider = (insight, widget) => {\n            const providerStack = [...this.coreProviderChain].reverse();\n            for (const provider of providerStack) {\n                const Component = provider(insight, widget);\n                if (Component) {\n                    return Component;\n                }\n            }\n            // if this happens then the provider chain got messed up. by default the chain contains the default\n            // provider which never returns undefined\n            throw new InvariantError();\n        };\n        /*\n         * Insight Renderer provider encapsulates resolution using the chain of Insight Renderer providers.\n         */\n        this.insightRendererProvider = (insight, widget) => {\n            const providerStack = [...this.insightBodyProviderChain].reverse();\n            for (const provider of providerStack) {\n                const Component = provider(insight, widget);\n                if (Component) {\n                    return Component;\n                }\n            }\n            // if this happens then the provider chain got messed up. by default the chain contains the default\n            // provider which never returns undefined\n            throw new InvariantError();\n        };\n        /*\n         * Root provider is THE provider that should be used in the dashboard extension properties. The\n         * provider function included here will reflect the setup where there may be N registered decorators\n         * sitting on top of a chain of core providers.\n         *\n         * In the initial state the root provider IS the core provider - meaning no decorations. As the\n         * decorators get registered, the rootProvider changes.\n         */\n        this.rootProvider = this.coreProvider;\n        this.logger = logger;\n        this.coreProviderChain = [defaultCoreProvider];\n        this.insightBodyProviderChain = [defaultInsightBodyProvider];\n    }\n    addTagProvider(tag, provider) {\n        // provider may already be registered for this tag\n        const providerIdx = this.tagProviderIndexes[tag];\n        if (providerIdx !== undefined) {\n            this.logger.warn(`Overriding insight component provider for tag '${tag}'.`);\n            // if that is the case, replace the previous provider (last provider wins) with this\n            // new provider\n            this.coreProviderChain[providerIdx] = provider;\n        }\n        else {\n            // otherwise add new provider onto the chain\n            this.tagProviderIndexes[tag] = this.coreProviderChain.length;\n            this.coreProviderChain.push(provider);\n        }\n    }\n    addCustomProvider(provider) {\n        this.coreProviderChain.push(provider);\n    }\n    addInsightBodyProvider(provider) {\n        this.insightBodyProviderChain.push(provider);\n    }\n    getRootProvider() {\n        return this.rootProvider;\n    }\n    getInsightBodyComponentProvider() {\n        return this.insightRendererProvider;\n    }\n    switchRootProvider(provider) {\n        this.rootProvider = provider;\n    }\n}\n/**\n * Sealed customizer state will not allow to perform any modifications of the state. Sealing the state\n * is essential to make the customization more defensive: during the registration, the plugin can hang\n * onto the dashboard customizer - stash it somewhere. And then after registration try to use the customizer\n * and try to do additional 'ad-hoc' customizations.\n *\n * Such a thing is not supported by the lifecycle and this sealing is in place to prevent plugins going into\n * that dangerous territory.\n */\nclass SealedInsightCustomizerState {\n    constructor(logger, state) {\n        this.logger = logger;\n        this.state = state;\n        this.addCustomProvider = () => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize insight rendering outside of plugin registration. Ignoring.`);\n        };\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        this.addInsightBodyProvider = () => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize insight rendering outside of plugin registration. Ignoring.`);\n        };\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        this.addTagProvider = (_tag) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize insight rendering outside of plugin registration. Ignoring.`);\n        };\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        this.switchRootProvider = () => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize insight rendering outside of plugin registration. Ignoring.`);\n        };\n        this.getRootProvider = () => {\n            return this.state.getRootProvider();\n        };\n        this.getInsightBodyComponentProvider = () => {\n            return this.state.getInsightBodyComponentProvider();\n        };\n    }\n}\n/**\n * Default implementation of the insight rendering customizer. Notice that the state of the customizations\n * is kept separate from this class.\n *\n * This code is responsible for creation of the providers (if needed) and then updating the state\n * accordingly. The customizer state methods are responsible for doing correct updates of the state itself. This\n * decoupling is in place so that it is possible to seal the state and prevent write operations from some point\n * onward. See {@link SealedInsightCustomizerState} for more motivation behind this.\n *\n * @internal\n */\nexport class DefaultInsightCustomizer {\n    constructor(logger, mutationContext, defaultCoreProvider = DefaultDashboardInsightComponentProvider, defaultInsightBodyProvider = DefaultInsightBodyComponentProvider) {\n        this.withTag = (tag, component) => {\n            if (!tag) {\n                this.logger.warn(\"The 'withTag' was called with an empty 'tag' parameter. This is effectively a noop.\");\n                return this;\n            }\n            const newProvider = (insight) => {\n                if (includes(insightTags(insight), tag)) {\n                    return component;\n                }\n            };\n            this.state.addTagProvider(tag, newProvider);\n            this.mutationContext.insight = union(this.mutationContext.insight, [\"tag\"]);\n            return this;\n        };\n        this.withCustomProvider = (provider) => {\n            this.state.addCustomProvider(provider);\n            this.mutationContext.insight = union(this.mutationContext.insight, [\"provider\"]);\n            return this;\n        };\n        this.withCustomDecorator = (providerFactory) => {\n            // snapshot current root provider\n            const rootSnapshot = this.state.getRootProvider();\n            // call user's factory in order to obtain the actual provider - pass the current root so that user's\n            // code can use it to obtain component to decorate\n            const decoratorProvider = providerFactory(rootSnapshot);\n            // construct new root provider; this will be using user's provider with a fallback to root provider\n            // in case user's code does not return anything\n            const newRootProvider = (insight, widget) => {\n                const Component = decoratorProvider(insight, widget);\n                if (Component) {\n                    return Component;\n                }\n                return rootSnapshot(insight, widget);\n            };\n            // finally modify the root provider; next time someone registers decorator, it will be on top of\n            // this currently registered one\n            this.state.switchRootProvider(newRootProvider);\n            this.mutationContext.insight = union(this.mutationContext.insight, [\"decorator\"]);\n            return this;\n        };\n        this.getInsightProvider = () => {\n            return this.state.getRootProvider();\n        };\n        this.getInsightBodyComponentProvider = () => {\n            return this.state.getInsightBodyComponentProvider();\n        };\n        this.sealCustomizer = () => {\n            this.state = new SealedInsightCustomizerState(this.logger, this.state);\n        };\n        this.logger = logger;\n        this.mutationContext = mutationContext;\n        this.state = new DefaultInsightCustomizerState(logger, defaultCoreProvider, defaultInsightBodyProvider);\n    }\n    withCustomInsightBodyProvider(provider) {\n        this.state.addInsightBodyProvider(provider);\n        this.mutationContext.insight = union(this.mutationContext.insight, [\"body\"]);\n        return this;\n    }\n}\n//# sourceMappingURL=insightCustomizer.js.map","// (C) 2021 GoodData Corporation\n/**\n * Returns string that identifies a concrete plugin and can be used in log messages.\n *\n * @internal\n */\nexport function pluginDebugStr(plugin) {\n    var _a;\n    return `${(_a = plugin.debugName) !== null && _a !== void 0 ? _a : plugin.displayName}/${plugin.version}`;\n}\n//# sourceMappingURL=pluginUtils.js.map","// (C) 2021-2022 GoodData Corporation\nimport { pluginDebugStr } from \"./pluginUtils.js\";\nfunction addPluginInfoToMessage(plugin, message) {\n    return plugin ? `${pluginDebugStr(plugin)}: ${message}` : message;\n}\n/**\n * Common logger to use for all events that occur during customization. The logger is responsible for adding\n * information about plugin whose registration code triggered those events.\n */\nexport class DashboardCustomizationLogger {\n    constructor() {\n        this.setCurrentPlugin = (plugin) => {\n            this.currentPlugin = plugin;\n        };\n        this.log = (message, ...optionalParams) => {\n            // eslint-disable-next-line no-console\n            console.log(addPluginInfoToMessage(this.currentPlugin, message), optionalParams);\n        };\n        this.warn = (message, ...optionalParams) => {\n            console.warn(addPluginInfoToMessage(this.currentPlugin, message), optionalParams);\n        };\n        this.error = (message, ...optionalParams) => {\n            console.error(addPluginInfoToMessage(this.currentPlugin, message), optionalParams);\n        };\n    }\n}\n//# sourceMappingURL=customizationLogging.js.map","import { DefaultDashboardKpi, } from \"../../presentation/index.js\";\nimport { InvariantError } from \"ts-invariant\";\nimport union from \"lodash/union.js\";\nconst DefaultKpiRendererProvider = () => {\n    return DefaultDashboardKpi;\n};\nclass DefaultKpiCustomizerState {\n    constructor(defaultProvider) {\n        /*\n         * Core provider encapsulates resolution using the chain of core providers.\n         */\n        this.coreProvider = (kpi, widget) => {\n            const providerStack = [...this.coreProviderChain].reverse();\n            for (const provider of providerStack) {\n                const Component = provider(kpi, widget);\n                if (Component) {\n                    return Component;\n                }\n            }\n            // if this happens then the provider chain got messed up. by default the chain contains the default\n            // provider which never returns undefined\n            throw new InvariantError();\n        };\n        /*\n         * Root provider is THE provider that should be used in the dashboard extension properties. The\n         * provider function included here will reflect the setup where there may be N registered decorators\n         * sitting on top of a chain of core providers.\n         *\n         * In the initial state the root provider IS the core provider - meaning no decorations. As the\n         * decorators get registered, the rootProvider changes.\n         */\n        this.rootProvider = this.coreProvider;\n        this.coreProviderChain = [defaultProvider];\n    }\n    addCustomProvider(provider) {\n        this.coreProviderChain.push(provider);\n    }\n    getRootProvider() {\n        return this.rootProvider;\n    }\n    switchRootProvider(provider) {\n        this.rootProvider = provider;\n    }\n}\n/**\n * Sealed customizer state will not allow to perform any modifications of the state. Sealing the state\n * is essential to make the customization more defensive: during the registration, the plugin can hang\n * onto the dashboard customizer - stash it somewhere. And then after registration try to use the customizer\n * and try to do additional 'ad-hoc' customizations.\n *\n * Such a thing is not supported by the lifecycle and this sealing is in place to prevent plugins going into\n * that dangerous territory.\n */\nclass SealedKpiCustomizerState {\n    constructor(logger, state) {\n        this.logger = logger;\n        this.state = state;\n        this.addCustomProvider = (_provider) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize KPI rendering outside of plugin registration. Ignoring.`);\n        };\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        this.switchRootProvider = (_provider) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize KPI rendering outside of plugin registration. Ignoring.`);\n        };\n        this.getRootProvider = () => {\n            return this.state.getRootProvider();\n        };\n    }\n}\n/**\n * Default implementation of the KPI rendering customizer. Notice that the state of the customizations\n * is kept separate from this class.\n *\n * This code is responsible for creation of the providers (if needed) and then updating the state\n * accordingly. The customizer state methods are responsible for doing correct updates of the state itself. This\n * decoupling is in place so that it is possible to seal the state and prevent write operations from some point\n * onward. See {@link SealedKpiCustomizerState} for more motivation behind this.\n *\n * @internal\n */\nexport class DefaultKpiCustomizer {\n    constructor(logger, mutationContext, defaultProvider = DefaultKpiRendererProvider) {\n        this.withCustomProvider = (provider) => {\n            this.state.addCustomProvider(provider);\n            this.mutationContext.kpi = union(this.mutationContext.kpi, [\"provider\"]);\n            return this;\n        };\n        this.withCustomDecorator = (providerFactory) => {\n            // snapshot current root provider\n            const rootSnapshot = this.state.getRootProvider();\n            // call user's factory in order to obtain the actual provider - pass the current root so that user's\n            // code can use it to obtain component to decorate\n            const decoratorProvider = providerFactory(rootSnapshot);\n            // construct new root provider; this will be using user's provider with a fallback to root provider\n            // in case user's code does not return anything\n            const newRootProvider = (kpi, widget) => {\n                const Component = decoratorProvider(kpi, widget);\n                if (Component) {\n                    return Component;\n                }\n                return rootSnapshot(kpi, widget);\n            };\n            // finally modify the root provider; next time someone registers decorator, it will be on top of\n            // this currently registered one\n            this.state.switchRootProvider(newRootProvider);\n            this.mutationContext.kpi = union(this.mutationContext.kpi, [\"decorator\"]);\n            return this;\n        };\n        this.getKpiProvider = () => {\n            return this.state.getRootProvider();\n        };\n        this.sealCustomizer = () => {\n            this.state = new SealedKpiCustomizerState(this.logger, this.state);\n        };\n        this.logger = logger;\n        this.mutationContext = mutationContext;\n        this.state = new DefaultKpiCustomizerState(defaultProvider);\n    }\n}\n//# sourceMappingURL=kpiCustomizer.js.map","// (C) 2021-2022 GoodData Corporation\nimport { isCustomWidget } from \"../../model/index.js\";\nclass WidgetCustomizerState {\n    constructor(logger) {\n        this.logger = logger;\n        this.customWidgetMap = new Map();\n        this.addDefinition = (definition) => {\n            if (this.customWidgetMap.has(definition.widgetType)) {\n                this.logger.warn(`Redefining custom widget type ${definition.widgetType}. Previous definition will be discarded.`);\n            }\n            this.customWidgetMap.set(definition.widgetType, definition);\n        };\n        this.getCustomWidgetMap = () => {\n            return this.customWidgetMap;\n        };\n    }\n}\nclass SealedCustomizerState {\n    constructor(state, logger) {\n        this.state = state;\n        this.logger = logger;\n        this.addDefinition = (_definition) => {\n            this.logger.warn(`Attempting to add custom widgets outside of plugin registration. Ignoring.`);\n        };\n        this.getCustomWidgetMap = () => {\n            return this.state.getCustomWidgetMap();\n        };\n    }\n}\nexport class DefaultWidgetCustomizer {\n    constructor(logger) {\n        this.logger = logger;\n        this.state = new WidgetCustomizerState(this.logger);\n        this.addCustomWidget = (widgetType, Component) => {\n            this.state.addDefinition({\n                widgetType,\n                DefaultComponent: Component,\n            });\n            return this;\n        };\n        this.sealCustomizer = () => {\n            this.state = new SealedCustomizerState(this.state, this.logger);\n            return this;\n        };\n        this.getWidgetComponentProvider = () => {\n            const customWidgetMap = this.state.getCustomWidgetMap();\n            return (widget) => {\n                if (!isCustomWidget(widget)) {\n                    return undefined;\n                }\n                const definition = customWidgetMap.get(widget.customType);\n                if (!definition) {\n                    return undefined;\n                }\n                return definition.DefaultComponent;\n            };\n        };\n    }\n}\n//# sourceMappingURL=widgetCustomizer.js.map","// (C) 2021-2022 GoodData Corporation\nimport { objRefToString, } from \"@gooddata/sdk-model\";\nimport isEmpty from \"lodash/isEmpty.js\";\nimport cloneDeep from \"lodash/cloneDeep.js\";\nimport { DashboardLayoutBuilder } from \"../../_staging/dashboard/fluidLayout/index.js\";\nexport class FluidLayoutCustomizer {\n    constructor(logger, mutationContext) {\n        this.logger = logger;\n        this.mutationContext = mutationContext;\n        this.addItemOps = [];\n        this.addSectionOps = [];\n        this.addItem = (sectionIdx, itemIdx, item) => {\n            if (!item.widget) {\n                this.logger.warn(`Item to add to section ${sectionIdx} at index ${itemIdx} does not contain any widget. The item will not be added at all.`, item);\n                return this;\n            }\n            this.addItemOps.push({\n                sectionIdx,\n                itemIdx,\n                item: cloneDeep(item),\n            });\n            return this;\n        };\n        this.addSection = (sectionIdx, section) => {\n            if (isEmpty(section.items)) {\n                this.logger.warn(`Section to add at index ${sectionIdx} contains no items. The section will not be added at all.`, section);\n                return this;\n            }\n            const itemsWithoutWidget = section.items.filter((item) => item.widget === undefined);\n            if (!isEmpty(itemsWithoutWidget)) {\n                this.logger.warn(`Section to add at index ${sectionIdx} contains items that do not specify any widgets. The section will not be added at all.`, section);\n                return this;\n            }\n            this.addSectionOps.push({\n                sectionIdx,\n                section: cloneDeep(section),\n            });\n            return this;\n        };\n        this.applyTransformations = (layout) => {\n            const builder = DashboardLayoutBuilder.for(layout);\n            const facade = builder.facade();\n            const { layouts } = this.mutationContext;\n            this.addItemOps.forEach((op) => {\n                const { sectionIdx, itemIdx, item } = op;\n                const actualSectionIdx = sectionIdx === -1 ? facade.sections().count() : sectionIdx;\n                builder.modifySection(actualSectionIdx, (sectionBuilder) => {\n                    sectionBuilder.addItem(item, itemIdx === -1 ? undefined : itemIdx);\n                    if (item.widget) {\n                        layouts[objRefToString(item.widget)] = \"inserted\";\n                    }\n                    return sectionBuilder;\n                });\n            });\n            this.addSectionOps.forEach((op) => {\n                const { sectionIdx, section } = op;\n                builder.addSection(section, sectionIdx === -1 ? undefined : sectionIdx);\n                section.items.forEach((item) => {\n                    if (item.widget) {\n                        layouts[objRefToString(item.widget)] = \"inserted\";\n                    }\n                });\n            });\n            return builder.build();\n        };\n    }\n}\n//# sourceMappingURL=fluidLayoutCustomizer.js.map","import { FluidLayoutCustomizer } from \"./fluidLayoutCustomizer.js\";\nexport class DefaultLayoutCustomizer {\n    constructor(logger, mutationContext) {\n        this.logger = logger;\n        this.mutationContext = mutationContext;\n        this.sealed = false;\n        this.fluidLayoutTransformations = [];\n        this.customizeFluidLayout = (customizationFn) => {\n            if (!this.sealed) {\n                this.fluidLayoutTransformations.push(customizationFn);\n            }\n            else {\n                this.logger.warn(`Attempting to add layout customization outside of plugin registration. Ignoring.`);\n            }\n            return this;\n        };\n        this.sealCustomizer = () => {\n            this.sealed = true;\n            return this;\n        };\n        this.getExistingDashboardTransformFn = () => {\n            const snapshot = [...this.fluidLayoutTransformations];\n            return (dashboard) => {\n                const { layout } = dashboard;\n                /*\n                 * Once the dashboard component supports multiple layout types, then the code here must only\n                 * perform the transformations applicable for the dashboard's layout type..\n                 *\n                 * At this point, since dashboard only supports fluid layout, the code tests that there is a\n                 * layout in a dashboard and is of expected type. This condition will be always true for\n                 * non-empty, non-corrupted dashboards\n                 */\n                if (!layout || layout.type !== \"IDashboardLayout\") {\n                    return undefined;\n                }\n                const newLayout = snapshot.reduce((currentLayout, fn) => {\n                    // Create a new fluid layout customizer just for this round of processing\n                    const customizer = new FluidLayoutCustomizer(this.logger, this.mutationContext);\n                    try {\n                        // call out to the plugin-provided function with the current value of the layout & the\n                        // customizer to use. the custom function may now inspect the layout & use the customizer\n                        // to add sections or items. customizer will not reflect those changes immediately. instead\n                        // it will accumulate those operations\n                        fn(currentLayout, customizer);\n                        // now make the customizer apply the registered layout modifications; this is done so that\n                        // customizer can guarantee that all new items are added at first (keeping the original\n                        // section indexes) and only then new sections are added\n                        return customizer.applyTransformations(currentLayout);\n                    }\n                    catch (e) {\n                        this.logger.error(\"An error has occurred while transforming fluid dashboard layout. Skipping failed transformation.\", e);\n                        return currentLayout;\n                    }\n                }, layout);\n                return Object.assign(Object.assign({}, dashboard), { layout: newLayout });\n            };\n        };\n    }\n}\n//# sourceMappingURL=layoutCustomizer.js.map","// (C) 2022 GoodData Corporation\nimport { HiddenFilterBar } from \"../../presentation/index.js\";\nclass FilterBarCustomizerState {\n    constructor(logger) {\n        this.logger = logger;\n        this.renderingMode = undefined;\n        this.getRenderingMode = () => {\n            var _a;\n            return (_a = this.renderingMode) !== null && _a !== void 0 ? _a : \"default\";\n        };\n        this.setRenderingMode = (renderingMode) => {\n            if (this.renderingMode) {\n                this.logger.warn(`Redefining filter bar rendering mode to \"${renderingMode}\". Previous definition will be discarded.`);\n            }\n            this.renderingMode = renderingMode;\n        };\n    }\n}\nclass SealedFilterBarCustomizerState {\n    constructor(state, logger) {\n        this.state = state;\n        this.logger = logger;\n        this.getRenderingMode = () => {\n            return this.state.getRenderingMode();\n        };\n        this.setRenderingMode = (_renderingMode) => {\n            this.logger.warn(`Attempting to set filter bar rendering mode outside of plugin registration. Ignoring.`);\n        };\n    }\n}\n/**\n * @internal\n */\nexport class DefaultFilterBarCustomizer {\n    constructor(logger) {\n        this.logger = logger;\n        this.state = new FilterBarCustomizerState(this.logger);\n        this.setRenderingMode = (mode) => {\n            this.state.setRenderingMode(mode);\n            return this;\n        };\n        this.getCustomizerResult = () => {\n            return {\n                // if rendering mode is \"hidden\", explicitly replace the component with HiddenFilterBar,\n                // otherwise do nothing to allow the default or any custom component provided by the embedding application\n                // to kick in\n                FilterBarComponent: this.state.getRenderingMode() === \"hidden\" ? HiddenFilterBar : undefined,\n            };\n        };\n        this.sealCustomizer = () => {\n            this.state = new SealedFilterBarCustomizerState(this.state, this.logger);\n            return this;\n        };\n    }\n}\n//# sourceMappingURL=filterBarCustomizer.js.map","import { DefaultDashboardAttributeFilter, } from \"../../presentation/index.js\";\nimport { InvariantError } from \"ts-invariant\";\nconst DefaultAttributeFilterRendererProvider = () => {\n    return DefaultDashboardAttributeFilter;\n};\nclass DefaultAttributeFiltersCustomizerState {\n    constructor(defaultProvider) {\n        /*\n         * Core provider encapsulates resolution using the chain of core providers.\n         */\n        this.coreProvider = (attributeFilter) => {\n            const providerStack = [...this.coreProviderChain].reverse();\n            for (const provider of providerStack) {\n                const Component = provider(attributeFilter);\n                if (Component) {\n                    return Component;\n                }\n            }\n            // if this happens then the provider chain got messed up. by default the chain contains the default\n            // provider which never returns undefined\n            throw new InvariantError();\n        };\n        /*\n         * Root provider is THE provider that should be used in the dashboard extension properties. The\n         * provider function included here will reflect the setup where there may be N registered decorators\n         * sitting on top of a chain of core providers.\n         *\n         * In the initial state the root provider IS the core provider - meaning no decorations. As the\n         * decorators get registered, the rootProvider changes.\n         */\n        this.rootProvider = this.coreProvider;\n        this.coreProviderChain = [defaultProvider];\n    }\n    addCustomProvider(provider) {\n        this.coreProviderChain.push(provider);\n    }\n    getRootProvider() {\n        return this.rootProvider;\n    }\n    switchRootProvider(provider) {\n        this.rootProvider = provider;\n    }\n}\n/**\n * Sealed customizer state will not allow to perform any modifications of the state. Sealing the state\n * is essential to make the customization more defensive: during the registration, the plugin can hang\n * onto the dashboard customizer - stash it somewhere. And then after registration try to use the customizer\n * and try to do additional 'ad-hoc' customizations.\n *\n * Such a thing is not supported by the lifecycle and this sealing is in place to prevent plugins going into\n * that dangerous territory.\n */\nclass SealedAttributeFiltersCustomizerState {\n    constructor(logger, state) {\n        this.logger = logger;\n        this.state = state;\n        this.addCustomProvider = (_provider) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize AttributeFilter rendering outside of plugin registration. Ignoring.`);\n        };\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        this.switchRootProvider = (_provider) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize AttributeFilter rendering outside of plugin registration. Ignoring.`);\n        };\n        this.getRootProvider = () => {\n            return this.state.getRootProvider();\n        };\n    }\n}\n/**\n * Default implementation of the AttributeFilter rendering customizer. Notice that the state of the customizations\n * is kept separate from this class.\n *\n * This code is responsible for creation of the providers (if needed) and then updating the state\n * accordingly. The customizer state methods are responsible for doing correct updates of the state itself. This\n * decoupling is in place so that it is possible to seal the state and prevent write operations from some point\n * onward. See {@link SealedAttributeFilterCustomizerState} for more motivation behind this.\n *\n * @internal\n */\nexport class DefaultAttributeFiltersCustomizer {\n    constructor(logger, defaultProvider = DefaultAttributeFilterRendererProvider) {\n        this.withCustomProvider = (provider) => {\n            this.state.addCustomProvider(provider);\n            return this;\n        };\n        this.getAttributeFilterProvider = () => {\n            return this.state.getRootProvider();\n        };\n        this.sealCustomizer = () => {\n            this.state = new SealedAttributeFiltersCustomizerState(this.logger, this.state);\n        };\n        this.logger = logger;\n        this.state = new DefaultAttributeFiltersCustomizerState(defaultProvider);\n    }\n}\n//# sourceMappingURL=attributeFiltersCustomizer.js.map","import { DefaultDashboardDateFilter, } from \"../../presentation/index.js\";\nimport { InvariantError } from \"ts-invariant\";\nconst DefaultDateFilterRendererProvider = () => {\n    return DefaultDashboardDateFilter;\n};\nclass DefaultDateFiltersCustomizerState {\n    constructor(defaultProvider) {\n        /*\n         * Core provider encapsulates resolution using the chain of core providers.\n         */\n        this.coreProvider = (dateFilter) => {\n            const providerStack = [...this.coreProviderChain].reverse();\n            for (const provider of providerStack) {\n                const Component = provider(dateFilter);\n                if (Component) {\n                    return Component;\n                }\n            }\n            // if this happens then the provider chain got messed up. by default the chain contains the default\n            // provider which never returns undefined\n            throw new InvariantError();\n        };\n        /*\n         * Root provider is THE provider that should be used in the dashboard extension properties. The\n         * provider function included here will reflect the setup where there may be N registered decorators\n         * sitting on top of a chain of core providers.\n         *\n         * In the initial state the root provider IS the core provider - meaning no decorations. As the\n         * decorators get registered, the rootProvider changes.\n         */\n        this.rootProvider = this.coreProvider;\n        this.coreProviderChain = [defaultProvider];\n    }\n    addCustomProvider(provider) {\n        this.coreProviderChain.push(provider);\n    }\n    getRootProvider() {\n        return this.rootProvider;\n    }\n    switchRootProvider(provider) {\n        this.rootProvider = provider;\n    }\n}\n/**\n * Sealed customizer state will not allow to perform any modifications of the state. Sealing the state\n * is essential to make the customization more defensive: during the registration, the plugin can hang\n * onto the dashboard customizer - stash it somewhere. And then after registration try to use the customizer\n * and try to do additional 'ad-hoc' customizations.\n *\n * Such a thing is not supported by the lifecycle and this sealing is in place to prevent plugins going into\n * that dangerous territory.\n */\nclass SealedDateFiltersCustomizerState {\n    constructor(logger, state) {\n        this.logger = logger;\n        this.state = state;\n        this.addCustomProvider = (_provider) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize DateFilter rendering outside of plugin registration. Ignoring.`);\n        };\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        this.switchRootProvider = (_provider) => {\n            // eslint-disable-next-line no-console\n            this.logger.warn(`Attempting to customize DateFilter rendering outside of plugin registration. Ignoring.`);\n        };\n        this.getRootProvider = () => {\n            return this.state.getRootProvider();\n        };\n    }\n}\n/**\n * Default implementation of the DateFilter rendering customizer. Notice that the state of the customizations\n * is kept separate from this class.\n *\n * This code is responsible for creation of the providers (if needed) and then updating the state\n * accordingly. The customizer state methods are responsible for doing correct updates of the state itself. This\n * decoupling is in place so that it is possible to seal the state and prevent write operations from some point\n * onward. See {@link SealedDateFilterCustomizerState} for more motivation behind this.\n *\n * @internal\n */\nexport class DefaultDateFiltersCustomizer {\n    constructor(logger, defaultProvider = DefaultDateFilterRendererProvider) {\n        this.withCustomProvider = (provider) => {\n            this.state.addCustomProvider(provider);\n            return this;\n        };\n        this.getDateFilterProvider = () => {\n            return this.state.getRootProvider();\n        };\n        this.sealCustomizer = () => {\n            this.state = new SealedDateFiltersCustomizerState(this.logger, this.state);\n        };\n        this.logger = logger;\n        this.state = new DefaultDateFiltersCustomizerState(defaultProvider);\n    }\n}\n//# sourceMappingURL=dateFiltersCustomizer.js.map","import { DefaultAttributeFiltersCustomizer } from \"./attributeFiltersCustomizer.js\";\nimport { DefaultDateFiltersCustomizer } from \"./dateFiltersCustomizer.js\";\nexport class DefaultFiltersCustomizer {\n    constructor(logger) {\n        this.logger = logger;\n        this.attributeFiltersCustomizer = new DefaultAttributeFiltersCustomizer(this.logger);\n        this.dateFiltersCustomizer = new DefaultDateFiltersCustomizer(this.logger);\n        this.sealCustomizer = () => {\n            this.attributeFiltersCustomizer.sealCustomizer();\n            this.dateFiltersCustomizer.sealCustomizer();\n            return this;\n        };\n    }\n    attribute() {\n        return this.attributeFiltersCustomizer;\n    }\n    date() {\n        return this.dateFiltersCustomizer;\n    }\n}\n//# sourceMappingURL=filtersCustomizer.js.map","// (C) 2021-2023 GoodData Corporation\nimport { isInsightWidget, isInsightWidgetDefinition, isKpiWidget, isKpiWidgetDefinition, objRefToString, isObjRef, } from \"@gooddata/sdk-model\";\nimport { walkLayout } from \"@gooddata/sdk-backend-spi\";\nimport { DefaultInsightCustomizer } from \"./insightCustomizer.js\";\nimport { DashboardCustomizationLogger } from \"./customizationLogging.js\";\nimport { DefaultKpiCustomizer } from \"./kpiCustomizer.js\";\nimport { DefaultWidgetCustomizer } from \"./widgetCustomizer.js\";\nimport { DefaultLayoutCustomizer } from \"./layoutCustomizer.js\";\nimport { DefaultFilterBarCustomizer } from \"./filterBarCustomizer.js\";\nimport { DefaultFiltersCustomizer } from \"./filtersCustomizer.js\";\nimport { createCustomizerMutationsContext } from \"./types.js\";\n/**\n * @internal\n */\nexport class DashboardCustomizationBuilder {\n    constructor() {\n        this.mutations = createCustomizerMutationsContext();\n        this.logger = new DashboardCustomizationLogger();\n        this.insightCustomizer = new DefaultInsightCustomizer(this.logger, this.mutations);\n        this.kpiCustomizer = new DefaultKpiCustomizer(this.logger, this.mutations);\n        this.widgetCustomizer = new DefaultWidgetCustomizer(this.logger);\n        this.layoutCustomizer = new DefaultLayoutCustomizer(this.logger, this.mutations);\n        this.filterBarCustomizer = new DefaultFilterBarCustomizer(this.logger);\n        this.filtersCustomizer = new DefaultFiltersCustomizer(this.logger);\n        this.widgetOverlays = {};\n        this.sealCustomizers = () => {\n            this.insightCustomizer.sealCustomizer();\n            this.kpiCustomizer.sealCustomizer();\n            this.widgetCustomizer.sealCustomizer();\n            this.filtersCustomizer.sealCustomizer();\n            this.layoutCustomizer.sealCustomizer();\n        };\n        this.setWidgetOverlays = (widgetOverlays) => {\n            this.widgetOverlays = widgetOverlays || {};\n        };\n        this.insightWidgets = () => {\n            return this.insightCustomizer;\n        };\n        this.kpiWidgets = () => {\n            return this.kpiCustomizer;\n        };\n        this.customWidgets = () => {\n            return this.widgetCustomizer;\n        };\n        this.layout = () => {\n            return this.layoutCustomizer;\n        };\n        this.filterBar = () => {\n            return this.filterBarCustomizer;\n        };\n        this.filters = () => {\n            return this.filtersCustomizer;\n        };\n        this.onBeforePluginRegister = (plugin) => {\n            this.logger.setCurrentPlugin(plugin);\n            this.logger.log(\"Starting registration.\");\n        };\n        this.onAfterPluginRegister = () => {\n            this.logger.log(\"Registration finished.\");\n            this.logger.setCurrentPlugin(undefined);\n        };\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        this.onPluginRegisterError = (error) => {\n            this.logger.error(\"Plugin register() method threw and exception. Plugin may be partially registered.\", error);\n            this.logger.setCurrentPlugin(undefined);\n        };\n        this.build = () => {\n            const filterBarCustomizerResult = this.filterBarCustomizer.getCustomizerResult();\n            const props = Object.assign({ InsightComponentProvider: this.insightCustomizer.getInsightProvider(), InsightBodyComponentProvider: this.insightCustomizer.getInsightBodyComponentProvider(), KpiComponentProvider: this.kpiCustomizer.getKpiProvider(), WidgetComponentProvider: this.widgetCustomizer.getWidgetComponentProvider(), DashboardAttributeFilterComponentProvider: this.filtersCustomizer\n                    .attribute()\n                    .getAttributeFilterProvider(), DashboardDateFilterComponentProvider: this.filtersCustomizer.date().getDateFilterProvider(), customizationFns: {\n                    existingDashboardTransformFn: this.layoutCustomizer.getExistingDashboardTransformFn(),\n                }, widgetsOverlayFn: this.getWidgetsOverlayFn() }, (filterBarCustomizerResult.FilterBarComponent\n                ? { FilterBarComponent: filterBarCustomizerResult.FilterBarComponent }\n                : {}));\n            this.sealCustomizers();\n            return props;\n        };\n    }\n    getWidgetsOverlayFn() {\n        return (dashboard) => {\n            const overlays = Object.assign({}, this.widgetOverlays);\n            const { insight, kpi, layouts } = this.mutations;\n            const { layout } = dashboard;\n            walkLayout(layout, {\n                itemCallback: (item) => {\n                    if ((isInsightWidget(item.widget) || isInsightWidgetDefinition(item.widget)) &&\n                        isObjRef(item.widget) &&\n                        insight.length > 0) {\n                        mergeOverlays(overlays, objRefToString(item.widget), true, \"modifiedByPlugin\");\n                    }\n                    if ((isKpiWidget(item.widget) || isKpiWidgetDefinition(item.widget)) &&\n                        isObjRef(item.widget) &&\n                        kpi.length > 0) {\n                        mergeOverlays(overlays, objRefToString(item.widget), true, \"modifiedByPlugin\");\n                    }\n                },\n            });\n            Object.keys(layouts).forEach((ref) => {\n                if (layouts[ref] === \"inserted\") {\n                    mergeOverlays(overlays, ref, true, \"insertedByPlugin\");\n                }\n            });\n            return overlays;\n        };\n    }\n}\nfunction mergeOverlays(overlays, ref, showOverlay, modification) {\n    const current = overlays[ref];\n    const created = {\n        showOverlay,\n        modification,\n    };\n    overlays[ref] = Object.assign(Object.assign({}, created), (current ? current : {}));\n}\n//# sourceMappingURL=customizationBuilder.js.map","// (C) 2021-2022 GoodData Corporation\nexport function createCustomizerMutationsContext() {\n    return {\n        insight: [],\n        kpi: [],\n        layouts: {},\n    };\n}\n//# sourceMappingURL=types.js.map","// (C) 2021-2022 GoodData Corporation\nimport findIndex from \"lodash/findIndex.js\";\n/**\n * Factory for predicates that compare event handlers. The comparison is somewhat more aggressive to prevent\n * double-registration of same handler code. First, the two DashboardEventHandler objects are compared for\n * reference equality. If different, the handler function and eval functions are compared for equality - if\n * they are same, the entire event handler is declared same.\n */\nconst sameHandlerPredicateFactory = (other) => {\n    return (handler) => {\n        return handler === other || (handler.handler === other.handler && handler.eval === other.eval);\n    };\n};\nfunction createEvalFn(eventType) {\n    if (eventType === \"*\") {\n        return () => true;\n    }\n    return (evt) => {\n        return evt.type === eventType;\n    };\n}\n/**\n * @internal\n */\nexport class DefaultDashboardEventHandling {\n    constructor() {\n        this.handlers = [];\n        this.initialHandlersSent = false;\n        this.pendingRegistration = [];\n        this.pendingUnregistration = [];\n        this.stateChangesChain = [];\n        this.evalCache = new Map();\n        this.rootStateChangesCallback = (state, dispatch) => {\n            this.stateChangesChain.forEach((cb) => {\n                try {\n                    cb(state, dispatch);\n                }\n                catch (e) {\n                    console.warn(`OnStateChange callback ${cb} threw an exception.`, e);\n                }\n            });\n        };\n        /**\n         * This callback will be included in the resulting IDashboardEventing instance returned by {@link getDashboardEventing}. It will thus\n         * make its way into the dashboard store initializer. Once the store initializes and the event emitter is up, the ad hoc event\n         * registration/unregistration functions will be passed to here.\n         *\n         * From then on, the methods that add/remove handlers or custom handlers can add handlers directly into active dashboard component.\n         */\n        this.onEventingInitialized = (register, unregister) => {\n            this.registerHandler = register;\n            this.unregisterHandler = unregister;\n            this.pendingRegistration.forEach(this.registerHandler);\n            this.pendingUnregistration.forEach(this.unregisterHandler);\n            this.pendingRegistration = [];\n            this.pendingUnregistration = [];\n        };\n        this.getOrCreateEvalFn = (eventType) => {\n            const evalFn = this.evalCache.get(eventType);\n            if (evalFn !== undefined) {\n                return evalFn;\n            }\n            const newEvalFn = createEvalFn(eventType);\n            this.evalCache.set(eventType, newEvalFn);\n            return newEvalFn;\n        };\n        this.addEventHandler = (eventType, callback) => {\n            const newHandler = {\n                eval: this.getOrCreateEvalFn(eventType),\n                handler: callback,\n            };\n            return this.addCustomEventHandler(newHandler);\n        };\n        this.removeEventHandler = (eventType, callback) => {\n            const handler = {\n                eval: this.getOrCreateEvalFn(eventType),\n                handler: callback,\n            };\n            return this.removeCustomEventHandler(handler);\n        };\n        this.doRegister = (handler) => {\n            // if engine + plugin initialization is not yet complete, there is nothing extra that has to\n            // be done because all known handlers will be sent over as initial event handlers\n            if (!this.initialHandlersSent) {\n                return;\n            }\n            // once the initialization is done, code must register or unregister handlers using functions\n            // provided by the dashboard component's event emitter\n            if (this.registerHandler === undefined) {\n                // meh, dashboard component's eventing is not yet up, code must hold onto the handlers so\n                // that they can be registered immediately after it comes up\n                this.pendingRegistration.push(handler);\n                const pendingIdx = findIndex(this.pendingUnregistration, sameHandlerPredicateFactory(handler));\n                if (pendingIdx > -1) {\n                    this.pendingUnregistration.splice(pendingIdx, 1);\n                }\n            }\n            else {\n                // otherwise can proceed to register the handler with the dashboard\n                this.registerHandler(handler);\n            }\n        };\n        this.addCustomEventHandler = (handler) => {\n            if (findIndex(this.handlers, sameHandlerPredicateFactory(handler)) > -1) {\n                console.warn(`Attempting double-registration of the same handler ${handler}. Ignoring.`);\n                return this;\n            }\n            // keep track of all known handlers locally\n            this.handlers.push(handler);\n            // and if needed register handler with dashboard component event emitter\n            this.doRegister(handler);\n            return this;\n        };\n        this.doUnregister = (handler) => {\n            // if engine + plugin initialization is not yet complete, there is nothing extra that has to\n            // be done because all known handlers will be sent over as initial event handlers\n            if (!this.initialHandlersSent) {\n                return;\n            }\n            // same dilemma as with the registration; once the initialization is done, code must register or\n            // unregister handlers using functions provided by the dashboard component's event emitter\n            if (this.unregisterHandler === undefined) {\n                // meh, dashboard component's eventing is not yet up; now the course of action depends on\n                // whether the handler to remove was part of handlers added during initialization or\n                // after the initialization\n                const pendingIdx = findIndex(this.pendingRegistration, sameHandlerPredicateFactory(handler));\n                if (pendingIdx > -1) {\n                    // handler to remove was added after the initialization; all that is needed is to\n                    // remove it from the list of handlers that are pending the registration\n                    this.pendingRegistration.splice(pendingIdx, 1);\n                }\n                else {\n                    // handler to remove was among the initially added handler; no other way than to\n                    // unregister the handler once the eventing comes up\n                    this.pendingUnregistration.push(handler);\n                }\n            }\n            else {\n                this.unregisterHandler(handler);\n            }\n        };\n        this.removeCustomEventHandler = (handler) => {\n            const idx = findIndex(this.handlers, sameHandlerPredicateFactory(handler));\n            if (idx === -1) {\n                console.warn(`Attempting remove non-existing handler ${handler}. Ignoring.`);\n                return this;\n            }\n            // get the handler that was originally registered and is effectively the same as the handler\n            // to remove\n            const actuallyRegistered = this.handlers[idx];\n            // remove the handler from list of all known handlers; this is all that is needed if the\n            // dashboard is not yet initialized\n            this.handlers.splice(idx, 1);\n            // and if needed unregister handler from dashboard components event emitter\n            this.doUnregister(actuallyRegistered);\n            return this;\n        };\n        this.subscribeToStateChanges = (callback) => {\n            if (findIndex(this.stateChangesChain, (fn) => fn === callback) > -1) {\n                console.warn(`Attempting double-subscription of the same state change callback ${callback}. Ignoring.`);\n                return this;\n            }\n            this.stateChangesChain.push(callback);\n            return this;\n        };\n        this.unsubscribeFromStateChanges = (callback) => {\n            const idx = findIndex(this.stateChangesChain, (fn) => fn === callback);\n            if (idx === -1) {\n                return this;\n            }\n            this.stateChangesChain.splice(idx, 1);\n            return this;\n        };\n    }\n    getDashboardEventing() {\n        // handlers that were registered until this method is called will be part of the initial\n        // event handlers; they will be registered with the event emitter immediately when the dashboard\n        // component infrastructure gets created\n        this.initialHandlersSent = true;\n        return {\n            eventHandlers: [...this.handlers],\n            onStateChange: this.rootStateChangesCallback,\n            onEventingInitialized: this.onEventingInitialized,\n        };\n    }\n}\n//# sourceMappingURL=dashboardEventHandling.js.map","// (C) 2021 GoodData Corporation\n// DO NOT CHANGE THIS FILE, IT IS RE-GENERATED ON EVERY BUILD\nexport const LIB_VERSION = \"0.0.0-dev.0\";\n//# sourceMappingURL=__version.js.map","// (C) 2021-2023 GoodData Corporation\nimport { Dashboard } from \"../presentation/index.js\";\nimport { DashboardCustomizationBuilder } from \"./customizationApis/customizationBuilder.js\";\nimport { DefaultDashboardEventHandling } from \"./customizationApis/dashboardEventHandling.js\";\nimport { pluginDebugStr } from \"./customizationApis/pluginUtils.js\";\nimport { LIB_VERSION } from \"../__version.js\";\n/**\n * A factory function to obtain an instance of {@link IDashboardEngine}.\n *\n * @remarks\n * This is the main, well-known entry point to the Dashboard Engine that is used during both static and dynamic\n * loading of the dashboard engine instances by the DashboardLoader.\n *\n * @public\n */\nexport function newDashboardEngine() {\n    return {\n        version: LIB_VERSION,\n        initializePlugins(ctx, plugins) {\n            var _a;\n            const customizationBuilder = new DashboardCustomizationBuilder();\n            const eventRegistration = new DefaultDashboardEventHandling();\n            // eslint-disable-next-line no-console\n            console.log(`DashboardEngine ${this.version} initializing with plugins: ${plugins\n                .map(pluginDebugStr)\n                .join(\", \")}`);\n            customizationBuilder.setWidgetOverlays((_a = ctx.config) === null || _a === void 0 ? void 0 : _a.widgetsOverlay);\n            for (const plugin of plugins) {\n                customizationBuilder.onBeforePluginRegister(plugin);\n                try {\n                    plugin.register(ctx, customizationBuilder, eventRegistration);\n                    customizationBuilder.onAfterPluginRegister();\n                }\n                catch (e) {\n                    customizationBuilder.onPluginRegisterError(e);\n                }\n            }\n            const extensionProps = customizationBuilder.build();\n            const eventingProps = eventRegistration.getDashboardEventing();\n            return Object.assign(Object.assign({}, extensionProps), eventingProps);\n        },\n        getDashboardComponent() {\n            return Dashboard;\n        },\n    };\n}\n//# sourceMappingURL=engine.js.map","// (C) 2022-2023 GoodData Corporation\nimport { insightRef, insightTitle, uriRef, } from \"@gooddata/sdk-model\";\nimport identity from \"lodash/identity.js\";\n/**\n * Creates a new insightWidget with specified identifier and title and with optional modifications.\n *\n * @param insight - the insight object to create widget for.\n * @param modifications - optional modifications\n *\n * @internal\n */\nexport function newInsightWidget(insight, modifications = identity) {\n    const ref = insightRef(insight);\n    const title = insightTitle(insight);\n    const builder = new InsightWidgetBuilder(ref, title);\n    return modifications(builder).build();\n}\n/**\n * Builder for a {@link @gooddata/sdk-model#IInsightWidgetBase} object.\n *\n * @remarks\n * The builder without any modifications returns a widget with all mandatory data. To apply\n * additional information use builder functions.\n *\n * @internal\n */\nexport class InsightWidgetBuilder {\n    constructor(insightRef, title) {\n        this.widget = {\n            insight: uriRef(\"\"),\n            type: \"insight\",\n            ignoreDashboardFilters: [],\n            drills: [],\n            title: \"\",\n            description: \"\",\n        };\n        this.widget.insight = insightRef;\n        this.widget.title = title;\n    }\n    withIgnoreDashboardFilters(ignoreDashboardFilters) {\n        this.widget.ignoreDashboardFilters = ignoreDashboardFilters;\n        return this;\n    }\n    withDrills(drills) {\n        this.widget.drills = drills;\n        return this;\n    }\n    withTitle(title) {\n        this.widget.title = title;\n        return this;\n    }\n    withDescription(description) {\n        this.widget.description = description;\n        return this;\n    }\n    withConfiguration(configuration) {\n        this.widget.configuration = configuration;\n        return this;\n    }\n    withProperties(properties) {\n        this.widget.properties = properties;\n        return this;\n    }\n    build() {\n        return Object.assign({}, this.widget);\n    }\n}\n//# sourceMappingURL=InsightWidgetBuilder.js.map"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","BackendWithDecoratedServices","constructor","backend","factories","this","decorated","capabilities","config","authenticate","force","deauthenticate","isAuthenticated","onHostname","hostname","withAuthentication","provider","withTelemetry","componentName","props","organization","organizationId","OrganizationDecorator","organizations","OrganizationsDecorator","currentUser","workspace","AnalyticalWorkspaceDecorator","entitlements","workspaces","getDescriptor","getParentWorkspace","attributes","execution","catalog","measures","facts","insights","dashboards","settings","workspaceSettings","styling","datasets","permissions","users","dateFilterConfigs","userGroups","accessControl","securitySettings","async","fromDecorated","getCurrentOrganization","decoratedBackend","decorators","identifierSplitRegexp","identifierMatchRegexp","matchToUrlPlaceholder","match","placeholder","identifier","ref","toBeEncoded","index","splitDrillUrlParts","url","split","splitUrl","urlPart","exec","joinDrillUrlParts","parts","join","getAttributeIdentifiersPlaceholdersFromUrl","regex","text","matches","push","matchAll","isKpi","obj","isKpiWithComparison","isKpiWithoutComparison","comparisonType","isDashboardAttachment","undefined","dashboard","isWidgetAttachment","widget","_a","ObjRefMap","size","items","itemsByIdentifier","itemsByUri","idRefToKey","type","strictTypeCheck","addItem","item","refExtract","uriExtract","idExtract","uri","cleanupUnmappedItems","allItems","concat","filter","_","find","mappedItem","fromItems","forEach","Symbol","toStringTag","iterator","entries","get","key","strictMatch","console","warn","has","i","values","metadataObjectExtractors","newCatalogDateDatasetMap","dataSet","newDisplayFormMap","assign","newAttributeMap","newMapForObjectWithIdentity","newInsightMap","MAX_ELEMENTS_COUNT_PER_REQUEST","resolveFilterValues","filters","promises","resolved","from","absoluteDateFilter","to","Promise","result","elementsQuery","elements","forFilter","selectedElements","selectedElementsCount","requestLimit","Math","min","elementsPage","withLimit","query","next","reduce","element","title","resolveAttributeFilterValues","foundDayDisplayForm","relativeDateFilter","forDataset","withGroups","load","dateDatasets","foundDayAttribute","dateAttributes","dateDataSetAttr","granularity","defaultDisplayForm","limit","offset","totalCount","goTo","ceil","length","resolveRelativeDateFilterValues","all","then","resolvedValues","_resolvedValue","value","getResolvedFilterValues","dateFilters","refString","objRef","attributeFilters","array","newCustomWidget","customType","extras","extrasCopy","isCustomWidget","w","isCustomWidgetDefinition","isCustomWidgetBase","extendedWidgetDebugStr","widgetId","widgetType","newDashboardItem","sizeOrColSize","xl","gridWidth","newDashboardSection","titleOrHeader","header","getOrCreateSectionHeader","DRILL_TO_URL_PLACEHOLDER","isBrokenAlertDateFilterInfo","alertFilter","isBrokenAlertAttributeFilterInfo","DashboardEventsContext","createContext","registerHandler","unregisterHandler","displayName","useDashboardEventsContext","useContext","DashboardEventsProvider","children","useMemo","Provider","ClientWorkspaceContext","status","error","isInitialized","useClientWorkspaceIdentifiers","usePrevious","previousProps","useRef","useEffect","current","isDashboard","asDash","isDashboardEvent","startsWith","isCustomDashboardEvent","isDashboardEventOrCustomDashboardEvent","eventGuard","dashboardInitialized","ctx","correlationId","payload","isDashboardInitialized","isDashboardDeinitialized","isDashboardSaved","isDashboardCopySaved","isDashboardRenamed","dashboardWasReset","isDashboardWasReset","isDashboardDeleted","isDateFilterValidationFailed","isDashboardExportToPdfRequested","isDashboardExportToPdfResolved","isDashboardSharingChanged","isDashboardCommandStarted","invalidArgumentsProvided","command","message","reason","isDashboardCommandFailed","commandRejected","isDashboardCommandRejected","isDashboardQueryRejected","invalidQueryArguments","isDashboardQueryFailed","isDashboardQueryStarted","isDashboardQueryCompleted","isDashboardDateFilterSelectionChanged","isDashboardAttributeFilterAdded","attributeFilterRemoved","removed","isDashboardAttributeFilterRemoved","isDashboardAttributeFilterMoved","isDashboardAttributeFilterSelectionChanged","isDashboardAttributeFilterParentChanged","isDashboardAttributeFilterTitleChanged","isDashboardAttributeFilterSelectionModeChanged","isDashboardFilterContextChanged","isDashboardLayoutSectionAdded","isDashboardLayoutSectionMoved","layoutSectionRemoved","section","eagerRemoval","stashIdentifier","isDashboardLayoutSectionRemoved","isDashboardLayoutSectionHeaderChanged","isDashboardLayoutSectionItemsAdded","isDashboardLayoutSectionItemReplaced","isDashboardLayoutSectionItemMoved","layoutSectionItemRemoved","itemIndex","isDashboardLayoutSectionItemRemoved","isDashboardLayoutChanged","isDashboardKpiWidgetHeaderChanged","isDashboardKpiWidgetDescriptionChanged","isDashboardKpiWidgetConfigurationChanged","isDashboardKpiWidgetMeasureChanged","isDashboardKpiWidgetFilterSettingsChanged","isDashboardKpiWidgetComparisonChanged","isDashboardKpiWidgetDrillRemoved","isDashboardKpiWidgetDrillSet","isDashboardKpiWidgetChanged","isDashboardInsightWidgetHeaderChanged","isDashboardInsightWidgetDescriptionChanged","isDashboardInsightWidgetFilterSettingsChanged","isDashboardInsightWidgetVisPropertiesChanged","isDashboardInsightWidgetVisConfigurationChanged","isDashboardInsightWidgetInsightSwitched","isDashboardInsightWidgetDrillsModified","insightWidgetDrillsRemoved","isDashboardInsightWidgetDrillsRemoved","isDashboardInsightWidgetChanged","isDashboardInsightWidgetExportRequested","isDashboardInsightWidgetExportResolved","isDashboardInsightWidgetRefreshed","isDashboardWidgetExecutionStarted","isDashboardWidgetExecutionFailed","isDashboardWidgetExecutionSucceeded","isDashboardAlertCreated","isDashboardAlertsRemoved","isDashboardAlertUpdated","isDashboardScheduledEmailCreated","isDashboardScheduledEmailSaved","isDashboardDrillRequested","isDashboardDrillResolved","isDashboardDrillDownRequested","isDashboardDrillDownResolved","isDashboardDrillToInsightRequested","isDashboardDrillToInsightResolved","isDashboardDrillToDashboardRequested","isDashboardDrillToDashboardResolved","isDashboardDrillToCustomUrlRequested","isDashboardDrillToCustomUrlResolved","isDashboardDrillToAttributeUrlRequested","isDashboardDrillToAttributeUrlResolved","isDashboardDrillToLegacyDashboardRequested","isDashboardDrillToLegacyDashboardResolved","isDashboardDrillableItemsChanged","drillTargetsAdded","availableDrillTargets","isDrillTargetsAdded","userInteractionTriggered","interactionPayloadOrType","interaction","isDashboardUserInteractionTriggered","isDashboardRenderRequested","isDashboardAsyncRenderRequested","isDashboardAsyncRenderResolved","isDashboardRenderResolved","isDashboardRenderModeChanged","createInsightRequested","isCreateInsightRequested","newDashboardEventPredicate","eventType","pred","event","wait","ms","isAsyncRenderResolvedEvent","isAsyncRenderRequestedEvent","newRenderingWorker","asyncRenderRequestedTimeout","asyncRenderResolvedTimeout","maxTimeout","correlationIdGenerator","renderRequested","asyncRenderTasks","collectAsyncRenderTasks","waitForAsyncRenderTasksResolution","renderResolved","err","Map","timeout","renderRequestedChannel","asyncRenderRequested","timeoutResolved","asyncRenderId","asyncRenderTask","waitForAsyncRenderResolution","set","asyncRenderTasksList","Array","task","asyncTasksResolved","cancel","retries","renderResolvedChannel","anotherExecution","InitialLoadCorrelationId","initializeDashboard","initializeDashboardWithPersistedDashboard","persistedDashboard","saveDashboard","saveDashboardAs","switchToCopy","useOriginalFilterContext","renameDashboard","newTitle","changeSharing","newSharingProperties","resetDashboard","deleteDashboard","exportDashboardToPdf","generateFilterLocalIdentifier","replace","filterContextReducers","setFilterContext","state","action","filterContextDefinition","originalFilterContextDefinition","filterContextIdentity","attributeFilterDisplayForms","filtersWithLocalId","attributeFilter","localIdentifier","dateFilter","updateFilterContextIdentity","removeAttributeFilterDisplayForms","df","addAttributeFilterDisplayForm","addAttributeFilter","displayForm","initialIsNegativeSelection","initialSelection","parentFilters","selectionMode","hasSelection","isNegative","attributeElements","uris","negativeSelection","filterElementsBy","isDateFilterPresent","findIndex","attributeFilterIndex","splice","removeAttributeFilter","filterLocalId","moveAttributeFilter","currentFilterIndex","updateAttributeFilterSelection","existingFilterIndex","setAttributeFilterParents","clearAttributeFiltersSelection","filterLocalIds","currentFilter","isMultiSelect","upsertDateFilter","unshift","changeAttributeDisplayForm","supportsElementUris","changeAttributeTitle","findFilter","changeSelectionMode","filterContextSlice","name","initialState","reducers","filterContextSliceReducer","reducer","filterContextActions","actions","InitialUndoState","_undo","undoPointer","undoStack","safeOriginal","originalState","JSON","parse","stringify","unwrapProxy","withUndo","originalReducer","undo","nextState","redoPatches","undoPatches","draft","cmd","resetUndoReducer","layoutInitialState","layout","stash","addArrayElements","arr","removeArrayElement","shift","pop","resolveRelativeIndex","resolveIndexOfNewItem","setOrDelete","object","prop","getWidgetCoordinates","itemData","getWidgetCoordinatesAndItem","sectionIndex","sections","isItemWithBaseWidget","getWidgetByRef","widgetRef","Boolean","replaceWidgetDrill","drillDefinitions","drills","replaceKpiWidgetDrill","drill","layoutReducers","setLayout","updateWidgetIdentities","mapping","updated","newIdentity","removeIgnoredAttributeFilter","displayFormRefs","updatedFilters","ignoreDashboardFilters","addSection","usedStashes","removeSection","moveSection","toIndex","fromIndex","moveArrayElement","changeSectionHeader","addSectionItems","moveSectionItem","toSectionIndex","toItemIndex","fromSection","toSection","removeSectionItem","replaceSectionItem","newItems","usedStash","replaceWidgetHeader","replaceWidgetDescription","description","replaceWidgetDrillWithoutUndo","replaceWidgetDrills","replaceInsightWidgetVisProperties","properties","replaceInsightWidgetVisConfiguration","replaceInsightWidgetInsight","insightRef","newSize","data","insight","sizeInfo","width","height","heightAsRatio","gridHeight","max","resizeInsightWidget","replaceWidgetFilterSettings","dateDataSet","replaceWidgetDateDataset","replaceKpiWidgetMeasure","measureRef","kpi","metric","replaceKpiWidgetComparison","comparisonDirection","replaceKpiWidgetDrillWithoutUndo","replaceKpiWidgetConfiguration","undoLayout","undoDownTo","entriesToUndo","slice","reverse","allPatches","entry","restoredState","clearLayoutHistory","changeItemsHeight","itemIndexes","changeItemWidth","layoutSlice","layoutSliceReducer","layoutActions","loadingSlice","loading","setLoadingStart","setLoadingSuccess","setLoadingError","loadingSliceReducer","loadingActions","savingSlice","saving","setSavingStart","setSavingSuccess","setSavingError","savingSliceReducer","savingActions","insightsAdapter","selectId","insightsSlice","getInitialState","setInsights","setAll","addInsights","addMany","upsertInsight","upsertOne","insightsSliceReducer","insightsActions","dispatchDashboardEvent","granularityIntlCodes","platformDateFormat","platformDateTimeFormat","TIME_FORMAT","TIME_FORMAT_WITH_SEPARATOR","DAY_START_TIME","DAY_END_TIME","DEFAULT_DATE_FORMAT","defaultDateFilterOptions","allTime","visible","absoluteForm","subtract","startOf","format","absolutePreset","relativeForm","relativePreset","dateFilterGranularity","isAllTimeDateFilterOption","isAbsoluteDateFilterForm","isAbsoluteDateFilterPreset","isRelativeDateFilterForm","isRelativeDateFilterPreset","convertDateToPlatformDateString","date","dateFormat","local","convertPlatformDateStringToDate","platformDate","Date","messages","minute","hour","day","week","month","quarter","year","allTimeExcluded","minuteExcluded","hourExcluded","dayExcluded","weekExcluded","monthExcluded","quarterExcluded","yearExcluded","minute_history","minute_today","minute_future","hour_history","hour_today","hour_future","day_history","day_today","day_future","week_history","week_today","week_future","month_history","month_today","month_future","quarter_history","quarter_today","quarter_future","year_history","year_today","year_future","top","bottom","topWithAttr","topWithoutAttr","bottomWithAttr","bottomWithoutAttr","ALL","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESS_THAN","LESS_THAN_OR_EQUAL_TO","EQUAL_TO","NOT_EQUAL_TO","BETWEEN","NOT_BETWEEN","incorrectFormat","endDateBeforeStartDate","thisMinute","lastMinute","nextMinute","thisHour","lastHour","nextHour","thisDay","lastDay","nextDay","thisWeek","lastWeek","nextWeek","thisMonth","lastMonth","nextMonth","thisQuarter","lastQuarter","nextQuarter","thisYear","lastYear","nextYear","lastNMinutes","lastNHours","lastNDays","lastNWeeks","lastNMonths","lastNQuarters","lastNYears","nextNMinutes","nextNHours","nextNDays","nextNWeeks","nextNMonths","nextNQuarters","nextNYears","validateVisibility","filterOption","errors","validateFilterOption","field","validateAbsoluteForm","validateRelativeForm","applyExcludeCurrentPeriod","dateFilterOption","excludeCurrentPeriod","shouldExcludeCurrent","canExcludeCurrentPeriod","isUiRelativeDateFilterForm","isAbsoluteDateFilterOption","isRelativeDateFilterOption","isDateFilterOptionVisible","option","pickDateFilterOptionIfVisible","removeEmptyKeysFromDateFilterOptions","dateFilterOptions","filterVisibleDateFilterOptions","filtered","visiblePresetsOfGranularity","sanitizePreset","sanitizePresetIntervals","presetsOfGranularity","sanitizeRelativePresets","adjustDatetime","isTimeEnabled","defaultTime","formatAbsoluteDateRange","includes","dateFormatWithoutTime","adjustedFrom","adjustedTo","fromDate","toDate","coversWholeDay","dateTo","dateFrom","getHours","getMinutes","isSame","fromTime","toTime","getTimeRange","displayDateFormat","relativeDateRangeFormatters","predicate","formatter","_from","_to","intlGranularity","translator","formatMessage","n","abs","formatRelativeDateRange","f","getDateFilterRepresentationByFilterType","getDateFilterRepresentationUsingTranslator","getDateFilterTitle","locale","getAbsoluteFormFilterRepresentation","getAbsolutePresetFilterRepresentation","getAllTimeFilterRepresentation","getRelativeFormFilterRepresentation","getRelativePresetFilterRepresentation","DateFilterHelpers","getDateFilterTitleUsingTranslator","getDateFilterRepresentation","mapOptionToAfm","excludeApplied","mapAbsoluteFilterToAfm","mapRelativeFilterToAfm","defaultDateFilterConfig","selectedOption","availableGranularities","relativePresets","presets","granularityKey","granularityPresets","absolutePresets","DateGranularity","isNotWeekGranularity","isNotWeekPreset","preset","isFilterVisible","containsVisibleFilter","some","validateDateFilterConfig","shouldCheckSelectedOption","isRelativeFormVisible","isAnyFilterVisible","allOptions","getAllOptionsFlattened","duplicateIdentifiers","options","groups","duplicates","getDuplicateIdentifiers","matchingOption","isSelectedOptionValid","FallbackToDefault","stripUserAndWorkspaceProps","userWorkspaceSettings","userId","_userId","_locale","separators","_separators","_workspace","configSlice","dateFilterConfig","effectiveDateFilterConfig","isUsingDashboardOverrides","dateFilterConfigValidationWarnings","setDateFilterConfig","addDateFilterConfigValidationWarning","clearDateFilterConfigValidationWarning","dateFilterConfigSliceReducer","dateFilterConfigActions","RequiredConfigKeys","disabledUnfinishedFeatureSettings","sanitizeUnfinishedFeatureSettings","onDateFilterConfigValidationError","validationResult","dateFilterValidationFailed","loadDateFilterConfig","catch","log","resolveDateFilterConfig","_b","resolveUserSettings","getSettingsForCurrentUser","loadSettingsForCurrentUser","res","_c","resolveColorPalette","colorPalette","getColorPalette","loadColorPalette","resolveDashboardConfig","specifiedConfig","every","isResolvedConfig","allowUnfinishedFeatures","applyConfigDefaults","validDateFilterConfig","configValidation","validConfig","enableWeekFilters","relativeFormProp","filterOutWeeks","getValidDateFilterConfig","configWithDefaults","mapboxToken","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","objectAvailability","isReadOnly","isEmbedded","isExport","isWhiteLabeled","disableDefaultDrills","enableFilterValuesResolutionInDrillEvents","menuButtonItemsVisibility","allowCreateInsightRequest","initialRenderMode","hideSaveAsNewButton","hideShareButton","widgetsOverlay","setConfig","configSliceReducer","configActions","entitlementsSlice","setEntitlements","entitlementsSliceReducer","entitlementsActions","a","b","sanitizeDateFilterOption","mergePresets","projectPresets","dashboardPresets","merged","addPresets","dashboardConfig","projectConfig","hideNonArrayOptionType","configKey","hideOptions","hideAllTime","hideAbsoluteForm","hideRelativeForm","hideAbsolutePresets","hideRelativePresets","canDashboardConfigHideRelativePreset","hideGranularities","hideForGranularity","hideForId","shouldHideRelativePreset","hideRelativeFormGranularities","granularities","projectConfigWithoutRelativeForm","mergeDateFilterConfigWithOverrides","dashboardOverrides","source","mergedConfig","pipeline","mergeDateFilterConfigs","mergedConfigValidation","loadPermissionsFromBackend","getPermissionsForCurrentUser","resolvePermissions","permissionsSlice","setPermissions","permissionsSliceReducer","permissionsActions","SupportedCatalogGranularity","loadCatalog","excludeTags","includeTags","types","includeDateGranularities","loadGroups","withOptions","loadDashboardAlerts","dashboardRef","supportsKpiWidget","getDashboardWidgetAlertsForCurrentUser","catalogSlice","attributeHierarchies","setCatalogItems","catalogSliceReducer","catalogActions","alertsAdapter","alert","alertsSlice","setAlerts","addAlert","addOne","updateAlert","updateOne","removeAlert","removeOne","removeAlerts","removeMany","alertsSliceReducer","alertsActions","loadUser","getUser","userSlice","user","setUser","userSliceReducer","userActions","getMeasureLocalIdentifier","drillEvent","drillContext","intersection","filterDrillsByDrillEvent","widgetDrillDefinition","drillSourceLocalIdentifiers","localIdentifiersFromEvent","x","getLocalIdentifiersFromEvent","getDrillSourceLocalIdentifierFromEvent","d","getDrillOriginLocalIdentifier","drillDefinition","origin","getLocalIdentifierOrDie","measure","attribute","isDrillConfigured","configuredDrills","configDrill","getValidDrillOriginAttributes","supportedItemsForWidget","measureSupportedItems","measureHeaderItem","attributeSupportedItems","attrItem","attributeHeader","intersectionAttributes","uiReducers","openScheduleEmailDialog","scheduleEmailDialog","open","closeScheduleEmailDialog","setScheduleEmailDialogDefaultAttachment","defaultAttachmentRef","resetScheduleEmailDialogDefaultAttachment","openScheduleEmailManagementDialog","scheduleEmailManagementDialog","closeScheduleEmailManagementDialog","openSaveAsDialog","saveAsDialog","closeSaveAsDialog","setFilterBarExpanded","filterBar","expanded","closeKpiAlertDialog","kpiAlerts","openedWidgetRef","openKpiAlertDialog","highlightKpiAlert","highlightedWidgetRef","openShareDialog","shareDialog","closeShareDialog","openDeleteDialog","deleteDialog","closeDeleteDialog","openKpiDeleteDialog","kpiDeleteDialog","widgetCoordinates","closeKpiDeleteDialog","setMenuButtonItemsVisibility","menuButton","itemsVisibility","selectWidget","selectedWidgetRef","clearWidgetSelection","setConfigurationPanelOpened","configurationPanelOpened","setWidgetDateDatasetAutoSelect","widgetDateDatasetAutoSelect","requestInsightListUpdate","insightListLastUpdateRequested","setWidgetLoadingAdditionalDataStarted","widgetsLoadingAdditionalData","setWidgetLoadingAdditionalDataStopped","setFilterAttributeSelectionOpen","filterAttributeSelectionOpen","selectFilterIndex","selectedFilterIndex","clearFilterIndexSelection","setActiveSectionIndex","activeSectionIndex","clearActiveSectionIndex","openCancelEditModeDialog","cancelEditModeDialog","closeCancelEditModeDialog","resetInvalidDrillWidgetRefs","drillValidationMessages","invalidDrillWidgetRefs","resetAllInvalidCustomUrlDrillParameterWidgets","invalidCustomUrlDrillParameterWidgets","resetAllInvalidCustomUrlDrillParameterWidgetsWarnings","showMessage","addInvalidDrillWidgetRefs","toAdd","existing","setInvalidCustomUrlDrillParameterWidgets","existingIndex","itemToStore","drillsWithInvalidParametersLocalIds","invalidDrills","widgetUri","removeInvalidDrillWidgetRefs","toRemove","resetInvalidCustomUrlDrillParameterWidget","setDraggingWidgetSource","draggingWidgetSource","clearDraggingWidgetSource","setDraggingWidgetTarget","draggingWidgetTarget","clearDraggingWidgetTarget","toggleWidgetsOverlay","refs","refId","showOverlay","setWidgetsOverlay","hideAllWidgetsOverlay","prev","uiSlice","uiSliceReducer","uiActions","renderModeSlice","renderMode","setRenderMode","setEditRenderMode","setViewRenderMode","renderModeSliceReducer","renderModeActions","loadDashboardList","getDashboards","listedDashboardsEntityAdapter","listedDashboardsSlice","setListedDashboards","addListedDashboard","listedDashboardsSliceReducer","listedDashboardsActions","backendCapabilitiesSlice","backendCapabilities","setBackendCapabilities","backendCapabilitiesSliceReducer","backendCapabilitiesActions","PLATFORM_DATE_FORMAT","convertDateFilterConfigToDateFilterOptions","convertAllTime","convertAbsoluteForm","convertRelativeForm","convertRelativePresets","virtualPresetBase","flattenDateFilterOptions","canReconstructFormForStoredFilter","reconstructFormForStoredFilter","toString","Number","parseInt","findDateFilterOptionByValue","filterMatchesData","createVirtualPresetForStoredFilter","createDefaultFilterContext","respectSelectedOption","defaultDateFilter","defaultFilterOption","candidateOptionId","flattenedOptions","candidateOption","getDefaultDateFilterOption","convertOptionToDateFilter","getDefaultDateFilter","EmptyDashboardDescriptor","shareStatus","metaInitialState","descriptor","metaReducers","setMeta","tags","isUnderStrictControl","isLocked","setDashboardTitle","metaSlice","metaSliceReducer","metaActions","dashboardFilterContextIdentity","filterContext","DASHBOARD_LAYOUT_GRID_COLUMNS_COUNT","DashboardLayoutItemFacade","sectionFacade","static","raw","indexIs","isFirst","isLast","count","widgetEquals","widgetIs","isEmpty","sizeForScreen","screen","hasSizeForScreen","testRaw","test","isWidgetItem","isWidgetDefinitionItem","isKpiWidgetItem","isKpiWidgetDefinitionItem","isInsightWidgetItem","isInsightWidgetDefinitionItem","isLayoutItem","isCustomItem","isWidgetItemWithRef","isWidgetItemWithInsightRef","isWidgetItemWithKpiRef","DashboardLayoutItemsFacade","itemFacades","column","asGridRows","renderedRows","currentRowWidth","currentRow","itemFacade","itemSize","flatMap","callback","initialValue","DashboardLayoutSectionFacade","layoutFacade","headerEquals","hasHeader","hasTitle","hasDescription","titleEquals","descriptionEquals","DashboardLayoutSectionsFacade","sectionFacades","s","DashboardLayoutFacade","sectionsCache","rowIndex","WidgetBaseBuilder","super","arguments","setWidget","updateCallback","setWidgetProp","valueOrUpdateCallback","InsightWidgetBuilder","validator","insightWidget","emptyInsightWidget","for","KpiWidgetBuilder","setKpiWidgetProp","kpiWidget","emptyKpiWidget","DashboardLayoutItemBuilder","setSection","getItemFacade","sectionBuilder","facade","setItem","updatedItems","build","modify","modifications","newInsightWidget","create","forNew","modifyInsightWidget","content","newKpiWidget","modifyKpiWidget","DashboardLayoutSectionBuilder","getSectionFacade","removeEmptyItems","removeItems","layoutBuilder","createItem","xlSize","emptyItem","modifyItem","removeItem","moveItem","maxToIndex","c","selector","itemsToRemove","r","modifyItems","itemsToModify","updatedRows","DashboardLayoutBuilder","layoutFacadeConstructor","createSection","emptySection","modifySection","removeSections","sectionsToRemove","removeEmptySections","modifySections","sectionsToModify","updatedLayout","KPI_WITHOUT_COMPARISON_SIZE_INFO","default","KPI_WITH_COMPARISON_SIZE_INFO","widgetContent","enableKDWidgetCustomHeight","getKpiSizeInfo","getVisualizationSizeInfo","getInsightPlaceholderSizeInfo","getInsightSizeInfo","getDashboardLayoutWidgetMinGridHeight","getDashboardLayoutWidgetMaxGridHeight","getMinHeight","widgets","insightMap","defaultMin","mins","getMaxHeight","maxs","getDashboardLayoutWidgetMinGridWidth","getMinWidth","calculateWidgetMinHeight","currentSize","getDashboardLayoutItemHeight","getDashboardLayoutWidgetDefaultHeight","getDashboardLayoutItemHeightForGrid","ALL_SCREENS","DASHBOARD_LAYOUT_CONTAINER_WIDTHS","xs","sm","md","lg","unifyDashboardLayoutItemHeights","itemsOrLayout","acc","itemsWithSizeForAllScreens","implicitLayoutItemSizeFromXlSize","itemsWithUnifiedHeightForAllScreens","itemsAsFutureGridRows","splitDashboardLayoutItemsAsRenderedGridRows","futureGridRow","heights","dashboardLayoutItemHeightForScreen","maxHeight","updateDashboardLayoutItemHeight","unifyDashboardLayoutItemHeightsForScreen","xlWidth","xlHeight","ratio","dashboardLayoutItemSizeForAllScreens","itemSizeForCurrentScreen","updatedColumn","getResizedItemPositions","originalLayout","resizedLayout","positions","originalLayoutFacade","originalColumn","originalContent","updatedContent","getLayoutWithoutGridHeights","itemBuilder","itemWithoutGridHeight","rest","removeGridHeightFromItemSize","validateDashboardLayoutWidgetSize","currentWidth","currentHeight","minWidth","maxWidth","minHeight","validWidth","validHeight","getWidgetIdentity","getIdentityMapping","original","sectionIdx","updatedSection","itemIdx","updatedItem","originalIdentity","updatedIdentity","dashboardLayoutWidgetIdentityMap","dashboardLayoutRemoveIdentity","identityPredicate","updatedSections","identity","selectSelf","createSelector","selectBackendCapabilities","selectSupportsElementsQueryParentFiltering","supportsElementsQueryParentFiltering","selectSupportsKpiWidgetCapability","selectSupportsAccessControlCapability","supportsAccessControl","selectSupportsHierarchicalWorkspacesCapability","supportsHierarchicalWorkspaces","selectSupportsElementUris","selectSupportsExportToCsv","canExportCsv","selectSupportsExportToXlsx","canExportXlsx","selectSupportsObjectUris","supportsObjectUris","createDisplayFormMap","strictTypeChecking","displayForms","geoPinDisplayForms","selectCatalogAttributes","selectHasCatalogAttributes","selectCatalogAttributeDisplayForms","selectCatalogMeasures","selectHasCatalogMeasures","selectCatalogFacts","selectHasCatalogFacts","selectCatalogDateDatasets","selectHasCatalogDateDatasets","selectCatalogDateAttributes","dd","selectCatalogAttributeHierarchies","selectAttributesWithDrillDown","attr","drillDownStep","selectAttributesWithHierarchyDescendants","allCatalogAttributes","attributeDescendants","attributeRef","hierarchy","hierarchyAttributes","attributeHierarchy","foundAttributeIndex","foundDescendant","attributeRefAsString","selectAttributesWithDisplayFormLink","drillToAttributeLink","selectAllCatalogDateDatasetsMap","hasTypeScopedIdentifiers","selectAllCatalogDisplayFormsMap","selectAllCatalogAttributesMap","newCatalogAttributeMap","selectAllCatalogMeasuresMap","newCatalogMeasureMap","selectCatalogDateAttributeToDataset","attributesWithDatasets","dataset","newCatalogDateAttributeWithDatasetMap","loadDisplayFormsMetadata","getAttributeDisplayForms","resolveDisplayFormMetadata","catalogDisplayForms","resolvedDisplayForms","tryLoadDisplayForms","catalogDisplayForm","loadedDisplayFormsMap","missing","loadedDisplayForm","resolveFilterDisplayForms","m","getDashboardContext","getPrivateContext","loadAvailableDisplayFormRefs","references","EmptyDashboardLayout","actionsToInitializeNewDashboard","sanitizeFilterContext","allowsInconsistentRelations","usedFilterDisplayForms","availableRefs","actionsToInitializeExistingDashboard","sanitizedFilterContext","sanitizedDashboard","privateCtx","customizedDashboard","existingDashboardTransformFn","call","modifiedWidgets","widgetsOverlayFn","filterLocalIdentifiers","sanitizedFilters","sanitizedFilterElementsBy","indexOf","filterLocalIdentifier","dashboardFilterContextSanitize","dashboardFilterContextDefinition","dashboardLayout","insightsById","sanitizedSections","sanitizedItems","extractContentFromWidget","dashboardLayoutItemSanitize","dashboardLayoutSanitize","executionResultsAdapter","executionResultsSlice","upsertExecutionResult","clearAllExecutionResults","removeAll","executionResultsSliceReducer","executionResultsActions","accessibleDashboardsEntityAdapter","accessibleDashboardsSlice","setAccessibleDashboards","addAccessibleDashboard","accessibleDashboardsSliceReducer","accessibleDashboardsActions","loadAccessibleDashboardList","includeAvailableViaLink","loadLegacyDashboards","dashboardResponse","authApiCall","emptyPromise","getBackendAuthApiCallPrivateMethod","unwrapDecoratedBackend","client","projectDashboardMethod","method","getProjectDashboards","bind","getBearProjectDashboardMethod","meta","projectDashboard","tabs","tab","legacyDashboardsSlice","legacyDashboards","setLegacyDashboards","legacyDashboardsSliceReducer","legacyDashboardsActions","loadDashboardPermissions","getDashboardPermissions","dashboardPermissionsSlice","dashboardPermissions","setDashboardPermissions","dashboardPermissionsSliceReducer","dashboardPermissionsActions","resolveEntitlements","loadDashboardFromBackend","hasPersistedDashboard","filterContextRef","preloadedDashboard","referencedInsights","widgetCallback","target","uniqueRefs","getInsight","loadInsightsForPersistedDashboard","plugins","getDashboardReferencedObjects","getDashboardWithReferences","loadUserData","loadExistingDashboard","dashboardWithReferences","alerts","listedDashboards","accessibleDashboards","initActions","createDisplayFormMapFromCatalog","batch","initializeNewDashboard","canViewDashboard","canShareDashboard","canShareLockedDashboard","canEditDashboard","canEditLockedDashboard","changeRenderMode","renderModeChangeOptions","switchToEditRenderMode","cancelEditRenderMode","createMemoizedSelector","args","space","selectOriginalFilterContextDefinition","filterContextState","selectOriginalFilterContextFilters","selectFilterContextDefinition","selectFilterContextIdentity","selectAttributeFilterDisplayForms","selectFilterContextFilters","selectFilterContextAttributeFilters","selectFilterContextDateFilter","selectFilterContextAttributeFilterByDisplayForm","attributeDisplayFormsMap","selectFilterContextAttributeFilterByLocalId","localId","selectFilterContextAttributeFilterIndexByLocalId","selectAttributeFilterDescendants","toCheck","Set","parent","child","add","selectOtherContextAttributeFilters","selectAttributeFilterDisplayFormByLocalId","selectIsCircularDependency","currentFilterLocalId","neighborFilterLocalId","descendants","descendant","selectCanAddMoreAttributeFilters","filterContextToDashboardFiltersByWidget","filterContextItemsToDashboardFiltersByWidget","filterContextToDashboardFiltersByDateDataSet","filterContextItemsToDashboardFiltersByDateDataSet","dashboardAttributeFilterToAttributeFilter","dashboardDateFilterToDateFilterByWidget","numberOrStringToNumber","dashboardDateFilterToDateFilterByDateDataSet","filterContextItems","input","isKpiPlaceholderWidget","KPI_PLACEHOLDER_WIDGET_ID","newKpiPlaceholderWidget","isInsightPlaceholderWidget","INSIGHT_PLACEHOLDER_WIDGET_ID","newInsightPlaceholderWidget","isPlaceholderWidget","isInitialPlaceholderWidget","isInitial","isLoadingPlaceholderWidget","isLoading","PLACEHOLDER_WIDGET_ID","newPlaceholderWidget","newInitialPlaceholderWidget","newLoadingPlaceholderWidget","isAnyPlaceholderWidget","selectStash","layoutState","selectUndoableLayoutCommands","lastCmdUuid","seenCmdUuids","idx","uuid","firstOccurrenceOnStack","createUndoableCommandsMapping","selectLayout","selectBasicLayout","selectWidgets","selectWidgetsMap","selectWidgetByRef","widgetMap","selectAnalyticalWidgetByRef","selectWidgetDrills","selectAllFiltersForWidgetByRef","dashboardFilters","selectAllWidgets","selectIsLayoutEmpty","allWidgets","selectAllKpiWidgets","selectAllInsightWidgets","selectAllCustomWidgets","selectAllAnalyticalWidgets","selectLayoutHasAnalyticalWidgets","allAnalyticalWidgets","selectWidgetCoordinatesByRef","coords","selectWidgetPlaceholder","customWidgets","selectWidgetPlaceholderCoordinates","widgetPlaceholder","selectInsightWidgetPlaceholder","selectInsightWidgetPlaceholderCoordinates","selectKpiWidgetPlaceholder","selectKpiWidgetPlaceholderCoordinates","selectRenderMode","selectIsInViewMode","selectIsInEditMode","selectDateFilterConfigOverrides","dateFilterConfigState","selectEffectiveDateFilterConfig","selectEffectiveDateFilterOptions","selectEffectiveDateFilterAvailableGranularities","effectiveDateFilterConfigIsUsingOverrides","selectEffectiveDateFilterTitle","isUsingOverrides","filterName","selectEffectiveDateFilterMode","isInEditMode","mode","selectDateFilterConfigValidationWarnings","selectDashboardDescriptor","selectPersistedDashboard","selectPersistedDashboardFilterContext","selectPersistedDashboardFilterContextAsFilterContextDefinition","__","definition","___","selectDashboardRef","selectDashboardId","selectDashboardUri","selectDashboardIdRef","selectDashboardUriRef","selectIsNewDashboard","selectDashboardTitle","selectDashboardDescription","selectDashboardTags","selectDashboardShareStatus","selectIsDashboardPrivate","selectDashboardLockStatus","selectDashboardShareInfo","selectPersistedDashboardFilterContextFilters","persistedFilterContext","selectPersistedDashboardFilterContextDateFilter","persistedFilters","selectPersistedDashboardFilterContextAttributeFilters","selectPersistedDashboardTitle","selectPersistedDashboardLayout","selectIsDateFilterChanged","persistedDateFilter","currentDateFilter","selectIsAttributeFiltersChanged","persistedAttributeFilters","currentAttributeFilters","selectIsFiltersChanged","isDateFilterChanged","isAttributeFiltersChanged","selectIsTitleChanged","persistedTitle","currentTitle","selectIsLayoutChanged","persistedLayout","currentLayout","selectIsDashboardDirty","isNew","isFiltersChanged","isTitleChanged","isLayoutChanged","selectDashboardWorkingDefinition","dashboardDescriptor","dashboardIdentity","pluginsProp","TemporaryIdentityPrefix","isTemporaryIdentity","addTemporaryIdentityToWidgets","temporaryIdentity","generateTemporaryIdentityForWidget","selectConfig","configState","selectDateFilterConfig","selectSettings","selectLocale","selectSeparators","selectColorPalette","selectObjectAvailabilityConfig","selectMapboxToken","selectWeekStart","enableNewUIWeekStartChange","weekStartOnMondayEnabled","weekStart","selectIsReadOnly","selectIsEmbedded","selectIsExport","selectIsWhiteLabeled","selectDisableDefaultDrills","selectEnableFilterValuesResolutionInDrillEvents","selectIsSaveAsNewButtonHidden","selectDateFormat","responsiveUiDateFormat","selectEnableKPIDashboardSchedule","enableKPIDashboardSchedule","selectEnableKPIDashboardScheduleRecipients","enableKPIDashboardScheduleRecipients","selectPlatformEdition","platformEdition","selectEnableCompanyLogoInEmbeddedUI","enableCompanyLogoInEmbeddedUI","selectEnableKPIDashboardExportPDF","enableKPIDashboardExportPDF","selectEnableKPIDashboardDrillToDashboard","enableKPIDashboardDrillToDashboard","selectEnableKPIDashboardSaveAsNew","enableKPIDashboardSaveAsNew","selectEnableClickableAttributeURL","enableClickableAttributeURL","selectEnableKPIDashboardDrillToURL","enableKPIDashboardDrillToURL","selectEnableKPIDashboardDrillToInsight","enableKPIDashboardDrillToInsight","selectEnableKPIDashboardImplicitDrillDown","enableKPIDashboardImplicitDrillDown","selectEnableKPIDashboardDrillFromAttribute","enableKPIDashboardDrillFromAttribute","selectHideKpiDrillInEmbedded","hideKpiDrillInEmbedded","selectEnableInsightExportScheduling","enableInsightExportScheduling","selectEnableAnalyticalDashboardPermissions","enableAnalyticalDashboardPermissions","selectEnableWidgetCustomHeight","selectEnableRenamingProjectToWorkspace","enableRenamingProjectToWorkspace","selectEnableRenamingMeasureToMetric","enableRenamingMeasureToMetric","selectShouldHidePixelPerfectExperience","isHidden","hidePixelPerfectExperience","isEnabled","enablePixelPerfectExperience","selectDisableKpiDashboardHeadlineUnderline","disableKpiDashboardHeadlineUnderline","selectAllowUnfinishedFeatures","selectAllowCreateInsightRequest","selectIsAnalyticalDesignerEnabled","analyticalDesigner","selectIsDeleteFilterButtonEnabled","enableKPIDashboardDeleteFilterButton","selectIsKPIDashboardDependentFiltersEnabled","enableKPIDashboardDependentFilters","selectIsAlternativeDisplayFormSelectionEnabled","enableAlternativeDisplayFormSelection","selectIsShareButtonHidden","selectEnableAttributeHierarchies","enableAttributeHierarchies","selectIsDrillDownEnabled","isKPIDashboardImplicitDrillDownEnabled","isAttribueHierarchiesEnabled","selectInsights","getSelectors","selectAll","selectInsightRefs","selectInsightsMap","selectInsightByRef","loadInsightsFromBackend","insightRefs","loaded","resolveInsights","alreadyLoadedInsights","foundInsights","missingInsightRefs","loadResult","resetDashboardRuntime","resetDashboardFromPersisted","reset","insightRefsFromWidgets","insightReferences","uniqueInsightRefsFromWidgets","resolvedInsights","effectiveConfig","resolvedInsightsValues","combineGuards","guards","isDisplayFormRelevantToDrill","formOf","existsDrillDefinitionInArray","drillDefinitionArray","drillId","extractDisplayFormIdentifiers","drillItem","param","hyperlinkDisplayForm","drillTargetsAdapter","drillTargets","getIdFromDrillTargets","targets","selectDrillTargetsInternal","selectDrillTargets","selectDrillTargetsByWidgetRef","selectAccessibleDashboards","selectAccessibleDashboardsMap","inaccessibleDashboardsEntityAdapter","inaccessibleDashboards","selectInaccessibleDashboards","selectInaccessibleDashboardsMap","validateDrillDefinition","validationData","originMeasureIdentifier","originAttributeIdentifier","validateDrillDefinitionOrigin","ex","validationContext","dashboardsMap","accessibleDashboardMap","insightsMap","displayFormsMap","inaccessibleDashboardsMap","targetDashboard","validateDrillToDashboardDefinition","targetInsights","validateDrillToInsightDefinition","validateDrillToCustomURLDefinition","displayFormType","validateDrillToAttributeUrlDefinition","validateInsightDrillDefinition","getValidationData","drillsToModify","selectDrillTargetsByWidgetRefSelector","displayFormIds","validateDrills","validateInsightDrillDefinitions","drillInfo","removeInsightWidgetDrills","notModifiedDrillDefinition","validateDrillToCustomUrlParams","validateWidgetDrillToCustomUrlParams","inaccessibleDashboardsSlice","addInaccessibleDashboards","upsertMany","inaccessibleDashboardsSliceReducer","inaccessibleDashboardsActions","loadInaccessibleDashboards","accessibleDashboardsMap","dashboardDrillTargets","unknownDashboardDrillTargetRefs","getExistingDashboards","accessibilityLimitation","dashboardRefs","validateDashboardsExistence","changeRenderModeHandler","renderModeChanged","createListedDashboard","created","availability","createDashboard","saveCtx","dashboardToSave","updateDashboard","getDashboardWithSharing","sharingEnabled","sharingSupported","isNewDashboard","shareProp","_unusedIsUnderStrictControl","dashboardRest","createDashboardSaveContext","dashboardFromState","save","saveFn","saveActionName","identityMapping","listedDashboard","selectCurrentUser","selectCurrentUserRef","saveAsCtx","createDashboardSaveAsContext","titleProp","originalDashboardDescription","_unusedProp","dashboardDescriptorRest","saveAs","dashboardWithUser","createdBy","resetToNewDashboard","allTimeFilterContextItem","ensureAllTimeFilterForExport","createDashboardSaveSharingContext","otherDashboardProps","filterContextProp","saveSharingCtx","getDashboard","changeGrantees","granteesToAdd","granteesToDelete","grantees","changeAccess","saveSharing","updatedDashboardPermissions","setDashboardPermissionsAction","supportsGranularAccessControl","setDashboardMetaAction","dispatchFilterContextChanged","filterContextChanged","canApplyDateFilter","effectiveDateFilterOptions","targetOption","loadAttributesMetadata","getAttributes","resolveAttributeMetadata","catalogAttributes","resolvedAttributes","tryLoadAttributes","catalogAttribute","loadedAttributesMap","loadedAttribute","getAttributeFiltersUpdateActions","resetOthers","updateActions","handledLocalIds","af","filterRef","dashboardFilter","canMapDashboardFilterFromAnotherDisplayForm","filterDF","resolvedAttribute","getAttributeFilterSelectionPayload","unhandledFilters","getDateFilterUpdateActions","upsertPayload","incomingFilter","attributeFilterSelectionPayload","singleSelectAttributeElements","canFilterBeAdded","addedDisplayFormRef","allFilters","loadAddedDisplayForm","getAttributeDisplayForm","loadExistingDisplayForms","addedDisplayForm","existingDisplayForms","attributeFilterRef","validateAttributeFilterParents","parents","allExceptValidated","allExceptValidatedLocalIds","parentValidationData","parentFilter","parentAttribute","dashboardFilterAttribute","parentOverAttributes","over","displayFormsToGetAncestorsFor","commonAttributeResults","getCommonAttributesBatch","connectingAttrs","validateSectionPlacement","validateSectionExists","validateItemPlacement","validateItemExists","validateAndResolveStashedItems","itemDefinitions","newItemBitmap","queryDateDatasetsForInsight","insightOrRef","insightSelectDateDataset","queryResult","mostImportantFromInsight","dateDatasetsOrdered","queryInsightAttributesMeta","queryDateDatasetsForMeasure","QueryEnvelopeActionPrefix","queryEnvelope","eventHandlers","refresh","onError","onStart","onSuccess","queryEnvelopeWithPromise","queryEnvelopeEventHandlers","promise","reject","envelope","processQuery","service","correlationIdForLog","queryStarted","generator","queryCompleted","ne","internalQueryErrorOccurred","q","validateDatasetForInsightWidgetDateFilter","resolvedInsight","catalogDataSet","allAvailableDateDatasets","validateDatasetForKpiWidgetDateFilter","validateAttributeFiltersToIgnore","_widget","toIgnore","existingFilters","badIgnores","filtersToIgnore","filterForDisplayForm","normalizeItems","existingInsight","validateAndNormalizeWidgetItems","extractInsightRefsFromItems","normalizedItems","validateAndResolveInsightWidgetFilters","autoDateDataset","ignoredFilterRefs","insightDateDatasets","validateAndResolveKpiFilters","measureDateDatasets","removeObsoleteAttributeFilterIgnores","onlyExistingFilterIgnores","validateAndResolveItemFilterSettings","updatedWidget","sanitizeHeader","removeSectionItemSaga","originalCmd","commandCtx","itemToRemove","eager","sectionWithEmptyItems","latestCommandUndoSelector","_cmds","validateExistingInsightWidget","validateExistingKpiWidget","validateMeasure","determineDateDatasetToUse","getIgnoredAttributeFilters","ignored","ignoredRefs","reference","replaceFilterSettings","validators","op","ignoredFilters","dateDatasetForFiltering","dateDatasetValidator","ignoreAttributeFilters","attributeFilterValidator","changeDateFilterIgnore","disableDateFilter","_ctx","_validators","_cmd","enableDateFilter","dateDatasetToUse","dateDataset","changeAttributeIgnores","newlyIgnoredFilters","dateDataSetMap","replaceAttributeIgnores","ignoreAttributeFilter","alreadyIgnored","addToIgnore","candidate","ignoredFilter","unignoreAttributeFilter","unignoredFilters","reducedIgnores","processFilterOp","operation","KpiWidgetFilterValidations","InsightWidgetFilterValidations","changeInsightWidgetHeader","replaceInsightWidgetFilterSettings","enableInsightWidgetDateFilter","disableInsightWidgetDateFilter","replaceInsightWidgetIgnoredFilters","ignoreFilterOnInsightWidget","oneOrMoreDisplayForms","unignoreFilterOnInsightWidget","changeInsightWidgetVisProperties","changeInsightWidgetVisConfiguration","changeInsightWidgetInsight","visualizationProperties","modifyDrillsForInsightWidget","removeDrillsForInsightWidget","origins","refreshInsightWidget","exportInsightWidget","changeInsightWidgetDescription","isNonExportableError","isDataError","selectPermissions","selectCanListUsersInWorkspace","canListUsersInProject","selectCanManageWorkspace","canManageProject","selectCanExportReport","canExportReport","selectCanExportTabular","canExportTabular","selectCanExportPdf","canExportPdf","selectCanCreateAnalyticalDashboard","canCreateAnalyticalDashboard","selectCanManageAnalyticalDashboard","canManageAnalyticalDashboard","selectCanManageACL","canManageACL","selectCanCreateScheduledMail","canCreateScheduledMail","selectCanInitData","canInitData","selectCanUploadNonProductionCSV","canUploadNonProductionCSV","selectCanExecuteRaw","canExecuteRaw","selectCanCreateVisualization","canCreateVisualization","selectCanManageMetric","canManageMetric","selectCanManageDomain","canManageDomain","selectCanInviteUserToWorkspace","canInviteUserToProject","selectCanRefreshData","canRefreshData","selectCanManageScheduledMail","canManageScheduledMail","executionResults","selectExecutionResultEntities","selectEntities","selectExecutionResult","selectById","selectExecutionResultByRef","selectIsExecutionResultReadyForExportByRef","widgetExecution","executionResult","selectIsExecutionResultExportableToCsvByRef","supportsCapabilityCsv","isReadyForExport","isExportEnabled","enableKPIDashboardExport","isRawExportEnabled","selectIsExecutionResultExportableToXlsxByRef","supportCapabilityXlsx","performExport","exporter","validateIsExportable","validateSettingsAndPermissions","canExport","createAlert","createWidgetAlert","updateWidgetAlert","selectAlerts","selectAlertsMapByWidgetRefs","widgetsMap","selectAlertByWidgetRef","selectAlertsMap","selectAlertByRef","alertRefs","deleteWidgetAlerts","createScheduledEmail","scheduledEmail","createScheduledMail","saveScheduledEmail","updateScheduledMail","selectDrillingDateFilter","globalDateFilter","selectAllAttributeFilters","getWidgetAwareAttributeFilters","getResolvedFiltersForWidget","getElementTitle","projectId","dfRef","attrElementUriOrPrimaryLabel","queryOptions","primaryValues","forDisplayForm","resolveDrillToAttributeUrl","drillConfig","getDrillToAttributeUrlIntersectionAttributeItemHeader","attributeHeaderItem","queryWidgetFilters","queryWidgetBrokenAlerts","queryWidgetAlertCount","isDashboardFilter","isDrillDownDefinition","getDrillToUrlFiltersWithResolvedValues","resolvedFilterValues","loadElementTitle","dfIdentifier","attrElementUri","elementTitle","findDrillIntersectionAttributeHeaderItem","drillIntersectionElements","intersectionForAttribute","splitDFToLoadingAndMapping","attributesDisplayForms","displayFormForValueLoad","displayFormsWithKnownValues","dateAttributeRefs","da","true","false","isInRefList","list","itemRef","loadAttributeElementsForDrillIntersection","splitDisplayForms","mappedElements","loadedElement","encodeParameterIfSet","parameter","encodeURIComponent","objRefs","getAttributeIdentifiersReplacements","attributeIdentifiersPlaceholders","toBeReplaced","replacement","createIdentifierReplacement","replaceGlobally","getInsightIdentifiersReplacements","customUrl","clientId","dataProductId","dashboardId","replacements","PROJECT_ID","WORKSPACE_ID","DASHBOARD_ID","CLIENT_ID","DATA_PRODUCT_ID","INSIGHT_ID","WIDGET_ID","resolveDrillToCustomUrl","attributeIdentifiersReplacements","missingReplacement","insightIdentifiersReplacements","customUrlWithReplacedPlaceholders","RegExp","applyReplacements","drillSlice","drillableItems","setDrillableItems","drillSliceReducer","drillActions","drillTargetsSlice","addDrillTargets","drillTargetsReducer","drillTargetsActions","validateFilterDisplayForm","filterAttribute","getAttribute","queryAttributeByDisplayForm","selectLegacyDashboards","validateKpiDrill","availableLegacyDashboards","relevantDashboard","dash","validateKpiDrillTarget","loadInsight","DefaultCommandHandlers","newDashboard","dashboardSaved","isOriginalDashboardLocked","dashboardCopySaved","dashboardRenamed","existingDashboardRef","dashboardDeleted","dashboardSharingChanged","dashboardExportToPdfRequested","effectiveFilters","fullUri","URL","href","resultUri","dashboardExportToPdfResolved","fullEvent","eventBody","normalizedFilters","dashboardFilterToFilterContextItem","uniqueFilters","identification","attributeFilterUpdateActions","dateFilterUpdateActions","isAllTime","dateFilterSelection","affectedFilter","dateFilterOptionLocalId","dateFilterChanged","resolvedDisplayForm","displayFormMetadata","addedFilter","added","attributeFilterAdded","removedFilters","survivingFilters","invalidLocalIds","removedFilter","affectedChildren","maximalTargetIndex","originalIndex","finalIndex","moved","attributeFilterMoved","selectionType","changedFilter","childFiltersIds","childFilterId","attributeFilterSelectionChanged","attributeFilterParentChanged","catalogDisplayFormsMap","displayFormData","attributeDisplayFormChanged","attributeDisplayTitleChanged","attributeSelectionModeChanged","initialItems","availableInsights","stashValidationResult","validateAndResolveItems","initialHeader","autoResolveDateFilterDataset","normalizationResult","itemsToAdd","layoutSectionAdded","absoluteIndex","validateAndResolve","layoutSectionMoved","merge","mergeHeaders","existingHeader","sanitizedHeader","newHeader","layoutSectionHeaderChanged","validateLayoutIndexes","minLimit","maxLimit","validateHeight","newHeight","layoutSectionItemsHeightResized","validateWidth","newWidth","layoutSectionItemWidthResized","startIndex","itemsAdded","stashesUsed","layoutSectionItemsAdded","targetSectionIndex","targetItemIndex","itemToMove","shouldRemoveSection","removeOriginalSectionIfEmpty","targetSection","fromSectionIndex","originalSectionRemoved","layoutSectionItemMoved","itemSectionIndex","layoutSectionItemMovedToNewSection","itemToReplace","previousItem","layoutSectionItemReplaced","undoableCommands","undoPointSelector","undoUpToIncludingCmd","selectedCommand","layoutChanged","kpiWidgetHeaderChanged","determineHeaderToUse","updatedKpiWidget","kpiWidgetMeasureChanged","ignoredAttributeFilters","kpiWidgetFilterSettingsChanged","comparison","resolvedComparisonType","resolvedComparisonDirection","kpiWidgetComparisonChanged","kpiWidgetDrillRemoved","legacyDashboardTabIdentifier","legacyDashboardRef","transition","kpiWidgetDrillSet","kpiWidgetDescriptionChanged","configuration","kpiWidgetConfigurationChanged","insightWidgetHeaderChanged","insightWidgetDescriptionChanged","insightWidgetFilterSettingsChanged","insightWidgetVisPropertiesChanged","newConfig","oldConfig","insightWidgetVisConfigurationChanged","originalInsight","originalInsightTitle","hasCustomName","isTitleDifferent","shouldChangeTitle","insightWidgetInsightChanged","currentInsightDrills","validatedDrillDefinition","addedDrillDefinition","updatedDrillDefinition","updatedInsightDrills","getDrillDefinitionFromArray","insightWidgetDrillsModified","drillsToRemove","drillSelector","drillRef","validateDrillDefinitionByLocalIdentifier","messageDetail","validateRemoveDrillsByOrigins","newInsight","insightWidgetRefreshed","insightWidgetExportRequested","executionEnvelope","insightWidgetExportResolved","alertCreated","changes","alertUpdated","validateExistingAlerts","ids","alertsRemoved","scheduledEmailCreated","scheduledEmailSaved","drillRequested","validDrillDefinitions","drillResolved","drillDownRequested","drillDownResolved","getInsightWithAppliedDrillDown","drillToInsightRequested","drillToInsightResolved","drillToDashboardRequested","isDateFilterDisabled","drillIntersectionFilters","dateDataSetsAttributesRefs","dA","backendSupportsElementUris","attributeItem","ddsRef","filterIntersection","h","drillToDashboardResolved","drillToAttributeUrlRequested","resolvedUrl","filtersInfo","widgetConfiguredDrills","isImplicit","drillToAttributeUrlResolved","drillToCustomUrlRequested","drillToCustomUrlResolved","drillToLegacyDashboardRequested","drillToLegacyDashboardResolved","drillableItemsChanged","drillTarget","attributeItems","availableDrillTargetsValidation","asyncRenderResolved","unhandledCommand","CommandEnvelopeActionPrefix","commandEnvelope","processCommand","commandHandler","dashboardCommandStarted","internalErrorOccurred","rootCommandHandler","commandChannel","createCachedQueryService","queryName","queryToCacheKey","queryCache","sliceName","withoutPrefix","segments","toLowerCase","createSliceNameForQueryCache","adapter","setOne","remove","cacheSelectors","_queryCache","selectQueryResult","cacheName","createQueryCacheSlice","cacheKey","cachedResult","cache","createQueryService","sortByRelevanceAndTitle","titleMapping","titleComparator","localeCompare","sort","relevance","relevanceComparator","sanitizeDateDatasetTitle","trim","loadDateDatasetsForInsight","catalogLoader","availableDateDataSetsLoader","availableItems","excludeObjectsWithTags","tag","includeObjectsWithTags","availableDateDatasets","QueryDateDatasetsForInsightService","usedInInsight","lookupDatasetsInInsight","usedInDateFilters","usedInAttributes","usedInAttributeFilters","dateDatasetDisplayNames","selectDateDatasetsForInsight","lookupDatasetsUsedInAttributesAndFilters","attributeToDataset","insightAttributes","usage","inAttributes","inFilters","datasetLookup","catalogDateDatasets","catalogDateAttributeToDatasets","datasetRef","lookupDatasetsUsedInDateFilters","usedInAttributesAndFilters","QueryInsightAttributesMetaService","createInsightAttributesMeta","selectInsightAttributesMeta","allUsedRefs","inMeasureFilters","displayFormsFromCatalog","missingDisplayForms","attributesFromCatalog","loadedDisplayForms","loadedAttributes","loadDisplayFormsAndAttributes","QueryWidgetFiltersService","widgetSelector","queryWithInsight","insightSelector","linkedInsight","queryWithoutInsight","refMatchesMdObject","mdObject","loadDisplayFormsForAttributeFilters","resolvedObjects","getResolvedInsightAttributeFilters","dashboardAttributeFilters","insightAttributeFilters","getResolvedAttributeFilters","attributeFilterDisplayFormPairsWithIgnoreResolved","dashboardNonDateFilterDisplayFormPairs","resolveWidgetFilterIgnore","selectResolvedInsightDateFilters","dashboardDateFilters","insightDateFilters","simpleMeasures","isDashboardDateFilterIgnoredForInsight","selectResolvedDateFilters","allDateFilterDateDatasetPairs","fromCatalog","selectDateDatasetsForDateFilters","reduceRight","curr","resolveDateFilters","widgetAwareDashboardFiltersSelector","widgetAwareDashboardFilters","effectiveInsightFilters","InsightDefinitionBuilder","visualizationUrl","buckets","sorts","QueryDateDatasetsForMeasureService","intermediateInsight","newInsightDefinition","selectDateDatasetsForMeasure","QueryWidgetBrokenAlertService","getKpiWidgetAndAlert","alertFilters","resolveDisplayForms","appliedFilters","alertDateFilters","alertAttributeFilters","appliedAttributeFilters","attributeFilterDisplayForm","isIgnored","brokenType","alertDateFilter","isIrrelevantNow","dateDataSetRef","ignoredOldWay","isDateFilterIgnored","isDateFilterIrrelevant","getBrokenAlertFiltersBasicInfo","getDashboardFilters","alertSelector","extractDisplayFormRefs","QueryWidgetAlertCountService","resultLoader","getWidgetAlertsCountForWidgets","alertCount","QueryConnectingAttributesService","attributeRefs","mapDisplayFormsToAttributes","nonEmptyAttributesRef","refsEntry","connectingAttributesRefs","loadConnectingAttributes","loadConnectingAttributesMeta","connectingAttributeRefs","attributeMeta","displayFormRefsEntry","displayFormRef","QueryAttributeByDisplayFormService","loadAttributes","getAttributeByDisplayForm","loadAttributeByDisplayForm","QueryAttributeDataSetService","attributeDataSet","loadAttributeDataSetMeta","getAttributeDatasetMeta","QueryAttributeElementsService","loadAttributeElements","loader","AllQueryServices","createSagaMiddleware","nonSerializableEventsAndCommands","rootSaga","eventEmitter","queryProcessor","backgroundWorkers","dashboardContext","worker","actionMetaFillingMiddleware","nowTimestamp","acceptedTimestamp","createDashboardStore","queryProcessing","queryServices","servicesByType","queryToReducers","queryCacheReducer","combineReducers","rootQueryProcessor","queryChannel","createQueryProcessingModule","mergeQueryServices","sagaMiddleware","context","privateContext","rootReducer","ui","store","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","ignoredActionPaths","ignoredPaths","warnAfter","prepend","additionalMiddleware","eventing","onStateChange","subscribe","getState","dispatch","rootEventEmitter","initialHandlers","handler","eventEmitterSaga","eventChannel","stateSnapshot","selectorEvaluator","eval","createRootEventEmitter","initialEventHandlers","onEventingInitialized","rootSagaTask","run","registerEventHandler","unregisterEventHandler","dispatchDeinitialized","dashboardStore","initProps","ReactDashboardContext","useDashboardDispatch","useDashboardSelector","DashboardStoreProvider","dataProduct","setDashboardStore","useState","currentInitProps","previousInitProps","dashboardStoreRef","initPropsRef","useNotifyDeinitializedOnUnmount","objA","objB","aKeys","bKeys","len","prototype","hasOwnProperty","newDashboardStore","customizationFns","useInitializeDashboardStore","additionalReduxContext","useDashboardCommand","commandCreator","onBeforeRun","useCallback","dashboardEventHandlers","eT","useDashboardCommandProcessing","successEvent","errorEvent","setStatus","triggerEvent","useDashboardEventDispatch","queryAndWaitFor","useDashboardQueryProcessing","queryCreator","onRejected","setState","canceled","useDashboardUserInteraction","eventDispatch","poweredByGDLogoClicked","kpiAlertDialogClosed","kpiAlertDialogOpened","alreadyHasAlert","descriptionTooltipOpened","eventData","shareDialogInteraction","attributeFilterTitleResetClicked","requestAsyncRender","resolveAsyncRender","useDispatchDashboardCommand","useDashboardAsyncRender","requestDashboardAsyncRender","resolveDashboardAsyncRender","onRequestAsyncRender","onResolveAsyncRender","envelopeData","setExecutionResultLoading","warnings","setExecutionResultError","setExecutionResultData","executionWarnings","useWidgetExecutionsHandler","startLoading","setData","setError","onPushData","dataView","onLoadingChanged","ToastMessageContext","removeMessage","removeAllMessages","addMessage","idCounter","ToastMessageContextProvider","setMessages","prevMessages","newMessage","duration","setTimeout","useToastMessage","intl","useIntl","addMessageBase","node","addSuccess","addProgress","addWarning","addError","selectIsScheduleEmailDialogOpen","selectScheduleEmailDialogDefaultAttachment","selectIsScheduleEmailManagementDialogOpen","selectIsSaveAsDialogOpen","selectIsShareDialogOpen","selectIsDeleteDialogOpen","selectIsKpiDeleteDialogOpen","selectIsCancelEditModeDialogOpen","selectKpiDeleteDialogWidgetCoordinates","selectFilterBarExpanded","selectHighlightedKpiWidgetRef","selectOpenedKpiWidgetRef","selectIsKpiAlertOpenedByWidgetRef","openedWidget","targetWidget","selectIsKpiAlertHighlightedByWidgetRef","highlightedWidget","selectMenuButtonItemsVisibility","selectSelectedWidgetRef","selectConfigurationPanelOpened","selectWidgetDateDatasetAutoSelect","selectInsightListLastUpdateRequested","selectWidgetsLoadingAdditionalData","selectIsWidgetLoadingAdditionalDataByWidgetRef","widgetsLoading","loadingRef","selectIsFilterAttributeSelectionOpen","selectSelectedFilterIndex","selectIsDraggingWidget","selectActiveSectionIndex","selectInvalidDrillWidgetRefs","selectInvalidCustomUrlDrillParameterWidgets","selectInvalidUrlDrillParameterWidgetRefs","selectInvalidUrlDrillParameterWidgetWarnings","selectInvalidUrlDrillParameterWidgetsMap","selectInvalidUrlDrillParameterDrillLocalIdsByWidgetRef","invalidParameterWidgetsMap","selectDraggingWidgetSource","selectDraggingWidgetTarget","selectWidgetsOverlay","selectWidgetsOverlayState","overlay","selectWidgetsModification","modification","selectSectionModification","inserted","modified","selectIsSectionInsertedByPlugin","messagesDashboardSaveSuccess","messagesDashboardSaveFailed","messagesExportResultStart","messagesExportResultSuccess","messagesExportResultRestrictedError","messagesExportResultError","messagesSharingChangedSuccess","messagesSharingChangedError","messagesSharingDialogError","scheduleEmailSubmitError","scheduleEmailSubmitSuccess","scheduleEmailSaveError","scheduleEmailSaveSuccess","scheduleEmailDeleteSuccess","scheduleManagementLoadError","scheduleManagementDeleteError","scheduleManagementTabUser","scheduleManagementTabAll","scheduleManagementNoSchedules","scheduleManagementNoSchedulesByUser","saveAsNewAlertsAndEmailsMessage","saveAsNewAlertsMessage","saveAsNewEmailsMessage","alertMessageRelativePresetInPeriod","alertMessageRelativePreset","scheduleEmailOptionRecepientInvalid","scheduleEmailOptionRecepientExternalNotAllowed","tabsMy","tabsAll","controlButtonsSaveValue","controlButtonsSaveAndPublishValue","controlButtonsSaveAndPublishTitle","controlButtonsSaveAsPrivateTitle","controlButtonsSaveAndPublishNoChanges","controlButtonsSaveAndPublishEmpty","scheduleDialogEmailRepeats_custom","scheduleDialogEmailRepeats_daily","scheduleDialogEmailRepeats_monthly","scheduleDialogEmailRepeats_weekly","scheduleDialogEmailRepeatsExecuteOn_dayOfMonth","scheduleDialogEmailRepeatsExecuteOn_dayOfWeek","scheduleDialogEmailRepeatsFrequencies_day","scheduleDialogEmailRepeatsFrequencies_month","scheduleDialogEmailRepeatsFrequencies_week","useDashboardScheduledEmails","isScheduleEmailingDialogOpen","isScheduleEmailingManagementDialogOpen","isInViewMode","isScheduledEmailingEnabled","openScheduleEmailingDialog","closeScheduleEmailingDialog","openScheduleEmailingManagementDialog","closeScheduleEmailingManagementDialog","resetScheduledEmailDefaultAttachment","scheduledEmailToEdit","setScheduledEmailToEdit","setUsers","isScheduledEmailingVisible","scheduleEmailButton","defaultOnScheduleEmailing","onScheduleEmailingOpen","attachmentRef","setScheduledEmailDefaultAttachment","onScheduleEmailingCreateError","onScheduleEmailingCreateSuccess","onScheduleEmailingSaveError","onScheduleEmailingSaveSuccess","onScheduleEmailingCancel","onScheduleEmailingManagementDeleteSuccess","onScheduleEmailingManagementAdd","onScheduleEmailingManagementEdit","schedule","onScheduleEmailingManagementClose","onScheduleEmailingManagementLoadingError","onScheduleEmailingManagementDeleteError","useWidgetSelection","isConfigPanelOpen","isSelectable","selectedWidget","isSelected","closeConfigPanel","onSelected","processedDuringWidgetSelect","deselectWidgets","hasConfigPanelOpen","changeDateFilterSelection","applyDateFilter","clearDateFilterSelection","removeAttributeFilters","changeAttributeFilterSelection","applyAttributeFilter","resetAttributeFilterSelection","changeFilterContextSelection","setAttributeFilterDisplayForm","setAttributeFilterTitle","setAttributeFilterSelectionMode","addLayoutSection","moveLayoutSection","removeLayoutSection","changeLayoutSectionHeader","addSectionItem","moveSectionItemAndRemoveOriginalSectionIfEmpty","moveSectionItemToNewSection","moveSectionItemToNewSectionAndRemoveOriginalSectionIfEmpty","eagerRemoveSectionItem","removeSectionItemByWidgetRef","eagerRemoveSectionItemByWidgetRef","undoLayoutChanges","revertLastLayoutChange","resizeHeight","resizeWidth","drillDown","drillToInsight","drillToDashboard","drillToCustomUrl","drillToAttributeUrl","drillToLegacyDashboard","changeDrillableItems","changeKpiWidgetHeader","changeKpiWidgetDescription","changeKpiWidgetConfiguration","changeKpiWidgetMeasure","replaceKpiWidgetFilterSettings","enableKpiWidgetDateFilter","disableKpiWidgetDateFilter","replaceKpiWidgetIgnoredFilters","ignoreFilterOnKpiWidget","unignoreFilterOnKpiWidget","changeKpiWidgetComparison","refreshKpiWidget","setDrillForKpiWidget","removeDrillForKpiWidget","queryConnectingAttributes","queryAttributeDataSet","queryAttributeElements","selectDashboardLoading","selectIsDashboardLoading","selectDashboardSaving","selectIsDashboardSaving","selectEntitlements","selectEntitlementExportPdf","entitlement","selectDashboardPermissions","selectCanViewDashboardPermission","selectCanShareDashboardPermission","selectCanShareLockedDashboardPermission","selectCanEditDashboardPermission","selectCanEditLockedDashboardPermission","selectDrillableItems","drillDefinitionToPredicates","getDrillDownDefinitionsWithPredicates","availableDrillAttributes","attributesWithHierarchyDescendants","allCatalogAttributesMap","descendantRef","drillTargetAttributeFromCatalog","drillTargetDescriptionObj","predicates","getDrillToUrlDefinitionsWithPredicates","attributesWithDisplayFormLink","targetAttribute","matchingCatalogAttribute","selectImplicitDrillsDownByWidgetRef","isDrillDownEnabled","selectImplicitDrillsToUrlByWidgetRef","attributesWithLink","isClickableAttributeURLEnabled","selectConfiguredDrillsByWidgetRef","filteredDrills","drillType","unhandledType","selectValidConfiguredDrillsByWidgetRef","selectImplicitDrillToUrlPredicates","drillToUrlDrills","selectImplicitDrillDownPredicates","drillDownDrills","selectConfiguredDrillPredicates","selectConfiguredAndImplicitDrillsByWidgetRef","implicitDrillDownDrills","implicitDrillToUrlDrills","selectDrillableItemsByWidgetRef","resolvedDrillableItems","selectImplicitDrillsByAvailableDrillTargets","selectDrillableItemsByAvailableDrillTargets","implicitDrillDowns","implicitDrill","selectListedDashboards","selectListedDashboardsMap","dispatchAndWaitFor","commandEnvelopeEventHandlers","commandEnvelopeWithPromise","DashboardStoreAccessor","getDashboardSelect","setSelector","getDashboardDispatch","setDispatch","isDashboardStoreAccessorInitialized","setSelectAndDispatch","select","DashboardStoreAccessorRepository","serializedDashboardRef","getSerializedDashboardRef","accessor","accessors","dashboardDispatch","setAccessorForDashboard","delete","clear","DASHBOARD","SingleDashboardStoreAccessor","getAccessorsForDashboard","getOnChangeHandlerForDashboard","clearAccessorForDashboard","isAccessorInitializedForDashboard","anyEventHandler","anyDashboardEventHandler","singleEventTypeHandler","commandStartedEventHandler","commandFailedEventHandler","newDrillToSameDashboardHandler","HeadlessDashboard","monitoredActions","capturedActions","capturedEvents","getOrCreateMonitoredAction","actionType","existingAction","partialAction","calls","newAction","onActionCaptured","monitoredAction","eventHandler","evt","commandFailedRejectsWaitFor","commandRejectedEndsWaitFor","reduxedStore","waitFor","includeErrorHandler","race","selectorFactory","renderModeAware","components","Component","OverlayController","initialZIndex","DEFAULT_INIT_Z_INDEX","overlays","addOverlay","maxIndex","getMaxZIndex","getZIndex","removeOverlay","ExportDialogContext","isOpen","dialogConfig","closeDialog","openDialog","useExportDialogContext","ExportDialogContextProvider","setIsOpen","setDialogConfig","contextValue","DashboardCustomizationsContext","useDashboardCustomizationsContext","localCustomizationOverrides","globalCustomizations","DashboardCustomizationsProvider","ThrowMissingComponentError","DashboardComponentsContext","ErrorComponent","LoadingComponent","LayoutComponent","InsightComponentProvider","InsightBodyComponentProvider","InsightMenuButtonComponentProvider","InsightMenuComponentProvider","InsightMenuTitleComponentProvider","KpiComponentProvider","WidgetComponentProvider","ButtonBarComponent","MenuButtonComponent","TitleComponent","TopBarComponent","ToolbarComponent","ScheduledEmailDialogComponent","ScheduledEmailManagementDialogComponent","ShareDialogComponent","SaveAsDialogComponent","DashboardAttributeFilterComponentProvider","DashboardDateFilterComponentProvider","FilterBarComponent","SidebarComponent","InsightWidgetComponentSet","KpiWidgetComponentSet","AttributeFilterComponentSet","EmptyLayoutDropZoneBodyComponent","SaveButtonComponent","useDashboardComponentsContext","localComponentOverrides","globalComponents","DashboardComponentsProvider","DashboardConfigContext","menuButtonConfig","DashboardConfigProvider","DEBUG_SHOW_DROP_ZONES","getDropZoneDebugStyle","isOver","backgroundColor","isDraggableInternalItemType","isAttributeFilterDraggableItem","isBaseDraggableLayoutItem","isBaseDraggableMovingItem","isInsightDraggableItem","isKpiDraggableItem","isAttributeFilterPlaceholderDraggableItem","isKpiPlaceholderDraggableItem","isInsightPlaceholderDraggableItem","isInsightDraggableListItem","basicDropCollect","monitor","canDrop","itemType","getItemType","getItem","useDashboardDrop","draggableItemTypes","specArg","deps","useDrop","accept","drop","collect","hover","AttributeFilterDropZoneHint","placement","hintPosition","targetIndex","acceptPlaceholder","onAddAttributePlaceholder","inactiveIndexes","position","getIgnoreIndexes","dropRef","filterIndex","targetIndexPositionCorrection","isActive","className","outside","hidden","debugStyle","style","handleOnGoodstrapDragEvent","windowInstance","dispatchEvent","_event","CustomEvent","bubbles","detail","fireGoodstrapDragEvent","document","body","window","useBeforeDrag","fireGlobalEvent","basicDragCollect","isDragging","useDashboardDrag","dragItem","canDrag","hideDefaultPreview","dragEnd","dragStart","collectedProps","dragRef","dragPreviewRef","useDrag","end","beforeDrag","onInternalDragStart","hasHandledStart","getEmptyImage","captureDraggingState","convertDashboardAttributeFilterElementsUrisToValues","DraggableAttributeFilter","FilterComponent","autoOpen","onAttributeFilterChanged","onAttributeFilterAdded","onAttributeFilterClose","supportElementUris","canAddMoreAttributeFilters","filterToUse","onClose","showDropZones","onFilterChanged","isDraggable","AttributeFilterDropZone","onDrop","theme","isEditMode","dropzoneClassNames","BubbleHoverTrigger","icon","Icon","color","palette","complementary","c6","Bubble","alignPoints","align","y","HiddenDashboardDateFilter","sdkUiDashboardTranslations","translationUtils","translations","formats","time","hhmm","shortWithoutYear","shortWithYear","IntlWrapper","render","modifiedTranslations","TranslationsCustomizationProvider","DEFAULT_WIDTH_RESIZER_HEIGHT","emptyDOMRect","left","right","initState","resizeDirection","resizeItemIdentifiers","heightLimitReached","widthState","initialDashboardDimensions","LayoutResizeStateContext","resizeStart","resizeEnd","setScrollCorrection","getScrollCorrection","setWidthState","toggleHeightLimitReached","LayoutResizeStateProvider","scrollingCorrectionRef","resizeState","setResizeState","direction","identifiers","getDashboardDimensions","scrollCorrection","useResizeContext","useResizeHandlers","Bullet","isCurrent","bulletStyle","cx","cy","active","initial","passive","BULLETS_COUNT","BulletsBar","widthResizingStatus","isResizingWidth","useResizeWidthStatus","initialIndex","currentIndex","ShowAllFiltersButton","isVisible","isFilterBarExpanded","onToggle","tabIndex","onClick","CalculatedRowsDefault","expandedHeight","collapsedHeight","rows","Measure","DefaultFilterBarContainerCore","scrollable","setCalculatedRows","calculatedRows","setScrollable","timer","clearTimeout","useScrollable","isExpanded","useFilterBarState","containsMultipleRows","lastCanDrop","lastMultiRows","shouldBeExpandedAfterDrop","didDrop","dragStateUnchanged","multiRowsUnchanged","useFilterExpansionByDragAndDrop","AllFiltersContainer","FiltersRows","rowCalculator","dimensions","bounds","determinedRows","childNodes","last","MIN_SAFE_INTEGER","offsetWidth","lastRow","offsetLeft","determineRows","row","itemsHeight","offsetHeight","createRows","innerRef","rf","onResize","DefaultFilterBarContainer","HiddenFilterBar","_props","useFilterBarProps","convertedFilter","convertDashboardAttributeFilterElementsValuesToUris","onDateFilterChanged","DefaultFilterBar","attributeFiltersWithPlaceholder","attributeFiltersCount","autoOpenFilter","addAttributeFilterPlaceholder","closeAttributeSelection","selectAttributeFilter","onCloseAttributeFilter","allAttributes","selectedDisplayForm","setSelectedDisplayForm","setAutoOpenFilter","addedAttributeFilter","clearAddedFilter","filterObjects","containsAddedAttributeDisplayForm","relatedAttribute","att","usedDisplayForm","finally","useFiltersWithAddedPlaceholder","customFilterName","dateFilterMode","dateFilterComponentConfig","CustomDateFilterComponent","readonly","filterOrPlaceholder","CreatingPlaceholderComponent","creating","onSelect","CustomAttributeFilterComponent","MainComponentProvider","getLayoutCoordinates","useWidgetDragEndHandler","ResizeOverlayStatus","ResizeOverlay","isResizingColumnOrRow","reachedWidthLimit","reachedHeightLimit","None","Grey","Active","getStatus","isInError","classes","getMessage","errorText","role","useInsightListItemDropHandler","preselectDateDataset","replaceSectionItemLoader","useInsightPlaceholderDropHandler","replaceInsightOntoPlaceholder","useKpiPlaceholderDropHandler","createKpi","useMoveWidgetDropHandler","useWidgetDragHoverHandlers","handleDragHoverStart","coordinations","handleDragHoverEnd","Hotspot","classNames","dropZoneType","isEndingHotspot","isOverLastValue","handleInsightListItemDrop","handleInsightPlaceholderDrop","handleKpiPlaceholderDrop","handleWidgetDrop","canDropSafe","full","WidthResizer","boxClassName","lineClassName","getLimitReached","unlimitedSize","limitedSize","maximumSize","getSizeAndXCoords","initialSourceClientOffsetX","differenceFromInitialOffsetX","scrollCorrectionX","initialLayoutDimensions","gridColumnWidth","deltaSize","pxDiffX","round","getDiffInGridColumns","sizeLimitation","minimumSize","originalSize","isLimited","limitReached","applySizeLimitation","deltaSizeLimited","deltaXLimited","deltaXUnlimited","limitedX","unlimitedX","WidthResizerHotspot","getGridColumnWidth","getGridColumnHeightInPx","getLayoutDimensions","widgetIdentifier","isWidthResizing","useResizeWidthItemStatus","isResizerVisible","setResizerVisibility","gridRowWidth","sectionItems","sectionItem","getDashboardLayoutItemMaxGridWidth","gridColumnHeightInPx","getInitialClientOffset","getDifferenceFromInitialOffset","showResizer","onMouseEnter","onMouseLeave","WithExecutionEventing","callbacks","execute","beforeExecute","successfulExecute","failedExecute","executionId","WithExecutionResultEventing","createNew","wrapper","readAll","successfulResultReadAll","failedResultReadAll","readWindow","successfulResultReadWindow","failedResultReadWindow","safeSerializeObjRef","screenClasses","DashboardItem","DashboardKpi","KpiComponent","DefaultDashboardKpiWidget","onFiltersChange","dashboardItemClasses","typeVisTypeCssClassMapping","headline","xirr","bar","line","area","combo","combo2","scatter","bubble","pie","donut","treemap","heatmap","table","pushpin","getVisTypeCssClass","DashboardItemContent","forwardRef","DashboardItemContentWrapper","contentRect","clientWidth","clientHeight","noopRender","DashboardItemBase","contentClassName","visualizationClassName","renderHeadline","renderBeforeVisualization","renderAfterVisualization","renderBeforeContent","renderAfterContent","contentRef","DashboardItemVisualization","INNER_STYLE_SMALL","fontSize","CUSTOM_MARGIN_STYLE","marginTop","CUSTOM_OUTER_STYLE","lineHeight","CUSTOM_OUTER_STYLE_WITH_CUSTOM_MARGIN","isSmallCustomHeight","getOuterStyle","hasCustomMargin","isCustomHeightSmall","DashboardItemHeadlineContainerInner","memo","DashboardItemHeadlineContainer","ResponsiveEllipsis","DashboardItemHeadline","truncatedTitlePart","maxLine","ellipsis","DashboardInsight","InsightComponent","DOWNLOADER_ID","downloadFile","objectUrl","fileName","anchor","createElement","download","appendChild","click","removeChild","revokeObjectURL","useInsightExport","isExporting","setIsExporting","exportFunction","configToUse","isInsightExportable","getInsightVisualizationMeta","supportsExport","isExportableToCsv","isExportableToXlsx","exportHandler","lastExportMessageId","exportConfig","exportResult","useExportHandler","onExportCSV","onExportXLSX","onSubmit","includeFilterContext","showFilters","activeFiltersByDefault","cellMergedByDefault","filterContextVisible","enableActiveFilterContext","exportCSVEnabled","exportXLSXEnabled","getDefaultLegacyInsightMenuItems","exportCSVDisabled","exportXLSXDisabled","tooltip","itemId","itemName","disabled","getDefaultInsightMenuItems","scheduleExportDisabled","onScheduleExport","isScheduleExportVisible","DashboardWidgetInsightGuard","debug","LINE_NUMBER","EllipsisText","maxLines","collapsed","setCollapsed","overflowIndex","maxLength","positionWithNewLine","userSelect","isCollapsed","DESCRIPTION_PANEL_ALIGN_POINTS","DESCRIPTION_PANEL_ARROW_OFFSETS","DescriptionPanel","DescriptionPanelCore","DescriptionPanelContent","DescriptionPanelContentCore","DescriptionIcon","isMobileDevice","useMediaQuery","arrowOffsets","onBubbleOpen","showDelay","eventsOnBubble","arrowStyle","display","DescriptionClickTrigger","onOpen","switchIsOpen","iconClassName","closeOnOutsideClick","closeOnParentScroll","alignTo","InsightWidgetDescriptionTrigger","summary","trimmedDescription","widgetRefAsString","userInteraction","eventPayload","stringUtils","DefaultDashboardInsightWidgetCore","onExportReady","visType","scheduleExportEnabled","closeMenu","isMenuOpen","menuItems","openMenu","setIsMenuOpen","insightMenuItemsProvider","defaultMenuItems","useDefaultMenuItems","useInsightMenu","InsightMenuButtonComponent","InsightMenuComponent","hideTitle","enableDescriptions","ScrollContext","scrollIntoView","_element","_bottomMargin","_isElementInvisibleCheck","handleOnScrollEvent","fireGoodstrapScrollEvent","scrollToVisibleDefault","container","bottomMargin","scrollTop","offsetTop","isElementInvisibleCheckDefault","itemHeight","ScrollablePanel","tagName","TagName","scrollToVisible","divProps","containerRef","useImperativeHandle","memoizeContext","isElementInvisibleCheck","onPanelScroll","onScroll","DASHBOARD_HEADER_OVERLAYS_Z_INDEX","getUnrelatedDateDataset","relatedDateDataSets","selectedDateDataSet","selectedDateDataSetHidden","removeDateFromTitle","DateFilterCheckbox","isDropdownLoading","isFilterLoading","dateFilterEnabled","selectedDateDataset","selectedDateDatasetHidden","dateFilterCheckboxDisabled","relatedDateDatasets","onDateDatasetFilterEnabled","unrelatedDateDataset","showNoRelatedDate","showError","handleChange","checked","htmlFor","onChange","getElementWidth","getBoundingClientRect","getShortenedTitle","elementWidth","scrollWidth","titleLength","numChars","numCharsSideStrip","floor","substr","ShortenedText","PureComponent","textRef","customTitle","componentDidMount","checkTitle","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","getElement","recomputeShortening","renderTextWithBubble","hideDelay","tooltipVisibleOnMouseOver","tooltipAlignPoints","renderText","displayTooltip","defaultProps","isDateDatasetHeader","hasSameRelevance","sortByTitle","recommendedHeader","otherHeader","relatedHeader","unrelatedHeader","sortDateDatasets","recommendedDate","unrelatedDate","others","getRecommendedItems","nonZeroRelevanceItemsCount","othersIndex","recommendedItems","transform2Dropdown","addUnrelatedDateDataset","ScrollableItem","scroll","onItemScrolled","dateDatasetHeaderMessages","DateDatasetsListItem","isHeader","isUnrelated","catalogDateDatasetToDateDataset","ds","DateDatasetDropdown","onDateDatasetChange","activeDateDataset","dateFromVisualization","onItemScroll","setCloseOnParentScroll","useAutoScroll","unrelatedDateDataSetId","activeDateDataSetId","activeDateDataSetUri","activeDateDataSetTitle","recommendedDateDataSet","sortedItems","Dropdown","openOnInit","ignoreClicksOnByClass","renderButton","toggleDropdown","buttonClassName","buttonValue","DropdownButton","closeOnMouseDrag","renderBody","closeDropdown","DropdownList","itemsCount","renderItem","preventDefault","DateDatasetPicker","getDateFilter","getRecommendedCatalogDateDataset","recommendedDateDataSetId","DateDatasetFilter","isDatasetsLoading","shouldPickDateDataset","shouldOpenDateDatasetPicker","onDateDatasetChanged","isLoadingAdditionalData","catalogDatasetsMap","selectedDateDatasetHiddenByObjectAvailability","visibleDateDatasetsStatus","selectedDateDatasetRef","allDateDatasets","hasObjectAvailability","visibleDateDatasets","forTypes","useIsSelectedDatasetHidden","isDateFilterEnabled","setIsDateFilterEnabled","handleDateDatasetChanged","handleDateDatasetChangedCore","handleDateFilterEnabled","onAppliedChanged","disableKpiDateFilter","enableKpiDateFilter","_command","disableInsightDateFilter","enableInsightDateFilter","enabled","dateDatasetRef","enable","disable","preselectedDateDataSetRef","firstDataSet","getPreselectedDateDataset","useDateFilterConfigurationHandling","shouldRenderDateDataSetsDropdown","useDateDatasetFilter","isWidgetDateDatasetAutoSelect","InsightDateDataSetFilter","queryDateDatasets","dateOptionsDisabled","AttributeFilterConfigurationItem","dfMap","isApplied","setIsApplied","isFilterNotApplied","execResult","allWarnings","warning","warningCode","parameters","useIsFilterNotApplied","handleIgnoreChanged","ignoreKpiFilter","unignoreKpiFilter","ignoreInsightFilter","unignoreInsightFilter","ignore","unignore","useAttributeFilterConfigurationHandling","isError","uniqueKey","attributeName","useAttributes","attributesLoadingStatus","attributesLoadingError","attributesLoading","AttributeFilterConfiguration","attrMap","attributeByDisplayForm","attributeTitle","InsightFilters","Typography","InsightTitleConfig","setVisualPropsConfigurationTitle","isHidingOfWidgetTitleEnabled","widgetTitleState","setWidgetTitleState","Checkbox","isChecked","labelSize","TextAreaWithSubmit","focusTimeout","onDocumentClick","isClickOutsideTextarea","textarea","blur","onKeyDown","isSubmit","shiftKey","isCancel","stopPropagation","onCancel","oldValue","defaultValue","newTrimmedValue","isEditing","removeListeners","edit","selectAndFocus","addEventListener","onEditingStart","componentElement","scrollToEndOnEditingStart","focus","isMultiLine","scrollHeight","root","rootNode","onSelectStart","autofocus","newProps","componentWillUnmount","removeEventListener","clickedTarget","contains","renderTextarea","onBlur","renderTextAreaWithSubmitEdit","InsightDescription","setDescription","readOnly","getStateFromConfig","descriptionConfig","widgetDescription","insightDescription","includeMetrics","useInsightDescription","InsightDescriptionConfig","setDescriptionConfiguration","isWidgetDescriptionEnabled","setWidgetDescription","dropdownItems","info","widgetDescriptionState","setWidgetDescriptionState","lastCustomWidgetDescription","setLastCustomWidgetDescription","handleDescriptionChange","newDescription","prevState","handleDescriptionConfigChange","newConfigState","openDropdown","overlayController","getInstance","InsightConfiguration","widgetRefSuffix","enableHidingOfWidgetTitle","isDrillToUrl","DRILL_TARGET_TYPE","AttributeDisplayFormType","isDrillToDashboardConfig","isDrillToInsightConfig","isDrillToCustomUrlConfig","isDrillToAttributeUrlConfig","insightAttributeDisplayForm","isDrillToUrlConfig","urlDrillTarget","getTitleFromDrillableItemPushData","measureResult","attributeResult","buildUrlDrillTarget","drillData","drillToAttributeDisplayForm","invalidUrlMessage","useInsightDrillConfigPanel","widgetDrills","incompleteItems","deleteIncompleteItem","onChangeItem","onOriginSelect","completeItem","isItemNew","updateIncompleteItems","prevWidgetDrills","incompleteItemsUpdated","incompleteItem","complete","addIncompleteItem","drillConfigItems","newItem","found","drillConfigItem","addOrUpdateDrillConfigItem","changedItem","selectedItem","incompleteAttributeItem","drillTargetType","incompleteMeasureItem","useIncompleteItems","configItems","invalidCustomUrlDrillLocalIds","enableKDZooming","drillItems","configForWidget","DRILL_TO_INSIGHT","createInsightConfig","DRILL_TO_DASHBOARD","createDashboardConfig","hasWarning","DRILL_TO_URL","createUrlConfig","createConfig","getMappedConfigForWidget","mergedItems","mergeDrillConfigItems","originSelectorItems","availableDrillTargetMeasures","availableDrillTargetAttributes","getUnusedDrillTargets","onSetupItem","onDeleteItem","isOriginSelectorVisible","isLoaded","DrillOriginItem","onDelete","isDateAttribute","shouldRenameMeasureToMetric","Button","ButtonWithIcon","isSmall","iconLeft","getIconClassNameBySelection","selection","icons","DrillTargetType","enabledDrillTargetTypeItems","targetBySelection","getTargetBySelection","drillIconClassName","PromiseCache","getCacheKey","params","results","getResult","getError","getPromise","cachedPromise","cachedPromiseError","cancelablePromise","usePromiseCache","promiseFactory","fetchParams","fetchDeps","resetDeps","preventResetPromises","promiseCacheRef","setLoading","preventResetPromisesRef","newParams","newPromises","usedPromiseCache","setResults","setErrors","InsightListItemDate","relativeDate","isToday","isYesterday","isCurrentYear","META_DATA_TIMEZONE","VISUALIZATION_TYPE_UNKNOWN","modifiedArrowOffsets","InsightListItemCore","shortenedTextRef","createRef","handleClickDelete","renderLock","renderUpdatedDateTime","metadataTimeZone","dateTimeConfig","dateTimezone","now","dateInLocalTimezone","timeZone","yesterday","getDateTimeConfig","shouldRenderActions","renderActions","onDescriptionPanelOpen","showDescriptionPanel","visualizationListItemClassname","prevProps","InsightListItem","injectIntl","InsightListNoData","hasNoMatchingData","isUserInsights","showNoDataCreateButton","onCreateButtonClick","dropdownTabsTranslationIds","InsightList","searchAutofocus","selectedRef","workspaceId","initialLoadCompleted","setInitialLoadCompleted","pagesToLoad","setPagesToLoad","search","setSearch","selectedTabId","setSelectedTabId","author","isObjectUrisSupported","userUri","login","useAuthor","pageNumber","totalItemsCount","totalInsightsCount","resourceFactory","mergeResult","usePagedResource","orderBy","getInsights","onSearch","searchString","createInsightRequestedEvent","dropdownListHeight","dropdownListLoading","showDropdownListTabs","isMobile","showSearch","searchFieldSize","searchPlaceholder","disableAutofocus","showTabs","supportsOwners","onTabSelect","itemHeightGetter","insightListSourceItem","insightType","getInsightListSourceItem","renderNoData","onScrollEnd","endIndex","startPage","endPage","DROPDOWN_ALIGN_POINTS","InsightDropdown","insightConfig","useDrillToInsightData","buttonText","getButtonValue","DrillTargetInsightItem","DropdownSectionHeader","UrlDropdownOption","urlValue","substring","EditButton","toggleModal","buttonTitle","buttonIconLeft","CustomUrlSection","ParameterDetail","typeName","label","useEllipsis","additionalValues","ParameterTypeSection","ParameterLabelSection","ParameterValuesSection","LoadingMask","Values","valueClassName","numberOfValues","ProjectIdParameterDetail","DashboardIdParameterDetail","WidgetIdParameterDetail","InsightIdParameterDetail","ClientIdParameterDetail","DataProductIdParameterDetail","Parameter","detailContent","onAdd","displayHelp","setDisplayHelp","isDark","itemClassNames","addButtonLabel","identifierParametersMessages","insightIdParameterLabel","widgetIdParameterLabel","dashboardIdParameterLabel","projectIdParameterLabel","workspaceIdParameterLabel","clientIdParameterLabel","dataProductIdParameterLabel","identifierParametersSection","titleIntlKey","getDetailContent","IdentifierParametersSection","enableClientIdParameter","enableDataProductIdParameter","enableWidgetIdParameter","requestCache","getDisplayFormLabel","hyperlink","AttributeDisplayFormParameterDetail","showValues","setIsLoading","setValues","setAdditionalValues","supportsEnumeration","supportsEnumeratingDatetimeAttributes","displayFormMap","dateAttribute","useSupportsEnumeration","isMounted","response","cachedResponse","getElements","getCachedRequests","additional","handleEmptyValues","prepareValues","getValues","ParameterX","getDisplayFormIcon","InsightParametersSection","attributeDisplayForms","loadingAttributeDisplayForms","ParametersPanel","UrlInput","onCursor","currentUrlValue","syntaxHighlightingRules","SyntaxHighlightingInput","customOptions","formatting","HelpLink","link","rel","DEFAULT_RULES","token","UrlInputPanel","documentationLink","validDisplayFormsRule","validAttributePlaceholders","buildValidDisplayFormsFormattingRule","start","buildFormattingRules","initialCursorPosition","CustomUrlEditorDialog","invalidAttributeDisplayFormIdentifiers","previousValue","currentValue","setCurrentValue","isApplyEnabled","cursorPosition","setCursorPosition","editorWarningText","invalidParameters","getWarningTextForInvalidParameters","ConfirmDialogBase","isPositive","cancelButtonText","submitButtonText","isSubmitDisabled","submitOnEnterKey","parameterPlaceholder","cursor","CustomUrlEditor","SelectedOverlay","FullScreenOverlay","Overlay","isModal","closeOnEscape","positionType","AttributeUrlSectionItem","onClickHandler","AttributeUrlSection","selected","attributeDisplayFormRef","areAttributesWithDisplayFormsEqual","dropdownAlignPoints","DrillTargetUrlItem","allDisplayForms","targetAttributesFormsAll","linkDisplayForms","targetAttributesFormsWithLinks","useAttributesWithDisplayForms","relevantDf","useInvalidAttributeDisplayFormIdentifiers","showModal","setShowModal","useButtonValue","iconRight","supportsHyperlinkAttributeLabels","onAttributeUrlHandler","String","drillIntoUrlDocumentationLink","supportsWidgetEntity","onCustomUrlHandler","getTooltip","DropdownItem","generatedTestClass","DashboardListItem","DashboardListButton","dashboardMatch","otherRef","DashboardList","selectedDashboard","dropdownLabel","setSearchString","scrollToItem","onOpenStateChanged","DrillTargetDashboardItem","dashboardItems","forbiddenDashboards","isAvailableDashboardSelected","selectedForbiddenItem","buildDashboardItems","DrillTargets","onInsightTargetSelect","targetItem","getOrigin","onSetup","onDashboardTargetSelect","onCustomUrlTargetSelect","targetType","unknownDrillTargetTypeReceived","onIncompleteChange","targetClassNames","isFromDateAttribute","showDateFilterTransferWarning","attributeTarget","isDateAttributeInIntersection","useDateAttributeOptions","addon","chunks","InsightDrillConfigList","useDrillTargetTypeItems","shouldScroll","shouldScrollToContainer","InsightDrillConfigItem","onCloseDropdown","supportedItems","DrillAttributeSelectorItem","DrillMeasureSelectorBody","DrillAttributeSelectorBody","DrillOriginSelector","ZoomInsightConfiguration","zoomInsightState","setZoomInsightStatus","controls","zoomInsight","supportsZooming","Message","InsightDrillConfigPanel","InsightInteractions","getDefaultInsightEditMenuItems","includeInteractions","SubmenuComponent","TextareaAutosize","EditableLabelInner","keyCode","textareaInOverlay","measureRootDimensions","textareaWidth","maxRows","rootElement","rootElementFontSize","getComputedStyle","textareaFontSize","renderTextAreaInOverlay","alignId","renderEditableLabelEdit","isEditableLabelWidthBasedOnText","editableLabelClasses","displayValue","EditableLabel","EditableHeadline","originalTitle","onTitleChange","onTitleEditingCancel","onTitleEditingStart","EditableDashboardInsightWidgetHeader","onWidgetTitleChanged","EditableDashboardInsightWidgetCore","someDrillingEnabled","someAvailableDrillTargetsExist","useEditableInsightMenu","isEditable","RenderModeAwareDashboardInsightWidget","view","DefaultDashboardWidget","effectiveBackend","backendWithEventing","hasReportedResult","widgetExecutionSucceeded","widgetExecutionFailed","realBackend","def","executionDefinition","_offset","_limit","useNewSectionInsightListItemDropHandler","useNewSectionKpiPlaceholderDropHandler","addNewSectionWithKpiPlaceholder","useNewSectionInsightPlaceholderDropHandler","addNewSectionWithInsightPlaceholder","widgetCategoryMapping","insightListItem","EmptyDashboardDropZone","widgetCategory","LoadingDots","DOT_COUNT","LoadingDashboardPlaceholderWidget","BadWidgetType","MissingWidget","DashboardWidget","WidgetComponent","DashboardItemOverlay","onHide","setSize","setHeight","PluginIcon","c7","DashboardItemOverlayInfo","viewBox","fill","xmlns","getRefsForSection","DashboardLayoutWidget","DefaultWidgetRenderer","onDrill","enableWidgetCustomHeight","handleDragEnd","isCustom","isDraggableWidgetType","isOnlyItemInSection","getFilledSize","createDraggableItem","getDashboardLayoutItemHeightForRatioAndScreen","allowOverflow","isIgnoredForIndexes","itemsInSectionsBefore","ignoredWidgetsBeforeItemCount","getWidgetIndex","getRefsForItem","sectionModifications","itemModifications","overlayShow","widthLimitReached","useResizeItemStatus","canShowHotspot","isLastInSection","columnWidthInGC","WidgetDropZoneBox","WidgetDropZone","WidgetDropZoneColumn","dropzoneCoordinates","RowEndHotspot","isHiddenStyle","overflow","flex","DashboardLayoutItemViewRenderer","currentScreenSizeConfiguration","getSizeForItem","computedStyle","DashboardLayoutItemRenderer","isDraggingCurrentItem","useIsDraggingCurrentItem","DashboardLayoutWidgetRenderer","isResizedByLayoutSizingStrategy","overflowX","overflowY","border","outline","defaultItemRenderer","DashboardLayoutItem","itemRenderer","widgetRenderer","renderProps","DefaultItemRenderer","defaultItemKeyGetter","DashboardLayoutGridRow","itemKeyGetter","gridRowRenderer","rowItems","DashboardLayoutSectionHeaderDescription","DashboardLayoutSectionHeader","renderBeforeHeader","renderHeader","emptyItemFacadeWithFullSize","DashboardLayoutSectionHeaderRenderer","sectionHeader","defaultStyle","DashboardLayoutSectionRenderer","DashboardLayoutSectionOverlayController","useIsDraggingWidget","isDraggingWidget","HeightResizer","HeightResizerHotspot","widgetIdentifiers","customWidgetsRestrictions","customWidgetItems","heightLimit","minCustomWidgetHeight","allowHeightResize","getCustomWidgetRestrictions","heightsGR","widgetMinHeightPX","curHeightGR","getHeightsGR","widgetHeights","newHeightGR","offsetYPX","scrollCorrectionY","deltaHeightGR","getNewHeightGR","areWidgetsResizing","isColumnResizing","isOtherRowResizing","shouldRenderResizer","DashboardLayoutGridRowEdit","itemsInRowsByIndex","extendedRows","itemsInRow","deleteCount","defaultSectionRenderer","defaultHeaderRenderer","DashboardLayoutSection","sectionRenderer","sectionHeaderRenderer","DefaultSectionRenderer","DefaultSectionHeaderRenderer","maxScreenClass","defaultScreenClass","gutterWidth","breakpoints","SCREEN_BREAKPOINT_XS","SCREEN_BREAKPOINT_SM","SCREEN_BREAKPOINT_LG","SCREEN_BREAKPOINT_XL","defaultSectionKeyGetter","DashboardLayout","sectionKeyGetter","enableCustomHeight","layoutRef","resizedItemPositions","removeHeights","sectionRendererWrapped","widgetRendererWrapped","useOwnWidth","screenClass","fluid","DashboardLayoutSectionBorderMarker","background","xmlnsXlink","fillRule","DashboardLayoutSectionBorderLine","DashboardLayoutSectionBorder","renderModeAwareDashboardLayoutSectionRenderer","useBorderStatus","BUBBLE_ALIGN_POINTS","ARROW_OFFSETS","BUBBLE_STYLE","EditableLabelWithBubble","warningLimit","placeholderMessage","editing","setEditing","charactersCountLeft","maximumCharactersCount","bubbleMessage","currentCharactersCount","currentValueLength","isBubbleVisible","onCancelCallback","onSubmitCallback","newValue","MAX_DESCRIPTION_LENGTH","SectionHeaderEditable","getDescription","getTitle","changeTitle","changeDescription","onEditingEnd","onTitleSubmit","onDescriptionSubmit","SectionDropZoneBox","nbsp","SectionHotspot","targetPosition","moveWidgetToNewSection","newSectionIndex","useMoveWidgetToNewSectionDropHandler","isAdjacentSection","renderModeAwareDashboardLayoutSectionHeaderRenderer","isInitialDropzone","isEditingDisabled","keyGetterProps","DefaultDashboardLayout","isLayoutEmpty","getInsightByRef","sanitizeWidgets","insightAvailable","resultBuilder","polluteWidgetRefsWithBothIdAndUri","gridWidthProp","gridHeightProp","validateItemsSize","getMemoizedWidgetSanitizer","transformedLayout","dashLayout","screenSplitSections","wrappedSection","rowSection","sectionItemsGridHeights","maxGridHeight","getDashboardLayoutForExport","shouldRenderSectionHotspot","ConfirmDialog","containerClassName","dialogProps","SaveAsNewDashboardDialog","handleTitleFocus","handleTitleBlur","dashboardTitle","getDefaultDashboardTitle","handleTitleChange","canCreateDashboard","getNoteText","isKpiWidgetEnabled","isScheduleEmailsEnabled","messageId","defaultDashboardTitle","isDashboardLoaded","isDashboardSaving","noteText","Input","I","maxlength","onFocus","SaveAsDialogRendererIntl","SaveAsDialogRenderer","useSaveAsDialogProps","isSaveAsDialogOpen","onSaveAsError","onSaveAsSuccess","DefaultSaveAsDialog","handleSaveAs","onSubmitSuccess","onSubmitError","saveAsCommandProcessing","switchToDashboard","saveAsStatus","useSaveAs","formatTime","hours","minutes","updateTime","selectedTime","setHours","setMinutes","setSeconds","setMilliseconds","normalizeTime","DEFAULT_DROPDOWN_ALIGN_POINTS","DEFAULT_DROPDOWN_ZINDEX","REPEAT_TYPES","WEEKLY","DAILY","MONTHLY","CUSTOM","REPEAT_FREQUENCIES","DAY","MONTH","WEEK","FREQUENCY_TYPE","REPEAT_EXECUTE_ON","DAY_OF_MONTH","DAY_OF_WEEK","isScheduleEmailExternalRecipient","email","isScheduleEmailExistingRecipient","getDate","getDayName","getIntlDayName","startDate","formatDate","weekday","getDay","dayIndex","getWeek","REPEAT_TYPE_BY_REPEAT_INDEX","FRAGMENT_BY_INDEX","fillFragments","fragments","fragObj","generateRepeatString","repeat","repeatType","repeatFrequency","repeatPeriod","repeatBase","getRepeatBase","repeatDelimiterIndex","str","dayOfWeek","dayOfMonth","days","p","setDailyRepeat","repeatData","setMonthlyRepeat","repeatExecuteOn","repeatExecuteOnData","setWeeklyRepeat","parseRepeatString","firstFragmentIndex","getFirstUsedFragmentIndex","firstFragmentValue","customRepeatNumber","second","getScheduledEmailRecipientUniqueIdentifier","recipient","getScheduledEmailRecipientEmail","getScheduledEmailRecipientDisplayName","fullName","scheduleEmailRecipientDelimiter","splitScheduledEmailExternalRecipientByDelimiter","delimiter","val","JANUARY_OFFSET","getTimezoneOffset","JUNE_OFFSET","timezones","t","januaryOffset","juneOffset","TIMEZONE_BY_OFFSETS","tz","TIMEZONE_DEFAULT","getTimezoneByIdentifier","EMAIL_REGEX","isEmail","isMobileView","innerWidth","Textarea","getTextareaClassNames","hasError","renderCollapseIndicator","RepeatExecuteOnSelect","repeatExecuteOnItems","localizationKey","getLocalizationKey","repeatExecuteOnItem","overlayPositionType","overlayZIndex","RepeatFrequencySelect","repeatFrequencyItems","repeatFrequencyItem","RepeatPeriodSelect","isInvalidValue","isNaN","triggerChangeEvent","trimmedValue","RepeatTypeSelect","repeatItems","repeatTypeItem","RepeatSelectRender","onRepeatTypeChange","onRepeatPeriodChange","onRepeatFrequencyChange","renderRepeatExecuteOn","onRepeatExecuteOnChange","renderCustomRepeat","RepeatSelect","convertedLocales","convertWeekStart","WrappedDatePicker","datePickerContainerRef","inputRef","resizeHandler","alignDatePicker","selectedDate","monthDate","inputValue","handleDayChanged","handleMonthChanged","handleInputChanged","setComponentRef","handleWrapperClick","handleClickOutside","updateDate","_prevProps","rootRef","getInputClasses","getComponentClasses","getOverlayWrapperClasses","inputAnchorPoint","pickerAnchorPoint","normalizeDate","parsedDate","getFullYear","parseDate","resetOnInvalidValue","newlySelectedDate","getMonth","parentElement","optimalAlignment","targetRegion","selfRegion","alignment","onAlign","classList","classNamesProps","showOutsideDays","onMonthChange","weekStartsOn","DatePickerWithIntl","Datepicker","WrappedTimepicker","dropdownRef","getTimeItems","currentItem","updateDropdownWidth","dropdownWidth","handleTimeChanged","newlySelectedTime","updateLocaleForMoment","skipNormalizeTime","updatedTime","maxVisibleItemsCount","TimePickerWithIntl","Timepicker","DateTime","timeChange","onTimeChange","getSeconds","timezone","onDateChange","INSIGHT_ICON_MAP","InsightIcon","iconProps","ALIGN_POINTS","ScheduleDropdown","applyDisabled","onApply","iconComponent","contentComponent","bodyClassName","buttonDisabled","cancelText","applyText","renderBodyFooter","AttachmentsSelectionDropdown","insightWidgets","ICON_COLOR","c5","ICON_PROPS","dashboardSelected","setDashboardSelected","widgetsSelected","setWidgetsSelected","handleWidgetSelectedChange","widgetRefKey","handleOnApply","handleOnCancel","canApply","FormatOptionsDropdown","FORMAT_VALUES","setFormat","setMergeHeaders","includeFilters","setIncludeFilters","toUpperCase","AttachmentItem","Attachments","onAttachmentsSelectionChanged","onAttachmentsConfigurationChanged","isSomeWidgetSelected","selectedWidgetsTitles","Menu","bubbleAlignPoints","RecipientsSelectRenderer","recipientRef","renderEmptyContainer","renderNoOptionsContainer","commonProps","selectProps","contrast","renderMenuOptions","menuProps","getValue","selectedValues","selectedItemsCount","areAllValuesSelected","isRecipientAdded","renderLoadingIcon","renderMenuOptionsContainer","renderOwnerValueContainer","isMulti","selectTypeClassName","currentUserIsAuthor","getStyle","renderMultiValueItemContainer","removeIcon","renderErrorValueContainer","bubbleMessageTranslationId","renderSingleValueContainer","singleValueProps","renderMultiValueContainer","multiValueProps","isOriginalExternalRecipient","renderOptionLabel","isExternalUser","renderRecipientValue","getNewOptionData","renderInputContainer","inputProps","handleOnChange","actionTypes","recipients","newSelectedValues","recipientIds","recipientId","uniqueScheduledEmailRecipients","splitScheduledEmailRecipientByDelimiter","allowEmptySelection","loadUserListItems","onLoad","matchedUserListCount","getMatchedRecipientEmails","onMenuOpen","onSearchCore","searchKey","ownerContainer","querySelector","setAttribute","creatableSelectComponent","IndicatorsContainer","MultiValueContainer","Placeholder","SingleValue","NoOptionsMessage","classNamePrefix","formatOptionLabel","isClearable","isDisabled","onInputChange","getOptionValue","getOptionLabel","originalValue","RecipientsSelect","onLoading","onPending","effectiveWorkspace","queryAll","useWorkspaceUsers","AttachmentNoWidgets","nameOfAttachment","textFilters","c8","userToRecipient","ScheduledMailDialogRendererUI","renderAttachment","dashboardInsightWidgets","enableWidgetExportScheduling","attachments","getDefaultAttachment","onAttachmentsChange","onAttachmentsConfigurationChange","renderDateTime","sendDate","userTimezone","renderMessage","defaultEmailBody","getDefaultEmailBody","onMessageChange","emailBody","renderFiltersMessage","hasDefaultFilters","editSchedule","renderRecipients","selectedRecipients","unsubscribed","unsubscribedRecipient","originalEditState","onRecipientsChange","renderUnsubscribedRecipients","unsubscribedAmount","renderRepeats","onRepeatsChange","renderSubject","getDefaultSubject","emailSubject","onSubjectChange","onScheduleDialogSubmit","onSave","originalFilterContext","getScheduleEmailData","selectedDateObject","newRepeat","allRecipientsAreEmails","newExternalRecipientsEmails","hasNewExternalRecipients","bcc","isValidScheduleEmailData","displayDateString","convertDateToDisplayDateString","dashboardTitleMaxLength","getDashboardTitleMaxLength","getAttachments","exportOptions","widgetsRefStringToUriRefMap","widgetRefString","widgetDashboard","when","getTimeSchedule","toEmails","bccEmails","subject","getSummaryMessage","unlisted","recurrence","recurrency","isCustomRepeatType","repeatFrequencyType","getRepeatFrequencyType","frequencies","appliedRepeatExecuteOn","getScheduledEmailRepeatString","timeSuffix","getTimePeriod","formattedMinute","getFormattedMinute","formattedHour","getFormattedHour","getFormattedTime","getScheduledEmailSummaryString","getEditState","getDefaultState","normalizedTime","getDefaultAttachments","defaultState","processedRecipients","dashboardAttachments","widgetAttachments","widgetAttachment","newState","defaultAttachment","isDefaultAttachmentValid","ScheduledMailDialogRendererIntl","withContexts","ScheduledMailDialogRenderer","stripLocalIdentifierFromFilters","DefaultScheduledEmailDialog","onSaveSuccess","onSaveError","handleCreateScheduledEmail","handleSaveScheduledEmail","canListUsersInWorkspace","dashboardUriRef","dashboardWidgets","dashboardInsights","originalFilters","scheduledEmailCreator","scheduledEmailCommandProcessing","scheduledEmailToCreate","creationStatus","useCreateScheduledEmail","originalFiltersWithouLocalIdentifiers","filtersWithoutLocalIdentifiers","customFilters","filtersToStore","scheduledEmailCreationStatus","scheduledEmailSaver","scheduledEmailToSave","savingStatus","useSaveScheduledEmail","scheduledEmailSavingStatus","useScheduledEmail","Dialog","onMouseUp","onMouseOver","DialogBase","ICON_TOOLTIP_ALIGN_POINTS","TEXT_TOOLTIP_ALIGN_POINTS","ScheduledEmail","currentUserEmail","onEdit","recipientsLabel","numberOfRecipients","getRecipientsLabel","formatsLabel","hasPdfFormat","hasCsvFormat","attachment","hasXlsxFormat","getFormatsLabel","AttachmentIcon","attachmentLabel","hasDashboardAttachment","numberOfWidgetAttachments","getAttachmentType","subtitle","handleClick","editable","ScheduledEmails","scheduledEmails","noSchedulesMessageId","LoadingSpinner","c9","br","DeleteScheduleConfirmDialog","displayCloseButton","deleteScheduledMail","ScheduledEmailManagementDialog","onDeleteSuccess","onLoadError","onDeleteError","scheduledEmailToDelete","setScheduledEmailToDelete","scheduledEmailsByUser","setScheduledEmailsByUser","setScheduledEmails","isFirstLoaded","setIsFirstLoaded","onLoadSuccess","emailManagement","emailsByUser","handleScheduleDelete","handleScheduleEdit","handleScheduleDeleteSuccess","handleTabChange","loadScheduledMails","loadResultPromise","getScheduledMailsForDashboard","createdByCurrentUser","useScheduledEmailManagement","Tabs","ContentDivider","AddUserOrGroupButton","buttonClassNames","isGranteeUser","isGranularGranteeUser","isGranteeUserInactive","isGranteeGroup","isGranularGranteeGroup","isGranularGrantee","isGranteeGroupAll","isGranteeItem","GranteeGroupAll","InactiveOwner","getGranteeLabel","grantee","isCurrentUser","userName","_param","exhaustiveCheck","sortGranteesByName","granteeA","granteeB","textA","textB","notInArrayFilter","notInArray","g","g1","hasGroupAll","getAppliedGrantees","getGranteeItemTestId","prefix","prefixValue","getIsGranteeCurrentUser","granteeRef","LabelsContext","accessTypeLabel","accessRegimeLabel","removeAccessGranteeTooltip","removeAccessCreatorTooltip","useComponentLabelsContext","ComponentLabelsProvider","labels","GranteeUserIcon","GranteeUserInactiveIcon","GranteeGroupIcon","GranteeRemoveIcon","GranteeOwnerRemoveIcon","withBubble","WrappedComponent","showBubble","bubbleTextId","triggerClassName","wrappedComponentProps","bubbleText","GranularPermissionSelectItemWithBubble","permission","selectedPermission","handleSetSelectedPermission","defaultContext","onInteraction","ComponentInteractionContext","ComponentInteractionProvider","currentUserPermissions","isCurrentUserWorkspaceManager","isSharedObjectLocked","sharedObjectStatus","flowId","currentUserPermission","getGranularPermissionFromUserPermissions","userPermissions","canEditAffectedObject","canEditLockedAffectedObject","canShareAffectedObject","canShareLockedAffectedObject","canViewAffectedObject","handleInteraction","useShareDialogInteraction","openInteraction","closeInteraction","saveInteraction","permissionsDropdownOpenInteraction","isExistingGrantee","granteeEffectivePermission","isCurrentUserSelfUpdating","granteeType","permissionsChangeInteraction","granteeUpdatedPermission","permissionsRemoveInteraction","granteeAddInteraction","availableGranteeListOpenInteraction","numberOfAvailableGrantees","overlayAlignPoints","RemoveItem","tooltipId","FormattedMessageWithBubble","GranularPermissionsDropdownBody","granteePossibilities","isShowDropdown","handleOnDelete","changedGrantee","inheritedPermissions","effective","smallItemsSpacing","permissionItem","GranularPermissionsDropdownWithBubble","isDropdownDisabled","isDropdownOpen","setSelectedPermission","granularGranteeClassName","getGranularGranteeClassNameId","usePermissionsDropdownState","toggleOpen","allPermissionsSorted","disableWithTooltip","possibility","getGranteePossibilities","allUserPermissions","effectivePermission","getEffectivePermission","change","permissionTypeItems","permissionIndex","inheritedPermission","inheritedPermissionIndex","getPermissionTypeItems","GranularGranteeUserItem","itemClassName","renderSubtitle","handleToggleDropdown","GranularGranteeGroupItem","GranteeUserItem","isOwner","inactiveLabel","granteeUserTitleRenderer","GranteeUserInactiveItem","granteeLabel","GranteeGroupItem","groupName","numOfUsers","memberCount","granteeCount","GranteeItemComponent","GranteeListEmpty","GranteeList","areGranularPermissionsSupported","sortedGrantees","granteeSort","hasAllGroup","granteesWithNoAllGroup","sorted","sortGranteeList","GranteeListLoading","ShareGranteeContent","onAddGrantee","SharedObjectCheckboxControl","isSupported","SharedObjectUnderLenientControl","isUnderLenientControl","isLeniencyControlSupported","onUnderLenientControlChange","SharedObjectLockControl","isLockingSupported","onLockChange","useAdminInformationMessageState","currentUserRef","localStorageKey","createLocalStorageKey","isMessageVisible","setIsMessageVisible","setValue","localStorage","getLocalStorageValue","useLocalStorage","handleMessageClose","AdminInformationMessage","ShareGranteeBase","isLockedNow","isUnderLenientControlNow","sharedObject","isDirty","onGranteeDelete","onGranularGranteeChange","onAddGranteeButtonClick","owner","isMetadataObjectLockingSupported","canWorkspaceManagerSeeEverySharedObject","granteeList","dialogLabels","shouldDisplayAdminMessage","EmptyRenderer","LoadingMessageRenderer","NoOptionsMessageRenderer","MenuListRendered","InputRendered","OptionRenderer","isFocused","innerProps","errorOption","sTestStyle","componentStyle","GroupHeadingRenderer","mapUserStatusToGranteeStatus","mapUserFullName","firstName","lastName","mapGranteesToGranularAccessGrantees","guard","AddGranteeSelect","appliedGrantees","sharedObjectRef","onSelectGrantee","selectRef","noOptionsMessage","loadOptions","onGranteesLoaded","availableGrantees","getAvailableGrantees","mappedUsers","availableGrantee","mapWorkspaceUserToGrantee","mappedGroups","mapWorkspaceUserGroupToGrantee","userGroup","group","allGroupLabel","supportsEveryoneUserGroupForAccessControl","toLocaleLowerCase","matchAllGroupQueryString","createErrorOption","loadGranteeOptionsPromise","leading","onKeyDownCallback","defaultMenuIsOpen","DropdownIndicator","IndicatorSeparator","Option","GroupHeading","LoadingMessage","LoadingIndicator","MenuList","defaultOptions","AddGranteeContent","addedGrantees","onAddUserOrGroups","defaultPermissions","enrichGranteeWithDefaultPermission","BackButton","onBackClick","AddGranteeBase","backButtonRenderer","headerLeftButtonRenderer","useShareDialogBase","shareDialogSaveInteraction","dialogMode","isGranteesLoading","granteesToUpdate","onLoadGrantees","onSharedGranteeDelete","onAddedGranteeDelete","onGranteeAdd","onAddGranteeBackClick","onGranularGranteeAddChange","onGranularGranteeShareChange","setDialogMode","setIsGranteesLoading","setGrantees","setGranteesToAdd","setGranteesToDelete","setGranteesToUpdate","setUnderLenientControlNow","setLockedNow","originalGranularGrantees","setOriginalGranularGrantees","originalGrantee","hasChangedPermissions","filteredUpdatedGrantees","groupAll","allGrantees","useShareDialogState","onSuccessCallBack","accessGranteeDetail","userAccess","mapUserAccessToGrantee","userGroupAccess","mapUserGroupAccessToGrantee","mapGranularUserAccessToGrantee","mapGranularUserGroupAccessToGrantee","mapAccessGranteeDetailToGrantee","getAccessList","useGetAccessList","mapShareStatusToGroupAll","isShareDialogDirty","isAddDialogDirty","onSubmitShareGrantee","allGranteesToAdd","onSubmitAddGrantee","sharedGrantees","appliedGranteesWithOwner","ShareDialogBase","handleCancel","ShareDialog","usesStrictAccessControl","supportsMetadataObjectLocking","onShareDialogBaseError","mapOwnerToGrantee","mapGranteesToShareStatus","addAccess","revokeAccess","affectedSharedObject","mapSharedObjectToAffectedSharedObject","DefaultShareDialog","useCancelButtonProps","isSaving","onCancelClick","DefaultCancelButton","CancelButton","SaveButton","hasEditDashboardPermission","dashboardPermissionsEnabled","canEditDashboardPermission","hasEditLockedDashboardPermission","canEditLockedDashboardPermission","canManageWorkspace","hierarchicalWorkspacesSupported","selectCanEnterEditMode","selectCanEnterEditModeAndIsLoaded","canEnterEditMode","selectIsPrivateDashboard","arePermissionsEnabled","isPrivate","isCreatingNewDashboard","selectCanSaveDashboard","selectIsCurrentDashboardVisibleInList","currentDashboardRef","dashboardsList","selectIsShareButtonVisible","canShareDashboardPermission","canShareLockedDashboardPermission","isCurrentDashboardVisibleInList","isShareButtonHidden","useEditButtonProps","minWidthForEditing","canEnterEdit","isDashboardLoading","onEditClick","DefaultEditButton","selectIsSaveAsNewButtonVisible","isSaveAsNewEnabled","isSaveAsButtonHidden","isDashboardEditable","useSaveAsNewButtonProps","onSaveAsNewClick","DefaultSaveAsNewButton","SaveAsNewButton","HiddenShareButton","useShareButtonProps","onShareButtonClick","DefaultShareButton","ShareButton","DefaultButtonBar","cancelButtonProps","saveButtonProps","editButtonProps","saveAsNewButtonProps","shareButtonProps","childContentPosition","DefaultMenuButton","onMenuButtonClick","prevIsOpen","visibleMenuItems","menuItem","selectorClassName","ButtonBar","isEmptyLayout","exportDashboard","defaultOnSaveAs","defaultOnExportToPdf","isSaveAsNewHidden","isStandaloneSaveAsNewButtonVisible","isKPIDashboardExportPDFEnabled","isExportPdfEntitlementPresent","isDeleteVisible","deleteButton","isSaveAsVisible","saveAsNewButton","isSaveAsDisabled","isPdfExportVisible","pdfExportButton","MenuButton","Title","HiddenTopBar","LockedStatusIndicator","DefaultLockedStatus","enableNewAnalyticalDashboardsNavigation","ShareStatusIndicator","DefaultShareStatus","useSaveButtonProps","emptyTitle","optimisticIsSaving","setOptimisticIsSaving","onSaveClick","isSavingDashboard","isPrivateDashboard","isEmptyDashboard","canSaveDashboard","DefaultSaveButton","useTopBarProps","shareInfo","onTitleChanged","menuButtonProps","titleProps","buttonBarProps","shareStatusProps","lockedStatusProps","DefaultTopBar","TopBarCore","TitleWrapper","DefaultTitle","EditableTitle","RenderModeAwareTitle","HiddenToolbar","defaultDashboardThemeModifier","modifiedTheme","additionalCssProperties","chart","styleTag","createTextNode","head","AttributeDatasetInfo","defaultAttributeFilterTitle","AttributeFilterButtonToolip","ALIGN_POINT","AttributeFilterDropdownButton","showSelectionCount","isFiltering","TooltipContentComponent","subtitleSelectedItemsRef","displayItemCount","setDisplayItemCount","filterIcon","buttonSubtitle","ContentLoader","AsyncList","nextPageItemPlaceholdersCount","isLoadingNextPage","onLoadNextPage","renderItemProps","LoadingPlaceholder","handleScrollEnd","endRowIndex","List","rx","ry","InvertableSelectSearchBar","clearOnEsc","isSearch","InvertableSelectAllCheckbox","isFiltered","isPartialSelection","handleToggle","checkboxClasses","labelClasses","InvertableSelectLimitWarning","InvertableSelectStatusBar","selectedItems","getItemTitle","isInverted","selectedItemsLimit","isSelectionEmpty","isAll","isNone","isAllExcept","selectionString","InvertableSelectNoResultsMatch","InvertableSelectItem","onMouseOut","onOnly","handleOnly","InvertableSelect","adaptiveWidth","adaptiveHeight","isSingleSelect","Infinity","renderError","defaultError","renderLoading","defaultLoading","renderSearchBar","defaultSearchBar","defaultNoData","defaultItem","renderStatusBar","defaultStatusBar","defaultActions","onSelectAllCheckboxChange","onSelectAllCheckboxToggle","selectOnly","selectItems","deselectItems","selectionState","getIsItemSelected","getItemKey","selectionMap","itemsNotInSelection","itemsInSelection","loadedSelectedItems","loadedUnselectedItems","itemKey","selectNone","useInvertableSelect","onDeselect","onSelectOnly","providerName","formattedTitle","getElementTitles","el","getElementKey","AttributeFilterComponentsContext","DropdownButtonComponent","DropdownBodyComponent","DropdownActionsComponent","ElementsSearchBarComponent","ElementsSelectComponent","ElementsSelectLoadingComponent","ElementsSelectItemComponent","ElementsSelectErrorComponent","ElementsSelectActionsComponent","EmptyResultComponent","StatusBarComponent","useAttributeFilterComponentsContext","AttributeFilterComponentsProvider","isPlaceholder","isComposedPlaceholder","PlaceholdersContext","placeholders","updateState","placeholderValue","validate","resolveValueWithPlaceholders","resolutionContext","computeValue","v","resolvedValue","useResolveParentFiltersInput","overAttribute","resolvedParentFilters","useMemoStringify","useResolveValueWithPlaceholders","getParentFiltersWithOverAttribute","overAttributeGetter","initReducers","init","initStart","initialization","initSuccess","initError","initCancel","loadAttributeReducers","loadAttributeRequest","loadAttributeStart","loadAttributeSuccess","loadAttributeError","loadAttributeCancelRequest","loadAttributeCancel","selectState","getElementCacheKey","elementsForm","selectElementsForm","loadCustomElementsReducers","loadCustomElementsRequest","loadCustomElementsStart","loadCustomElementsSuccess","loadCustomElementsError","loadCustomElementsCancelRequest","loadCustomElementsCancel","loadInitialElementsPageReducers","loadInitialElementsPageRequest","loadInitialElementsPageStart","initialPageLoad","currentOptions","lastLoadedOptions","loadInitialElementsPageSuccess","totalCountWithCurrentSettings","loadInitialElementsPageError","loadInitialElementsPageCancelRequest","loadInitialElementsPageCancel","loadNextElementsPageReducers","loadNextElementsPageRequest","loadNextElementsPageStart","nextPageLoad","loadNextElementsPageSuccess","loadNextElementsPageError","loadNextElementsPageCancelRequest","loadNextElementsPageCancel","selectWorkingSelection","working","selectIsWorkingSelectionInverted","selectCommittedSelection","commited","selectIsCommittedSelectionInverted","selectInvertableWorkingSelection","selectInvertableCommittedSelection","selectIsWorkingSelectionChanged","isWorkingSelectionInverted","workingSelection","isCommitedSelectionInverted","commitedSelection","selectIsWorkingSelectionEmpty","selectionReducers","changeSelection","revertSelection","committedSelection","isCommittedSelectionInverted","commitSelection","invertSelection","clearSelection","elementsReducers","setElementsTotalCount","initTotalCount","initTotalCountStart","totalCountInitialization","initTotalCountSuccess","initTotalCountError","initTotalCountCancel","setElementsTotalCountWithCurrentSettings","setOffset","setLimit","setOrder","order","setLimitingAttributeFilters","limitingAttributeFilters","setLimitingMeasures","limitingMeasures","setLimitingDateFilters","limitingDateFilters","setLimitingAttributeFiltersAttributes","limitingAttributeFiltersAttributes","rootReducers","attributeFilterSlice","sliceReducer","getAttributeFilterContext","selectAttributeFilterElementsForm","selectHiddenElements","hiddenElements","selectHiddenElementsAsAttributeElements","selectAttributeFilterDisplayForm","selectAttributeFilterElements","selectAttributeFilterElementsWithHiddenElementsResolved","updatedSelection","selectAttribute","selectAttributeStatus","selectAttributeError","loadAttributeWorker","loadAttributeSaga","correlation","getElementsByKeys","elementsMap","selectElementKeys","selectElementsCache","selectElements","selectElementsTotalCount","selectInitTotalCountStatus","selectInitTotalCountError","selectElementsTotalCountWithCurrentSettings","selectStaticElements","staticElements","selectSearch","selectOrder","selectLimit","selectOffset","selectLimitingAttributeFilters","selectLimitingMeasures","selectLimitingDateFilters","selectLoadElementsOptions","selectLastLoadedElementsOptions","selectLimitingAttributeFiltersAttributes","InMemoryPaging","pageIndex","compareFn","resolveHiddenElements","resolveSelectedElements","resolveStringFilter","isElementUrisSupported","loadElements","hiddenElementsInfo","resolvedElements","loadElementsFromStaticElements","includeTotalCountWithoutFilters","excludePrimaryLabel","signal","isInitialSelectionRequest","elementValues","forItems","executionDataView","dataViewFacade","headers","attributeHeaders","loadElementsAsExecution","loaderOptions","withOffset","withDateFilters","effectiveLimitingAttributeFilters","getLimitingAttributeFilters","withAttributeFilters","withMeasures","withSignal","loadElementsFromBackend","elementsSaga","attributeFilterDisplayFormRef","elementsQueryResult","loadLimitingAttributeFiltersAttributes","limitingAttributeFilter","loadInitialElementsPageWorker","loadInitialElementsPageSaga","abortController","AbortController","loadOptionsWithExcludePrimaryLabel","abort","selectLoadNextElementsPageStatus","selectLoadNextElementsPageError","selectLoadNextElementsPageOptions","selectHasNextPage","selectIsLoadElementsOptionsChanged","loadNextElementsPageWorker","loadNextElementsPageSaga","loadCustomElementsWorker","loadCustomElementsSaga","anotherRequest","initAttributeSaga","success","initSelectionSaga","initSelectionCorrelation","initAttributeElementsPageSaga","initTotalCountSaga","initTotalCountCorrelation","isLimitingAttributeFiltersEmpty","initWorker","initSaga","loadTotal","sagas","saga","initTotalCountWorker","nonSerializableActions","selectInitStatus","selectInitError","selectLoadInitialElementsPageStatus","selectLoadInitialElementsPageError","logError","activity","cause","getCause","formattedCause","newCallbackHandler","subscribers","invoke","cb","AttributeFilterReduxBridge","initializeBridge","registerCallback","registrations","unsubscribeAll","registeredCallbacks","selectionChanged","selectionCommitted","update","registerFn","registeredCallback","unsubscribe","newCallbackRegistrationsWithGlobalUnsubscribe","eventListener","newAttributeFilterCallbacks","redux","attributeFilterContext","elementKeys","preloadedState","cancelRootSaga","createAttributeFilterHandlerStore","getInitStatus","getInitError","onInitStart","onInitSuccess","onInitError","onInitCancel","getInitTotalCountStatus","getInitTotalCountError","onInitTotalCountStart","onInitTotalCountSuccess","onInitTotalCountError","onInitTotalCountCancel","loadAttribute","cancelAttributeLoad","getAttributeStatus","getAttributeError","onLoadAttributeStart","onLoadAttributeSuccess","onLoadAttributeError","onLoadAttributeCancel","loadInitialElementsPage","cancelInitialElementsPageLoad","getInitialElementsPageStatus","getInitialElementsPageError","onLoadInitialElementsPageStart","onLoadInitialElementsPageSuccess","onLoadInitialElementsPageError","onLoadInitialElementsPageCancel","loadNextElementsPage","getNextElementsPageStatus","getNextElementsPageError","onLoadNextElementsPageStart","onLoadNextElementsPageSuccess","onLoadNextElementsPageError","onLoadNextElementsPageCancel","loadCustomElements","onLoadCustomElementsStart","onLoadCustomElementsSuccess","onLoadCustomElementsError","onLoadCustomElementsCancel","getOffset","getSearch","getLimit","getOrder","getLimitingMeasures","getLimitingDateFilters","getAllElements","getElementsByKey","elementsCache","getTotalCount","getTotalCountWithCurrentSettings","getLimitingAttributeFiltersAttributes","changeMultiSelection","revertMultiSelection","commitMultiSelection","invertMultiSelection","clearMultiSelection","getWorkingMultiSelection","getCommittedMultiSelection","changeSingleSelection","revertSingleSelection","commitSingleSelection","getWorkingSingleSelection","maybeMoreElements","getCommittedSingleSelection","onMultiSelectionChanged","onMultiSelectionCommitted","onSingleSelectionChanged","onSingleSelectionCommitted","getIsWorkingSelectionEmpty","getIsWorkingSelectionChanged","getFilter","onUpdate","isLoadElementsOptionsChanged","cancelNextElementsPageLoad","cancelCustomElementsLoad","AttributeFilterLoader","validateStaticElementsLoad","bridge","getTotalElementsCount","getTotalElementsCountWithCurrentSettings","MultiSelectAttributeFilterHandler","getWorkingSelection","isWorkingSelectionEmpty","isWorkingSelectionChanged","getCommittedSelection","onSelectionChanged","onSelectionCommitted","SingleSelectAttributeFilterHandler","firstItem","sanitizeConfig","PARENT_FILTERS_CORRELATION","MAX_SELECTION_SIZE","useAttributeFilterController","backendInput","workspaceInput","filterInput","connectToPlaceholder","parentFilterOverAttribute","resetOnParentFilterChange","elementsOptions","selectFirst","setConnectedPlaceholderValue","resolvedPlaceholder","setPlaceholderValue","resolvedPlaceholderValue","resoledPlaceholderValue","updatedValue","Function","usePlaceholder","useResolveFilterInput","setInvalidate","invalidate","handlerRef","createNewHandler","newHandler","newAttributeFilterHandler","useAttributeFilterHandler","attributeFilterControllerData","handlerState","initStatus","committed","isChanged","useAttributeFilterHandlerState","isInitializing","initialElementsPageStatus","initialElementsPageError","isLoadingInitialElementsPage","nextElementsPageStatus","nextElementsPageError","isLoadingNextElementsPage","totalElementsCount","totalElementsCountWithCurrentSettings","workingSelectionElements","committedSelectionElements","nextElementsPageSize","isApplyDisabled","isParentFiltersEmpty","isFilteredByParentFilters","setIsFiltering","callbackUnsubscribeFunctions","handleFilteringStart","handleFilteringEnd","useIsFiltering","parentFilterAttributes","currentDisplayFormRef","useAttributeFilterControllerData","forcedInitErrorProp","hasEmptyParentFilters","isPositiveWithMaxOneElement","isValidSingleSelectionFilter","handleError","useOnError","limitingAttributesChanged","filterChanged","nextFilter","updateAutomaticResettingFilter","updateNonResettingFilter","refreshByType","useInitOrReload","onApplyInput","isElementsByRef","onLoadNextElementsPage","onReset","useCallbacks","useSingleSelectModeHandler","committedSelectionKeys","AttributeFilterContext","useAttributeFilterContext","AttributeFilterContextProvider","fullscreenOnMobile","titleInput","controller","AttributeFilterElementsSelect","totalItemsCountWithCurrentSettings","nextPageSize","parentFilterTitles","isAdaptiveHeight","previousItemsCount","loadingHeight","DEFAULT_DROPDOWN_BODY_WIDTH","AttributeFilterEmptySearchResult","NoData","noDataLabel","AttributeFilterEmptyAttributeResult","AttributeFilterAllValuesFilteredResult","strong","AttributeFilterFilteredStatus","tooltipText","AttributeFilterSelectionStatus","CustomizableCheckmark","transform","SingleSelectionAttributeFilterElementsSelectItem","onItemClick","itemTitle","SingleSelectionAttributeFilterElementsSelectActions","SingleSelectionAttributeFilterStatusBar","SingleSelectionAttributeFilterDropdownActions","AttributeFilterDefaultComponents","onApplyButtonClick","onCancelButtonClick","onSelectWithPotentialClose","onOnlyItemClick","renderEmptyResult","AttributeFilterProviders","DefaultComponents","getAttributeFilterDefaultComponents","AttributeFilterButtonErrorTooltip","errorMessage","AttributeFilterDropdown","isCommittedSelectionEmpty","isNegativeSelection","isPositiveSelection","useResolveAttributeFilterSubtitle","enableEventPropagation","AttributeFilterBase","validateAttributeFilterProps","AttributeFilterButton","useParentFilters","allAttributeFilters","parentFiltersData","matchingFilter","_parentFilter","ConfigurationCategory","categoryTitle","ConfigurationPanelHeader","ARROW_OFFSET","ParentFiltersDisabledItem","itemLocalId","hasConnectingAttributes","itemDisplayForm","itemAttribute","currentFilterTitle","itemClasses","childTitle","parentTitle","ConnectingAttributeItem","ConnectingAttributeDropdown","selectedConnectingAttributeRef","connectingAttributes","selectedConnectingAttribute","ParentFiltersListItem","onConnectingAttributeSelect","showConnectingAttributeSelect","activeItemClasses","ParentFiltersList","setParents","onConnectingAttributeChanged","disabledTooltip","AttributeDisplayFormDropdownButton","isOpened","AttributeDisplayFormDropDownItem","AttributeDisplayFormsDropdown","selectedDisplayFormTitle","AttributeFilterParentFiltering","useAttributeFilterParentFiltering","AttributeFilterParentFilteringProvider","memoizedAttributes","neighborFilters","filterDisplayForm","configurationChanged","onParentSelect","onParentFiltersChange","onConfigurationClose","onParentFiltersClose","saveParentFilterCommand","neighborFilter","neighborFilterDisplayForm","neighborFilterTitle","by","overAttributes","useOriginalConfigurationState","parentItem","changedParentIndex","changedParentItems","selectedAttribute","useParentsConfiguration","onDisplayFormSelect","filterDisplayForms","displayFormChanged","onDisplayFormChange","onDisplayFormClose","displayFormChangeStatus","changeDisplayForm","originalDisplayForm","setFilterDisplayForms","currentDisplayForm","availableDisplayForms","attributeAvailableDisplayForms","updatedDisplayForms","old","useDisplayFormConfiguration","titleChanged","titleChangeStatus","onTitleUpdate","onTitleReset","onTitleClose","setTitle","updatedTitle","useTitleConfiguration","selectionModeChanged","onSelectionModeChange","onSelectionModeUpdate","onSelectionModeClose","originalSelectionMode","setSelectionMode","useSelectionModeConfiguration","onConfigurationSave","showDisplayFormPicker","showResetTitle","AttributeTitleRenaming","resetTitleText","SelectionModeItem","SelectionModeButton","SelectionMode","selectionTitleText","multiSelectionOptionText","singleSelectionOptionText","singleSelectionDisabledTooltip","selectionOptionTitleMap","multi","single","filterByText","displayValuesAsText","titleText","parentFiltersDisabledTooltip","closeHandler","isDependentFiltersEnabled","neighborFilterDisplayForms","connectingAttributesLoading","currentFilterDisplayForm","neighborFiltersDisplayForms","pairs","neighborDisplayForm","getConnectingAttributes","connectingAttributesStatus","connectingAttributesError","useConnectingAttributes","parentsSelected","AttributeFilterDeleteButton","AttributeFilterConfigurationButton","onConfiguration","CustomAttributeFilterDropdownActions","onConfigurationButtonClick","onDeleteButtonClick","filterDisplayFormRef","filterSelectionMode","isDeleteButtonEnabled","isConfigButtonVisible","attributesMap","useIsConfigButtonVisible","CustomConfigureAttributeFilterDropdownActions","isSaveDisabled","onSaveButtonClick","saveText","useAttributeDataSet","loadQuery","getAttributeDataSet","attributesDataSetLoadingStatus","attributesDataSetLoadingError","attributesDataSetLoading","DefaultDashboardAttributeFilter","isConfigurationOpen","setIsConfigurationOpen","handleRemoveAttributeFilter","onCloseFilter","CustomDropdownButton","isAutoOpen","isOpenPrevious","useAutoOpenAttributeFilterDropdownButton","useOnCloseAttributeFilterDropdownButton","displayAttributeTooltip","CustomTooltipComponent","CustomDropdownActions","CustomElementsSelect","newFilter","attributeFilterToDashboardAttributeFilter","getLocalizedDateFormat","localizedMoment","localeData","_longDateFormat","L","localizedIcuDateFormatPatterns","IS_MOBILE_DEVICE","range","lower","upper","getQueryMatching","DateFilterButton","DateFilterTextLocalized","DateFilterButtonLocalized","MediaQuery","restProps","ExcludeCurrentPeriodToggleLabel","ExcludeCurrentPeriodToggle","VisibleScrollbar","AllTimeFilterItem","selectedFilterOption","onSelectedFilterOptionChange","DateFilterFormWrapper","getPlatformStringFromDate","DateRangePickerError","errorId","DateRangePickerInputFieldBody","invokeInputMethod","DateTimePickerComponent","placeholderDate","handleDayClick","pickerTime","setPickerTime","getTimeStringFromDate","setInputValue","previousDate","adjustDate","handleInputChange","isValid","DateTimePickerWithInt","DateRangePickerComponent","dateRangePickerInputFrom","dateRangePickerInputTo","dateRangePickerContainer","handleRangeSelect","_range","calculatedFrom","calculatedTo","selectedInput","setTimeForDate","inputFromValue","inputToValue","selectedRange","updateRange","onRangeChange","handleFromDayClick","handleToDayClick","handleFromChange","handleToChange","dayPickerProps","errorFrom","errorTo","shouldOverlayDatePicker","dayPickerPropsWithDefaults","modifiers","userProps","defaultModifiers","userModifiers","mergeDayPickerPropsBody","classNameProps","DatePicker","OverlayDatePicker","FromField","ToField","DatePickerComponent","isFromInputDatePickerOpen","isToInputDatePickerOpen","DateRangePicker","dateFilterValueToDateRange","isTimeForAbsoluteRangeEnabled","isFromTimeDefined","isToTimeDefined","AbsoluteDateFilterForm","handleRangeChange","parsingFormat","dateRangeToDateFilterValue","ListItemTooltip","TabsWrapper","Tab","granularityOrders","GranularityTabs","onSelectedGranularityChange","selectedGranularity","itemToString","SelectOption","SelectHeading","otherProps","Separator","SelectSeparator","itemHeightByTypeMap","heading","separator","getItemHeight","getMedianIndex","VirtualizedSelectMenu","listRef","scrollToIndex","highlightedIndex","highlightedOption","actualItemIndex","scrollToTop","scrollTo","lastProps","setHighlightedIndex","lastSelectibleLastItemIndex","selectiblelastItemIndex","isHighlightLoopedBack","isHighlightLoopedForward","isInputValueEmpty","isInputValueReset","isInputValueChanged","medianIndex","hasOnlyOneItem","getItemProps","getMenuProps","optionClassName","visibleItemsRange","selectableOptions","optionGetter","middleItemIndex","listHeight","totalHeight","itemCount","overscanCount","estimatedItemSize","emptyInputInfo","inputCategory","tooBigInputInfo","granularityOffsetLimits","getOption","dateCode","offsetCode","getOptionsForOffsets","offsets","getFullTextMatches","trimmedInput","coreOffsets","absOffset","getFullTextOptions","getNoMatchOptions","findRelativeDateFilterOptionByValue","getRelativeDateFilterItems","getTrimmedInput","inputInfo","numericMatch","numericText","numericValue","isOnlyNumber","parseInput","optionRange","negativeOptions","positiveOptions","getDefaultOptions","getTooBigOptions","getOptionsByNumber","Downshift","DynamicSelect","defaultItems","getItems","onInputValueChanged","onBlurHandler","selectItem","customValueValidator","onChangeHandler","initialIsOpen","itemsByValue","selectableItems","defaultHighlightedIndex","getInputProps","effectiveHighlightedIndex","RelativeRangePickerComponent","toFieldRef","isTouchDevice","navigator","maxTouchPoints","focusToField","blurToField","RelativeRangePicker","RelativeDateFilterForm","ListHeading","RelativePresetTitleTranslated","intlDesc","granularityOrder","RelativePresetFilterItems","EditModeMessage","DateFilterHeader","changeRoute","DateFilterBodyButton","AbsolutePresetFilterItems","filterOptions","ITEM_CLASS_MOBILE","DateFilterBody","route","renderAllTime","renderAbsoluteForm","isOnRoute","renderRelativeForm","renderAbsolutePreset","renderRelativePreset","renderExcludeCurrent","onExcludeCurrentPeriodChange","isExcludeCurrentPeriodEnabled","calculateHeight","showExcludeCurrent","innerHeight","excludeOpenPeriodHeight","onApplyClick","dateFilterButton","bodyHeight","wrapperStyle","scrollerStyle","renderMobileContent","renderDefaultContent","adjustDateFormatForDisplay","DateFilterCore","originalSelectedFilterOption","originalExcludeCurrentPeriod","onDropdownOpenChanged","dropdownBodyProps","verifiedDateFormat","verifyDateFormat","filteredFilterOptions","DateFilter","initSelectedFilterOption","initExcludeCurrentPeriod","getStateFromProps","canExcludeCurrent","handleApplyClick","normalizedSelectedFilterOption","onChangesDiscarded","onCancelClicked","handleExcludeCurrentPeriodChange","handleSelectedFilterOptionChange","getStateFromSelectedOption","checkInitialFilterOption","DefaultDashboardDateFilter","lastSelectedOptionId","setLastSelectedOptionId","availableOptions","preferredOptionId","preferredOption","findDateFilterOptionByValueAndType","matchDateFilterToDateFilterOption","matchDateFilterToDateFilterOptionWithPreference","exclude","tempDateDatasetId","afmFilter","dateFilterOptionToDashboardDateFilter","formatLocale","getLocalizedIcuDateFormatPattern","supportsTimeGranularities","DefaultAttributeFilterDraggingComponent","identifierOrUriRef","isDisplayFormEqual","selectFilterAttribute","AddAttributeFilterButton","rootClassNames","AttrTooltipElements","remainingElementsCount","AttributeListItemTooltipContent","attributesElementsLoading","AttributeListItemTooltip","isHover","setIsHover","getAttributeElements","attributeElementsLoadingStatus","attributeElementsLoadingError","useAttributeElements","TOOLTIP_ALIGN_POINT","isLocationIconEnabled","isDisplayLocationIcon","SUPPORTED_LOCATION_ICON_CHART_TYPES","it","AttributesDropdown","searchQuery","setSearchQuery","shouldDisplayLocationIcon","onDropdownStateChange","dropdownClassName","filteredMeasures","DraggableCreatePanelItem","WrapCreatePanelItemWithDragComponent","DraggableAttributeFilterCreatePanelItem","CreatePanelItemComponent","AddAttributeFilterPlaceholder","CreatableAttributeFilter","hasAttributes","DefaultDashboardAttributeFilterComponentSetFactory","attributeFilterProvider","CreatePanelListItemComponent","priority","dragging","DraggingComponent","getDrillDownAttributeTitle","intersectionElement","intersectionAttributeItem","DrillType","DRILL_ICON_NAME","DRILL_DOWN","DrillSelectListItem","attributeValue","IconComponent","attributeLabel","DrillSelectList","drillDownItems","renderItems","renderDrillDownItems","renderDrillItems","DrillSelectListBody","DrillSelectDropdown","dropDownAnchorClass","drillSelectItems","createDrillSelectItems","dashboardList","totalDrillToUrls","drillTitle","targetInsight","getDashboardTitle","drillToUrlOrigin","unhandledDefinition","useDrill","useDrillDown","useDrillToInsight","useDrillToDashboard","useDrillToAttributeUrl","useDrillToCustomUrl","useDrillToLegacyDashboard","WithDrillSelect","onDrillDownSuccess","onDrillToInsightSuccess","onDrillToDashboardSuccess","onDrillToAttributeUrlSuccess","onDrillToCustomUrlSuccess","drillPickerId","dropdownProps","setDropdownProps","onDrillSuccess","onDrillError","onDrillDown","onDrillDownError","onDrillToInsight","onDrillToInsightError","onDrillToDashboard","onDrillToDashboardError","onDrillToAttributeUrl","onDrillToAttributeUrlError","onDrillToCustomUrl","onDrillToCustomUrlError","onDrillToLegacyDashboard","onDrillToLegacyDashboardSuccess","onDrillToLegacyDashboardError","useDrills","filteredByPriority","uniqueDrillDefinitions","drillOriginsWithoutImplicitDrills","filterDrillFromAttributeByPriority","effectiveDrillEvent","effectiveCorrelationId","effectiveInsight","drillDownDropdown","useResolveDashboardInsightProperties","fromWidget","fromWidgetWithZoomingHandled","fromInsight","incomingValue","useWidgetFilters","effectiveFiltersState","setEffectiveFiltersState","filterQueryStatus","nonIgnoredFiltersStatus","nonIgnoredFiltersError","nonIgnoredFilters","widgetIgnoresDateFilter","nonIgnoredFilterState","setNonIgnoredFilterState","nonIgnoredFilterRefs","nonIgnoredFilterStatus","prevValue","filtersDigest","validRef","useNonIgnoredFilters","runFiltersQuery","firstStatus","secondStatus","ignoreDateFilter","CompactContentError","fullHeightWidthStyle","ErrorContainer","ExecuteProtectedError","fullContent","DataTooLargeError","NoDataError","OtherError","CustomError","isCustomWidgetHeightEnabled","forceFullContent","shorter","longer","shouldRenderFullContent","InsightBody","RendererComponent","selectCommonDashboardInsightProps","selectChartConfig","isExportMode","forceDisableDrillOnAxes","onDrillFn","CustomErrorComponent","CustomLoadingComponent","executionsHandler","chartConfig","isVisualizationLoading","setIsVisualizationLoading","visualizationError","setVisualizationError","handleLoadingChanged","filtersForInsight","filtersStatus","filtersError","insightWithAddedFilters","insightWithAddedWidgetProperties","isDrillFromAttributeEnabled","sanitizeAvailableDrillTargets","rawDrillableItems","implicitDrillDefinitions","matchingImplicitDrillDefinitions","useDashboardInsightDrills","handlePropertiesPushData","columnWidths","isSupportedWidgetProperties","useHandlePropertiesPushData","handlePushData","isPositionRelative","effectiveError","insightPositionStyle","insightWrapperStyle","isZoomable","zoomable","pushData","DashboardInsightWithDrillSelect","getHref","isPoweredByGDLogoPresent","PoweredByGDLogo","isPresent","showDropdown","toggleShowDropdown","DrillModalFooter","exportAvailable","setShowDropdown","handleOnExportXLSX","handleOnExportCSV","exportDisabled","toggleButton","getTitleWithBreadcrumbs","insightTitle","breadcrumbs","DrillDialog","onCloseDialog","onBackButtonClick","isBackButtonVisible","shouldShowDrilledInsightExport","enableDrilledInsightExport","titleWithBreadcrumbs","insightStyle","DrillDialogInsight","setDrillTargets","useDrillDialogInsightDrills","ThemedLoadingEqualizer","overlayIgnoredClasses","DRILL_MODAL_EXECUTION_PSEUDO_REF","InsightDrillDialog","baseInsightTitle","OverlayComponent","DashboardInsightWithDrillDialog","drillSteps","setDrillSteps","activeDrillStep","setNextDrillStep","drillStep","goBack","firstDrill","DefaultDashboardInsight","DefaultInsightBody","InsightRenderer","DashboardInsightMenuButton","optionsIconClasses","DefaultDashboardInsightMenuButton","nonExportableVisTypes","LegacyDashboardInsightMenuButton","onOptionsMenuClick","areExportsEnabled","hasExportReportPermissions","isExportableVisType","widgetRefValue","objRefAsString","DashboardInsightMenuTitle","InsightMenuTitleComponent","itemsWrapperStyle","DashboardInsightMenuContainer","DashboardInsightMenuItemButton","submenu","button","renderButtonWithTooltip","subMenu","DashboardInsightSubmenuHeader","onHeaderClick","screenWrapperStyle","DashboardInsightSubmenuContainer","onBack","arrowDirections","DashboardInsightMenuBubble","isSubmenu","overlayClassName","ConfigurationBubble","DashboardInsightEditMenuBubble","DashboardInsightMenuBody","setSubmenu","DashboardInsightMenuRoot","DashboardInsightMenu","DefaultDashboardInsightMenu","LegacyInsightMenuItem","bubbleId","ignoredOutsideClickClasses","LegacyDashboardInsightMenu","exportWidgetRefAsString","OriginalInsightTitle","DefaultDashboardInsightMenuTitle","titlesDiffer","renderedTitle","filterMetadata","translateDateFilter","metadata","getIntlIdRoot","hasOneBoundToday","isLastOneX","isNextOneX","Spinner","generateSpinnerTicks","spinnerClasses","KpiAlertDialogDateRange","translationData","intlIdRoot","rangeText","getKpiAlertTranslationData","calendarIcon","kpiAlertDialogAlignPoints","kpiAlertDialogMobileAlignPoints","WrappedFilterLabel","hasEllipsis","labelRef","checkEllipsis","getIsDate","isDate","isAllSelected","renderSelectionLabel","renderSelection","noData","selectionSize","renderTitle","renderSelectedElements","FilterLabel","KpiAlertDialogBrokenFiltersSection","contentClassNames","filterProps","dateFilterTitle","KpiAlertDialogBrokenFilters","brokenFilters","deletedFilters","getNumberOfDecimalPlaces","num","sanitizeValue","evaluateAlertTriggered","kpiMeasureResult","threshold","sanitizedValue","sanitizedThreshold","KpiAlertDialogWhenTriggeredPicker","onWhenTriggeredChange","whenTriggered","alertTypeItems","DEFAULT_WHEN_TRIGGERED","KpiAlertDialogWrapper","KpiAlertDialog","saveButton","onCloseClick","onAlertDialogCloseClick","alertType","saveKpiAlert","parseFloat","isThresholdRepresentingPercent","numberOfDecimalPlaces","numberOfWantedDecimalPlaces","thresholdFromPercentToDecimal","isAlertValid","isAlertEmpty","onAlertDialogSaveClick","deleteKpiAlert","onAlertDialogDeleteClick","applyAlertFilterSetting","onApplyAlertFiltersClick","getVisualThreshold","focusThresholdInput","isAlertLoading","isKpiFormatLoading","renderDialogBox","renderAttributeFiltersInfo","attributeFilterCount","numFilters","thresholdFromDecimalToPercent","renderDialogContent","renderDeleteLink","alertDeletingStatus","isDeleting","deleteButtonTitle","renderUpdateButton","alertUpdatingStatus","onAlertDialogUpdateClick","isUpdating","updateButtonTitle","renderBrokenAlert","brokenAlertFilters","renderUpdatingErrorMessage","renderDeletingErrorMessage","isAlertDialogOpening","thresholdPlaceholder","userEmail","inputSuffix","emailMe","onEscKeyPress","onEnterKeyPress","suffix","renderFiltersDifferMessage","renderValidationMessage","renderSavingErrorMessage","getSaveButtonTitle","isSavingEnabled","renderDateFilterInfo","emailInfo","filtersDiffer","appliedDateFilter","isKpiAlertDateFilterSameAsDashboard","alertAttributeFiltersWithoutEmpty","appliedAttributeFiltersWithoutEmpty","negativeSelectionSame","filterElements","elementsSame","areKpiAlertAttributeFiltersSameAsDashboard","alertSavingStatus","getUpdatingOrSavingTitle","getUpdateOrSetTitle","inputNodeRef","thresholdInputElement","brokenAlertFiltersBasicInfo","brokenAlertFiltersMeta","filtersToLoad","filterDataPromise","attributesService","elementsQueryOptions","attributeFiltersMeta","validElements","useBrokenAlertFiltersMeta","dateDataSets","brokenFilter","selectedCount","enrichBrokenAttributeFilter","matchingDateDataset","enrichBrokenDateFilter","enrichBrokenAlertsInfo","useKpiAlertOperation","DashboardItemKpi","KpiDescriptionTrigger","metrics","getKpiMetricDescription","kpiRefAsString","disabledBubbleAlignPoints","enabledBubbleAlignPoints","DashboardItemWithKpiAlert","timeouts","isScrolledToHighlightedAlert","isKpiAlertAfterSaving","isKpiAlertAfterDeleting","isAlertHighlighted","renderAlertBox","isAlertingTemporarilyDisabled","effectiveDateFilter","isAlertingTemporarilyDisabledForGivenFilter","alertIconClasses","isReadOnlyMode","canSetAlert","getBubbleMessage","onAlertDialogOpenClick","updateStatePropertyForTime","isKpiAlertSaved","isKpiAlertDeleted","getClientRects","rect","win","ownerDocument","defaultView","pageYOffset","getNodeDocumentRelativeOffsetTop","clearUpdatingTimeout","getClassNames","kpiAlertResult","hasEvaluationResult","alertExecutionError","isAlertDialogOpen","isTriggered","suppressAlertTriggered","isAlertBroken","isAlertExecutionLoading","kpiClassName","classnames","renderAlertDialog","suppressDescriptionTrigger","isExecutionConfiguration","seriesBy","useExecutionDataView","effectiveDeps","propsToResolve","getExecutionConfigurationProps","slicesBy","totals","sortBy","prevValues","hash","useMultiValueMemoStringify","useResolveValuesWithPlaceholders","placeholdersResolutionContext","preparedExecution","seriesOnlyDim","slices","seriesAndSlicesDim","withSorting","withDimensions","createExecution","fingerprint","useKpiExecutionDataView","primaryMeasure","secondaryMeasure","shouldLoad","getSeriesResult","series","dataPoints","rawValue","getKpiResult","valueFormatter","primarySeries","firstForMeasure","measureDescriptors","secondarySeries","measureDescriptor","measureFormat","measureForComparisonResult","getKpiResultInner","getNoDataKpiResult","stripDateDatasets","HYPHEN","formatMetric","number","convertedValue","formattedValue","isValueUnhandledNull","nullConditionFormatter","NO_DATA_PLACEHOLDER","KpiValue","getKpiValueClassNames","enableCompactSize","getKpiCustomHeightStyles","hasComparison","TransitionGroup","CSSTransition","renderValue","disableKpiDrillUnderline","renderFormattedValue","valueClassNames","ResponsiveText","errorHelp","LIMIT","getPercentage","previous","percentageValue","POSITIVE_INFINITY","NEGATIVE_INFINITY","percent","getPercentageValue","KpiPop","kpiSectionItemNode","renderPercentage","popInfo","trend","meaning","percentage","getTrend","trendMeaning","isTrendPositive","isTrendNegative","getMeaning","getPopInfo","previousPeriodValue","currentPeriodValue","tagClassName","renderPercentageValue","renderPreviousPeriod","renderPreviousPeriodValue","renderPreviousPeriodName","HeadlinePagination","renderSecondaryItem","renderTertiaryItem","getKpiSectionClassName","previousPeriodName","responsiveClassName","KpiContent","renderPeriodOverPeriod","kpiResult","isDateFilterNotRelevant","isDateFilterAllTime","popLabel","getRelativeFilterKpiPopLabel","getGeneralKpiPopLabel","getKpiPopLabel","popDisabled","isNoData","comparisonMeaning","isKpiValueClickDisabled","onKpiValueClick","kpiValue","isKpiUnderlineHiddenWhenClickable","KpiRenderer","disableDrillUnderline","isDrillable","onPrimaryValueClick","KpiExecutor","kpiWidgetRef","alertExecutionResult","alertExecutionStatus","openAlertDialog","closeAlertDialog","brokenAlertsBasicInfo","runBrokenAlertsQuery","useWidgetBrokenAlertsQuery","rawData","handleOnDrill","kpiAlertOperations","creatingStatus","onCreateAlert","updatingStatus","onUpdateAlert","removingStatus","onRemoveAlerts","onRemoveAlert","useKpiAlertOperations","alertSeries","getKpiAlertResult","getAlertThresholdInfo","onDrillHandler","useKpiData","dateDatasetsMap","periodsAgo","relevantDateDataset","yearAttribute","getSecondaryMeasure","DashboardKpiCore","customBackend","customWorkspace","kpiData","useKpiDrill","handleDrillToLegacyDashboard","handleDrill","DefaultDashboardKpiWithDrills","EditableKpiHeadline","onTitleEditingEnd","DefaultDashboardKpi","KpiConfigurationComponent","WidgetConfigPanelComponent","isChangingMeasure","titleToShow","updatingMeasureRef","setUpdatingMeasureRef","currentMeasure","updatingMeasure","onMeasureChangingStarted","onMeasureChangingEnded","useOptimisticMeasureUpdate","kpiDataError","kpiDataResult","kpiDataStatus","coordinates","onWidgetDelete","isClickEnabled","handlePanelClosed","DraggableInsightListItem","ListItemComponent","listItemComponentProps","WrapInsightListItemWithDragComponent","DraggableInsightListItemBody","DraggableInsightListItemWrapper","InsightDraggingComponent","visualizationType","DefaultDashboardInsightComponentSetFactory","insightProvider","KpiDraggingComponent","none","previousPeriod","directionOrder","KpiComparisonTypeDropdown","onComparisonTypeChanged","growIsBad","growIsGood","KpiComparisonDirectionDropdown","onComparisonDirectionChanged","KpiComparison","handleComparisonTypeChanged","newComparisonType","handleComparisonDirectionChanged","newComparisonDirection","KpiWidgetDateDatasetFilter","MetricDropdownItem","unlistedTitle","unlistedIconTitle","unlistedIcon","effectiveTitle","metricItemClassNames","MetricDropdown","buttonRef","debouncedOnSearch","newSearchQuery","winHeight","dropdownButtonBottom","KpiMetricDropdown","onMeasureChange","selectedMeasure","setSelectedMeasure","handleMeasureChanged","KpiConfigurationPanelHeader","onCloseButtonClick","KpiConfigurationMessages","numberOfAlerts","numAlerts","DrillToDropdownButton","buttonClasses","KpiDrillConfigurationCore","onDrillToSelect","onDrillToRemove","drillToItem","UNLISTED_DASHBOARD_TAB","drillToItems","sortedDashboards","foundDrillToItem","selectedDrillToItem","CONFIG_PANEL_INNER_WIDTH","KpiDrillConfiguration","kpiDescription","metricDescription","useMetricDescription","KpiDescriptionConfig","isKpiDescriptionEnabled","setKpiDescription","kpiDescriptionState","setKpiDescriptionState","lastCustomKpiDescription","setLastCustomKpiDescription","KpiConfigurationPanelCore","runAlertNumberQuery","isNumOfAlertsLoaded","configurationCategoryClasses","scrollablePanelClasses","sectionHeaderClasses","KpiPlaceholderConfigurationPanel","measuresMap","replaceKpiProcessing","DefaultDashboardKpiPlaceholderWidget","wasSelected","DraggableKpiCreatePanelItem","AddKpiWidgetButton","CreatableKpi","hasMeasures","DefaultKpiConfigurationPanel","measureTitle","DefaultDashboardKpiComponentSetFactory","kpiProvider","ExportDialogBase","onFilterContextChange","onMergeHeadersChange","filterContextText","filterContextTitle","mergeHeadersDisabled","mergeHeadersText","mergeHeadersTitle","filterContextCheckbox","ExportDialog","ExportDialogProvider","originalOnClose","TopBar","SaveAsDialog","FilterBar","ShareDialogDashboardHeader","isShareDialogOpen","onCloseShareDialog","onApplyShareDialog","onErrorShareDialog","onInteractionShareDialog","isWorkspaceManager","runChangeSharing","useShareDialogDashboardHeader","ScheduledEmailDialog","ScheduledEmailDialogProvider","deleteMessages","alertsAndEmails","emails","DefaultDeleteDialog","isDrillToDashboardEnabled","DeleteDialog","DefaultKpiDeleteDialog","KpiDeleteDialog","useCancelEditDialog","DefaultCancelEditDialog","CancelEditDialog","Messages","onMessageClose","expandedMessageIds","setExpandedMessageIds","expandedId","component","showMore","intensive","MessageWithShowMore","shouldShowMore","handleShowMore","MessageSimple","showLess","errorDetail","off","on","showMoreLinkClassNames","MessageElement","dangerouslySetInnerHTML","__html","commonReplacements","localizationMessages","invalidDrillTitle","invalidDrillBody","invalidUrlDrillTitle","invalidUrlDrillBody","DRILL_MESSAGE_ID","URL_DRILL_MESSAGE_ID","ToastMessages","toastMessages","removeToastMessage","removeDrillValidationMessage","invalidUrlDrillWidgetRefs","invalidDrillWidgets","invalidUrlDrillWidgets","listOfWidgetTitles","useDrillValidationMessages","DeleteDialogWrapper","deleteDialogProps","useDeleteDialogProps","KpiDeleteDialogWrapper","kpiDeleteDialogProps","useKpiDeleteDialogProps","SaveAsDialogWrapper","saveAsDialogProps","TopBarWrapper","topBarProps","FilterBarWrapper","filterBarProps","CancelEditDialogWrapper","cancelEditDialogProps","DashboardHeader","workspaceValidationMessagesMapping","ConflictingIdentifiers","NO_CONFIG","NoVisibleOptions","SelectedOptionInvalid","TOO_MANY_CONFIGS","projectValidationMessagesMapping","validationsRelevantToNewDashboardOnly","selectRelevantWarnings","DateFilterConfigWarnings","effectiveMapping","DashboardMainContent","DashboardSidebar","DeleteDropZoneComponent","FlexDimensions","wrapperRef","updateSize","throttledUpdateSize","getChildrenDimensions","setWidth","measureWidth","measureHeight","renderChildren","DraggableInsightListCore","remainingProps","DraggableInsightList","recalculateSizeReference","flexRef","CreationPanel","supportsKpis","isAnalyticalDesignerEnabled","addItemPanelItems","SidebarConfigurationPanel","configurationPanelClassName","RenderModeAwareDashboardSidebar","SCROLLING_ITEM_TYPES","ScrollingDirection","useDashboardDragScroll","stickyHeaderRef","stickyFooterRef","scrollingDirection","setScrollingDirection","dragDropManager","useDragDropManager","getMonitor","subscribeToOffsetChange","clientOffset","getSourceClientOffset","headerCoordinations","footerCoordinations","contentCoordinations","Up","Down","delay","savedCallback","useLayoutEffect","setInterval","clearInterval","useInterval","scrollingTop","findScrollable","scrollBy","documentElement","HTMLElement","parentNode","getItemStyles","initialOffset","WebkitTransform","ContentDragPreview","previewComponentsMap","getPrimaryHeightGR","emptyPosition","differenceFromInitialOffset","getDragLayerPosition","hasReachedLimit","setReachedLimit","dragLayerOffset","currentUnlimitedHeightGR","scrollingCorrectionY","totalDelta","hasNowReachedLimit","heightGR","hasHeightReachedLimit","initialSourceClientOffsetY","differenceFromInitialOffsetY","curPrimaryHeightGR","newSizeLimited","getLimitedSize","getLimitedYCoord","sizeAndCoords","getWidthResizerStyle","DragLayerComponent","dragLayerRef","dragLayerProperties","useDragLayer","getClientOffset","currentOffset","getInitialSourceClientOffset","isResizing","getDimensions","currentPosition","setCurrentPosition","initialPosition","updatePosition","useScrollCorrection","layerStyles","pointerEvents","zIndex","previewProps","DeleteDropZone","WrapCreatePanelItemWithDrag","onDragEnd","onDragStart","useWrapCreatePanelItemWithDrag","WrapInsightListItemWithDrag","Toolbar","DashboardInner","headerRef","bottomRef","DefaultSidebar","DashboardLoading","DefaultEmptyLayoutDropZoneBody","DashboardRenderer","_q","_r","_s","hasThemeProvider","dashboardOrRef","dateFilterProvider","widgetProvider","insightBodyProvider","insightMenuButtonProvider","insightMenuProvider","insightMenuTitleProvider","insightWidgetComponentSet","kpiWidgetComponentSet","attributeFilterComponentSet","InsightComponentSetProvider","userSpecified","defaultComponentSet","useDashboard","dashboardRender","DndProvider","disableThemeLoading","ThemeProvider","modifier","themeModifier","removeGlobalStylesOnUnmout","Dashboard","workspaceStatus","clientWsIdentifiers","HiddenDashboardAttributeFilter","HiddenButtonBar","HiddenMenuButton","HiddenTitle","DefaultDashboardToolbar","DefaultDashboardToolbarGroup","DashboardToolbarButtonBubbleWrapper","DefaultDashboardToolbarButton","useCustomWidgetExecutionDataView","filterQueryTask","dataViewTask","rejectError","useCustomWidgetInsightDataView","effectiveInsightTask","forInsight","useInsightWidgetDataView","widgetFiltersPromise","DashboardPluginV1","_pluginVersion","minEngineVersion","maxEngineVersion","DefaultDashboardInsightComponentProvider","DefaultInsightBodyComponentProvider","DefaultInsightCustomizerState","logger","defaultCoreProvider","defaultInsightBodyProvider","tagProviderIndexes","coreProvider","providerStack","coreProviderChain","insightRendererProvider","insightBodyProviderChain","rootProvider","addTagProvider","providerIdx","addCustomProvider","addInsightBodyProvider","getRootProvider","getInsightBodyComponentProvider","switchRootProvider","SealedInsightCustomizerState","_tag","DefaultInsightCustomizer","mutationContext","withTag","withCustomProvider","withCustomDecorator","providerFactory","rootSnapshot","decoratorProvider","getInsightProvider","sealCustomizer","withCustomInsightBodyProvider","pluginDebugStr","plugin","debugName","version","addPluginInfoToMessage","DashboardCustomizationLogger","setCurrentPlugin","currentPlugin","optionalParams","DefaultKpiRendererProvider","DefaultKpiCustomizerState","defaultProvider","SealedKpiCustomizerState","_provider","DefaultKpiCustomizer","getKpiProvider","WidgetCustomizerState","customWidgetMap","addDefinition","getCustomWidgetMap","SealedCustomizerState","_definition","DefaultWidgetCustomizer","addCustomWidget","DefaultComponent","getWidgetComponentProvider","FluidLayoutCustomizer","addItemOps","addSectionOps","itemsWithoutWidget","applyTransformations","builder","layouts","actualSectionIdx","DefaultLayoutCustomizer","sealed","fluidLayoutTransformations","customizeFluidLayout","customizationFn","getExistingDashboardTransformFn","snapshot","newLayout","fn","customizer","FilterBarCustomizerState","renderingMode","getRenderingMode","setRenderingMode","SealedFilterBarCustomizerState","_renderingMode","DefaultFilterBarCustomizer","getCustomizerResult","DefaultAttributeFilterRendererProvider","DefaultAttributeFiltersCustomizerState","SealedAttributeFiltersCustomizerState","DefaultAttributeFiltersCustomizer","getAttributeFilterProvider","DefaultDateFilterRendererProvider","DefaultDateFiltersCustomizerState","SealedDateFiltersCustomizerState","DefaultDateFiltersCustomizer","getDateFilterProvider","DefaultFiltersCustomizer","attributeFiltersCustomizer","dateFiltersCustomizer","DashboardCustomizationBuilder","mutations","insightCustomizer","kpiCustomizer","widgetCustomizer","layoutCustomizer","filterBarCustomizer","filtersCustomizer","widgetOverlays","sealCustomizers","setWidgetOverlays","kpiWidgets","onBeforePluginRegister","onAfterPluginRegister","onPluginRegisterError","filterBarCustomizerResult","getWidgetsOverlayFn","itemCallback","mergeOverlays","sameHandlerPredicateFactory","other","DefaultDashboardEventHandling","handlers","initialHandlersSent","pendingRegistration","pendingUnregistration","stateChangesChain","evalCache","rootStateChangesCallback","register","unregister","getOrCreateEvalFn","evalFn","newEvalFn","createEvalFn","addEventHandler","addCustomEventHandler","removeEventHandler","removeCustomEventHandler","doRegister","pendingIdx","doUnregister","actuallyRegistered","subscribeToStateChanges","unsubscribeFromStateChanges","getDashboardEventing","LIB_VERSION","newDashboardEngine","initializePlugins","customizationBuilder","eventRegistration","extensionProps","eventingProps","getDashboardComponent","withIgnoreDashboardFilters","withDrills","withTitle","withDescription","withConfiguration","withProperties"],"sourceRoot":""}