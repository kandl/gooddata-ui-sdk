// (C) 2021-2023 GoodData Corporation
import React from "react";
import { IntlWrapper } from "@gooddata/sdk-ui";
import { AttributeFilterComponentsProvider } from "./Context/AttributeFilterComponentsContext.js";
import { AttributeFilterContextProvider } from "./Context/AttributeFilterContext.js";
import { getAttributeFilterDefaultComponents } from "./AttributeFilterDefaultComponents.js";
/**
 * @internal
 */
export const AttributeFilterProviders = (props) => {
    const { resetOnParentFilterChange = true, children, locale, backend, workspace, title, filter, connectToPlaceholder, parentFilters, parentFilterOverAttribute, hiddenElements, staticElements, fullscreenOnMobile = false, selectionMode = "multi", selectFirst = false, onApply, onError, ErrorComponent, LoadingComponent, DropdownButtonComponent, DropdownBodyComponent, DropdownActionsComponent, ElementsSearchBarComponent, ElementsSelectComponent, ElementsSelectItemComponent, ElementsSelectErrorComponent, ElementsSelectLoadingComponent, ElementsSelectActionsComponent, EmptyResultComponent, StatusBarComponent, } = props;
    const DefaultComponents = getAttributeFilterDefaultComponents(props);
    return (React.createElement(IntlWrapper, { locale: locale },
        React.createElement(AttributeFilterComponentsProvider, { ErrorComponent: ErrorComponent !== null && ErrorComponent !== void 0 ? ErrorComponent : DefaultComponents.ErrorComponent, LoadingComponent: LoadingComponent !== null && LoadingComponent !== void 0 ? LoadingComponent : DefaultComponents.LoadingComponent, DropdownButtonComponent: DropdownButtonComponent !== null && DropdownButtonComponent !== void 0 ? DropdownButtonComponent : DefaultComponents.DropdownButtonComponent, DropdownBodyComponent: DropdownBodyComponent !== null && DropdownBodyComponent !== void 0 ? DropdownBodyComponent : DefaultComponents.DropdownBodyComponent, DropdownActionsComponent: DropdownActionsComponent !== null && DropdownActionsComponent !== void 0 ? DropdownActionsComponent : DefaultComponents.DropdownActionsComponent, ElementsSearchBarComponent: ElementsSearchBarComponent !== null && ElementsSearchBarComponent !== void 0 ? ElementsSearchBarComponent : DefaultComponents.ElementsSearchBarComponent, ElementsSelectComponent: ElementsSelectComponent !== null && ElementsSelectComponent !== void 0 ? ElementsSelectComponent : DefaultComponents.ElementsSelectComponent, ElementsSelectItemComponent: ElementsSelectItemComponent !== null && ElementsSelectItemComponent !== void 0 ? ElementsSelectItemComponent : DefaultComponents.ElementsSelectItemComponent, ElementsSelectErrorComponent: ElementsSelectErrorComponent !== null && ElementsSelectErrorComponent !== void 0 ? ElementsSelectErrorComponent : DefaultComponents.ElementsSelectErrorComponent, ElementsSelectLoadingComponent: ElementsSelectLoadingComponent !== null && ElementsSelectLoadingComponent !== void 0 ? ElementsSelectLoadingComponent : DefaultComponents.ElementsSelectLoadingComponent, ElementsSelectActionsComponent: ElementsSelectActionsComponent !== null && ElementsSelectActionsComponent !== void 0 ? ElementsSelectActionsComponent : DefaultComponents.ElementsSelectActionsComponent, EmptyResultComponent: EmptyResultComponent !== null && EmptyResultComponent !== void 0 ? EmptyResultComponent : DefaultComponents.EmptyResultComponent, StatusBarComponent: StatusBarComponent !== null && StatusBarComponent !== void 0 ? StatusBarComponent : DefaultComponents.StatusBarComponent },
            React.createElement(AttributeFilterContextProvider, { backend: backend, workspace: workspace, title: title, filter: filter, connectToPlaceholder: connectToPlaceholder, resetOnParentFilterChange: resetOnParentFilterChange, parentFilters: parentFilters, parentFilterOverAttribute: parentFilterOverAttribute, onApply: onApply, onError: onError, hiddenElements: hiddenElements, staticElements: staticElements, fullscreenOnMobile: fullscreenOnMobile, selectionMode: selectionMode, selectFirst: selectFirst }, children))));
};
//# sourceMappingURL=AttributeFilterProviders.js.map